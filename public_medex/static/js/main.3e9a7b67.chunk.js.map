{"version":3,"sources":["Gynae/DateFormatter.js","GP/DateFormatter.js","STD/DateFormatter.js","Derma/DateFormatter.js","PCR/PriceCalculator.js","Admin/DateFormatter.js","Blood/PriceCalculator.js","Gynae/PriceCalculator.js","GP/PriceCalculator.js","STD/PriceCalculator.js","Derma/PriceCalculator.js","Blood/DateFormatter.js","Admin/PriceCalculator.js","PCR/DateFormatter.js","theme.js","GlobalStyles.js","serviceWorker.js","GlobalState.js","CopyRight.js","GlobalPath.js","services/api.js","services/UserService.js","PCR/services/api.js","PCR/services/BookService.js","PCR/services/PDFService.js","PCR/PersonsBox.js","PCR/FindByRef.js","PCR/ResendEmailsDialog.js","PCR/Corporates.js","PCR/PayDialog.js","PCR/TimeStampDialog.js","Admin/calendar-admin/colors.js","services/InvoiceService.js","InvoiceDialog.js","PCR/BookingDialog.js","PCR/BookingTable.js","PCR/Title.js","PCR/Chart.js","PCR/CurrentVisits.js","PCR/BookingView.js","PCR/ResultsTimeReport.js","PCR/DashboardPreview.js","PCR/UnmatchedRecords.js","PCR/calendar-admin/MonthViewCell.js","PCR/calendar-admin/calendar-util.js","PCR/calendar-admin/MonthView.js","PCR/calendar-admin/WeekViewCell.js","PCR/calendar-admin/WeekView.js","PCR/calendar-admin/DayViewCell.js","PCR/calendar-admin/DayView.js","PCR/calendar-admin/CalendarView.js","Gynae/services/api.js","Gynae/services/BookService.js","Gynae/services/PDFService.js","Gynae/Corporates.js","Gynae/PayDialog.js","Gynae/BookingDialog.js","Gynae/BookingTable.js","Gynae/Title.js","Gynae/Chart.js","Gynae/CurrentVisits.js","Gynae/BookingView.js","Gynae/DashboardPreview.js","Gynae/PersonsBox.js","Gynae/FindByRef.js","Gynae/calendar-admin/MonthViewCell.js","Gynae/calendar-admin/calendar-util.js","Gynae/calendar-admin/MonthView.js","Gynae/calendar-admin/WeekViewCell.js","Gynae/calendar-admin/WeekView.js","Gynae/NewBookingDialog.js","Gynae/calendar-admin/DayViewCell.js","Gynae/calendar-admin/DayView.js","Gynae/calendar-admin/CalendarView.js","GP/services/api.js","GP/services/BookService.js","GP/services/PDFService.js","GP/Corporates.js","GP/PayDialog.js","GP/BookingDialog.js","GP/BookingTable.js","GP/Title.js","GP/Chart.js","GP/CurrentVisits.js","GP/BookingView.js","GP/DashboardPreview.js","GP/PersonsBox.js","GP/FindByRef.js","GP/calendar-admin/MonthViewCell.js","GP/calendar-admin/calendar-util.js","GP/calendar-admin/MonthView.js","GP/calendar-admin/WeekViewCell.js","GP/calendar-admin/WeekView.js","GP/NewBookingDialog.js","GP/calendar-admin/DayViewCell.js","GP/calendar-admin/DayView.js","GP/calendar-admin/CalendarView.js","STD/services/api.js","STD/services/BookService.js","STD/services/PDFService.js","STD/Corporates.js","STD/PayDialog.js","STD/BookingDialog.js","STD/BookingTable.js","STD/Title.js","STD/Chart.js","STD/CurrentVisits.js","STD/BookingView.js","STD/DashboardPreview.js","STD/PersonsBox.js","STD/FindByRef.js","STD/calendar-admin/MonthViewCell.js","STD/calendar-admin/calendar-util.js","STD/calendar-admin/MonthView.js","STD/calendar-admin/WeekViewCell.js","STD/calendar-admin/WeekView.js","STD/NewBookingDialog.js","STD/calendar-admin/DayViewCell.js","STD/calendar-admin/DayView.js","STD/calendar-admin/CalendarView.js","Blood/services/api.js","Blood/services/BookService.js","Blood/services/PDFService.js","Blood/Corporates.js","Blood/PayDialog.js","Blood/BookingDialog.js","Blood/BookingTable.js","Blood/Title.js","Blood/Chart.js","Blood/CurrentVisits.js","Blood/BookingView.js","Blood/DashboardPreview.js","Blood/PersonsBox.js","Blood/FindByRef.js","Blood/calendar-admin/MonthViewCell.js","Blood/calendar-admin/calendar-util.js","Blood/calendar-admin/MonthView.js","Blood/calendar-admin/WeekViewCell.js","Blood/calendar-admin/WeekView.js","Blood/DateField.js","Blood/NewBookingDialog.js","Blood/calendar-admin/DayViewCell.js","Blood/calendar-admin/DayView.js","Blood/calendar-admin/CalendarView.js","Blood/UnmatchedRecords.js","Blood/BloodReportDialog.js","Blood/MatchedRecords.js","Blood/ArchivedRecords.js","Blood/SentRecords.js","Derma/services/api.js","Derma/services/BookService.js","Derma/services/PDFService.js","Derma/Corporates.js","Derma/PayDialog.js","Derma/BookingDialog.js","Derma/BookingTable.js","Derma/Title.js","Derma/Chart.js","Derma/CurrentVisits.js","Derma/BookingView.js","Derma/DashboardPreview.js","Derma/PersonsBox.js","Derma/FindByRef.js","Derma/calendar-admin/MonthViewCell.js","Derma/calendar-admin/calendar-util.js","Derma/calendar-admin/MonthView.js","Derma/calendar-admin/WeekViewCell.js","Derma/calendar-admin/WeekView.js","Derma/NewBookingDialog.js","Derma/calendar-admin/DayViewCell.js","Derma/calendar-admin/DayView.js","Derma/calendar-admin/CalendarView.js","Title.js","TodayBookingView.js","TomorrowBookingView.js","TotalBookingView.js","LateBookingView.js","UnmatchedBookingView.js","ShouldRefundBookingView.js","Role.js","NewBloodResultsBookingView.js","DashboardPreview.js","Admin/services/api.js","Admin/services/BookService.js","Admin/FindByRef.js","Admin/BookingDialog.js","Admin/Corporates.js","Admin/BookingTable.js","Admin/calendar-admin/MonthViewCell.js","Admin/calendar-admin/calendar-util.js","Admin/calendar-admin/MonthView.js","Admin/calendar-admin/WeekViewCell.js","Admin/calendar-admin/WeekView.js","Admin/NewBookingDialog.js","Admin/calendar-admin/DayViewCell.js","Admin/calendar-admin/DayView.js","Admin/calendar-admin/CalendarView.js","Admin/SearchBookingTable.js","MenuList.js","SignIn.js","Menu.js","Dashboard.js","TokenVerifier.js","Navigator.js","App.js","index.js"],"names":["module","exports","FormatDateFromString","str","substr","FormatDateFromStringShortYear","RevertFormatDateFromString","FormatDateFromStringWithSlash","calculatePrice","person","price","tr","certificate","antiBodyTest","calculateTotalPrice","persons","totalPrice","i","length","darkBlack","borderColor","theme","createMuiTheme","palette","primary","main","light","secondary","contrastText","common","black","warning","dark","tonalOffset","background","default","spacing","breakpoints","values","xl","lg","md","sm","xs","border","borderWidth","overrides","MuiExpansionPanel","root","position","MuiTableCell","paddingLeft","paddingRight","borderBottom","MuiDivider","backgroundColor","height","MuiPrivateNotchedOutline","MuiListItem","divider","MuiDialog","paper","width","maxWidth","marginLeft","marginRight","MuiTooltip","tooltip","fontSize","MuiExpansionPanelDetails","enGB","responsiveFontSizes","withStyles","outline","color","white","paddingTop","paddingBottom","down","up","display","flexWrap","marginTop","marginBottom","withTheme","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","GlobalState","React","createContext","Copyright","Typography","variant","align","Link","href","Date","getFullYear","authToken","backendAPI","getGlobalPath","path","axios","create","baseURL","headers","UserService","setToken","token","signIn","payload","API","post","checkToken","BookService","payBooking","bookingId","paymentMethod","corporate","unPayBooking","getTestsTimeReport","axiosRetry","retries","retryDelay","retryCount","get","getBookingsStatsByDateStr","dateStr","getBookingsCountByDateStr","getAllBookingsCountAll","getBookingsCountByDateStrandTime","time","source","cancelToken","getBookingsByDateStrandTime","getAllBookingsCountByDateStr","getAllBookingsCountByDateStrandTime","getAllBookingsByDateStrandTime","changeBackToBookingMade","id","resendEmailsWithBookingId","regenerateFilesWithBookingId","resendEmails","linkId","regenerateFiles","matchRecords","findBestMatches","getLinkDetails","getLinkDetailsWithBookingId","findBookingByRefBirthDate","bookingRef","birthDate","updateBooking","updateBookingTime","deleteBooking","unDeleteBooking","getBookingsByRef","ref","getBookingById","getAllBookings","limit","getAllTRBookings","getLateBookings","getDeletedBookings","getLiveBookings","getCompletedBookings","getPositiveBookings","getTodayBookings","getOldBookings","getFutureBookings","getRecentBookings","getRecentBookingsAll","getUnmatchedRecords","getUnmatchedRecordsArchived","archiveRecord","unArchiveRecord","PDFService","downloadCovidForm1","responseType","Accept","downloadCovidForm2","downloadPdfResult","downloadPdfCert","downloadPdfLabReport","useStyles","makeStyles","box","padding","borderRadius","textAlign","boxRed","boxInfo","ul","listStyle","margin","li","icon","lineThrough","textDecoration","heading","typography","pxToRem","flexBasis","flexShrink","text","secondaryHeading","infoDetails","infoTitle","fontWeight","infoData","title","Accordion","AccordionDeleted","DownloadForm","infoDataCharges","infoDataChargesHigher","BookedLabel","borderLeft","PatientAttendedLabel","SampleTakenLabel","ReportSentLabel","ReportCertSentLabel","PositiveLabel","EditButton","RestoreButton","DeleteButton","SaveButton","CancelButton","TextBox","checkIcon","closeIcon","centeredLabel","alignItems","PersonsBox","classes","useContext","setState","useState","expanded","setExpanded","edit","editMode","setEditMode","delete","deleteMode","setDeleteMode","restore","restoreMode","setRestoreMode","saving","setSaving","deleting","setDeleting","restoring","setRestoring","validationError","setValidationError","bookingDate","setBookingDate","bookingTime","setBookingTime","gender","setGender","setTitle","forename","setForename","surname","setSurnme","email","setEmail","dob","setDOB","tel","setTel","postCode","setPostCode","address","setAddress","notes","setNotes","passport","setPassport","passport2","setPassport2","setCertificate","setAntiBodyTest","bookingDateChanged","event","target","value","bookingDateError","bookingTimeChanged","bookingTimeError","genderChanged","titleChanged","forenameChanged","surnameChanged","emailChanged","dobChanged","dobError","telChanged","postCodeChanged","addressChanged","passportChanged","passport2Changed","certificateChanged","checked","antiBodyTestChanged","handleEditModeChanged","forenameCapital","surnameCapital","toUpperCase","phone","passportNumber","passportNumber2","booking","_id","validateBooking","validateDate","charAt","test","year","parseInt","month","day","err","hour","minute","validateTime","bookingService","res","RefreshPersonInfo","handleDeleteModeChanged","del","handleRestoreModeChanged","Fragment","Grid","container","direction","justify","className","foundRecords","map","index","status","panel","item","deleted","onChange","isExpanded","AccordionSummary","expandIcon","aria-controls","Tooltip","style","AccordionDetails","hidden","Button","type","fullWidth","onClick","disabled","TextField","inputProps","FormControlLabel","formControl","control","Checkbox","name","label","startIcon","file","Blob","data","fileURL","URL","createObjectURL","open","isBoolean","param","TextMaskCustom","props","inputRef","other","inputElement","mask","showMask","flexDirection","avatar","form","Find","Clear","NoRecordsFound","FindByRef","initialFocus","focus","setFocus","autoFocus","key","onFocus","onBlur","useFocus","focusProps","useEffect","clearField","refError","findRecords","indexOf","submiting","CssBaseline","component","FormControl","pattern","helperText","size","InputProps","inputComponent","onKeyPress","onTouchTap","Alert","severity","interval","refreshButton","RefLink","cursor","archiveButton","smartMatchButton","matchButton","resendButton","resendFilesButton","cancelButton","BorderLinearProgress","colorPrimary","bar","LinearProgress","LinearProgressWithLabel","Box","mr","minWidth","Math","round","PaperComponent","handle","cancel","Paper","ResendEmailsDialog","sending","setSending","sent","setSent","sendJustToPCR","setSendJustToPCR","sendingStatus","setSendingStatus","sendingProgress","setSendingProgress","setError","prevProgress","Dialog","onClose","clearInterval","handleClose","aria-labelledby","DialogTitle","Divider","DialogContent","setInterval","link","setTimeout","corporates","backdrop","zIndex","drawer","PayDialog","setPaymentMethod","setCorporate","payClicked","a","bookingPayChanged","RadioGroup","aria-label","Radio","Select","labelId","element","MenuItem","bottom","right","Backdrop","CircularProgress","addMinutes","date","minutes","getTime","itemTitle","itemData","TimeStampDialog","linkTimeStamp","setLinkTimeStamp","filename","timeStamp","dateformat","setHours","bookingTimeNormalized","setMinutes","setSeconds","setMilliseconds","getDateFromBooking","samplingTimeStamp","DialogActions","CalendarColors","InvoiceService","createInvoice","updateInvoice","invoiceNumber","deleteinvoice","getInvoiceByBookingId","getInvoiceByInvoiceNumber","getCodeDetails","code","getAllCodes","downloadInvoice","emailInvoice","NumberFormatCustom","getInputRef","onValueChange","thousandSeparator","isNumericString","prefix","InvoiceDialog","defaultCode","setCode","setCodeError","description","setDescription","descriptionError","setDescriptionError","items","setItems","setPrice","priceError","setPriceError","allCodes","setAllCodes","invoice","fetchAllCodes","defaultCodes","result","refresh","validateItem","validateItem2","getGrandTotal","_items","total","forEach","parseFloat","saveClikced","formData","JSON","parse","fullname","dateAttended","grandTotal","Autocomplete","newValue","options","getOptionLabel","option","toLocaleString","currency","renderInput","params","startAdornment","InputAdornment","overflowY","IconButton","temp","splice","removeItem","justifyContent","multiline","rows","placeholder","ResendEmailsButton","PayButton","PayLabel","checkIconSmall","printInvoiceButton","editInvoiceButton","Transition","forwardRef","Slide","BookingDialog","copied","setCopied","openResendDialog","setOpenResendDialog","openPayDialog","setOpenPayDialog","selectedBooking","setSelectedBooking","refreshData","setRefreshData","setBooking","recordChanged","setRecordChanged","fieldChanged","setFieldChanged","openUndoPayDialog","setOpenUndoPayDialog","openTimeStampDialog","setOpenTimeStampDialog","handleCloseUndoPayDialog","isChanged","bookingDialogDataChanged","undoPaymentClicked","setInvoice","invoiceLoaded","setInvoiceLoaded","openInvoiceDialog","setOpenInvoiceDialog","emailSentInvoice","setEmailSentInvoice","fetchInvoice","OpenInvoiceDialog","TransitionComponent","keepMounted","aria-describedby","top","left","role","clipboard","writeText","transition","deleteButtonDisabled","selfIsolate","postCodeSI","addressSI","NHSNumber","ethnicity","arrivalDate","flightNumber","lastDepartedDate","travellingFrom","_email","paid","paidBy","_booking","push","getDefaultCodes","DialogContentText","HideNowRows","justifyItems","ExportToExcelButton","ExportToExcelButtonInline","table","borderCollapse","th","verticalAlign","fontcolor","td","topSelect","getTableTitle","BookingTable","topCount","setTopCount","openDialogExcel","setOpenDialogExcel","fromDate","setFromDate","untilDate","setUntilDate","fromDateStr","setFromDateStr","untilDateStr","seUntilDateStr","justCorporate","setJustCorporate","chkDate","setChkDate","chkForename","setChkForename","chkSurname","setChkSurname","chkDOB","setChkDOB","chkEmail","setChkEmail","chkTel","setChkTel","chkCertificate","setChkCertidicate","chkAntiBodyTest","setChkAntiBodyTest","chkextRef","setChkExtRef","chkPrice","setChkPrice","columns","field","headerName","renderCell","getValue","openDetailsDialog","valueFormatter","formatTimeStamp","valueGetter","bookings","cachedBookings","isFetching","setData","setSelectedRow","seeDetailsDialogOpen","setSeeDetailsDialogOpen","filter","setFilter","useRef","todayStr","timeStampStr","loadData","api","trim","filteredData","toLowerCase","find","page","setPage","placement","userId","username","faFileExcel","autoComplete","InputLabel","autoPageSize","onPageChange","onSelectionChange","newSelection","minHeight","maxHeight","row","Switch","utils","DateFnsUtils","autoOk","disableToolbar","format","KeyboardButtonProps","sheet","buttonText","extRef","PriceCalculator","Title","gutterBottom","children","createData","amount","emptyData","undefined","getCount","count","Chart","useTheme","loading","setLoading","fetchData","ResponsiveContainer","LineChart","XAxis","dataKey","stroke","YAxis","Label","angle","textAnchor","fill","Line","dot","depositContext","flex","bookingBox","boxShadow","getCurrentTimeSlot","now","min","getMinutes","getHours","pm","minStr","hourStr","pmStr","timeStr","getDay","getCurrentTimeSlotLabel","endTimeStr","CurrentVisits","current","setCurrent","setBookings","openDialog","setOpenDialog","currentTimeSlot","bookingCliked","_bookings","substring","getBookingsBox","seeMore","BookingView","setRefresh","Table","TableHead","TableRow","TableCell","TableBody","preventDefault","currentMenuIndex","getMenuIndex","COLORS","RADIAN","PI","renderCustomizedLabel","cx","cy","midAngle","innerRadius","outerRadius","radius","x","cos","y","sin","dominantBaseline","ReportLabels","AverageLabel","less12Label","less24Label","less36Label","ResultsTimeReport","report","setReport","setOpen","lessThan12","lessThan24","lessThan36","PieChart","Pie","labelLine","entry","Cell","avg","lessThan12Percent","lessThan24Percent","lessThan36Percent","lessThan48","lessThan48Percent","overflow","fixedHeight","DashboardPreview","fixedHeightPaper","clsx","downloadPDFButton","UnmatchedRecords","selectedTab","disableId","smartMatchClicked","downloadLabReport","setDisableId","setSeletedTab","smartLinkId","setSmartLinkId","smartLinkDetails","setSmartLinkDetails","likelyBookings","setLikelyBookings","seeDetailsBooking","setSeeDetailsBooking","matching","setMatching","matched","setMatched","matchedBookings","lastPromise","currentPromise","e","ToggleButtonGroup","exclusive","ToggleButton","timeout","testDate","handleCheckChanged","likelihood","seeDetailsClicked","Container","ContainerPast","DayLabel","DayLabelToday","lineHight","DayLabelDisabled","BookingCountLabel","BookingCountLabelBusy","LoadingProgress","BookingCountGauge","MonthViewCell","cellIndex","daysInMonth","dayClicked","setDateStr","cellDate","setCellDate","bookingsCount","setBookingsCount","disableDay","setDisableDay","setIsPast","getMonth","AdminCalendarCache","record","method","query","fecthData","_bookingsCount","_cellIndex","_month","_daysInMonth","getDate","_day","isToday","getDayLabel","disableShrink","MAX_BOOKING_COUNT","percent","getBookingsCountGauge","CalendarUtil","getMonthRange","calendar","Calendar","SUNDAY","itermonthdates","dayLables","days","MonthView","WeekViewCell","isPast","CancelToken","WeekView","dates","replace","overflowX","bookingBoxSampleTaken","bookingBoxPositive","bookingBoxReportSent","DayViewCell","filteredBookings","setFilteredBookings","dayViewCalFilter","search","getBookingClass","borderTop","titleLabel","titleLabelToday","DayView","monthNames","fontColor","CalendarView","setMonth","setYear","setDay","firstDayofWeek","setFirstDayofWeek","weekDates","setWeekDates","mode","setMode","removeFilter","today","dayofWeek","firstdayofweek","_mode","newDay","newMonth","newFirstDayofWeek","endOfWeek","endofWeekStr","getCalendarTitleFromMode","endAdornment","onMouseDown","changeDepositBooking","deposit","addNewBooking","sendRegFormEmail","getShouldRefundsCount","manualRefundBooking","refundBooking","changeToPatientAttended","downloadGynaeRegForm","required","PriceLabelPaid","PriceLabelNotPaid","emailSent","setEmailSent","openRefundDialog","setOpenRefundDialog","setFullname","service","setService","handleCloseRefundDialog","refundPaymentClicked","updateShouldRefundsCount","shouldRefunsCount","manualRefund","depositChanged","OTCCharges","paymentInfo","textTransform","refund","notifyIcon","showCreateExcel","isThursday","isFriday","slotMinStr","slotHourStr","fullnameChanged","serviceChanged","notesChanged","CalendarIcon","DateTimeLabel","Packages","packageName","NewBookingDialog","fullnameError","setFullnameError","setPhone","setDeposit","saveClicked","otem","bookingBoxNew","openDialogAddNew","setOpenDialogAddNew","addNewBookingClicked","downloadGPRegForm","downloadSTDRegForm","estimatedPrice","IndivisualTests","comboSTDChecks","serviceError","setServiceError","indivisualArray","setIndivisualArray","comboArray","setComboArray","findIndex","IndivisualTestsChanged","comboSTDChecksChanged","getNewBloodResultsCount","getSentBloodReports","getArchivedBloodReports","getNewMatchedBloodReports","getArchivedMatchedBloodReports","getNewUnmatchedBloodReports","getArchivedUnmatchedBloodReports","sendBloodReportEmail","bloodreportId","updateBloodReport","archiveBloodReport","unArchiveBloodReport","downloadBloodRegForm","doctorConsultation","indivisualTests","tests","testsString","getIndivisualTestsString","DateField","loadingBox","dateChanged","dayArray","setDayArray","monthArray","setMonthArray","yearArray","setYearArray","updateDate","dd","mm","yyyy","dayStr","monthStr","d","m","months","years","listOptions","noOptionsText","setNoOptionsText","setIndivisualTests","setBirthDate","birthDateError","setBirthDateError","firstLetter","scrollTo","stringify","multiple","filterOptions","inputValue","matchSorter","keys","sort","b","localeCompare","renderTags","getTagProps","Chip","whiteSpace","filterSelectedOptions","BloodReportDialog","changesSaved","setChangesSaved","loadFileUrl","setFileURL","reader","FileReader","readAsDataURL","onloadend","base64data","clinic","getColorFromClinic","src","EmailValidator","bloodReportRefresh","clinicTitle","PCRLabel","GynaeLabel","GPLabel","STDLabel","BloodLabel","MatchedRecords","getClassforClinic","ArchivedRecords","SentRecords","downloadDermaRegForm","package","TodayBookingView","PCRBookService","res1","GynaeBookService","res2","GPBookService","res3","STDBookService","res4","BloodBookService","res5","DermaBookService","res6","pcr","gynae","gp","std","blood","derma","TomorrowBookingView","tomorrow","tomorrowStr","TotalBookingView","countLabel","countLabelRed","Icon","IconRed","TitleRed","LateBookingView","UnmatchedBookingView","ShouldRefundBookingView","getRole","sessionStorage","getItem","setRole","setItem","NewBloodResultsBookingView","fixedHeightSmall","fixedHeightPaperSmall","history","useHistory","getMenuId","searchAllBookings","boxTitle","getPersonBox","DermaLabel","PCRGauge","GynaeGauge","GPGauge","STDGauge","BloodGauge","DermaGauge","DayLabelContainer","getPCRClinicBar","getGynaeClinicBar","getGPClinicBar","getSTDClinicBar","getBloodClinicBar","getDermaClinicBar","selectedClinics","getClinicBar","BoxDisabled","BoxGynae","BoxGP","BoxSTD","BoxBlood","BoxDerma","timeDisabled","clinicClicked","BookingBorderPCR","BookingBorderGynae","BookingBorderGP","BookingBorderSTD","BookingBorderBlood","BookingBorderDerma","openDialogGP","setOpenDialogGP","openDialogGynae","setOpenDialogGynae","openDialogSTD","setOpenDialogSTD","openDialogBlood","setOpenDialogBlood","openDialogDerma","setOpenDialogDerma","getBookingBorderClass","Clinics","DefaultLabel","SearchBookingTable","seeDetailsDialogOpenBloodReport","setSeeDetailsDialogOpenBloodReport","handleCloseSeeDetaisDialog","filterError","setFilterError","doSearch","MenuList_Admin","MenuList_Gynae","MenuList_GP","MenuList_STD","MenuList_Blood","MenuList_PCR","MenuList_Derma","MenuList_PCRLAB","getMenuContent","getMenuRole","MenuList","image","backgroundImage","backgroundRepeat","grey","backgroundSize","backgroundPosition","submit","alert","pageBg","appbarCenter","logoImage","appbarTitle","adminPanelLabel","SignIn","useMediaQuery","password","setPassword","setUsername","saveChecked","setSaveChecked","showPassword","setShowPassword","setSubmiting","localStorage","signedIn","roles","elevation","alt","Avatar","lineHeight","on","textField","htmlFor","OutlinedInput","tabindex","Visibility","VisibilityOff","labelWidth","mt","iconSelected","menuText","Badge","MyMenu","selectedIndex","setSelectedIndex","GyaneBookService","List","StyledMenu","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","StyledMenuApps","toolbar","toolbarIcon","mixins","appBar","transitions","easing","sharp","duration","leavingScreen","appBarShift","enteringScreen","menuButton","menuButtonHidden","flexGrow","drawerPaper","opacity","drawerPaperClose","appBarSpacer","content","userAvatar","userAvatarSelected","userAvatarBig","appBarText","appBarAppsIcon","appBarAppsIconSelected","usernameLabel","lastLoginLabel","appsLogo","appsBox","appsBoxSelected","appsAdminLabel","appsPCRLabel","appsGynaeLabel","appsGPLabel","appsSTDLabel","appsBloodLabel","appsDermaLabel","appsInToolbar","Dashboard","isMobile","setCurrentMenuIndex","anchorUserAvatar","setAnchorUserAvatar","anchorApps","setAnchorApps","handleAppsClose","useLocation","globalPath","split","getMenuIdFromGlobalPath","pathname","appsClicked","getAppsLogo","getAppsLabel","AppBar","Toolbar","edge","currentTarget","anchorEl","lastLoginTimeStamp","Drawer","getUserIdFromToken","signOutButton","Navigator","loaded","setLoaded","signedUp","forgotPassword","startsWith","process","origin","addEventListener","fetch","response","contentType","ready","unregister","reload","checkValidServiceWorker","App","Provider","GlobalStyles","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3e9a7b67.chunk.js","sourcesContent":["\n\n\nconst FormatDateFromString = (str) =>\n{\n    return `${str.substr(8,2)}-${str.substr(5,2)}-${str.substr(0,4)}`;\n}\n\nconst FormatDateFromStringWithSlash = (str) =>\n{\n    return `${str.substr(8,2)}/${str.substr(5,2)}/${str.substr(0,4)}`;\n}\n\nconst RevertFormatDateFromString = (str) =>\n{\n    return `${str.substr(6,4)}-${str.substr(3,2)}-${str.substr(0,2)}`;\n}\n\n\nconst FormatDateFromStringShortYear = (str) =>\n{\n    return `${str.substr(8,2)}-${str.substr(5,2)}-${str.substr(2,2)}`;\n}\n\n\n\nmodule.exports = {\n    FormatDateFromString : FormatDateFromString,\n    FormatDateFromStringShortYear : FormatDateFromStringShortYear,\n    RevertFormatDateFromString: RevertFormatDateFromString,\n    FormatDateFromStringWithSlash: FormatDateFromStringWithSlash\n}","\n\n\nconst FormatDateFromString = (str) =>\n{\n    return `${str.substr(8,2)}-${str.substr(5,2)}-${str.substr(0,4)}`;\n}\n\nconst FormatDateFromStringWithSlash = (str) =>\n{\n    return `${str.substr(8,2)}/${str.substr(5,2)}/${str.substr(0,4)}`;\n}\n\nconst RevertFormatDateFromString = (str) =>\n{\n    return `${str.substr(6,4)}-${str.substr(3,2)}-${str.substr(0,2)}`;\n}\n\n\nconst FormatDateFromStringShortYear = (str) =>\n{\n    return `${str.substr(8,2)}-${str.substr(5,2)}-${str.substr(2,2)}`;\n}\n\n\n\nmodule.exports = {\n    FormatDateFromString : FormatDateFromString,\n    FormatDateFromStringShortYear : FormatDateFromStringShortYear,\n    RevertFormatDateFromString: RevertFormatDateFromString,\n    FormatDateFromStringWithSlash: FormatDateFromStringWithSlash\n}","\n\n\nconst FormatDateFromString = (str) =>\n{\n    return `${str.substr(8,2)}-${str.substr(5,2)}-${str.substr(0,4)}`;\n}\n\nconst FormatDateFromStringWithSlash = (str) =>\n{\n    return `${str.substr(8,2)}/${str.substr(5,2)}/${str.substr(0,4)}`;\n}\n\nconst RevertFormatDateFromString = (str) =>\n{\n    return `${str.substr(6,4)}-${str.substr(3,2)}-${str.substr(0,2)}`;\n}\n\n\nconst FormatDateFromStringShortYear = (str) =>\n{\n    return `${str.substr(8,2)}-${str.substr(5,2)}-${str.substr(2,2)}`;\n}\n\n\n\nmodule.exports = {\n    FormatDateFromString : FormatDateFromString,\n    FormatDateFromStringShortYear : FormatDateFromStringShortYear,\n    RevertFormatDateFromString: RevertFormatDateFromString,\n    FormatDateFromStringWithSlash: FormatDateFromStringWithSlash\n}","\n\n\nconst FormatDateFromString = (str) =>\n{\n    return `${str.substr(8,2)}-${str.substr(5,2)}-${str.substr(0,4)}`;\n}\n\nconst FormatDateFromStringWithSlash = (str) =>\n{\n    return `${str.substr(8,2)}/${str.substr(5,2)}/${str.substr(0,4)}`;\n}\n\nconst RevertFormatDateFromString = (str) =>\n{\n    return `${str.substr(6,4)}-${str.substr(3,2)}-${str.substr(0,2)}`;\n}\n\n\nconst FormatDateFromStringShortYear = (str) =>\n{\n    return `${str.substr(8,2)}-${str.substr(5,2)}-${str.substr(2,2)}`;\n}\n\n\n\nmodule.exports = {\n    FormatDateFromString : FormatDateFromString,\n    FormatDateFromStringShortYear : FormatDateFromStringShortYear,\n    RevertFormatDateFromString: RevertFormatDateFromString,\n    FormatDateFromStringWithSlash: FormatDateFromStringWithSlash\n}","\nconst calculatePrice = (person) =>\n{\n\n    var price = 199;\n\n    if (person.tr)\n    {\n        price = 250;\n    }\n    \n    if (person.certificate)\n    {\n        price += 50;\n    }\n\n    if (person.antiBodyTest)\n    {\n        price += (99 + 50);\n    }\n\n    return price;\n\n}\n\nconst calculateTotalPrice = (persons) =>\n{\n    var totalPrice = 0;\n    for (var i = 0 ; i < persons.length ; i++)\n    {\n        totalPrice += calculatePrice(persons[i]);\n    }\n\n    return totalPrice;\n}\n\nmodule.exports = {\n    calculatePrice : calculatePrice,\n    calculateTotalPrice : calculateTotalPrice\n}","\n\n\nconst FormatDateFromString = (str) =>\n{\n    if (!str)\n        return \"\"\n    return `${str.substr(8,2)}-${str.substr(5,2)}-${str.substr(0,4)}`;\n}\n\nconst FormatDateFromStringWithSlash = (str) =>\n{\n    if (!str)\n        return \"\"\n    return `${str.substr(8,2)}/${str.substr(5,2)}/${str.substr(0,4)}`;\n}\n\nconst RevertFormatDateFromString = (str) =>\n{\n    if (!str)\n      return \"\"\n    return `${str.substr(6,4)}-${str.substr(3,2)}-${str.substr(0,2)}`;\n}\n\n\nconst FormatDateFromStringShortYear = (str) =>\n{\n    if (!str)\n     return \"\"\n    return `${str.substr(8,2)}-${str.substr(5,2)}-${str.substr(2,2)}`;\n}\n\n\n\nmodule.exports = {\n    FormatDateFromString : FormatDateFromString,\n    FormatDateFromStringShortYear : FormatDateFromStringShortYear,\n    RevertFormatDateFromString: RevertFormatDateFromString,\n    FormatDateFromStringWithSlash: FormatDateFromStringWithSlash\n}","\nconst calculatePrice = (person) =>\n{\n\n    var price = 199;\n\n    if (person.tr)\n    {\n        price = 250;\n    }\n    \n    if (person.certificate)\n    {\n        price += 50;\n    }\n\n    if (person.antiBodyTest)\n    {\n        price += (99 + 50);\n    }\n\n    return price;\n\n}\n\nconst calculateTotalPrice = (persons) =>\n{\n    var totalPrice = 0;\n    for (var i = 0 ; i < persons.length ; i++)\n    {\n        totalPrice += calculatePrice(persons[i]);\n    }\n\n    return totalPrice;\n}\n\nmodule.exports = {\n    calculatePrice : calculatePrice,\n    calculateTotalPrice : calculateTotalPrice\n}","\nconst calculatePrice = (person) =>\n{\n\n    var price = 199;\n\n    if (person.tr)\n    {\n        price = 250;\n    }\n    \n    if (person.certificate)\n    {\n        price += 50;\n    }\n\n    if (person.antiBodyTest)\n    {\n        price += (99 + 50);\n    }\n\n    return price;\n\n}\n\nconst calculateTotalPrice = (persons) =>\n{\n    var totalPrice = 0;\n    for (var i = 0 ; i < persons.length ; i++)\n    {\n        totalPrice += calculatePrice(persons[i]);\n    }\n\n    return totalPrice;\n}\n\nmodule.exports = {\n    calculatePrice : calculatePrice,\n    calculateTotalPrice : calculateTotalPrice\n}","\nconst calculatePrice = (person) =>\n{\n\n    var price = 199;\n\n    if (person.tr)\n    {\n        price = 250;\n    }\n    \n    if (person.certificate)\n    {\n        price += 50;\n    }\n\n    if (person.antiBodyTest)\n    {\n        price += (99 + 50);\n    }\n\n    return price;\n\n}\n\nconst calculateTotalPrice = (persons) =>\n{\n    var totalPrice = 0;\n    for (var i = 0 ; i < persons.length ; i++)\n    {\n        totalPrice += calculatePrice(persons[i]);\n    }\n\n    return totalPrice;\n}\n\nmodule.exports = {\n    calculatePrice : calculatePrice,\n    calculateTotalPrice : calculateTotalPrice\n}","\nconst calculatePrice = (person) =>\n{\n\n    var price = 199;\n\n    if (person.tr)\n    {\n        price = 250;\n    }\n    \n    if (person.certificate)\n    {\n        price += 50;\n    }\n\n    if (person.antiBodyTest)\n    {\n        price += (99 + 50);\n    }\n\n    return price;\n\n}\n\nconst calculateTotalPrice = (persons) =>\n{\n    var totalPrice = 0;\n    for (var i = 0 ; i < persons.length ; i++)\n    {\n        totalPrice += calculatePrice(persons[i]);\n    }\n\n    return totalPrice;\n}\n\nmodule.exports = {\n    calculatePrice : calculatePrice,\n    calculateTotalPrice : calculateTotalPrice\n}","\nconst calculatePrice = (person) =>\n{\n\n    var price = 199;\n\n    if (person.tr)\n    {\n        price = 250;\n    }\n    \n    if (person.certificate)\n    {\n        price += 50;\n    }\n\n    if (person.antiBodyTest)\n    {\n        price += (99 + 50);\n    }\n\n    return price;\n\n}\n\nconst calculateTotalPrice = (persons) =>\n{\n    var totalPrice = 0;\n    for (var i = 0 ; i < persons.length ; i++)\n    {\n        totalPrice += calculatePrice(persons[i]);\n    }\n\n    return totalPrice;\n}\n\nmodule.exports = {\n    calculatePrice : calculatePrice,\n    calculateTotalPrice : calculateTotalPrice\n}","\n\n\nconst FormatDateFromString = (str) =>\n{\n    if (!str)\n        return \"\"\n    return `${str.substr(8,2)}-${str.substr(5,2)}-${str.substr(0,4)}`;\n}\n\nconst FormatDateFromStringWithSlash = (str) =>\n{\n    if (!str)\n        return \"\"\n    return `${str.substr(8,2)}/${str.substr(5,2)}/${str.substr(0,4)}`;\n}\n\nconst RevertFormatDateFromString = (str) =>\n{\n    if (!str)\n      return \"\"\n    return `${str.substr(6,4)}-${str.substr(3,2)}-${str.substr(0,2)}`;\n}\n\n\nconst FormatDateFromStringShortYear = (str) =>\n{\n    if (!str)\n     return \"\"\n    return `${str.substr(8,2)}-${str.substr(5,2)}-${str.substr(2,2)}`;\n}\n\n\n\nmodule.exports = {\n    FormatDateFromString : FormatDateFromString,\n    FormatDateFromStringShortYear : FormatDateFromStringShortYear,\n    RevertFormatDateFromString: RevertFormatDateFromString,\n    FormatDateFromStringWithSlash: FormatDateFromStringWithSlash\n}","\nconst calculatePrice = (person) =>\n{\n\n    var price = 199;\n\n    if (person.tr)\n    {\n        price = 250;\n    }\n    \n    if (person.certificate)\n    {\n        price += 50;\n    }\n\n    if (person.antiBodyTest)\n    {\n        price += (99 + 50);\n    }\n\n    return price;\n\n}\n\nconst calculateTotalPrice = (persons) =>\n{\n    var totalPrice = 0;\n    for (var i = 0 ; i < persons.length ; i++)\n    {\n        totalPrice += calculatePrice(persons[i]);\n    }\n\n    return totalPrice;\n}\n\nmodule.exports = {\n    calculatePrice : calculatePrice,\n    calculateTotalPrice : calculateTotalPrice\n}","\n\n\nconst FormatDateFromString = (str) =>\n{\n    return `${str.substr(8,2)}-${str.substr(5,2)}-${str.substr(0,4)}`;\n}\n\nconst FormatDateFromStringWithSlash = (str) =>\n{\n    return `${str.substr(8,2)}/${str.substr(5,2)}/${str.substr(0,4)}`;\n}\n\nconst RevertFormatDateFromString = (str) =>\n{\n    return `${str.substr(6,4)}-${str.substr(3,2)}-${str.substr(0,2)}`;\n}\n\n\nconst FormatDateFromStringShortYear = (str) =>\n{\n    return `${str.substr(8,2)}-${str.substr(5,2)}-${str.substr(2,2)}`;\n}\n\n\n\nmodule.exports = {\n    FormatDateFromString : FormatDateFromString,\n    FormatDateFromStringShortYear : FormatDateFromStringShortYear,\n    RevertFormatDateFromString: RevertFormatDateFromString,\n    FormatDateFromStringWithSlash: FormatDateFromStringWithSlash\n}","import { createMuiTheme, responsiveFontSizes } from \"@material-ui/core\";\nimport { enGB } from '@material-ui/core/locale';\n\n\nconst black = \"#212121\";\nconst darkBlack = \"rgb(36, 40, 44)\";\nconst background = \"#f9f9f9\";\n\nconst warningLight = \"rgba(253, 200, 69, .3)\";\nconst warningMain = \"rgba(253, 200, 69, .5)\";\nconst warningDark = \"rgba(253, 200, 69, .7)\";\n\n// border\nconst borderWidth = 2;\nconst borderColor = \"rgba(0, 0, 0, 0.13)\";\n\n// breakpoints\nconst xl = 1920;\nconst lg = 1280;\nconst md = 960;\nconst sm = 600;\nconst xs = 0;\n\n// spacing\nconst spacing = 8;\n\nconst theme = createMuiTheme({\n\n  palette: {\n\n    primary: { main: \"#00a1c5\",\n               light: \"#5bd5f0\",\n              //  dark: \"#0288D1\",\n              //  light: \"#B3E5FC\"\n\n      },\n    secondary: { main: \"#f68529\", contrastText:\"#fff\" },\n    common: {\n      black,\n      darkBlack\n    },\n    warning: {\n      light: warningLight,\n      main: warningMain,\n      dark: warningDark\n    },\n    // Used to shift a color's luminance by approximately\n    // two indexes within its tonal palette.\n    // E.g., shift from Red 500 to Red 300 or Red 700.\n    tonalOffset: 0.2,\n    background: {\n      default: background\n    },\n    spacing\n  },\n  breakpoints: {\n    // Define custom breakpoint values.\n    // These will apply to Material-UI components that use responsive\n    // breakpoints, such as `Grid` and `Hidden`. You can also use the\n    // theme breakpoint functions `up`, `down`, and `between` to create\n    // media queries for these breakpoints\n    values: {\n      xl,\n      lg,\n      md,\n      sm,\n      xs\n    }\n  },\n  border: {\n    borderColor: borderColor,\n    borderWidth: borderWidth\n  },\n  overrides: {\n    MuiExpansionPanel: {\n      root: {\n        position: \"static\"\n      }\n    },\n    MuiTableCell: {\n      root: {\n        paddingLeft: spacing * 2,\n        paddingRight: spacing * 2,\n        borderBottom: `${borderWidth}px solid ${borderColor}`,\n        [`@media (max-width:  ${sm}px)`]: {\n          paddingLeft: spacing,\n          paddingRight: spacing\n        }\n      }\n    },\n    MuiDivider: {\n      root: {\n        backgroundColor: borderColor,\n        height: borderWidth\n      }\n    },\n    MuiPrivateNotchedOutline: {\n      root: {\n        borderWidth: borderWidth\n      }\n    },\n    MuiListItem: {\n      divider: {\n        borderBottom: `${borderWidth}px solid ${borderColor}`\n      }\n    },\n    MuiDialog: {\n      paper: {\n        width: \"100%\",\n        maxWidth: 430,\n        marginLeft: spacing,\n        marginRight: spacing\n      }\n    },\n    MuiTooltip: {\n      tooltip: {\n        backgroundColor: darkBlack,\n        fontSize: \"0.7rem\"\n      }\n    },\n    MuiExpansionPanelDetails: {\n      root: {\n        [`@media (max-width:  ${sm}px)`]: {\n          paddingLeft: spacing,\n          paddingRight: spacing\n        }\n      }\n    }\n  },\n \n}, enGB);\n\nexport default responsiveFontSizes(theme);\n","import { withStyles } from \"@material-ui/core\";\n\nconst styles = theme => ({\n  \"@global\": {\n    /**\n     * Disable the focus outline, which is default on some browsers like\n     * chrome when focusing elements\n     */\n    \"*:focus\": {\n      outline: 0\n    },\n    \".text-white\": {\n      color: theme.palette.common.white\n    },\n    \".listItemLeftPadding\": {\n      paddingTop: `${theme.spacing(1.75)}px !important`,\n      paddingBottom: `${theme.spacing(1.75)}px !important`,\n      paddingLeft: `${theme.spacing(4)}px !important`,\n      [theme.breakpoints.down(\"sm\")]: {\n        paddingLeft: `${theme.spacing(4)}px !important`\n      },\n      \"@media (max-width:  420px)\": {\n        paddingLeft: `${theme.spacing(1)}px !important`\n      }\n    },\n    \".container\": {\n      width: \"100%\",\n      paddingRight: theme.spacing(4),\n      paddingLeft: theme.spacing(4),\n      marginRight: \"auto\",\n      marginLeft: \"auto\",\n      [theme.breakpoints.up(\"sm\")]: {\n        maxWidth: 540\n      },\n      [theme.breakpoints.up(\"md\")]: {\n        maxWidth: 720\n      },\n      [theme.breakpoints.up(\"lg\")]: {\n        maxWidth: 1170\n      }\n    },\n    \".row\": {\n      display: \"flex\",\n      flexWrap: \"wrap\",\n      marginRight: -theme.spacing(2),\n      marginLeft: -theme.spacing(2)\n    },\n    \".container-fluid\": {\n      width: \"100%\",\n      paddingRight: theme.spacing(2),\n      paddingLeft: theme.spacing(2),\n      marginRight: \"auto\",\n      marginLeft: \"auto\",\n      maxWidth: 1370\n    },\n    \".lg-mg-top\": {\n      marginTop: `${theme.spacing(20)}px !important`,\n      [theme.breakpoints.down(\"md\")]: {\n        marginTop: `${theme.spacing(18)}px !important`\n      },\n      [theme.breakpoints.down(\"sm\")]: {\n        marginTop: `${theme.spacing(16)}px !important`\n      },\n      [theme.breakpoints.down(\"xs\")]: {\n        marginTop: `${theme.spacing(14)}px !important`\n      }\n    },\n    \".lg-mg-bottom\": {\n      marginBottom: `${theme.spacing(20)}px !important`,\n      [theme.breakpoints.down(\"md\")]: {\n        marginBottom: `${theme.spacing(18)}px !important`\n      },\n      [theme.breakpoints.down(\"sm\")]: {\n        marginBottom: `${theme.spacing(16)}px !important`\n      },\n      [theme.breakpoints.down(\"xs\")]: {\n        marginBottom: `${theme.spacing(14)}px !important`\n      }\n    },\n    \".lg-p-top\": {\n      paddingTop: `${theme.spacing(20)}px !important`,\n      [theme.breakpoints.down(\"md\")]: {\n        paddingTop: `${theme.spacing(18)}px !important`\n      },\n      [theme.breakpoints.down(\"sm\")]: {\n        paddingTop: `${theme.spacing(16)}px !important`\n      },\n      [theme.breakpoints.down(\"xs\")]: {\n        paddingTop: `${theme.spacing(14)}px !important`\n      }\n    }\n  }\n});\n\nfunction globalStyles() {\n  return null;\n}\n\nexport default withStyles(styles, { withTheme: true })(globalStyles);\n","/* eslint-disable */\n\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit http://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See http://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'; \nconst GlobalState = React.createContext([{}, () => {}]); \nexport default GlobalState;","import Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\n\nexport default function Copyright() {\n    return (\n      <Typography variant=\"body2\" align=\"center\">\n        {'Copyright © '}\n        <Link color=\"inherit\" href=\"#\">\n          Medical Express Clinic\n        </Link>{' '}\n        {new Date().getFullYear()}\n        {'.'}\n      </Typography>\n    );\n  }\n  ","\n\nexport const authToken = 'Basic QXp1cmXEaWFtb45kOmh1bnRlcjO='\n\nexport const backendAPI = 'https://www.travelpcrtest.com/'\n// export const backendAPI = 'http://localhost:9090/'\n\nexport function getGlobalPath(path){\n    return '/medicalexpressclinic/admin' + path\n    // return path\n}\n\nexport function getMenuIdFromGlobalPath(globalPath){\n    try{\n       \n        var split = globalPath.split('/')\n        if (split && split.length > 0)\n        {\n            return split[split.length - 1].length > 0 ?  split[split.length - 1] :  split[split.length - 2]\n        }\n        else\n        {\n            return ''\n        }\n    }\n    catch(err)\n    {\n        return ''\n    }\n}","import axios from 'axios';\nimport { authToken, backendAPI } from '../GlobalPath';\n\nexport default axios.create({\n  baseURL: backendAPI,\n\n  headers : {\n      'Authorization' : authToken\n  }\n});","import API from './api';\n\nexport default class UserService{\n\n    static setToken = (token) =>\n    {\n        this.token = token\n    }\n  \n    static signIn = (payload) =>\n    {\n        return  API.post('/api/medex/user/signin', payload)\n    }\n\n    static checkToken = (payload) =>\n    {\n        return  API.post('/api/medex/user/checktoken', payload)\n    }\n\n}\n","import axios from 'axios';\nimport { authToken, backendAPI } from '../../GlobalPath';\n\nexport default axios.create({\n  baseURL: backendAPI,\n  headers : {\n      'Authorization' : authToken\n  }\n});","import API from './api';\nimport axiosRetry from 'axios-retry';\n\nexport default class BookService {\n\n\n   static payBooking = (bookingId, paymentMethod, corporate) =>\n   {\n      return API.post(`/api/book/paybooking?id=${bookingId}&paymentmethod=${paymentMethod}&corporate=${corporate}`);\n   }\n\n   static unPayBooking = (bookingId) =>\n   {\n      return API.post(`/api/book/unpaybooking?id=${bookingId}`);\n   }\n\n   static getTestsTimeReport = () =>\n   {\n      axiosRetry( API, { retries: 3,  retryDelay: (retryCount) => {\n         return retryCount * 1000;\n       } });\n      return API.get(`/api/book/getteststimereport`);\n   }\n\n   static getBookingsStatsByDateStr = (dateStr) =>\n   {\n      return API.get(`/api/book/getbookingsstatsbydatestr?date=${dateStr}`);\n   }\n\n   static getBookingsCountByDateStr = (dateStr) =>\n   {\n      return API.get(`/api/book/getbookingscountbydatestr?date=${dateStr}`);\n   }\n\n   static getAllBookingsCountAll = () =>\n   {\n      return API.get(`/api/book/getallbookingscountall`);\n   }\n\n   static getBookingsCountByDateStrandTime = (dateStr, time, source) =>\n   {\n      return API.get(`/api/book/getbookingscountbydatestrandtime?date=${dateStr}&time=${time}`, {cancelToken: source.token});\n   }\n\n   static getBookingsByDateStrandTime = (dateStr, time) =>\n   {\n      return API.get(`/api/book/getbookingsbydatestrandtime?date=${dateStr}&time=${time}`);\n   }\n\n\n   static getAllBookingsCountByDateStr = (dateStr) =>\n   {\n      return API.get(`/api/book/getallbookingscountbydatestr?date=${dateStr}`);\n   }\n\n   static getAllBookingsCountByDateStrandTime = (dateStr, time, source) =>\n   {\n      return API.get(`/api/book/getallbookingscountbydatestrandtime?date=${dateStr}&time=${time}`, {cancelToken: source.token});\n   }\n\n   static getAllBookingsByDateStrandTime = (dateStr, time) =>\n   {\n      return API.get(`/api/book/getallbookingsbydatestrandtime?date=${dateStr}&time=${time}`);\n   }\n\n\n\n\n   static changeBackToBookingMade = (id) =>\n   {\n      return API.post(`/api/book/changebacktobookingmade?id=${id}`);\n   }\n\n   static resendEmailsWithBookingId = (bookingId) =>\n   {\n      return API.post(`/api/book/resendemailswithbookingid?id=${bookingId}`);\n   }\n\n   static regenerateFilesWithBookingId  = (bookingId) =>\n   {\n      return API.post(`/api/book/regeneratefileswithbookingid?id=${bookingId}`);\n   }\n\n\n   static resendEmails  = (linkId) =>\n   {\n      return API.post(`/api/book/resendemails?id=${linkId}`);\n   }\n\n   static regenerateFiles  = (linkId) =>\n   {\n      return API.post(`/api/book/regeneratefiles?id=${linkId}`);\n   }\n\n   static matchRecords  = (bookingId, linkId) =>\n   {\n      return API.post(`/api/book/matchrecords?bookingid=${bookingId}&linkid=${linkId}`);\n   }\n\n   static findBestMatches = (id) =>\n   {\n      return API.get(`/api/book/getbestmatchedbookings?id=${id}`);\n   } \n\n   static getLinkDetails = (id) =>\n   {\n      return API.get(`/api/book/getlinkdetails?id=${id}`);\n   } \n\n   static getLinkDetailsWithBookingId = (id) =>\n   {\n      return API.get(`/api/book/getlinkdetailswithbookingid?id=${id}`);\n   } \n\n\n\n   static findBookingByRefBirthDate = (bookingRef, birthDate) =>\n   {\n      return API.get(`/api/book/getbookingsbyrefandbirthdate?ref=${bookingRef}&birthdate=${birthDate}`);\n   }\n\n   static updateBooking = (payload) =>\n   {\n      return API.post(`/api/book/updatebookappointment`, payload);\n   } \n\n   static updateBookingTime = (payload) =>\n   {\n      return API.post(`/api/book/updatebookappointmenttime`, payload);\n   } \n\n   static deleteBooking = (id) =>\n   {\n      return API.post(`/api/book/deletebookappointment?id=${id}`);\n   } \n\n   static unDeleteBooking = (id) =>\n   {\n      return API.post(`/api/book/undeletebookappointment?id=${id}`);\n   } \n   \n   \n    static getBookingsByRef = (ref) =>\n    {\n       return API.get(`/api/book/getbookingsbyref?ref=${ref}`);\n    }\n\n    static getBookingById = (id) =>\n    {\n       return API.get(`/api/book/getbookingbyid?id=${id}`);\n    }\n\n    static getAllBookings = (limit) =>\n    {\n      if (!limit) limit = 25 \n      return API.get(`/api/book/getallbookings?limit=${limit}`);\n    }\n\n    static getAllTRBookings = (limit) =>\n    {\n      if (!limit) limit = 25 \n      return API.get(`/api/book/getalltrbookings?limit=${limit}`);\n    }\n\n    static getLateBookings= () =>\n    {\n       return API.get(`/api/book/getlatebookings`);\n    }\n\n    static getDeletedBookings= (limit) =>\n    {\n      if (!limit) limit = 25 \n       return API.get(`/api/book/getdeletedbookings?limit=${limit}`);\n    }\n\n    static getLiveBookings= () =>\n    {\n       return API.get(`/api/book/getlivebookings`);\n    }\n\n    static getCompletedBookings= (limit) =>\n    {\n      if (!limit) limit = 25 \n       return API.get(`/api/book/getcompletedbookings?limit=${limit}`);\n    }\n\n    static getPositiveBookings= () =>\n    {\n       return API.get(`/api/book/getpositivebookings`);\n    }\n\n\n\n    static getTodayBookings= () =>\n    {\n       return API.get(`/api/book/gettodaybookings`);\n    }\n\n    static getOldBookings= (limit) =>\n    {\n      if (!limit) limit = 25 \n       return API.get(`/api/book/getoldbookings?limit=${limit}`);\n    }\n\n    static getFutureBookings= (limit) =>\n    {\n      if (!limit) limit = 25 \n       return API.get(`/api/book/getfuturebookings?limit=${limit}`);\n    }\n\n    static getRecentBookings= () =>\n    {\n       return API.get(`/api/book/getrecentbookings`);\n    }\n\n    static getRecentBookingsAll= (limit) =>\n    {\n      if (!limit) limit = 25 \n       return API.get(`/api/book/getrecentbookingsall?limit=${limit}`);\n    }\n\n    static getUnmatchedRecords= () =>\n    {\n       return API.get(`/api/book/getunmatchedrecords`);\n    }\n\n    static getUnmatchedRecordsArchived= () =>\n    {\n       return API.get(`/api/book/getunmatchedrecordsarchived`);\n    }\n\n    static archiveRecord = (id) =>\n    {\n       return API.post(`/api/book/archiverecord?id=${id}`);\n    }\n\n    static unArchiveRecord = (id) =>\n    {\n       return API.post(`/api/book/unarchiverecord?id=${id}`);\n    }\n\n\n}","import API from './api';\n\nexport default class PDFService {\n\n    static downloadCovidForm1 = (id) =>\n    {\n       return API.get(`/api/pdf/downloadcovidform1?id=${id}`, {\n        responseType: 'arraybuffer',\n        id: id,\n        headers: {\n            Accept: 'application/pdf',\n        }\n        });\n    }\n\n    static downloadCovidForm2 = (id) =>\n    {\n       return API.get(`/api/pdf/downloadcovidform2?id=${id}`, {\n        responseType: 'arraybuffer',\n        headers: {\n            Accept: 'application/pdf',\n        }\n        });\n    }\n\n    static downloadPdfResult = (id) =>\n    {\n       return API.get(`/api/pdf/downloadpdfresult?id=${id}`, {\n        responseType: 'arraybuffer',\n        headers: {\n            Accept: 'application/pdf',\n        }\n        });\n    }\n\n    static downloadPdfCert = (id) =>\n    {\n       return API.get(`/api/pdf/downloadpdfcert?id=${id}`, {\n        responseType: 'arraybuffer',\n        headers: {\n            Accept: 'application/pdf',\n        }\n        });\n    }\n\n    static downloadPdfLabReport = (id) =>\n    {\n       return API.get(`/api/pdf/downloadpdflabreport?id=${id}`, {\n        responseType: 'arraybuffer',\n        headers: {\n            Accept: 'application/pdf',\n        }\n        });\n    }\n\n\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport GlobalState from './../GlobalState';\nimport Grid from '@material-ui/core/Grid';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { Button, Checkbox, FormControlLabel, Link, TextField, Tooltip } from '@material-ui/core';\nimport PDFService from './services/PDFService';\n\nimport {calculatePrice} from './PriceCalculator';\n\n\nimport bookingService from './services/BookService';\nimport CheckIcon from '@material-ui/icons/Check';\nimport CloseIcon from '@material-ui/icons/Close';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nimport {FormatDateFromString, RevertFormatDateFromString} from './DateFormatter';\n\nimport PrintIcon from '@material-ui/icons/Print';\n\n\nconst useStyles = makeStyles((theme) => ({\n  box: {\n    backgroundColor : \"#373737\",\n    color: \"#fff\",\n    padding : \"1px\",\n    borderRadius : \"4px\",\n    textAlign: \"justify\",\n    paddingRight: \"40px\"\n  },\n\n  boxRed: {\n    backgroundColor : \"#dc2626\",\n    color: \"#fff\",\n    padding : \"1px\",\n    borderRadius : \"4px\",\n    textAlign: \"justify\",\n    paddingRight: \"40px\"\n  },\n\n  boxInfo: {\n    textAlign: \"justify\",\n    backgroundColor : \"#fafafa\",\n    color: \"#333\",\n    padding : \"1px\",\n    borderRadius : \"4px\",\n    paddingRight: \"40px\",\n    border: \"1px solid #eee\",\n  },\n\n  ul: {\n     listStyle: \"none\",\n     padding: \"0\",\n     margin: \"0\"\n  },\n\n  li: {\n    marginBottom : \"15px\"\n  },\n\n\n  icon: {\n    marginRight : \"8px\"\n  },\n\n  root: {\n    width: '100%',\n  },\n\n  lineThrough:{\n    textDecoration : \"line-through\",\n  },\n\n\n\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    flexBasis: '33.33%',\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n  },\n  secondaryHeading: {\n    fontSize: theme.typography.pxToRem(15),\n  },\n\n  infoDetails:{\n    textAlign: \"left\",\n  },\n\n  infoTitle:{\n    fontWeight: \"800\",\n    marginRight: \"10px\"\n  },\n\n  infoData:{\n    fontWeight: \"400\",\n  },\n\n  title:\n  {\n    // textAlign : \"center\",\n    // fontWeight : \"500\",\n    // margin: \"10px\",\n    // backgroundColor : \"#eee\",\n    // padding : \"10px\",\n    // borderRadius : \"4px\"\n    textAlign: \"center\",\n    fontWeight : \"600\",\n    marginLeft: \"10px\",\n    marginBottom: \"5px\"\n\n  },\n\n  Accordion:{\n    backgroundColor : \"#f5f5f5\",\n    color: \"#222\"\n  },\n\n  AccordionDeleted:{\n    backgroundColor : \"#aaa\",\n    color: \"#555\"\n  },\n\n  DownloadForm:{\n      marginTop: \"10px\",\n      marginBottom : \"10px\"\n  },\n\n  infoDataCharges:{\n    fontSize : \"18px\",\n    color: \"green\",\n    fontWeight : \"600\"\n  },\n\n  infoDataChargesHigher:{\n    fontSize : \"18px\",\n    color: \"red\",\n    fontWeight : \"600\"\n  },\n  BookedLabel:{\n    color: \"#606060\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#606060\"\n  },\n\n  PatientAttendedLabel:{\n    color: \"#0066aa\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#0066aa\"\n  },\n\n  SampleTakenLabel:{\n    color: \"#0066cc\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#0066cc\"\n  },\n\n  ReportSentLabel:{\n    color: \"#009900\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#009900\"\n  },\n\n  ReportCertSentLabel:{\n    color: \"#009900\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#009900\"\n  },\n\n  PositiveLabel:{\n    color: \"red\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"red\"\n  },\n\n\n  EditButton:\n  {\n    marginBottom : \"20px\",\n    backgroundColor : \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\"\n    },\n    textDecoration : \"none !important\",\n    padding: \"10px\"   \n  },\n\n  RestoreButton:\n  {\n    marginBottom : \"20px\",\n    backgroundColor : \"#fafafa\",\n    color: \"#555\",\n    \"&:hover\": {\n      background: \"#f1f1f1\",\n      color: \"#111\"\n    },\n    textDecoration : \"none !important\",\n    padding: \"10px\"   \n  },\n\n\n  DeleteButton:\n  {\n    marginBottom : \"20px\",\n    backgroundColor : \"#d90015\",\n    \"&:hover\": {\n      background: \"#b80012\",\n      color: \"#fff\"\n    },\n\n    padding: \"10px\"\n    \n  },\n\n  SaveButton:\n  {\n    marginBottom : \"10px\",\n    padding: \"10px\",\n\n    backgroundColor : \"#d1175e\",\n    \"&:hover\": {\n      background: \"#bd0d50\",\n      color: \"#fff\"\n    },\n\n  },\n\n  CancelButton:\n  {\n    marginBottom : \"20px\",\n    // padding: \"10px\"\n  },\n\n  TextBox: {\n    \n    padding : \"0px\"\n\n  },\n\n  checkIcon:{\n    color: \"green\",   \n  },\n\n  closeIcon:{\n    color: \"red\"\n  },\n\n  centeredLabel : {\n    display: \"flex\",\n    alignItems: \"center\"\n  }\n\n\n\n\n\n\n}));\n\n\n\n\nexport default function PersonsBox() {\n    const classes = useStyles();\n\n    const [state, setState] = React.useContext(GlobalState);\n\n    const [expanded, setExpanded] = React.useState('panel0');\n\n    const [editMode, setEditMode] = React.useState({edit : false, person : null});\n    const [deleteMode, setDeleteMode] = React.useState({delete : false, person : null});\n    const [restoreMode, setRestoreMode] = React.useState({restore : false, person : null});\n\n    const [saving, setSaving] =  React.useState(false);\n    const [deleting, setDeleting] =  React.useState(false);\n    const [restoring, setRestoring] =  React.useState(false);\n\n    const [validationError, setValidationError] = React.useState({});\n\n\n    const [bookingDate, setBookingDate] = React.useState('');\n    const [bookingTime, setBookingTime] = React.useState('');\n\n    const [gender, setGender] = React.useState('');\n    const [title, setTitle] = React.useState('');\n    const [forename, setForename] = React.useState('');\n    const [surname, setSurnme] = React.useState('');\n    const [email, setEmail] = React.useState('');\n    const [dob, setDOB] = React.useState('');\n    const [tel, setTel] = React.useState('');\n    const [postCode, setPostCode] = React.useState('');\n    const [address, setAddress] = React.useState('');\n    const [notes, setNotes] = React.useState('');\n    const [passport, setPassport] = React.useState('');\n    const [passport2, setPassport2] = React.useState('');\n    const [certificate, setCertificate] = React.useState(false);\n    const [antiBodyTest, setAntiBodyTest] = React.useState(false);\n\n\n    const bookingDateChanged = (event) =>\n    {\n      setBookingDate(event.target.value);\n      setValidationError({...validationError, bookingDateError : false});\n    }\n\n    const bookingTimeChanged = (event) =>\n    {\n      setBookingTime(event.target.value);\n      setValidationError({...validationError, bookingTimeError : false});\n    }\n\n    const genderChanged = (event) =>\n    {\n      setGender(event.target.value);\n    }\n\n    const titleChanged = (event) =>\n    {\n      setTitle(event.target.value);\n    }\n\n    const forenameChanged = (event) =>\n    {\n      setForename(event.target.value);\n    }\n\n    const surnameChanged = (event) =>\n    {\n      setSurnme(event.target.value);\n    }\n\n    const emailChanged = (event) =>\n    {\n      setEmail(event.target.value);\n    }\n\n    const dobChanged = (event) =>\n    {\n      setDOB(event.target.value);\n      setValidationError({...validationError, dobError : false});\n    }\n\n    const telChanged = (event) =>\n    {\n      setTel(event.target.value);\n    }\n\n    const postCodeChanged = (event) =>\n    {\n      setPostCode(event.target.value);\n    }\n\n    const addressChanged = (event) =>\n    {\n      setAddress(event.target.value);\n    }\n\n    const passportChanged = (event) =>\n    {\n      setPassport(event.target.value);\n    }\n\n    const passport2Changed = (event) =>\n    {\n      setPassport2(event.target.value);\n    }\n\n    const certificateChanged = (event) =>\n    {\n      setCertificate(event.target.checked);\n    }\n\n    const antiBodyTestChanged = (event) =>\n    {\n      setAntiBodyTest(event.target.checked);\n    }\n\n\n    const handleChange = (panel) => (event, isExpanded) => {\n      setExpanded(isExpanded ? panel : false);\n    };\n\n    const getStatusLabel = (status) => {\n      if (status === 'booked')\n      {\n        return (\n          <span className={classes.BookedLabel}> Booking Made </span>\n        );\n    \n      }else if (status === 'patient_attended')\n      {\n        return (\n          <span  className={classes.PatientAttendedLabel}> Patient Attended </span>\n        );\n    \n      }else if (status === 'sample_taken')\n      {\n        return (\n          <span  className={classes.SampleTakenLabel}> Sample Taken </span>\n        );\n    \n      }else if (status === 'report_sent')\n      {\n        return (\n          <span  className={classes.ReportSentLabel}> Report Sent </span>\n        );\n    \n      }else if (status === 'report_cert_sent')\n      {\n        return (\n          <span  className={classes.ReportCertSentLabel}> {`Report & Certificate Sent`} </span>\n        );\n      }\n      else if (status === 'positive')\n      {\n        return (\n          <span  className={classes.PositiveLabel}> {`POSITIVE`} </span>\n        );\n    \n      }\n      else{\n        return 'Unknown';\n      }\n    }\n\n   const downloadForm1 = (id) =>\n   {\n       PDFService.downloadCovidForm1(id).then( (res) => \n       {\n          const file = new Blob(\n            [res.data], \n            {type: 'application/pdf'});\n\n          const fileURL = URL.createObjectURL(file);   \n          window.open(fileURL, \"_blank\");\n\n       }).catch( (err) =>\n       {\n           console.log(err);\n       });\n   }\n\n   const downloadForm2 = (id) =>\n   {\n        PDFService.downloadCovidForm2(id).then( (res) => \n        {\n          const file = new Blob(\n            [res.data], \n            {type: 'application/pdf'});\n\n          const fileURL = URL.createObjectURL(file);   \n          window.open(fileURL, \"_blank\");\n\n        setState(state => ({...state, RefreshPersonInfo : !state.RefreshPersonInfo}));\n\n        }).catch( (err) =>\n        {\n            console.log(err);\n        });\n   }\n\n   const downloadLabResults = (id) =>\n   {\n        PDFService.downloadPdfResult(id).then( (res) => \n        {\n          const file = new Blob(\n            [res.data], \n            {type: 'application/pdf'});\n\n          const fileURL = URL.createObjectURL(file);   \n          window.open(fileURL, \"_blank\");\n\n        }).catch( (err) =>\n        {\n            console.log(err);\n        });\n   }\n\n   const downloadCertificate = (id) =>\n   {\n        PDFService.downloadPdfCert(id).then( (res) => \n        {\n          const file = new Blob(\n            [res.data], \n            {type: 'application/pdf'});\n\n          const fileURL = URL.createObjectURL(file);   \n          window.open(fileURL, \"_blank\");\n\n        }).catch( (err) =>\n        {\n            console.log(err);\n        });\n   }\n\n   const handleEditModeChanged = (edit, person) => {\n\n       if (edit)\n       {\n         setForename(person.forenameCapital);\n         setSurnme(person.surnameCapital);\n         setBookingDate(FormatDateFromString(person.bookingDate));\n         setBookingTime(person.bookingTime.toUpperCase());\n         setGender(person.gender.toUpperCase());\n         setTitle(person.title.toUpperCase());\n         setEmail(person.email.toUpperCase());\n         setDOB(FormatDateFromString(person.birthDate));\n         setTel(person.phone.toUpperCase());\n         setPostCode(person.postCode.toUpperCase());\n         setAddress(person.address.toUpperCase());\n         if (person.notes)\n         {\n          setNotes(person.notes.toUpperCase());\n         }\n        \n         if (person.passportNumber)\n         {\n           setPassport(person.passportNumber.toUpperCase());\n         }\n        \n         if (person.passportNumber2)\n         {\n           setPassport2(person.passportNumber2.toUpperCase());\n         }\n        \n         setCertificate(person.certificate);\n         setAntiBodyTest(person.antiBodyTest);\n\n         setEditMode({edit: edit, person: person});\n\n       }\n       else if (!edit && !person)\n       {\n         setEditMode({edit: edit, person: person});\n       }\n       else if (!edit && person)\n       {\n          const booking = {};\n          const bookingId = person._id;\n          booking.certificate = certificate;\n          booking.antiBodyTest = antiBodyTest;\n          booking.gender = gender;\n          booking.title = title;\n          booking.birthDate = RevertFormatDateFromString(dob);\n          booking.email = email;\n          booking.phone = tel;\n          booking.postCode = postCode;\n          booking.address = address;\n          booking.passportNumber = passport;\n          booking.passportNumber2 = passport2;\n          booking.forename = forename;\n          booking.surname = surname;\n          booking.notes = notes;\n          booking.bookingDate = RevertFormatDateFromString(bookingDate);\n          booking.bookingTime = bookingTime;\n          booking.bookingRef = person.bookingRef;\n\n          if  (validateBooking(booking))\n          {\n            updateBooking({bookingId: bookingId, person: booking});\n          }\n       }\n   }\n\n   const validateDate = (str) =>\n   {\n     var error = false;\n     if (!str || str.length !== 10)\n     {\n       error = true;\n     }\n\n     if (str.charAt(4) !== '-'  || str.charAt(7) !== '-')\n     {\n       error = true;\n     }\n\n     try\n     {\n       \n       const result = /^\\d{4}-\\d{2}-\\d{2}$/.test(str);\n       if (!result)\n       {\n          error = true;\n       }\n\n       const year = parseInt(str.substr(0,4));\n       const month = parseInt(str.substr(5,2));\n       const day = parseInt(str.substr(8,2));\n\n       if (year < 1900)\n       {\n          error = true;\n       }\n\n       if (month < 1 || month > 12)\n       {\n         error = true;\n       }        \n\n       if (day > 31)\n       {\n         error = true;\n       }\n\n     }catch(err)\n     {\n       error = true;\n     }\n\n\n\n     return !error;\n   }\n\n   const validateTime =(str) =>\n   {\n     var error = false;\n\n     const result = /^\\d{2}:\\d{2} AM$|^\\d{2}:\\d{2} PM$/.test(str);\n     if (!result)\n     {\n        error = true;\n     }\n\n     try{\n       const hour = parseInt(str.substr(0,2));\n       const minute = parseInt(str.substr(3,2));\n\n       if (hour < 0 || hour > 12)\n       {\n         error = true;\n       }\n\n       if (minute < 0 || minute > 59)\n       {\n         error = true;\n       }\n\n     }catch(err)\n     {\n       error = true;\n     }\n\n     return !error;\n   }\n\n   const validateBooking = (booking) =>\n   {\n      var error = false;\n\n      if (!validateDate(booking.bookingDate))\n      {\n        error = true;\n        setValidationError({...validationError, bookingDateError : true});\n      }\n\n      if (!validateDate(booking.birthDate))\n      {\n        error = true;\n        setValidationError({...validationError, dobError : true});\n      }\n\n      if (!validateTime(booking.bookingTime))\n      {\n        error = true;\n        setValidationError({...validationError, bookingTimeError : true});\n      }\n     \n\n      return !error;\n   }\n\n   const updateBooking = (payload) =>\n   {\n       setSaving(true);\n       bookingService.updateBooking(payload).then( (res) => {\n        setSaving(false);\n        setEditMode({edit: false, person: null});\n        setState(state => ({...state, RefreshPersonInfo : !state.RefreshPersonInfo}));\n\n       }).catch ( (err) => {\n         setSaving(false);\n         setEditMode({edit: false, person: null});\n         console.log(err);\n       });\n   }\n\n   const deleteBooking = (id) =>\n   {\n       setDeleting(true);\n       bookingService.deleteBooking(id).then( (res) => {\n        setDeleting(false);\n        setDeleteMode({delete: false, person: null});\n        setState(state => ({...state, RefreshPersonInfo : !state.RefreshPersonInfo}));\n\n       }).catch ( (err) => {\n          setDeleting(false);\n          setDeleteMode({delete: false, person: null});\n         console.log(err);\n       });\n   }\n\n   const restoreBooking = (id) =>\n   {\n       setRestoring(true);\n       bookingService.unDeleteBooking(id).then( (res) => {\n        setRestoring(false);\n        setRestoreMode({restore: false, person: null});\n        setState(state => ({...state, RefreshPersonInfo : !state.RefreshPersonInfo}));\n\n       }).catch ( (err) => {\n        setRestoring(false);\n        setRestoreMode({restore: false, person: null});\n         console.log(err);\n       });\n   }\n\n   const changeBackToBookingMade = (event, id) =>\n   {\n     setSaving(true);\n     bookingService.changeBackToBookingMade(id).then(res => {\n       setSaving(false);\n       setState(state => ({...state, RefreshPersonInfo : !state.RefreshPersonInfo}));\n     }).catch(err => {\n       console.log(err);\n       setSaving(false);\n     })\n   }\n\n\n\n   const handleDeleteModeChanged = (del, person) => {\n\n    if (del)\n    {\n      setDeleteMode({delete: del, person: person});\n    }\n    else if (!del && !person)\n    {\n      setDeleteMode({delete: del, person: person});\n    }\n    else if (!del && person)\n    {\n        deleteBooking(person._id);\n    }\n  }\n\n  const handleRestoreModeChanged = (restore, person) => {\n\n    if (restore)\n    {\n      setRestoreMode({restore: restore, person: person});\n    }\n    else if (!restore && !person)\n    {\n      setRestoreMode({restore: restore, person: person});\n    }\n    else if (!restore && person)\n    {\n        restoreBooking(person._id);\n    }\n  }\n\n  return (\n    <React.Fragment>\n          \n      <Grid container direction=\"column\" spacing={1} justify=\"flex-start\"  alignItems=\"stretch\">\n          <div className={classes.title}> Following Records Found :</div>\n\n          {state.foundRecords.map((person,index) => (\n   \n                <Grid item xs={12} md={12} key={`panel${index}`}>\n                <div className={classes.root}>\n                    <Accordion className={person.deleted ? classes.AccordionDeleted : classes.Accordion} expanded={expanded === `panel${index}`} onChange={handleChange(`panel${index}`)}>\n                    <AccordionSummary className={person.deleted ? classes.lineThrough : ''}\n                        expandIcon={<ExpandMoreIcon />}\n                        aria-controls=\"panel1bh-content\"\n                        id={`panel${index}bh-header`}\n                    >\n                      {person.deleted && (\n                          <Tooltip  title=\"This record has been deleted.\">\n                            <DeleteIcon  style={{padding: 0, margin: 0,  color: \"#fff\", fontSize: 25 }}/>\n                        </Tooltip>\n                      )}\n\n                        <Typography className={classes.heading}> {`#${index+1}`} </Typography>\n                        <Typography className={classes.secondaryHeading}>\n                        {`${person.forenameCapital} ${person.surnameCapital}`}\n                        </Typography>\n                    </AccordionSummary>\n\n                    <AccordionDetails className={classes.infoDetails}>\n                        \n\n\n                        <ul className={classes.ul}>\n\n                        {/* Restore Functionality ******************************************* */}  \n                        <li hidden={!(restoreMode.restore && restoreMode.person._id  === person._id)}>\n                              <div style={{fontWeight: \"500\", paddingBottom: \"5px\", paddingLeft: \"5px\", fontSize:\"16px\" , color:\"#fff\"}}>\n                                Are you sure you want to restore this record?\n                              </div>\n                            </li>\n\n                            <li hidden={!person.deleted || (restoreMode.restore && restoreMode.person._id === person._id)}>\n                                 <Button\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick = {() => {handleRestoreModeChanged(true, person)}}\n                                    className={classes.RestoreButton}\n                                 >\n                                   Restore This Record\n                                </Button>\n                            </li>\n\n                            <li hidden={!(restoreMode.restore && restoreMode.person._id  === person._id)}>\n                                 <Button\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    disabled = {restoring}\n                                    onClick = {() => {handleRestoreModeChanged(false, person)}}\n                                    className={classes.SaveButton}\n                                 >\n                                    YES, Restore this!\n                                </Button>\n                            </li>\n\n                            <li hidden={!(restoreMode.restore && restoreMode.person._id  === person._id)}>\n                                 <Button\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"default\"\n                                    disabled = {restoring}\n                                    onClick = {() => {handleRestoreModeChanged(false, null)}}\n                                    className={classes.CancelButton}\n                                 >\n                                    Cancel\n                                </Button>\n                            </li>\n\n                           {/*  ******************************************************************* */}\n\n                              {/* Edit Functionality ******************************************* */}\n\n                            <li hidden={person.deleted || deleteMode.delete || (editMode.edit && editMode.person._id === person._id)}>\n                                 <Button\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick = {() => {handleEditModeChanged(true, person)}}\n                                    className={classes.EditButton}\n                                 >\n                                    Edit Booking Info\n                                </Button>\n                            </li>\n\n                            <li hidden={!(editMode.edit && editMode.person._id  === person._id)}>\n                                 <Button\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    disabled = {saving}\n                                    onClick = {() => {handleEditModeChanged(false, person)}}\n                                    className={classes.SaveButton}\n                                 >\n                                    Save Changes\n                                </Button>\n                            </li>\n\n                            <li hidden={!(editMode.edit && editMode.person._id === person._id)}>\n                                 <Button\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"default\"\n                                    disabled = {saving}\n                                    onClick = {() => {handleEditModeChanged(false, null)}}\n                                    className={classes.CancelButton}\n                                 >\n                                    Cancel\n                                </Button>\n                            </li>\n                            \n                            {/* ****************************************************************************************** */}\n\n\n                            {/* Delete Functionality ******************************************* */}\n\n                            <li hidden={!(deleteMode.delete && deleteMode.person._id  === person._id)}>\n                              <div style={{fontWeight: \"600\",  paddingBottom: \"5px\", paddingLeft: \"5px\", fontSize:\"16px\"}}>\n                                Are you sure you want to delete this record?\n                              </div>\n                            </li>\n\n                            <li hidden={person.deleted ||  editMode.edit || (deleteMode.delete && deleteMode.person._id === person._id)}>\n                                 <Button\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick = {() => {handleDeleteModeChanged(true, person)}}\n                                    className={classes.DeleteButton}\n                                 >\n                                   Delete This Record\n                                </Button>\n                            </li>\n\n                            <li hidden={!(deleteMode.delete && deleteMode.person._id  === person._id)}>\n                                 <Button\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    disabled = {deleting}\n                                    onClick = {() => {handleDeleteModeChanged(false, person)}}\n                                    className={classes.SaveButton}\n                                 >\n                                    YES, Delete this!\n                                </Button>\n                            </li>\n\n                            <li hidden={!(deleteMode.delete && deleteMode.person._id === person._id)}>\n                                 <Button\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"default\"\n                                    disabled = {deleting}\n                                    onClick = {() => {handleDeleteModeChanged(false, null)}}\n                                    className={classes.CancelButton}\n                                 >\n                                    Cancel\n                                </Button>\n                            </li>\n                                 \n                            {/* ****************************************************************************************** */}\n\n                            <li className={classes.li}>\n                                <span className={classes.infoTitle}>BOOKED DATE</span> \n                            \n\n                                <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                   {FormatDateFromString(person.bookingDate) }\n                                  </span>  \n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                          <TextField \n                                                      fullWidth\n                                                      error={validationError.bookingDateError}\n                                                      className={classes.TextBox} \n                                                      value={bookingDate}\n                                                      onChange = {bookingDateChanged}\n                                                      inputProps= {{\n                                                          style:{\n                                                            padding: 0\n                                                          }\n                                                        }\n                                                      }\n                                                      > \n                                          </TextField> \n                                        </span> \n\n\n                            </li>\n\n                            <li className={classes.li}>\n                                <span className={classes.infoTitle}>BOOKED TIME</span> \n                                <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.bookingTime.toUpperCase()}</span>  \n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                          <TextField \n                                                      fullWidth\n                                                      error={validationError.bookingTimeError}\n                                                      className={classes.TextBox} \n                                                      value={bookingTime}\n                                                      onChange = {bookingTimeChanged}\n                                                      inputProps= {{\n                                                          style:{\n                                                            padding: 0\n                                                          }\n                                                        }\n                                                      }\n                                                      > \n                                          </TextField> \n                                        </span> \n\n\n                            </li>\n\n                            <li className={classes.li}>\n                            <span className={classes.infoTitle}>GENDER</span> \n                                        <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.gender?.toUpperCase()}</span>  \n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                          <TextField \n                                                      fullWidth\n                                                      className={classes.TextBox} \n                                                      value={gender}\n                                                      onChange = {genderChanged}\n                                                      inputProps= {{\n                                                          style:{\n                                                            padding: 0\n                                                          }\n                                                        }\n                                                      }\n                                                      > \n                                          </TextField> \n                                        </span> \n                            </li>\n                            <li className={classes.li}>\n                            <span className={classes.infoTitle}>TITLE</span> \n                                       <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.title?.toUpperCase()}</span>  \n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                          <TextField \n                                                      fullWidth\n                                                      className={classes.TextBox} \n                                                      value={title}\n                                                      onChange = {titleChanged}\n                                                      inputProps= {{\n                                                          style:{\n                                                            padding: 0\n                                                          }\n                                                        }\n                                                      }\n                                                      > \n                                          </TextField> \n                                        </span> \n                             \n                            </li>\n                            <li className={classes.li}>\n                            <span className={classes.infoTitle}>FORENAME</span> \n                                        <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.forenameCapital}</span>  \n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                        <TextField \n                                                      fullWidth\n                                                      className={classes.TextBox} \n                                                      value={forename}\n                                                      onChange = {forenameChanged}\n                                                      inputProps= {{\n                                                          style:{\n                                                            padding: 0\n                                                          }\n                                                        }\n                                                      }\n                                                      > \n                                          </TextField> \n                                        </span> \n                            </li>\n                            <li className={classes.li}>\n                                <span className={classes.infoTitle}>SURNAME</span>\n                                        <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.surnameCapital}</span>  \n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                        <TextField \n                                                      fullWidth\n                                                      className={classes.TextBox} \n                                                      value={surname}\n                                                      onChange = {surnameChanged}\n                                                      inputProps= {{\n                                                          style:{\n                                                            padding: 0\n                                                          }\n                                                        }\n                                                      }\n                                                      > \n                                          </TextField> \n                                        </span>   \n                            </li>\n                            <li className={classes.li}>\n                                <span className={classes.infoTitle}>EMAIL</span> \n                                       <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.email?.toUpperCase()}</span>  \n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                        <TextField \n                                                      fullWidth\n                                                      className={classes.TextBox} \n                                                      value={email}\n                                                      onChange = {emailChanged}\n                                                      inputProps= {{\n                                                          style:{\n                                                            padding: 0\n                                                          }\n                                                        }\n                                                      }\n                                                      > \n                                          </TextField> \n                                        </span>   \n                            </li>\n                            <li className={classes.li}>\n                                <span className={classes.infoTitle}>D.O.B</span>\n                                        <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                            {FormatDateFromString(person.birthDate) }\n                                          </span>  \n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                        <TextField \n                                                      fullWidth\n                                                      error={validationError.dobError} \n                                                      className={classes.TextBox} \n                                                      value={dob}\n                                                      onChange = {dobChanged}\n                                                      inputProps= {{\n                                                          style:{\n                                                            padding: 0\n                                                          }\n                                                        }\n                                                      }\n                                                      > \n                                          </TextField> \n                                        </span>   \n                            </li>\n                            <li className={classes.li}>\n                                <span className={classes.infoTitle}>TEL</span>\n                                 <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.phone?.toUpperCase()}</span>  \n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                        <TextField \n                                                      fullWidth\n                                                      className={classes.TextBox} \n                                                      value={tel}\n                                                      onChange = {telChanged}\n                                                      inputProps= {{\n                                                          style:{\n                                                            padding: 0\n                                                          }\n                                                        }\n                                                      }\n                                                      > \n                                          </TextField> \n                                        </span>  \n                            </li>\n                            <li className={classes.li}>\n                                <span className={classes.infoTitle}>POST CODE</span> \n                                        <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.postCode?.toUpperCase()}</span>  \n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                        <TextField \n                                                      fullWidth\n                                                      className={classes.TextBox} \n                                                      value={postCode}\n                                                      onChange = {postCodeChanged}\n                                                      inputProps= {{\n                                                          style:{\n                                                            padding: 0\n                                                          }\n                                                        }\n                                                      }\n                                                      > \n                                          </TextField> \n                                        </span>  \n                            </li>\n                            <li className={classes.li}>\n                                <span className={classes.infoTitle}>ADDRESS</span> \n                                        <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.address?.toUpperCase()}</span>  \n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                        <TextField \n                                                      fullWidth\n                                                      className={classes.TextBox} \n                                                      value={address}\n                                                      onChange = {addressChanged}\n                                                      inputProps= {{\n                                                          style:{\n                                                            padding: 0\n                                                          }\n                                                        }\n                                                      }\n                                                      > \n                                          </TextField> \n                                        </span>  \n                            </li>\n\n                            <li className={classes.li}>\n                                <span className={classes.infoTitle}>PASSPORT NO.</span>\n                                <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.passportNumber?.toUpperCase()}</span>  \n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                        <TextField \n                                                      fullWidth\n                                                      className={classes.TextBox} \n                                                      value={passport}\n                                                      onChange = {passportChanged}\n                                                      inputProps= {{\n                                                          style:{\n                                                            padding: 0\n                                                          }\n                                                        }\n                                                      }\n                                                      > \n                                          </TextField> \n                                        </span>  \n                            </li>\n\n                            <li className={classes.li}>\n                                <span className={classes.infoTitle}>SECOND PASSPORT NO.</span> \n                                        <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.passportNumber2?.toUpperCase()}</span>  \n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                        <TextField \n                                                      fullWidth\n                                                      className={classes.TextBox} \n                                                      value={passport2}\n                                                      onChange = {passport2Changed}\n                                                      inputProps= {{\n                                                          style:{\n                                                            padding: 0\n                                                          }\n                                                        }\n                                                      }\n                                                      > \n                                          </TextField> \n                                        </span>   \n                            </li>\n\n                            <li className={classes.li}>\n                                <span className={classes.infoTitle}>REQUEST FOR CERTIFICATE</span> \n                                <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.certificate ? ( <CheckIcon className={classes.checkIcon}/> ) :  <CloseIcon className={classes.closeIcon}/> }</span>\n                                <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                    <FormControlLabel className={classes.formControl} \n                                          control={<Checkbox className={classes.formControl}  color=\"secondary\" name=\"certificate\" checked={certificate} onChange={certificateChanged} />}\n                                          label=''\n                                        />\n                                </span>    \n                            </li>\n                            <li className={classes.li}>\n                                <span className={classes.infoTitle}>REQUEST FOR ANTIBODY TEST</span>\n                                <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.antiBodyTest ? <CheckIcon className={classes.checkIcon}/> :  <CloseIcon className={classes.closeIcon}/> }</span>  \n                                <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                    <FormControlLabel className={classes.formControl} \n                                          control={<Checkbox className={classes.formControl}  color=\"secondary\" name=\"certificate\" checked={antiBodyTest} onChange={antiBodyTestChanged} />}\n                                          label=''\n                                        />\n                                </span>   \n                            </li>\n                            <li className={classes.li}>\n                                <span className={classes.infoTitle}>STATUS</span> \n                                {getStatusLabel(person.status)} \n                                \n                                {person.status === \"sample_taken\" &&\n                                          !(\n                                            editMode.edit && editMode.person._id === person._id\n                                          ) && (\n                                            <Button \n                                                  variant=\"outlined\"\n                                                  color=\"primary\"\n                                                  disabled = {saving}\n                                                  onClick = {event => changeBackToBookingMade(event,person._id)}\n\n                                                    >\n                                              Change Back To Booking Made\n                                            </Button>\n                                          )}\n\n                            </li>\n      \n                            <li className={classes.li}>\n                                <span className={classes.infoTitle}>TOTAL CHARGES</span> <span className={calculatePrice(person) <= 199 ? classes.infoDataCharges : classes.infoDataChargesHigher}>{`£${calculatePrice(person)}`}</span>  \n                            </li>\n\n                            <li  hidden={person.deleted} >\n                                 <Button\n                                    startIcon = {<PrintIcon/>}\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"outlined\"\n                                    color=\"primary\"\n                                    onClick = {() => {downloadForm1(person._id)}}\n                                    // onTouchTap = {() => {downloadForm1(person._id)}}\n                                    className={classes.DownloadForm}\n                                 >\n                                    Download Registration Form\n                                </Button>\n                            </li>\n\n                            <li  hidden={person.deleted}>\n                                  <Button\n                                    startIcon = {<PrintIcon/>}\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"outlined\"\n                                    color=\"primary\"\n                                    onClick = {() => {downloadForm2(person._id)}}\n                                    // onTouchTap = {() => {downloadForm2(person._id)}}\n                                    className={classes.DownloadForm}\n                                    >\n                                    Download Lab Form\n                                 </Button>\n                            </li>\n\n                            <li hidden={ person.deleted || (person.status !== 'report_sent' && person.status !== 'report_cert_sent') }>\n                                 <Button\n                                    startIcon = {<PrintIcon/>}\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"outlined\"\n                                    color=\"primary\"\n                                    onClick = {() => {downloadLabResults(person._id)}}\n                                    // onTouchTap = {() => {downloadForm1(person._id)}}\n                                    className={classes.DownloadForm}\n                                 >\n                                    Download Lab Results\n                                </Button>\n                            </li>\n\n                            <li hidden={person.deleted || person.status !== 'report_cert_sent'}>\n                                 <Button\n                                    startIcon = {<PrintIcon/>}\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"outlined\"\n                                    color=\"primary\"\n                                    onClick = {() => {downloadCertificate(person._id)}}\n                                    // onTouchTap = {() => {downloadForm1(person._id)}}\n                                    className={classes.DownloadForm}\n                                 >\n                                    Download Certificate\n                                </Button>\n                            </li>\n\n                        </ul>\n\n                    </AccordionDetails>\n                    </Accordion>\n                </div>\n            </Grid> \n          ))}\n    </Grid>\n    </React.Fragment>\n  );\n}\n","import React, { useEffect } from 'react';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport GlobalState from './../GlobalState';\nimport Alert from '@material-ui/lab/Alert';\nimport PropTypes from 'prop-types';\nimport MaskedInput from 'react-text-mask';\nimport { FormControl, Grid, Input, InputLabel } from '@material-ui/core';\nimport BookService from './services/BookService';\nimport PersonsBox from './PersonsBox';\n\n\nconst isBoolean = (param) => typeof(param) === \"boolean\"\n\nconst useFocus = (initialFocus = false, id = \"\") => {\n    const [focus, setFocus] = React.useState(initialFocus)\n    const setFocusWithTrueDefault = (param) => setFocus(isBoolean(param)? param : true)\n    return ([\n        setFocusWithTrueDefault, {\n            autoFocus: focus,\n            key: `${id}${focus}`,\n            onFocus: () => setFocus(true),\n            onBlur: () => setFocus(false),\n        },\n    ])\n}\n\n\nfunction TextMaskCustom(props) {\n    const { inputRef, ...other } = props;\n  \n    return (\n      <MaskedInput\n        {...other}\n        ref={(ref) => {\n          inputRef(ref ? ref.inputElement : null);\n        }}\n        mask={[/\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/]}\n        // placeholderChar={'\\u2000'}\n        showMask\n      />\n    );\n  }\n  \n  TextMaskCustom.propTypes = {\n    inputRef: PropTypes.func.isRequired,\n  };\n\n\n\nconst useStyles = makeStyles((theme) => ({\n\n    root: {\n        width: '100%',\n        '& > * + *': {\n          marginTop: theme.spacing(2),\n        },\n        marginTop: \"20px\"\n      },  \n\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n\n    Find: {\n        width: \"80px\"\n    },\n\n    Clear:{\n        marginRight: \"20px\"\n    },\n\n    title:{\n        marginTop : \"20px\"\n    },\n\n    TextBox:{\n        marginTop: \"30px\",\n        \"& > *\" :\n        {\n            textAlign: \"center\"\n        },\n  \n    },\n\n    TextField:{\n\n    },\n\n    NoRecordsFound:{\n        marginTop: \"20px\",\n        color: \"red\",\n        fontWeight: \"600\",\n        fontSize: \"14px\",\n    },\n\n    PersonsBox:{\n        marginTop : \"20px\",\n        marginBottom: \"50px\"\n    }\n\n}));\n\nexport default function FindByRef() {\n  const classes = useStyles();\n  const [state, setState] = React.useContext(GlobalState);\n  \n  const [setFocus, focusProps] = useFocus(true);\n\n//   useEffect( () =>\n//   {\n//      findRecords();\n//   }, [state.findRecords]);\n\n useEffect ( () => {\n    setState(state => ({...state, foundRecords : []}));\n }, [])\n\n  useEffect( () => {\n    BookService.getBookingsByRef(state.ref).then( (res)=>\n    {\n        if (res.data.length > 0)\n        {\n            setState(state => ({...state, foundRecords : res.data}));\n        }\n    });\n    }, [state.RefreshPersonInfo]);\n\n    const handleChange = (event) =>\n    {\n        setState(state => ({...state, ref : event.target.value}));\n        setState(state => ({...state, refError : false})); \n    }\n\n    const clearField = () =>\n    {\n        setState(state => ({...state, refError : false})); \n        setState(state => ({...state, ref : '___-___-___'}));\n        setState(state => ({...state, foundRecords : []}));\n        setFocus();\n    }\n\n    const findRecords = () =>\n    {\n        if (!state.ref || state.ref.indexOf('_') >= 0)\n        {\n            setState(state => ({...state, refError : true}));  \n            return;\n        }\n\n        setState(state => ({...state, submiting : true}));\n        setState(state => ({...state, foundRecords : []}));\n\n        BookService.getBookingsByRef(state.ref).then( (res)=>\n        {\n            setState(state => ({...state, submiting : false}));\n            if (res.data.length > 0)\n            {\n                setState(state => ({...state, foundRecords : res.data}));\n            }\n            else\n            {\n                setState(state => ({...state, foundRecords : null}));\n            }\n            \n            console.log(res.data);\n\n        }).catch( (err) =>\n        {\n            console.log(err);\n            setState(state => ({...state, submiting : false}));\n        });\n    }\n\n  return (\n    <React.Fragment>\n        <CssBaseline />\n        <div className={classes.title}>\n            <Typography component=\"h6\" variant=\"h6\" align=\"center\">\n                Find Booking Appoinments\n            </Typography>  \n        </div> \n\n        <Grid container direction=\"column\" spacing={1} justify=\"flex-start\"  alignItems=\"center\">\n\n        <Grid item xs={12} md={12}>\n            <FormControl className={classes.TextBox}>\n                <TextField\n                    {...focusProps}\n                    autoFocus \n                    pattern=\"[0-9]*\"\n                    error = {state.refError ? true : false} \n                    value = {state.ref}\n                    className = {classes.TextField}\n                    width = \"50px\"\n                    onChange={handleChange}\n                    label=\"Reference No.\"\n                    helperText=\"Enter Your 9-digits Reference No.\"\n                    name=\"refNo\"\n                    id=\"refNo\"\n                    variant=\"outlined\"\n                    \n                    size=\"medium\"\n                    margin=\"normal\"\n                    fullWidth = {true}\n                    InputProps={{\n                        inputComponent: TextMaskCustom,\n                        style: { textAlign: 'center', fontSize:\"24px\", width: \"210px\", paddingLeft: \"20px\" }\n                    }}\n\n                    onKeyPress= {event => {\n                        if (event.key === 'Enter') {\n                            findRecords();\n                        }\n                      }}\n                />         \n            </FormControl>\n        </Grid>\n\n        <Grid item xs={12} md={12}>\n               \n                <Button\n                    disabled = {state.submiting}\n                    color=\"default\"\n                    onClick = {clearField}\n                    onTouchTap = {clearField}\n                    className={classes.Clear}\n                >\n                    Clear \n                </Button>  \n            \n                <Button\n                    type=\"button\"\n                    disabled = {state.submiting}\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick = {findRecords}\n                    onTouchTap = {findRecords}\n                    className={classes.Find}\n                >\n                    Find \n                </Button>  \n        </Grid>\n\n        <Grid item xs={12} md={12}>\n\n                    \n\n            {state.foundRecords && state.foundRecords.length > 0 && (\n                <React.Fragment>\n\n                    <div className={classes.PersonsBox}>\n                          <PersonsBox/>\n                    </div>\n                    \n\n\n                </React.Fragment>\n            )}   \n\n            {!state.foundRecords && (\n                <React.Fragment>\n\n                <div className={classes.root}>\n                    <Alert severity=\"error\"> <strong>No Records Found !</strong> <br/> Please check you reference number again.</Alert>\n                </div> \n                   \n                </React.Fragment>\n            )}\n\n        </Grid>\n        \n        \n        </Grid>\n        \n    </React.Fragment>\n   \n  );\n}","import React, { useEffect, useRef, useState } from \"react\";\nimport BookService from \"./services/BookService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {\n  Button,\n  Checkbox,\n  Divider,\n  FormControlLabel,\n  Grid,\n  Link,\n  makeStyles,\n  TextField,\n  Tooltip,\n} from \"@material-ui/core\";\nimport GlobalState from \"./../GlobalState\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport SendIcon from \"@material-ui/icons/Send\";\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\n\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Draggable from \"react-draggable\";\nimport Paper from \"@material-ui/core/Paper\";\n\nimport Alert from \"@material-ui/lab/Alert\";\n\nimport PropTypes from \"prop-types\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport Box from \"@material-ui/core/Box\";\n\nvar interval;\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    marginTop: theme.spacing(0),\n    marginBottom: theme.spacing(1),\n  },\n\n  refreshButton: {\n    marginLeft: theme.spacing(2),\n  },\n\n  checkIcon: {\n    color: \"green\",\n  },\n\n  closeIcon: {\n    color: \"red\",\n  },\n\n  RefLink: {\n    cursor: \"pointer\",\n  },\n\n  BookedLabel: {\n    backgroundColor: \"#606060\",\n    color: \"#fff\",\n    paddingRight: \"10px\",\n    paddingLeft: \"10px\",\n  },\n\n  PatientAttendedLabel: {\n    backgroundColor: \"#0066aa\",\n    color: \"#fff\",\n    paddingRight: \"15px\",\n    paddingLeft: \"10px\",\n  },\n\n  SampleTakenLabel: {\n    backgroundColor: \"#0066cc\",\n    color: \"#fff\",\n    paddingRight: \"40px\",\n    paddingLeft: \"10px\",\n  },\n\n  ReportSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"90px\",\n    paddingLeft: \"10px\",\n  },\n\n  ReportCertSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"68px\",\n    paddingLeft: \"10px\",\n  },\n\n  archiveButton: {},\n\n  smartMatchButton: {\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    marginRight: \"10px\",\n    // padding: \"10px\"\n  },\n\n  infoTitle: {\n    fontWeight: \"400\",\n  },\n\n  infoData: {\n    paddingLeft: \"10px\",\n    fontWeight: \"800\",\n  },\n\n  matchButton: {\n    marginTop: \"30px\",\n    marginBottom: \"20px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  resendButton: {\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  resendFilesButton: {\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n    backgroundColor: \"#3792ad\",\n    \"&:hover\": {\n      background: \"#2f798f\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  cancelButton: {\n    marginBottom: \"10px\",\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"90px\",\n    paddingRight: \"90px\",\n  },\n}));\n\nconst BorderLinearProgress = withStyles((theme) => ({\n  root: {\n    height: 10,\n    borderRadius: 5,\n  },\n  colorPrimary: {\n    backgroundColor: \"#cedbce\", //theme.palette.grey[theme.palette.type === 'light' ? 200 : 700],\n  },\n  bar: {\n    borderRadius: 5,\n    backgroundColor: \"#2f942e\",\n  },\n}))(LinearProgress);\nfunction LinearProgressWithLabel(props) {\n  return (\n    <Box display=\"flex\" alignItems=\"center\">\n      <Box width=\"100%\" mr={1}>\n        <BorderLinearProgress variant=\"determinate\" {...props} />\n      </Box>\n      <Box minWidth={35}>\n        <Typography\n          style={{ fontWeight: \"800\", color: \"#5e855e\" }}\n          variant=\"body2\"\n          color=\"textSecondary\"\n        >{`${Math.round(props.value)}%`}</Typography>\n      </Box>\n    </Box>\n  );\n}\n\nLinearProgressWithLabel.propTypes = {\n  /**\n   * The value of the progress indicator for the determinate and buffer variants.\n   * Value between 0 and 100.\n   */\n  value: PropTypes.number.isRequired,\n};\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable\n      handle=\"#draggable-dialog-title\"\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\n    >\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nexport default function ResendEmailsDialog(props) {\n  const classes = useStyles();\n\n  const [state, setState] = React.useContext(GlobalState);\n\n  const [sending, setSending] = React.useState(false);\n  const [sent, setSent] = React.useState(false);\n\n  const [sendJustToPCR, setSendJustToPCR] = React.useState(false);\n\n  const [sendingStatus, setSendingStatus] = React.useState(\"\");\n\n  const [sendingProgress, setSendingProgress] = React.useState(10);\n\n  const [error, setError] = React.useState(false);\n\n  const getProgress = (status) => {\n    console.log(`status : ${status}`);\n\n    if (status === \"downloadFailed\") return 10;\n    else if (status === \"downloading\") return 30;\n    else if (status === \"downloadSuccess\") return 70;\n    else if (status === \"sent\") return 100;\n    else return 0;\n  };\n\n  const handleClose = () => {\n    setSending(false);\n    setSent(false);\n    setError(false);\n    clearInterval(interval);\n    props.handleClose();\n  };\n\n  useEffect(() => {\n    setSendingProgress((prevProgress) =>\n      prevProgress >= 100 ? 100 : getProgress(sendingStatus)\n    );\n  }, [sendingStatus]);\n\n  const resendFilesClicked = (event) => {\n    setSending(true);\n    setSendingProgress(0);\n    setSendingStatus(\"downloadFailed\");\n    setSendJustToPCR(true);\n\n    BookService.regenerateFilesWithBookingId(props.booking._id)\n      .then((res) => {\n        interval = setInterval(() => {\n          BookService.getLinkDetailsWithBookingId(props.booking._id).then(\n            (res) => {\n              if (res.data.status === \"OK\") {\n                setSendingStatus(res.data.link.status);\n\n                if (res.data.link.status === \"sent\") {\n                  setSending(false);\n                  setSent(true);\n                  clearInterval(interval);\n                }\n              } else if (res.data.status === \"FAILED\") {\n                setSending(false);\n                setSent(false);\n                clearInterval(interval);\n                setError(true);\n              }\n            }\n          );\n        }, 1000);\n\n        setTimeout(() => {\n          setError(true);\n          clearInterval(interval);\n        }, 60000);\n      })\n      .catch((err) => {\n        console.log(err);\n        setSending(false);\n      });\n  };\n\n  const resendEmailsClicked = (event) => {\n    setSending(true);\n    setSendingProgress(0);\n    setSendingStatus(\"downloadFailed\");\n\n    BookService.resendEmailsWithBookingId(props.booking._id)\n      .then((res) => {\n        interval = setInterval(() => {\n          BookService.getLinkDetailsWithBookingId(props.booking._id).then(\n            (res) => {\n              if (res.data.status === \"OK\") {\n                setSendingStatus(res.data.link.status);\n\n                if (res.data.link.status === \"sent\") {\n                  setSending(false);\n                  setSent(true);\n                  clearInterval(interval);\n                }\n              } else if (res.data.status === \"FAILED\") {\n                setSending(false);\n                setSent(false);\n                clearInterval(interval);\n                setError(true);\n              }\n            }\n          );\n        }, 1000);\n\n        setTimeout(() => {\n          setError(true);\n          clearInterval(interval);\n        }, 60000);\n      })\n      .catch((err) => {\n        console.log(err);\n        setSending(false);\n      });\n  };\n\n  const cancelResendEmailsClicked = (event) => {\n    props.handleClose();\n  };\n\n  return (\n    <React.Fragment>\n      {props.booking && (\n        <React.Fragment>\n          <Dialog\n            maxWidth=\"md\"\n            open={props.open}\n            onClose={handleClose}\n            PaperComponent={PaperComponent}\n            aria-labelledby=\"form-dialog-title\"\n          >\n            <DialogTitle id=\"draggable-dialog-title\">\n              <Grid\n                container\n                spacing={2}\n                direction=\"row\"\n                justify=\"center\"\n                alignItems=\"center\"\n              >\n                <Grid item>\n                  <SendIcon style={{ color: \"#2f942e\", fontSize: \"2rem\" }} />\n                </Grid>\n\n                <Grid item>\n                  <div\n                    style={{\n                      color: \"#2f942e\",\n                      paddingBottom: \"12px\",\n                      fontWeight: \"800\",\n                    }}\n                  >\n                    {\" \"}\n                    RESEND EMAILS{\" \"}\n                  </div>\n                </Grid>\n              </Grid>\n\n              <Divider />\n            </DialogTitle>\n            <DialogContent>\n              <div\n                style={{\n                  height: \"230px\",\n                }}\n              >\n                <Grid\n                  container\n                  direction=\"column\"\n                  justify=\"center\"\n                  spacing={1}\n                  alignItems=\"center\"\n                >\n                  {!sent && !sending && (\n                    <React.Fragment>\n                      <Grid item>\n                        <div\n                          style={{\n                            paddingTop: \"5px\",\n                            fontSize: \"1rem\",\n                            fontWeight: \"500\",\n                            color: \"#555\",\n                          }}\n                        >\n                          Do you want to Resend the LAB Report{\" \"}\n                          {props.booking.certificate ? \" and Certificate\" : \"\"}{\" \"}\n                          Now?\n                        </div>\n                      </Grid>\n\n                      <Grid item>\n                        <Button\n                          disabled={sending || sent}\n                          className={classes.resendButton}\n                          variant=\"contained\"\n                          color=\"primary\"\n                          onClick={resendEmailsClicked}\n                        >\n                          YES ! RESEND THE EMAILS\n                        </Button>\n                      </Grid>\n\n                      <Grid item>\n                        <Button\n                          disabled={sending || sent}\n                          className={classes.cancelButton}\n                          variant=\"contained\"\n                          color=\"default\"\n                          onClick={cancelResendEmailsClicked}\n                        >\n                          NO ! NOT NOW\n                        </Button>\n                      </Grid>\n\n                      <Grid item>\n                        <Button\n                          disabled={sending || sent}\n                          className={classes.resendFilesButton}\n                          variant=\"contained\"\n                          color=\"primary\"\n                          onClick={resendFilesClicked}\n                        >\n                          Just Generate The Files and send to\n                          pcrresults@medicalexpressclinic.co.uk\n                        </Button>\n                      </Grid>\n                    </React.Fragment>\n                  )}\n\n                  {error && !sending && !sent && (\n                    <Grid item>\n                      <Alert\n                        style={{\n                          marginTop: \"10px\",\n                          paddingLeft: \"50px\",\n                          paddingRight: \"50px\",\n                        }}\n                        severity=\"error\"\n                      >\n                        Error! — Something is wrong with this record!\n                      </Alert>\n                    </Grid>\n                  )}\n\n                  {(sending || sent) && (\n                    <Grid item>\n                      <div\n                        style={{\n                          paddingTop: \"50px\",\n                          color: \"#2f942e\",\n                          fontWeight: \"600\",\n                          fontSize: \"1rem\",\n                        }}\n                      >\n                        {sending && !sent && \"Sending ...\"}\n\n                        {sent && !sendJustToPCR && (\n                          <Alert\n                            style={{\n                              marginTop: \"10px\",\n                              paddingLeft: \"50px\",\n                              paddingRight: \"50px\",\n                            }}\n                            severity=\"success\"\n                          >\n                            Success! — The LAB Report{\" \"}\n                            {props.booking.certificate\n                              ? \" and Certificate \"\n                              : \" \"}{\" \"}\n                            Successfully Sent.\n                          </Alert>\n                        )}\n\n                        {sent && sendJustToPCR && (\n                          <Alert\n                            style={{\n                              marginTop: \"10px\",\n                              paddingLeft: \"50px\",\n                              paddingRight: \"50px\",\n                            }}\n                            severity=\"success\"\n                          >\n                            Success! — The LAB Report{\" \"}\n                            {props.booking.certificate\n                              ? \" and Certificate \"\n                              : \" \"}{\" \"}\n                            Successfully Sent Just to\n                            pcrresults@medicalexpressclinic.co.uk .\n                          </Alert>\n                        )}\n                      </div>\n                    </Grid>\n                  )}\n                </Grid>\n\n                {(sending || sent) && (\n                  <React.Fragment>\n                    <div\n                      style={{\n                        marginTop: \"10px\",\n                        width: \"50%\",\n                        marginLeft: \"27%\",\n                      }}\n                    >\n                      <LinearProgressWithLabel\n                        variant=\"determinate\"\n                        color=\"primary\"\n                        value={sendingProgress}\n                      />\n                    </div>\n\n                    <div\n                      style={{\n                        paddingTop: \"30px\",\n                        color: \"#2f942e\",\n                        fontWeight: \"600\",\n                        fontSize: \"1rem\",\n                        marginLeft: \"45%\",\n                      }}\n                    >\n                      {sending && !sent && \"PLEASE WAIT ...\"}\n                    </div>\n                  </React.Fragment>\n                )}\n              </div>\n            </DialogContent>\n          </Dialog>\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n}\n","export const corporates = [\n    'Visa Medical'\n]","import React, {useEffect, useRef, useState} from 'react';\nimport BookService from './services/BookService';\nimport Typography from '@material-ui/core/Typography';\nimport { Backdrop, Button, Checkbox, CircularProgress, Divider, FormControlLabel, Grid, InputLabel, Link, makeStyles, MenuItem, Select, TextField, Tooltip } from '@material-ui/core';\nimport GlobalState from './../GlobalState';\nimport { withStyles } from '@material-ui/core/styles';\n\n\nimport CreditCardIcon from '@material-ui/icons/CreditCard';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\n\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Draggable from 'react-draggable';\nimport Paper from '@material-ui/core/Paper';\n\nimport Alert from '@material-ui/lab/Alert';\n\nimport PropTypes from 'prop-types';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Box from '@material-ui/core/Box';\n\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport { corporates } from './Corporates';\n\nvar interval;\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    marginTop: theme.spacing(0),\n    marginBottom: theme.spacing(1),\n\n  },\n  \n  refreshButton:{\n    marginLeft: theme.spacing(2),\n  },\n\n  checkIcon:{\n    color: \"green\"\n  },\n\n  closeIcon:{\n    color: \"red\"\n  },\n\n  RefLink: {\n    cursor: \"pointer\"\n  },\n\n  BookedLabel:{\n    backgroundColor: \"#606060\",\n    color: \"#fff\",\n    paddingRight: \"10px\",\n    paddingLeft: \"10px\"\n  },\n\n  PatientAttendedLabel:{\n    backgroundColor: \"#0066aa\",\n    color: \"#fff\",\n    paddingRight: \"15px\",\n    paddingLeft: \"10px\"\n  },\n\n  SampleTakenLabel:{\n    backgroundColor: \"#0066cc\",\n    color: \"#fff\",\n    paddingRight: \"40px\",\n    paddingLeft: \"10px\"\n  },\n\n  ReportSentLabel:{\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"90px\",\n    paddingLeft: \"10px\"\n  },\n\n  ReportCertSentLabel:{\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"68px\",\n    paddingLeft: \"10px\"\n  },\n\n  archiveButton: {\n\n  },\n\n  smartMatchButton: {\n    backgroundColor : \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\"\n    },\n    textDecoration : \"none !important\",\n    marginRight : \"10px\"\n    // padding: \"10px\"  \n  },\n\n  infoTitle:  {\n    fontWeight: \"400\"\n  },\n\n  infoData: {\n    paddingLeft: \"10px\",\n    fontWeight: \"800\"\n  },\n\n  matchButton:\n  {\n    marginTop: \"30px\",\n    marginBottom : \"20px\",\n    backgroundColor : \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\"\n    },\n    textDecoration : \"none !important\",\n    padding: \"10px\",\n    paddingLeft : \"50px\",\n    paddingRight: \"50px\"   \n  },\n\n  resendButton:\n  {\n    marginTop: \"5px\",\n    marginBottom : \"5px\",\n    backgroundColor : \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\"\n    },\n    textDecoration : \"none !important\",\n    padding: \"10px\",\n    paddingLeft : \"50px\",\n    paddingRight: \"50px\"   \n  },\n\n  resendFilesButton:{\n    marginTop: \"5px\",\n    marginBottom : \"5px\",\n    backgroundColor : \"#3792ad\",\n    \"&:hover\": {\n      background: \"#2f798f\",\n      color: \"#fff\"\n    },\n    textDecoration : \"none !important\",\n    padding: \"10px\",\n    paddingLeft : \"50px\",\n    paddingRight: \"50px\"   \n  },\n\n  cancelButton:\n  {\n    marginBottom : \"10px\",\n    textDecoration : \"none !important\",\n    padding: \"10px\",\n    paddingLeft : \"90px\",\n    paddingRight: \"90px\"   \n  },\n  \n  backdrop: {\n    zIndex: theme.zIndex.drawer + 5,\n    color: \"#fff\",\n  },\n  \n}));\n\nconst BorderLinearProgress = withStyles((theme) => ({\n  root: {\n    height: 10,\n    borderRadius: 5,\n  },\n  colorPrimary: {\n    backgroundColor: \"#cedbce\" //theme.palette.grey[theme.palette.type === 'light' ? 200 : 700],\n  },\n  bar: {\n    borderRadius: 5,\n    backgroundColor: '#2f942e',\n  },\n}))(LinearProgress);\nfunction LinearProgressWithLabel(props) {\n  return (\n    <Box display=\"flex\" alignItems=\"center\">\n      <Box width=\"100%\" mr={1}>\n        <BorderLinearProgress variant=\"determinate\" {...props} />\n      </Box>\n      <Box minWidth={35}>\n        <Typography style={{fontWeight:\"800\", color :  \"#5e855e\"  }} variant=\"body2\" color=\"textSecondary\">{`${Math.round(\n          props.value,\n        )}%`}</Typography>\n      </Box>\n    </Box>\n  );\n}\n\nLinearProgressWithLabel.propTypes = {\n  /**\n   * The value of the progress indicator for the determinate and buffer variants.\n   * Value between 0 and 100.\n   */\n  value: PropTypes.number.isRequired,\n};\n\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'}>\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\n\n\nexport default function PayDialog(props) {\n  \n  const classes = useStyles();\n\n  const [state, setState] = React.useContext(GlobalState);  \n  const [paymentMethod, setPaymentMethod] = useState('credit card');\n  const [corporate, setCorporate] = useState(corporates[0]);\n  const [saving, setSaving] = useState(false);\n\n  const paymentMethodChanged = (event) =>\n  {\n    setPaymentMethod(event.target.value);\n  }\n\n  const handleClose = () =>\n  {\n      if (saving)\n        return;\n\n      props.handleClose();  \n      setPaymentMethod('credit card');\n      setCorporate(corporates[0]);\n      setSaving(false);\n  }\n\n  const corporateChanged = (event) =>\n  {\n    setCorporate(event.target.value);\n  }\n\n  const payClicked = async () =>\n  {\n    setSaving(true);\n\n    try\n    {\n         await BookService.payBooking(props.booking._id,paymentMethod, paymentMethod === 'corporate' ? corporate : '');\n         setSaving(false);\n         setState(state => ({...state, bookingPayChanged : !state.bookingPayChanged ? true : false}));\n         handleClose();\n    }\n    catch(err)\n    {\n        console.error(err);\n        setSaving(false);\n    }\n\n  }\n\n\n  return (\n    <React.Fragment>\n\n        {props.booking && ( \n\n                <React.Fragment>\n<Dialog\nmaxWidth=\"800px\"\nopen={props.open}\nonClose={handleClose}\nPaperComponent={PaperComponent}\naria-labelledby=\"form-dialog-title\"\n>\n<DialogTitle id=\"draggable-dialog-title\">\n  <Grid\n    container\n    spacing={2}\n    direction=\"row\"\n    justify=\"center\"\n    alignItems=\"center\"\n  >\n    <Grid item>\n      <CreditCardIcon\n        style={{ color: \"#f50057\", fontSize: \"3rem\" }}\n      />\n    </Grid>\n\n    <Grid item>\n      <div\n        style={{\n          color: \"#f50057\",\n          paddingBottom: \"10px\",\n          fontWeight: \"800\",\n        }}\n      >\n        {\" \"}\n        PAY the CHARGE{\" \"}\n      </div>\n    </Grid>\n  </Grid>\n\n  <Divider />\n</DialogTitle>\n<DialogContent>\n  <div\n    style={{\n      height: \"270px\",\n    \n    }}\n  >\n        <Grid\n          container\n          direction=\"column\"\n          justify=\"space-between\"\n          spacing = {2}\n          alignItems=\"flex-start\"\n        >\n            <Grid item>\n               <div style={{fontSize: \"17px\"}}> How do you want to pay? </div> \n            </Grid>\n\n            <Grid item>\n      \n            <FormControl component=\"fieldset\">\n                \n                <RadioGroup aria-label=\"paymentMethod\" name=\"paymentMethod\" value={paymentMethod} onChange={paymentMethodChanged}>\n                    <FormControlLabel value=\"credit card\" control={<Radio />} label=\"Credit Card\" />\n                    <FormControlLabel value=\"cash\" control={<Radio />} label=\"Cash\" />\n                    <FormControlLabel value=\"corporate\" control={<Radio />} label=\"Corporate\" />\n                </RadioGroup>\n\n                { paymentMethod === 'corporate' && (\n\n                        <FormControl style={{marginTop: \"10px\"}} className={classes.formControl}>\n                        <Select\n                            labelId=\"select-corporate\"\n                            id=\"select-corporate-id\"\n                            value={corporate}\n                            onChange={corporateChanged}\n                        >\n                        {\n                        corporates.map(element => (\n                                    <MenuItem value={element}>{`${element}`}</MenuItem>\n                        ))\n                        }     \n\n                        </Select>\n                    </FormControl>\n\n                )}\n              \n\n                </FormControl>\n            </Grid>\n\n\n        </Grid>\n\n        <Grid item>\n           \n    </Grid>\n\n    <div style={{position:\"absolute\", bottom:\"20px\", right:\"20px\"}}>\n            <Grid\n                container\n                direction=\"row\"\n                justify=\"flex-end\"\n                alignItems=\"center\"\n                spacing = {1}\n            >\n               \n                <Grid item>\n                    <Button onClick={handleClose}  style= {{width : '100px'}} disabled={saving}>\n                        back\n                    </Button>\n                        \n                </Grid>\n                <Grid item>\n                    <Button \n                        onClick = {payClicked}\n                        variant=\"contained\"\n                        color=\"secondary\"\n                        style= {{width : '100px'}}\n                        disabled={saving}\n                    >\n                        Pay\n                    </Button>\n                </Grid>  \n          </Grid>\n\n    </div>\n\n    \n  </div>\n\n             <Backdrop\n                className={classes.backdrop}\n                open={saving}\n              >\n                <CircularProgress color=\"inherit\" />\n              </Backdrop>\n\n</DialogContent>\n</Dialog>\n\n\n\n\n</React.Fragment>\n\n\n        )}\n  \n    </React.Fragment>\n  );\n}","import React, { useEffect, useRef, useState } from \"react\";\nimport BookService from \"./services/BookService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {\n  Button,\n  Checkbox,\n  DialogActions,\n  Divider,\n  FormControlLabel,\n  Grid,\n  Link,\n  makeStyles,\n  TextField,\n  Tooltip,\n} from \"@material-ui/core\";\nimport GlobalState from \"./../GlobalState\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport SendIcon from \"@material-ui/icons/Send\";\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\n\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Draggable from \"react-draggable\";\nimport Paper from \"@material-ui/core/Paper\";\n\nimport HistoryIcon from \"@material-ui/icons/History\";\nimport dateformat from \"dateformat\";\n\nconst addMinutes = (date, minutes) => {\n  date = new Date(date);\n  return new Date(date.getTime() + minutes * 60 * 1000);\n};\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    marginTop: theme.spacing(0),\n    marginBottom: theme.spacing(1),\n  },\n\n  refreshButton: {\n    marginLeft: theme.spacing(2),\n  },\n\n  checkIcon: {\n    color: \"green\",\n  },\n\n  closeIcon: {\n    color: \"red\",\n  },\n\n  RefLink: {\n    cursor: \"pointer\",\n  },\n\n  BookedLabel: {\n    backgroundColor: \"#606060\",\n    color: \"#fff\",\n    paddingRight: \"10px\",\n    paddingLeft: \"10px\",\n  },\n\n  PatientAttendedLabel: {\n    backgroundColor: \"#0066aa\",\n    color: \"#fff\",\n    paddingRight: \"15px\",\n    paddingLeft: \"10px\",\n  },\n\n  SampleTakenLabel: {\n    backgroundColor: \"#0066cc\",\n    color: \"#fff\",\n    paddingRight: \"40px\",\n    paddingLeft: \"10px\",\n  },\n\n  ReportSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"90px\",\n    paddingLeft: \"10px\",\n  },\n\n  ReportCertSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"68px\",\n    paddingLeft: \"10px\",\n  },\n\n  archiveButton: {},\n\n  smartMatchButton: {\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    marginRight: \"10px\",\n    // padding: \"10px\"\n  },\n\n  infoTitle: {\n    fontWeight: \"400\",\n  },\n\n  infoData: {\n    paddingLeft: \"10px\",\n    fontWeight: \"800\",\n  },\n\n  matchButton: {\n    marginTop: \"30px\",\n    marginBottom: \"20px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  resendButton: {\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  resendFilesButton: {\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n    backgroundColor: \"#3792ad\",\n    \"&:hover\": {\n      background: \"#2f798f\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  cancelButton: {\n    marginBottom: \"10px\",\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"90px\",\n    paddingRight: \"90px\",\n  },\n\n  itemTitle: {\n    fontWeight: \"500\",\n    color: \"#555\",\n  },\n\n  itemData: {\n    paddingLeft: \"10px\",\n    fontWeight: \"600\",\n    color: \"#127512\",\n  },\n}));\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable\n      handle=\"#draggable-dialog-title\"\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\n    >\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nexport default function TimeStampDialog(props) {\n  const classes = useStyles();\n\n  const [state, setState] = React.useContext(GlobalState);\n\n  const [linkTimeStamp, setLinkTimeStamp] = React.useState(null);\n\n  const handleClose = () => {\n    setLinkTimeStamp(null);\n\n    props.handleClose();\n  };\n\n  useEffect(() => {\n    if (props.booking) {\n      if (props.booking.filename && props.booking.filename.length > 0) {\n        BookService.getLinkDetailsWithBookingId(props.booking._id).then(\n          (res) => {\n            if (res.data.status === \"OK\") {\n              setLinkTimeStamp(res.data.link.timeStamp);\n            }\n          }\n        );\n      }\n    }\n  }, [props.booking]);\n\n  const getDateFromBooking = (booking) => {\n    let date = new Date(booking.bookingDate);\n    date.setHours(booking.bookingTimeNormalized.substr(0, 2));\n    date.setMinutes(booking.bookingTimeNormalized.substr(3, 2));\n    date.setSeconds(0);\n    date.setMilliseconds(0);\n    return date;\n  };\n\n  return (\n    <React.Fragment>\n      {props.booking && (\n        <React.Fragment>\n          <Dialog\n            maxWidth=\"sm\"\n            open={props.open}\n            onClose={handleClose}\n            PaperComponent={PaperComponent}\n            aria-labelledby=\"form-dialog-title\"\n          >\n            <DialogTitle id=\"draggable-dialog-title\">\n              <Grid\n                container\n                spacing={2}\n                direction=\"row\"\n                justify=\"center\"\n                alignItems=\"center\"\n              >\n                <Grid item>\n                  <HistoryIcon style={{ color: \"#f50057\", fontSize: \"2rem\" }} />\n                </Grid>\n\n                <Grid item>\n                  <div\n                    style={{\n                      color: \"#f50057\",\n                      paddingBottom: \"12px\",\n                      fontWeight: \"800\",\n                    }}\n                  >\n                    {\" \"}\n                    Audit Trail{\" \"}\n                  </div>\n                </Grid>\n              </Grid>\n\n              <Divider />\n            </DialogTitle>\n            <DialogContent>\n              <div\n                style={{\n                  height: \"370px\",\n              \n                }}\n              >\n                <Grid\n                  container\n                  direction=\"column\"\n                  justify=\"flex-start\"\n                  spacing={4}\n                  alignItems=\"flex-start\"\n                >\n                  <Grid item>\n                    <span className={classes.itemTitle}>\n                      PATIENT BOOKING TIMESTAMP :{\" \"}\n                    </span>\n                    <span className={classes.itemData}>\n                      {\" \"}\n                      {dateformat(props.booking.timeStamp, \"isoDateTime\")}{\" \"}\n                    </span>\n                  </Grid>\n\n                  <Grid item>\n                    <span className={classes.itemTitle}>\n                      BOOKED DATE AND TIME :{\" \"}\n                    </span>\n                    <span className={classes.itemData}>\n                      {dateformat(\n                        getDateFromBooking(props.booking),\n                        \"isoDateTime\"\n                      )}\n                    </span>\n                  </Grid>\n\n                  <Grid item>\n                    <span className={classes.itemTitle}>\n                      TIMESTAMP ATTENDED :{\" \"}\n                    </span>\n                    {props.booking.samplingTimeStamp ? (\n                      <span className={classes.itemData}>\n                        {\" \"}\n                        {dateformat(\n                          props.booking.samplingTimeStamp,\n                          \"isoDateTime\"\n                        )}{\" \"}\n                      </span>\n                    ) : (\n                      <span className={classes.itemData}> - </span>\n                    )}\n                  </Grid>\n\n                  <Grid item>\n                    <span className={classes.itemTitle}>\n                      TIMESTAMP - SAMPLE TAKEN :{\" \"}\n                    </span>\n                    {props.booking.samplingTimeStamp ? (\n                      <span className={classes.itemData}>\n                        {\" \"}\n                        {dateformat(\n                          addMinutes(props.booking.samplingTimeStamp, 5),\n                          \"isoDateTime\"\n                        )}{\" \"}\n                      </span>\n                    ) : (\n                      <span className={classes.itemData}> - </span>\n                    )}\n                  </Grid>\n\n                  <Grid item>\n                    <span className={classes.itemTitle}>\n                      TIMESTAMP - COLLECTED BY COURIER :{\" \"}\n                    </span>\n                    {props.booking.samplingTimeStamp ? (\n                      <span className={classes.itemData}>\n                        {\" \"}\n                        {dateformat(\n                          addMinutes(props.booking.samplingTimeStamp, 35),\n                          \"isoDateTime\"\n                        )}{\" \"}\n                      </span>\n                    ) : (\n                      <span className={classes.itemData}> - </span>\n                    )}\n                  </Grid>\n\n                  <Grid item>\n                    <span className={classes.itemTitle}>\n                      TIMESTAMP - RESULTS RECEIVED :{\" \"}\n                    </span>\n                    {linkTimeStamp ? (\n                      <span className={classes.itemData}>\n                        {\" \"}\n                        {dateformat(linkTimeStamp, \"isoDateTime\")}{\" \"}\n                      </span>\n                    ) : (\n                      <span className={classes.itemData}> - </span>\n                    )}\n                  </Grid>\n\n                  <Grid item>\n                    <span className={classes.itemTitle}>\n                      TIMESTAMP - SENT TO PATIENT :{\" \"}\n                    </span>\n                    {linkTimeStamp ? (\n                      <span className={classes.itemData}>\n                        {\" \"}\n                        {dateformat(\n                          addMinutes(linkTimeStamp, 5),\n                          \"isoDateTime\"\n                        )}{\" \"}\n                      </span>\n                    ) : (\n                      <span className={classes.itemData}> - </span>\n                    )}\n                  </Grid>\n                </Grid>\n              </div>\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={handleClose} color=\"default\">\n                Back\n              </Button>\n            </DialogActions>\n          </Dialog>\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n}\n","\n\nexport const CalendarColors = {\n    PCR_COLOR : \"#4faef7\",\n    GYNAE_COLOR : \"#e83caf\",\n    GP_COLOR :  \"#ff4f14\",\n    STD_COLOR : \"#d6733a\",\n    BLOOD_COLOR: \"#dc2626\",\n    DERMA_COLOR: \"#323e9a\"\n}\n","import API from './api';\n\nexport default class InvoiceService{\n\n    static createInvoice = (payload) =>\n    {\n        return  API.post('/api/medex/invoice/createinvoice', payload)\n    }\n\n    static updateInvoice = (invoiceNumber, payload) =>\n    {\n        return  API.post(`/api/medex/invoice/updateinvoice?invoiceNumber=${invoiceNumber}`, payload)\n    }\n\n    static deleteinvoice = (invoiceNumber) =>\n    {\n        return  API.post(`/api/medex/invoice/deleteinvoice?invoiceNumber=${invoiceNumber}`)\n    }\n\n    static getInvoiceByBookingId = (bookingId) =>\n    {\n        return  API.get(`/api/medex/invoice/getinvoicebybookingid?bookingId=${bookingId}`)\n    }\n\n    static getInvoiceByInvoiceNumber = (invoiceNumber) =>\n    {\n        return  API.get(`/api/medex/invoice/getinvoicebyinvoicenumber?invoiceNumber=${invoiceNumber}`)\n    }\n\n    static getCodeDetails = (code) =>\n    {\n        return  API.post(`/api/medex/invoice/getcodedetails`, {code: code})\n    }\n\n    static getAllCodes = () =>\n    {\n        return API.get(`/api/medex/invoice/getallcodes`)\n    }\n\n    static downloadInvoice = (id) =>\n    {\n       return API.get(`/api/pdf/downloadinvoice?id=${id}`, {\n        responseType: 'arraybuffer',\n        id: id,\n        headers: {\n            Accept: 'application/pdf',\n        }\n        });\n    }\n\n    static emailInvoice = (id, email) =>\n    {\n       return API.post(`/api/pdf/emailinvoice?id=${id}&email=${email}`);\n    }\n\n}\n","import React, { useEffect, useRef, useState } from \"react\";\nimport InvoiceService from \"./services/InvoiceService\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\n\nimport {\n  Backdrop,\n  Button,\n  Checkbox,\n  CircularProgress,\n  DialogActions,\n  Divider,\n  FormControlLabel,\n  Grid,\n  IconButton,\n  InputAdornment,\n  InputLabel,\n  Link,\n  makeStyles,\n  MenuItem,\n  Select,\n  TextField,\n  Tooltip,\n} from \"@material-ui/core\";\nimport GlobalState from \"./GlobalState\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport CreditCardIcon from \"@material-ui/icons/CreditCard\";\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\n\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Draggable from \"react-draggable\";\nimport Paper from \"@material-ui/core/Paper\";\n\nimport Alert from \"@material-ui/lab/Alert\";\n\nimport PropTypes from \"prop-types\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport Box from \"@material-ui/core/Box\";\n\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport NumberFormat from \"react-number-format\";\n\nimport ReceiptIcon from \"@material-ui/icons/Receipt\";\n\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    marginTop: theme.spacing(0),\n    marginBottom: theme.spacing(1),\n  },\n\n  refreshButton: {\n    marginLeft: theme.spacing(2),\n  },\n\n  checkIcon: {\n    color: \"green\",\n  },\n\n  closeIcon: {\n    color: \"red\",\n  },\n\n  RefLink: {\n    cursor: \"pointer\",\n  },\n\n  BookedLabel: {\n    backgroundColor: \"#606060\",\n    color: \"#fff\",\n    paddingRight: \"10px\",\n    paddingLeft: \"10px\",\n  },\n\n  PatientAttendedLabel: {\n    backgroundColor: \"#0066aa\",\n    color: \"#fff\",\n    paddingRight: \"15px\",\n    paddingLeft: \"10px\",\n  },\n\n  SampleTakenLabel: {\n    backgroundColor: \"#0066cc\",\n    color: \"#fff\",\n    paddingRight: \"40px\",\n    paddingLeft: \"10px\",\n  },\n\n  ReportSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"90px\",\n    paddingLeft: \"10px\",\n  },\n\n  ReportCertSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"68px\",\n    paddingLeft: \"10px\",\n  },\n\n  archiveButton: {},\n\n  smartMatchButton: {\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    marginRight: \"10px\",\n    // padding: \"10px\"\n  },\n\n  infoTitle: {\n    fontWeight: \"400\",\n  },\n\n  infoData: {\n    paddingLeft: \"10px\",\n    fontWeight: \"800\",\n  },\n\n  matchButton: {\n    marginTop: \"30px\",\n    marginBottom: \"20px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  resendButton: {\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  resendFilesButton: {\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n    backgroundColor: \"#3792ad\",\n    \"&:hover\": {\n      background: \"#2f798f\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  cancelButton: {\n    marginBottom: \"10px\",\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"90px\",\n    paddingRight: \"90px\",\n  },\n\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 5,\n    color: \"#fff\",\n  },\n}));\n\nfunction NumberFormatCustom(props) {\n  const { inputRef, onChange, ...other } = props;\n\n  return (\n    <NumberFormat\n      {...other}\n      getInputRef={inputRef}\n      onValueChange={(values) => {\n        onChange({\n          target: {\n            name: props.name,\n            value: values.value,\n          },\n        });\n      }}\n      thousandSeparator\n      isNumericString\n      prefix=\"\"\n    />\n  );\n}\n\nNumberFormatCustom.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nconst BorderLinearProgress = withStyles((theme) => ({\n  root: {\n    height: 10,\n    borderRadius: 5,\n  },\n  colorPrimary: {\n    backgroundColor: \"#cedbce\", //theme.palette.grey[theme.palette.type === 'light' ? 200 : 700],\n  },\n  bar: {\n    borderRadius: 5,\n    backgroundColor: \"#2f942e\",\n  },\n}))(LinearProgress);\nfunction LinearProgressWithLabel(props) {\n  return (\n    <Box display=\"flex\" alignItems=\"center\">\n      <Box width=\"100%\" mr={1}>\n        <BorderLinearProgress variant=\"determinate\" {...props} />\n      </Box>\n      <Box minWidth={35}>\n        <Typography\n          style={{ fontWeight: \"800\", color: \"#5e855e\" }}\n          variant=\"body2\"\n          color=\"textSecondary\"\n        >{`${Math.round(props.value)}%`}</Typography>\n      </Box>\n    </Box>\n  );\n}\n\nLinearProgressWithLabel.propTypes = {\n  /**\n   * The value of the progress indicator for the determinate and buffer variants.\n   * Value between 0 and 100.\n   */\n  value: PropTypes.number.isRequired,\n};\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable\n      handle=\"#draggable-dialog-title\"\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\n    >\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nexport default function InvoiceDialog(props) {\n  const classes = useStyles();\n\n  const [state, setState] = React.useContext(GlobalState);\n  const [saving, setSaving] = useState(false);\n\n  const defaultCode = null; //{code:\"\",description:\"\",price:\"0\"}\n\n  const [code, setCode] = useState(defaultCode);\n  const [codeError, setCodeError] = useState(false);\n\n  const [description, setDescription] = useState(\"\");\n  const [descriptionError, setDescriptionError] = useState(false);\n\n  const [notes, setNotes] = useState(\"\");\n  const notesChanged = (event) => {\n    setNotes(event.target.value);\n  };\n\n  const [items, setItems] = React.useState([]);\n\n  const [price, setPrice] = useState(\"\");\n  const [priceError, setPriceError] = useState(false);\n\n  const [title, setTitle] = React.useState(\"INVOICE ISSUANCE\");\n\n  const [allCodes, setAllCodes] = React.useState([]);\n\n  useEffect(() => {\n    if (props.invoice) {\n      console.log(props.invoice.items)\n      setItems(props.invoice.items);\n      setNotes(props.invoice.notes || \"\");\n      setTitle(\"EDIT INVOICE\");\n    } else {\n      setTitle(\"INVOICE ISSUANCE\");\n    }\n\n    fetchAllCodes();\n\n    return () => {\n      setItems([]);\n    };\n  }, [props.invoice, props.open]);\n\n  useEffect(() => {\n    if (!props.invoice && props.defaultCodes) {\n      setItems(props.defaultCodes)\n    }\n\n    return () => {\n      setItems([]);\n    };\n  }, [props.defaultCodes]);\n\n\n\n  const fetchAllCodes = async () => {\n    try {\n      const res = await InvoiceService.getAllCodes();\n      setAllCodes(res.data.result);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const priceChanged = (event) => {\n    setPrice(event.target.value);\n    setPriceError(false);\n  };\n\n  const codeChanged = (event) => {\n    setCode(event.target.value?.toUpperCase());\n    setCodeError(false);\n  };\n\n  const descriptionChanged = (event) => {\n    setDescription(event.target.value);\n    setDescriptionError(false);\n  };\n\n  const handleClose = (refresh) => {\n    if (saving) return;\n\n    setPrice(\"\");\n    setCode(defaultCode);\n    setDescription(\"\");\n    setPriceError(false);\n    setCodeError(false);\n    setDescriptionError(false);\n    setItems([]);\n    setNotes(\"\");\n    setSaving(false);\n\n    props.handleClose(refresh);\n  };\n\n  const codeLeft = () => {\n    fetchCodeDetails();\n  };\n\n  const fetchCodeDetails = async () => {\n    try {\n      setDescription(\"...\");\n      const res = await InvoiceService.getCodeDetails(code);\n      if (res.data.status === \"OK\") {\n        const result = res.data.result;\n        if (result.length === 0) {\n          setCodeError(true);\n          setDescription(\"\");\n          setPrice(\"\");\n        } else if (result.length >= 1) {\n          setDescription(result[0].description);\n          setPrice(result[0].price);\n          setDescriptionError(false);\n          setPriceError(false);\n        }\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const addItemClicked = () => {\n    if (!validateItem()) {\n      return;\n    }\n\n    setItems([\n      ...items,\n      { code: code.code, description: code.description, price: code.price },\n    ]);\n    setCode(defaultCode);\n  };\n\n  const addItemClicked2 = () => {\n    if (!validateItem2()) {\n      return;\n    }\n\n    setItems([...items, { code: \"\", description: description, price: price }]);\n    setDescription(\"\");\n    setPrice(\"\");\n  };\n\n  const validateItem = () => {\n    let error = false;\n    if (!code) return false;\n\n    if (!code.description || code.description.length === 0) {\n      error = true;\n    }\n    if (!code.price || code.price.length === 0) {\n      error = true;\n    }\n\n    return !error;\n  };\n\n  const validateItem2 = () => {\n    let error = false;\n    if (!description || description.length === 0) {\n      setDescriptionError(true);\n      error = true;\n    }\n    if (!price || price.length === 0) {\n      setPriceError(true);\n      error = true;\n    }\n\n    return !error;\n  };\n\n  const removeItem = (index) => {\n    let temp = [...items];\n    temp.splice(index, 1);\n    setItems(temp);\n  };\n\n  const getGrandTotal = (_items) => {\n    let total = 0;\n    _items.forEach((element) => {\n      total += parseFloat(element.price);\n    });\n\n    return total;\n  };\n\n  const saveClikced = async () => {\n    if (items.length === 0 && !props.invoice) {\n      return;\n    }\n\n    try {\n      setSaving(true);\n      let name = \"\";\n      let postCode = \"\";\n      let address = \"\";\n\n      if (props.booking.formData) {\n        const formData = JSON.parse(props.booking.formData)\n        name = `${formData.title} ${formData.forename} ${formData.surname}`;\n        postCode = formData.postCode;\n        address = formData.address;\n      } else if (props.booking.forename && props.booking.surname) {\n        name = `${props.booking.forename} ${props.booking.surname}`;\n        postCode = props.booking.postCode;\n        address = props.booking.address;\n      } else if (props.booking.fullname) {\n        name = `${props.booking.fullname}`;\n      }\n\n      const invoice = {\n        name: name,\n        date: new Date(),\n        dateAttended: new Date(props.booking.bookingDate),\n        items: items,\n        grandTotal: getGrandTotal(items),\n        bookingId: props.booking._id,\n        postCode: postCode,\n        address: address,\n        notes: notes,\n      };\n      if (!props.invoice) {\n        await InvoiceService.createInvoice(invoice);\n      } else if (items.length > 0) {\n        await InvoiceService.updateInvoice(\n          props.invoice.invoiceNumber,\n          invoice\n        );\n      } else {\n        await InvoiceService.deleteinvoice(props.invoice.invoiceNumber);\n      }\n\n      setSaving(false);\n      handleClose(true);\n    } catch (err) {\n      console.error(err);\n      setSaving(false);\n    }\n  };\n\n  return (\n    <React.Fragment>\n      {props.booking && (\n        <React.Fragment>\n          <Dialog\n            maxWidth=\"md\"\n            open={props.open}\n            onClose={() => handleClose(false)}\n            PaperComponent={PaperComponent}\n            aria-labelledby=\"form-dialog-title\"\n          >\n            <DialogTitle id=\"draggable-dialog-title\">\n              <Grid\n                container\n                spacing={2}\n                direction=\"row\"\n                justify=\"center\"\n                alignItems=\"center\"\n              >\n                <Grid item>\n                  <ReceiptIcon style={{ color: \"#1cb2c9\", fontSize: \"3rem\" }} />\n                </Grid>\n\n                <Grid item>\n                  <div\n                    style={{\n                      color: \"#1cb2c9\",\n                      paddingBottom: \"10px\",\n                      fontWeight: \"800\",\n                    }}\n                  >\n                    {`${title}`}\n                  </div>\n                </Grid>\n              </Grid>\n\n              <Divider />\n            </DialogTitle>\n            <DialogContent>\n              <div\n                style={{\n                  height: \"700px\",\n                  width: \"100%\",\n                }}\n              >\n                <Grid\n                  container\n                  direction=\"column\"\n                  justify=\"flex-start\"\n                  spacing={1}\n                  alignItems=\"flex-start\"\n                >\n                  <Grid item style={{ width: \"100%\" }}>\n                    <Grid container direction=\"row\" spacing={5}>\n                      <Grid item xs={10}>\n                        <Autocomplete\n                          id=\"code-auto-complete\"\n                          value={code}\n                          onChange={(event, newValue) => {\n                            setCode(newValue);\n                          }}\n                          options={allCodes}\n                          getOptionLabel={(option) =>\n                            `.${option.code} -- ${\n                              option.description\n                            } -- ${parseFloat(\n                              option.price\n                            ).toLocaleString(\"en-GB\", {\n                              style: \"currency\",\n                              currency: \"GBP\",\n                            })}`\n                          }\n                          style={{ width: \"750px\" }}\n                          renderInput={(params) => (\n                            <TextField\n                              {...params}\n                              label=\"System Codes\"\n                              helperText=\"Standard codes already defined in the system\"\n                            />\n                          )}\n                        />\n                      </Grid>\n\n                      <Grid item xs={2}>\n                        <Button\n                          onClick={addItemClicked}\n                          variant=\"outlined\"\n                          color=\"primary\"\n                          style={{ marginTop: \"15px\" }}\n                          disabled={saving}\n                        >\n                          + Add\n                        </Button>\n                      </Grid>\n                    </Grid>\n                  </Grid>\n\n                  <Grid item style={{ width: \"100%\", marginTop: \"20px\" }}>\n                    <Grid container direction=\"row\" spacing={5}>\n                      <Grid item xs={8}>\n                        <TextField\n                          error={descriptionError}\n                          value={description}\n                          onChange={descriptionChanged}\n                          fullWidth\n                          label=\"Description (Custom)\"\n                          name=\"desc\"\n                          helperText=\"You can enter any description you want to be placed on the invoice\"\n                          id=\"desc-id\"\n                        />\n                      </Grid>\n\n                      <Grid item xs={2}>\n                        <TextField\n                          error={priceError}\n                          value={price}\n                          onChange={priceChanged}\n                          fullWidth\n                          label=\"Price\"\n                          name=\"price\"\n                          id=\"price-id\"\n                          InputProps={{\n                            inputComponent: NumberFormatCustom,\n                            startAdornment: (\n                              <InputAdornment position=\"start\">\n                                £\n                              </InputAdornment>\n                            ),\n                          }}\n                        />\n                      </Grid>\n\n                      <Grid item xs={2}>\n                        <Button\n                          onClick={addItemClicked2}\n                          variant=\"outlined\"\n                          color=\"primary\"\n                          style={{ marginTop: \"12px\" }}\n                          disabled={saving}\n                        >\n                          + Add\n                        </Button>\n                      </Grid>\n                    </Grid>\n                  </Grid>\n\n                  <div\n                    style={{\n                      backgroundColor: \"#fff\",\n                      color: \"#1cb2c9\",\n                      fontWeight: \"500\",\n                      fontSize: \"0.95rem\",\n                      padding: \"5px 8px\",\n                      marginBottom: \"-15px\",\n                      marginLeft: \"10px\",\n                      zIndex: \"99\",\n                      marginTop: \"30px\",\n                    }}\n                  >\n                    Invoice Items\n                  </div>\n\n                  <div\n                    style={{\n                      width: \"100%\",\n                      height: \"300px\",\n                      overflowY: \"scroll\",\n                      border: \"1px solid #ddd\",\n                      borderRadius: \"4px\",\n                      padding: \"25px\",\n                      position: \"relative\",\n                    }}\n                  >\n                    <Grid item>\n                      <Grid\n                        container\n                        direction=\"column\"\n                        justify=\"flex-start\"\n                        spacing={2}\n                        alignItems=\"flex-start\"\n                      >\n                        <Grid item style={{ width: \"100%\", fontWeight: \"500\" }}>\n                          <Grid container direction=\"row\" spacing={4}>\n                            <Grid item xs={2}>\n                              Code\n                            </Grid>\n                            <Grid item xs={5}>\n                              Description\n                            </Grid>\n                            <Grid item xs={2}>\n                              Price\n                            </Grid>\n                            <Grid item xs={3}></Grid>\n                          </Grid>\n                        </Grid>\n                        {items.map((item, index) => (\n                          <Grid item style={{ width: \"100%\" }}>\n                            <Grid container direction=\"row\" spacing={4}>\n                              <Grid item xs={2}>\n                                {item.code}\n                              </Grid>\n                              <Grid item xs={5}>\n                                {item.description}\n                              </Grid>\n                              <Grid item xs={2}>\n                                {parseFloat(item.price).toLocaleString(\n                                  \"en-GB\",\n                                  { style: \"currency\", currency: \"GBP\" }\n                                )}\n                              </Grid>\n                              <Grid item xs={3}>\n                                <Tooltip title=\"Remove Item\">\n                                  <IconButton\n                                    style={{ marginTop: \"-15px\" }}\n                                    onClick={() => removeItem(index)}\n                                  >\n                                    <DeleteIcon color=\"primary\" />\n                                  </IconButton>\n                                </Tooltip>\n                              </Grid>\n                            </Grid>\n                          </Grid>\n                        ))}\n                      </Grid>\n                    </Grid>\n                  </div>\n\n                  <Grid item style={{ marginTop: \"10px\", width:\"100%\", display:\"flex\", justifyContent:\"flex-end\", paddingRight:\"30px\" }}>\n                    <span style={{ fontWeight: \"500\", color: \"#777\" }}>\n                      Grand Total :{\" \"}\n                    </span>{\" \"}\n                    <span\n                      style={{\n                        fontWeight: \"500\",\n                        color: \"#1cb2c9\",\n                        marginLeft: \"10px\",\n                        fontSize: \"1rem\",\n                      }}\n                    >\n                      {\" \"}\n                      {getGrandTotal(items).toLocaleString(\"en-GB\", {\n                        style: \"currency\",\n                        currency: \"GBP\",\n                      })}{\" \"}\n                    </span>\n                  </Grid>\n\n                  <Grid item style={{ marginTop: \"10px\", width: \"100%\" }}>\n                    <TextField\n                      value={notes}\n                      onChange={notesChanged}\n                      multiline\n                      rows={2}\n                      helperText=\"* notes will be printed on the invoice (optional)\"\n                      label=\"Notes\"\n                      fullWidth\n                      variant=\"outlined\"\n                      placeholder=\"enter any addional notes you want to be printed on the invoice...\"\n                    ></TextField>\n                  </Grid>\n                </Grid>\n              </div>\n\n              <Backdrop className={classes.backdrop} open={saving}>\n                <CircularProgress color=\"inherit\" />\n              </Backdrop>\n            </DialogContent>\n            <DialogActions>\n              <Grid\n                container\n                direction=\"row\"\n                justify=\"flex-end\"\n                alignItems=\"center\"\n                spacing={1}\n              >\n                <Grid item>\n                  <Button\n                    onClick={() => handleClose(false)}\n                    style={{ width: \"100px\" }}\n                    disabled={saving}\n                  >\n                    back\n                  </Button>\n                </Grid>\n                <Grid item>\n                  <Button\n                    onClick={saveClikced}\n                    variant=\"contained\"\n                    color=   {props.invoice ? 'secondary' : 'primary'}\n                    // style={{ width: \"100px\" }}\n                    disabled={saving}\n                  >\n                    {props.invoice ? 'Save Changes' : 'Issue Invoice'}\n                  </Button>\n                </Grid>\n              </Grid>\n            </DialogActions>\n          </Dialog>\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport GlobalState from \"./../GlobalState\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {\n  Button,\n  Checkbox,\n  DialogActions,\n  DialogContentText,\n  Divider,\n  FormControlLabel,\n  IconButton,\n  TextField,\n  Tooltip,\n} from \"@material-ui/core\";\nimport PDFService from \"./services/PDFService\";\n\nimport { calculatePrice } from \"./PriceCalculator\";\n\nimport bookingService from \"./services/BookService\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport CloseIcon from \"@material-ui/icons/Close\";\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Draggable from \"react-draggable\";\nimport Slide from \"@material-ui/core/Slide\";\n\nimport Paper from \"@material-ui/core/Paper\";\n\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport BookService from \"./services/BookService\";\n\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport {\n  FormatDateFromString,\n  RevertFormatDateFromString,\n} from \"./DateFormatter\";\nimport ResendEmailsDialog from \"./ResendEmailsDialog\";\nimport PayDialog from \"./PayDialog\";\n\nimport PrintIcon from \"@material-ui/icons/Print\";\nimport UndoIcon from \"@material-ui/icons/Undo\";\n\nimport HistoryIcon from \"@material-ui/icons/History\";\n\nimport FileCopyOutlinedIcon from \"@material-ui/icons/FileCopyOutlined\";\nimport TimeStampDialog from \"./TimeStampDialog\";\nimport { CalendarColors } from \"../Admin/calendar-admin/colors\";\nimport InvoiceService from \"../services/InvoiceService\";\n\nimport SendIcon from \"@material-ui/icons/Send\";\nimport InvoiceDialog from \"../InvoiceDialog\";\n\nconst useStyles = makeStyles((theme) => ({\n  box: {\n    backgroundColor: \"#373737\",\n    color: \"#fff\",\n    padding: \"1px\",\n    borderRadius: \"4px\",\n    textAlign: \"justify\",\n    paddingRight: \"40px\",\n  },\n\n  boxRed: {\n    backgroundColor: \"#dc2626\",\n    color: \"#fff\",\n    padding: \"1px\",\n    borderRadius: \"4px\",\n    textAlign: \"justify\",\n    paddingRight: \"40px\",\n  },\n\n  boxInfo: {\n    textAlign: \"justify\",\n    backgroundColor: \"#fafafa\",\n    color: \"#333\",\n    padding: \"1px\",\n    borderRadius: \"4px\",\n    paddingRight: \"40px\",\n    border: \"1px solid #eee\",\n  },\n\n  ul: {\n    listStyle: \"none\",\n    padding: \"0\",\n    margin: \"0\",\n  },\n\n  li: {\n    marginBottom: \"15px\",\n  },\n\n  icon: {\n    marginRight: \"8px\",\n  },\n\n  root: {\n    width: \"100%\",\n  },\n\n  lineThrough: {\n    textDecoration: \"line-through\",\n  },\n\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    flexBasis: \"33.33%\",\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n  },\n  secondaryHeading: {\n    fontSize: theme.typography.pxToRem(15),\n  },\n\n  infoDetails: {\n    textAlign: \"left\",\n  },\n\n  infoTitle: {\n    fontWeight: \"800\",\n    marginRight: \"10px\",\n  },\n\n  infoData: {\n    fontWeight: \"400\",\n  },\n\n  title: {\n    textAlign: \"center\",\n    fontWeight: \"600\",\n    marginLeft: \"10px\",\n    marginBottom: \"5px\",\n  },\n\n  Accordion: {\n    backgroundColor: \"#f5f5f5\",\n    color: \"#222\",\n  },\n\n  AccordionDeleted: {\n    backgroundColor: \"#aaa\",\n    color: \"#555\",\n  },\n\n  DownloadForm: {\n    marginTop: \"10px\",\n    marginBottom: \"10px\",\n  },\n\n  infoDataCharges: {\n    fontSize: \"18px\",\n    color: \"green\",\n    fontWeight: \"600\",\n  },\n\n  infoDataChargesHigher: {\n    fontSize: \"18px\",\n    color: \"red\",\n    fontWeight: \"600\",\n  },\n  BookedLabel: {\n    color: \"#606060\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#606060\",\n  },\n\n  PatientAttendedLabel: {\n    color: \"#0066aa\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#0066aa\",\n  },\n\n  SampleTakenLabel: {\n    color: \"#0066cc\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#0066cc\",\n  },\n\n  ReportSentLabel: {\n    color: \"#009900\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#009900\",\n  },\n\n  ReportCertSentLabel: {\n    color: \"#009900\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#009900\",\n  },\n\n  PositiveLabel: {\n    color: \"red\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"red\",\n  },\n\n  EditButton: {\n    marginBottom: \"20px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n  },\n\n  ResendEmailsButton: {\n    // marginBottom : \"20px\",\n    color: \"#2f942e\",\n    borderColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"#fafffa\",\n      borderColor: \"#2f942e\",\n    },\n    textDecoration: \"none !important\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  PayButton: {\n    marginLeft: \"70px\",\n    width: \"300px\",\n  },\n\n  PayLabel: {\n    marginLeft: \"20px\",\n\n    color: \"#2f942e\",\n    fontWeight: \"500\",\n    textAlign: \"center\",\n  },\n\n  RestoreButton: {\n    marginBottom: \"20px\",\n    backgroundColor: \"#eee\",\n    color: \"#333\",\n    \"&:hover\": {\n      background: \"#f1f1f1\",\n      color: \"#111\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n  },\n\n  DeleteButton: {\n    marginBottom: \"20px\",\n    backgroundColor: \"#d90015\",\n    \"&:hover\": {\n      background: \"#b80012\",\n      color: \"#fff\",\n    },\n\n    padding: \"10px\",\n  },\n\n  SaveButton: {\n    marginBottom: \"10px\",\n    padding: \"10px\",\n\n    backgroundColor: \"#d1175e\",\n    \"&:hover\": {\n      background: \"#bd0d50\",\n      color: \"#fff\",\n    },\n  },\n\n  CancelButton: {\n    marginBottom: \"20px\",\n    // padding: \"10px\"\n  },\n\n  TextBox: {\n    padding: \"0px\",\n  },\n\n  checkIcon: {\n    color: \"green\",\n    marginBottom: \"-8px\",\n  },\n\n  checkIconSmall: {\n    color: \"green\",\n    paddingTop: \"5px\",\n  },\n\n  closeIcon: {\n    color: \"red\",\n    marginBottom: \"-8px\",\n  },\n\n  centeredLabel: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: \"#fff\",\n  },\n\n  invoiceNumber: {\n    display: \"inline-block\",\n    fontWeight: \"500\",\n    width: \"80px\",\n    fontSize: \"1rem\",\n    color: theme.palette.primary.main,\n  },\n\n  printInvoiceButton: {\n    marginLeft: \"70px\",\n    fontSize: \"0.8rem\",\n    // width: \"300px\",\n  },\n\n  editInvoiceButton: {\n    marginLeft: \"10px\",\n    fontSize: \"0.8rem\",\n  },\n}));\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable\n      handle=\"#alert-dialog-slide-title\"\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\n    >\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nexport default function BookingDialog(props) {\n  const classes = useStyles();\n\n  const getDefaultCodes = (_booking) => {\n    const defaultCodes = [];\n    if (!_booking) return;\n\n    if (_booking.tr) {\n      defaultCodes.push({\n        code: \"PCRTR\",\n        description: \"PCR TEST TO RELEASE\",\n        price: 250,\n      });\n    } else {\n      defaultCodes.push({\n        code: \"PCR\",\n        description: \"PCR SWAB TEST\",\n        price: 199,\n      });\n      if (_booking.antiBodyTest) {\n        defaultCodes.push({\n          code: \"PCRA\",\n          description: \"PCR ANTIBODY TEST\",\n          price: 99,\n        });\n        defaultCodes.push({\n          code: \"PHLE\",\n          description: \"PHLEBOTOMY\",\n          price: 50,\n        });\n      }\n      if (_booking.certificate) {\n        defaultCodes.push({\n          code: \"PCRCERT\",\n          description: \"PCR FIT TO FLY CERTIFICATE\",\n          price: 50,\n        });\n      }\n    }\n    return defaultCodes;\n  };\n\n  const [state, setState] = React.useContext(GlobalState);\n\n  const [copied, setCopied] = useState(false);\n\n  const [openResendDialog, setOpenResendDialog] = React.useState(false);\n  const [openPayDialog, setOpenPayDialog] = React.useState(false);\n  const [selectedBooking, setSelectedBooking] = React.useState(null);\n\n  const [editMode, setEditMode] = React.useState({ edit: false, person: null });\n  const [deleteMode, setDeleteMode] = React.useState({\n    delete: false,\n    person: null,\n  });\n  const [restoreMode, setRestoreMode] = React.useState({\n    restore: false,\n    person: null,\n  });\n\n  const [saving, setSaving] = React.useState(false);\n  const [deleting, setDeleting] = React.useState(false);\n  const [restoring, setRestoring] = React.useState(false);\n\n  const [validationError, setValidationError] = React.useState({});\n\n  const [bookingDate, setBookingDate] = React.useState(\"\");\n  const [bookingTime, setBookingTime] = React.useState(\"\");\n\n  const [gender, setGender] = React.useState(\"\");\n  const [title, setTitle] = React.useState(\"\");\n  const [forename, setForename] = React.useState(\"\");\n  const [surname, setSurnme] = React.useState(\"\");\n  const [email, setEmail] = React.useState(\"\");\n  const [dob, setDOB] = React.useState(\"\");\n  const [tel, setTel] = React.useState(\"\");\n  const [postCode, setPostCode] = React.useState(\"\");\n  const [address, setAddress] = React.useState(\"\");\n  const [notes, setNotes] = React.useState(\"\");\n  const [passport, setPassport] = React.useState(\"\");\n  const [passport2, setPassport2] = React.useState(\"\");\n  const [certificate, setCertificate] = React.useState(false);\n  const [antiBodyTest, setAntiBodyTest] = React.useState(false);\n\n  const [refreshData, setRefreshData] = React.useState(false);\n\n  const [booking, setBooking] = React.useState(null);\n\n  const [recordChanged, setRecordChanged] = React.useState(false);\n\n  const [fieldChanged, setFieldChanged] = React.useState(false);\n\n  const [openUndoPayDialog, setOpenUndoPayDialog] = React.useState(false);\n\n  const [openTimeStampDialog, setOpenTimeStampDialog] = React.useState(false);\n\n  const handleCloseTimeStampDialog = () => {\n    setOpenTimeStampDialog(false);\n    setSelectedBooking(null);\n  };\n\n  const handleCloseUndoPayDialog = () => {\n    setOpenUndoPayDialog(false);\n  };\n\n  const handleCloseResendDialog = () => {\n    setOpenResendDialog(false);\n    setSelectedBooking(null);\n  };\n\n  const handleClosePayDialog = () => {\n    setOpenPayDialog(false);\n    setSelectedBooking(null);\n  };\n\n  useEffect(() => {\n    if (booking) {\n      const isChanged =\n        bookingDate !== FormatDateFromString(booking.bookingDate) ||\n        bookingTime !== booking.bookingTime ||\n        gender !== booking.gender ||\n        forename !== booking.forenameCapital ||\n        surname !== booking.surnameCapital ||\n        title !== booking.title ||\n        email !== booking.email ||\n        dob !== FormatDateFromString(booking.birthDate) ||\n        tel !== booking.phone ||\n        postCode !== booking.postCode ||\n        address !== booking.address ||\n        passport !== booking.passportNumber ||\n        passport2 !== booking.passportNumber2 ||\n        certificate !== booking.certificate ||\n        antiBodyTest !== booking.antiBodyTest;\n\n      setRecordChanged(isChanged);\n    }\n  }, [fieldChanged]);\n\n  useEffect(() => {\n    if (!props.open) {\n      setTimeout(() => {\n        setEditMode({ edit: false, person: null });\n        setRecordChanged(false);\n      }, 500);\n    }\n  }, [props.open]);\n\n  const bookingDateChanged = (event) => {\n    setBookingDate(event.target.value);\n    setValidationError({ ...validationError, bookingDateError: false });\n    setFieldChanged(!fieldChanged);\n  };\n\n  const bookingTimeChanged = (event) => {\n    setBookingTime(event.target.value);\n    setValidationError({ ...validationError, bookingTimeError: false });\n    setFieldChanged(!fieldChanged);\n  };\n\n  const genderChanged = (event) => {\n    setGender(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const titleChanged = (event) => {\n    setTitle(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const forenameChanged = (event) => {\n    setForename(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const surnameChanged = (event) => {\n    setSurnme(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const emailChanged = (event) => {\n    setEmail(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const dobChanged = (event) => {\n    setDOB(event.target.value);\n    setValidationError({ ...validationError, dobError: false });\n    setFieldChanged(!fieldChanged);\n  };\n\n  const telChanged = (event) => {\n    setTel(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const postCodeChanged = (event) => {\n    setPostCode(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const addressChanged = (event) => {\n    setAddress(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const passportChanged = (event) => {\n    setPassport(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const passport2Changed = (event) => {\n    setPassport2(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const certificateChanged = (event) => {\n    setCertificate(event.target.checked);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const antiBodyTestChanged = (event) => {\n    setAntiBodyTest(event.target.checked);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const getStatusLabel = (status) => {\n    if (status === \"booked\") {\n      return <span className={classes.BookedLabel}> Booking Made </span>;\n    } else if (status === \"patient_attended\") {\n      return (\n        <span className={classes.PatientAttendedLabel}> Patient Attended </span>\n      );\n    } else if (status === \"sample_taken\") {\n      return <span className={classes.SampleTakenLabel}> Sample Taken </span>;\n    } else if (status === \"report_sent\") {\n      return <span className={classes.ReportSentLabel}> Report Sent </span>;\n    } else if (status === \"report_cert_sent\") {\n      return (\n        <span className={classes.ReportCertSentLabel}>\n          {\" \"}\n          {`Report & Certificate Sent`}{\" \"}\n        </span>\n      );\n    } else if (status === \"positive\") {\n      return <span className={classes.PositiveLabel}> {`POSITIVE`} </span>;\n    } else {\n      return \"Unknown\";\n    }\n  };\n\n  const downloadForm1 = (id) => {\n    PDFService.downloadCovidForm1(id)\n      .then((res) => {\n        const file = new Blob([res.data], { type: \"application/pdf\" });\n\n        const fileURL = URL.createObjectURL(file);\n        window.open(fileURL, \"_blank\");\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const downloadForm2 = (id) => {\n    PDFService.downloadCovidForm2(id)\n      .then((res) => {\n        const file = new Blob([res.data], { type: \"application/pdf\" });\n\n        const fileURL = URL.createObjectURL(file);\n        window.open(fileURL, \"_blank\");\n\n        setRefreshData(!refreshData);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const downloadLabResults = (id) => {\n    PDFService.downloadPdfResult(id)\n      .then((res) => {\n        const file = new Blob([res.data], { type: \"application/pdf\" });\n\n        const fileURL = URL.createObjectURL(file);\n        window.open(fileURL, \"_blank\");\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const downloadCertificate = (id) => {\n    PDFService.downloadPdfCert(id)\n      .then((res) => {\n        const file = new Blob([res.data], { type: \"application/pdf\" });\n\n        const fileURL = URL.createObjectURL(file);\n        window.open(fileURL, \"_blank\");\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const handleEditModeChanged = (edit, person) => {\n    if (edit) {\n      setForename(person.forenameCapital);\n      setSurnme(person.surnameCapital);\n      setBookingDate(FormatDateFromString(person.bookingDate));\n      setBookingTime(person.bookingTime.toUpperCase());\n      setGender(person.gender.toUpperCase());\n      setTitle(person.title.toUpperCase());\n      setEmail(person.email.toUpperCase());\n      setDOB(FormatDateFromString(person.birthDate));\n      setTel(person.phone.toUpperCase());\n      setPostCode(person.postCode.toUpperCase());\n      setAddress(person.address.toUpperCase());\n      if (person.notes) {\n        setNotes(person.notes.toUpperCase());\n      } else {\n        setNotes(\"\");\n      }\n\n      if (person.passportNumber) {\n        setPassport(person.passportNumber.toUpperCase());\n      } else {\n        setPassport(\"\");\n      }\n\n      if (person.passportNumber2) {\n        setPassport2(person.passportNumber2.toUpperCase());\n      } else {\n        setPassport2(\"\");\n      }\n\n      setCertificate(person.certificate);\n      setAntiBodyTest(person.antiBodyTest);\n\n      setEditMode({ edit: edit, person: person });\n    } else if (!edit && !person) {\n      setEditMode({ edit: edit, person: person });\n      setRecordChanged(false);\n    } else if (!edit && person) {\n      const booking = {};\n      const bookingId = person._id;\n      booking.certificate = certificate;\n      booking.antiBodyTest = antiBodyTest;\n      booking.gender = gender;\n      booking.title = title;\n      booking.birthDate = RevertFormatDateFromString(dob);\n      booking.email = email;\n      booking.phone = tel;\n      booking.postCode = postCode;\n      booking.address = address;\n      booking.passportNumber = passport;\n      booking.passportNumber2 = passport2;\n      booking.forename = forename;\n      booking.surname = surname;\n      booking.notes = notes;\n      booking.bookingDate = RevertFormatDateFromString(bookingDate);\n      booking.bookingTime = bookingTime;\n      booking.bookingRef = person.bookingRef;\n\n      if (validateBooking(booking)) {\n        updateBooking({ bookingId: bookingId, person: booking });\n      }\n    }\n  };\n\n  const validateDate = (str) => {\n    var error = false;\n    if (!str || str.length !== 10) {\n      error = true;\n    }\n\n    if (str.charAt(4) !== \"-\" || str.charAt(7) !== \"-\") {\n      error = true;\n    }\n\n    try {\n      const result = /^\\d{4}-\\d{2}-\\d{2}$/.test(str);\n      if (!result) {\n        error = true;\n      }\n\n      const year = parseInt(str.substr(0, 4));\n      const month = parseInt(str.substr(5, 2));\n      const day = parseInt(str.substr(8, 2));\n\n      if (year < 1900) {\n        error = true;\n      }\n\n      if (month < 1 || month > 12) {\n        error = true;\n      }\n\n      if (day > 31) {\n        error = true;\n      }\n    } catch (err) {\n      error = true;\n    }\n\n    return !error;\n  };\n\n  const validateTime = (str) => {\n    var error = false;\n\n    const result = /^\\d{2}:\\d{2} AM$|^\\d{2}:\\d{2} PM$/.test(str);\n    if (!result) {\n      error = true;\n    }\n\n    try {\n      const hour = parseInt(str.substr(0, 2));\n      const minute = parseInt(str.substr(3, 2));\n\n      if (hour < 0 || hour > 12) {\n        error = true;\n      }\n\n      if (minute < 0 || minute > 59) {\n        error = true;\n      }\n    } catch (err) {\n      error = true;\n    }\n\n    return !error;\n  };\n\n  const validateBooking = (booking) => {\n    var error = false;\n\n    if (!validateDate(booking.bookingDate)) {\n      error = true;\n      setValidationError({ ...validationError, bookingDateError: true });\n    }\n\n    if (!validateDate(booking.birthDate)) {\n      error = true;\n      setValidationError({ ...validationError, dobError: true });\n    }\n\n    if (!validateTime(booking.bookingTime)) {\n      error = true;\n      setValidationError({ ...validationError, bookingTimeError: true });\n    }\n\n    return !error;\n  };\n\n  const updateBooking = (payload) => {\n    setSaving(true);\n    bookingService\n      .updateBooking(payload)\n      .then((res) => {\n        setSaving(false);\n        setEditMode({ edit: false, person: null });\n        setRefreshData(!refreshData);\n      })\n      .catch((err) => {\n        setSaving(false);\n        setEditMode({ edit: false, person: null });\n        console.log(err);\n      });\n  };\n\n  const deleteBooking = (id) => {\n    setDeleting(true);\n    bookingService\n      .deleteBooking(id)\n      .then((res) => {\n        setDeleting(false);\n        setDeleteMode({ delete: false, person: null });\n        setRefreshData(!refreshData);\n      })\n      .catch((err) => {\n        setDeleting(false);\n        setDeleteMode({ delete: false, person: null });\n        console.log(err);\n      });\n  };\n\n  const restoreBooking = (id) => {\n    setRestoring(true);\n    bookingService\n      .unDeleteBooking(id)\n      .then((res) => {\n        setRestoring(false);\n        setRestoreMode({ restore: false, person: null });\n        setRefreshData(!refreshData);\n      })\n      .catch((err) => {\n        setRestoring(false);\n        setRestoreMode({ restore: false, person: null });\n        console.log(err);\n      });\n  };\n\n  const handleDeleteModeChanged = (del, person) => {\n    if (del) {\n      setDeleteMode({ delete: del, person: person });\n    } else if (!del && !person) {\n      setDeleteMode({ delete: del, person: person });\n    } else if (!del && person) {\n      deleteBooking(person._id);\n    }\n  };\n\n  const handleRestoreModeChanged = (restore, person) => {\n    if (restore) {\n      setRestoreMode({ restore: restore, person: person });\n    } else if (!restore && !person) {\n      setRestoreMode({ restore: restore, person: person });\n    } else if (!restore && person) {\n      restoreBooking(person._id);\n    }\n  };\n\n  const changeBackToBookingMade = (event, id) => {\n    setSaving(true);\n    BookService.changeBackToBookingMade(id)\n      .then((res) => {\n        setSaving(false);\n        setRefreshData(!refreshData);\n      })\n      .catch((err) => {\n        console.log(err);\n        setSaving(false);\n      });\n  };\n\n  const resendEmails = (event, id) => {\n    setSelectedBooking(booking);\n    setOpenResendDialog(true);\n  };\n\n  const Pay = (event, id) => {\n    setSelectedBooking(booking);\n    setOpenPayDialog(true);\n  };\n\n  useEffect(() => {\n    if (props.booking) {\n      BookService.getBookingById(props.booking._id)\n        .then((res) => {\n          setBooking(res.data);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n\n      setState((state) => ({\n        ...state,\n        bookingDialogDataChanged: !state.bookingDialogDataChanged\n          ? true\n          : false,\n      }));\n    }\n  }, [refreshData, state.bookingPayChanged]);\n\n  useEffect(() => {\n    if (props.booking) {\n      setBooking(props.booking);\n    }\n  }, [props.booking]);\n\n  const undoPaymentClicked = async () => {\n    setSaving(true);\n    try {\n      await BookService.unPayBooking(booking._id);\n      setSaving(false);\n      setOpenUndoPayDialog(false);\n      setRefreshData(!refreshData);\n    } catch (err) {\n      console.error(err);\n      setSaving(false);\n      setOpenUndoPayDialog(false);\n    }\n  };\n\n  ///*** Invoice  ******************/\n\n  const [invoice, setInvoice] = React.useState(null);\n  const [invoiceLoaded, setInvoiceLoaded] = React.useState(false);\n  const [openInvoiceDialog, setOpenInvoiceDialog] = React.useState(false);\n  const [emailSentInvoice, setEmailSentInvoice] = React.useState(false);\n\n  const fetchInvoice = async () => {\n    try {\n      setInvoiceLoaded(false);\n      const res = await InvoiceService.getInvoiceByBookingId(props.booking._id);\n      setInvoice(res.data.invoice);\n      setInvoiceLoaded(true);\n    } catch (err) {\n      setInvoiceLoaded(true);\n      console.error(err);\n    }\n  };\n\n  React.useEffect(() => {\n    if (props.booking) {\n      fetchInvoice();\n    }\n  }, [props.booking, props.open]);\n\n  const handleCloseInvoiceDialog = (refresh) => {\n    setOpenInvoiceDialog(false);\n    setSelectedBooking(null);\n    fetchInvoice();\n  };\n\n  const OpenInvoiceDialog = () => {\n    setSelectedBooking(booking);\n    setInvoice(invoice);\n    setOpenInvoiceDialog(true);\n  };\n\n  const downloadInvoice = (id) => {\n    InvoiceService.downloadInvoice(id)\n      .then((res) => {\n        const file = new Blob([res.data], { type: \"application/pdf\" });\n\n        const fileURL = URL.createObjectURL(file);\n        window.open(fileURL, \"_blank\");\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const sendInvoiceEmail = (id, _email) => {\n    setSaving(true);\n    setEmailSentInvoice(false);\n    InvoiceService.emailInvoice(id, _email)\n      .then((res) => {\n        setSaving(false);\n        if (res.data.status === \"OK\") {\n          setEmailSentInvoice(true);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setSaving(false);\n      });\n  };\n\n  //***************************** */\n\n  return (\n    <React.Fragment>\n      {booking && (\n        <React.Fragment>\n          <Dialog\n            maxWidth=\"md\"\n            open={props.open}\n            TransitionComponent={Transition}\n            keepMounted\n            onClose={props.onClose}\n            PaperComponent={PaperComponent}\n            aria-labelledby=\"alert-dialog-slide-title\"\n            aria-describedby=\"alert-dialog-slide-description\"\n          >\n            <DialogTitle\n              id=\"alert-dialog-slide-title\"\n              style={\n                booking.tr ? { backgroundColor: \"#7e0082\", color: \"#fff\" } : {}\n              }\n            >\n              <div\n                style={{ position: \"absolute\", top: \"25x\", left: \"25px\" }}\n                hidden={state.role === \"pcrlab\"}\n              >\n                <Tooltip title=\"COPY EDIT LINK TO CLIPBOARD\">\n                  <IconButton\n                    onClick={() => {\n                      navigator.clipboard.writeText(\n                        `https://londonmedicalclinic.co.uk/medicalexpressclinic/user/edit/pcr/${booking._id}`\n                      );\n                      setCopied(true);\n                      setTimeout(() => {\n                        setCopied(false);\n                      }, 1500);\n                    }}\n                    aria-label=\"delete\"\n                    className={classes.margin}\n                    size=\"small\"\n                  >\n                    <FileCopyOutlinedIcon\n                      style={booking.tr ? { color: \"#ddd\" } : {}}\n                      fontSize=\"14px\"\n                    />\n                  </IconButton>\n                </Tooltip>\n\n                <span\n                  hidden={!copied}\n                  style={{ fontSize: \"12px\", transition: \"all 1s ease-in\" }}\n                >\n                  {\" \"}\n                  Copied{\" \"}\n                </span>\n              </div>\n\n              <div\n                style={{\n                  position: \"absolute\",\n                  top: \"25x\",\n                  right: \"60px\",\n                  backgroundColor: CalendarColors.PCR_COLOR,\n                  color: \"#fff\",\n                  padding: \"0px 5px\",\n                  borderRadius: \"10px\",\n                }}\n              >\n                PCR\n              </div>\n\n              {booking.tr && (\n                <div style={{ position: \"absolute\", right: \"15px\" }}>TR</div>\n              )}\n\n              <Grid\n                container\n                direction=\"row\"\n                justify=\"center\"\n                spacing={2}\n                alignItems=\"center\"\n              >\n                <Grid item>\n                  <div\n                    style={\n                      booking.deleted\n                        ? {\n                            paddingBottom: \"5px\",\n                            textDecoration: \"line-through\",\n                          }\n                        : {}\n                    }\n                  >\n                    {`${booking.forenameCapital} ${booking.surnameCapital}`}\n                  </div>\n                </Grid>\n\n                {booking.deleted && (\n                  <Grid item>\n                    <Tooltip title=\"This record has been deleted.\">\n                      <DeleteIcon\n                        style={\n                          booking.tr\n                            ? {\n                                padding: 0,\n                                margin: 0,\n                                color: \"#fff\",\n                                fontSize: 25,\n                              }\n                            : {\n                                padding: 0,\n                                margin: 0,\n                                color: \"#333\",\n                                fontSize: 25,\n                              }\n                        }\n                      />\n                    </Tooltip>\n                  </Grid>\n                )}\n              </Grid>\n            </DialogTitle>\n            <DialogContent>\n              <div\n                style={{\n                  paddingTop: \"20px\",\n                }}\n              >\n                <Grid item xs={12} md={12} key={`panel0`}>\n                  <div className={classes.infoDetails}>\n                    <ul className={classes.ul}>\n                      {/* Restore Functionality ******************************************* */}\n                      <li\n                        hidden={\n                          !(\n                            restoreMode.restore &&\n                            restoreMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <div\n                          style={{\n                            fontWeight: \"500\",\n                            paddingBottom: \"5px\",\n                            paddingLeft: \"5px\",\n                            fontSize: \"16px\",\n                            color: \"#333\",\n                          }}\n                        >\n                          Are you sure you want to restore this record?\n                        </div>\n                      </li>\n\n                      <li\n                        hidden={\n                          !booking.deleted ||\n                          (restoreMode.restore &&\n                            restoreMode.person._id === booking._id)\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"primary\"\n                          onClick={() => {\n                            handleRestoreModeChanged(true, booking);\n                          }}\n                          className={classes.RestoreButton}\n                        >\n                          Restore This Record\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            restoreMode.restore &&\n                            restoreMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"primary\"\n                          disabled={restoring}\n                          onClick={() => {\n                            handleRestoreModeChanged(false, booking);\n                          }}\n                          className={classes.SaveButton}\n                        >\n                          YES, Restore this!\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            restoreMode.restore &&\n                            restoreMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"default\"\n                          disabled={restoring}\n                          onClick={() => {\n                            handleRestoreModeChanged(false, null);\n                          }}\n                          className={classes.CancelButton}\n                        >\n                          Cancel\n                        </Button>\n                      </li>\n\n                      {/*  ******************************************************************* */}\n\n                      {/* Edit Functionality ******************************************* */}\n\n                      <li\n                        hidden={\n                          booking.deleted ||\n                          deleteMode.delete ||\n                          (editMode.edit &&\n                            editMode.person._id === booking._id) ||\n                          state.role === \"pcrlab\"\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"primary\"\n                          onClick={() => {\n                            handleEditModeChanged(true, booking);\n                          }}\n                          className={classes.EditButton}\n                        >\n                          Edit Booking Info\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            editMode.edit && editMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"primary\"\n                          disabled={saving || !recordChanged}\n                          onClick={() => {\n                            handleEditModeChanged(false, booking);\n                          }}\n                          className={classes.SaveButton}\n                        >\n                          Save Changes\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            editMode.edit && editMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"default\"\n                          disabled={saving}\n                          onClick={() => {\n                            handleEditModeChanged(false, null);\n                          }}\n                          className={classes.CancelButton}\n                        >\n                          Cancel\n                        </Button>\n                      </li>\n\n                      {/* ****************************************************************************************** */}\n\n                      {/* Delete Functionality ******************************************* */}\n\n                      <li\n                        hidden={\n                          !(\n                            deleteMode.delete &&\n                            deleteMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <div\n                          style={{\n                            fontWeight: \"600\",\n                            paddingBottom: \"5px\",\n                            paddingLeft: \"5px\",\n                            fontSize: \"16px\",\n                          }}\n                        >\n                          Are you sure you want to delete this record?\n                        </div>\n                      </li>\n\n                      <li\n                        hidden={\n                          props.deleteButtonDisabled ||\n                          booking.deleted ||\n                          editMode.edit ||\n                          (deleteMode.delete &&\n                            deleteMode.person._id === booking._id) ||\n                          state.role === \"pcrlab\"\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"primary\"\n                          onClick={() => {\n                            handleDeleteModeChanged(true, booking);\n                          }}\n                          className={classes.DeleteButton}\n                        >\n                          Delete This Record\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            deleteMode.delete &&\n                            deleteMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"primary\"\n                          disabled={deleting}\n                          onClick={() => {\n                            handleDeleteModeChanged(false, booking);\n                          }}\n                          className={classes.SaveButton}\n                        >\n                          YES, Delete this!\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            deleteMode.delete &&\n                            deleteMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"default\"\n                          disabled={deleting}\n                          onClick={() => {\n                            handleDeleteModeChanged(false, null);\n                          }}\n                          className={classes.CancelButton}\n                        >\n                          Cancel\n                        </Button>\n                      </li>\n\n                      {/* ****************************************************************************************** */}\n\n                      <li className={classes.li}>\n                        <Grid container spacing={2}>\n                          <Grid item xs={6}>\n                            <span className={classes.infoTitle}>\n                              BOOKED DATE\n                            </span>\n\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {FormatDateFromString(booking.bookingDate)}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                error={validationError.bookingDateError}\n                                className={classes.TextBox}\n                                value={bookingDate}\n                                onChange={bookingDateChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n\n                          <Grid item xs={6}>\n                            <span className={classes.infoTitle}>\n                              BOOKED TIME\n                            </span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {booking.bookingTime.toUpperCase()}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                error={validationError.bookingTimeError}\n                                className={classes.TextBox}\n                                value={bookingTime}\n                                onChange={bookingTimeChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n                        </Grid>\n                      </li>\n\n                      <li className={classes.li}>\n                        <Grid container spacing={2}>\n                          <Grid item xs={6}>\n                            <span className={classes.infoTitle}>GENDER</span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {booking.gender?.toUpperCase()}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                className={classes.TextBox}\n                                value={gender}\n                                onChange={genderChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n                          <Grid item xs={6}>\n                            <span className={classes.infoTitle}>TITLE</span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {booking.title?.toUpperCase()}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                className={classes.TextBox}\n                                value={title}\n                                onChange={titleChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n                        </Grid>\n                      </li>\n\n                      <li className={classes.li}>\n                        <Grid container spacing={2}>\n                          <Grid item xs={6}>\n                            <span className={classes.infoTitle}>FORENAME</span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {booking.forenameCapital}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                className={classes.TextBox}\n                                value={forename}\n                                onChange={forenameChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n                          <Grid item xs={6}>\n                            <span className={classes.infoTitle}>SURNAME</span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {booking.surnameCapital}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                className={classes.TextBox}\n                                value={surname}\n                                onChange={surnameChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n                        </Grid>\n                      </li>\n\n                      <li className={classes.li}>\n                        <Grid container spacing={2}>\n                          <Grid item xs={6}>\n                            <span className={classes.infoTitle}>EMAIL</span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {booking.email?.toUpperCase()}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                className={classes.TextBox}\n                                value={email}\n                                onChange={emailChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n                          <Grid item xs={6}>\n                            <span className={classes.infoTitle}>D.O.B</span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {FormatDateFromString(booking.birthDate)}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                error={validationError.dobError}\n                                className={classes.TextBox}\n                                value={dob}\n                                onChange={dobChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n                        </Grid>\n                      </li>\n                      <li className={classes.li}></li>\n                      <li className={classes.li}>\n                        <Grid container spacing={2}>\n                          <Grid item xs={6}>\n                            <span className={classes.infoTitle}>TEL</span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {booking.phone?.toUpperCase()}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                className={classes.TextBox}\n                                value={tel}\n                                onChange={telChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n                          <Grid item xs={6}>\n                            <span className={classes.infoTitle}>POST CODE</span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {booking.postCode?.toUpperCase()}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                className={classes.TextBox}\n                                value={postCode}\n                                onChange={postCodeChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n                        </Grid>\n                      </li>\n                      <li className={classes.li}>\n                        <span className={classes.infoTitle}>ADDRESS</span>\n                        <span\n                          hidden={\n                            editMode.edit && editMode.person._id === booking._id\n                          }\n                          className={classes.infoData}\n                        >\n                          {booking.address?.toUpperCase()}\n                        </span>\n                        <span\n                          hidden={\n                            !(\n                              editMode.edit &&\n                              editMode.person._id === booking._id\n                            )\n                          }\n                          className={classes.infoData}\n                        >\n                          <TextField\n                            fullWidth\n                            className={classes.TextBox}\n                            value={address}\n                            onChange={addressChanged}\n                            inputProps={{\n                              style: {\n                                padding: 0,\n                              },\n                            }}\n                          ></TextField>\n                        </span>\n                      </li>\n\n                      {booking.selfIsolate && (\n                        <React.Fragment>\n                          <li className={classes.li}>\n                            <span className={classes.infoTitle}>\n                              Self-Isolate Post Code\n                            </span>{\" \"}\n                            <span className={classes.infoData}>\n                              {booking.postCodeSI}\n                            </span>\n                          </li>\n                          <li className={classes.li}>\n                            <span className={classes.infoTitle}>\n                              Self-Isolate Address\n                            </span>{\" \"}\n                            <span className={classes.infoData}>\n                              {booking.addressSI}\n                            </span>\n                          </li>\n                        </React.Fragment>\n                      )}\n\n                      <li className={classes.li}>\n                        <Grid container spacing={2}>\n                          <Grid item xs={6}>\n                            <span className={classes.infoTitle}>\n                              PASSPORT NO.\n                            </span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {booking.passportNumber?.toUpperCase()}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                className={classes.TextBox}\n                                value={passport}\n                                onChange={passportChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n\n                          {!booking.tr && (\n                            <Grid item xs={6}>\n                              <span className={classes.infoTitle}>\n                                SECOND PASSPORT NO.\n                              </span>\n                              <span\n                                hidden={\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                }\n                                className={classes.infoData}\n                              >\n                                {booking.passportNumber2?.toUpperCase()}\n                              </span>\n                              <span\n                                hidden={\n                                  !(\n                                    editMode.edit &&\n                                    editMode.person._id === booking._id\n                                  )\n                                }\n                                className={classes.infoData}\n                              >\n                                <TextField\n                                  fullWidth\n                                  className={classes.TextBox}\n                                  value={passport2}\n                                  onChange={passport2Changed}\n                                  inputProps={{\n                                    style: {\n                                      padding: 0,\n                                    },\n                                  }}\n                                ></TextField>\n                              </span>\n                            </Grid>\n                          )}\n                        </Grid>\n                      </li>\n\n                      <li hidden={!booking.tr} className={classes.li}>\n                        <Grid container spacing={2}>\n                          <Grid item xs={6}>\n                            <span className={classes.infoTitle}>\n                              NHS Number\n                            </span>{\" \"}\n                            <span className={classes.infoData}>\n                              {booking.NHSNumber ?? \"-\"}\n                            </span>\n                          </Grid>\n                          <Grid item xs={6}>\n                            <span className={classes.infoTitle}>Ethnicity</span>{\" \"}\n                            <span className={classes.infoData}>\n                              {booking.ethnicity}\n                            </span>\n                          </Grid>\n                        </Grid>\n                      </li>\n\n                      <li hidden={!booking.tr} className={classes.li}>\n                        <Grid container spacing={2}>\n                          <Grid item xs={6}>\n                            <span className={classes.infoTitle}>\n                              Arrival Date\n                            </span>{\" \"}\n                            <span className={classes.infoData}>\n                              {booking.arrivalDate}\n                            </span>\n                          </Grid>\n                          <Grid item xs={6}>\n                            <span className={classes.infoTitle}>\n                              Flight Number\n                            </span>{\" \"}\n                            <span className={classes.infoData}>\n                              {booking.flightNumber}\n                            </span>\n                          </Grid>\n                        </Grid>\n                      </li>\n                      <li hidden={!booking.tr} className={classes.li}>\n                        <Grid container spacing={2}>\n                          <Grid item xs={6}>\n                            <span className={classes.infoTitle}>\n                              Last Departed Date\n                            </span>{\" \"}\n                            <span className={classes.infoData}>\n                              {booking.lastDepartedDate}\n                            </span>\n                          </Grid>\n                          <Grid item xs={6}>\n                            <span className={classes.infoTitle}>\n                              Travelling From\n                            </span>{\" \"}\n                            <span className={classes.infoData}>\n                              {booking.travellingFrom}\n                            </span>\n                          </Grid>\n                        </Grid>\n                      </li>\n\n                      <li hidden={booking.tr} className={classes.li}>\n                        <Grid container spacing={2}>\n                          <Grid item xs={6}>\n                            <span className={classes.infoTitle}>\n                              REQUEST FOR CERTIFICATE\n                            </span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {booking.certificate ? (\n                                <CheckIcon className={classes.checkIcon} />\n                              ) : (\n                                <CloseIcon className={classes.closeIcon} />\n                              )}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <FormControlLabel\n                                className={classes.formControl}\n                                control={\n                                  <Checkbox\n                                    className={classes.formControl}\n                                    color=\"secondary\"\n                                    name=\"certificate\"\n                                    checked={certificate}\n                                    onChange={certificateChanged}\n                                  />\n                                }\n                                label=\"\"\n                              />\n                            </span>\n                          </Grid>\n                          <Grid item xs={6}>\n                            <span className={classes.infoTitle}>\n                              REQUEST FOR ANTIBODY TEST\n                            </span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {booking.antiBodyTest ? (\n                                <CheckIcon className={classes.checkIcon} />\n                              ) : (\n                                <CloseIcon className={classes.closeIcon} />\n                              )}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <FormControlLabel\n                                className={classes.formControl}\n                                control={\n                                  <Checkbox\n                                    className={classes.formControl}\n                                    color=\"secondary\"\n                                    name=\"certificate\"\n                                    checked={antiBodyTest}\n                                    onChange={antiBodyTestChanged}\n                                  />\n                                }\n                                label=\"\"\n                              />\n                            </span>\n                          </Grid>\n                        </Grid>\n                      </li>\n                      <li className={classes.li} style={{ paddingTop: \"10px\" }}>\n                        <span className={classes.infoTitle}>STATUS</span>{\" \"}\n                        {getStatusLabel(booking.status)}\n                        {state.role !== \"pcrlab\" &&\n                          booking.status === \"sample_taken\" &&\n                          !(\n                            editMode.edit && editMode.person._id === booking._id\n                          ) && (\n                            <Button\n                              variant=\"outlined\"\n                              color=\"primary\"\n                              disabled={saving}\n                              onClick={(event) =>\n                                changeBackToBookingMade(event, booking._id)\n                              }\n                            >\n                              Change Back To Booking Made\n                            </Button>\n                          )}\n                        {(booking.status === \"report_sent\" ||\n                          booking.status === \"report_cert_sent\" ||\n                          booking.status === \"positive\") &&\n                          !(\n                            editMode.edit && editMode.person._id === booking._id\n                          ) &&\n                          state.role !== \"pcrlab\" && (\n                            <Button\n                              variant=\"outlined\"\n                              color=\"primary\"\n                              className={classes.ResendEmailsButton}\n                              onClick={(event) =>\n                                resendEmails(event, booking._id)\n                              }\n                            >\n                              Resend emails\n                            </Button>\n                          )}\n                      </li>\n\n                      <li hidden={booking.deleted || state.role === \"pcrlab\"}>\n                        <Button\n                          startIcon={<PrintIcon />}\n                          type=\"button\"\n                          fullWidth\n                          variant=\"outlined\"\n                          color=\"primary\"\n                          onClick={() => {\n                            downloadForm1(booking._id);\n                          }}\n                          // onTouchTap = {() => {downloadForm1(person._id)}}\n                          className={classes.DownloadForm}\n                        >\n                          Download Registration Form\n                        </Button>\n                      </li>\n\n                      <li hidden={booking.deleted || state.role === \"pcrlab\"}>\n                        <Button\n                          startIcon={<PrintIcon />}\n                          type=\"button\"\n                          fullWidth\n                          variant=\"outlined\"\n                          color=\"primary\"\n                          onClick={() => {\n                            downloadForm2(booking._id);\n                          }}\n                          // onTouchTap = {() => {downloadForm2(person._id)}}\n                          className={classes.DownloadForm}\n                        >\n                          Download Lab Form\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          state.role === \"pcrlab\" ||\n                          booking.deleted ||\n                          (booking.status !== \"report_sent\" &&\n                            booking.status !== \"report_cert_sent\" &&\n                            booking.status !== \"positive\")\n                        }\n                      >\n                        <Button\n                          startIcon={<PrintIcon />}\n                          type=\"button\"\n                          fullWidth\n                          variant=\"outlined\"\n                          color=\"primary\"\n                          onClick={() => {\n                            downloadLabResults(booking._id);\n                          }}\n                          // onTouchTap = {() => {downloadForm1(person._id)}}\n                          className={classes.DownloadForm}\n                        >\n                          Download Lab Results\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          state.role === \"pcrlab\" ||\n                          booking.deleted ||\n                          (booking.status !== \"report_cert_sent\" &&\n                            booking.status !== \"positive\")\n                        }\n                      >\n                        <Button\n                          startIcon={<PrintIcon />}\n                          type=\"button\"\n                          fullWidth\n                          variant=\"outlined\"\n                          color=\"primary\"\n                          onClick={() => {\n                            downloadCertificate(booking._id);\n                          }}\n                          // onTouchTap = {() => {downloadForm1(person._id)}}\n                          className={classes.DownloadForm}\n                        >\n                          Download Certificate\n                        </Button>\n                      </li>\n\n                      <li hidden={state.role === \"pcrlab\"}>\n                        <Button\n                          startIcon={<HistoryIcon />}\n                          type=\"button\"\n                          fullWidth\n                          variant=\"outlined\"\n                          color=\"secondary\"\n                          onClick={() => {\n                            setSelectedBooking(booking);\n                            setOpenTimeStampDialog(true);\n                          }}\n                          // onTouchTap = {() => {downloadForm1(person._id)}}\n                          className={classes.DownloadForm}\n                        >\n                          Show Audit Trail\n                        </Button>\n                      </li>\n\n                     \n\n                      {state.role !== \"pcrlab\" && (\n                        <div>\n                           <Divider />\n                          <li\n                            className={classes.li}\n                            style={{ marginTop: \"20px\" }}\n                          >\n                            <span className={classes.infoTitle}>\n                              INVOICE # :{\" \"}\n                            </span>{\" \"}\n                            <span style={{ paddingLeft: \"0px\" }}>\n                              {!invoiceLoaded && (\n                                <span className={classes.invoiceNumber}>\n                                  {\" \"}\n                                  ...{\" \"}\n                                </span>\n                              )}\n                              {invoiceLoaded && invoice && (\n                                <span className={classes.invoiceNumber}>\n                                  {\" \"}\n                                  {invoice.invoiceNumber}{\" \"}\n                                </span>\n                              )}\n                              {invoiceLoaded && !invoice && (\n                                <span\n                                  className={classes.invoiceNumber}\n                                  style={{ color: \"red\", fontSize: \"0.9rem\" }}\n                                >\n                                  {\" \"}\n                                  N/A{\" \"}\n                                </span>\n                              )}\n                            </span>\n                            {!(\n                              editMode.edit &&\n                              editMode.person._id === booking._id\n                            ) &&\n                              !booking.deleted && (\n                                <React.Fragment>\n                                  {invoiceLoaded && !invoice && (\n                                    <Button\n                                      variant=\"outlined\"\n                                      color=\"primary\"\n                                      className={classes.PayButton}\n                                      onClick={() => OpenInvoiceDialog()}\n                                    >\n                                      Issue Invoice\n                                    </Button>\n                                  )}\n\n                                  {invoiceLoaded && invoice && (\n                                    <React.Fragment>\n                                      <Button\n                                        variant=\"outlined\"\n                                        startIcon={<PrintIcon />}\n                                        color=\"primary\"\n                                        className={classes.printInvoiceButton}\n                                        onClick={() =>\n                                          downloadInvoice(invoice._id)\n                                        }\n                                      >\n                                        Download Invoice\n                                      </Button>\n\n                                      <Button\n                                        variant=\"outlined\"\n                                        color=\"secondary\"\n                                        className={classes.editInvoiceButton}\n                                        onClick={() => OpenInvoiceDialog()}\n                                      >\n                                        Edit Invoice\n                                      </Button>\n\n                                      <Button\n                                        disabled={\n                                          !booking.email ||\n                                          booking.email.length < 3\n                                        }\n                                        startIcon={<SendIcon />}\n                                        type=\"button\"\n                                        variant=\"outlined\"\n                                        color=\"primary\"\n                                        onClick={() => {\n                                          sendInvoiceEmail(\n                                            invoice._id,\n                                            booking.email\n                                          );\n                                        }}\n                                        style={{\n                                          position: \"relative\",\n                                          marginLeft: \"10px\",\n                                          paddingRight: \"130px\",\n                                          fontSize: \"0.8rem\",\n                                        }}\n                                      >\n                                        Send Invoice By Email\n                                        {emailSentInvoice && (\n                                          <div\n                                            style={{\n                                              position: \"absolute\",\n                                              right: \"10px\",\n                                              top: \"5px\",\n                                              color: \"#05ad19\",\n                                            }}\n                                          >\n                                            Email Sent\n                                          </div>\n                                        )}\n                                      </Button>\n                                    </React.Fragment>\n                                  )}\n                                </React.Fragment>\n                              )}\n                          </li>\n\n                          <li className={classes.li}>\n                            <span className={classes.infoTitle}>\n                              TOTAL CHARGES\n                            </span>{\" \"}\n                            <span\n                              className={\n                                calculatePrice(booking) <= 199\n                                  ? classes.infoDataCharges\n                                  : classes.infoDataChargesHigher\n                              }\n                            >{`£${calculatePrice(booking)}`}</span>\n                            {!(\n                              editMode.edit &&\n                              editMode.person._id === booking._id\n                            ) &&\n                              !booking.paid &&\n                              !booking.deleted && (\n                                <Button\n                                  variant=\"outlined\"\n                                  color=\"secondary\"\n                                  className={classes.PayButton}\n                                  onClick={(event) => Pay(event, booking._id)}\n                                >\n                                  Pay\n                                </Button>\n                              )}\n                            {!(\n                              editMode.edit &&\n                              editMode.person._id === booking._id\n                            ) &&\n                              booking.paid && (\n                                <React.Fragment>\n                                  <span className={classes.PayLabel}>\n                                    {\" \"}\n                                    <CheckIcon\n                                      className={classes.checkIconSmall}\n                                    />{\" \"}\n                                    Paid by {booking.paidBy}\n                                    {booking.paidBy === \"corporate\"\n                                      ? ` \"${booking.corporate}\" `\n                                      : \"\"}\n                                  </span>\n\n                                  <Tooltip title=\"Undo Payment\">\n                                    <IconButton\n                                      onClick={() => setOpenUndoPayDialog(true)}\n                                    >\n                                      <UndoIcon style={{ color: \"red\" }} />\n                                    </IconButton>\n                                  </Tooltip>\n                                </React.Fragment>\n                              )}\n                          </li>\n                        </div>\n                      )}\n                    </ul>\n                  </div>\n                </Grid>\n              </div>\n              <Backdrop\n                className={classes.backdrop}\n                open={saving || deleting || restoring}\n              >\n                <CircularProgress color=\"inherit\" />\n              </Backdrop>\n            </DialogContent>\n\n            <ResendEmailsDialog\n              booking={selectedBooking}\n              open={openResendDialog}\n              handleClose={handleCloseResendDialog}\n            />\n            <PayDialog\n              booking={selectedBooking}\n              open={openPayDialog}\n              handleClose={handleClosePayDialog}\n            />\n\n            <InvoiceDialog\n              booking={selectedBooking}\n              invoice={invoice}\n              open={openInvoiceDialog}\n              defaultCodes={getDefaultCodes(props.booking)}\n              handleClose={handleCloseInvoiceDialog}\n            />\n\n            <TimeStampDialog\n              booking={selectedBooking}\n              open={openTimeStampDialog}\n              handleClose={handleCloseTimeStampDialog}\n            />\n          </Dialog>\n\n          <Dialog\n            open={openUndoPayDialog}\n            onClose={handleCloseUndoPayDialog}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n          >\n            <DialogTitle style={{ color: \"#999\" }} id=\"alert-dialog-title\">\n              {\"Undo Payment\"}\n            </DialogTitle>\n            <DialogContent>\n              <DialogContentText\n                style={{ color: \"#333\", fontWeight: \"400\" }}\n                id=\"alert-dialog-description\"\n              >\n                Are you sure you want to undo payment for this booking?\n              </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={handleCloseUndoPayDialog} color=\"default\">\n                Back\n              </Button>\n              <Button onClick={undoPaymentClicked} color=\"secondary\" autoFocus>\n                Yes, Undo Payment\n              </Button>\n            </DialogActions>\n          </Dialog>\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n}\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { DataGrid } from \"@material-ui/data-grid\";\nimport BookService from \"./services/BookService\";\nimport {\n  Button,\n  Checkbox,\n  CircularProgress,\n  Dialog,\n  DialogContent,\n  DialogTitle,\n  Divider,\n  FormControl,\n  FormControlLabel,\n  Grid,\n  Icon,\n  InputLabel,\n  LinearProgress,\n  Link,\n  makeStyles,\n  MenuItem,\n  Paper,\n  Select,\n  SvgIcon,\n  Switch,\n  TextField,\n  Tooltip,\n} from \"@material-ui/core\";\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\nimport { IconButton } from \"@material-ui/core\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport GlobalState from \"./../GlobalState\";\nimport { getMenuIndex } from \"./../MenuList\";\nimport {\n  FormatDateFromString,\n  FormatDateFromStringShortYear,\n} from \"./DateFormatter\";\n\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport BookingDialog from \"./BookingDialog\";\n\nimport NewReleasesIcon from \"@material-ui/icons/NewReleases\";\nimport HistoryIcon from \"@material-ui/icons/History\";\nimport TimelineIcon from \"@material-ui/icons/Timeline\";\nimport DescriptionIcon from \"@material-ui/icons/Description\";\nimport AutorenewIcon from \"@material-ui/icons/Autorenew\";\nimport LiveTvIcon from \"@material-ui/icons/LiveTv\";\nimport PlaylistAddCheckIcon from \"@material-ui/icons/PlaylistAddCheck\";\nimport AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport HourglassEmptyIcon from \"@material-ui/icons/HourglassEmpty\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faFileExcel } from \"@fortawesome/free-solid-svg-icons\";\nimport Draggable from \"react-draggable\";\n\nimport * as dateformat from \"dateformat\";\n\nimport DateFnsUtils from \"@date-io/date-fns\";\n\nimport MomentUtils from \"@date-io/moment\";\nimport moment from \"moment\";\n\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardTimePicker,\n  KeyboardDatePicker,\n} from \"@material-ui/pickers\";\n\nimport BusinessIcon from \"@material-ui/icons/Business\";\nimport CreditCardIcon from \"@material-ui/icons/CreditCard\";\nimport LocalAtmIcon from \"@material-ui/icons/LocalAtm\";\n\nimport ReactHTMLTableToExcel from \"react-html-table-to-excel\";\nimport PriceCalculator from \"./PriceCalculator\";\nimport { corporates } from \"./Corporates\";\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    marginTop: theme.spacing(0),\n    marginBottom: theme.spacing(1),\n  },\n\n  refreshButton: {\n    marginLeft: theme.spacing(2),\n  },\n\n  checkIcon: {\n    color: \"green\",\n  },\n\n  closeIcon: {\n    color: \"red\",\n  },\n\n  RefLink: {\n    cursor: \"pointer\",\n  },\n\n  BookedLabel: {\n    backgroundColor: \"#606060\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  PatientAttendedLabel: {\n    backgroundColor: \"#0066aa\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  SampleTakenLabel: {\n    backgroundColor: \"#0066cc\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  ReportSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  ReportCertSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  PositiveLabel: {\n    backgroundColor: \"red\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  HideNowRows: {\n    position: \"absolute\",\n    top: \"40%\",\n    left: \"40%\",\n    width: \"600px\",\n    height: \"300px\",\n    backgroundColor: \"#fafafa\",\n    color: \"#111\",\n    zIndex: \"1000\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyItems: \"center\",\n  },\n\n  ExportToExcelButton: {\n    // marginBottom : \"20px\",\n    color: \"#2f942e\",\n    borderColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"#fafffa\",\n      borderColor: \"#2f942e\",\n    },\n    textDecoration: \"none !important\",\n  },\n\n  ExportToExcelButtonInline: {\n    // marginBottom : \"20px\",\n    color: \"#2f942e\",\n    borderColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"#fafffa\",\n      borderColor: \"#2f942e\",\n    },\n    textDecoration: \"none !important\",\n    cursor: \"pointer\",\n    padding: \"10px\",\n  },\n\n  table: {\n    width: \"100%\",\n    border: \"1px solid #ddd\",\n    borderCollapse: \"collapse\",\n  },\n\n  th: {\n    border: \"1px solid #ddd\",\n    borderCollapse: \"collapse\",\n    verticalAlign: \"middle\",\n    fontcolor: \"#555\",\n    fontWeight: \"400\",\n    fontSize: \"15px\",\n    paddingTop: \"5px\",\n    paddingBottom: \"5px\",\n    width: \"14%\",\n    paddingLeft: \"5px\",\n  },\n\n  td: {\n    border: \"1px solid #ddd\",\n    borderCollapse: \"collapse\",\n    verticalAlign: \"middle\",\n    paddingLeft: \"5px\",\n  },\n\n  topSelect: {\n    margin: theme.spacing(1),\n    minWidth: 80,\n  },\n}));\n\nconst getTableTitle = (str) => {\n  if (str === \"today\") {\n    return `Today's Bookings`;\n  } else if (str === \"old\") {\n    return `Old Bookings`;\n  } else if (str === \"future\") {\n    return `Future Bookings`;\n  } else if (str === \"recent\") {\n    return `Recent Bookings`;\n  } else if (str === \"live\") {\n    return `Live Bookings`;\n  } else if (str === \"completed\") {\n    return `Completed Bookings`;\n  } else if (str === \"positive\") {\n    return `Positive Results`;\n  } else if (str === \"deleted\") {\n    return `Deleted Records`;\n  } else if (str === \"late\") {\n    return `40 Hours Late`;\n  } else if (str === \"tr\") {\n    return `Test & Release Bookings`;\n  } else {\n    return `All Bookings`;\n  }\n};\n\nconst getTableIcon = (str) => {\n  if (str === \"today\") {\n    return <NewReleasesIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else if (str === \"old\") {\n    return <HistoryIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else if (str === \"future\") {\n    return <TimelineIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else if (str === \"recent\") {\n    return <AutorenewIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else if (str === \"live\") {\n    return <LiveTvIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else if (str === \"completed\") {\n    return <PlaylistAddCheckIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else if (str === \"positive\") {\n    return <AddCircleOutlineIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else if (str === \"deleted\") {\n    return <DeleteIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else if (str === \"late\") {\n    return <HourglassEmptyIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else {\n    return <DescriptionIcon style={{ fontSize: \"2.2rem\" }} />;\n  }\n};\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable\n      handle=\"#draggable-dialog-title\"\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\n    >\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nexport default function BookingTable(props) {\n  const classes = useStyles();\n\n  const [state, setState] = React.useContext(GlobalState);\n\n  const [topCount, setTopCount] = React.useState(25);\n  const topCountChanged = (event) => {\n    setTopCount(event.target.value);\n    loadData(event.target.value);\n  };\n\n  const [openDialogExcel, setOpenDialogExcel] = useState(false);\n  const handleCloseDialogExcel = () => {\n    setCorporate(corporates[0]);\n    setJustCorporate(false);\n    setOpenDialogExcel(false);\n  };\n\n  const [fromDate, setFromDate] = React.useState(\n    new Date(new Date().getTime() - 7 * 24 * 60 * 60 * 1000)\n  );\n  const handleFromDateChange = (date) => {\n    setFromDate(date);\n    setFromDateStr(dateformat(date, \"yyyy-mm-dd\"));\n  };\n\n  const [untilDate, setUntilDate] = React.useState(\n    new Date(new Date().getTime() - 1 * 24 * 60 * 60 * 1000)\n  );\n  const handleUntilDateChange = (date) => {\n    setUntilDate(date);\n    seUntilDateStr(dateformat(date, \"yyyy-mm-dd\"));\n  };\n\n  const [fromDateStr, setFromDateStr] = useState(\n    dateformat(\n      new Date(new Date().getTime() - 7 * 24 * 60 * 60 * 1000),\n      \"yyyy-mm-dd\"\n    )\n  );\n  const [untilDateStr, seUntilDateStr] = useState(\n    dateformat(\n      new Date(new Date().getTime() - 1 * 24 * 60 * 60 * 1000),\n      \"yyyy-mm-dd\"\n    )\n  );\n\n  const [justCorporate, setJustCorporate] = useState(false);\n\n  const [chkDate, setChkDate] = useState(true);\n  const [chkForename, setChkForename] = useState(true);\n  const [chkSurname, setChkSurname] = useState(true);\n  const [chkDOB, setChkDOB] = useState(true);\n  const [chkEmail, setChkEmail] = useState(true);\n  const [chkTel, setChkTel] = useState(true);\n  const [chkCertificate, setChkCertidicate] = useState(true);\n  const [chkAntiBodyTest, setChkAntiBodyTest] = useState(true);\n  const [chkextRef, setChkExtRef] = useState(true);\n  const [chkPrice, setChkPrice] = useState(true);\n\n  const justCorporateChanged = (event) => {\n    setJustCorporate(event.target.checked);\n  };\n\n  const chkDateChanged = (event) => {\n    setChkDate(event.target.checked);\n  };\n\n  const chkForenameChanged = (event) => {\n    setChkForename(event.target.checked);\n  };\n\n  const chkSurnameChanged = (event) => {\n    setChkSurname(event.target.checked);\n  };\n\n  const chkDOBChanged = (event) => {\n    setChkDOB(event.target.checked);\n  };\n\n  const chkEmailChanged = (event) => {\n    setChkEmail(event.target.checked);\n  };\n\n  const chkTelChanged = (event) => {\n    setChkTel(event.target.checked);\n  };\n\n  const chkCertificateChanged = (event) => {\n    setChkCertidicate(event.target.checked);\n  };\n\n  const chkAntiBodyTestChanged = (event) => {\n    setChkAntiBodyTest(event.target.checked);\n  };\n\n  const chkextRefChanged = (event) => {\n    setChkExtRef(event.target.checked);\n  };\n\n  const chkPriceChanged = (event) => {\n    setChkPrice(event.target.checked);\n  };\n\n  var columns = [];\n\n  if (props.date === \"recent\" && state.role !== \"pcrlab\") {\n    columns = [\n      // { field: 'id', headerName: '#', width: 70 },\n\n      {\n        field: \"_id\",\n        headerName: \" \",\n        width: 70,\n        renderCell: (params) => {\n          return (\n            <React.Fragment>\n              {params.getValue(\"tr\") ? (\n                <span\n                  style={{\n                    position: \"absolute\",\n                    fontSize: \"12px\",\n                    fontWeight: \"600\",\n                    color: \"#7e0082\",\n                  }}\n                >\n                  TR\n                </span>\n              ) : (\n                \"\"\n              )}\n\n              {state.role !== \"pcrlab\" && (\n                <Button\n                  color=\"primary\"\n                  onClick={(event) => openDetailsDialog(event, params.value)}\n                >\n                  <SearchIcon />\n                </Button>\n              )}\n            </React.Fragment>\n          );\n        },\n      },\n\n      {\n        field: \"timeStamp\",\n        headerName: \"TimeStamp\",\n        width: 200,\n        valueFormatter: (params) => {\n          return formatTimeStamp(params.value);\n        },\n      },\n\n      {\n        field: \"bookingDate\",\n        headerName: \"B Date\",\n        width: 110,\n        valueFormatter: (params) => {\n          return FormatDateFromString(params.value);\n        },\n      },\n      {\n        field: \"bookingTimeNormalized\",\n        headerName: \"B Time\",\n        width: 105,\n        valueGetter: (params) => {\n          return params.getValue(\"bookingTime\");\n        },\n      },\n      {\n        field: \"status\",\n        headerName: \"Status\",\n        width: 100,\n        renderCell: (params) => {\n          if (params.value === \"booked\") {\n            return <span className={classes.BookedLabel}> BM </span>;\n          } else if (params.value === \"patient_attended\") {\n            return <span className={classes.PatientAttendedLabel}> PA </span>;\n          } else if (params.value === \"sample_taken\") {\n            return <span className={classes.SampleTakenLabel}> ST </span>;\n          } else if (params.value === \"report_sent\") {\n            return <span className={classes.ReportSentLabel}> RS </span>;\n          } else if (params.value === \"report_cert_sent\") {\n            return <span className={classes.ReportCertSentLabel}> RCS </span>;\n          } else if (params.value === \"positive\") {\n            return <span className={classes.PositiveLabel}> POS </span>;\n          } else {\n            return \"Unknown\";\n          }\n        },\n      },\n      {\n        field: \"bookingRef\",\n        headerName: \"Ref No.\",\n        width: 120,\n        renderCell: (params) => {\n          return (\n            // <Tooltip title=\"Go Find By Ref\" placement=\"right\">\n            <Link\n              className={classes.RefLink}\n              //  onClick={\n              //   () => {\n              //     console.log(params.value);\n\n              //     setState(state => ({...state, currentMenuIndex: getMenuIndex(`pcr` , `findByRef`)}));\n              //     setState(state => ({...state, ref : params.value}));\n              //     setState(state => ({...state, refError : false}));\n              //     setState(state => ({...state, foundRecords : []}));\n              //     setState(state => ({...state, findRecords : !state.findRecords}));\n              //   }\n              // }\n            >\n              {params.value}\n            </Link>\n            // </Tooltip>\n          );\n        },\n      },\n      { field: \"forenameCapital\", headerName: \"Forename\", width: 150 },\n      { field: \"surnameCapital\", headerName: \"Surname\", width: 150 },\n      {\n        field: \"birthDate\",\n        headerName: \"D.O.B\",\n        width: 110,\n        valueFormatter: (params) => {\n          return FormatDateFromString(params.value);\n        },\n      },\n      {\n        field: \"email\",\n        headerName: \"Email\",\n        width: 200,\n        valueFormatter: (params) => {\n          return params.value.toUpperCase();\n        },\n      },\n      { field: \"phone\", headerName: \"Tel\", width: 150 },\n      {\n        field: \"passportNumber\",\n        headerName: \"Passport No.\",\n        width: 250,\n        //  valueGetter: (params) => {\n        //   const pass2 = params.getValue('passportNumber2');\n        //   if (pass2 && pass2.length > 0 && pass2.trim().length > 0)\n        //   {\n        //     return `${params.getValue('passportNumber')?.toUpperCase()} - ${params.getValue('passportNumber2')?.toUpperCase()}`\n        //   }\n        //   else\n        //   {\n        //     return params.getValue('passportNumber')?.toUpperCase();\n        //   }\n        // }\n      },\n      {\n        field: \"certificate\",\n        headerName: \"Certificate\",\n        width: 120,\n        renderCell: (params) => {\n          return params.value ? (\n            <CheckIcon className={classes.checkIcon} />\n          ) : (\n            <CloseIcon className={classes.closeIcon} />\n          );\n        },\n      },\n      {\n        field: \"antiBodyTest\",\n        headerName: \"Antibody Test\",\n        width: 120,\n        renderCell: (params) => {\n          return params.value ? (\n            <CheckIcon className={classes.checkIcon} />\n          ) : (\n            <CloseIcon className={classes.closeIcon} />\n          );\n        },\n      },\n      {\n        field: \"postCode\",\n        headerName: \"Post Code\",\n        width: 150,\n        valueFormatter: (params) => {\n          return params.value.toUpperCase();\n        },\n      },\n      {\n        field: \"address\",\n        headerName: \"Address\",\n        width: 500,\n        valueFormatter: (params) => {\n          return params.value.toUpperCase();\n        },\n      },\n      // { field: 'notes', headerName: 'Notes', width: 500 },\n    ];\n  } else if (state.role === \"pcrlab\") {\n    columns = [\n      {\n        field: \"bookingDate\",\n        headerName: \"Booking Date\",\n        width: 200,\n        valueFormatter: (params) => {\n          return FormatDateFromString(params.value);\n        },\n      },\n      {\n        field: \"bookingTimeNormalized\",\n        headerName: \"Booking Time\",\n        width: 200,\n        valueGetter: (params) => {\n          return params.getValue(\"bookingTime\");\n        },\n      },\n      {\n        field: \"status\",\n        headerName: \"Status\",\n        width: 100,\n        renderCell: (params) => {\n          if (params.value === \"booked\") {\n            return <span className={classes.BookedLabel}> BM </span>;\n          } else if (params.value === \"patient_attended\") {\n            return <span className={classes.PatientAttendedLabel}> PA </span>;\n          } else if (params.value === \"sample_taken\") {\n            return <span className={classes.SampleTakenLabel}> ST </span>;\n          } else if (params.value === \"report_sent\") {\n            return <span className={classes.ReportSentLabel}> RS </span>;\n          } else if (params.value === \"report_cert_sent\") {\n            return <span className={classes.ReportCertSentLabel}> RCS </span>;\n          } else if (params.value === \"positive\") {\n            return <span className={classes.PositiveLabel}> POS </span>;\n          } else {\n            return \"Unknown\";\n          }\n        },\n      },\n      { field: \"forenameCapital\", headerName: \"Forename\", width: 300 },\n      { field: \"surnameCapital\", headerName: \"Surname\", width: 300 },\n      {\n        field: \"birthDate\",\n        headerName: \"D.O.B\",\n        width: 110,\n        valueFormatter: (params) => {\n          return FormatDateFromString(params.value);\n        },\n      },\n    ];\n  } else {\n    columns = [\n      // { field: 'id', headerName: '#', width: 70 },\n\n      {\n        field: \"_id\",\n        headerName: \" \",\n        width: 70,\n        renderCell: (params) => {\n          return (\n            <React.Fragment>\n              {params.getValue(\"tr\") ? (\n                <span\n                  style={{\n                    position: \"absolute\",\n                    fontSize: \"12px\",\n                    fontWeight: \"600\",\n                    color: \"#7e0082\",\n                  }}\n                >\n                  TR\n                </span>\n              ) : (\n                \"\"\n              )}\n\n              {state.role !== \"pcrlab\" && (\n                <Button\n                  color=\"primary\"\n                  onClick={(event) => openDetailsDialog(event, params.value)}\n                >\n                  <SearchIcon />\n                </Button>\n              )}\n            </React.Fragment>\n          );\n        },\n      },\n\n      {\n        field: \"paid\",\n        headerName: \"Paid\",\n        align: \"center\",\n        width: 90,\n        renderCell: (params) => {\n          if (!params.value) {\n            return <CloseIcon className={classes.closeIcon} />;\n          } else {\n            if (params.getValue(\"paidBy\") === \"credit card\") {\n              return <CreditCardIcon className={classes.checkIcon} />;\n            } else if (params.getValue(\"paidBy\") === \"cash\") {\n              return <LocalAtmIcon className={classes.checkIcon} />;\n            } else if (params.getValue(\"paidBy\") === \"corporate\") {\n              return <BusinessIcon className={classes.checkIcon} />;\n            } else {\n              return \"\";\n            }\n          }\n        },\n      },\n\n      {\n        field: \"bookingDate\",\n        headerName: \"B Date\",\n        width: 110,\n        valueFormatter: (params) => {\n          return FormatDateFromString(params.value);\n        },\n      },\n      {\n        field: \"bookingTimeNormalized\",\n        headerName: \"B Time\",\n        width: 105,\n        valueGetter: (params) => {\n          return params.getValue(\"bookingTime\");\n        },\n      },\n      {\n        field: \"status\",\n        headerName: \"Status\",\n        width: 100,\n        renderCell: (params) => {\n          if (params.value === \"booked\") {\n            return <span className={classes.BookedLabel}> BM </span>;\n          } else if (params.value === \"patient_attended\") {\n            return <span className={classes.PatientAttendedLabel}> PA </span>;\n          } else if (params.value === \"sample_taken\") {\n            return <span className={classes.SampleTakenLabel}> ST </span>;\n          } else if (params.value === \"report_sent\") {\n            return <span className={classes.ReportSentLabel}> RS </span>;\n          } else if (params.value === \"report_cert_sent\") {\n            return <span className={classes.ReportCertSentLabel}> RCS </span>;\n          } else if (params.value === \"positive\") {\n            return <span className={classes.PositiveLabel}> POS </span>;\n          } else {\n            return \"Unknown\";\n          }\n        },\n      },\n      {\n        field: \"bookingRef\",\n        headerName: \"Ref No.\",\n        width: 120,\n        renderCell: (params) => {\n          return (\n            // <Tooltip title=\"Go Find By Ref\" placement=\"right\">\n            <Link\n              className={classes.RefLink}\n              onClick={() => {\n                // console.log(params.value);\n                // setState(state => ({...state, currentMenuIndex: getMenuIndex(`findByRef`)}));\n                // setState(state => ({...state, ref : params.value}));\n                // setState(state => ({...state, refError : false}));\n                // setState(state => ({...state, foundRecords : []}));\n                // setState(state => ({...state, findRecords : !state.findRecords}));\n              }}\n            >\n              {params.value}\n            </Link>\n            // </Tooltip>\n          );\n        },\n      },\n      { field: \"forenameCapital\", headerName: \"Forename\", width: 150 },\n      { field: \"surnameCapital\", headerName: \"Surname\", width: 150 },\n      {\n        field: \"birthDate\",\n        headerName: \"D.O.B\",\n        width: 110,\n        valueFormatter: (params) => {\n          return FormatDateFromString(params.value);\n        },\n      },\n      {\n        field: \"email\",\n        headerName: \"Email\",\n        width: 200,\n        valueFormatter: (params) => {\n          return params.value.toUpperCase();\n        },\n      },\n      { field: \"phone\", headerName: \"Tel\", width: 150 },\n      {\n        field: \"passportNumber\",\n        headerName: \"Passport No.\",\n        width: 250,\n        // valueGetter: (params) => {\n        //   const pass2 = params.getValue('passportNumber2');\n        //   if (pass2 && pass2.length > 0 && pass2.trim().length > 0)\n        //   {\n        //     return `${params.getValue('passportNumber')?.toUpperCase()} - ${params.getValue('passportNumber2')?.toUpperCase()}`\n        //   }\n        //   else\n        //   {\n        //     return params.getValue('passportNumber')?.toUpperCase();\n        //   }\n        // }\n      },\n      {\n        field: \"certificate\",\n        headerName: \"Certificate\",\n        width: 120,\n        renderCell: (params) => {\n          return params.value ? (\n            <CheckIcon className={classes.checkIcon} />\n          ) : (\n            <CloseIcon className={classes.closeIcon} />\n          );\n        },\n      },\n      {\n        field: \"antiBodyTest\",\n        headerName: \"Antibody Test\",\n        width: 120,\n        renderCell: (params) => {\n          return params.value ? (\n            <CheckIcon className={classes.checkIcon} />\n          ) : (\n            <CloseIcon className={classes.closeIcon} />\n          );\n        },\n      },\n      {\n        field: \"postCode\",\n        headerName: \"Post Code\",\n        width: 150,\n        valueFormatter: (params) => {\n          return params.value.toUpperCase();\n        },\n      },\n      {\n        field: \"address\",\n        headerName: \"Address\",\n        width: 500,\n        valueFormatter: (params) => {\n          return params.value.toUpperCase();\n        },\n      },\n      // { field: 'notes', headerName: 'Notes', width: 500 },\n    ];\n  }\n\n  const [data, setData] = React.useState({\n    bookings: [],\n    cachedBookings: [],\n    isFetching: true,\n  });\n\n  const [selectedRow, setSelectedRow] = React.useState(null);\n\n  const [selectedBooking, setSelectedBooking] = React.useState(null);\n  const [seeDetailsDialogOpen, setSeeDetailsDialogOpen] = React.useState(false);\n\n  const dateFormatter = (str) => {\n    return str;\n  };\n\n  const [corporate, setCorporate] = useState(corporates[0]);\n  const corporateChanged = (event) => {\n    setCorporate(event.target.value);\n  };\n\n  const [filter, setFilter] = React.useState(\"\");\n\n  const lastPromise = useRef();\n\n  const formatTimeStamp = (timeStamp) => {\n    const todayStr = dateformat(new Date(), \"yyyy-mm-dd\");\n    const timeStampStr = dateformat(timeStamp, \"yyyy-mm-dd\");\n    if (todayStr === timeStampStr) {\n      return dateformat(timeStamp, \"'Today', h:MM:ss TT\");\n    } else {\n      return dateformat(timeStamp, \"mmm dS, h:MM:ss TT\");\n    }\n  };\n\n  const loadData = (top) => {\n    var api = BookService.getAllBookings;\n    if (props.date === \"today\") {\n      api = BookService.getTodayBookings;\n    } else if (props.date === \"old\") {\n      api = BookService.getOldBookings;\n    } else if (props.date === \"future\") {\n      api = BookService.getFutureBookings;\n    } else if (props.date === \"recent\") {\n      api = BookService.getRecentBookingsAll;\n    } else if (props.date === \"live\") {\n      api = BookService.getLiveBookings;\n    } else if (props.date === \"completed\") {\n      api = BookService.getCompletedBookings;\n    } else if (props.date === \"positive\") {\n      api = BookService.getPositiveBookings;\n    } else if (props.date === \"deleted\") {\n      api = BookService.getDeletedBookings;\n    } else if (props.date === \"late\") {\n      api = BookService.getLateBookings;\n    } else if (props.date === \"tr\") {\n      api = BookService.getAllTRBookings;\n    }\n\n    setData({ bookings: [], cachedBookings: [], isFetching: true });\n\n    // console.log(props)\n\n    const currentPromise = api(top)\n      .then((res) => {\n        // console.log(res)\n        for (var i = 0; i < res.data.length; i++) {\n          res.data[i] = { ...res.data[i], id: i + 1 };\n        }\n        setData({\n          bookings: [...res.data],\n          cachedBookings: [...res.data],\n          isFetching: false,\n        });\n        // return res.data;\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n\n    // lastPromise.current = currentPromise;\n\n    // currentPromise.then(\n    //   result => {\n    //     if (currentPromise === lastPromise.current) {\n    //       setData({bookings: [...result], cachedBookings: [...result], isFetching: false});\n    //       setPage(1);\n    //     }\n    //   },\n    //   e => {\n    //     if (currentPromise === lastPromise.current) {\n    //         console.error(e);\n    //         setData({bookings: data.bookings, cachedBookings: data.cachedBookings, isFetching: false});\n    //     }\n    //   });\n  };\n\n  useEffect(() => {\n    setTopCount(25);\n    loadData(25);\n  }, [props.date]);\n\n  useEffect(() => {\n    if (filter && filter.trim().length > 0) {\n      var filteredData = data.cachedBookings.filter(\n        (element) =>\n          element.forename.toLowerCase().indexOf(filter.toLowerCase()) >= 0 ||\n          element.surname.toLowerCase().indexOf(filter.toLowerCase()) >= 0 ||\n          `${element.forename} ${element.surname}`\n            .toLowerCase()\n            .indexOf(filter.toLowerCase()) >= 0\n      );\n\n      setData({\n        bookings: [...filteredData],\n        cachedBookings: data.cachedBookings,\n        isFetching: false,\n      });\n    } else {\n      setData({\n        bookings: [...data.cachedBookings],\n        cachedBookings: data.cachedBookings,\n        isFetching: false,\n      });\n    }\n  }, [filter]);\n\n  useEffect(() => {\n    loadData(topCount);\n  }, [state.bookingDialogDataChanged]);\n\n  const handleCloseSeeDetaisDialog = () => {\n    setSelectedBooking(null);\n    setSeeDetailsDialogOpen(false);\n  };\n\n  const openDetailsDialog = (event, id) => {\n    const booking = data.bookings.find((element) => element._id === id);\n    setSelectedBooking(booking);\n    setSeeDetailsDialogOpen(true);\n  };\n\n  const refreshClicked = (event) => {\n    setFilter(\"\");\n    loadData(topCount);\n  };\n\n  const filterChanged = (event) => {\n    setFilter(event.target.value);\n  };\n\n  const handleSelectionChanged = (newSelection) => {\n    if (newSelection.length > 0) {\n      setSelectedRow(newSelection.rows[0]);\n    }\n  };\n\n  const [page, setPage] = React.useState(1);\n\n  const handleExcelButtonClicked = (event) => {\n    setOpenDialogExcel(true);\n  };\n\n  const isTopSelectHidden = (date) => {\n    return (\n      date === \"live\" ||\n      date === \"positive\" ||\n      date === \"late\" ||\n      date === \"today\"\n    );\n  };\n\n  return (\n    <React.Fragment>\n      {data.isFetching && (\n        <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\n          <LinearProgress color=\"primary\" />\n        </div>\n      )}\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"space-between\"\n        alignItems=\"flex-end\"\n      >\n        <Grid item md={4}>\n          <div style={{ textAlign: \"left\", paddingLeft: \"10px\" }}>\n            <Grid\n              container\n              direction=\"row\"\n              justify=\"flex-start\"\n              alignItems=\"center\"\n            >\n              <Grid item>\n                <span style={{ paddingRight: \"15px\", color: \"#555\" }}>\n                  {\" \"}\n                  {getTableIcon(props.date)}{\" \"}\n                </span>\n              </Grid>\n              <Grid item>\n                <span\n                  style={{\n                    fontSize: \"1.4rem\",\n                    fontWeight: \"600\",\n                    color: \"#444\",\n                  }}\n                >\n                  {\" \"}\n                  {getTableTitle(props.date)}{\" \"}\n                </span>\n              </Grid>\n              <Grid item>\n                <Tooltip title=\"Refresh\" placement=\"right\">\n                  <IconButton\n                    color=\"primary\"\n                    className={classes.refreshButton}\n                    onClick={refreshClicked}\n                  >\n                    <RefreshIcon />\n                  </IconButton>\n                </Tooltip>\n              </Grid>\n            </Grid>\n          </div>\n        </Grid>\n\n        <Grid item md={3}>\n          {props.date === \"completed\" && state.userId.username === \"admin\" && (\n            <div style={{ paddingBottom: \"5px\" }}>\n              <Button\n                className={classes.ExportToExcelButton}\n                variant=\"outlined\"\n                color=\"default\"\n                onClick={handleExcelButtonClicked}\n                startIcon={\n                  <FontAwesomeIcon\n                    style={{ color: \"#009900\" }}\n                    icon={faFileExcel}\n                  />\n                }\n              >\n                export to excel\n              </Button>\n            </div>\n          )}\n        </Grid>\n\n        {data.isFetching && <div className={classes.HideNowRows}></div>}\n\n        <Grid item md={3}>\n          <TextField\n            variant=\"standard\"\n            value={filter}\n            onChange={filterChanged}\n            margin=\"normal\"\n            size=\"small\"\n            id=\"filter\"\n            label=\"Filter\"\n            name=\"filter\"\n            autoComplete=\"off\"\n          />\n        </Grid>\n\n        <Grid item hidden={isTopSelectHidden(props.date)}>\n          <FormControl className={classes.topSelect}>\n            <InputLabel id=\"top-select-label\">Limit</InputLabel>\n            <Select\n              labelId=\"top-select-label\"\n              id=\"top-simple-select\"\n              value={topCount}\n              onChange={topCountChanged}\n            >\n              <MenuItem value={25}>25</MenuItem>\n              <MenuItem value={50}>50</MenuItem>\n              <MenuItem value={100}>100</MenuItem>\n              <MenuItem value={500}>500</MenuItem>\n              <MenuItem value={1000}>1000</MenuItem>\n              <MenuItem value={10000}>ALL</MenuItem>\n            </Select>\n          </FormControl>\n\n          {/* <Button onClick={() => loadData(true)}> Show all records </Button> */}\n        </Grid>\n      </Grid>\n\n      <div style={{ height: 700, width: \"100%\" }}>\n        <DataGrid\n          rows={data.bookings}\n          columns={columns}\n          autoPageSize\n          page={page}\n          onPageChange={(params) => {\n            setPage(params.page);\n          }}\n          onSelectionChange={handleSelectionChanged}\n        />\n      </div>\n\n      <BookingDialog\n        booking={selectedBooking}\n        open={seeDetailsDialogOpen}\n        onClose={handleCloseSeeDetaisDialog}\n      />\n\n      {data.bookings && data.bookings.length > 0 && (\n        <Dialog\n          maxWidth=\"lg\"\n          open={openDialogExcel}\n          onClose={handleCloseDialogExcel}\n          PaperComponent={PaperComponent}\n          aria-labelledby=\"form-dialog-title\"\n        >\n          <DialogTitle id=\"draggable-dialog-title\">\n            <Grid\n              container\n              spacing={2}\n              direction=\"row\"\n              justify=\"center\"\n              alignItems=\"center\"\n            >\n              <Grid item>\n                <FontAwesomeIcon\n                  style={{ color: \"#2f942e\", fontSize: \"2rem\" }}\n                  icon={faFileExcel}\n                />\n              </Grid>\n\n              <Grid item>\n                <div\n                  style={{\n                    color: \"#2f942e\",\n                    paddingBottom: \"5px\",\n                    fontWeight: \"800\",\n                  }}\n                >\n                  {\" \"}\n                  Export to EXCEL{\" \"}\n                </div>\n              </Grid>\n            </Grid>\n\n            <Divider />\n          </DialogTitle>\n          <DialogContent>\n            <div\n              style={{\n                minHeight: \"600px\",\n                maxHeight: \"600px\",\n                minWidth: \"1200px\",\n                maxWidth: \"1200px\",\n              }}\n            >\n              <div>\n                <Grid row container justify=\"center\" spacing={3}>\n                  <Grid item>\n                    <FormControlLabel\n                      control={\n                        <Switch\n                          checked={justCorporate}\n                          onChange={justCorporateChanged}\n                          name=\"justCorporate\"\n                        />\n                      }\n                      label=\"Just Corporate Records\"\n                    />\n                  </Grid>\n\n                  {justCorporate && (\n                    <Grid item>\n                      <FormControl\n                        style={{ marginTop: \"0px\" }}\n                        className={classes.formControl}\n                      >\n                        <Select\n                          labelId=\"select-corporate\"\n                          id=\"select-corporate-id\"\n                          value={corporate}\n                          onChange={corporateChanged}\n                        >\n                          {corporates.map((element) => (\n                            <MenuItem value={element}>{`${element}`}</MenuItem>\n                          ))}\n                        </Select>\n                      </FormControl>\n                    </Grid>\n                  )}\n                </Grid>\n\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                  <Grid row container justify=\"center\" spacing={3}>\n                    <Grid item>\n                      <KeyboardDatePicker\n                        autoOk={true}\n                        disableToolbar\n                        variant=\"inline\"\n                        format=\"dd/MM/yyyy\"\n                        margin=\"normal\"\n                        id=\"date-picker-until\"\n                        label=\"Until\"\n                        value={fromDate}\n                        onChange={handleFromDateChange}\n                        KeyboardButtonProps={{\n                          \"aria-label\": \"change date\",\n                        }}\n                      />\n                    </Grid>\n\n                    <Grid item>\n                      <KeyboardDatePicker\n                        autoOk={true}\n                        disableToolbar\n                        variant=\"inline\"\n                        format=\"dd/MM/yyyy\"\n                        margin=\"normal\"\n                        id=\"date-picker-until\"\n                        label=\"Until\"\n                        value={untilDate}\n                        onChange={handleUntilDateChange}\n                        KeyboardButtonProps={{\n                          \"aria-label\": \"change date\",\n                        }}\n                      />\n                    </Grid>\n\n                    <Grid item>\n                      <div style={{ paddingTop: \"30px\", marginLeft: \"20px\" }}>\n                        <ReactHTMLTableToExcel\n                          id=\"test-table-xls-button\"\n                          className={classes.ExportToExcelButtonInline}\n                          table=\"table-to-xls\"\n                          filename={`PCR.Report.${fromDateStr}.${untilDateStr}`}\n                          sheet=\"PCR-Report\"\n                          buttonText=\"Download as XLS\"\n                        />\n                      </div>\n                    </Grid>\n                  </Grid>\n                </MuiPickersUtilsProvider>\n              </div>\n\n              <div>\n                <Grid container spacing={3}>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkDate}\n                          onChange={chkDateChanged}\n                          name=\"chkDate\"\n                        />\n                      }\n                      label=\"Date\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkForename}\n                          onChange={chkForenameChanged}\n                          name=\"chkForename\"\n                        />\n                      }\n                      label=\"Forename\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkSurname}\n                          onChange={chkSurnameChanged}\n                          name=\"chkSurname\"\n                        />\n                      }\n                      label=\"Surname\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkDOB}\n                          onChange={chkDOBChanged}\n                          name=\"chkDOB\"\n                        />\n                      }\n                      label=\"D.O.B\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkEmail}\n                          onChange={chkEmailChanged}\n                          name=\"chkEmail\"\n                        />\n                      }\n                      label=\"Email\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkTel}\n                          onChange={chkTelChanged}\n                          name=\"chkTel\"\n                        />\n                      }\n                      label=\"Tel\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkCertificate}\n                          onChange={chkCertificateChanged}\n                          name=\"chkCertificate\"\n                        />\n                      }\n                      label=\"Certificate\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkAntiBodyTest}\n                          onChange={chkAntiBodyTestChanged}\n                          name=\"chkAntiBodyTest\"\n                        />\n                      }\n                      label=\"AntiBodyTest\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkextRef}\n                          onChange={chkextRefChanged}\n                          name=\"chkextRef\"\n                        />\n                      }\n                      label=\"Lab No.\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkPrice}\n                          onChange={chkPriceChanged}\n                          name=\"chkPrice\"\n                        />\n                      }\n                      label=\"Price\"\n                    />\n                  </Grid>\n                </Grid>\n              </div>\n\n              <div style={{ width: \"100%\", paddingTop: \"20px\" }}>\n                <table className={classes.table} id=\"table-to-xls\">\n                  <tr>\n                    {chkDate && <th className={classes.th}>Date</th>}\n                    {chkForename && <th className={classes.th}>Forename</th>}\n                    {chkSurname && <th className={classes.th}>Surename</th>}\n                    {chkDOB && <th className={classes.th}>D.O.B</th>}\n                    {chkEmail && <th className={classes.th}>Email</th>}\n                    {chkTel && <th className={classes.th}>Tel</th>}\n                    {chkCertificate && (\n                      <th className={classes.th}>Certificate</th>\n                    )}\n                    {chkAntiBodyTest && (\n                      <th className={classes.th}>AntiBodyTest</th>\n                    )}\n                    {chkextRef && <th className={classes.th}>Lab No.</th>}\n                    {chkPrice && <th className={classes.th}>Price (£) </th>}\n                  </tr>\n\n                  {data.bookings\n                    .filter((booking) => {\n                      if (!justCorporate) {\n                        return (\n                          booking.bookingDate >= fromDateStr &&\n                          booking.bookingDate <= untilDateStr\n                        );\n                      } else {\n                        return (\n                          booking.bookingDate >= fromDateStr &&\n                          booking.bookingDate <= untilDateStr &&\n                          booking.paid &&\n                          booking.paidBy === \"corporate\" &&\n                          booking.corporate === corporate\n                        );\n                      }\n                    })\n\n                    .map((booking) => (\n                      <tr>\n                        {chkDate && (\n                          <td className={classes.td}>\n                            {FormatDateFromString(booking.bookingDate)}\n                          </td>\n                        )}\n                        {chkForename && (\n                          <td className={classes.td}>\n                            {booking.forenameCapital}\n                          </td>\n                        )}\n                        {chkSurname && (\n                          <td className={classes.td}>\n                            {booking.surnameCapital}\n                          </td>\n                        )}\n                        {chkDOB && (\n                          <th className={classes.th}>\n                            {FormatDateFromString(booking.birthDate)}\n                          </th>\n                        )}\n                        {chkEmail && (\n                          <td className={classes.td}>{booking.email}</td>\n                        )}\n                        {chkTel && (\n                          <td className={classes.td}>{booking.phone}</td>\n                        )}\n                        {chkCertificate && (\n                          <td className={classes.td}>\n                            {booking.certificate ? \"YES\" : \"NO\"}\n                          </td>\n                        )}\n                        {chkAntiBodyTest && (\n                          <td className={classes.td}>\n                            {booking.antiBodyTest ? \"YES\" : \"NO\"}\n                          </td>\n                        )}\n                        {chkextRef && (\n                          <td className={classes.td}>{booking.extRef}</td>\n                        )}\n                        {chkPrice && (\n                          <td className={classes.td}>\n                            {PriceCalculator.calculatePrice(booking)}\n                          </td>\n                        )}\n                      </tr>\n                    ))}\n                </table>\n              </div>\n            </div>\n          </DialogContent>\n        </Dialog>\n      )}\n    </React.Fragment>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\n\nexport default function Title(props) {\n  return (\n    <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n      {props.children}\n    </Typography>\n  );\n}\n\nTitle.propTypes = {\n  children: PropTypes.node,\n};","import React, { useEffect } from 'react';\nimport { useTheme } from '@material-ui/core/styles';\nimport { LineChart, Line, XAxis, YAxis, Label, ResponsiveContainer } from 'recharts';\nimport Title from './Title';\nimport dateformat from 'dateformat';\nimport BookService from './services/BookService';\nimport { LinearProgress } from '@material-ui/core';\n\n// Generate Sales Data\nfunction createData(time, amount) {\n  return { time, amount };\n}\n\n\nconst emptyData = [\n  createData('09:00', 0),\n  createData('10:00', 0),\n  createData('11:00', 0),\n  createData('12:00', 0),\n  createData('13:00', 0),\n  createData('14:00', 0),\n  createData('15:00', 0),\n  createData('16:00', 0),\n  createData('17:00', 0),\n  createData('18:00', undefined),\n\n];\n\nconst getCount = (data, str) =>\n{\n  if (!data)\n    return 0;\n\n  var count = 0;\n  for (var i=0; i < data.length; i++)\n  {\n    if (data[i]._id.substr(0,2) === str)\n    {\n      count += data[i].count;\n    }\n  }\n  return count;\n}\n\nexport default function Chart() {\n  const theme = useTheme();\n\n  const [data, setData] = React.useState(emptyData);\n  const [loading, setLoading] = React.useState(false)\n\n  useEffect(() =>\n  {\n    const fetchData = async () =>\n    {\n      const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\n      var result = [];\n      try\n      {\n          setLoading(true)\n          const res = await BookService.getBookingsStatsByDateStr(todayStr);\n          setLoading(false)\n          const data = res.data.result;\n          result.push(createData('09:00', getCount(data,'09')));\n          result.push(createData('10:00', getCount(data,'10')));\n          result.push(createData('11:00', getCount(data,'11')));\n          result.push(createData('12:00', getCount(data,'12')));\n          result.push(createData('13:00', getCount(data,'13')));\n          result.push(createData('14:00', getCount(data,'14')));\n          result.push(createData('15:00', getCount(data,'15')));\n          result.push(createData('16:00', getCount(data,'16')));\n          result.push(createData('17:00', getCount(data,'17')));\n          result.push(createData('18:00', undefined));\n \n           setData(result);\n      }\n      catch(err){\n        setLoading(false)\n        console.error(err);\n      }\n\n    }\n  \n   fetchData();\n\n  }, [] );\n\n  return (\n    <React.Fragment>\n       {loading && (\n        <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\n          <LinearProgress color=\"primary\" />\n        </div>\n      )}\n      <Title>Today</Title>\n      <ResponsiveContainer>\n        <LineChart\n          data={data}\n          margin={{\n            top: 16,\n            right: 16,\n            bottom: 0,\n            left: 24,\n          }}\n        >\n          <XAxis dataKey=\"time\" stroke={theme.palette.text.secondary} />\n          <YAxis stroke={theme.palette.text.secondary}>\n            <Label\n              angle={270}\n              position=\"left\"\n              style={{ textAnchor: 'middle', fill: theme.palette.text.primary }}\n            >\n              Online Bookings\n            </Label>\n          </YAxis>\n          <Line type=\"monotone\" dataKey=\"amount\" stroke={theme.palette.primary.main} dot={false} />\n        </LineChart>\n      </ResponsiveContainer>\n    </React.Fragment>\n  );\n}","import React, { useEffect } from 'react';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Title from './Title';\nimport { Grid, LinearProgress, Tooltip } from '@material-ui/core';\nimport * as dateformat from 'dateformat';\nimport BookService from './services/BookService';\nimport BookingDialog from './BookingDialog';\n\n\nconst useStyles = makeStyles({\n  depositContext: {\n    flex: 1,\n  },\n\n  bookingBox: {\n    display: \"flex\",\n    margin: \"5px\",\n    padding: \"5px\",\n    maxWidth : \"90px\",\n    minHeight: \"30px\",\n    border : \"1px solid #eee\",\n    fontSize: \"12px\",\n    fontWeight : \"500\",\n    cursor: \"pointer\",\n    backgroundColor: \"#ebedf7\",\n    color: \"#3f51b5\",\n    boxShadow: \"2px 4px #fafafa\",\n    borderRadius : \"5px\",\n    textAlign: \"center\",\n    alignItems: \"center\",\n    justifyItems: \"center\",\n    align: \"center\",\n\n    \"&:hover\": {\n        background: \"#3f51b5\",\n        color: \"#ebedf7\"\n      },\n}\n\n\n});\n\nconst isWeekend = (date) =>\n{\n    return (date.getDay() === 0 || date.getDay() === 6) /// Weekend\n}\n\nconst getCurrentTimeSlot = (now) =>\n{\n    var min = now.getMinutes();\n    var hour = now.getHours();\n    var pm = (hour >= 12);\n    if (hour > 12)\n    {\n      hour = hour - 12;\n    }\n\n    if (min >= 0 && min < 15)\n    {\n      min = 0;\n    }else if (min >= 15 && min < 30)\n    {\n      min = 15;\n    }else if (min >= 30 && min < 45)\n    {\n      min = 30;\n    }else if (min >= 45)\n    {\n      min = 45;\n    }\n\n    const minStr = min < 10 ? `0${min}` : `${min}`;\n    const hourStr = hour < 10 ? `0${hour}` : `${hour}`;\n    const pmStr = pm ? 'PM' : 'AM';\n\n    const timeStr = `${hourStr}:${minStr} ${pmStr}`;\n\n    if (isWeekend(now))\n    {\n      if (now.getHours() < 10 || now.getHours() >= 14)\n      {\n        return null;\n      }\n      else\n      {\n        return timeStr;\n      }\n    }\n    else\n    {\n      if (now.getHours() < 9 || now.getHours() >= 18)\n      {\n        return null;\n      }\n      else\n      {\n        return timeStr;\n      }\n\n    }\n}\n\nconst getCurrentTimeSlotLabel = (timeStr) =>\n{\n  if (!timeStr)\n  {\n    return 'Closed';\n  }\n\n  var hour = parseInt(timeStr.substr(0,2));\n  var minute = parseInt(timeStr.substr(3,2)); \n  var pm = timeStr.indexOf('PM') > 0;\n  if (minute !== 45)\n  {\n    minute += 15;\n  }\n  else{\n    minute = 0;\n    hour += 1;\n    if (hour >= 12)\n    {\n      pm = true;\n    }\n    if (hour > 12)\n    {\n      hour = hour - 12;\n    }\n  }\n\n  const minStr = minute < 10 ? `0${minute}` : `${minute}`;\n  const hourStr = hour < 10 ? `0${hour}` : `${hour}`;\n  const pmStr = pm ? 'PM' : 'AM';\n\n  const endTimeStr = `${hourStr}:${minStr} ${pmStr}`;\n\n  return `${timeStr} - ${endTimeStr}`;\n\n}\n\nexport default function CurrentVisits() {\n  const classes = useStyles();\n\n  const[current, setCurrent] = React.useState(new Date());\n  const [bookings, setBookings] = React.useState([]);\n\n  const [selectedBooking, setSelectedBooking] = React.useState(null);\n  const [openDialog, setOpenDialog] = React.useState(false);\n\n  const [loading, setLoading] = React.useState(false)\n\n  useEffect(() => \n  {\n    const interval = setInterval(() => {  \n      setCurrent(new Date());\n    }, 30000);\n\n    return () =>\n    {\n      clearInterval(interval);\n    }\n\n  }, []);\n\n  useEffect(() => \n  {\n    const currentTimeSlot = getCurrentTimeSlot(current);\n    if (!currentTimeSlot)\n      return;\n    const todayStr = dateformat(current, 'yyyy-mm-dd');\n    setLoading(true)\n    BookService.getBookingsByDateStrandTime(todayStr,currentTimeSlot).then(res =>\n      {\n        setLoading(false)\n        if (res.data.status === 'OK')\n        {\n            setBookings([...res.data.bookings]);\n        }   \n\n      }).catch(err =>\n        {\n          setLoading(false)\n          console.log(err);\n        });\n\n  }, [current]);\n\n  const getBookingsBox = (_bookings) =>\n  {\n      if (_bookings && _bookings.length > 0)\n      {\n         return (\n\n          <div className={classes.root}>\n            <Grid container justify=\"flex-start\" alignItems=\"flex-start\" spacing={0}>\n\n                  { _bookings.map(booking => (\n\n                    <Grid item>\n\n                        <div className={classes.bookingBox} onClick={event => bookingCliked(event,booking)}>\n\n                            <span style={{textAlign:\"center\"}}> {`${booking.surnameCapital}`.substring(0,10)} </span>\n\n                        </div>\n\n                  </Grid>\n\n                  ))}\n\n              \n            </Grid>\n\n          </div>\n         )\n             \n        }                   \n  }\n\n  const bookingCliked = (event, booking) =>\n  {\n      setSelectedBooking(booking);\n      setOpenDialog(true);\n  }\n\n  const handleCloseDialog = () =>\n  {\n      setOpenDialog(false);\n  }\n\n  return (\n    <React.Fragment>\n\n       {loading && (\n        <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\n          <LinearProgress color=\"primary\" />\n        </div>\n      )}\n\n      <Title>Current Visits</Title>\n      <Typography component=\"p\" variant=\"h6\">\n        {getCurrentTimeSlotLabel(getCurrentTimeSlot(current))}\n      </Typography>\n      <Typography color=\"textSecondary\" className={classes.depositContext}>\n        on {dateformat(current, 'dd mmmm, yyyy') } \n      </Typography>\n     \n        {getBookingsBox(bookings)}\n      \n\n      <BookingDialog\n                booking={selectedBooking}\n                open={openDialog}\n                onClose={handleCloseDialog}\n      />\n\n    </React.Fragment>\n  );\n}","import React, { useEffect } from 'react';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Title from './Title';\nimport BookService from './services/BookService';\nimport * as dateformat from 'dateformat';\nimport GlobalState from './../GlobalState';\nimport { getMenuIndex } from './../MenuList';\nimport {FormatDateFromString, FormatDateFromStringShortYear} from './DateFormatter';\nimport { LinearProgress } from '@material-ui/core';\n\n\nconst useStyles = makeStyles((theme) => ({\n  seeMore: {\n    marginTop: theme.spacing(3),\n  },\n}));\n\nexport default function BookingView() {\n  const classes = useStyles();\n  const [state, setState] = React.useContext(GlobalState);  \n\n  const [data, setData] = React.useState({bookings: [] , isFetching : false});\n\n  const [refresh, setRefresh] = React.useState(false);\n\n  const [loading, setLoading] = React.useState(false)\n\n  const seeMoreRecords = (event) => {\n    event.preventDefault();\n    setState(state=>({...state, currentMenuIndex:getMenuIndex('pcr',`recentBookings`)}));\n  }\n\n  const loadData = () => \n  {\n    setData({bookings: data.bookings, isFetching: true});\n    setLoading(true)\n    BookService.getRecentBookings().then( (res) =>{\n      setLoading(false)\n        setData({bookings: res.data, isFetching: false});\n\n    }).catch( (err) => {\n      setLoading(false)\n        console.log(err);\n        setData({bookings: data.bookings, isFetching: false});\n    });\n  }\n\n\n  useEffect( () => {\n          loadData();\n        },\n        [refresh]);   \n\n\n   useEffect( () => {\n     loadData();\n     setInterval(() => {\n       setRefresh(refresh => !refresh);\n     }, 30000);\n   }, []) ;    \n\n   const formatTimeStamp = (timeStamp) =>\n   {\n     const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\n     const timeStampStr = dateformat(timeStamp, 'yyyy-mm-dd');\n     if (todayStr === timeStampStr)\n     {\n       return dateformat(timeStamp, \"'Today', h:MM:ss TT\");\n     }\n     else\n     {\n        return dateformat(timeStamp, \"mmm dS, h:MM:ss TT\");\n     }\n   }\n\n  return (\n    <React.Fragment>\n       {loading && (\n        <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\n          <LinearProgress color=\"primary\" />\n        </div>\n      )}\n      <Title>Recent Bookings</Title>\n      <Table size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell>TimeStamp</TableCell>        \n            <TableCell>Name</TableCell>\n            <TableCell>Surname</TableCell>\n            <TableCell>Email</TableCell>\n            <TableCell>D.O.B</TableCell>\n            <TableCell>Booked Date</TableCell>\n            <TableCell>Booked Time</TableCell> \n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {data.bookings.map((row) => (\n            <TableRow key={row._id}>\n              <TableCell>{formatTimeStamp(row.timeStamp)}</TableCell>\n              <TableCell>{row.forename}</TableCell>\n              <TableCell>{row.surname}</TableCell>\n              <TableCell>{row.email}</TableCell>\n              <TableCell>{FormatDateFromString(row.birthDate)}</TableCell>\n              <TableCell>{FormatDateFromString(row.bookingDate)}</TableCell>\n              <TableCell>{row.bookingTime}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n      <div className={classes.seeMore}>\n        <Link color=\"primary\" href=\"#\" onClick={seeMoreRecords}>\n          See more records\n        </Link>\n      </div>\n    </React.Fragment>\n  );\n}","import React, { useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Title from './Title';\nimport { Dialog, DialogContent, DialogTitle, Grid, LinearProgress, Link, Table, TableBody, TableCell, TableHead, TableRow, Tooltip } from '@material-ui/core';\nimport BookService from './services/BookService';\n\nimport {\n    PieChart, Pie, Sector, Cell,\n  } from 'recharts';\n\n  const COLORS = ['#00b33e', '#0070e0', '#bb00c4'];\n\n  const RADIAN = Math.PI / 180;\n\n  const renderCustomizedLabel = ({\n    cx, cy, midAngle, innerRadius, outerRadius, value, index,\n  }) => {\n     const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\n    const x = cx + radius * Math.cos(-midAngle * RADIAN);\n    const y = cy + radius * Math.sin(-midAngle * RADIAN);\n  \n    return (\n      <text x={x} y={y} fontSize=\"14px\" fontWeight=\"500\" fill=\"white\" textAnchor={x > cx ? 'start' : 'end'} dominantBaseline=\"central\">\n                {`${value} `}\n      </text>\n    );\n  };\n\n\nconst useStyles = makeStyles({\n  depositContext: {\n    flex: 1,\n  },\n\n  ReportLabels: {\n      position: \"absolute\",\n      top : \"80px\",\n      left: \"0px\"\n  },\n\n  AverageLabel: {\n    position: \"absolute\",\n    top : \"190px\",\n    right: \"30px\",\n    fontSize : \"12px\",\n    color : \"#0070e0\",\n    fontWeight: \"600\",\n  },\n\n  less12Label: {\n      fontSize : \"12px\",\n      color : \"#00b33e\",\n      fontWeight: \"600\",\n      paddingLeft : \"5px\",\n      borderLeft: \"5px solid #00b33e\",\n      marginBottom : \"10px\",\n  },\n\n  less24Label: {\n    fontSize : \"12px\",\n    color : \"#0070e0\",\n    fontWeight: \"600\",\n    paddingLeft : \"5px\",\n    borderLeft: \"5px solid #0070e0\",\n    marginBottom : \"10px\",\n    },\n\nless36Label: {\n    fontSize : \"12px\",\n    color : \"#bb00c4\",\n    fontWeight: \"600\",\n    paddingLeft : \"5px\",\n    borderLeft: \"5px solid #bb00c4\",\n    marginBottom : \"10px\",\n    },\n\n    seeMore :{\n        position: \"absolute\",\n        top : \"191px\",\n        left : \"2px\"\n    }\n\n});\n\n\nexport default function ResultsTimeReport() {\n  const classes = useStyles();\n\n  const[current, setCurrent] = React.useState(new Date());\n  const [report, setReport] = React.useState({});\n  const [open, setOpen] = React.useState(false);\n\n  const [data, setData] = React.useState(null);\n\n  const [loading, setLoading] = React.useState(false)\n\n  const handleClose = () =>\n  {\n      setOpen(false);\n  }\n\n  useEffect(() => \n  {\n    const interval = setInterval(() => {  \n      setCurrent(new Date());\n    }, 30000);\n\n    return () =>\n    {\n      clearInterval(interval);\n    }\n\n  }, []);\n\n  useEffect( () => \n  {\n    \n    setLoading(true)\n    BookService.getTestsTimeReport().then(res =>\n      {\n        const result = [];  \n        setLoading(false)\n        if (res.data.status === 'OK')\n        {\n            setReport(res.data.result);\n            // console.log(res.data.result);\n            result.push({name: 'lessThan12', value : res.data.result.lessThan12 });\n            result.push({name: 'lessThan24', value : res.data.result.lessThan24 });\n            result.push({name: 'lessThan36', value : res.data.result.lessThan36 });\n         \n           // result.push({name: 'lessThan48', value : res.data.result.lessThan48 });\n            setData(result);\n        }   \n\n      }).catch(err =>\n        {\n          setLoading(false)\n          console.error(err);\n        });\n\n\n    } , [] );\n\n    const getReportLabels = () =>\n    {\n           return (\n\n                <div className={classes.ReportLabels}>\n                    <div className={classes.less12Label}> {`12 Hours`} </div>\n                    <div className={classes.less24Label}> {`24 Hours`} </div>\n                    <div className={classes.less36Label}> {`36 Hours`} </div>\n                </div>\n    \n            );\n    }\n\n    const getAverageLabel = () =>\n    {\n           return (\n\n                <div className={classes.AverageLabel}>\n                   avg = <span style={{fontSize:\"14px\"}}> {`${report.avg}`} </span> hours\n                </div>\n    \n            );\n    }\n\n    const seeMoreClicked = (event) => {\n        event.preventDefault();\n        setOpen(true);\n      }\n\n  return (\n    <React.Fragment>\n    \n    <div style={{position: \"relative\"}}>\n    {loading && (\n        <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\n          <LinearProgress color=\"primary\" />\n        </div>\n      )}\n\n      <Title>PCR RESULTS SUMMARY</Title>\n\n      {data && (\n                <>\n\n                <PieChart width={250} height={150}>\n                    <Pie\n                        data={data}\n                        cx={170}\n                        cy={70}\n                        labelLine={false}\n                        label={renderCustomizedLabel}\n                        outerRadius={65}\n                        fill=\"#8884d8\"\n                        dataKey=\"value\"\n                        >\n                        {\n                            data.map((entry, index) => <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />)\n                        }\n                    </Pie>\n                </PieChart>\n                \n\n                {getReportLabels()}\n                {getAverageLabel()}\n\n                <div className={classes.seeMore}>\n                            <Link color=\"primary\" href=\"#\" onClick={seeMoreClicked}>\n                                  See Details\n                            </Link>\n                  </div>\n\n\n                  <Dialog style={{padding: \"50px\"}} onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open}>  \n                      <DialogTitle style={{textAlign: \"center\"}} id=\"simple-dialog-title\">PCR Results Time Report</DialogTitle>\n                            <DialogContent>\n                            <Table>\n                            <TableHead>\n                            <TableRow>\n                                <TableCell>Recieved in Less Than</TableCell>        \n                                <TableCell>Count</TableCell>\n                                <TableCell>Percent</TableCell>\n                            </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                <TableRow key=\"row1\">\n                                    <TableCell>12 Hours</TableCell>\n                                    <TableCell>{report.lessThan12}</TableCell>\n                                    <TableCell>{report.lessThan12Percent} %</TableCell>\n                                </TableRow>\n                                <TableRow key=\"row2\">\n                                    <TableCell>24 Hours</TableCell>\n                                    <TableCell>{report.lessThan24}</TableCell>\n                                    <TableCell>{report.lessThan24Percent} %</TableCell>\n                                </TableRow>\n                                <TableRow key=\"row3\">\n                                    <TableCell>36 Hours</TableCell>\n                                    <TableCell>{report.lessThan36}</TableCell>\n                                    <TableCell>{report.lessThan36Percent} %</TableCell>\n                                </TableRow>\n                                <TableRow key=\"row4\">\n                                    <TableCell>48 Hours</TableCell>\n                                    <TableCell>{report.lessThan48}</TableCell>\n                                    <TableCell>{report.lessThan48Percent} %</TableCell>\n                                </TableRow>\n                                <TableRow key=\"row4\">\n                                    <TableCell style={{fontWeight:\"800\"}}>Total Results Received : </TableCell>\n                                    <TableCell style={{fontWeight:\"600\"}}>{report.lessThan48 + report.lessThan36 + report.lessThan24 + report.lessThan12}</TableCell>\n                                    <TableCell></TableCell>\n                                </TableRow>\n\n\n\n                            \n                            </TableBody>\n                        </Table>\n                            </DialogContent>\n                </Dialog>\n    \n\n\n\n                </>\n      )}\n     \n     </div>\n\n\n\n    </React.Fragment>\n  );\n}","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Chart from './Chart';\nimport CurrentVisits from './CurrentVisits';\n\n\n\nimport { Tooltip } from '@material-ui/core';\nimport GlobalState from './../GlobalState';\nimport BookingView from './BookingView';\nimport ResultsTimeReport from './ResultsTimeReport';\n\nconst useStyles = makeStyles((theme) => ({\n \n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 240,\n  },\n}));\n\nexport default function DashboardPreview() {\n  const classes = useStyles();\n  const [state, setState] = React.useContext(GlobalState);\n\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n\n  return (\n        <React.Fragment>\n\n<           Grid container spacing={3}>\n                    {/* Chart */}\n                    <Grid item xs={12} md={4} lg={6}>\n                    <Paper className={fixedHeightPaper}>\n                        <Chart />\n                    </Paper>\n                    </Grid>\n                    {/* Tests Summary */}\n                    <Grid item xs={12} md={4} lg={3}>\n                     <Paper className={fixedHeightPaper}>\n                        <ResultsTimeReport />\n                    </Paper>\n                    </Grid>\n                    {/* Current Visits */}\n                    <Grid item xs={12} md={4} lg={3}>\n                    <Paper className={fixedHeightPaper}>\n                        <CurrentVisits />\n                    </Paper>\n                    </Grid>\n                    {/* Recent Bookings */}\n                    <Grid item xs={12}>\n                    <Paper className={classes.paper}>\n                        <BookingView/>\n                    </Paper>\n                    </Grid>\n          </Grid>\n        </React.Fragment>\n  );\n}","import React, {useEffect, useRef, useState} from 'react';\nimport { DataGrid, ROW_CLICK } from '@material-ui/data-grid';\nimport BookService from './services/BookService';\nimport Typography from '@material-ui/core/Typography';\nimport { Button, Checkbox, Divider, FormControlLabel, Grid, Link, makeStyles, TextField, Tooltip } from '@material-ui/core';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport { IconButton } from '@material-ui/core';\nimport LoaderSpinner from 'react-loader-spinner';\nimport GlobalState from './../GlobalState';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\nimport WbIncandescentIcon from '@material-ui/icons/WbIncandescent';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Draggable from 'react-draggable';\nimport Paper from '@material-ui/core/Paper';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport dateformat from 'dateformat';\nimport ReportProblemIcon from '@material-ui/icons/ReportProblem';\nimport BookingDialog from './BookingDialog';\nimport Alert from '@material-ui/lab/Alert';\n\nimport PropTypes from 'prop-types';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Box from '@material-ui/core/Box';\n\nimport WarningIcon from '@material-ui/icons/Warning';\n\nimport {FormatDateFromString, RevertFormatDateFromString} from './DateFormatter';\nimport PDFService from './services/PDFService';\n\nvar interval;\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    marginTop: theme.spacing(0),\n    marginBottom: theme.spacing(1),\n\n  },\n  \n  refreshButton:{\n    marginLeft: theme.spacing(2),\n  },\n\n  checkIcon:{\n    color: \"green\"\n  },\n\n  closeIcon:{\n    color: \"red\"\n  },\n\n  RefLink: {\n    cursor: \"pointer\"\n  },\n\n  BookedLabel:{\n    backgroundColor: \"#606060\",\n    color: \"#fff\",\n    paddingRight: \"10px\",\n    paddingLeft: \"10px\"\n  },\n\n  PatientAttendedLabel:{\n    backgroundColor: \"#0066aa\",\n    color: \"#fff\",\n    paddingRight: \"15px\",\n    paddingLeft: \"10px\"\n  },\n\n  SampleTakenLabel:{\n    backgroundColor: \"#0066cc\",\n    color: \"#fff\",\n    paddingRight: \"40px\",\n    paddingLeft: \"10px\"\n  },\n\n  ReportSentLabel:{\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"90px\",\n    paddingLeft: \"10px\"\n  },\n\n  ReportCertSentLabel:{\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"68px\",\n    paddingLeft: \"10px\"\n  },\n\n  archiveButton: {\n\n  },\n\n  smartMatchButton: {\n    backgroundColor : \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\"\n    },\n    textDecoration : \"none !important\",\n    marginRight : \"10px\"\n    // padding: \"10px\"  \n  },\n\n  infoTitle:  {\n    fontWeight: \"400\"\n  },\n\n  infoData: {\n    paddingLeft: \"10px\",\n    fontWeight: \"800\"\n  },\n\n  matchButton:\n  {\n    marginTop: \"30px\",\n    marginBottom : \"20px\",\n    backgroundColor : \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\"\n    },\n    textDecoration : \"none !important\",\n    padding: \"10px\",\n    paddingLeft : \"50px\",\n    paddingRight: \"50px\"   \n  },\n\n  resendButton:\n  {\n    marginTop: \"5px\",\n    marginBottom : \"5px\",\n    backgroundColor : \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\"\n    },\n    textDecoration : \"none !important\",\n    padding: \"10px\",\n    paddingLeft : \"50px\",\n    paddingRight: \"50px\"   \n  },\n\n  resendFilesButton:{\n    marginTop: \"5px\",\n    marginBottom : \"5px\",\n    backgroundColor : \"#3792ad\",\n    \"&:hover\": {\n      background: \"#2f798f\",\n      color: \"#fff\"\n    },\n    textDecoration : \"none !important\",\n    padding: \"10px\",\n    paddingLeft : \"50px\",\n    paddingRight: \"50px\"   \n  },\n\n  cancelButton:\n  {\n    marginBottom : \"10px\",\n    textDecoration : \"none !important\",\n    padding: \"10px\",\n    paddingLeft : \"90px\",\n    paddingRight: \"90px\"   \n  },\n\n  downloadPDFButton:\n  {\n    marginLeft: \"50px\"\n  }\n  \n  \n}));\n\nconst BorderLinearProgress = withStyles((theme) => ({\n  root: {\n    height: 10,\n    borderRadius: 5,\n  },\n  colorPrimary: {\n    backgroundColor: \"#cedbce\" //theme.palette.grey[theme.palette.type === 'light' ? 200 : 700],\n  },\n  bar: {\n    borderRadius: 5,\n    backgroundColor: '#2f942e',\n  },\n}))(LinearProgress);\nfunction LinearProgressWithLabel(props) {\n  return (\n    <Box display=\"flex\" alignItems=\"center\">\n      <Box width=\"100%\" mr={1}>\n        <BorderLinearProgress variant=\"determinate\" {...props} />\n      </Box>\n      <Box minWidth={35}>\n        <Typography style={{fontWeight:\"800\", color :  \"#5e855e\"  }} variant=\"body2\" color=\"textSecondary\">{`${Math.round(\n          props.value,\n        )}%`}</Typography>\n      </Box>\n    </Box>\n  );\n}\n\nLinearProgressWithLabel.propTypes = {\n  /**\n   * The value of the progress indicator for the determinate and buffer variants.\n   * Value between 0 and 100.\n   */\n  value: PropTypes.number.isRequired,\n};\n\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'}>\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nexport default function UnmatchedRecords() {\n  \n  const classes = useStyles();\n\n  const columns = [\n    { field: 'id', headerName: '#', width: 50 },\n\n    { field: 'testDate', headerName: 'Test Date', width: 120, valueFormatter : (params) =>\n      {\n        return FormatDateFromString(params.value);\n      }\n     },\n    { field: 'forename', headerName: 'Forename', width: 200 },\n    { field: 'surname', headerName: 'Surname', width: 200 },\n    { field: 'birthDate', headerName: 'D.O.B', width: 120 , valueFormatter : (params) =>\n    {\n      return FormatDateFromString(params.value);\n    }},\n    { field: '_id' , headerName:'Action', width: 500 , renderCell: (params) => {\n        if (selectedTab === 'unresolved')\n        {\n            return (\n              <React.Fragment>\n\n              <Button\n                    disabled = {params.value === disableId}\n                    type=\"button\"\n                    variant=\"contained\"\n                    color=\"primary\"\n                    startIcon={<WbIncandescentIcon />}\n                    onClick = { event => smartMatchClicked(event,params.value)}\n                    className={classes.smartMatchButton}\n                    >\n                    smart match\n              </Button>\n\n              <Button\n                    disabled = {params.value === disableId}\n                    type=\"button\"\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick = { event => archiveRecord(event,params.value)}\n                    className={classes.archiveButton}\n                  >\n                    archive\n              </Button>\n\n\n              <Button\n                    disabled = {params.value === disableId}\n                    type=\"button\"                   \n                    color=\"primary\"\n                    onClick = { event => downloadLabReport(params.value)}\n                    className={classes.downloadPDFButton}\n                  >\n                    view pdf\n              </Button>\n\n\n              </React.Fragment>\n\n            );\n        }else\n        {\n            return (\n\n              <React.Fragment>\n\n                  <Button\n                        disabled = {params.value === disableId}\n                        type=\"button\"\n                        variant=\"contained\"\n                        color=\"primary\"\n                        startIcon={<WbIncandescentIcon />}\n                        onClick = { event => smartMatchClicked(event,params.value)}\n                        className={classes.smartMatchButton}\n                        >\n                        smart match\n                  </Button>\n\n                    <Button\n                    disabled = {params.value === disableId}\n                    type=\"button\"\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick = { event => unArchiveRecord(event,params.value)}\n                    className={classes.archiveButton}\n                  >\n                    Undo\n                  </Button>\n\n                  <Button\n                    disabled = {params.value === disableId}\n                    type=\"button\"                   \n                    color=\"primary\"\n                    onClick = { event => downloadLabReport(params.value)}\n                    className={classes.downloadPDFButton}\n                  >\n                    view pdf\n                  </Button>\n\n              </React.Fragment>\n            );\n        }\n        \n    } },\n   \n  ];\n\n  const [state, setState] = React.useContext(GlobalState);  \n\n  const [data, setData] = React.useState({bookings: [] , cachedBookings: [], isFetching : false});\n\n  const [selectedRow, setSelectedRow] = React.useState(null);\n\n  const [filter,setFilter] = React.useState('');\n\n  const [refresh, setRefresh] = React.useState(false);\n\n  const [disableId, setDisableId] = React.useState(null);\n\n  const [selectedTab, setSeletedTab] = React.useState('unresolved');\n\n  const [openDialog, setOpenDialog] = React.useState(false);\n\n  const [seeDetailsDialogOpen, setSeeDetailsDialogOpen] = React.useState(false);\n\n  const [smartLinkId, setSmartLinkId] = React.useState(null);\n\n  const [smartLinkDetails, setSmartLinkDetails] = React.useState(null);\n\n  const [likelyBookings, setLikelyBookings] = React.useState(null);\n\n  const [selectedBooking, setSelectedBooking] = React.useState(null);\n\n  const [seeDetailsBooking, setSeeDetailsBooking] = React.useState(null);\n\n  const [matching, setMatching] = React.useState(false);\n\n  const [matched, setMatched] = React.useState(false);\n\n  const [sending, setSending] = React.useState(false);\n  const [sent, setSent] = React.useState(false);\n\n  const [sendJustToPCR, setSendJustToPCR] = React.useState(false);\n\n  const [sendingStatus, setSendingStatus] = React.useState('');\n\n  const [sendingProgress, setSendingProgress] = React.useState(10);\n\n  const [loading, setLoading] = React.useState(false)\n\n\n  const handleTabChanged = (event, value) => {\n      if (value && value.length)\n      {\n        setSeletedTab(value);\n      }\n   \n  };\n\n  const handleCloseDialog = () =>\n  {\n    setOpenDialog(false);\n    setTimeout(() => {\n      setSmartLinkId(null);\n      setSmartLinkDetails(null);\n      setLikelyBookings(null);\n      setSelectedBooking(null);\n      setMatched(false);\n      setMatching(false);\n      setSendingStatus(null);\n      setSending(false);\n      setSent(false);\n      clearInterval(interval);\n      setSendJustToPCR(false);\n    }, 100);\n  }\n\n  const handleCloseSeeDetaisDialog = () =>\n  {\n    setSeeDetailsDialogOpen(false);\n    setTimeout(() => {\n      setSeeDetailsBooking(null);\n    }, 500);\n  }\n\n  const seeDetailsClicked = (event, row) =>\n  {\n    setSeeDetailsBooking(row);\n    setSeeDetailsDialogOpen(true);\n  }\n\n  const smartMatchClicked = (event, id) =>\n  {\n    setSmartLinkId(id);\n    setOpenDialog(true);\n    findBestMatches(id);\n  }\n\n  useEffect(() => {\n    if (smartLinkId)\n    {\n      findBestMatches(smartLinkId);\n      // console.log('refrshing....');\n\n    }\n\n\n  }, [state.bookingDialogDataChanged]);\n\n  const findBestMatches = (id) =>\n  {\n    BookService.getLinkDetails(id).then( res => {\n      setSmartLinkDetails(res.data);\n      console.log(res.data);\n    }).catch( err =>\n      {\n        console.log(err);\n      });\n\n    BookService.findBestMatches(id).then( res => {\n      setLikelyBookings(res.data.matchedBookings);\n    }).catch( err => {\n      console.log(err);\n      setLikelyBookings([]);\n    })\n  }\n\n  const archiveRecord = (event, id) =>\n  {\n      if (disableId)\n      {\n        return;\n      }\n        setDisableId(id);\n        \n        BookService.archiveRecord(id).then(\n            (res) => {\n                setDisableId(null);\n                setRefresh(!refresh);\n            }\n        ).catch( (err) => {\n            setDisableId(null);\n        })\n  }\n\n  const unArchiveRecord = (event, id) =>\n  {\n      if (disableId)\n      {\n        return;\n      }\n        setDisableId(id);\n        \n        BookService.unArchiveRecord(id).then(\n            (res) => {\n                setDisableId(null);\n                setRefresh(!refresh);\n            }\n        ).catch( (err) => {\n            setDisableId(null);\n        })\n  }\n\n\n  const lastPromise = useRef();\n\n  useEffect( () => {\n\n            var api = BookService.getUnmatchedRecords;\n            if (selectedTab === 'archived')\n            {\n                api = BookService.getUnmatchedRecordsArchived;\n            }\n            \n            setLoading(true)\n            \n            setData({bookings: [], cachedBookings: [], isFetching: true});\n            const currentPromise = api().then( (res) =>{\n              \n              for (var i=0; i < res.data.length; i++)\n              {\n                res.data[i] = {...res.data[i], id : i + 1}\n              }  \n              \n              return res.data;\n            })\n\n            lastPromise.current = currentPromise;\n\n            currentPromise.then(\n              result => {\n                if (currentPromise === lastPromise.current) {\n                  setLoading(false)\n                  setData({bookings: result, cachedBookings: [...result], isFetching: false});\n                }\n              },\n              e => {\n                if (currentPromise === lastPromise.current) {\n                    setLoading(false)\n                    console.log(e);\n                    setData({bookings: data.bookings, cachedBookings: data.cachedBookings, isFetching: false});\n                }\n              });\n        },\n        [refresh, selectedTab]);\n\n\n\n  useEffect( () => {\n\n        if (filter && filter.trim().length > 0)\n        {\n          var filteredData = data.cachedBookings.filter( (element) => {\n\n            return (element.forename.toLowerCase().indexOf(filter.toLowerCase()) >= 0) ||\n                   (element.surname.toLowerCase().indexOf(filter.toLowerCase()) >= 0) \n            ;\n  \n          });\n  \n  \n          setData({bookings: filteredData, cachedBookings: data.cachedBookings, isFetching: false});\n        }else\n        {\n          setData({bookings: [...data.cachedBookings], cachedBookings: data.cachedBookings, isFetching: false});\n        }\n      },\n      [filter]);\n\n\n\n\n\n\n  const refreshClicked = (event) =>{\n    setFilter('');\n    setRefresh(!refresh);\n\n  }\n\n  const filterChanged = (event) =>{\n    setFilter(event.target.value);\n  }\n\n  const handleSelectionChanged = (newSelection) =>\n  {\n    if (newSelection.length > 0){\n      setSelectedRow(newSelection.rows[0]);\n    }\n  }\n\n  const handleCheckChanged = (event, row) =>\n  {\n    if (event.target.checked)\n    {\n      setSelectedBooking(row);\n    }\n    else\n    {\n      setSelectedBooking(null);\n    }\n  }\n\n  const matchRecords = (event) => {\n\n    setMatching(true);\n\n    BookService.getBookingById(selectedBooking._id).then(res => {\n      setSelectedBooking(res.data);\n    });\n\n    BookService.matchRecords(selectedBooking._id, smartLinkId).then (res => {\n\n      if (res.data.status === 'OK'){\n        setMatching(false);\n        setMatched(true);\n      }\n\n    }).catch(err =>\n      {\n        console.log(err);\n      });\n  }\n\n  const getProgress = (status) =>\n  {\n    console.log(`status : ${status}`);\n\n    if (status === 'downloadFailed')\n      return 10 ;\n    else if (status === 'downloading') \n      return 30 ;  \n    else if (status === 'downloadSuccess') \n      return 70 ;\n    else if (status === 'sent')\n      return 100;   \n    else\n      return 0;\n\n  }\n\n  useEffect( () => {\n\n    setSendingProgress((prevProgress) => (prevProgress >= 100 ? 100 : getProgress(sendingStatus)));\n\n  }, [sendingStatus]);\n\n  const resendFilesClicked = (event) =>\n  {\n    setSending(true);\n    setSendingProgress(0);\n    setSendingStatus('downloadFailed');\n    setSendJustToPCR(true);\n\n\n    BookService.regenerateFiles(smartLinkId).then( res => {\n\n      interval = setInterval(() => {\n             \n       // setProgress(sendingCounter);\n\n       // setProgress(getProgress(sendingStatus));\n\n       BookService.getLinkDetails(smartLinkId).then( res => {\n \n         setSendingStatus(res.data.status);\n \n         if (res.data.status === 'sent')\n         {\n           setSending(false);\n           setSent(true);\n           setRefresh(!refresh);\n           clearInterval(interval);\n         }\n       });\n \n     }, 1000);\n\n   }).catch(err => {\n     console.log(err);\n     setSending(false);\n   });\n\n\n  }\n \n  const resendEmailsClicked = (event) => {\n    setSending(true);\n    setSendingProgress(0);\n    setSendingStatus('downloadFailed');\n \n\n    BookService.resendEmails(smartLinkId).then( res => {\n\n       interval = setInterval(() => {\n        \n       \n\n        // setProgress(sendingCounter);\n\n        // setProgress(getProgress(sendingStatus));\n\n        BookService.getLinkDetails(smartLinkId).then( res => {\n  \n          setSendingStatus(res.data.status);\n  \n          if (res.data.status === 'sent')\n          {\n            setSending(false);\n            setSent(true);\n            setRefresh(!refresh);\n            clearInterval(interval);\n          }\n        });\n  \n      }, 1000);\n\n    }).catch(err => {\n      console.log(err);\n      setSending(false);\n    });\n\n  \n\n  }\n\n  const cancelResendEmailsClicked = (event) => {\n    setMatched(false);\n  }\n\n  const downloadLabReport = (id) =>\n  {\n       PDFService.downloadPdfLabReport(id).then( (res) => \n       {       \n         const file = new Blob(\n           [res.data], \n           {type: 'application/pdf'});\n\n         const fileURL = URL.createObjectURL(file);   \n         window.open(fileURL, \"_blank\");\n\n       \n\n       }).catch( (err) =>\n       {\n           console.log(err);\n       });\n  }\n\n\n  return (\n    <React.Fragment>\n\n      {loading && (\n        <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\n          <LinearProgress color=\"primary\" />\n        </div>\n      )}\n\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"space-between\"\n        alignItems=\"flex-end\"\n      >\n        <Grid item md={5}>\n            <div style={{textAlign:\"left\", paddingLeft:\"10px\"}}>\n                <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"center\">\n                        <Grid item>\n                                <span style={{paddingRight: \"15px\", color: \"#555\"}}> <WarningIcon style={{fontSize:\"2.2rem\"}}/> </span>\n                        </Grid>\n                        <Grid item>\n                              <span style={{fontSize: '1.4rem', fontWeight:\"600\", color: \"#444\"}}> Unmatched Records </span>\n                        </Grid>\n                        <Grid item>\n                            <Tooltip title=\"Refresh\" placement=\"right\">\n                                <IconButton\n                                  color=\"primary\"\n                                  className={classes.refreshButton}\n                                  onClick={refreshClicked}\n                                >\n                                  <RefreshIcon />\n                                </IconButton>\n                            </Tooltip>\n                        </Grid>\n                  </Grid>\n                </div>\n        </Grid>\n\n        <Grid item md={3}>\n          <ToggleButtonGroup\n            value={selectedTab}\n            style={{ marginBottom: \"10px\" }}\n            exclusive\n            onChange={handleTabChanged}\n            aria-label=\"text alignment\"\n          >\n            <ToggleButton value=\"unresolved\" aria-label=\"left aligned\">\n              UnResolved\n            </ToggleButton>\n            <ToggleButton value=\"archived\" aria-label=\"centered\">\n              Archived\n            </ToggleButton>\n          </ToggleButtonGroup>\n        </Grid>\n\n        <Grid item md={3}>\n          <TextField\n            variant=\"standard\"\n            value={filter}\n            onChange={filterChanged}\n            margin=\"normal\"\n            size=\"small\"\n            id=\"filter\"\n            label=\"Filter\"\n            name=\"filter\"\n            autoComplete=\"off\"\n          />\n        </Grid>\n      </Grid>\n\n      <div style={{ height: 700, width: \"100%\" }}>\n        <DataGrid\n          rows={data.bookings}\n          columns={columns}\n          autoPageSize\n          onSelectionChange={handleSelectionChanged}\n        />\n      </div>\n\n      <Dialog\n        maxWidth=\"lg\"\n        open={openDialog}\n        onClose={handleCloseDialog}\n        PaperComponent={PaperComponent}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogTitle id=\"draggable-dialog-title\">\n          <Grid\n            container\n            spacing={2}\n            direction=\"row\"\n            justify=\"center\"\n            alignItems=\"center\"\n          >\n            <Grid item>\n              <WbIncandescentIcon\n                style={{ color: \"#2f942e\", fontSize: \"2rem\" }}\n              />\n            </Grid>\n\n            <Grid item>\n              <div\n                style={{\n                  color: \"#2f942e\",\n                  paddingBottom: \"12px\",\n                  fontWeight: \"800\",\n                }}\n              >\n                {\" \"}\n                SMART MATCH{\" \"}\n              </div>\n            </Grid>\n          </Grid>\n\n          <Divider />\n        </DialogTitle>\n        <DialogContent>\n          <div\n            style={{\n              height: \"600px\",\n              // width: \"1200px\",\n            }}\n          >\n            {(!likelyBookings || !smartLinkDetails) && (\n              <React.Fragment>\n                <Grid\n                  container\n                  direction=\"column\"\n                  justify=\"center\"\n                  alignItems=\"center\"\n                  spacing={2}\n                >\n                  <Grid item>\n                    <LoaderSpinner\n                      style={{ marginTop: \"170px\" }}\n                      type=\"Grid\"\n                      color=\"#2f942e\"\n                      height={100}\n                      width={100}\n                      timeout={0} //3 secs\n                    />\n                  </Grid>\n                  <Grid item>\n                    <div\n                      style={{\n                        color: \"#2f942e\",\n                        paddingBottom: \"12px\",\n                        fontWeight: \"800\",\n                      }}\n                    >\n                      {\" \"}\n                      SEARCHING ...{\" \"}\n                    </div>\n                  </Grid>\n                </Grid>\n              </React.Fragment>\n            )}\n\n            {likelyBookings && likelyBookings.length === 0 && (\n              <React.Fragment>\n                <Grid\n                  container\n                  direction=\"column\"\n                  justify=\"center\"\n                  alignItems=\"center\"\n                  spacing={2}\n                >\n                  <Grid item>\n                    <div\n                      style={{\n                        color: \"#2f942e\",\n                        paddingBottom: \"12px\",\n                        fontWeight: \"800\",\n                        marginTop: \"230px\",\n                      }}\n                    >\n                      {\" \"}\n                      SORRY, NO RECORDS FOUND !{\" \"}\n                    </div>\n                  </Grid>\n                </Grid>\n              </React.Fragment>\n            )}\n\n            {likelyBookings && smartLinkDetails && likelyBookings.length > 0 && (\n              <React.Fragment>\n                <Grid\n                  container\n                  direction=\"column\"\n                  justify=\"flex-start\"\n                  alignItems=\"stretch\"\n                  spacing={2}\n                >\n                  <Grid item>\n                    <div\n                      style={{\n                        fontSize: \"1.1rem\",\n                        fontWeight: \"600\",\n                        color: \"#2f942e\",\n                        marginBottom: \"15px\",\n                      }}\n                    >\n                      {\" \"}\n                      LAB RECORD :\n                    </div>\n\n                    <Grid\n                      style={{ paddingLeft: \"20px\", paddingBottom: \"20px\" }}\n                      container\n                      direction=\"row\"\n                      justify=\"flex-start\"\n                      alignItems=\"flex-start\"\n                      spacing={4}\n                    >\n                      <Grid item>\n                        <span className={classes.infoTitle}>Forename:</span>\n                        <span className={classes.infoData}>\n                          {smartLinkDetails.forename}\n                        </span>\n                      </Grid>\n\n                      <Grid item>\n                        <span className={classes.infoTitle}>Surname:</span>\n                        <span className={classes.infoData}>\n                          {smartLinkDetails.surname}\n                        </span>\n                      </Grid>\n\n                      <Grid item>\n                        <span className={classes.infoTitle}>D.O.B:</span>\n                        <span className={classes.infoData}>\n                          {FormatDateFromString(smartLinkDetails.birthDate)}\n                        </span>\n                      </Grid>\n\n                      <Grid item>\n                        <span className={classes.infoTitle}>Test Date:</span>\n                        <span className={classes.infoData}>\n                          {FormatDateFromString(smartLinkDetails.testDate)}\n                        </span>\n                      </Grid>\n                    </Grid>\n\n                    <Divider />\n                  </Grid>\n\n                  <Grid item>\n                    <div\n                      style={{\n                        fontSize: \"1.1rem\",\n                        fontWeight: \"600\",\n                        color: \"#2f942e\",\n                        marginBottom: \"15px\",\n                      }}\n                    >\n                      {\" \"}\n                      BEST MATCHES :\n                    </div>\n                  </Grid>\n\n                  <Grid item>\n                    <Table size=\"small\">\n                      <TableHead>\n                        <TableRow>\n                          <TableCell>Select</TableCell>\n                          <TableCell>Match</TableCell>\n                          <TableCell>Forename</TableCell>\n                          <TableCell>Surname</TableCell>\n                          <TableCell>D.O.B</TableCell>\n                          <TableCell>Email</TableCell>\n                          <TableCell>Test Date</TableCell>\n                          <TableCell></TableCell>\n                        </TableRow>\n                      </TableHead>\n                      <TableBody>\n                        {likelyBookings.map((row) => (\n                          <TableRow key={row._id}>\n                            <TableCell>\n                              <Tooltip\n                                title={\n                                  row.birthDate !== smartLinkDetails.birthDate\n                                    ? '\"D.O.B\" DOES NOT MATCH THE LAB REPORT ! PLEASE MAKE SURE \"D.O.B\" OF THE SELECTED BOOKING IS CORRECT !'\n                                    : \"\"\n                                }\n                              >\n                                <FormControlLabel\n                                  control={\n                                    <Checkbox\n                                      checked={\n                                        selectedBooking &&\n                                        selectedBooking._id === row._id\n                                      }\n                                      disabled={\n                                        matched || matching\n                                      }\n                                      onChange={(event) =>\n                                        handleCheckChanged(event, row)\n                                      }\n                                      name=\"checkedA\"\n                                    />\n                                  }\n                                  label=\"\"\n                                />\n                              </Tooltip>\n                            </TableCell>\n                            <TableCell\n                              style={{\n                                fontWeight: \"800\",\n                                color: \"#2f942e\",\n                                fontSize: \"1.1rem\",\n                              }}\n                            >{`${row.likelihood} %`}</TableCell>\n                            <TableCell\n                              style={\n                                row.forenameCapital ===\n                                smartLinkDetails.forename\n                                  ? { fontWeight: \"800\", color: \"#2f942e\" }\n                                  : { fontWeight: \"800\", color: \"#ff871f\" }\n                              }\n                            >\n                              {row.forenameCapital}\n                            </TableCell>\n                            <TableCell\n                              style={\n                                row.surnameCapital === smartLinkDetails.surname\n                                  ? { fontWeight: \"800\", color: \"#2f942e\" }\n                                  : { fontWeight: \"800\", color: \"#ff871f\" }\n                              }\n                            >\n                              {row.surnameCapital}\n                            </TableCell>\n                            <TableCell\n                              style={\n                                row.birthDate === smartLinkDetails.birthDate\n                                  ? { fontWeight: \"800\", color: \"#2f942e\" }\n                                  : { fontWeight: \"800\", color: \"red\" }\n                              }\n                            >\n                              <Grid\n                                container\n                                direction=\"column\"\n                                justify=\"center\"\n                                alignItems=\"center\"\n                                spacing={1}\n                              >\n                                <Grid item>\n                                  {row.birthDate !==\n                                    smartLinkDetails.birthDate && (\n                                    <span style={{ textAlign: \"center\" }}>\n                                      <ReportProblemIcon />\n                                    </span>\n                                  )}\n                                </Grid>\n                                {FormatDateFromString(row.birthDate)}\n                                <Grid item></Grid>\n                              </Grid>\n                            </TableCell>\n                            <TableCell>{row.email?.toUpperCase()}</TableCell>\n                            <TableCell\n                              style={\n                                dateformat(\n                                  row.samplingTimeStamp,\n                                  \"yyyy-mm-dd\"\n                                ) === smartLinkDetails.testDate\n                                  ? { fontWeight: \"800\", color: \"#2f942e\" }\n                                  : { fontWeight: \"800\", color: \"red\" }\n                              }\n                            >\n                              {FormatDateFromString(dateformat(row.samplingTimeStamp, \"yyyy-mm-dd\"))}\n                            </TableCell>\n                            <TableCell>\n                              <Button\n                                color=\"primary\"\n                                disabled = {sending}\n                                onClick={(event) =>\n                                  seeDetailsClicked(event, row)\n                                }\n                              >\n                                See Details\n                              </Button>\n                            </TableCell>\n                          </TableRow>\n                        ))}\n                      </TableBody>\n                    </Table>\n                  </Grid>\n                </Grid>\n\n                <Grid\n                  container\n                  direction=\"column\"\n                  justify=\"center\"\n                  spacing = {1}\n                  alignItems=\"center\"\n                >\n\n                {!matched && (\n                  <React.Fragment>\n                        <Grid item>\n                          <Button\n                            disabled = {!selectedBooking || matching}\n                            className={classes.matchButton}\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick = {matchRecords}\n                          >\n                            GO Match THE Records\n                          </Button>\n                        </Grid>\n\n                        {!selectedBooking && (\n                            <Grid item>\n                              <Alert severity=\"warning\">No Record is Selected ! — Please select a record you think it is a match.</Alert>\n                          </Grid>\n                        )}\n\n                  </React.Fragment>\n                )}\n\n                {matched && !sent && !sending && (\n                  <React.Fragment>\n\n                    <Grid item>\n            \n                         <Alert style={{marginTop:\"10px\", paddingLeft:\"50px\", paddingRight:\"50px\"}} severity=\"success\"> Success — The Records are Matched Now !</Alert>\n                    \n                    </Grid>\n\n                    <Grid item>\n\n                      <div style={{paddingTop:\"5px\", fontSize:\"1rem\", fontWeight: \"500\", color: \"#555\"}}>\n                         Do you want to Resend the LAB Report {selectedBooking.certificate ? ' and Certificate' : ''}  Now?\n                      </div>\n\n                    </Grid>\n\n                    <Grid item>\n                          <Button\n                            disabled = {sending || sent}\n                            className={classes.resendButton}\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick = {resendEmailsClicked}\n                          >\n                            YES ! RESEND THE EMAILS\n                          </Button>\n                    </Grid>\n\n                    <Grid item>\n                          <Button\n                            disabled = {sending || sent}\n                            className={classes.cancelButton}\n                            variant=\"contained\"\n                            color=\"default\"\n                            onClick = {cancelResendEmailsClicked}\n                          >\n                            NO ! NOT NOW\n                          </Button>\n                    </Grid>\n\n                    \n                    <Grid item>\n                          <Button\n                            disabled = {sending || sent}\n                            className={classes.resendFilesButton}\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick = {resendFilesClicked}\n                          >\n                            Just Generate The Files and send to pcrresults@medicalexpressclinic.co.uk\n                          </Button>\n                    </Grid>\n\n                    <Grid item>\n            \n                         <Alert style={{marginTop:\"10px\",  paddingLeft:\"50px\", paddingRight:\"50px\"}} severity=\"warning\">\n                            Caution! — The LAB Report and Certificate will be Sent According to the Record you have Selected !\n                          </Alert>\n       \n                   </Grid>\n\n\n\n                  </React.Fragment>\n                )}\n\n                        {matched && (sending || sent) && ( \n                          <Grid item>\n\n                            <div style={{paddingTop: \"50px\", color: \"#2f942e\" , fontWeight:\"600\", fontSize: \"1rem\"}}>\n                                 {sending && !sent && (\n                                   'Sending ...'\n                                 )}\n\n                                 {sent && !sendJustToPCR && (\n                                     <Alert style={{marginTop:\"10px\", paddingLeft:\"50px\", paddingRight:\"50px\"}} severity=\"success\">\n                                          Success! — The LAB Report {selectedBooking.certificate? ' and Certificate ': ' ' }  Successfully Sent.\n                                     </Alert>\n                                 )}\n\n                                {sent && sendJustToPCR && (\n                                     <Alert style={{marginTop:\"10px\", paddingLeft:\"50px\", paddingRight:\"50px\"}} severity=\"success\">\n                                          Success! — The LAB Report {selectedBooking.certificate? ' and Certificate ': ' ' }  Successfully Sent Just to pcrresults@medicalexpressclinic.co.uk .\n                                     </Alert>\n                                 )}\n\n\n\n                                 \n                            </div>\n                            \n                          </Grid>\n                          \n                        )}\n\n                </Grid>\n              </React.Fragment>\n            )}\n\n\n              {matched && (sending || sent) && (\n                  <React.Fragment>\n\n                      <div style={{marginTop:\"10px\", width:\"50%\", marginLeft: \"27%\"}}>\n                        \n                           <LinearProgressWithLabel variant=\"determinate\" color=\"primary\"  value={sendingProgress} />     \n\n                      </div>\n\n                      <div style={{paddingTop: \"30px\", color: \"#2f942e\" , fontWeight:\"600\", fontSize: \"1rem\",  marginLeft: \"45%\"}}>\n                            {sending && !sent && (\n                                   'PLEASE WAIT ...'\n                                 )}     \n                                  \n                    </div>\n\n                  </React.Fragment>\n                )}\n\n\n          </div>\n\n          <BookingDialog\n            booking={seeDetailsBooking}\n            open={seeDetailsDialogOpen}\n            onClose={handleCloseSeeDetaisDialog}\n            deleteButtonDisabled={true}\n          />\n        </DialogContent>\n      </Dialog>\n    </React.Fragment>\n  );\n}","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport dateformat from 'dateformat';\nimport BookService from '../services/BookService';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport GlobalState from '../../GlobalState';\n\n\nconst useStyles = makeStyles((theme) => ({\n\n    Container: {\n        width: \"100%\",\n        paddingTop: \"70%\",\n        position: \"relative\",\n        backgroundColor: \"#fff\"\n    },\n\n    ContainerPast: {\n        width: \"100%\",\n        paddingTop: \"70%\",\n        position: \"relative\",\n        backgroundColor: \"#fafafa\"\n    },\n    \n    DayLabel: {\n        position: \"absolute\",\n        top: \"5px\",\n        right: \"5px\",\n        color: \"#555\",\n        fontSize: \"1rem\"\n    },\n\n    DayLabelToday: {\n        position: \"absolute\",\n        top: \"5px\",\n        right: \"5px\",\n        backgroundColor: \"#1a73e8\",\n        color: \"#fff\",\n        fontSize: \"1rem\",\n        borderRadius: \"50%\",\n        padding: \"5px\",\n        lineHight: \"35px\",\n        minWidth: \"35px\"\n    },\n\n    DayLabelDisabled: {\n        position: \"absolute\",\n        top: \"5px\",\n        right: \"5px\",\n        color: \"#ddd\",\n        fontSize: \"1rem\"\n    },\n\n    BookingCountLabel: {\n        position: \"absolute\",\n        top: \"35%\",\n        left: \"40%\",\n        color: \"#3f51b5\",\n        backgroundColor: \"#ebedf7\",\n        fontSize: \"16px\",\n        fontWeight: \"600\",\n        padding: \"10px\",\n        borderRadius: \"50%\",\n        minWidth: \"40px\",\n        lineHight: \"40px\",\n        cursor: \"pointer\",\n        textAlign: \"center\"\n    },\n\n    BookingCountLabelBusy: {\n        position: \"absolute\",\n        top: \"35%\",\n        left: \"40%\",\n        color: \"#b00000\",\n        backgroundColor: \"#fce6e6\",\n        fontSize: \"16px\",\n        fontWeight: \"600\",\n        padding: \"10px\",\n        borderRadius: \"50%\",\n        minWidth: \"40px\",\n        cursor: \"pointer\"\n    },\n\n    LoadingProgress: {\n        position: \"absolute\",\n        top: \"40%\",\n        left: \"40%\",\n      },\n\n      BookingCountGauge: {\n        position: \"absolute\",\n        bottom: \"5%\",\n        left: \"8%\",\n        width : \"8%\",\n        height: \"85%\"\n    },\n\n  }));\n\nconst MAX_BOOKING_COUNT = 100;  \n\nconst MonthViewCell = ({key, cellIndex, month, daysInMonth, dayClicked}) => {\n    const classes = useStyles();\n\n    const [state, setState] = React.useContext(GlobalState);\n\n    const [dateStr, setDateStr] = React.useState('');\n\n    const [cellDate, setCellDate] = React.useState(new Date());\n\n    const [bookingsCount, setBookingsCount] = React.useState(-1);\n\n    const [disableDay, setDisableDay] = React.useState(false);\n\n    const [isPast, setIsPast] = React.useState(false);\n\n    useEffect( () => {\n\n        if (cellIndex <= daysInMonth.length)\n        {\n            const date = daysInMonth[cellIndex - 1];\n            const dateStr = dateformat(date, 'yyyy-mm-dd');\n            setDateStr(dateStr);\n            setCellDate(date);\n            setDisableDay(date.getMonth() !== month - 1);\n            const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\n            setIsPast(dateStr < todayStr);\n        }\n        else\n        {\n            const day = cellIndex - daysInMonth.length;\n            const date = new Date((daysInMonth[daysInMonth.length - 1].getTime() + ( day * 86400000)));\n            const dateStr = dateformat(date, 'yyyy-mm-dd');\n            setDateStr(dateStr);\n            setCellDate(date);\n            setDisableDay(true);\n            const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\n            setIsPast(dateStr < todayStr);\n        }\n\n    }, [cellIndex, month, daysInMonth]);\n\n    useEffect ( () => {\n\n        const fecthData = async () =>\n        {\n            if (!dateStr || dateStr.length <= 0)\n            {\n                return;\n            }\n        \n            if (disableDay)\n            {\n                setBookingsCount(-2);\n                return;\n            }\n\n            setBookingsCount(-1);\n\n            var res = state.AdminCalendarCache?.find(record => record.method === 'getBookingsCountByDateStr' && record.query === dateStr)?.res;\n\n            if (!res)\n            {\n                res = await BookService.getAllBookingsCountByDateStr(dateStr);\n                setState(state => ({...state, AdminCalendarCache : [...state.AdminCalendarCache, {method: 'getBookingsCountByDateStr' , query : dateStr, res: res}]}));\n            }\n        \n            if (res.data.count >= 0)\n            {\n                setBookingsCount(res.data.count);\n            }\n\n        }\n\n      fecthData();\n\n    }, [dateStr]);\n\n    const getDayLabel = (_cellIndex , _month , _daysInMonth) =>\n    {\n        var date = null;\n        var disabled = false;\n        var day = -1;\n\n    \n\n        if (_cellIndex <= _daysInMonth.length)\n        {\n            date = _daysInMonth[_cellIndex - 1];\n            day = date.getDate();\n            if (date.getMonth() !== _month - 1)\n            {\n                disabled = true;\n            }\n        }\n        else\n        {\n            const _day = _cellIndex - _daysInMonth.length;\n            const date = new Date((_daysInMonth[_daysInMonth.length - 1].getTime() + ( _day * 86400000)));\n            day = date.getDate();\n            disabled = true;\n        }\n\n        const isToday = dateformat(new Date(),'yyyy-mm-dd') === dateformat(date, 'yyyy-mm-dd');\n\n        return (\n            <span className={(disabled) ? classes.DayLabelDisabled : isToday ? classes.DayLabelToday : classes.DayLabel}>\n                 {day > 0 ? `${day}` : ''}\n             </span>\n        );\n    }\n\n    const getBookingsCountLabel = (_bookingsCount) =>\n    {\n        if (_bookingsCount === -1)\n        {\n            return (\n                <div className={classes.LoadingProgress}>\n                      <CircularProgress disableShrink  />\n                </div>\n            );  \n        }\n        else if (_bookingsCount > 0 )\n        {\n            if (_bookingsCount >= MAX_BOOKING_COUNT / 2)\n            {\n                return (\n                    <div onClick={(event => dayClicked(event,cellDate))} className={classes.BookingCountLabelBusy}>\n                        {_bookingsCount}\n                    </div>\n                );\n            }\n            else\n            {\n                return (\n                    <div onClick={(event => dayClicked(event,cellDate))} className={classes.BookingCountLabel}>\n                          {_bookingsCount < 10 ?  ` ${_bookingsCount}` : `${_bookingsCount}`}\n                    </div>\n                );\n            }\n        }\n    }\n\n    const getBookingsCountGauge = (_bookingsCount) =>\n    {\n        if (_bookingsCount > 0)\n        {\n            let percent = (_bookingsCount / MAX_BOOKING_COUNT) * 100;\n            if (percent > 100)\n            {\n                percent = 100;\n            }\n\n            percent = 100 - percent;\n\n            return (\n\n                <div className={classes.BookingCountGauge}>\n                  <div style={{padding:\"0\", margin:\"0\", width:\"100%\", height:\"100%\", backgroundColor: \"#3f51b5\"}} >\n                        <div  style={{padding:\"0\", margin:\"0\", width:\"100%\", height:`${percent}%`, backgroundColor: \"#fafafa\"}} >\n\n                        </div>\n                  </div>\n                </div>\n            );\n        }\n    }\n\n    return (\n        <React.Fragment>\n\n            <div className={classes.Container}>\n\n              {getDayLabel(cellIndex, month, daysInMonth)}\n\n              {getBookingsCountLabel(bookingsCount)}\n\n              {getBookingsCountGauge(bookingsCount)}\n\n            </div>\n\n        </React.Fragment>\n\n\n    );\n}\n\nMonthViewCell.propTypes = {\n    key: PropTypes.string.isRequired,\n    cellIndex: PropTypes.number.isRequired,\n    month: PropTypes.number.isRequired,\n    daysInMonth: PropTypes.arrayOf(PropTypes.date),\n    dayClicked: PropTypes.func\n  };\n\n \n  \nexport default MonthViewCell;","import calendar from 'node-calendar';\n\n\nexport default class CalendarUtil {\n\n    static getMonthRange = (month , year) =>\n    {\n        return new calendar.Calendar(calendar.SUNDAY).itermonthdates(year, month);\n    } \n\n} ","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport MonthViewCell from './MonthViewCell';\nimport CalendarUtil from './calendar-util';\n\nconst dayLables = ['Sun', 'Mon', 'Tue', 'Wed' , 'Thu', 'Fri', 'Sat'];\nconst days = [1,2,3,4,5,6,7]; \nconst rows = [1,2,3,4,5,6];\n\nconst useStyles = makeStyles((theme) => ({\n\n    table: {\n        width: \"100%\",\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n    },\n\n    th: {\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        verticalAlign: \"middle\",\n        fontcolor: \"#555\",\n        fontWeight: \"400\",\n        fontSize: \"15px\",\n        paddingTop: \"5px\",\n        paddingBottom: \"5px\",\n        width: \"14%\"\n    },\n\n    td: {\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        verticalAlign: \"middle\",\n    }\n\n  }));\n\nconst MonthView = ({month, year, dayClicked}) => {\n    const classes = useStyles();\n\n    const daysInMonth = CalendarUtil.getMonthRange(month,year);\n\n    return (\n        <React.Fragment>\n\n            <table className={classes.table}>\n                <thead>\n                    <tr>\n                        {dayLables.map(label => (\n                            <th key={`th-${label}`} className={classes.th}>\n                                {label}\n                            </th>\n                        ))}\n                    </tr>\n                </thead>\n                <tbody>\n                    {rows.map(row => (\n                        <tr>\n                            {days.map(day => (\n                                <td className={classes.td}>\n                                    <MonthViewCell \n                                        key={`${month}${year}${(row-1) * days.length + day}`} \n                                        cellIndex={(row-1) * days.length + day} \n                                        month={month} \n                                        daysInMonth={daysInMonth}\n                                        dayClicked = {dayClicked}\n                                        />\n                                </td>\n                            ))}\n                        </tr>\n                    ))}            \n                </tbody>\n\n            </table>\n\n      \n        </React.Fragment>\n\n\n    );\n}\n\nMonthView.propTypes = {\n    month: PropTypes.number.isRequired,\n    year: PropTypes.number.isRequired,\n    dayClicked: PropTypes.func\n  };\n\n\nexport default MonthView;","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport dateformat from 'dateformat';\nimport BookService from '../services/BookService';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport GlobalState from '../../GlobalState';\n\nimport axios from 'axios'\n\nconst useStyles = makeStyles((theme) => ({\n\n    Container: {\n        width: \"100%\",\n        paddingTop: \"40%\",\n        position: \"relative\",\n        backgroundColor: \"#fff\"\n    },\n\n    ContainerPast: {\n        width: \"100%\",\n        paddingTop: \"40%\",\n        position: \"relative\",\n        backgroundColor: \"#fafafa\"\n    },\n    \n    DayLabel: {\n        position: \"absolute\",\n        top: \"5px\",\n        right: \"5px\",\n        color: \"#555\",\n        fontSize: \"1rem\"\n    },\n\n    DayLabelDisabled: {\n        position: \"absolute\",\n        top: \"5px\",\n        right: \"5px\",\n        color: \"#ddd\",\n        fontSize: \"1rem\"\n    },\n\n    BookingCountLabel: {\n        position: \"absolute\",\n        top: \"25%\",\n        left: \"38%\",\n        color: \"#3f51b5\",\n        backgroundColor: \"#ebedf7\",\n        fontSize: \"14px\",\n        fontWeight: \"600\",\n        padding: \"5px\",\n        borderRadius: \"50%\",\n        minWidth: \"30px\",\n        cursor : \"pointer\",\n    },\n\n    BookingCountLabelBusy: {\n        position: \"absolute\",\n        top: \"25%\",\n        left: \"38%\",\n        color: \"#b00000\",\n        backgroundColor: \"#fce6e6\",\n        fontSize: \"14px\",\n        fontWeight: \"600\",\n        padding: \"5px\",\n        borderRadius: \"50%\",\n        minWidth: \"30px\",\n        cursor : \"pointer\",\n    },\n\n    LoadingProgress: {\n        position: \"absolute\",\n        top: \"40%\",\n        left: \"40%\",\n      },\n\n      BookingCountGauge: {\n        position: \"absolute\",\n        bottom: \"5%\",\n        left: \"8%\",\n        width : \"85%\",\n        height: \"8%\"\n    },\n\n  }));\n\nconst MAX_BOOKING_COUNT = 5;  \n\nconst WeekViewCell = ({key, date, time, dayClicked}) => {\n    const classes = useStyles();\n\n    const [state, setState] = React.useContext(GlobalState);\n    const [bookingsCount, setBookingsCount] = React.useState(-1);\n    const [isPast, setIsPast] = React.useState(false);\n\n    const [cellDate, setCellDate] = React.useState(new Date());\n\n    useEffect( () => {\n        const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\n        setIsPast(date < todayStr);\n\n        setCellDate(new Date(date));\n\n    }, [date]);\n\n    useEffect ( () => {\n      \n      \n      \n        if (!date || date.length <= 0 || !time || time.length <= 0)\n        {\n            return;\n        }\n        \n        // if (isPast)\n        // {\n        //     setBookingsCount(-2);\n        //     return;\n        // }\n\n        setBookingsCount(-1);\n\n       \n\n        var res = state.AdminCalendarCache?.find(record => record.method === 'getBookingsCountByDateStrandTime' && record.query === `${date}${time}`)?.res;\n        if (res)\n        {\n            if (res.data.count >= 0)\n            {\n                setBookingsCount(res.data.count);\n            }  \n            return;\n        }\n\n        let source = axios.CancelToken.source();\n        BookService.getAllBookingsCountByDateStrandTime(date, time, source).then( res => {\n            if (res.data.count >= 0)\n            {\n                setBookingsCount(res.data.count);\n                setState(state => ({...state, AdminCalendarCache : [...state.AdminCalendarCache, {method: 'getBookingsCountByDateStrandTime' , query : `${date}${time}`, res: res}]}));\n            }  \n        }).catch( err => \n            {\n                //do nothing\n            });\n     \n        return () => {\n           if (source)\n              source.cancel('Cancelling in cleanup');\n        }\n     \n    }, [date, time]);\n\n\n    const getBookingsCountLabel = (_bookingsCount) =>\n    {\n        if (_bookingsCount === -1)\n        {\n            return (\n                <div className={classes.LoadingProgress}>\n                      <CircularProgress disableShrink  />\n                </div>\n            );  \n        }\n        else if (_bookingsCount > 0)\n        {\n            if (_bookingsCount >= MAX_BOOKING_COUNT)\n            {\n                return (\n                    <div onClick={(event => dayClicked(event,cellDate))} className={classes.BookingCountLabelBusy}>\n                        {_bookingsCount}\n                    </div>\n                );\n            }\n            else\n            {\n                return (\n                    <div onClick={(event => dayClicked(event,cellDate))} className={classes.BookingCountLabel}>\n                        {_bookingsCount}\n                    </div>\n                );\n            }\n        }\n    }\n\n    const getBookingsCountGauge = (_bookingsCount) =>\n    {\n        if (_bookingsCount > 0 )\n        {\n            let percent = (_bookingsCount / MAX_BOOKING_COUNT) * 100;\n            if (percent > 100)\n            {\n                percent = 100;\n            }\n\n            // percent = 100 - percent;\n\n            return (\n\n                <div className={classes.BookingCountGauge}>\n                  <div style={{padding:\"0\", margin:\"0\", width:\"100%\", height:\"100%\", backgroundColor: \"#f5f5f5\"}} >\n                        <div  style={{padding:\"0\", margin:\"0\", height:\"100%\", width:`${percent}%`, backgroundColor: \"#3f51b5\"}} >\n\n                        </div>\n                  </div>\n                </div>\n            );\n        }\n    }\n\n    return (\n        <React.Fragment>\n\n            <div className={isPast ? classes.ContainerPast : classes.Container}>\n\n              {getBookingsCountLabel(bookingsCount)}\n\n              {getBookingsCountGauge(bookingsCount)}\n\n            </div>\n\n        </React.Fragment>\n\n\n    );\n}\n\nWeekViewCell.propTypes = {\n    key: PropTypes.string.isRequired,\n    date: PropTypes.string.isRequired,\n    time: PropTypes.string.isRequired,\n    dayClicked: PropTypes.func\n  };\n\n \n  \nexport default WeekViewCell;","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport WeekViewCell from './WeekViewCell';\nimport dateformat from 'dateformat';\n\nconst rows = [\n    '09:00 AM',\n    '09:15 AM', \n    '09:30 AM', \n    '09:45 AM',\n    '10:00 AM',\n    '10:15 AM',\n    '10:30 AM',\n    '10:45 AM',\n    '11:00 AM',\n    '11:15 AM',\n    '11:30 AM',\n    '11:45 AM',\n    '12:00 PM',\n    '12:15 PM',\n    '12:30 PM',\n    '12:45 PM',\n    '01:00 PM',\n    '01:15 PM',\n    '01:30 PM',\n    '01:45 PM',\n    '02:00 PM',\n    '02:15 PM',\n    '02:30 PM',\n    '02:45 PM',\n    '03:00 PM',\n    '03:15 PM',\n    '03:30 PM',\n    '03:45 PM',\n    '04:00 PM',\n    '04:15 PM',\n    '04:30 PM',\n    '04:45 PM',\n    '05:00 PM',\n    '05:15 PM',\n    '05:30 PM',\n    '05:45 PM',\n];\n\nconst useStyles = makeStyles((theme) => ({\n\n    table: {\n        width: \"100%\",\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        overflowY: \"auto\"\n    },\n\n    th: {\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        verticalAlign: \"middle\",\n        fontcolor: \"#555\",\n        fontWeight: \"400\",\n        fontSize: \"15px\",\n        paddingTop: \"5px\",\n        paddingBottom: \"5px\",\n        width: \"12%\", \n    },\n\n    td: {\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        verticalAlign: \"middle\",\n        height : \"50px\",\n        width: \"12%\", \n    }\n\n  }));\n\nconst WeekView = ({dates, dayClicked}) => {\n    const classes = useStyles();\n\n    return (\n        <React.Fragment>\n\n        <div style={{overflowY: \"scroll\" , height: \"60px\"}}>\n            <table className={classes.table}>\n                <thead>\n                    <tr>\n                        <th style={{width: \"7%\"}}>\n                        \n                        </th>\n                            {dates.map(date => (\n                                <th className={classes.th}>\n                                    <div style={{paddingBottom: \"5px\", color: \"#aaa\"}}>\n                                         {dateformat(date, 'ddd')}\n                                    </div>\n                                    <div>\n                                        <span style={{color: \"#aaa\"}}>\n                                            {dateformat(date, 'mmm ')}\n                                        </span> \n                                        <span  style={(dateformat(new Date(),'yyyy-mm-dd') === dateformat(date, 'yyyy-mm-dd')) ? { backgroundColor: \"#1a73e8\", color: \"#fff\", borderRadius: \"50%\",  padding: \"5px\",} : {color: \"#333\", fontWeight:\"500\"}}>\n                                             {dateformat(date, ' d')}\n                                        </span>\n                                       \n                                    </div>\n                                </th>\n                        ))}\n                    </tr>\n                </thead>\n             </table>\n\n        </div>\n\n            <div style={{overflowY: \"scroll\" , height: \"70vh\"}}>\n                <table className={classes.table}>   \n                    <tbody>\n                        {rows.map(row => (\n                            <tr>\n                                <td style={{width: \"7%\"}}>\n                                    {row}\n                                </td>\n                                {dates.map(day => (\n                                    <td className={classes.td}>\n                                        <WeekViewCell \n                                                dayClicked = {dayClicked}\n                                                key={`${dateformat(day,'yyyy-mm-dd')}-${row.replace(':','-')}`} \n                                                date={dateformat(day,'yyyy-mm-dd')} \n                                                time={row}/>\n                                    </td>\n                                ))}\n                            </tr>\n                        ))}            \n                    </tbody>\n                </table>\n            </div>                    \n      \n        </React.Fragment>\n\n\n    );\n}\n\nWeekView.propTypes = {\n    dates: PropTypes.arrayOf(PropTypes.any).isRequired,\n    dayClicked: PropTypes.func\n  };\n\n\nexport default WeekView;","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport dateformat from 'dateformat';\nimport BookService from '../services/BookService';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport GlobalState from '../../GlobalState';\nimport BookingDialog from '../BookingDialog';\n\nconst useStyles = makeStyles((theme) => ({\n\n    Container: {\n        width: \"100%\",\n        height : \"50px\",\n        position: \"relative\",\n        backgroundColor: \"#fff\",\n        display: \"flex\",\n        alignItems : \"flex-start\",\n        justifyItems: \"flex-start\",\n        paddingLeft : \"10px\"\n\n    },\n\n    ContainerPast: {\n        width: \"100%\",\n        paddingTop: \"50px\",\n        position: \"relative\",\n        backgroundColor: \"#fafafa\"\n    },\n    \n    DayLabel: {\n        position: \"absolute\",\n        top: \"5px\",\n        right: \"5px\",\n        color: \"#555\",\n        fontSize: \"1rem\"\n    },\n\n    DayLabelDisabled: {\n        position: \"absolute\",\n        top: \"5px\",\n        right: \"5px\",\n        color: \"#ddd\",\n        fontSize: \"1rem\"\n    },\n\n    LoadingProgress: {\n        position: \"absolute\",\n        top: \"10%\",\n        left: \"40%\",\n      },\n\n      BookingCountGauge: {\n        position: \"absolute\",\n        bottom: \"5%\",\n        left: \"8%\",\n        width : \"85%\",\n        height: \"8%\"\n    },\n\n    bookingBox: {\n        display: \"flex\",\n        marginRight: \"10px\",\n        marginTop: \"5px\",\n        padding: \"10px\",\n        maxWidth : \"150px\",\n        overflowX: \"hidden\",\n        border : \"1px solid #eee\",\n        fontSize: \"12px\",\n        fontWeight : \"500\",\n        cursor: \"pointer\",\n        backgroundColor: \"#ebedf7\",\n        color: \"#3f51b5\",\n        boxShadow: \"2px 4px #fafafa\",\n\n        \"&:hover\": {\n            background: \"#3f51b5\",\n            color: \"#ebedf7\"\n          },\n    },\n\n    bookingBoxSampleTaken: {\n        display: \"flex\",\n        marginRight: \"10px\",\n        marginTop: \"5px\",\n        padding: \"10px\",\n        maxWidth : \"150px\",\n        overflowX: \"hidden\",\n        border : \"1px solid #eee\",\n        fontSize: \"12px\",\n        fontWeight : \"500\",\n        cursor: \"pointer\",\n        backgroundColor: \"#0066cc\",\n        color: \"#eee\",\n        boxShadow: \"2px 4px #fafafa\",\n\n        \"&:hover\": {\n            background: \"#0059b3\",\n            color: \"#fafafa\"\n          },\n    },\n\n    bookingBoxPositive: {\n        display: \"flex\",\n        marginRight: \"10px\",\n        marginTop: \"5px\",\n        padding: \"10px\",\n        maxWidth : \"150px\",\n        overflowX: \"hidden\",\n        border : \"1px solid #eee\",\n        fontSize: \"12px\",\n        fontWeight : \"500\",\n        cursor: \"pointer\",\n        backgroundColor: \"#d40b0b\",\n        color: \"#fff2f2\",\n        boxShadow: \"2px 4px #fafafa\",\n\n        \"&:hover\": {\n            background: \"#bf0000\",\n            color: \"#fff\"\n          },\n    },\n\n    bookingBoxReportSent: {\n        display: \"flex\",\n        marginRight: \"10px\",\n        marginTop: \"5px\",\n        padding: \"10px\",\n        maxWidth : \"150px\",\n        overflowX: \"hidden\",\n        border : \"1px solid #eee\",\n        fontSize: \"12px\",\n        fontWeight : \"500\",\n        cursor: \"pointer\",\n        backgroundColor: \"#009900\",\n        color: \"#eee\",\n        boxShadow: \"2px 4px #fafafa\",\n\n        \"&:hover\": {\n            background: \"#006e00\",\n            color: \"#fafafa\"\n          },\n    },\n\n  \n\n  }));\n\n\n\nconst DayViewCell = ({key, date, time}) => {\n    const classes = useStyles();\n\n    const [state, setState] = React.useContext(GlobalState);\n    const [bookings, setBookings] = React.useState(null);\n    const [filteredBookings, setFilteredBookings] = React.useState(null);\n    const [selectedBooking, setSelectedBooking] = React.useState(null);\n\n    const [refresh, setRefresh] = React.useState(true); \n\n    const [isPast, setIsPast] = React.useState(false);\n\n    const [openDialog, setOpenDialog] = React.useState(false);\n\n\n    useEffect( () => {\n        const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\n        setIsPast(date < todayStr);\n\n    }, [date]);\n\n    useEffect( () => \n    {\n        if (bookings) {\n\n\n            if (state.dayViewCalFilter && state.dayViewCalFilter.trim().length > 0)\n            {\n                const search = state.dayViewCalFilter.trim().toUpperCase();\n                setFilteredBookings( bookings.filter(booking => booking.forenameCapital.indexOf(search) >= 0\n                                                            ||  booking.surnameCapital.indexOf(search) >= 0\n                                                            ||  `${booking.forenameCapital} ${booking.surnameCapital}`.indexOf(search) >= 0\n                    \n                    ));\n            }\n            else\n            {\n                setFilteredBookings([...bookings]);\n            }\n        }\n\n    }, [state.dayViewCalFilter, bookings]);\n \n\n\n    useEffect ( () => {\n       \n        const fetchData = async () =>\n        {\n            if (!date || date.length <= 0 || !time || time.length <= 0)\n            {\n                return;\n            }\n         \n            // if (isPast)\n            // {\n            //     setBookings([]);\n            //     return;\n            // }\n    \n            setBookings(null);\n    \n            var res = state.AdminCalendarCache?.find(record => record.method === 'getBookingsByDateStrandTime' && record.query === `${date}${time}`)?.res;\n            if (!res || openDialog)\n            {\n                res = await BookService.getAllBookingsByDateStrandTime(date, time);\n                setState(state => ({...state, AdminCalendarCache : [...state.AdminCalendarCache, {method: 'getBookingsByDateStrandTime' , query : `${date}${time}`, res: res}]}));\n            }\n          \n          \n            if (res.data.status === 'OK')\n            {\n                setBookings(res.data.bookings);\n            }   \n        }\n\n        if (openDialog)\n        {\n            setState(state => ({...state, AdminCalendarCache : state.AdminCalendarCache.filter(record => !(record.method === 'getBookingsByDateStrandTime' && record.query ===  `${date}${time}`))}));\n            setState(state => ({...state, AdminCalendarCache : state.AdminCalendarCache.filter(record => !(record.method === 'getBookingsCountByDateStrandTime' && record.query ===  `${date}${time}`))}));\n            setState(state => ({...state, AdminCalendarCache : state.AdminCalendarCache.filter(record => !(record.method === 'getBookingsCountByDateStr' && record.query ===  date))}));\n        }\n\n         fetchData();\n     \n    }, [date, time, state.bookingDialogDataChanged]);\n\n    const bookingCliked = (event, booking) =>\n    {\n        if (state.role === 'pcrlab')\n            return\n\n        setSelectedBooking(booking);\n        setOpenDialog(true);\n    }\n\n    \n\n    const getBookingClass = (status) =>\n    {\n        switch (status) {\n\n            case 'sample_taken':\n                return classes.bookingBoxSampleTaken;\n            case 'positive':\n                return classes.bookingBoxPositive;\n            case 'report_sent':\n            case 'report_cert_sent':\n                return classes.bookingBoxReportSent;     \n\n            default : \n                return classes.bookingBox;\n        }\n    }\n\n    const getBookingsBox = (_bookings) =>\n    {\n        if (_bookings === null) \n        {\n            return (\n                <div className={classes.LoadingProgress}>\n                      <CircularProgress disableShrink  />\n                </div>\n            );  \n        }\n        else if (_bookings.length > 0)\n        {\n           return (\n                _bookings.map(booking => (\n\n                    <div style={booking.tr ? {borderTop: \"5px solid #d00fd6\"} : {} } className={getBookingClass(booking.status)} onClick={event => bookingCliked(event,booking)}>\n\n                        {`${booking.forenameCapital}-${booking.surnameCapital}`.substring(0,15)}\n\n                    </div>\n\n                ))\n\n           );\n        }\n    }\n\n\n    const handleCloseDialog = () =>\n    {\n        setOpenDialog(false);\n    }\n\n    return (\n        <React.Fragment>\n\n            <div className={classes.Container}>\n\n              {getBookingsBox(filteredBookings)}\n\n            </div>\n\n            <BookingDialog\n                booking={selectedBooking}\n                open={openDialog}\n                onClose={handleCloseDialog}\n            />\n\n        </React.Fragment>\n\n\n    );\n}\n\nDayViewCell.propTypes = {\n    key: PropTypes.string.isRequired,\n    date: PropTypes.string.isRequired,\n    time: PropTypes.string.isRequired,\n  };\n\n \n  \nexport default DayViewCell;","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport DayViewCell from './DayViewCell';\nimport dateformat from 'dateformat';\n\nconst rows = [\n    '09:00 AM',\n    '09:15 AM', \n    '09:30 AM', \n    '09:45 AM',\n    '10:00 AM',\n    '10:15 AM',\n    '10:30 AM',\n    '10:45 AM',\n    '11:00 AM',\n    '11:15 AM',\n    '11:30 AM',\n    '11:45 AM',\n    '12:00 PM',\n    '12:15 PM',\n    '12:30 PM',\n    '12:45 PM',\n    '01:00 PM',\n    '01:15 PM',\n    '01:30 PM',\n    '01:45 PM',\n    '02:00 PM',\n    '02:15 PM',\n    '02:30 PM',\n    '02:45 PM',\n    '03:00 PM',\n    '03:15 PM',\n    '03:30 PM',\n    '03:45 PM',\n    '04:00 PM',\n    '04:15 PM',\n    '04:30 PM',\n    '04:45 PM',\n    '05:00 PM',\n    '05:15 PM',\n    '05:30 PM',\n    '05:45 PM',\n];\n\nconst useStyles = makeStyles((theme) => ({\n\n    table: {\n        width: \"100%\",\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        overflowY: \"auto\"\n    },\n\n    th: {\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        verticalAlign: \"middle\",\n        fontcolor: \"#555\",\n        fontWeight: \"400\",\n        fontSize: \"15px\",\n        paddingTop: \"5px\",\n        paddingBottom: \"5px\",\n        width: \"12%\", \n    },\n\n    td: {\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        verticalAlign: \"middle\",\n        height : \"50px\",\n        width: \"84%\", \n    },\n\n    titleLabel: {\n        paddingBottom: \"17px\",\n        paddingTop: \"17px\",\n        color: \"#777\",\n        fontSize: \"16px\"\n    },\n\n    titleLabelToday: {\n        paddingBottom: \"17px\",\n        paddingTop: \"17px\",\n        color: \"#fff\",\n        backgroundColor: \"#1a73e8\",\n        fontSize: \"16px\"\n    },\n\n  }));\n\nconst DayView = ({date}) => {\n    const classes = useStyles();\n\n    return (\n        <React.Fragment>\n\n        <div style={{overflowY: \"scroll\" , height: \"60px\"}}>\n            <table className={classes.table}>\n                <thead>\n                    <tr>\n                        <th style={{width: \"7%\"}}>\n                        \n                        </th>\n                        <th style={{width: \"84%\"}}>\n                                <div className={(dateformat(new Date(),'yyyy-mm-dd') === dateformat(date, 'yyyy-mm-dd')) ? classes.titleLabelToday : classes.titleLabel }>\n                                        {dateformat(date,'dddd')}\n                                </div>                                \n                        </th>\n                    </tr>\n                </thead>\n             </table>\n\n        </div>\n\n            <div style={{overflowY: \"scroll\" , height: \"70vh\"}}>\n                <table className={classes.table}>   \n                    <tbody>\n                        {rows.map(row => (\n                            <tr>\n                                <td style={{width: \"7%\"}}>\n                                    {row}\n                                </td>\n                               \n                                <td className={classes.td}>\n                                     <DayViewCell key={`${dateformat(date,'yyyy-mm-dd')}-${row}`} date={dateformat(date,'yyyy-mm-dd')} time={row}/>  \n                                </td>\n                            \n                            </tr>\n                        ))}            \n                    </tbody>\n                </table>\n            </div>                    \n      \n        </React.Fragment>\n\n\n    );\n}\n\nDayView.propTypes = {\n    date: PropTypes.any.isRequired\n  };\n\n\nexport default DayView;","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MonthView from './MonthView';\nimport { Button, Grid, IconButton, InputAdornment, TextField, Tooltip } from '@material-ui/core';\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\n\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport WeekView from './WeekView';\nimport dateformat from 'dateformat';\nimport DayView from './DayView';\nimport GlobalState from '../../GlobalState';\n\nimport CloseIcon from '@material-ui/icons/Close';\n\n\n\nconst monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n  \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n];\n\nconst useStyles = makeStyles((theme) => ({\n\n    title: {\n        textAlign: \"center\",\n        fontSize: \"24px\",\n        fontColor: \"#333\"\n    },\n\n  }));\n\nexport default function CalendarView() {\n    const classes = useStyles();\n\n    const [state, setState] = React.useContext(GlobalState);\n\n    const [month, setMonth] = React.useState(new Date().getMonth() + 1);\n    const [year, setYear] = React.useState(new Date().getFullYear());\n\n    const [day, setDay] = React.useState(new Date());\n\n    const [firstDayofWeek, setFirstDayofWeek] = React.useState(new Date());\n\n    const [weekDates, setWeekDates] = React.useState([]);\n\n    const [mode, setMode] = React.useState('month');\n    const [selectedTab, setSeletedTab] = React.useState('month');\n\n    const [filter,setFilter] = React.useState('');\n\n    const filterChanged = (event) =>{\n        setFilter(event.target.value);\n        setState(state => ({...state, dayViewCalFilter : event.target.value?.trim()?.toUpperCase()}))\n      }\n\n      const removeFilter = () =>\n      {\n        setFilter('');\n        setState(state => ({...state, dayViewCalFilter : ''}));\n      }\n\n\n    useEffect( () => {\n        const today = new Date();\n        const dayofWeek = today.getDay();\n        const firstdayofweek = new Date(today.getTime() - ( dayofWeek * 86400000));\n        setFirstDayofWeek(firstdayofweek);\n        setState(state => ({...state, AdminCalendarCache : []}));\n\n        return () =>\n        {\n            setState(state => ({...state, AdminCalendarCache : []}));\n            removeFilter();\n        }\n       \n    }, []);\n\n\n    useEffect( () => {\n        const dates = [];\n        for (var i = 0; i < 7 ; i++)\n        {\n            dates.push(new Date(firstDayofWeek.getTime() + ( i * 86400000)));\n        }\n        setWeekDates(dates);\n\n    }, [firstDayofWeek]);\n\n    const handlePrevButton = (event) =>\n    {\n       if (mode === 'month')\n       {\n            if (month === 1)\n            {\n                setYear(year - 1);\n            } \n\n            const newMonth = month === 1 ? 12 : month - 1;\n            setMonth(newMonth);\n\n            const newDay = new Date(year, newMonth - 1 , 1, 0 ,0 ,0 ,0);\n            setDay(newDay);\n\n            const dayofWeek = newDay.getDay();\n            setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\n\n       } \n       else if (mode === 'week')\n       {\n           const newFirstDayofWeek = new Date(firstDayofWeek.getTime() - ( 7 * 86400000));\n           setFirstDayofWeek(newFirstDayofWeek);\n\n           setDay(newFirstDayofWeek);\n           setMonth(newFirstDayofWeek.getMonth() + 1);\n           setYear(newFirstDayofWeek.getFullYear());\n\n       }\n       else if (mode === 'day')\n       {\n           const newDay = new Date(day.getTime() - ( 1 * 86400000));\n           setDay(newDay);\n\n           const dayofWeek = newDay.getDay();\n           setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\n\n           setMonth(newDay.getMonth() + 1);\n           setYear(newDay.getFullYear());\n       }\n    }\n\n    const handleNextButton = (event) =>\n    {\n        if (mode === 'month')\n        {\n            if (month === 12)\n            {\n                setYear(year + 1);\n            } \n       \n            const newMonth = month === 12 ? 1 : month + 1;\n            setMonth(newMonth);\n\n            const newDay = new Date(year, newMonth - 1 , 1, 0 ,0 ,0 ,0);\n            setDay(newDay);\n\n            const dayofWeek = newDay.getDay();\n            setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\n        }\n        else if (mode === 'week')\n        {\n            const newFirstDayofWeek = new Date(firstDayofWeek.getTime() + ( 7 * 86400000));\n            setFirstDayofWeek(newFirstDayofWeek);\n\n            setDay(newFirstDayofWeek);\n            setMonth(newFirstDayofWeek.getMonth() + 1);\n            setYear(newFirstDayofWeek.getFullYear());\n\n        }\n        else if (mode === 'day')\n        {\n            const newDay = new Date(day.getTime() + ( 1 * 86400000));\n            setDay(newDay);\n\n            const dayofWeek = newDay.getDay();\n            setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\n \n            setMonth(newDay.getMonth() + 1);\n            setYear(newDay.getFullYear());\n        }\n    }\n\n    const goToday = (event) => {\n        const newDay = new Date();\n        const dayofWeek = newDay.getDay();\n        setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\n        setDay(newDay);\n        setMonth(newDay.getMonth() + 1);\n        setYear(newDay.getFullYear());\n    }\n\n    const dayClicked = (event, date) =>\n    {\n        const newDay = new Date(date);\n        const dayofWeek = newDay.getDay();\n        setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\n        setDay(newDay);\n        setMonth(newDay.getMonth() + 1);\n        setYear(newDay.getFullYear());\n        setSeletedTab('day');\n        setMode('day');\n    }\n\n    const getContentFromMode = (_mode) => {\n        if (_mode === 'month')\n        {\n            return (\n                <MonthView dayClicked={dayClicked} month={month} year={year}/>    \n            );\n        }    \n        else if (_mode === 'week')\n        {\n            return (\n                    <WeekView dayClicked={dayClicked} dates={weekDates}/>\n            );\n            \n        }\n        else if (_mode === 'day')\n        {\n            return (\n                <DayView date={day}/>\n            );\n        }\n    }\n\n    const getCalendarTitleFromMode = (_mode) => {\n        if (_mode === 'month')\n        {\n            return (\n                <span className={classes.title}> {`${monthNames[month - 1]} ${year}`} </span>   \n            );\n        }    \n        else if (_mode === 'week')\n        {\n            const endOfWeek = new Date(firstDayofWeek.getTime() + ( 6 * 86400000));\n            let endofWeekStr = '';\n            if (endOfWeek.getMonth() === firstDayofWeek.getMonth())\n            {\n                endofWeekStr = dateformat(endOfWeek,'d');\n            }else\n            {\n                endofWeekStr = dateformat(endOfWeek,'mmm d');\n            }\n\n            return (\n                <span className={classes.title}> {`${dateformat(firstDayofWeek,'mmm d')} - ${endofWeekStr}, ${year}`} </span>\n            );\n            \n        }\n        else if (_mode === 'day')\n        {\n            return (\n                <span className={classes.title}> {`${dateformat(day,'mmmm d, yyyy')}`} </span>\n            );\n        }\n    }\n\n\n    const handleTabChanged = (event, value) => {\n        if (value && value.length)\n        {\n          setSeletedTab(value);\n          setMode(value);\n        }\n    };\n\n    const getPrevButtonTitle = (_mode) =>\n    {\n        return `Previuos ${mode}`;\n    }\n\n    const getNextButtonTitle = (_mode) =>\n    {\n        return `Next ${mode}`;\n    }\n\n    return (\n        <React.Fragment>\n\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"space-between\"\n            alignItems=\"center\"\n            style= {{marginBottom: \"10px\", marginTop: \"0px\"}}\n            >  \n\n            <Grid item md={3}>\n                <div  style={{display:\"flex\", alignItems: \"flex-start\", justifyContent: \"flex-start\" , paddingLeft: \"10px\"}}>\n                    <Tooltip title={getPrevButtonTitle(mode)} placement=\"bottom-start\">\n                        <IconButton \n                                color=\"default\" \n                                aria-label=\"prev\"\n                                onClick = {handlePrevButton}\n                                >\n                            <NavigateBeforeIcon style={{fontSize: '2rem'}}/>\n                        </IconButton>\n                    </Tooltip>\n\n                    <Tooltip title={getNextButtonTitle(mode)} placement=\"bottom-end\">\n                        <IconButton \n                                color=\"default\" \n                                aria-label=\"next\"\n                                onClick = {handleNextButton}\n                                >\n                            <NavigateNextIcon style={{fontSize: '2rem'}}/>\n                        </IconButton>\n                    </Tooltip>\n\n                    <Button style={{marginTop: \"11px\", marginLeft: \"10px\"}} onClick={goToday} variant=\"outlined\"> Today </Button>\n                </div>\n\n            </Grid>\n\n            <Grid item md={6}>\n\n                    <Grid\n                        container\n                        direction=\"row\"\n                        justify=\"center\"\n                        alignItems=\"flex-end\"\n                        spacing = {3}\n                        >\n                            <Grid item>\n                                    {getCalendarTitleFromMode(mode)}\n                            </Grid>\n                            {mode === 'day' && (\n                                        <Grid item>\n                                                <TextField\n                                                    variant=\"standard\"\n                                                    style={{marginBottom : \"5px\"}}\n                                                    value={filter}\n                                                    onChange={filterChanged}\n                                                    margin=\"normal\"\n                                                    size=\"small\"\n                                                    id=\"filter\"\n                                                    label=\"Filter\"\n                                                    name=\"filter\"\n                                                    autoComplete=\"off\"\n                                                    InputProps={{\n                                                        endAdornment : \n                                                            <InputAdornment position=\"end\">\n                                                                <Tooltip title=\"Clear\">\n                                                                            <IconButton\n                                                                            aria-label=\"remove filter\"\n                                                                            onClick={() => removeFilter()}\n                                                                            onMouseDown={() => removeFilter()}\n                                                                        >\n                                                                            <CloseIcon/>\n                                                                        </IconButton>\n                                                                </Tooltip>\n                                                            \n                                                            </InputAdornment>\n                                                          \n                                                    }}\n                                                   \n                                                />\n                                        </Grid>\n                            )}\n                           \n                    </Grid>\n                \n            </Grid>\n\n            <Grid item md={3}>\n                <div  style={{display:\"flex\", alignItems: \"flex-end\", justifyContent: \"flex-end\", paddingRight: \"10px\" }}>\n                    <ToggleButtonGroup\n                        value={selectedTab}\n                        exclusive\n                        onChange={handleTabChanged}\n                        aria-label=\"select view mode\"\n                    >\n                        <ToggleButton style={selectedTab === 'month' ? {width: \"80px\", color: \"#3f51b5\", backgroundColor: \"#ebedf7\" } : {width: \"80px\"}} value=\"month\" aria-label=\"month view\">\n                                month\n                        </ToggleButton>\n                        <ToggleButton style={selectedTab === 'week' ? {width: \"80px\", color: \"#3f51b5\", backgroundColor: \"#ebedf7\"} : {width: \"80px\"}}  value=\"week\" aria-label=\"week view\">\n                                week\n                        </ToggleButton>\n                        <ToggleButton style={selectedTab === 'day' ? {width: \"80px\", color: \"#3f51b5\", backgroundColor: \"#ebedf7\"} : {width: \"80px\"}} value=\"day\" aria-label=\"day view\">\n                                day\n                        </ToggleButton>\n                    </ToggleButtonGroup>\n                </div>\n            </Grid>\n\n           </Grid> \n\n             {getContentFromMode(mode)}\n\n        </React.Fragment>\n\n\n    );\n\n}","import axios from 'axios';\nimport { authToken, backendAPI } from '../../GlobalPath';\n\nexport default axios.create({\n  baseURL: backendAPI,\n  headers : {\n      'Authorization' : authToken,\n       'Content-Type': 'application/json',\n  }\n});","import API from './api';\nimport axiosRetry from 'axios-retry';\n\nexport default class BookService {\n\n   static changeDepositBooking = (bookingId, deposit) => {\n      return API.post(`/api/gynae/book/changedepositbooking?id=${bookingId}&deposit=${deposit}`);\n   }\n\n   static addNewBooking = (payload) =>\n   {\n      return API.post(`/api/gynae/book/addnewbooking`, payload);\n   }\n\n   static sendRegFormEmail = (bookingId) =>\n   {\n      return API.post(`/api/gynae/book/sendregformemail?id=${bookingId}`);\n   }\n\n   static payBooking = (bookingId,price, paymentMethod, corporate) =>\n   {\n      return API.post(`/api/gynae/book/paybooking?id=${bookingId}&paymentmethod=${paymentMethod}&corporate=${corporate}&price=${price}`);\n   }\n\n   static unPayBooking = (bookingId) =>\n   {\n      return API.post(`/api/gynae/book/unpaybooking?id=${bookingId}`);\n   }\n\n   static getShouldRefundsCount = () =>\n   {\n      return API.get(`/api/gynae/book/getshouldrefundscount`);\n   }\n\n   static manualRefundBooking = (bookingId) =>\n   {\n      return API.post(`/api/gynae/payment/manualrefundpayment`, {bookingId: bookingId});\n   }\n\n   static refundBooking = (bookingId) =>\n   {\n      return API.post(`/api/gynae/payment/refundpayment`, {bookingId: bookingId});\n   }\n\n   static getBookingsStatsByDateStr = (dateStr) =>\n   {\n      return API.get(`/api/gynae/book/getbookingsstatsbydatestr?date=${dateStr}`);\n   }\n\n   static getBookingsCountByDateStr = (dateStr) =>\n   {\n      return API.get(`/api/gynae/book/getbookingscountbydatestr?date=${dateStr}`);\n   }\n\n   static getAllBookingsCountAll = () =>\n   {\n      return API.get(`/api/gynae/book/getallbookingscountall`);\n   }\n\n   static getBookingsCountByDateStrandTime = (dateStr, time, source) =>\n   {\n      return API.get(`/api/gynae/book/getbookingscountbydatestrandtime?date=${dateStr}&time=${time}`, {cancelToken: source.token});\n   }\n\n   static getBookingsByDateStrandTime = (dateStr, time) =>\n   {\n      return API.get(`/api/gynae/book/getbookingsbydatestrandtime?date=${dateStr}&time=${time}`);\n   }\n\n\n   static getAllBookingsCountByDateStr = (dateStr) =>\n   {\n      return API.get(`/api/gynae/book/getallbookingscountbydatestr?date=${dateStr}`);\n   }\n\n   static getAllBookingsCountByDateStrandTime = (dateStr, time, source) =>\n   {\n      return API.get(`/api/gynae/book/getallbookingscountbydatestrandtime?date=${dateStr}&time=${time}`, {cancelToken: source.token});\n   }\n\n   static getAllBookingsByDateStrandTime = (dateStr, time) =>\n   {\n      return API.get(`/api/gynae/book/getallbookingsbydatestrandtime?date=${dateStr}&time=${time}`);\n   }\n\n   static changeBackToBookingMade = (id) =>\n   {\n      return API.post(`/api/gynae/book/changebacktobookingmade?id=${id}`);\n   }\n\n   static changeToPatientAttended = (id) =>\n   {\n      return API.post(`/api/gynae/book/changetopatientattended?id=${id}`);\n   }\n\n   static updateBooking = (payload) =>\n   {\n      return API.post(`/api/gynae/book/updatebookappointment`, payload);\n   } \n\n   static updateBookingTime = (payload) =>\n   {\n      return API.post(`/api/gynae/book/updatebookappointmenttime`, payload);\n   } \n\n   static deleteBooking = (id) =>\n   {\n      return API.post(`/api/gynae/book/deletebookappointment?id=${id}`);\n   } \n\n   static unDeleteBooking = (id) =>\n   {\n      return API.post(`/api/gynae/book/undeletebookappointment?id=${id}`);\n   } \n   \n    static getBookingsByRef = (ref) =>\n    {\n       return API.get(`/api/gynae/book/getbookingsbyref?ref=${ref}`);\n    }\n\n    static getBookingById = (id) =>\n    {\n       return API.get(`/api/gynae/book/getbookingbyid?id=${id}`);\n    }\n\n    static getAllBookings = (limit) =>\n    {\n      if (!limit) limit = 25 \n      return API.get(`/api/gynae/book/getallbookings?limit=${limit}`);\n    }\n\n    static getDeletedBookings= (limit) =>\n    {\n      if (!limit) limit = 25 \n       return API.get(`/api/gynae/book/getdeletedbookings?limit=${limit}`);\n    }\n\n    static getTodayBookings= () =>\n    {\n       return API.get(`/api/gynae/book/gettodaybookings`);\n    }\n\n    static getOldBookings= (limit) =>\n    {\n      if (!limit) limit = 25 \n       return API.get(`/api/gynae/book/getoldbookings?limit=${limit}`);\n    }\n\n    static getFutureBookings= (limit) =>\n    {\n      if (!limit) limit = 25 \n       return API.get(`/api/gynae/book/getfuturebookings?limit=${limit}`);\n    }\n\n    static getRecentBookings= () =>\n    {\n       return API.get(`/api/gynae/book/getrecentbookings`);\n    }\n\n    static getRecentBookingsAll= (limit) =>\n    {\n      if (!limit) limit = 25 \n       return API.get(`/api/gynae/book/getrecentbookingsall?limit=${limit}`);\n    }\n}","import API from './api';\n\nexport default class PDFService {\n\n\n    static downloadGynaeRegForm = (id) =>\n    {\n       return API.get(`/api/pdf/downloadgynaeregform?id=${id}`, {\n        responseType: 'arraybuffer',\n        id: id,\n        headers: {\n            Accept: 'application/pdf',\n        }\n        });\n    }\n\n\n    static downloadCovidForm1 = (id) =>\n    {\n       return API.get(`/api/pdf/downloadcovidform1?id=${id}`, {\n        responseType: 'arraybuffer',\n        id: id,\n        headers: {\n            Accept: 'application/pdf',\n        }\n        });\n    }\n\n    static downloadCovidForm2 = (id) =>\n    {\n       return API.get(`/api/pdf/downloadcovidform2?id=${id}`, {\n        responseType: 'arraybuffer',\n        headers: {\n            Accept: 'application/pdf',\n        }\n        });\n    }\n\n    static downloadPdfResult = (id) =>\n    {\n       return API.get(`/api/pdf/downloadpdfresult?id=${id}`, {\n        responseType: 'arraybuffer',\n        headers: {\n            Accept: 'application/pdf',\n        }\n        });\n    }\n\n    static downloadPdfCert = (id) =>\n    {\n       return API.get(`/api/pdf/downloadpdfcert?id=${id}`, {\n        responseType: 'arraybuffer',\n        headers: {\n            Accept: 'application/pdf',\n        }\n        });\n    }\n\n    static downloadPdfLabReport = (id) =>\n    {\n       return API.get(`/api/pdf/downloadpdflabreport?id=${id}`, {\n        responseType: 'arraybuffer',\n        headers: {\n            Accept: 'application/pdf',\n        }\n        });\n    }\n\n\n}","export const corporates = [\n    'Visa Medical'\n]","import React, { useEffect, useRef, useState } from \"react\";\nimport BookService from \"./services/BookService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {\n  Backdrop,\n  Button,\n  Checkbox,\n  CircularProgress,\n  Divider,\n  FormControlLabel,\n  Grid,\n  InputAdornment,\n  InputLabel,\n  Link,\n  makeStyles,\n  MenuItem,\n  Select,\n  TextField,\n  Tooltip,\n} from \"@material-ui/core\";\nimport GlobalState from \"./../GlobalState\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport CreditCardIcon from \"@material-ui/icons/CreditCard\";\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\n\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Draggable from \"react-draggable\";\nimport Paper from \"@material-ui/core/Paper\";\n\nimport Alert from \"@material-ui/lab/Alert\";\n\nimport PropTypes from \"prop-types\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport Box from \"@material-ui/core/Box\";\n\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport { corporates } from \"./Corporates\";\nimport NumberFormat from \"react-number-format\";\n\n\nvar interval;\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    marginTop: theme.spacing(0),\n    marginBottom: theme.spacing(1),\n  },\n\n  refreshButton: {\n    marginLeft: theme.spacing(2),\n  },\n\n  checkIcon: {\n    color: \"green\",\n  },\n\n  closeIcon: {\n    color: \"red\",\n  },\n\n  RefLink: {\n    cursor: \"pointer\",\n  },\n\n  BookedLabel: {\n    backgroundColor: \"#606060\",\n    color: \"#fff\",\n    paddingRight: \"10px\",\n    paddingLeft: \"10px\",\n  },\n\n  PatientAttendedLabel: {\n    backgroundColor: \"#0066aa\",\n    color: \"#fff\",\n    paddingRight: \"15px\",\n    paddingLeft: \"10px\",\n  },\n\n  SampleTakenLabel: {\n    backgroundColor: \"#0066cc\",\n    color: \"#fff\",\n    paddingRight: \"40px\",\n    paddingLeft: \"10px\",\n  },\n\n  ReportSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"90px\",\n    paddingLeft: \"10px\",\n  },\n\n  ReportCertSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"68px\",\n    paddingLeft: \"10px\",\n  },\n\n  archiveButton: {},\n\n  smartMatchButton: {\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    marginRight: \"10px\",\n    // padding: \"10px\"\n  },\n\n  infoTitle: {\n    fontWeight: \"400\",\n  },\n\n  infoData: {\n    paddingLeft: \"10px\",\n    fontWeight: \"800\",\n  },\n\n  matchButton: {\n    marginTop: \"30px\",\n    marginBottom: \"20px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  resendButton: {\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  resendFilesButton: {\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n    backgroundColor: \"#3792ad\",\n    \"&:hover\": {\n      background: \"#2f798f\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  cancelButton: {\n    marginBottom: \"10px\",\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"90px\",\n    paddingRight: \"90px\",\n  },\n\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 5,\n    color: \"#fff\",\n  },\n}));\n\nfunction NumberFormatCustom(props) {\n  const { inputRef, onChange, ...other } = props;\n\n  return (\n    <NumberFormat\n      {...other}\n      getInputRef={inputRef}\n      onValueChange={(values) => {\n        onChange({\n          target: {\n            name: props.name,\n            value: values.value,\n          },\n        });\n      }}\n      thousandSeparator\n      isNumericString\n      prefix=\"\"\n    />\n  );\n}\n\nNumberFormatCustom.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\n\nconst BorderLinearProgress = withStyles((theme) => ({\n  root: {\n    height: 10,\n    borderRadius: 5,\n  },\n  colorPrimary: {\n    backgroundColor: \"#cedbce\", //theme.palette.grey[theme.palette.type === 'light' ? 200 : 700],\n  },\n  bar: {\n    borderRadius: 5,\n    backgroundColor: \"#2f942e\",\n  },\n}))(LinearProgress);\nfunction LinearProgressWithLabel(props) {\n  return (\n    <Box display=\"flex\" alignItems=\"center\">\n      <Box width=\"100%\" mr={1}>\n        <BorderLinearProgress variant=\"determinate\" {...props} />\n      </Box>\n      <Box minWidth={35}>\n        <Typography\n          style={{ fontWeight: \"800\", color: \"#5e855e\" }}\n          variant=\"body2\"\n          color=\"textSecondary\"\n        >{`${Math.round(props.value)}%`}</Typography>\n      </Box>\n    </Box>\n  );\n}\n\nLinearProgressWithLabel.propTypes = {\n  /**\n   * The value of the progress indicator for the determinate and buffer variants.\n   * Value between 0 and 100.\n   */\n  value: PropTypes.number.isRequired,\n};\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable\n      handle=\"#draggable-dialog-title\"\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\n    >\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nexport default function PayDialog(props) {\n  const classes = useStyles();\n\n  const [state, setState] = React.useContext(GlobalState);\n  const [paymentMethod, setPaymentMethod] = useState(\"credit card\");\n  const [corporate, setCorporate] = useState(corporates[0]);\n  const [saving, setSaving] = useState(false);\n\n  const [price, setPrice] = useState(\"\");\n  const [priceError, setPriceError] = useState(false);\n\n  useEffect( () => {\n    if (props.price)\n    {\n      setPrice(`${props.price}`)\n    }else\n    {\n      setPrice('')\n    }\n  }, [props.price, props.open])\n\n  const priceChanged = (event) =>\n  {\n    setPrice(event.target.value)\n    setPriceError(false)\n  }\n\n  const paymentMethodChanged = (event) => {\n    setPaymentMethod(event.target.value);\n  };\n\n  const handleClose = () => {\n    if (saving) return;\n\n    props.handleClose();\n    setPaymentMethod(\"credit card\");\n    setPrice('')\n    setCorporate(corporates[0]);\n    setSaving(false);\n  };\n\n  const corporateChanged = (event) => {\n    setCorporate(event.target.value);\n  };\n\n  const payClicked = async () => {\n\n\n    if (!price || price.trim().length === 0 || price === '0')\n    {\n      setPriceError(true)\n      return\n    }\n\n    setSaving(true);\n\n  \n\n    try {\n      await BookService.payBooking(\n        props.booking._id,\n        price,\n        paymentMethod,\n        paymentMethod === \"corporate\" ? corporate : \"\"\n      );\n      setSaving(false);\n      setState((state) => ({\n        ...state,\n        bookingPayChanged: !state.bookingPayChanged ? true : false,\n      }));\n      handleClose();\n    } catch (err) {\n      console.error(err);\n      setSaving(false);\n    }\n  };\n\n  return (\n    <React.Fragment>\n      {props.booking && (\n        <React.Fragment>\n          <Dialog\n            maxWidth=\"xs\"\n            open={props.open}\n            onClose={handleClose}\n            PaperComponent={PaperComponent}\n            aria-labelledby=\"form-dialog-title\"\n          >\n            <DialogTitle id=\"draggable-dialog-title\">\n              <Grid\n                container\n                spacing={2}\n                direction=\"row\"\n                justify=\"center\"\n                alignItems=\"center\"\n              >\n                <Grid item>\n                  <CreditCardIcon\n                    style={{ color: \"#f50057\", fontSize: \"3rem\" }}\n                  />\n                </Grid>\n\n                <Grid item>\n                  <div\n                    style={{\n                      color: \"#f50057\",\n                      paddingBottom: \"10px\",\n                      fontWeight: \"800\",\n                    }}\n                  >\n                    {\" \"}\n                    PAY the CHARGE{\" \"}\n                  </div>\n                </Grid>\n              </Grid>\n\n              <Divider />\n            </DialogTitle>\n            <DialogContent>\n              <div\n                style={{\n                  height: \"300px\",\n                }}\n              >\n                <Grid\n                  container\n                  direction=\"column\"\n                  justify=\"space-between\"\n                  spacing={2}\n                  alignItems=\"flex-start\"\n                >\n                  <Grid item>\n                  <TextField\n                                autoFocus\n                                error={priceError}\n                                label=\"OTC Charges\"\n                                value={price}\n                                fullWidth\n                                required\n                                onChange={priceChanged}\n                                name=\"product-price\"\n                                id=\"product-price-id\"\n                                InputProps={{\n                                  inputComponent: NumberFormatCustom,\n                                  startAdornment: (\n                                    <InputAdornment position=\"start\">\n                                      £\n                                    </InputAdornment>\n                                  ),\n                                }}\n                              />\n\n                  </Grid>\n\n                  <Grid item>\n                    <div style={{ fontSize: \"17px\" }}>\n                      {\" \"}\n                      How do you want to pay?{\" \"}\n                    </div>\n                  </Grid>\n\n                  <Grid item>\n                    <FormControl component=\"fieldset\">\n                      <RadioGroup\n                        aria-label=\"paymentMethod\"\n                        name=\"paymentMethod\"\n                        value={paymentMethod}\n                        onChange={paymentMethodChanged}\n                      >\n                        <FormControlLabel\n                          value=\"credit card\"\n                          control={<Radio />}\n                          label=\"Credit Card\"\n                        />\n                        <FormControlLabel\n                          value=\"cash\"\n                          control={<Radio />}\n                          label=\"Cash\"\n                        />\n                        <FormControlLabel\n                          value=\"corporate\"\n                          control={<Radio />}\n                          label=\"Corporate\"\n                        />\n                      </RadioGroup>\n\n                      {paymentMethod === \"corporate\" && (\n                        <FormControl\n                          style={{ marginTop: \"10px\" }}\n                          className={classes.formControl}\n                        >\n                          <Select\n                            labelId=\"select-corporate\"\n                            id=\"select-corporate-id\"\n                            value={corporate}\n                            onChange={corporateChanged}\n                          >\n                            {corporates.map((element) => (\n                              <MenuItem\n                                value={element}\n                              >{`${element}`}</MenuItem>\n                            ))}\n                          </Select>\n                        </FormControl>\n                      )}\n                    </FormControl>\n                  </Grid>\n                </Grid>\n\n                <Grid item></Grid>\n\n                <div\n                  style={{\n                    position: \"absolute\",\n                    bottom: \"20px\",\n                    right: \"20px\",\n                  }}\n                >\n                  <Grid\n                    container\n                    direction=\"row\"\n                    justify=\"flex-end\"\n                    alignItems=\"center\"\n                    spacing={1}\n                  >\n                    <Grid item>\n                      <Button\n                        onClick={handleClose}\n                        style={{ width: \"100px\" }}\n                        disabled={saving}\n                      >\n                        back\n                      </Button>\n                    </Grid>\n                    <Grid item>\n                      <Button\n                        onClick={payClicked}\n                        variant=\"contained\"\n                        color=\"secondary\"\n                        style={{ width: \"100px\" }}\n                        disabled={saving}\n                      >\n                        Pay\n                      </Button>\n                    </Grid>\n                  </Grid>\n                </div>\n              </div>\n\n              <Backdrop className={classes.backdrop} open={saving}>\n                <CircularProgress color=\"inherit\" />\n              </Backdrop>\n            </DialogContent>\n          </Dialog>\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport GlobalState from \"./../GlobalState\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {\n  Button,\n  Checkbox,\n  DialogActions,\n  DialogContentText,\n  Divider,\n  FormControlLabel,\n  IconButton,\n  Switch,\n  TextField,\n  Tooltip,\n} from \"@material-ui/core\";\nimport PDFService from \"./services/PDFService\";\n\nimport { calculatePrice } from \"./PriceCalculator\";\n\nimport bookingService from \"./services/BookService\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport CloseIcon from \"@material-ui/icons/Close\";\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Draggable from \"react-draggable\";\nimport Slide from \"@material-ui/core/Slide\";\n\nimport Paper from \"@material-ui/core/Paper\";\n\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport BookService from \"./services/BookService\";\n\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport {\n  FormatDateFromString,\n  RevertFormatDateFromString,\n} from \"./DateFormatter\";\nimport PayDialog from \"./PayDialog\";\n\nimport PrintIcon from \"@material-ui/icons/Print\";\nimport UndoIcon from \"@material-ui/icons/Undo\";\n\nimport SendIcon from \"@material-ui/icons/Send\";\n\nimport HistoryIcon from \"@material-ui/icons/History\";\n\nimport FileCopyOutlinedIcon from \"@material-ui/icons/FileCopyOutlined\";\nimport { CalendarColors } from \"../Admin/calendar-admin/colors\";\nimport InvoiceService from \"../services/InvoiceService\";\nimport InvoiceDialog from \"../InvoiceDialog\";\n\nconst useStyles = makeStyles((theme) => ({\n  box: {\n    backgroundColor: \"#373737\",\n    color: \"#fff\",\n    padding: \"1px\",\n    borderRadius: \"4px\",\n    textAlign: \"justify\",\n    paddingRight: \"40px\",\n  },\n\n  boxRed: {\n    backgroundColor: \"#dc2626\",\n    color: \"#fff\",\n    padding: \"1px\",\n    borderRadius: \"4px\",\n    textAlign: \"justify\",\n    paddingRight: \"40px\",\n  },\n\n  boxInfo: {\n    textAlign: \"justify\",\n    backgroundColor: \"#fafafa\",\n    color: \"#333\",\n    padding: \"1px\",\n    borderRadius: \"4px\",\n    paddingRight: \"40px\",\n    border: \"1px solid #eee\",\n  },\n\n  ul: {\n    listStyle: \"none\",\n    padding: \"0\",\n    margin: \"0\",\n  },\n\n  li: {\n    marginBottom: \"15px\",\n  },\n\n  icon: {\n    marginRight: \"8px\",\n  },\n\n  root: {\n    width: \"100%\",\n  },\n\n  lineThrough: {\n    textDecoration: \"line-through\",\n  },\n\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    flexBasis: \"33.33%\",\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n  },\n  secondaryHeading: {\n    fontSize: theme.typography.pxToRem(15),\n  },\n\n  infoDetails: {\n    textAlign: \"left\",\n  },\n\n  infoTitle: {\n    fontWeight: \"800\",\n    marginRight: \"10px\",\n  },\n\n  infoData: {\n    fontWeight: \"400\",\n  },\n\n  title: {\n    textAlign: \"center\",\n    fontWeight: \"600\",\n    marginLeft: \"10px\",\n    marginBottom: \"5px\",\n  },\n\n  Accordion: {\n    backgroundColor: \"#f5f5f5\",\n    color: \"#222\",\n  },\n\n  AccordionDeleted: {\n    backgroundColor: \"#aaa\",\n    color: \"#555\",\n  },\n\n  DownloadForm: {\n    marginTop: \"10px\",\n    marginBottom: \"10px\",\n  },\n\n  infoDataCharges: {\n    fontSize: \"18px\",\n    color: \"green\",\n    fontWeight: \"600\",\n  },\n\n  infoDataChargesHigher: {\n    fontSize: \"18px\",\n    color: \"red\",\n    fontWeight: \"600\",\n  },\n  BookedLabel: {\n    color: \"#606060\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#606060\",\n    width: \"150px\",\n    display: \"inline-block\",\n  },\n\n  PatientAttendedLabel: {\n    color: \"#0066aa\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#0066aa\",\n    width: \"150px\",\n    display: \"inline-block\",\n  },\n\n  SampleTakenLabel: {\n    color: \"#0066cc\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#0066cc\",\n  },\n\n  ReportSentLabel: {\n    color: \"#009900\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#009900\",\n  },\n\n  ReportCertSentLabel: {\n    color: \"#009900\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#009900\",\n  },\n\n  PositiveLabel: {\n    color: \"red\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"red\",\n  },\n\n  EditButton: {\n    marginBottom: \"20px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n  },\n\n  ResendEmailsButton: {\n    // marginBottom : \"20px\",\n    color: \"#2f942e\",\n    borderColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"#fafffa\",\n      borderColor: \"#2f942e\",\n    },\n    textDecoration: \"none !important\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  PayButton: {\n    marginLeft: \"70px\",\n    width: \"300px\",\n  },\n\n  PayLabel: {\n    marginLeft: \"20px\",\n\n    color: \"#2f942e\",\n    fontWeight: \"500\",\n    textAlign: \"center\",\n  },\n\n  RestoreButton: {\n    marginBottom: \"20px\",\n    backgroundColor: \"#eee\",\n    color: \"#333\",\n    \"&:hover\": {\n      background: \"#f1f1f1\",\n      color: \"#111\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n  },\n\n  DeleteButton: {\n    marginBottom: \"20px\",\n    backgroundColor: \"#d90015\",\n    \"&:hover\": {\n      background: \"#b80012\",\n      color: \"#fff\",\n    },\n\n    padding: \"10px\",\n  },\n\n  SaveButton: {\n    marginBottom: \"10px\",\n    padding: \"10px\",\n\n    backgroundColor: \"#d1175e\",\n    \"&:hover\": {\n      background: \"#bd0d50\",\n      color: \"#fff\",\n    },\n  },\n\n  CancelButton: {\n    marginBottom: \"20px\",\n    // padding: \"10px\"\n  },\n\n  TextBox: {\n    padding: \"0px\",\n  },\n\n  checkIcon: {\n    color: \"green\",\n  },\n\n  checkIconSmall: {\n    color: \"green\",\n    paddingTop: \"5px\",\n  },\n\n  closeIcon: {\n    color: \"red\",\n  },\n\n  centeredLabel: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 5,\n    color: \"#fff\",\n  },\n\n  PriceLabelPaid: {\n    color: theme.palette.primary.main,\n    fontWeight: \"600\",\n  },\n\n  PriceLabelNotPaid: {\n    color: theme.palette.secondary.main,\n    fontWeight: \"600\",\n  },\n\n  invoiceNumber: {\n    display: \"inline-block\",\n    fontWeight: \"500\",\n    width: \"72px\",\n    fontSize: \"1rem\",\n    color: theme.palette.primary.main,\n  },\n\n  printInvoiceButton: {\n    marginLeft: \"70px\",\n    fontSize: \"0.8rem\",\n    // width: \"300px\",\n  },\n\n  editInvoiceButton: {\n    marginLeft: \"10px\",\n    fontSize: \"0.8rem\",\n  },\n}));\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable\n      handle=\"#alert-dialog-slide-title\"\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\n    >\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nexport default function BookingDialog(props) {\n  const classes = useStyles();\n\n  const [state, setState] = React.useContext(GlobalState);\n\n  const [copied, setCopied] = useState(false);\n\n  const [emailSent, setEmailSent] = React.useState(false);\n\n  const [openResendDialog, setOpenResendDialog] = React.useState(false);\n  const [openPayDialog, setOpenPayDialog] = React.useState(false);\n  const [openRefundDialog, setOpenRefundDialog] = React.useState(false);\n\n  const [selectedBooking, setSelectedBooking] = React.useState(null);\n\n  const [editMode, setEditMode] = React.useState({ edit: false, person: null });\n  const [deleteMode, setDeleteMode] = React.useState({\n    delete: false,\n    person: null,\n  });\n  const [restoreMode, setRestoreMode] = React.useState({\n    restore: false,\n    person: null,\n  });\n\n  const [saving, setSaving] = React.useState(false);\n  const [deleting, setDeleting] = React.useState(false);\n  const [restoring, setRestoring] = React.useState(false);\n\n  const [validationError, setValidationError] = React.useState({});\n\n  const [bookingDate, setBookingDate] = React.useState(\"\");\n  const [bookingTime, setBookingTime] = React.useState(\"\");\n\n  const [fullname, setFullname] = React.useState(\"\");\n  const [email, setEmail] = React.useState(\"\");\n  const [tel, setTel] = React.useState(\"\");\n  const [notes, setNotes] = React.useState(\"\");\n  const [service, setService] = React.useState(\"\");\n\n  const [refreshData, setRefreshData] = React.useState(false);\n\n  const [booking, setBooking] = React.useState(null);\n\n  const [recordChanged, setRecordChanged] = React.useState(false);\n\n  const [fieldChanged, setFieldChanged] = React.useState(false);\n\n  const [openUndoPayDialog, setOpenUndoPayDialog] = React.useState(false);\n\n  const [openTimeStampDialog, setOpenTimeStampDialog] = React.useState(false);\n\n  const handleCloseUndoPayDialog = () => {\n    setOpenUndoPayDialog(false);\n    setSelectedBooking(null);\n  };\n\n  const handleClosePayDialog = () => {\n    setOpenPayDialog(false);\n    setSelectedBooking(null);\n  };\n\n  const handleCloseRefundDialog = () => {\n    setOpenRefundDialog(false);\n    setSelectedBooking(null);\n  };\n\n  useEffect(() => {\n    if (booking) {\n      const isChanged =\n        bookingDate !== FormatDateFromString(booking.bookingDate) ||\n        bookingTime !== booking.bookingTime ||\n        fullname !== booking.fullname ||\n        email !== booking.email ||\n        tel !== booking.phone ||\n        service !== booking.service ||\n        notes !== booking.notes;\n\n      setRecordChanged(isChanged);\n    }\n  }, [fieldChanged]);\n\n  useEffect(() => {\n    if (!props.open) {\n      setTimeout(() => {\n        setEditMode({ edit: false, person: null });\n        setRecordChanged(false);\n      }, 500);\n    }\n  }, [props.open]);\n\n  const bookingDateChanged = (event) => {\n    setBookingDate(event.target.value);\n    setValidationError({ ...validationError, bookingDateError: false });\n    setFieldChanged(!fieldChanged);\n  };\n\n  const bookingTimeChanged = (event) => {\n    setBookingTime(event.target.value);\n    setValidationError({ ...validationError, bookingTimeError: false });\n    setFieldChanged(!fieldChanged);\n  };\n\n  const fullnameChanged = (event) => {\n    setFullname(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const emailChanged = (event) => {\n    setEmail(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const telChanged = (event) => {\n    setTel(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const serviceChanged = (event) => {\n    setService(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const notesChanged = (event) => {\n    setNotes(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const getStatusLabel = (status) => {\n    if (status === \"booked\") {\n      return <div className={classes.BookedLabel}> Booking Made </div>;\n    } else if (status === \"patient_attended\") {\n      return (\n        <div className={classes.PatientAttendedLabel}> Patient Attended </div>\n      );\n    } else {\n      return \"Unknown\";\n    }\n  };\n\n  const handleEditModeChanged = (edit, person) => {\n    if (edit) {\n      setFullname(person.fullname);\n      setBookingDate(FormatDateFromString(person.bookingDate));\n      setBookingTime(person.bookingTime.toUpperCase());\n      setEmail(person.email);\n      setTel(person.phone);\n      setService(person.service);\n      if (person.notes) {\n        setNotes(person.notes);\n      }\n\n      setEditMode({ edit: edit, person: person });\n    } else if (!edit && !person) {\n      setEditMode({ edit: edit, person: person });\n      setRecordChanged(false);\n    } else if (!edit && person) {\n      const booking = {};\n      const bookingId = person._id;\n      booking.email = email;\n      booking.phone = tel;\n      booking.fullname = fullname;\n      booking.notes = notes;\n      booking.service = service;\n      booking.bookingDate = RevertFormatDateFromString(bookingDate);\n      booking.bookingTime = bookingTime;\n      booking.bookingRef = person.bookingRef;\n\n      if (validateBooking(booking)) {\n        updateBooking({ bookingId: bookingId, person: booking });\n      }\n    }\n  };\n\n  const validateDate = (str) => {\n    var error = false;\n    if (!str || str.length !== 10) {\n      error = true;\n    }\n\n    if (str.charAt(4) !== \"-\" || str.charAt(7) !== \"-\") {\n      error = true;\n    }\n\n    try {\n      const result = /^\\d{4}-\\d{2}-\\d{2}$/.test(str);\n      if (!result) {\n        error = true;\n      }\n\n      const year = parseInt(str.substr(0, 4));\n      const month = parseInt(str.substr(5, 2));\n      const day = parseInt(str.substr(8, 2));\n\n      if (year < 1900) {\n        error = true;\n      }\n\n      if (month < 1 || month > 12) {\n        error = true;\n      }\n\n      if (day > 31) {\n        error = true;\n      }\n    } catch (err) {\n      error = true;\n    }\n\n    return !error;\n  };\n\n  const validateTime = (str) => {\n    var error = false;\n\n    const result = /^\\d{2}:\\d{2} AM$|^\\d{2}:\\d{2} PM$/.test(str);\n    if (!result) {\n      error = true;\n    }\n\n    try {\n      const hour = parseInt(str.substr(0, 2));\n      const minute = parseInt(str.substr(3, 2));\n\n      if (hour < 0 || hour > 12) {\n        error = true;\n      }\n\n      if (minute < 0 || minute > 59) {\n        error = true;\n      }\n    } catch (err) {\n      error = true;\n    }\n\n    return !error;\n  };\n\n  const validateBooking = (booking) => {\n    var error = false;\n\n    if (!validateDate(booking.bookingDate)) {\n      error = true;\n      setValidationError({ ...validationError, bookingDateError: true });\n    }\n\n    if (!validateTime(booking.bookingTime)) {\n      error = true;\n      setValidationError({ ...validationError, bookingTimeError: true });\n    }\n    return !error;\n  };\n\n  const updateBooking = (payload) => {\n    setSaving(true);\n    bookingService\n      .updateBooking(payload)\n      .then((res) => {\n        setSaving(false);\n        setEditMode({ edit: false, person: null });\n        setRefreshData(!refreshData);\n      })\n      .catch((err) => {\n        setSaving(false);\n        setEditMode({ edit: false, person: null });\n        console.log(err);\n      });\n  };\n\n  const deleteBooking = (id) => {\n    setDeleting(true);\n    bookingService\n      .deleteBooking(id)\n      .then((res) => {\n        setDeleting(false);\n        setDeleteMode({ delete: false, person: null });\n        setRefreshData(!refreshData);\n      })\n      .catch((err) => {\n        setDeleting(false);\n        setDeleteMode({ delete: false, person: null });\n        console.log(err);\n      });\n  };\n\n  const restoreBooking = (id) => {\n    setRestoring(true);\n    bookingService\n      .unDeleteBooking(id)\n      .then((res) => {\n        setRestoring(false);\n        setRestoreMode({ restore: false, person: null });\n        setRefreshData(!refreshData);\n      })\n      .catch((err) => {\n        setRestoring(false);\n        setRestoreMode({ restore: false, person: null });\n        console.log(err);\n      });\n  };\n\n  const handleDeleteModeChanged = (del, person) => {\n    if (del) {\n      setDeleteMode({ delete: del, person: person });\n    } else if (!del && !person) {\n      setDeleteMode({ delete: del, person: person });\n    } else if (!del && person) {\n      deleteBooking(person._id);\n    }\n  };\n\n  const handleRestoreModeChanged = (restore, person) => {\n    if (restore) {\n      setRestoreMode({ restore: restore, person: person });\n    } else if (!restore && !person) {\n      setRestoreMode({ restore: restore, person: person });\n    } else if (!restore && person) {\n      restoreBooking(person._id);\n    }\n  };\n\n  const changeBackToBookingMade = (event, id) => {\n    setSaving(true);\n    BookService.changeBackToBookingMade(id)\n      .then((res) => {\n        setSaving(false);\n        setRefreshData(!refreshData);\n      })\n      .catch((err) => {\n        console.log(err);\n        setSaving(false);\n      });\n  };\n\n  const changeToPatientAttended = (event, id) => {\n    setSaving(true);\n    BookService.changeToPatientAttended(id)\n      .then((res) => {\n        setSaving(false);\n        setRefreshData(!refreshData);\n      })\n      .catch((err) => {\n        console.log(err);\n        setSaving(false);\n      });\n  };\n\n  const Pay = (event, id) => {\n    setSelectedBooking(booking);\n    setOpenPayDialog(true);\n  };\n\n  useEffect(() => {\n    if (props.booking) {\n      BookService.getBookingById(props.booking._id)\n        .then((res) => {\n          setBooking(res.data);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n\n      setState((state) => ({\n        ...state,\n        bookingDialogDataChanged: !state.bookingDialogDataChanged\n          ? true\n          : false,\n      }));\n    }\n  }, [refreshData, state.bookingPayChanged]);\n\n  useEffect(() => {\n    if (props.booking) {\n      setBooking(props.booking);\n    }\n  }, [props.booking]);\n\n  const undoPaymentClicked = async () => {\n    setSaving(true);\n    try {\n      await BookService.unPayBooking(booking._id);\n      setSaving(false);\n      setOpenUndoPayDialog(false);\n      setRefreshData(!refreshData);\n    } catch (err) {\n      console.error(err);\n      setSaving(false);\n      setOpenUndoPayDialog(false);\n    }\n  };\n\n  const refundPaymentClicked = async () => {\n    setSaving(true);\n    try {\n      await BookService.refundBooking(booking._id);\n      setSaving(false);\n      updateShouldRefundsCount();\n      setOpenRefundDialog(false);\n      setRefreshData(!refreshData);\n    } catch (err) {\n      console.error(err);\n      setSaving(false);\n      setOpenRefundDialog(false);\n    }\n  };\n\n  const updateShouldRefundsCount = async () => {\n    try {\n      const res = await BookService.getShouldRefundsCount();\n      if (res && res.data && res.data.status === \"OK\") {\n        setState((state) => ({ ...state, shouldRefunsCount: res.data.count }));\n      }\n    } catch (ex) {\n      console.error(ex);\n    }\n  };\n\n  const downloadRegForm = (id) => {\n    PDFService.downloadGynaeRegForm(id)\n      .then((res) => {\n        const file = new Blob([res.data], { type: \"application/pdf\" });\n\n        const fileURL = URL.createObjectURL(file);\n        window.open(fileURL, \"_blank\");\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const sendRegForm = (id) => {\n    setSaving(true);\n    setEmailSent(false);\n    BookService.sendRegFormEmail(id)\n      .then((res) => {\n        setSaving(false);\n        if (res.data.status === \"OK\") {\n          setEmailSent(true);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setSaving(false);\n      });\n  };\n\n  const manualRefund = async () => {\n    setSaving(true);\n    try {\n      await BookService.manualRefundBooking(booking._id);\n      setSaving(false);\n      updateShouldRefundsCount();\n      setRefreshData(!refreshData);\n    } catch (err) {\n      console.error(err);\n      setSaving(false);\n      setOpenRefundDialog(false);\n    }\n  };\n\n  const depositChanged = async (event) => {\n    const checked = event.target.checked;\n    const deposit = checked ? 100 : 0;\n    setSaving(true);\n    try {\n      await BookService.changeDepositBooking(booking._id, deposit);\n      setSaving(false);\n      setRefreshData(!refreshData);\n    } catch (err) {\n      console.error(err);\n      setSaving(false);\n    }\n  };\n\n  const onClose = () => {\n    setEmailSent(false);\n    setEmailSentInvoice(false);\n    setInvoice(null);\n    props.onClose();\n  };\n\n  ///*** Invoice  ******************/\n\n  const [invoice, setInvoice] = React.useState(null);\n  const [invoiceLoaded, setInvoiceLoaded] = React.useState(false);\n  const [openInvoiceDialog, setOpenInvoiceDialog] = React.useState(false);\n  const [emailSentInvoice, setEmailSentInvoice] = React.useState(false);\n\n  const fetchInvoice = async () => {\n    try {\n      setInvoiceLoaded(false);\n      const res = await InvoiceService.getInvoiceByBookingId(props.booking._id);\n      setInvoice(res.data.invoice);\n      setInvoiceLoaded(true);\n    } catch (err) {\n      setInvoiceLoaded(true);\n      console.error(err);\n    }\n  };\n\n  React.useEffect(() => {\n    if (props.booking) {\n      fetchInvoice();\n    }\n  }, [props.booking, props.open]);\n\n  const handleCloseInvoiceDialog = (refresh) => {\n    setOpenInvoiceDialog(false);\n    setSelectedBooking(null);\n    fetchInvoice();\n  };\n\n  const OpenInvoiceDialog = () => {\n    setSelectedBooking(booking);\n    setInvoice(invoice);\n    setOpenInvoiceDialog(true);\n  };\n\n  const downloadInvoice = (id) => {\n    InvoiceService.downloadInvoice(id)\n      .then((res) => {\n        const file = new Blob([res.data], { type: \"application/pdf\" });\n\n        const fileURL = URL.createObjectURL(file);\n        window.open(fileURL, \"_blank\");\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const sendInvoiceEmail = (id, _email) => {\n    setSaving(true);\n    setEmailSentInvoice(false);\n    InvoiceService.emailInvoice(id, _email)\n      .then((res) => {\n        setSaving(false);\n        if (res.data.status === \"OK\") {\n          setEmailSentInvoice(true);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setSaving(false);\n      });\n  };\n\n  //***************************** */\n\n  return (\n    <React.Fragment>\n      {booking && (\n        <React.Fragment>\n          <Dialog\n            maxWidth=\"md\"\n            open={props.open}\n            TransitionComponent={Transition}\n            keepMounted\n            onClose={onClose}\n            PaperComponent={PaperComponent}\n            aria-labelledby=\"alert-dialog-slide-title\"\n            aria-describedby=\"alert-dialog-slide-description\"\n          >\n            <DialogTitle\n              id=\"alert-dialog-slide-title\"\n              style={\n                booking.tr ? { backgroundColor: \"#7e0082\", color: \"#fff\" } : {}\n              }\n            >\n              <div style={{ position: \"absolute\", top: \"25x\", left: \"25px\" }}>\n                <Tooltip title=\"COPY EDIT LINK TO CLIPBOARD\">\n                  <IconButton\n                    onClick={() => {\n                      navigator.clipboard.writeText(\n                        `https://londonmedicalclinic.co.uk/medicalexpressclinic/user/edit/gynae/${booking._id}`\n                      );\n                      setCopied(true);\n                      setTimeout(() => {\n                        setCopied(false);\n                      }, 1500);\n                    }}\n                    aria-label=\"delete\"\n                    className={classes.margin}\n                    size=\"small\"\n                  >\n                    <FileCopyOutlinedIcon\n                      style={booking.tr ? { color: \"#ddd\" } : {}}\n                      fontSize=\"14px\"\n                    />\n                  </IconButton>\n                </Tooltip>\n\n                <span\n                  hidden={!copied}\n                  style={{ fontSize: \"12px\", transition: \"all 1s ease-in\" }}\n                >\n                  {\" \"}\n                  Copied{\" \"}\n                </span>\n              </div>\n\n              <div\n                style={{\n                  position: \"absolute\",\n                  top: \"25x\",\n                  right: \"60px\",\n                  backgroundColor: CalendarColors.GYNAE_COLOR,\n                  color: \"#fff\",\n                  padding: \"0px 5px\",\n                  borderRadius: \"10px\",\n                }}\n              >\n                GYNAE\n              </div>\n\n              <Grid\n                container\n                direction=\"row\"\n                justify=\"center\"\n                spacing={2}\n                alignItems=\"center\"\n              >\n                <Grid item>\n                  <div\n                    style={\n                      booking.deleted\n                        ? {\n                            paddingBottom: \"5px\",\n                            textDecoration: \"line-through\",\n                          }\n                        : {}\n                    }\n                  >\n                    {`${booking.fullname}`}\n                  </div>\n                </Grid>\n\n                {booking.deleted && (\n                  <Grid item>\n                    <Tooltip title=\"This record has been deleted.\">\n                      <DeleteIcon\n                        style={\n                          booking.tr\n                            ? {\n                                padding: 0,\n                                margin: 0,\n                                color: \"#fff\",\n                                fontSize: 25,\n                              }\n                            : {\n                                padding: 0,\n                                margin: 0,\n                                color: \"#333\",\n                                fontSize: 25,\n                              }\n                        }\n                      />\n                    </Tooltip>\n                  </Grid>\n                )}\n              </Grid>\n            </DialogTitle>\n            <DialogContent>\n              <div\n                style={{\n                  // height: \"550px\",\n                  paddingTop: \"0px\",\n                }}\n              >\n                <Grid item xs={12} md={12} key={`panel0`}>\n                  <div className={classes.infoDetails}>\n                    <ul className={classes.ul}>\n                      {/* Restore Functionality ******************************************* */}\n                      <li\n                        hidden={\n                          !(\n                            restoreMode.restore &&\n                            restoreMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <div\n                          style={{\n                            fontWeight: \"500\",\n                            paddingBottom: \"5px\",\n                            paddingLeft: \"5px\",\n                            fontSize: \"16px\",\n                            color: \"#333\",\n                          }}\n                        >\n                          Are you sure you want to restore this record?\n                        </div>\n                      </li>\n\n                      <li\n                        hidden={\n                          !booking.deleted ||\n                          (restoreMode.restore &&\n                            restoreMode.person._id === booking._id)\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"primary\"\n                          onClick={() => {\n                            handleRestoreModeChanged(true, booking);\n                          }}\n                          className={classes.RestoreButton}\n                        >\n                          Restore This Record\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            restoreMode.restore &&\n                            restoreMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"primary\"\n                          disabled={restoring}\n                          onClick={() => {\n                            handleRestoreModeChanged(false, booking);\n                          }}\n                          className={classes.SaveButton}\n                        >\n                          YES, Restore this!\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            restoreMode.restore &&\n                            restoreMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"default\"\n                          disabled={restoring}\n                          onClick={() => {\n                            handleRestoreModeChanged(false, null);\n                          }}\n                          className={classes.CancelButton}\n                        >\n                          Cancel\n                        </Button>\n                      </li>\n\n                      {/*  ******************************************************************* */}\n\n                      {/* Edit Functionality ******************************************* */}\n\n                      <li\n                        hidden={\n                          booking.deleted ||\n                          deleteMode.delete ||\n                          (editMode.edit && editMode.person._id === booking._id)\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"primary\"\n                          onClick={() => {\n                            handleEditModeChanged(true, booking);\n                          }}\n                          className={classes.EditButton}\n                        >\n                          Edit Booking Info\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            editMode.edit && editMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"primary\"\n                          disabled={saving || !recordChanged}\n                          onClick={() => {\n                            handleEditModeChanged(false, booking);\n                          }}\n                          className={classes.SaveButton}\n                        >\n                          Save Changes\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            editMode.edit && editMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"default\"\n                          disabled={saving}\n                          onClick={() => {\n                            handleEditModeChanged(false, null);\n                          }}\n                          className={classes.CancelButton}\n                        >\n                          Cancel\n                        </Button>\n                      </li>\n\n                      {/* ****************************************************************************************** */}\n\n                      {/* Delete Functionality ******************************************* */}\n\n                      <li\n                        hidden={\n                          !(\n                            deleteMode.delete &&\n                            deleteMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <div\n                          style={{\n                            fontWeight: \"600\",\n                            paddingBottom: \"5px\",\n                            paddingLeft: \"5px\",\n                            fontSize: \"16px\",\n                          }}\n                        >\n                          Are you sure you want to delete this record?\n                        </div>\n                      </li>\n\n                      <li\n                        hidden={\n                          props.deleteButtonDisabled ||\n                          booking.deleted ||\n                          editMode.edit ||\n                          (deleteMode.delete &&\n                            deleteMode.person._id === booking._id)\n                        }\n                      >\n                        {booking.OTCCharges > 0 && (\n                          <Tooltip title={\"Paid Records Cannot be Deleted!\"}>\n                            <div>\n                              <Button\n                                disabled={booking.OTCCharges > 0}\n                                type=\"button\"\n                                fullWidth\n                                variant=\"contained\"\n                                color=\"primary\"\n                                onClick={() => {\n                                  handleDeleteModeChanged(true, booking);\n                                }}\n                                className={classes.DeleteButton}\n                              >\n                                Delete This Record\n                              </Button>\n                            </div>\n                          </Tooltip>\n                        )}\n                        {booking.OTCCharges === 0 && (\n                          <Button\n                            disabled={booking.OTCCharges > 0}\n                            type=\"button\"\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={() => {\n                              handleDeleteModeChanged(true, booking);\n                            }}\n                            className={classes.DeleteButton}\n                          >\n                            Delete This Record\n                          </Button>\n                        )}\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            deleteMode.delete &&\n                            deleteMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"primary\"\n                          disabled={deleting}\n                          onClick={() => {\n                            handleDeleteModeChanged(false, booking);\n                          }}\n                          className={classes.SaveButton}\n                        >\n                          YES, Delete this!\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            deleteMode.delete &&\n                            deleteMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"default\"\n                          disabled={deleting}\n                          onClick={() => {\n                            handleDeleteModeChanged(false, null);\n                          }}\n                          className={classes.CancelButton}\n                        >\n                          Cancel\n                        </Button>\n                      </li>\n\n                      {/* ****************************************************************************************** */}\n\n                      <li className={classes.li}>\n                        <Grid container spacing={2}>\n                          <Grid item xs={6}>\n                            <span className={classes.infoTitle}>\n                              BOOKED DATE\n                            </span>\n\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {FormatDateFromString(booking.bookingDate)}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                error={validationError.bookingDateError}\n                                className={classes.TextBox}\n                                value={bookingDate}\n                                onChange={bookingDateChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n                          <Grid item xs={6}>\n                            <span className={classes.infoTitle}>\n                              BOOKED TIME\n                            </span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {booking.bookingTime.toUpperCase()}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                error={validationError.bookingTimeError}\n                                className={classes.TextBox}\n                                value={bookingTime}\n                                onChange={bookingTimeChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n                        </Grid>\n                      </li>\n\n                      <li className={classes.li}>\n                        <Grid container spacing={2}>\n                          <Grid item xs={6}>\n                            <span className={classes.infoTitle}>FULLNAME</span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {booking.fullname}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                className={classes.TextBox}\n                                value={fullname}\n                                onChange={fullnameChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n                          <Grid item xs={6}>\n                            <span className={classes.infoTitle}>EMAIL</span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {booking.email}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                className={classes.TextBox}\n                                value={email}\n                                onChange={emailChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n                        </Grid>\n                      </li>\n                      <li className={classes.li} style={{ paddingTop: \"10px\" }}>\n                        <span className={classes.infoTitle}>SERVICE</span>\n                        <span\n                          hidden={\n                            editMode.edit && editMode.person._id === booking._id\n                          }\n                          className={classes.infoData}\n                        >\n                          {booking.service}\n                        </span>\n                        <span\n                          hidden={\n                            !(\n                              editMode.edit &&\n                              editMode.person._id === booking._id\n                            )\n                          }\n                          className={classes.infoData}\n                        >\n                          <TextField\n                            fullWidth\n                            className={classes.TextBox}\n                            value={service}\n                            onChange={serviceChanged}\n                            inputProps={{\n                              style: {\n                                padding: 0,\n                              },\n                            }}\n                          ></TextField>\n                        </span>\n                      </li>\n\n                      <li className={classes.li} style={{ paddingTop: \"10px\" }}>\n                        <Grid container spacing={2}>\n                          <Grid item xs={6}>\n                            <span className={classes.infoTitle}>TEL</span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {booking.phone?.toUpperCase()}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                className={classes.TextBox}\n                                value={tel}\n                                onChange={telChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n                          <Grid item xs={6}>\n                            <span className={classes.infoTitle}>NOTES</span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {booking.notes}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                className={classes.TextBox}\n                                value={notes}\n                                onChange={notesChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n                        </Grid>\n                      </li>\n\n                      <li className={classes.li} style={{ paddingTop: \"20px\" }}>\n                        <span className={classes.infoTitle}>STATUS</span>{\" \"}\n                        {getStatusLabel(booking.status)}\n                        {booking.status === \"patient_attended\" &&\n                          !(\n                            editMode.edit && editMode.person._id === booking._id\n                          ) &&\n                          !booking.deleted && (\n                            <Button\n                              variant=\"outlined\"\n                              color=\"primary\"\n                              disabled={saving}\n                              style={{ width: \"300px\" }}\n                              onClick={(event) =>\n                                changeBackToBookingMade(event, booking._id)\n                              }\n                            >\n                              Change Back To Booking Made\n                            </Button>\n                          )}\n                        {booking.status === \"booked\" &&\n                          !(\n                            editMode.edit && editMode.person._id === booking._id\n                          ) &&\n                          !booking.deleted && (\n                            <Button\n                              variant=\"outlined\"\n                              color=\"default\"\n                              disabled={saving}\n                              style={{ width: \"300px\" }}\n                              onClick={(event) =>\n                                changeToPatientAttended(event, booking._id)\n                              }\n                            >\n                              Change To Patient Attended\n                            </Button>\n                          )}\n                      </li>\n\n                      <li hidden={booking.deleted || editMode.edit}>\n                        <Button\n                          disabled={!booking.formData}\n                          startIcon={<PrintIcon />}\n                          type=\"button\"\n                          fullWidth\n                          variant=\"outlined\"\n                          color=\"primary\"\n                          onClick={() => {\n                            downloadRegForm(booking._id);\n                          }}\n                          className={classes.DownloadForm}\n                        >\n                          Download Registration Form\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          booking.deleted || editMode.edit || booking.formData\n                        }\n                      >\n                        <Button\n                          disabled={!booking.email || booking.email.length < 3}\n                          startIcon={<SendIcon />}\n                          type=\"button\"\n                          fullWidth\n                          variant=\"outlined\"\n                          color=\"primary\"\n                          onClick={() => {\n                            sendRegForm(booking._id);\n                          }}\n                          className={classes.DownloadForm}\n                          style={{ position: \"relative\" }}\n                        >\n                          Send Registration Form Email\n                          {emailSent && (\n                            <div\n                              style={{\n                                position: \"absolute\",\n                                right: \"10px\",\n                                top: \"5px\",\n                                color: \"#05ad19\",\n                              }}\n                            >\n                              Email Sent\n                            </div>\n                          )}\n                        </Button>\n                      </li>\n\n                      <Divider />\n\n                      <li className={classes.li} style={{ marginTop: \"20px\" }}>\n                        <span className={classes.infoTitle}>INVOICE # : </span>{\" \"}\n                        <span style={{ paddingLeft: \"0px\" }}>\n                          {!invoiceLoaded && (\n                            <span className={classes.invoiceNumber}> ... </span>\n                          )}\n                          {invoiceLoaded && invoice && (\n                            <span className={classes.invoiceNumber}>\n                              {\" \"}\n                              {invoice.invoiceNumber}{\" \"}\n                            </span>\n                          )}\n                          {invoiceLoaded && !invoice && (\n                            <span\n                              className={classes.invoiceNumber}\n                              style={{ color: \"red\", fontSize: \"0.9rem\" }}\n                            >\n                              {\" \"}\n                              N/A{\" \"}\n                            </span>\n                          )}\n                        </span>\n                        {!(\n                          editMode.edit && editMode.person._id === booking._id\n                        ) &&\n                          !booking.deleted && (\n                            <React.Fragment>\n                              {invoiceLoaded && !invoice && (\n                                <Button\n                                  variant=\"outlined\"\n                                  color=\"primary\"\n                                  className={classes.PayButton}\n                                  onClick={() => OpenInvoiceDialog()}\n                                >\n                                  Issue Invoice\n                                </Button>\n                              )}\n\n                              {invoiceLoaded && invoice && (\n                                <React.Fragment>\n                                  <Button\n                                    variant=\"outlined\"\n                                    startIcon={<PrintIcon />}\n                                    color=\"primary\"\n                                    className={classes.printInvoiceButton}\n                                    onClick={() => downloadInvoice(invoice._id)}\n                                  >\n                                    Download Invoice\n                                  </Button>\n\n                                  <Button\n                                    variant=\"outlined\"\n                                    color=\"secondary\"\n                                    className={classes.editInvoiceButton}\n                                    onClick={() => OpenInvoiceDialog()}\n                                  >\n                                    Edit Invoice\n                                  </Button>\n\n                                  <Button\n                                    disabled={\n                                      !booking.email || booking.email.length < 3\n                                    }\n                                    startIcon={<SendIcon />}\n                                    type=\"button\"\n                                    variant=\"outlined\"\n                                    color=\"primary\"\n                                    onClick={() => {\n                                      sendInvoiceEmail(\n                                        invoice._id,\n                                        booking.email\n                                      );\n                                    }}\n                                    style={{\n                                      position: \"relative\",\n                                      marginLeft: \"10px\",\n                                      paddingRight: \"130px\",\n                                      fontSize: \"0.8rem\",\n                                    }}\n                                  >\n                                    Send Invoice By Email\n                                    {emailSentInvoice && (\n                                      <div\n                                        style={{\n                                          position: \"absolute\",\n                                          right: \"10px\",\n                                          top: \"5px\",\n                                          color: \"#05ad19\",\n                                        }}\n                                      >\n                                        Email Sent\n                                      </div>\n                                    )}\n                                  </Button>\n                                </React.Fragment>\n                              )}\n                            </React.Fragment>\n                          )}\n                      </li>\n\n                      <li className={classes.li}>\n                        <div\n                          style={{\n                            borderTop: \"1px solid #ddd\",\n                            paddingTop: \"20px\",\n                          }}\n                        >\n                          <span className={classes.infoTitle}>\n                            {booking.paymentInfo ? \"ONLINE\" : \"PHONE\"} DEPOSIT\n                          </span>{\" \"}\n                          <span\n                            className={\n                              !booking.deposit || booking.deposit === 0\n                                ? classes.infoDataChargesHigher\n                                : classes.infoDataCharges\n                            }\n                          >{`£${booking.deposit.toLocaleString(\n                            \"en-GB\"\n                          )}`}</span>\n                          {!(\n                            editMode.edit && editMode.person._id === booking._id\n                          ) &&\n                            !booking.paid &&\n                            booking.deleted &&\n                            booking.deposit > 0 &&\n                            booking.paymentInfo && (\n                              <Button\n                                variant=\"outlined\"\n                                color=\"secondary\"\n                                className={classes.PayButton}\n                                onClick={(event) => setOpenRefundDialog(true)}\n                              >\n                                Refund Deposit\n                              </Button>\n                            )}\n                          {!(\n                            editMode.edit && editMode.person._id === booking._id\n                          ) &&\n                            !booking.paid &&\n                            booking.deleted &&\n                            booking.deposit > 0 &&\n                            !booking.paymentInfo && (\n                              <Button\n                                variant=\"outlined\"\n                                color=\"primary\"\n                                className={classes.PayButton}\n                                onClick={(event) => manualRefund()}\n                              >\n                                <span style={{ textTransform: \"capitalize\" }}>\n                                  I made the refund manually\n                                </span>\n                              </Button>\n                            )}\n                          {!(\n                            editMode.edit && editMode.person._id === booking._id\n                          ) &&\n                            // !booking.paid &&\n                            !booking.deleted &&\n                            // booking.deposit > 0 &&\n                            !booking.paymentInfo && (\n                              <FormControlLabel\n                                style={{ marginLeft: \"90px\" }}\n                                control={\n                                  <Switch\n                                    color=\"primary\"\n                                    checked={booking.deposit > 0}\n                                    onChange={depositChanged}\n                                    name=\"deposit\"\n                                  />\n                                }\n                                label={\n                                  booking.deposit > 0 ? (\n                                    <span className={classes.PriceLabelPaid}>\n                                      £100 Deposit Paid\n                                    </span>\n                                  ) : (\n                                    <span className={classes.PriceLabelNotPaid}>\n                                      £100 Deposit Not Paid\n                                    </span>\n                                  )\n                                }\n                              />\n                            )}\n                          {!(\n                            editMode.edit && editMode.person._id === booking._id\n                          ) &&\n                            booking.refund && (\n                              <React.Fragment>\n                                <span className={classes.PayLabel}>\n                                  {\" \"}\n                                  <CheckIcon\n                                    className={classes.checkIconSmall}\n                                  />{\" \"}\n                                  Refund Done\n                                  {booking.paidBy === \"corporate\"\n                                    ? ` \"${booking.corporate}\" `\n                                    : \"\"}\n                                </span>\n                              </React.Fragment>\n                            )}\n                        </div>\n                      </li>\n\n                      <li className={classes.li}>\n                        <span className={classes.infoTitle}>OTC CHARGES</span>{\" \"}\n                        <span\n                          style={{ paddingLeft: \"15px\" }}\n                          className={\n                            !booking.OTCCharges || booking.OTCCharges === 0\n                              ? classes.infoDataChargesHigher\n                              : classes.infoDataCharges\n                          }\n                        >{`£${booking.OTCCharges.toLocaleString(\n                          \"en-GB\"\n                        )}`}</span>\n                        {!(\n                          editMode.edit && editMode.person._id === booking._id\n                        ) &&\n                          !booking.paid &&\n                          !booking.deleted && (\n                            <Button\n                              variant=\"outlined\"\n                              color=\"secondary\"\n                              className={classes.PayButton}\n                              onClick={(event) => Pay(event, booking._id)}\n                            >\n                              Pay\n                            </Button>\n                          )}\n                        {!(\n                          editMode.edit && editMode.person._id === booking._id\n                        ) &&\n                          booking.paid && (\n                            <React.Fragment>\n                              <span className={classes.PayLabel}>\n                                {\" \"}\n                                <CheckIcon\n                                  className={classes.checkIconSmall}\n                                />{\" \"}\n                                Paid by {booking.paidBy}\n                                {booking.paidBy === \"corporate\"\n                                  ? ` \"${booking.corporate}\" `\n                                  : \"\"}\n                              </span>\n\n                              <Tooltip title=\"Undo Payment\">\n                                <IconButton\n                                  onClick={() => setOpenUndoPayDialog(true)}\n                                >\n                                  <UndoIcon style={{ color: \"red\" }} />\n                                </IconButton>\n                              </Tooltip>\n                            </React.Fragment>\n                          )}\n                      </li>\n\n                      <li className={classes.li}>\n                        <div\n                          style={{\n                            borderTop: \"1px solid #ddd\",\n                            paddingTop: \"10px\",\n                          }}\n                        >\n                          <span className={classes.infoTitle}>\n                            TOTAL CHARGES\n                          </span>{\" \"}\n                          <span\n                            className={\n                              !booking.OTCCharges || booking.OTCCharges === 0\n                                ? classes.infoDataChargesHigher\n                                : classes.infoDataCharges\n                            }\n                          >{`£${(\n                            booking.deposit + booking.OTCCharges\n                          ).toLocaleString(\"en-GB\")}`}</span>\n                        </div>\n                      </li>\n                    </ul>\n                  </div>\n                </Grid>\n              </div>\n              <Backdrop\n                className={classes.backdrop}\n                open={saving || deleting || restoring}\n              >\n                <CircularProgress color=\"inherit\" />\n              </Backdrop>\n            </DialogContent>\n\n            <PayDialog\n              booking={selectedBooking}\n              open={openPayDialog}\n              price={invoice ? invoice.grandTotal - booking.deposit : null}\n              handleClose={handleClosePayDialog}\n            />\n\n            <InvoiceDialog\n              booking={selectedBooking}\n              invoice={invoice}\n              open={openInvoiceDialog}\n              handleClose={handleCloseInvoiceDialog}\n            />\n          </Dialog>\n\n          <Dialog\n            open={openUndoPayDialog}\n            onClose={handleCloseUndoPayDialog}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n          >\n            <DialogTitle style={{ color: \"#999\" }} id=\"alert-dialog-title\">\n              {\"Undo Payment\"}\n            </DialogTitle>\n            <DialogContent>\n              <DialogContentText\n                style={{ color: \"#333\", fontWeight: \"400\" }}\n                id=\"alert-dialog-description\"\n              >\n                Are you sure you want to undo payment for this booking?\n              </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={handleCloseUndoPayDialog} color=\"default\">\n                Back\n              </Button>\n              <Button onClick={undoPaymentClicked} color=\"secondary\" autoFocus>\n                Yes, Undo Payment\n              </Button>\n            </DialogActions>\n          </Dialog>\n\n          <Dialog\n            open={openRefundDialog}\n            onClose={handleCloseRefundDialog}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n          >\n            <DialogTitle style={{ color: \"#999\" }} id=\"alert-dialog-title\">\n              {\"Refund Deposit\"}\n            </DialogTitle>\n            <DialogContent>\n              <DialogContentText\n                style={{ color: \"#333\", fontWeight: \"400\" }}\n                id=\"alert-dialog-description\"\n              >\n                Are you sure you want to refund deposit payment for this\n                booking?\n              </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={handleCloseRefundDialog} color=\"default\">\n                Back\n              </Button>\n              <Button\n                onClick={refundPaymentClicked}\n                color=\"secondary\"\n                autoFocus\n              >\n                Yes, Refund Payment\n              </Button>\n            </DialogActions>\n          </Dialog>\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n}\n","import React, {useEffect, useRef, useState} from 'react';\nimport { DataGrid } from '@material-ui/data-grid';\nimport BookService from './services/BookService';\nimport { Button, Checkbox, CircularProgress, Dialog, DialogContent, DialogTitle, Divider, FormControl, FormControlLabel, Grid, Icon, InputLabel, LinearProgress, Link, makeStyles, MenuItem, Paper, Select, SvgIcon, Switch, TextField, Tooltip } from '@material-ui/core';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport { IconButton } from '@material-ui/core';\nimport CheckIcon from '@material-ui/icons/Check';\nimport CloseIcon from '@material-ui/icons/Close';\nimport GlobalState from './../GlobalState';\nimport { getMenuIndex } from './../MenuList';\nimport {FormatDateFromString, FormatDateFromStringShortYear} from './DateFormatter';\n\nimport SearchIcon from '@material-ui/icons/Search';\nimport BookingDialog from './BookingDialog';\n\nimport NewReleasesIcon from '@material-ui/icons/NewReleases';\nimport HistoryIcon from '@material-ui/icons/History';\nimport TimelineIcon from '@material-ui/icons/Timeline';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport AutorenewIcon from '@material-ui/icons/Autorenew';\nimport LiveTvIcon from '@material-ui/icons/LiveTv';\nimport PlaylistAddCheckIcon from '@material-ui/icons/PlaylistAddCheck';\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport HourglassEmptyIcon from '@material-ui/icons/HourglassEmpty';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faFileExcel } from \"@fortawesome/free-solid-svg-icons\";\nimport Draggable from 'react-draggable';\n\nimport * as dateformat from 'dateformat';\n\nimport DateFnsUtils from '@date-io/date-fns';\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardTimePicker,\n  KeyboardDatePicker,\n} from '@material-ui/pickers';\n\nimport BusinessIcon from '@material-ui/icons/Business';\nimport CreditCardIcon from '@material-ui/icons/CreditCard';\nimport LocalAtmIcon from '@material-ui/icons/LocalAtm';\n\n\nimport ReactHTMLTableToExcel from 'react-html-table-to-excel';\nimport PriceCalculator from './PriceCalculator';\nimport { corporates } from './Corporates';\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    marginTop: theme.spacing(0),\n    marginBottom: theme.spacing(1),\n\n  },\n  \n  refreshButton:{\n    marginLeft: theme.spacing(2),\n  },\n\n  checkIcon:{\n    color: \"green\"\n  },\n\n  closeIcon:{\n    color: \"red\"\n  },\n\n  RefLink: {\n    cursor: \"pointer\"\n  },\n\n  BookedLabel:{\n    backgroundColor: \"#606060\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  PatientAttendedLabel:{\n    backgroundColor: \"#0066aa\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  SampleTakenLabel:{\n    backgroundColor: \"#0066cc\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  ReportSentLabel:{\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  ReportCertSentLabel:{\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  PositiveLabel:{\n    backgroundColor: \"red\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  HideNowRows: {\n    position: \"absolute\",\n    top: \"40%\",\n    left: \"40%\",\n    width: \"600px\",\n    height: \"300px\",\n    backgroundColor : \"#fafafa\",\n    color : \"#111\",\n    zIndex: \"1000\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyItems: \"center\"\n  },\n\n  ExportToExcelButton:\n  {\n    // marginBottom : \"20px\",\n    color : \"#2f942e\",\n    borderColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"#fafffa\",\n      borderColor: \"#2f942e\",\n    },\n    textDecoration : \"none !important\", \n   \n  },\n\n  ExportToExcelButtonInline:\n  {\n    // marginBottom : \"20px\",\n    color : \"#2f942e\",\n    borderColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"#fafffa\",\n      borderColor: \"#2f942e\",\n    },\n    textDecoration : \"none !important\", \n    cursor: \"pointer\",\n    padding: \"10px\"\n   \n  },\n\n  table: {\n    width: \"100%\",\n    border: \"1px solid #ddd\",\n    borderCollapse: \"collapse\",\n},\n\nth: {\n    border: \"1px solid #ddd\",\n    borderCollapse: \"collapse\",\n    verticalAlign: \"middle\",\n    fontcolor: \"#555\",\n    fontWeight: \"400\",\n    fontSize: \"15px\",\n    paddingTop: \"5px\",\n    paddingBottom: \"5px\",\n    width: \"14%\",\n    paddingLeft: \"5px\",\n},\n\ntd: {\n    border: \"1px solid #ddd\",\n    borderCollapse: \"collapse\",\n    verticalAlign: \"middle\",\n    paddingLeft: \"5px\",\n},\n\ntopSelect: {\n  margin: theme.spacing(1),\n  minWidth: 80,\n},\n\nnotifyIcon:{\n  width: \"16px\",\n  height: \"16px\",\n  borderRadius: \"50%\",\n  backgroundColor : \"rgb(220, 0, 78)\",\n  marginLeft: \"10px\"\n}\n\n}));\n\nconst getTableTitle = (str) =>{\n\n  if (str === 'today')\n  {\n    return `Today's Bookings`;\n  }else if (str === 'old')\n  {\n    return `Old Bookings`;\n  }else if (str === 'future')\n  {\n    return `Future Bookings`;\n  }else if (str === 'recent')\n  {\n    return `Recent Bookings`;\n  }else if (str === 'live')\n  {\n    return `Live Bookings`;\n  }else if (str === 'completed')\n  {\n    return `Completed Bookings`;\n  }else if (str === 'positive')\n  {\n    return `Positive Results`;\n  }else if (str === 'deleted')\n  {\n    return `Deleted Records`;\n  }else if (str === 'late')\n  {\n    return `40 Hours Late`;\n  }\n  \n  else\n  {\n    return `All Bookings`;\n  }\n\n}\n\nconst getTableIcon = (str) =>{\n\n  if (str === 'today')\n  {\n    return <NewReleasesIcon style={{fontSize:\"2.2rem\"}} />;\n  }else if (str === 'old')\n  {\n    return <HistoryIcon style={{fontSize:\"2.2rem\"}} />;\n  }else if (str === 'future')\n  {\n    return <TimelineIcon style={{fontSize:\"2.2rem\"}} />;\n  }else if (str === 'recent')\n  {\n    return <AutorenewIcon style={{fontSize:\"2.2rem\"}} />;\n  }else if (str === 'live')\n  {\n    return <LiveTvIcon style={{fontSize:\"2.2rem\"}} />;\n  }else if (str === 'completed')\n  {\n    return  <PlaylistAddCheckIcon style={{fontSize:\"2.2rem\"}} />;\n  }else if (str === 'positive')\n  {\n    return <AddCircleOutlineIcon style={{fontSize:\"2.2rem\"}} />\n  }else if (str === 'deleted')\n  {\n    return <DeleteIcon style={{fontSize:\"2.2rem\"}} />;\n  }else if (str === 'late')\n  {\n    return <HourglassEmptyIcon style={{fontSize:\"2.2rem\"}} />;\n  }\n  \n  else\n  {\n    return <DescriptionIcon style={{fontSize:\"2.2rem\"}} />;\n  }\n\n}\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'}>\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nexport default function BookingTable(props) {\n  \n  const classes = useStyles();\n\n  const [topCount, setTopCount] = React.useState(25)\n  const topCountChanged = (event) =>\n  {\n    setTopCount(event.target.value)\n    loadData(event.target.value)\n  }\n  \n\n  const [openDialogExcel, setOpenDialogExcel] = useState(false);\n  const handleCloseDialogExcel = () =>\n  {\n    setCorporate(corporates[0]);\n    setJustCorporate(false);\n    setOpenDialogExcel(false);\n  }\n\n\n  const [fromDate, setFromDate] = React.useState(new Date(new Date().getTime() - 7 * 24 * 60 * 60 * 1000 ));\n  const handleFromDateChange = (date) => {\n    setFromDate(date);\n    setFromDateStr(dateformat(date,'yyyy-mm-dd'));\n  };\n\n  const [untilDate, setUntilDate] = React.useState(new Date(new Date().getTime() - 1 * 24 * 60 * 60 * 1000 ));\n  const handleUntilDateChange = (date) => {\n    setUntilDate(date);\n    seUntilDateStr(dateformat(date,'yyyy-mm-dd'));\n  };\n\n  const [fromDateStr, setFromDateStr] = useState(dateformat(new Date(new Date().getTime() - 7 * 24 * 60 * 60 * 1000 ), 'yyyy-mm-dd'));\n  const [untilDateStr, seUntilDateStr] = useState(dateformat(new Date(new Date().getTime() - 1 * 24 * 60 * 60 * 1000 ), 'yyyy-mm-dd'));\n\n  const [justCorporate, setJustCorporate] = useState(false);\n\n  const[chkDate, setChkDate] = useState(true);\n  const[chkForename, setChkForename] = useState(true);\n  const[chkSurname, setChkSurname] = useState(true);\n  const[chkDOB, setChkDOB] = useState(true);\n  const[chkEmail, setChkEmail] = useState(true);\n  const[chkTel, setChkTel] = useState(true);\n  const[chkCertificate, setChkCertidicate] = useState(true);\n  const[chkAntiBodyTest, setChkAntiBodyTest] = useState(true);\n  const[chkextRef, setChkExtRef] = useState(true);\n  const[chkPrice, setChkPrice] = useState(true);\n\n  const justCorporateChanged = (event) =>\n  {\n    setJustCorporate(event.target.checked);\n  }\n  \n\n  const chkDateChanged = (event) =>\n  {\n    setChkDate(event.target.checked);\n  }\n\n  const chkForenameChanged = (event) =>\n  {\n    setChkForename(event.target.checked);\n  }\n\n  const chkSurnameChanged = (event) =>\n  {\n    setChkSurname(event.target.checked);\n  }\n\n  const chkDOBChanged = (event) =>\n  {\n    setChkDOB(event.target.checked);\n  }\n\n  const chkEmailChanged = (event) =>\n  {\n    setChkEmail(event.target.checked);\n  }\n\n  const chkTelChanged = (event) =>\n  {\n    setChkTel(event.target.checked);\n  }\n\n  const chkCertificateChanged = (event) =>\n  {\n    setChkCertidicate(event.target.checked);\n  }\n\n  const chkAntiBodyTestChanged = (event) =>\n  {\n    setChkAntiBodyTest(event.target.checked);\n  }\n\n  const chkextRefChanged = (event) =>\n  {\n    setChkExtRef(event.target.checked);\n  }\n\n  const chkPriceChanged = (event) =>\n  {\n    setChkPrice(event.target.checked);\n  }\n\n\n\n  var columns = [];\n\n  if (props.date === 'recent')\n  {\n    columns = [\n      // { field: 'id', headerName: '#', width: 70 },\n  \n      {field: '_id', headerName:' ', width: 70, renderCell: (params) =>{\n          return (\n\n           <React.Fragment>\n\n                <Button \n                        color=\"primary\"\n                        onClick = {event => openDetailsDialog(event, params.value)}\n                > \n            \n            <SearchIcon/> \n            \n            </Button>\n\n           </React.Fragment>\n\n          \n  \n          ); \n      \n        }\n      },\n\n      { field: 'paid', headerName: 'Paid', align: 'center' , width: 90, renderCell: (params) => { \n        if (!params.value)\n        {\n           return ( \n              <React.Fragment>                    \n                    <CloseIcon className={classes.closeIcon}/>                        \n              </React.Fragment>\n           );\n        }\n        else\n        {\n           if (params.getValue('paidBy') === 'credit card')\n           {\n             return ( <CreditCardIcon className={classes.checkIcon}/> );\n           }\n           else if (params.getValue('paidBy') === 'cash')\n           {\n             return ( <LocalAtmIcon className={classes.checkIcon}/> );\n           }\n           else if (params.getValue('paidBy') === 'corporate')\n           {\n             return ( <BusinessIcon className={classes.checkIcon}/> );\n           }\n           else\n           {\n             return '';  \n           }\n        }\n  }\n },\n\n\n      { field: 'timeStamp', headerName: 'TimeStamp', width: 200, valueFormatter: (params) => { \n        return formatTimeStamp(params.value);\n        }\n      },\n  \n      { field: 'bookingDate', headerName: 'B Date', width: 110, valueFormatter: (params) => { \n              return FormatDateFromString(params.value);\n          }\n       },\n      { field: 'bookingTimeNormalized', headerName: 'B Time', width: 105 , valueGetter: (params) => {\n        return params.getValue('bookingTime');\n      }},\n      { field: 'status', headerName: 'Status', width: 100, renderCell: (params) =>{\n          if (params.value === 'booked')\n          {\n            return (\n              <span className={classes.BookedLabel}>  BM </span>\n            );\n        \n          }else if (params.value === 'patient_attended')\n          {\n            return (\n              <span  className={classes.PatientAttendedLabel}> PA </span>\n            );\n          }\n          else{\n            return 'Unknown';\n          }\n        }\n      },\n      { field: 'bookingRef', headerName: 'Ref No.', width: 120 , renderCell: (params) =>{\n        return (\n          <Tooltip title=\"Go Find By Ref\" placement=\"right\">\n              <Link className={classes.RefLink}\n              //  onClick={\n              //   () => {\n              //     console.log(params.value);\n  \n              //     setState(state => ({...state, currentMenuIndex: getMenuIndex(`pcr` , `findByRef`)}));\n              //     setState(state => ({...state, ref : params.value}));\n              //     setState(state => ({...state, refError : false})); \n              //     setState(state => ({...state, foundRecords : []}));\n              //     setState(state => ({...state, findRecords : !state.findRecords}));\n              //   }\n              // }\n              \n              >\n                {params.value}\n              </Link>\n          </Tooltip>\n  \n        );\n      }},\n      { field: 'fullname', headerName: 'Fullname', width: 250 },\n      { field: 'email', headerName: 'Email', width: 200 },\n      { field: 'phone', headerName: 'Tel', width: 150 },\n      { field: 'service', headerName: 'Service', width: 250 },\n      { field: 'notes', headerName: 'Notes', width: 500 },\n    \n    ];\n\n  }\n  else\n  {\n    columns = [\n      // { field: 'id', headerName: '#', width: 70 },\n  \n      {field: '_id', headerName:' ', width: 70, renderCell: (params) =>{\n          return (\n            <React.Fragment>\n\n                <Button \n                        color=\"primary\"\n                        onClick = {event => openDetailsDialog(event, params.value)}\n                > \n            \n            <SearchIcon/> \n            \n            </Button>\n\n           </React.Fragment>\n  \n          ); \n      \n        }\n      },\n\n      { field: 'paid', headerName: 'Paid', align: 'center' , width: 90, renderCell: (params) => { \n               if (!params.value)\n               {\n                  return ( \n                    <React.Fragment>\n                                <CloseIcon className={classes.closeIcon}/> \n                                {parseInt(params.getValue('deposit')) > 0 && props.date === 'deleted' && (\n                                      <span className={classes.notifyIcon}>&nbsp;</span>\n                                )}\n\n                               \n                    </React.Fragment>\n                     \n                        \n                  \n                  \n                  );\n               }\n               else\n               {\n                  if (params.getValue('paidBy') === 'credit card')\n                  {\n                    return ( <CreditCardIcon className={classes.checkIcon}/> );\n                  }\n                  else if (params.getValue('paidBy') === 'cash')\n                  {\n                    return ( <LocalAtmIcon className={classes.checkIcon}/> );\n                  }\n                  else if (params.getValue('paidBy') === 'corporate')\n                  {\n                    return ( <BusinessIcon className={classes.checkIcon}/> );\n                  }\n                  else\n                  {\n                    return '';  \n                  }\n               }\n         }\n        },\n        { field: 'bookingDate', headerName: 'B Date', width: 110, valueFormatter: (params) => { \n          return FormatDateFromString(params.value);\n      }\n   },\n  { field: 'bookingTimeNormalized', headerName: 'B Time', width: 105 , valueGetter: (params) => {\n    return params.getValue('bookingTime');\n  }},\n  { field: 'status', headerName: 'Status', width: 100, renderCell: (params) =>{\n      if (params.value === 'booked')\n      {\n        return (\n          <span className={classes.BookedLabel}>  BM </span>\n        );\n    \n      }else if (params.value === 'patient_attended')\n      {\n        return (\n          <span  className={classes.PatientAttendedLabel}> PA </span>\n        );\n      }\n      else{\n        return 'Unknown';\n      }\n    }\n  },\n  { field: 'bookingRef', headerName: 'Ref No.', width: 120 , renderCell: (params) =>{\n    return (\n      <Tooltip title=\"Go Find By Ref\" placement=\"right\">\n          <Link className={classes.RefLink}\n          //  onClick={\n          //   () => {\n          //     console.log(params.value);\n\n          //     setState(state => ({...state, currentMenuIndex: getMenuIndex(`pcr` , `findByRef`)}));\n          //     setState(state => ({...state, ref : params.value}));\n          //     setState(state => ({...state, refError : false})); \n          //     setState(state => ({...state, foundRecords : []}));\n          //     setState(state => ({...state, findRecords : !state.findRecords}));\n          //   }\n          // }\n          \n          >\n            {params.value}\n          </Link>\n      </Tooltip>\n\n    );\n  }},\n  { field: 'fullname', headerName: 'Fullname', width: 250 },\n  { field: 'email', headerName: 'Email', width: 200 },\n  { field: 'phone', headerName: 'Tel', width: 150 },\n  { field: 'service', headerName: 'Service', width: 250 },\n  { field: 'notes', headerName: 'Notes', width: 500 },\n\n    \n    ];\n  \n\n  }\n\n\n\n  const [state, setState] = React.useContext(GlobalState);  \n\n  const [data, setData] = React.useState({bookings: [] , cachedBookings: [], isFetching : true});\n\n  const [selectedRow, setSelectedRow] = React.useState(null);\n\n  const [selectedBooking, setSelectedBooking] = React.useState(null);\n  const [seeDetailsDialogOpen, setSeeDetailsDialogOpen] = React.useState(false);\n\n  const [corporate, setCorporate] = useState(corporates[0]);\n  const corporateChanged = (event) =>\n  {\n    setCorporate(event.target.value);\n  }\n  \n\n  const [filter,setFilter] = React.useState('');\n\n\n  const lastPromise = useRef();\n\n  const formatTimeStamp = (timeStamp) =>\n  {\n    const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\n    const timeStampStr = dateformat(timeStamp, 'yyyy-mm-dd');\n    if (todayStr === timeStampStr)\n    {\n      return dateformat(timeStamp, \"'Today', h:MM:ss TT\");\n    }\n    else\n    {\n       return dateformat(timeStamp, \"mmm dS, h:MM:ss TT\");\n    }\n  }\n\n  const loadData = (top) =>\n  {\n    var api = BookService.getAllBookings;\n    if (props.date === 'today')\n    {\n      api = BookService.getTodayBookings;\n    }else if (props.date === 'old')\n    {\n      api = BookService.getOldBookings;\n    }else if (props.date === 'future')\n    {\n      api = BookService.getFutureBookings;\n    }else if (props.date === 'recent')\n    {\n      api = BookService.getRecentBookingsAll;\n    }\n    else if (props.date === 'deleted')\n    {\n      api = BookService.getDeletedBookings;\n    }\n     \n    setData({bookings: [], cachedBookings: [], isFetching: true});\n   \n    // console.log(props)\n\n    const currentPromise = api(top).then( (res) =>{\n      // console.log(res)\n      for (var i=0; i < res.data.length; i++)\n      {\n        res.data[i] = {...res.data[i], id : i + 1}\n      }  \n      setData({bookings: [...res.data], cachedBookings: [...res.data], isFetching: false});\n      // return res.data;\n    }).catch(err => {\n      console.error(err)\n    })\n\n    // lastPromise.current = currentPromise;\n\n    // currentPromise.then(\n    //   result => {\n    //     if (currentPromise === lastPromise.current) {\n    //       setData({bookings: [...result], cachedBookings: [...result], isFetching: false});\n    //       setPage(1);\n    //     }\n    //   },\n    //   e => {\n    //     if (currentPromise === lastPromise.current) {\n    //         console.error(e);\n    //         setData({bookings: data.bookings, cachedBookings: data.cachedBookings, isFetching: false});\n    //     }\n    //   });\n\n  }\n\n  useEffect( () => {\n            setTopCount(25)\n            loadData(25)\n        },\n        [props.date]);\n\n\n\n\n  useEffect( () => {\n\n        if (filter && filter.trim().length > 0)\n        {\n          var filteredData = data.cachedBookings.filter( (element) => \n\n             (element.fullname.toLowerCase().indexOf(filter.toLowerCase()) >= 0)\n               \n              \n          );\n  \n  \n          setData({bookings: [...filteredData], cachedBookings: data.cachedBookings, isFetching: false});\n        }else\n        {\n          setData({bookings: [...data.cachedBookings], cachedBookings: data.cachedBookings, isFetching: false});\n        }\n      },\n      [filter]);\n\n  \n      useEffect(() => {\n\n       loadData(topCount)\n    \n      }, [state.bookingDialogDataChanged]);    \n\n\n  const handleCloseSeeDetaisDialog = () =>\n  {\n    setSelectedBooking(null);\n    setSeeDetailsDialogOpen(false);\n  }    \n  \n  const openDetailsDialog = (event, id) =>\n  {\n    const booking = data.bookings.find(element => element._id === id);\n    setSelectedBooking(booking);\n    setSeeDetailsDialogOpen(true);\n\n  }\n\n  const refreshClicked = (event) =>{\n    setFilter('');\n    loadData(topCount)\n  }\n\n  const filterChanged = (event) =>{\n    setFilter(event.target.value);\n  }\n\n  const handleSelectionChanged = (newSelection) =>\n  {\n    if (newSelection.length > 0){\n      setSelectedRow(newSelection.rows[0]);\n    }\n    \n  }\n\n  const [page, setPage] = React.useState(1);\n\n  const handleExcelButtonClicked = (event) =>\n  {\n    setOpenDialogExcel(true);\n  }\n\n  const isTopSelectHidden = (date)=>\n  {\n    return date === 'live' || date === 'positive' || date === 'late' || date === 'today'\n  }\n\n\n  return (\n    <React.Fragment>\n      {data.isFetching && (\n        <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\n          <LinearProgress color=\"primary\" />\n        </div>\n      )}\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"space-between\"\n        alignItems=\"flex-end\"\n      >\n        <Grid item md={4}>\n          <div style={{ textAlign: \"left\", paddingLeft: \"10px\" }}>\n            <Grid\n              container\n              direction=\"row\"\n              justify=\"flex-start\"\n              alignItems=\"center\"\n            >\n              <Grid item>\n                <span style={{ paddingRight: \"15px\", color: \"#555\" }}>\n                  {\" \"}\n                  {getTableIcon(props.date)}{\" \"}\n                </span>\n              </Grid>\n              <Grid item>\n                <span\n                  style={{\n                    fontSize: \"1.4rem\",\n                    fontWeight: \"600\",\n                    color: \"#444\",\n                  }}\n                >\n                  {\" \"}\n                  {getTableTitle(props.date)}{\" \"}\n                </span>\n              </Grid>\n              <Grid item>\n                <Tooltip title=\"Refresh\" placement=\"right\">\n                  <IconButton\n                    color=\"primary\"\n                    className={classes.refreshButton}\n                    onClick={refreshClicked}\n                  >\n                    <RefreshIcon />\n                  </IconButton>\n                </Tooltip>\n              </Grid>\n            </Grid>\n          </div>\n        </Grid>\n\n        <Grid item md={3}>\n          {props.date === \"completed\" && state.showCreateExcel && (\n            <div style={{ paddingBottom: \"5px\" }}>\n              <Button\n                className={classes.ExportToExcelButton}\n                variant=\"outlined\"\n                color=\"default\"\n                onClick={handleExcelButtonClicked}\n                startIcon={\n                  <FontAwesomeIcon\n                    style={{ color: \"#009900\" }}\n                    icon={faFileExcel}\n                  />\n                }\n              >\n                export to excel\n              </Button>\n            </div>\n          )}\n        </Grid>\n\n        {data.isFetching && <div className={classes.HideNowRows}></div>}\n\n        <Grid item md={3}>\n          <TextField\n            variant=\"standard\"\n            value={filter}\n            onChange={filterChanged}\n            margin=\"normal\"\n            size=\"small\"\n            id=\"filter\"\n            label=\"Filter\"\n            name=\"filter\"\n            autoComplete=\"off\"\n          />\n        </Grid>\n\n        <Grid item hidden={isTopSelectHidden(props.date)}>\n          <FormControl className={classes.topSelect}>\n            <InputLabel id=\"top-select-label\">Limit</InputLabel>\n            <Select\n              labelId=\"top-select-label\"\n              id=\"top-simple-select\"\n              value={topCount}\n              onChange={topCountChanged}\n            >\n              <MenuItem value={25}>25</MenuItem>\n              <MenuItem value={50}>50</MenuItem>\n              <MenuItem value={100}>100</MenuItem>\n              <MenuItem value={500}>500</MenuItem>\n              <MenuItem value={1000}>1000</MenuItem>\n              <MenuItem value={10000}>ALL</MenuItem>\n            </Select>\n          </FormControl>\n\n          {/* <Button onClick={() => loadData(true)}> Show all records </Button> */}\n        </Grid>\n      </Grid>\n\n      <div style={{ height: 700, width: \"100%\" }}>\n        <DataGrid\n          rows={data.bookings}\n          columns={columns}\n          autoPageSize\n          page={page}\n          onPageChange={(params) => {\n            setPage(params.page);\n          }}\n          onSelectionChange={handleSelectionChanged}\n        />\n      </div>\n\n      <BookingDialog\n        booking={selectedBooking}\n        open={seeDetailsDialogOpen}\n        onClose={handleCloseSeeDetaisDialog}\n      />\n\n      {data.bookings && data.bookings.length > 0 && (\n        <Dialog\n          maxWidth=\"lg\"\n          open={openDialogExcel}\n          onClose={handleCloseDialogExcel}\n          PaperComponent={PaperComponent}\n          aria-labelledby=\"form-dialog-title\"\n        >\n          <DialogTitle id=\"draggable-dialog-title\">\n            <Grid\n              container\n              spacing={2}\n              direction=\"row\"\n              justify=\"center\"\n              alignItems=\"center\"\n            >\n              <Grid item>\n                <FontAwesomeIcon\n                  style={{ color: \"#2f942e\", fontSize: \"2rem\" }}\n                  icon={faFileExcel}\n                />\n              </Grid>\n\n              <Grid item>\n                <div\n                  style={{\n                    color: \"#2f942e\",\n                    paddingBottom: \"5px\",\n                    fontWeight: \"800\",\n                  }}\n                >\n                  {\" \"}\n                  Export to EXCEL{\" \"}\n                </div>\n              </Grid>\n            </Grid>\n\n            <Divider />\n          </DialogTitle>\n          <DialogContent>\n            <div\n              style={{\n                minHeight: \"600px\",\n                maxHeight: \"600px\",\n                minWidth: \"1200px\",\n                maxWidth: \"1200px\",\n              }}\n            >\n              <div>\n                <Grid row container justify=\"center\" spacing={3}>\n                  <Grid item>\n                    <FormControlLabel\n                      control={\n                        <Switch\n                          checked={justCorporate}\n                          onChange={justCorporateChanged}\n                          name=\"justCorporate\"\n                        />\n                      }\n                      label=\"Just Corporate Records\"\n                    />\n                  </Grid>\n\n                  {justCorporate && (\n                    <Grid item>\n                      <FormControl\n                        style={{ marginTop: \"0px\" }}\n                        className={classes.formControl}\n                      >\n                        <Select\n                          labelId=\"select-corporate\"\n                          id=\"select-corporate-id\"\n                          value={corporate}\n                          onChange={corporateChanged}\n                        >\n                          {corporates.map((element) => (\n                            <MenuItem value={element}>{`${element}`}</MenuItem>\n                          ))}\n                        </Select>\n                      </FormControl>\n                    </Grid>\n                  )}\n                </Grid>\n\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                  <Grid row container justify=\"center\" spacing={3}>\n                    <Grid item>\n                      <KeyboardDatePicker\n                        disableToolbar\n                        variant=\"inline\"\n                        format=\"dd/MM/yyyy\"\n                        margin=\"normal\"\n                        id=\"date-picker-from\"\n                        label=\"From\"\n                        value={fromDate}\n                        onChange={handleFromDateChange}\n                        KeyboardButtonProps={{\n                          \"aria-label\": \"change date\",\n                        }}\n                      />\n                    </Grid>\n\n                    <Grid item>\n                      <KeyboardDatePicker\n                        disableToolbar\n                        variant=\"inline\"\n                        format=\"dd/MM/yyyy\"\n                        margin=\"normal\"\n                        id=\"date-picker-until\"\n                        label=\"Until\"\n                        value={untilDate}\n                        onChange={handleUntilDateChange}\n                        KeyboardButtonProps={{\n                          \"aria-label\": \"change date\",\n                        }}\n                      />\n                    </Grid>\n\n                    <Grid item>\n                      <div style={{ paddingTop: \"30px\", marginLeft: \"20px\" }}>\n                        <ReactHTMLTableToExcel\n                          id=\"test-table-xls-button\"\n                          className={classes.ExportToExcelButtonInline}\n                          table=\"table-to-xls\"\n                          filename={`PCR.Report.${fromDateStr}.${untilDateStr}`}\n                          sheet=\"PCR-Report\"\n                          buttonText=\"Download as XLS\"\n                        />\n                      </div>\n                    </Grid>\n                  </Grid>\n                </MuiPickersUtilsProvider>\n              </div>\n\n              <div>\n                <Grid container spacing={3}>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkDate}\n                          onChange={chkDateChanged}\n                          name=\"chkDate\"\n                        />\n                      }\n                      label=\"Date\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkForename}\n                          onChange={chkForenameChanged}\n                          name=\"chkForename\"\n                        />\n                      }\n                      label=\"Forename\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkSurname}\n                          onChange={chkSurnameChanged}\n                          name=\"chkSurname\"\n                        />\n                      }\n                      label=\"Surname\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkDOB}\n                          onChange={chkDOBChanged}\n                          name=\"chkDOB\"\n                        />\n                      }\n                      label=\"D.O.B\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkEmail}\n                          onChange={chkEmailChanged}\n                          name=\"chkEmail\"\n                        />\n                      }\n                      label=\"Email\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkTel}\n                          onChange={chkTelChanged}\n                          name=\"chkTel\"\n                        />\n                      }\n                      label=\"Tel\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkCertificate}\n                          onChange={chkCertificateChanged}\n                          name=\"chkCertificate\"\n                        />\n                      }\n                      label=\"Certificate\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkAntiBodyTest}\n                          onChange={chkAntiBodyTestChanged}\n                          name=\"chkAntiBodyTest\"\n                        />\n                      }\n                      label=\"AntiBodyTest\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkextRef}\n                          onChange={chkextRefChanged}\n                          name=\"chkextRef\"\n                        />\n                      }\n                      label=\"Lab No.\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkPrice}\n                          onChange={chkPriceChanged}\n                          name=\"chkPrice\"\n                        />\n                      }\n                      label=\"Price\"\n                    />\n                  </Grid>\n                </Grid>\n              </div>\n\n              <div style={{ width: \"100%\", paddingTop: \"20px\" }}>\n                <table className={classes.table} id=\"table-to-xls\">\n                  <tr>\n                    {chkDate && <th className={classes.th}>Date</th>}\n                    {chkForename && <th className={classes.th}>Forename</th>}\n                    {chkSurname && <th className={classes.th}>Surename</th>}\n                    {chkDOB && <th className={classes.th}>D.O.B</th>}\n                    {chkEmail && <th className={classes.th}>Email</th>}\n                    {chkTel && <th className={classes.th}>Tel</th>}\n                    {chkCertificate && (\n                      <th className={classes.th}>Certificate</th>\n                    )}\n                    {chkAntiBodyTest && (\n                      <th className={classes.th}>AntiBodyTest</th>\n                    )}\n                    {chkextRef && <th className={classes.th}>Lab No.</th>}\n                    {chkPrice && <th className={classes.th}>Price (£) </th>}\n                  </tr>\n\n                  {data.bookings\n                    .filter((booking) => {\n                      if (!justCorporate) {\n                        return (\n                          booking.bookingDate >= fromDateStr &&\n                          booking.bookingDate <= untilDateStr\n                        );\n                      } else {\n                        return (\n                          booking.bookingDate >= fromDateStr &&\n                          booking.bookingDate <= untilDateStr &&\n                          booking.paid &&\n                          booking.paidBy === \"corporate\" &&\n                          booking.corporate === corporate\n                        );\n                      }\n                    })\n\n                    .map((booking) => (\n                      <tr>\n                        {chkDate && (\n                          <td className={classes.td}>\n                            {FormatDateFromString(booking.bookingDate)}\n                          </td>\n                        )}\n                        {chkForename && (\n                          <td className={classes.td}>\n                            {booking.forenameCapital}\n                          </td>\n                        )}\n                        {chkSurname && (\n                          <td className={classes.td}>\n                            {booking.surnameCapital}\n                          </td>\n                        )}\n                        {chkDOB && (\n                          <th className={classes.th}>\n                            {/* {FormatDateFromString(booking.birthDate)} */}\n                          </th>\n                        )}\n                        {chkEmail && (\n                          <td className={classes.td}>{booking.email}</td>\n                        )}\n                        {chkTel && (\n                          <td className={classes.td}>{booking.phone}</td>\n                        )}\n                        {chkCertificate && (\n                          <td className={classes.td}>\n                            {booking.certificate ? \"YES\" : \"NO\"}\n                          </td>\n                        )}\n                        {chkAntiBodyTest && (\n                          <td className={classes.td}>\n                            {booking.antiBodyTest ? \"YES\" : \"NO\"}\n                          </td>\n                        )}\n                        {chkextRef && (\n                          <td className={classes.td}>{booking.extRef}</td>\n                        )}\n                        {chkPrice && (\n                          <td className={classes.td}>\n                            {PriceCalculator.calculatePrice(booking)}\n                          </td>\n                        )}\n                      </tr>\n                    ))}\n                </table>\n              </div>\n            </div>\n          </DialogContent>\n        </Dialog>\n      )}\n    </React.Fragment>\n  );\n} ","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\n\nexport default function Title(props) {\n  return (\n    <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n      {props.children}\n    </Typography>\n  );\n}\n\nTitle.propTypes = {\n  children: PropTypes.node,\n};","import React, { useEffect } from 'react';\nimport { useTheme } from '@material-ui/core/styles';\nimport { LineChart, Line, XAxis, YAxis, Label, ResponsiveContainer } from 'recharts';\nimport Title from './Title';\nimport dateformat from 'dateformat';\nimport BookService from './services/BookService';\nimport { LinearProgress } from '@material-ui/core';\n\n// Generate Sales Data\nfunction createData(time, amount) {\n  return { time, amount };\n}\n\n\nconst emptyData = [\n  createData('09:00', 0),\n  createData('10:00', 0),\n  createData('11:00', 0),\n  createData('12:00', 0),\n  createData('13:00', 0),\n  createData('14:00', 0),\n  createData('15:00', 0),\n  createData('16:00', 0),\n  createData('17:00', 0),\n  createData('18:00', undefined),\n\n];\n\nconst getCount = (data, str) =>\n{\n  if (!data)\n    return 0;\n\n  var count = 0;\n  for (var i=0; i < data.length; i++)\n  {\n    if (data[i]._id.substr(0,2) === str)\n    {\n      count += data[i].count;\n    }\n  }\n  return count;\n}\n\nexport default function Chart() {\n  const theme = useTheme();\n\n  const [data, setData] = React.useState(emptyData);\n  const [loading, setLoading] = React.useState(false)\n\n  useEffect(() =>\n  {\n    const fetchData = async () =>\n    {\n      const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\n      var result = [];\n      try\n      {\n          setLoading(true)\n          const res = await BookService.getBookingsStatsByDateStr(todayStr);\n          setLoading(false)\n          const data = res.data.result;\n          result.push(createData('09:00', getCount(data,'09')));\n          result.push(createData('10:00', getCount(data,'10')));\n          result.push(createData('11:00', getCount(data,'11')));\n          result.push(createData('12:00', getCount(data,'12')));\n          result.push(createData('13:00', getCount(data,'13')));\n          result.push(createData('14:00', getCount(data,'14')));\n          result.push(createData('15:00', getCount(data,'15')));\n          result.push(createData('16:00', getCount(data,'16')));\n          result.push(createData('17:00', getCount(data,'17')));\n          result.push(createData('18:00', undefined));\n \n           setData(result);\n      }\n      catch(err){\n        setLoading(false)\n        console.error(err);\n      }\n\n    }\n  \n   fetchData();\n\n  }, [] );\n\n  return (\n    <React.Fragment>\n       {loading && (\n        <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\n          <LinearProgress color=\"primary\" />\n        </div>\n      )}\n      <Title>Today</Title>\n      <ResponsiveContainer>\n        <LineChart\n          data={data}\n          margin={{\n            top: 16,\n            right: 16,\n            bottom: 0,\n            left: 24,\n          }}\n        >\n          <XAxis dataKey=\"time\" stroke={theme.palette.text.secondary} />\n          <YAxis stroke={theme.palette.text.secondary}>\n            <Label\n              angle={270}\n              position=\"left\"\n              style={{ textAnchor: 'middle', fill: theme.palette.text.primary }}\n            >\n              Online Bookings\n            </Label>\n          </YAxis>\n          <Line type=\"monotone\" dataKey=\"amount\" stroke={theme.palette.primary.main} dot={false} />\n        </LineChart>\n      </ResponsiveContainer>\n    </React.Fragment>\n  );\n}","import React, { useEffect } from \"react\";\nimport Link from \"@material-ui/core/Link\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Title from \"./Title\";\nimport { Grid, LinearProgress, Tooltip } from \"@material-ui/core\";\nimport * as dateformat from \"dateformat\";\nimport BookService from \"./services/BookService\";\nimport BookingDialog from \"./BookingDialog\";\n\nconst useStyles = makeStyles({\n  depositContext: {\n    flex: 1,\n  },\n\n  bookingBox: {\n    display: \"flex\",\n    margin: \"5px\",\n    padding: \"5px\",\n    maxWidth: \"90px\",\n    minHeight: \"30px\",\n    border: \"1px solid #eee\",\n    fontSize: \"12px\",\n    fontWeight: \"500\",\n    cursor: \"pointer\",\n    backgroundColor: \"#ebedf7\",\n    color: \"#3f51b5\",\n    boxShadow: \"2px 4px #fafafa\",\n    borderRadius: \"5px\",\n    textAlign: \"center\",\n    alignItems: \"center\",\n    justifyItems: \"center\",\n    align: \"center\",\n\n    \"&:hover\": {\n      background: \"#3f51b5\",\n      color: \"#ebedf7\",\n    },\n  },\n});\n\nconst isWeekend = (date) => {\n  return (\n    date.getDay() === 1 ||\n    date.getDay() === 2 ||\n    date.getDay() === 3 ||\n    date.getDay() === 6 ||\n    date.getDay() === 0\n  );\n};\n\nconst isThursday = (date) => {\n  return date.getDay() === 4; /// Thursday\n};\n\nconst isFriday = (date) => {\n  return date.getDay() === 5; /// Friday\n};\n\nconst getCurrentTimeSlot = (now) => {\n  if (isWeekend(now)) {\n    return null;\n  }\n\n  var min = now.getMinutes();\n  var hour = now.getHours();\n\n  if (isThursday(now) && hour < 13) {\n    return null;\n  }\n\n  if (isFriday(now) && hour >= 13) {\n    return null;\n  }\n\n  if (hour < 10 || hour >= 18) return null;\n\n  const slotMinStr = min < 30 ? \"00\" : \"30\";\n  const pmStr = hour >= 12 ? \"PM\" : \"AM\";\n\n  if (hour > 12) hour = hour - 12;\n\n  const slotHourStr = `0${hour}`;\n\n  return `${slotHourStr}:${slotMinStr} ${pmStr}`;\n};\n\nconst getCurrentTimeSlotLabel = (timeStr) => {\n  if (!timeStr) {\n    return \"Closed\";\n  }\n\n  let endTimeStr = \"\";\n  switch (timeStr) {\n    case \"10:00 AM\":\n      endTimeStr = \"10:30 AM\";\n      break;\n    case \"10:30 AM\":\n      endTimeStr = \"11:00 AM\";\n      break;\n    case \"11:00 AM\":\n      endTimeStr = \"11:30 AM\";\n      break;\n    case \"11:30 AM\":\n      endTimeStr = \"12:00 PM\";\n      break;\n    case \"12:00 PM\":\n      endTimeStr = \"12:30 PM\";\n      break;\n    case \"12:30 PM\":\n      endTimeStr = \"01:00 PM\";\n      break;\n    case \"01:00 PM\":\n      endTimeStr = \"01:30 PM\";\n      break;\n    case \"01:30 PM\":\n      endTimeStr = \"02:00 PM\";\n      break;\n    case \"02:00 PM\":\n      endTimeStr = \"02:30 PM\";\n      break;\n    case \"02:30 PM\":\n      endTimeStr = \"03:00 PM\";\n      break;\n    case \"03:00 PM\":\n      endTimeStr = \"03:30 PM\";\n      break;\n    case \"03:30 PM\":\n      endTimeStr = \"04:00 PM\";\n      break;\n    case \"04:00 PM\":\n      endTimeStr = \"04:30 PM\";\n      break;\n    case \"04:30 PM\":\n      endTimeStr = \"05:00 PM\";\n      break;\n    case \"05:00 PM\":\n      endTimeStr = \"05:30 PM\";\n      break;\n    case \"05:30 PM\":\n      endTimeStr = \"06:00 PM\";\n      break;\n\n    default:\n      endTimeStr = \"\";\n      break;\n  }\n\n  return `${timeStr} - ${endTimeStr}`;\n};\n\nexport default function CurrentVisits() {\n  const classes = useStyles();\n\n  const [current, setCurrent] = React.useState(new Date());\n  const [bookings, setBookings] = React.useState([]);\n\n  const [selectedBooking, setSelectedBooking] = React.useState(null);\n  const [openDialog, setOpenDialog] = React.useState(false);\n\n  const [loading, setLoading] = React.useState(false);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setCurrent(new Date());\n    }, 30000);\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, []);\n\n  useEffect(() => {\n    const currentTimeSlot = getCurrentTimeSlot(current);\n    if (!currentTimeSlot) return;\n    const todayStr = dateformat(current, \"yyyy-mm-dd\");\n    setLoading(true);\n    BookService.getBookingsByDateStrandTime(todayStr, currentTimeSlot)\n      .then((res) => {\n        setLoading(false);\n        if (res.data.status === \"OK\") {\n          setBookings([...res.data.bookings]);\n        }\n      })\n      .catch((err) => {\n        setLoading(false);\n        console.log(err);\n      });\n  }, [current]);\n\n  const getBookingsBox = (_bookings) => {\n    if (_bookings && _bookings.length > 0) {\n      return (\n        <div className={classes.root}>\n          <Grid\n            container\n            justify=\"flex-start\"\n            alignItems=\"flex-start\"\n            spacing={0}\n          >\n            {_bookings.map((booking) => (\n              <Grid item>\n                <div\n                  className={classes.bookingBox}\n                  onClick={(event) => bookingCliked(event, booking)}\n                >\n                  <span style={{ textAlign: \"center\" }}>\n                    {\" \"}\n                    {`${booking.surnameCapital}`.substring(0, 10)}{\" \"}\n                  </span>\n                </div>\n              </Grid>\n            ))}\n          </Grid>\n        </div>\n      );\n    }\n  };\n\n  const bookingCliked = (event, booking) => {\n    setSelectedBooking(booking);\n    setOpenDialog(true);\n  };\n\n  const handleCloseDialog = () => {\n    setOpenDialog(false);\n  };\n\n  return (\n    <React.Fragment>\n      {loading && (\n        <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\n          <LinearProgress color=\"primary\" />\n        </div>\n      )}\n\n      <Title>Current Visits</Title>\n      <Typography component=\"p\" variant=\"h6\">\n        {getCurrentTimeSlotLabel(getCurrentTimeSlot(current))}\n      </Typography>\n      <Typography color=\"textSecondary\" className={classes.depositContext}>\n        on {dateformat(current, \"dd mmmm, yyyy\")}\n      </Typography>\n\n      {getBookingsBox(bookings)}\n\n      <BookingDialog\n        booking={selectedBooking}\n        open={openDialog}\n        onClose={handleCloseDialog}\n      />\n    </React.Fragment>\n  );\n}\n","import React, { useEffect } from 'react';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Title from './Title';\nimport BookService from './services/BookService';\nimport * as dateformat from 'dateformat';\nimport GlobalState from './../GlobalState';\nimport { getMenuIndex } from './../MenuList';\nimport {FormatDateFromString, FormatDateFromStringShortYear} from './DateFormatter';\nimport { LinearProgress } from '@material-ui/core';\n\n\nconst useStyles = makeStyles((theme) => ({\n  seeMore: {\n    marginTop: theme.spacing(3),\n  },\n}));\n\nexport default function BookingView() {\n  const classes = useStyles();\n  const [state, setState] = React.useContext(GlobalState);  \n\n  const [data, setData] = React.useState({bookings: [] , isFetching : false});\n\n  const [refresh, setRefresh] = React.useState(false);\n\n  const [loading, setLoading] = React.useState(false)\n\n  const seeMoreRecords = (event) => {\n    event.preventDefault();\n    setState(state=>({...state, currentMenuIndex:getMenuIndex('gynae',`recentBookings`)}));\n  }\n\n  const loadData = () => \n  {\n    setData({bookings: data.bookings, isFetching: true});\n    setLoading(true)\n    BookService.getRecentBookings().then( (res) =>{\n      setLoading(false)\n        setData({bookings: res.data, isFetching: false});\n\n    }).catch( (err) => {\n      setLoading(false)\n        console.log(err);\n        setData({bookings: data.bookings, isFetching: false});\n    });\n  }\n\n\n  useEffect( () => {\n          loadData();\n        },\n        [refresh]);   \n\n\n   useEffect( () => {\n     loadData();\n     const interval = setInterval(() => {\n       setRefresh(refresh => !refresh);\n     }, 30000);\n\n     return () =>\n     {\n       clearInterval(interval)\n     }\n     \n   }, []) ;    \n\n   const formatTimeStamp = (timeStamp) =>\n   {\n     const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\n     const timeStampStr = dateformat(timeStamp, 'yyyy-mm-dd');\n     if (todayStr === timeStampStr)\n     {\n       return dateformat(timeStamp, \"'Today', h:MM:ss TT\");\n     }\n     else\n     {\n        return dateformat(timeStamp, \"mmm dS, h:MM:ss TT\");\n     }\n   }\n\n  return (\n    <React.Fragment>\n       {loading && (\n        <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\n          <LinearProgress color=\"primary\" />\n        </div>\n      )}\n      <Title>Recent Bookings</Title>\n      <Table size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell>TimeStamp</TableCell>        \n            <TableCell>Fullname</TableCell>\n            <TableCell>Email</TableCell>\n            <TableCell>Tel</TableCell>\n            <TableCell>Service</TableCell>\n            <TableCell>Booked Date</TableCell>\n            <TableCell>Booked Time</TableCell> \n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {data.bookings.map((row) => (\n            <TableRow key={row._id}>\n              <TableCell>{formatTimeStamp(row.timeStamp)}</TableCell>\n              <TableCell>{row.fullname}</TableCell>\n              <TableCell>{row.email}</TableCell>\n              <TableCell>{row.phone}</TableCell>\n              <TableCell>{row.service}</TableCell>\n              <TableCell>{FormatDateFromString(row.bookingDate)}</TableCell>\n              <TableCell>{row.bookingTime}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n      <div className={classes.seeMore}>\n        <Link color=\"primary\" href=\"#\" onClick={seeMoreRecords}>\n          See more records\n        </Link>\n      </div>\n    </React.Fragment>\n  );\n}","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Chart from './Chart';\nimport CurrentVisits from './CurrentVisits';\n\n\n\nimport { Tooltip } from '@material-ui/core';\nimport GlobalState from './../GlobalState';\nimport BookingView from './BookingView';\n\nconst useStyles = makeStyles((theme) => ({\n \n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 240,\n  },\n}));\n\nexport default function DashboardPreview() {\n  const classes = useStyles();\n  const [state, setState] = React.useContext(GlobalState);\n\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n\n  return (\n        <React.Fragment>\n\n<           Grid container spacing={3}>\n                    {/* Chart */}\n                    <Grid item xs={12} md={4} lg={6}>\n                    <Paper className={fixedHeightPaper}>\n                        <Chart />\n                    </Paper>\n                    </Grid>\n                    {/* Current Visits */}\n                    <Grid item xs={12} md={4} lg={6}>\n                    <Paper className={fixedHeightPaper}>\n                        <CurrentVisits />\n                    </Paper>\n                    </Grid>\n                    {/* Recent Bookings */}\n                    <Grid item xs={12}>\n                    <Paper className={classes.paper}>\n                        <BookingView/>\n                    </Paper>\n                    </Grid>\n          </Grid>\n        </React.Fragment>\n  );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport GlobalState from './../GlobalState';\nimport Grid from '@material-ui/core/Grid';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { Button, Checkbox, FormControlLabel, Link, TextField, Tooltip } from '@material-ui/core';\nimport PDFService from './services/PDFService';\n\nimport {calculatePrice} from './PriceCalculator';\n\n\nimport bookingService from './services/BookService';\nimport CheckIcon from '@material-ui/icons/Check';\nimport CloseIcon from '@material-ui/icons/Close';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nimport {FormatDateFromString, RevertFormatDateFromString} from './DateFormatter';\n\nimport PrintIcon from '@material-ui/icons/Print';\n\n\nconst useStyles = makeStyles((theme) => ({\n  box: {\n    backgroundColor : \"#373737\",\n    color: \"#fff\",\n    padding : \"1px\",\n    borderRadius : \"4px\",\n    textAlign: \"justify\",\n    paddingRight: \"40px\"\n  },\n\n  boxRed: {\n    backgroundColor : \"#dc2626\",\n    color: \"#fff\",\n    padding : \"1px\",\n    borderRadius : \"4px\",\n    textAlign: \"justify\",\n    paddingRight: \"40px\"\n  },\n\n  boxInfo: {\n    textAlign: \"justify\",\n    backgroundColor : \"#fafafa\",\n    color: \"#333\",\n    padding : \"1px\",\n    borderRadius : \"4px\",\n    paddingRight: \"40px\",\n    border: \"1px solid #eee\",\n  },\n\n  ul: {\n     listStyle: \"none\",\n     padding: \"0\",\n     margin: \"0\"\n  },\n\n  li: {\n    marginBottom : \"15px\"\n  },\n\n\n  icon: {\n    marginRight : \"8px\"\n  },\n\n  root: {\n    width: '100%',\n  },\n\n  lineThrough:{\n    textDecoration : \"line-through\",\n  },\n\n\n\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    flexBasis: '33.33%',\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n  },\n  secondaryHeading: {\n    fontSize: theme.typography.pxToRem(15),\n  },\n\n  infoDetails:{\n    textAlign: \"left\",\n  },\n\n  infoTitle:{\n    fontWeight: \"800\",\n    marginRight: \"10px\"\n  },\n\n  infoData:{\n    fontWeight: \"400\",\n  },\n\n  title:\n  {\n    // textAlign : \"center\",\n    // fontWeight : \"500\",\n    // margin: \"10px\",\n    // backgroundColor : \"#eee\",\n    // padding : \"10px\",\n    // borderRadius : \"4px\"\n    textAlign: \"center\",\n    fontWeight : \"600\",\n    marginLeft: \"10px\",\n    marginBottom: \"5px\"\n\n  },\n\n  Accordion:{\n    backgroundColor : \"#f5f5f5\",\n    color: \"#222\"\n  },\n\n  AccordionDeleted:{\n    backgroundColor : \"#aaa\",\n    color: \"#555\"\n  },\n\n  DownloadForm:{\n      marginTop: \"10px\",\n      marginBottom : \"10px\"\n  },\n\n  infoDataCharges:{\n    fontSize : \"18px\",\n    color: \"green\",\n    fontWeight : \"600\"\n  },\n\n  infoDataChargesHigher:{\n    fontSize : \"18px\",\n    color: \"red\",\n    fontWeight : \"600\"\n  },\n  BookedLabel:{\n    color: \"#606060\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#606060\"\n  },\n\n  PatientAttendedLabel:{\n    color: \"#0066aa\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#0066aa\"\n  },\n\n  SampleTakenLabel:{\n    color: \"#0066cc\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#0066cc\"\n  },\n\n  ReportSentLabel:{\n    color: \"#009900\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#009900\"\n  },\n\n  ReportCertSentLabel:{\n    color: \"#009900\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#009900\"\n  },\n\n  PositiveLabel:{\n    color: \"red\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"red\"\n  },\n\n\n  EditButton:\n  {\n    marginBottom : \"20px\",\n    backgroundColor : \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\"\n    },\n    textDecoration : \"none !important\",\n    padding: \"10px\",\n    width: \"400px\"   \n  },\n\n  RestoreButton:\n  {\n    marginBottom : \"20px\",\n    backgroundColor : \"#fafafa\",\n    color: \"#555\",\n    \"&:hover\": {\n      background: \"#f1f1f1\",\n      color: \"#111\"\n    },\n    textDecoration : \"none !important\",\n    padding: \"10px\" ,\n    width: \"400px\"    \n  },\n\n\n  DeleteButton:\n  {\n    marginBottom : \"20px\",\n    backgroundColor : \"#d90015\",\n    \"&:hover\": {\n      background: \"#b80012\",\n      color: \"#fff\"\n    },\n\n    padding: \"10px\",\n    width: \"400px\"   \n    \n  },\n\n  SaveButton:\n  {\n    marginBottom : \"10px\",\n    padding: \"10px\",\n\n    backgroundColor : \"#d1175e\",\n    \"&:hover\": {\n      background: \"#bd0d50\",\n      color: \"#fff\",\n      \n    },\n    width: \"400px\"   \n\n  },\n\n  CancelButton:\n  {\n    marginBottom : \"20px\",\n    // padding: \"10px\"\n  },\n\n  TextBox: {\n    \n    padding : \"0px\"\n\n  },\n\n  checkIcon:{\n    color: \"green\",   \n  },\n\n  closeIcon:{\n    color: \"red\"\n  },\n\n  centeredLabel : {\n    display: \"flex\",\n    alignItems: \"center\"\n  }\n\n\n\n\n\n\n}));\n\n\n\n\nexport default function PersonsBox() {\n    const classes = useStyles();\n\n    const [state, setState] = React.useContext(GlobalState);\n\n    const [expanded, setExpanded] = React.useState('panel0');\n\n    const [editMode, setEditMode] = React.useState({edit : false, person : null});\n    const [deleteMode, setDeleteMode] = React.useState({delete : false, person : null});\n    const [restoreMode, setRestoreMode] = React.useState({restore : false, person : null});\n\n    const [saving, setSaving] =  React.useState(false);\n    const [deleting, setDeleting] =  React.useState(false);\n    const [restoring, setRestoring] =  React.useState(false);\n\n    const [validationError, setValidationError] = React.useState({});\n\n\n    const [bookingDate, setBookingDate] = React.useState('');\n    const [bookingTime, setBookingTime] = React.useState('');\n\n    const [fullname, setFullname] = React.useState('');\n    const [email, setEmail] = React.useState('');\n    const [tel, setTel] = React.useState('');\n    const [service, setService] = React.useState('');\n    const [notes, setNotes] = React.useState('');\n\n\n    const bookingDateChanged = (event) =>\n    {\n      setBookingDate(event.target.value);\n      setValidationError({...validationError, bookingDateError : false});\n    }\n\n    const bookingTimeChanged = (event) =>\n    {\n      setBookingTime(event.target.value);\n      setValidationError({...validationError, bookingTimeError : false});\n    }\n\n    const fullnameChanged = (event) =>\n    {\n      setFullname(event.target.value);\n    }\n\n    const emailChanged = (event) =>\n    {\n      setEmail(event.target.value);\n    }\n\n    const telChanged = (event) =>\n    {\n      setTel(event.target.value);\n    }\n\n    const serviceChanged = (event) =>\n    {\n      setService(event.target.value);\n    }\n\n    const notesChanged = (event) =>\n    {\n      setNotes(event.target.value);\n    }\n\n\n    const handleChange = (panel) => (event, isExpanded) => {\n      setExpanded(isExpanded ? panel : false);\n    };\n\n    const getStatusLabel = (status) => {\n      if (status === 'booked')\n      {\n        return (\n          <span className={classes.BookedLabel}> Booking Made </span>\n        );\n    \n      }else if (status === 'patient_attended')\n      {\n        return (\n          <span  className={classes.PatientAttendedLabel}> Patient Attended </span>\n        );\n    \n      }\n      else{\n        return 'Unknown';\n      }\n    }\n\n\n   const handleEditModeChanged = (edit, person) => {\n\n       if (edit)\n       {\n         setFullname(person.fullname);\n         setBookingDate(FormatDateFromString(person.bookingDate));\n         setBookingTime(person.bookingTime);\n         setEmail(person.email);\n         setTel(person.phone);\n         setService(person.service)\n         if (person.notes)\n         {\n          setNotes(person.notes);\n         }\n        \n         setEditMode({edit: edit, person: person});\n\n       }\n       else if (!edit && !person)\n       {\n         setEditMode({edit: edit, person: person});\n       }\n       else if (!edit && person)\n       {\n          const booking = {};\n          const bookingId = person._id;\n          booking.email = email;\n          booking.phone = tel;\n          booking.fullname = fullname;\n          booking.notes = notes;\n          booking.service = service;\n          booking.bookingDate = RevertFormatDateFromString(bookingDate);\n          booking.bookingTime = bookingTime;\n          booking.bookingRef = person.bookingRef;\n\n          if  (validateBooking(booking))\n          {\n            updateBooking({bookingId: bookingId, person: booking});\n          }\n       }\n   }\n\n   const validateDate = (str) =>\n   {\n     var error = false;\n     if (!str || str.length !== 10)\n     {\n       error = true;\n     }\n\n     if (str.charAt(4) !== '-'  || str.charAt(7) !== '-')\n     {\n       error = true;\n     }\n\n     try\n     {\n       \n       const result = /^\\d{4}-\\d{2}-\\d{2}$/.test(str);\n       if (!result)\n       {\n          error = true;\n       }\n\n       const year = parseInt(str.substr(0,4));\n       const month = parseInt(str.substr(5,2));\n       const day = parseInt(str.substr(8,2));\n\n       if (year < 1900)\n       {\n          error = true;\n       }\n\n       if (month < 1 || month > 12)\n       {\n         error = true;\n       }        \n\n       if (day > 31)\n       {\n         error = true;\n       }\n\n     }catch(err)\n     {\n       error = true;\n     }\n\n\n\n     return !error;\n   }\n\n   const validateTime =(str) =>\n   {\n     var error = false;\n\n     const result = /^\\d{2}:\\d{2} AM$|^\\d{2}:\\d{2} PM$/.test(str);\n     if (!result)\n     {\n        error = true;\n     }\n\n     try{\n       const hour = parseInt(str.substr(0,2));\n       const minute = parseInt(str.substr(3,2));\n\n       if (hour < 0 || hour > 12)\n       {\n         error = true;\n       }\n\n       if (minute < 0 || minute > 59)\n       {\n         error = true;\n       }\n\n     }catch(err)\n     {\n       error = true;\n     }\n\n     return !error;\n   }\n\n   const validateBooking = (booking) =>\n   {\n      var error = false;\n\n      if (!validateDate(booking.bookingDate))\n      {\n        error = true;\n        setValidationError({...validationError, bookingDateError : true});\n      }\n\n      if (!validateTime(booking.bookingTime))\n      {\n        error = true;\n        setValidationError({...validationError, bookingTimeError : true});\n      }\n     \n\n      return !error;\n   }\n\n   const updateBooking = (payload) =>\n   {\n       setSaving(true);\n       bookingService.updateBooking(payload).then( (res) => {\n        setSaving(false);\n        setEditMode({edit: false, person: null});\n        setState(state => ({...state, RefreshPersonInfo : !state.RefreshPersonInfo}));\n\n       }).catch ( (err) => {\n         setSaving(false);\n         setEditMode({edit: false, person: null});\n         console.log(err);\n       });\n   }\n\n   const deleteBooking = (id) =>\n   {\n       setDeleting(true);\n       bookingService.deleteBooking(id).then( (res) => {\n        setDeleting(false);\n        setDeleteMode({delete: false, person: null});\n        setState(state => ({...state, RefreshPersonInfo : !state.RefreshPersonInfo}));\n\n       }).catch ( (err) => {\n          setDeleting(false);\n          setDeleteMode({delete: false, person: null});\n         console.log(err);\n       });\n   }\n\n   const restoreBooking = (id) =>\n   {\n       setRestoring(true);\n       bookingService.unDeleteBooking(id).then( (res) => {\n        setRestoring(false);\n        setRestoreMode({restore: false, person: null});\n        setState(state => ({...state, RefreshPersonInfo : !state.RefreshPersonInfo}));\n\n       }).catch ( (err) => {\n        setRestoring(false);\n        setRestoreMode({restore: false, person: null});\n         console.log(err);\n       });\n   }\n\n   const changeBackToBookingMade = (event, id) =>\n   {\n     setSaving(true);\n     bookingService.changeBackToBookingMade(id).then(res => {\n       setSaving(false);\n       setState(state => ({...state, RefreshPersonInfo : !state.RefreshPersonInfo}));\n     }).catch(err => {\n       console.log(err);\n       setSaving(false);\n     })\n   }\n\n\n\n   const handleDeleteModeChanged = (del, person) => {\n\n    if (del)\n    {\n      setDeleteMode({delete: del, person: person});\n    }\n    else if (!del && !person)\n    {\n      setDeleteMode({delete: del, person: person});\n    }\n    else if (!del && person)\n    {\n        deleteBooking(person._id);\n    }\n  }\n\n  const handleRestoreModeChanged = (restore, person) => {\n\n    if (restore)\n    {\n      setRestoreMode({restore: restore, person: person});\n    }\n    else if (!restore && !person)\n    {\n      setRestoreMode({restore: restore, person: person});\n    }\n    else if (!restore && person)\n    {\n        restoreBooking(person._id);\n    }\n  }\n\n  return (\n    <React.Fragment>\n          \n      <Grid container direction=\"column\" spacing={1} justify=\"flex-start\" alignItems=\"center\">\n          <div className={classes.title}> Following Records Found :</div>\n\n          {state.foundRecords.map((person,index) => (\n   \n                <Grid item xs={12} md={12} key={`panel${index}`}>\n                <div className={classes.root}>\n                    <Accordion className={person.deleted ? classes.AccordionDeleted : classes.Accordion} expanded={expanded === `panel${index}`} onChange={handleChange(`panel${index}`)}>\n                    <AccordionSummary className={person.deleted ? classes.lineThrough : ''}\n                        expandIcon={<ExpandMoreIcon />}\n                        aria-controls=\"panel1bh-content\"\n                        id={`panel${index}bh-header`}\n                    >\n                      {person.deleted && (\n                          <Tooltip  title=\"This record has been deleted.\">\n                            <DeleteIcon  style={{padding: 0, margin: 0,  color: \"#fff\", fontSize: 25 }}/>\n                        </Tooltip>\n                      )}\n\n                        <Typography className={classes.heading}> {`#${index+1}`} </Typography>\n                        <Typography className={classes.secondaryHeading}>\n                        {`${person.fullname}`}\n                        </Typography>\n                    </AccordionSummary>\n\n                    <AccordionDetails className={classes.infoDetails}>\n                        \n\n\n                        <ul className={classes.ul}>\n\n                        {/* Restore Functionality ******************************************* */}  \n                        <li hidden={!(restoreMode.restore && restoreMode.person._id  === person._id)}>\n                              <div style={{fontWeight: \"500\", paddingBottom: \"5px\", paddingLeft: \"5px\", fontSize:\"16px\" , color:\"#fff\"}}>\n                                Are you sure you want to restore this record?\n                              </div>\n                            </li>\n\n                            <li hidden={!person.deleted || (restoreMode.restore && restoreMode.person._id === person._id)}>\n                                 <Button\n\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick = {() => {handleRestoreModeChanged(true, person)}}\n                                    className={classes.RestoreButton}\n                                 >\n                                   Restore This Record\n                                </Button>\n                            </li>\n\n                            <li hidden={!(restoreMode.restore && restoreMode.person._id  === person._id)}>\n                                 <Button\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    disabled = {restoring}\n                                    onClick = {() => {handleRestoreModeChanged(false, person)}}\n                                    className={classes.SaveButton}\n                                 >\n                                    YES, Restore this!\n                                </Button>\n                            </li>\n\n                            <li hidden={!(restoreMode.restore && restoreMode.person._id  === person._id)}>\n                                 <Button\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"default\"\n                                    disabled = {restoring}\n                                    onClick = {() => {handleRestoreModeChanged(false, null)}}\n                                    className={classes.CancelButton}\n                                 >\n                                    Cancel\n                                </Button>\n                            </li>\n\n                           {/*  ******************************************************************* */}\n\n                              {/* Edit Functionality ******************************************* */}\n\n                            <li hidden={person.deleted || deleteMode.delete || (editMode.edit && editMode.person._id === person._id)}>\n                                 <Button\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick = {() => {handleEditModeChanged(true, person)}}\n                                    className={classes.EditButton}\n                                 >\n                                    Edit Booking Info\n                                </Button>\n                            </li>\n\n                            <li hidden={!(editMode.edit && editMode.person._id  === person._id)}>\n                                 <Button\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    disabled = {saving}\n                                    onClick = {() => {handleEditModeChanged(false, person)}}\n                                    className={classes.SaveButton}\n                                 >\n                                    Save Changes\n                                </Button>\n                            </li>\n\n                            <li hidden={!(editMode.edit && editMode.person._id === person._id)}>\n                                 <Button\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"default\"\n                                    disabled = {saving}\n                                    onClick = {() => {handleEditModeChanged(false, null)}}\n                                    className={classes.CancelButton}\n                                 >\n                                    Cancel\n                                </Button>\n                            </li>\n                            \n                            {/* ****************************************************************************************** */}\n\n\n                            {/* Delete Functionality ******************************************* */}\n\n                            <li hidden={!(deleteMode.delete && deleteMode.person._id  === person._id)}>\n                              <div style={{fontWeight: \"600\",  paddingBottom: \"5px\", paddingLeft: \"5px\", fontSize:\"16px\"}}>\n                                Are you sure you want to delete this record?\n                              </div>\n                            </li>\n\n                            <li hidden={person.deleted ||  editMode.edit || (deleteMode.delete && deleteMode.person._id === person._id)}>\n                                 <Button\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick = {() => {handleDeleteModeChanged(true, person)}}\n                                    className={classes.DeleteButton}\n                                 >\n                                   Delete This Record\n                                </Button>\n                            </li>\n\n                            <li hidden={!(deleteMode.delete && deleteMode.person._id  === person._id)}>\n                                 <Button\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    disabled = {deleting}\n                                    onClick = {() => {handleDeleteModeChanged(false, person)}}\n                                    className={classes.SaveButton}\n                                 >\n                                    YES, Delete this!\n                                </Button>\n                            </li>\n\n                            <li hidden={!(deleteMode.delete && deleteMode.person._id === person._id)}>\n                                 <Button\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"default\"\n                                    disabled = {deleting}\n                                    onClick = {() => {handleDeleteModeChanged(false, null)}}\n                                    className={classes.CancelButton}\n                                 >\n                                    Cancel\n                                </Button>\n                            </li>\n                                 \n                            {/* ****************************************************************************************** */}\n\n                            <li className={classes.li}>\n                                <span className={classes.infoTitle}>BOOKED DATE</span> \n                            \n\n                                <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                   {FormatDateFromString(person.bookingDate) }\n                                  </span>  \n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                          <TextField \n                                                      fullWidth\n                                                      error={validationError.bookingDateError}\n                                                      className={classes.TextBox} \n                                                      value={bookingDate}\n                                                      onChange = {bookingDateChanged}\n                                                      inputProps= {{\n                                                          style:{\n                                                            padding: 0\n                                                          }\n                                                        }\n                                                      }\n                                                      > \n                                          </TextField> \n                                        </span> \n\n\n                            </li>\n\n                            <li className={classes.li}>\n                                <span className={classes.infoTitle}>BOOKED TIME</span> \n                                <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.bookingTime}</span>  \n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                          <TextField \n                                                      fullWidth\n                                                      error={validationError.bookingTimeError}\n                                                      className={classes.TextBox} \n                                                      value={bookingTime}\n                                                      onChange = {bookingTimeChanged}\n                                                      inputProps= {{\n                                                          style:{\n                                                            padding: 0\n                                                          }\n                                                        }\n                                                      }\n                                                      > \n                                          </TextField> \n                                        </span> \n\n\n                            </li>\n\n                            <li className={classes.li}>\n                            <span className={classes.infoTitle}>FULLNAME</span> \n                                        <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.fullname}</span>  \n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                        <TextField \n                                                      fullWidth\n                                                      className={classes.TextBox} \n                                                      value={fullname}\n                                                      onChange = {fullnameChanged}\n                                                      inputProps= {{\n                                                          style:{\n                                                            padding: 0\n                                                          }\n                                                        }\n                                                      }\n                                                      > \n                                          </TextField> \n                                        </span> \n                            </li>\n                            <li className={classes.li}>\n                                <span className={classes.infoTitle}>EMAIL</span> \n                                       <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.email}</span>  \n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                        <TextField \n                                                      fullWidth\n                                                      className={classes.TextBox} \n                                                      value={email}\n                                                      onChange = {emailChanged}\n                                                      inputProps= {{\n                                                          style:{\n                                                            padding: 0\n                                                          }\n                                                        }\n                                                      }\n                                                      > \n                                          </TextField> \n                                        </span>   \n                            </li>\n                            <li className={classes.li}>\n                                <span className={classes.infoTitle}>TEL</span>\n                                 <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.phone}</span>  \n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                        <TextField \n                                                      fullWidth\n                                                      className={classes.TextBox} \n                                                      value={tel}\n                                                      onChange = {telChanged}\n                                                      inputProps= {{\n                                                          style:{\n                                                            padding: 0\n                                                          }\n                                                        }\n                                                      }\n                                                      > \n                                          </TextField> \n                                        </span>  \n                            </li>\n                            <li className={classes.li}>\n                                <span className={classes.infoTitle}>SERVICE</span>\n                                 <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.service}</span>  \n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                        <TextField \n                                                      fullWidth\n                                                      className={classes.TextBox} \n                                                      value={service}\n                                                      onChange = {serviceChanged}\n                                                      inputProps= {{\n                                                          style:{\n                                                            padding: 0\n                                                          }\n                                                        }\n                                                      }\n                                                      > \n                                          </TextField> \n                                        </span>  \n                            </li>\n                            <li className={classes.li}>\n                                <span className={classes.infoTitle}>NOTES</span>\n                                 <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.notes}</span>  \n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                        <TextField \n                                                      fullWidth\n                                                      className={classes.TextBox} \n                                                      value={notes}\n                                                      onChange = {notesChanged}\n                                                      inputProps= {{\n                                                          style:{\n                                                            padding: 0\n                                                          }\n                                                        }\n                                                      }\n                                                      > \n                                          </TextField> \n                                        </span>  \n                            </li>\n                            <li className={classes.li}>\n                                <span className={classes.infoTitle}>STATUS</span> \n                                {getStatusLabel(person.status)} \n                            </li>\n      \n\n                        </ul>\n\n                    </AccordionDetails>\n                    </Accordion>\n                </div>\n            </Grid> \n          ))}\n    </Grid>\n    </React.Fragment>\n  );\n}\n","import React, { useEffect } from 'react';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport GlobalState from './../GlobalState';\nimport Alert from '@material-ui/lab/Alert';\nimport PropTypes from 'prop-types';\nimport MaskedInput from 'react-text-mask';\nimport { FormControl, Grid, Input, InputLabel } from '@material-ui/core';\nimport BookService from './services/BookService';\nimport PersonsBox from './PersonsBox';\nimport { width } from '@material-ui/system';\n\n\nconst isBoolean = (param) => typeof(param) === \"boolean\"\n\nconst useFocus = (initialFocus = false, id = \"\") => {\n    const [focus, setFocus] = React.useState(initialFocus)\n    const setFocusWithTrueDefault = (param) => setFocus(isBoolean(param)? param : true)\n    return ([\n        setFocusWithTrueDefault, {\n            autoFocus: focus,\n            key: `${id}${focus}`,\n            onFocus: () => setFocus(true),\n            onBlur: () => setFocus(false),\n        },\n    ])\n}\n\n\nfunction TextMaskCustom(props) {\n    const { inputRef, ...other } = props;\n  \n    return (\n      <MaskedInput\n        {...other}\n        ref={(ref) => {\n          inputRef(ref ? ref.inputElement : null);\n        }}\n        mask={[/\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/]}\n        // placeholderChar={'\\u2000'}\n        showMask\n      />\n    );\n  }\n  \n  TextMaskCustom.propTypes = {\n    inputRef: PropTypes.func.isRequired,\n  };\n\n\n\nconst useStyles = makeStyles((theme) => ({\n\n    root: {\n        width: '100%',\n        '& > * + *': {\n          marginTop: theme.spacing(2),\n        },\n        marginTop: \"20px\"\n      },  \n\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n\n    Find: {\n        width: \"80px\"\n    },\n\n    Clear:{\n        marginRight: \"20px\"\n    },\n\n    title:{\n        marginTop : \"20px\"\n    },\n\n    TextBox:{\n        marginTop: \"30px\",\n        \"& > *\" :\n        {\n            textAlign: \"center\"\n        },\n  \n    },\n\n    TextField:{\n\n    },\n\n    NoRecordsFound:{\n        marginTop: \"20px\",\n        color: \"red\",\n        fontWeight: \"600\",\n        fontSize: \"14px\",\n    },\n\n    PersonsBox:{\n        marginTop : \"20px\",\n        marginBottom: \"50px\",\n    }\n\n}));\n\nexport default function FindByRef() {\n  const classes = useStyles();\n  const [state, setState] = React.useContext(GlobalState);\n  \n  const [setFocus, focusProps] = useFocus(true);\n\n//   useEffect( () =>\n//   {\n//      findRecords();\n//   }, [state.findRecords]);\n\n useEffect ( () => {\n    setState(state => ({...state, foundRecords : []}));\n }, [])\n\n  useEffect( () => {\n    BookService.getBookingsByRef(state.ref).then( (res)=>\n    {\n        if (res.data.length > 0)\n        {\n            setState(state => ({...state, foundRecords : res.data}));\n        }\n    });\n    }, [state.RefreshPersonInfo]);\n\n    const handleChange = (event) =>\n    {\n        setState(state => ({...state, ref : event.target.value}));\n        setState(state => ({...state, refError : false})); \n    }\n\n    const clearField = () =>\n    {\n        setState(state => ({...state, refError : false})); \n        setState(state => ({...state, ref : '___-___-___'}));\n        setState(state => ({...state, foundRecords : []}));\n        setFocus();\n    }\n\n    const findRecords = () =>\n    {\n        if (!state.ref || state.ref.indexOf('_') >= 0)\n        {\n            setState(state => ({...state, refError : true}));  \n            return;\n        }\n\n        setState(state => ({...state, submiting : true}));\n        setState(state => ({...state, foundRecords : []}));\n\n        BookService.getBookingsByRef(state.ref).then( (res)=>\n        {\n            setState(state => ({...state, submiting : false}));\n            if (res.data.length > 0)\n            {\n                setState(state => ({...state, foundRecords : res.data}));\n            }\n            else\n            {\n                setState(state => ({...state, foundRecords : null}));\n            }\n            \n            console.log(res.data);\n\n        }).catch( (err) =>\n        {\n            console.log(err);\n            setState(state => ({...state, submiting : false}));\n        });\n    }\n\n  return (\n    <React.Fragment>\n        <CssBaseline />\n        <div className={classes.title}>\n            <Typography component=\"h6\" variant=\"h6\" align=\"center\">\n                Find Booking Appoinments\n            </Typography>  \n        </div> \n\n        <Grid container direction=\"column\" spacing={1} justify=\"flex-start\"  alignItems=\"center\">\n\n        <Grid item xs={12} md={12}>\n            <FormControl className={classes.TextBox}>\n                <TextField\n                    {...focusProps}\n                    autoFocus \n                    pattern=\"[0-9]*\"\n                    error = {state.refError ? true : false} \n                    value = {state.ref}\n                    className = {classes.TextField}\n                    width = \"50px\"\n                    onChange={handleChange}\n                    label=\"Reference No.\"\n                    helperText=\"Enter Your 9-digits Reference No.\"\n                    name=\"refNo\"\n                    id=\"refNo\"\n                    variant=\"outlined\"\n                    \n                    size=\"medium\"\n                    margin=\"normal\"\n                    fullWidth = {true}\n                    InputProps={{\n                        inputComponent: TextMaskCustom,\n                        style: { textAlign: 'center', fontSize:\"24px\", width: \"210px\", paddingLeft: \"20px\" }\n                    }}\n\n                    onKeyPress= {event => {\n                        if (event.key === 'Enter') {\n                            findRecords();\n                        }\n                      }}\n                />         \n            </FormControl>\n        </Grid>\n\n        <Grid item xs={12} md={12}>\n               \n                <Button\n                    disabled = {state.submiting}\n                    color=\"default\"\n                    onClick = {clearField}\n                    onTouchTap = {clearField}\n                    className={classes.Clear}\n                >\n                    Clear \n                </Button>  \n            \n                <Button\n                    type=\"button\"\n                    disabled = {state.submiting}\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick = {findRecords}\n                    onTouchTap = {findRecords}\n                    className={classes.Find}\n                >\n                    Find \n                </Button>  \n        </Grid>\n\n        <Grid item xs={12} md={12}>\n\n                    \n\n            {state.foundRecords && state.foundRecords.length > 0 && (\n                <React.Fragment>\n\n                    <div className={classes.PersonsBox}>\n                          <PersonsBox/>\n                    </div>\n                    \n\n\n                </React.Fragment>\n            )}   \n\n            {!state.foundRecords && (\n                <React.Fragment>\n\n                <div className={classes.root}>\n                    <Alert severity=\"error\"> <strong>No Records Found !</strong> <br/> Please check you reference number again.</Alert>\n                </div> \n                   \n                </React.Fragment>\n            )}\n\n        </Grid>\n        \n        \n        </Grid>\n        \n    </React.Fragment>\n   \n  );\n}","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport dateformat from 'dateformat';\nimport BookService from '../services/BookService';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport GlobalState from '../../GlobalState';\n\n\nconst useStyles = makeStyles((theme) => ({\n\n    Container: {\n        width: \"100%\",\n        paddingTop: \"70%\",\n        position: \"relative\",\n        backgroundColor: \"#fff\",\n        cursor: \"pointer\"\n    },\n\n    ContainerPast: {\n        width: \"100%\",\n        paddingTop: \"70%\",\n        position: \"relative\",\n        backgroundColor: \"#fafafa\"\n    },\n    \n    DayLabel: {\n        position: \"absolute\",\n        top: \"5px\",\n        right: \"5px\",\n        color: \"#555\",\n        fontSize: \"1rem\"\n    },\n\n    DayLabelToday: {\n        position: \"absolute\",\n        top: \"5px\",\n        right: \"5px\",\n        backgroundColor: \"#1a73e8\",\n        color: \"#fff\",\n        fontSize: \"1rem\",\n        borderRadius: \"50%\",\n        padding: \"5px\",\n        lineHight: \"35px\",\n        minWidth: \"35px\"\n    },\n\n    DayLabelDisabled: {\n        position: \"absolute\",\n        top: \"5px\",\n        right: \"5px\",\n        color: \"#ddd\",\n        fontSize: \"1rem\"\n    },\n\n    BookingCountLabel: {\n        position: \"absolute\",\n        top: \"35%\",\n        left: \"40%\",\n        color: \"#3f51b5\",\n        backgroundColor: \"#ebedf7\",\n        fontSize: \"16px\",\n        fontWeight: \"600\",\n        padding: \"10px\",\n        borderRadius: \"50%\",\n        minWidth: \"40px\",\n        lineHight: \"40px\",\n        cursor: \"pointer\",\n        textAlign: \"center\"\n    },\n\n    BookingCountLabelBusy: {\n        position: \"absolute\",\n        top: \"35%\",\n        left: \"40%\",\n        color: \"#b00000\",\n        backgroundColor: \"#fce6e6\",\n        fontSize: \"16px\",\n        fontWeight: \"600\",\n        padding: \"10px\",\n        borderRadius: \"50%\",\n        minWidth: \"40px\",\n        cursor: \"pointer\",\n        textAlign: \"center\"\n    },\n\n    LoadingProgress: {\n        position: \"absolute\",\n        top: \"40%\",\n        left: \"40%\",\n      },\n\n      BookingCountGauge: {\n        position: \"absolute\",\n        bottom: \"5%\",\n        left: \"8%\",\n        width : \"8%\",\n        height: \"85%\"\n    },\n\n  }));\n\nconst MAX_BOOKING_COUNT = 10;  \n\nconst MonthViewCell = ({key, cellIndex, month, daysInMonth, dayClicked}) => {\n    const classes = useStyles();\n\n    const [state, setState] = React.useContext(GlobalState);\n\n    const [dateStr, setDateStr] = React.useState('');\n\n    const [cellDate, setCellDate] = React.useState(new Date());\n\n    const [bookingsCount, setBookingsCount] = React.useState(-1);\n\n    const [disableDay, setDisableDay] = React.useState(false);\n\n    const [isPast, setIsPast] = React.useState(false);\n\n    useEffect( () => {\n\n        if (cellIndex <= daysInMonth.length)\n        {\n            const date = daysInMonth[cellIndex - 1];\n            const dateStr = dateformat(date, 'yyyy-mm-dd');\n            setDateStr(dateStr);\n            setCellDate(date);\n            setDisableDay(date.getMonth() !== month - 1);\n            const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\n            setIsPast(dateStr < todayStr);\n        }\n        else\n        {\n            const day = cellIndex - daysInMonth.length;\n            const date = new Date((daysInMonth[daysInMonth.length - 1].getTime() + ( day * 86400000)));\n            const dateStr = dateformat(date, 'yyyy-mm-dd');\n            setDateStr(dateStr);\n            setCellDate(date);\n            setDisableDay(true);\n            const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\n            setIsPast(dateStr < todayStr);\n        }\n\n    }, [cellIndex, month, daysInMonth]);\n\n    useEffect ( () => {\n\n        const fecthData = async () =>\n        {\n            if (!dateStr || dateStr.length <= 0)\n            {\n                return;\n            }\n        \n            if (disableDay)\n            {\n                setBookingsCount(-2);\n                return;\n            }\n\n            setBookingsCount(-1);\n\n            var res = state.AdminCalendarCache?.find(record => record.method === 'getBookingsCountByDateStr' && record.query === dateStr)?.res;\n\n            if (!res)\n            {\n                res = await BookService.getAllBookingsCountByDateStr(dateStr);\n                setState(state => ({...state, AdminCalendarCache : [...state.AdminCalendarCache, {method: 'getBookingsCountByDateStr' , query : dateStr, res: res}]}));\n            }\n        \n            if (res.data.count >= 0)\n            {\n                setBookingsCount(res.data.count);\n            }\n\n        }\n\n      fecthData();\n\n    }, [dateStr]);\n\n    const getDayLabel = (_cellIndex , _month , _daysInMonth) =>\n    {\n        var date = null;\n        var disabled = false;\n        var day = -1;\n\n    \n\n        if (_cellIndex <= _daysInMonth.length)\n        {\n            date = _daysInMonth[_cellIndex - 1];\n            day = date.getDate();\n            if (date.getMonth() !== _month - 1)\n            {\n                disabled = true;\n            }\n        }\n        else\n        {\n            const _day = _cellIndex - _daysInMonth.length;\n            const date = new Date((_daysInMonth[_daysInMonth.length - 1].getTime() + ( _day * 86400000)));\n            day = date.getDate();\n            disabled = true;\n        }\n\n        const isToday = dateformat(new Date(),'yyyy-mm-dd') === dateformat(date, 'yyyy-mm-dd');\n\n        return (\n            <span className={(disabled) ? classes.DayLabelDisabled : isToday ? classes.DayLabelToday : classes.DayLabel}>\n                 {day > 0 ? `${day}` : ''}\n             </span>\n        );\n    }\n\n    const getBookingsCountLabel = (_bookingsCount) =>\n    {\n        if (_bookingsCount === -1)\n        {\n            return (\n                <div className={classes.LoadingProgress}>\n                      <CircularProgress disableShrink  />\n                </div>\n            );  \n        }\n        else if (_bookingsCount > 0 )\n        {\n            if (_bookingsCount >= MAX_BOOKING_COUNT / 2)\n            {\n                return (\n                    <div onClick={(event => dayClicked(event,cellDate))} className={classes.BookingCountLabelBusy}>\n                        {_bookingsCount < 10 ?  ` ${_bookingsCount}` : `${_bookingsCount}`}\n                    </div>\n                );\n            }\n            else\n            {\n                return (\n                    <div onClick={(event => dayClicked(event,cellDate))} className={classes.BookingCountLabel}>\n                          {_bookingsCount < 10 ?  ` ${_bookingsCount}` : `${_bookingsCount}`}\n                    </div>\n                );\n            }\n        }\n    }\n\n    const getBookingsCountGauge = (_bookingsCount) =>\n    {\n        if (_bookingsCount > 0)\n        {\n            let percent = (_bookingsCount / MAX_BOOKING_COUNT) * 100;\n            if (percent > 100)\n            {\n                percent = 100;\n            }\n\n            percent = 100 - percent;\n\n            return (\n\n                <div className={classes.BookingCountGauge}>\n                  <div style={{padding:\"0\", margin:\"0\", width:\"100%\", height:\"100%\", backgroundColor: \"#3f51b5\"}} >\n                        <div  style={{padding:\"0\", margin:\"0\", width:\"100%\", height:`${percent}%`, backgroundColor: \"#fafafa\"}} >\n\n                        </div>\n                  </div>\n                </div>\n            );\n        }\n    }\n\n    return (\n        <React.Fragment>\n\n            <div className={classes.Container} onClick={(event => dayClicked(event,cellDate))}>\n\n              {getDayLabel(cellIndex, month, daysInMonth)}\n\n              {getBookingsCountLabel(bookingsCount)}\n\n              {getBookingsCountGauge(bookingsCount)}\n\n            </div>\n\n        </React.Fragment>\n\n\n    );\n}\n\nMonthViewCell.propTypes = {\n    key: PropTypes.string.isRequired,\n    cellIndex: PropTypes.number.isRequired,\n    month: PropTypes.number.isRequired,\n    daysInMonth: PropTypes.arrayOf(PropTypes.date),\n    dayClicked: PropTypes.func\n  };\n\n \n  \nexport default MonthViewCell;","import calendar from 'node-calendar';\n\n\nexport default class CalendarUtil {\n\n    static getMonthRange = (month , year) =>\n    {\n        return new calendar.Calendar(calendar.SUNDAY).itermonthdates(year, month);\n    } \n\n} ","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport MonthViewCell from './MonthViewCell';\nimport CalendarUtil from './calendar-util';\n\nconst dayLables = ['Sun', 'Mon', 'Tue', 'Wed' , 'Thu', 'Fri', 'Sat'];\nconst days = [1,2,3,4,5,6,7]; \nconst rows = [1,2,3,4,5,6];\n\nconst useStyles = makeStyles((theme) => ({\n\n    table: {\n        width: \"100%\",\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n    },\n\n    th: {\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        verticalAlign: \"middle\",\n        fontcolor: \"#555\",\n        fontWeight: \"400\",\n        fontSize: \"15px\",\n        paddingTop: \"5px\",\n        paddingBottom: \"5px\",\n        width: \"14%\"\n    },\n\n    td: {\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        verticalAlign: \"middle\",\n    }\n\n  }));\n\nconst MonthView = ({month, year, dayClicked}) => {\n    const classes = useStyles();\n\n    const daysInMonth = CalendarUtil.getMonthRange(month,year);\n\n    return (\n        <React.Fragment>\n\n            <table className={classes.table}>\n                <thead>\n                    <tr>\n                        {dayLables.map(label => (\n                            <th key={`th-${label}`} className={classes.th}>\n                                {label}\n                            </th>\n                        ))}\n                    </tr>\n                </thead>\n                <tbody>\n                    {rows.map(row => (\n                        <tr>\n                            {days.map(day => (\n                                <td className={classes.td}>\n                                    <MonthViewCell \n                                        key={`${month}${year}${(row-1) * days.length + day}`} \n                                        cellIndex={(row-1) * days.length + day} \n                                        month={month} \n                                        daysInMonth={daysInMonth}\n                                        dayClicked = {dayClicked}\n                                        />\n                                </td>\n                            ))}\n                        </tr>\n                    ))}            \n                </tbody>\n\n            </table>\n\n      \n        </React.Fragment>\n\n\n    );\n}\n\nMonthView.propTypes = {\n    month: PropTypes.number.isRequired,\n    year: PropTypes.number.isRequired,\n    dayClicked: PropTypes.func\n  };\n\n\nexport default MonthView;","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport dateformat from 'dateformat';\nimport BookService from '../services/BookService';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport GlobalState from '../../GlobalState';\n\nimport axios from 'axios'\n\nconst useStyles = makeStyles((theme) => ({\n\n    Container: {\n        width: \"100%\",\n        paddingTop: \"40%\",\n        position: \"relative\",\n        backgroundColor: \"#fff\",\n        cursor: \"pointer\"\n    },\n\n    ContainerPast: {\n        width: \"100%\",\n        paddingTop: \"40%\",\n        position: \"relative\",\n        backgroundColor: \"#fafafa\",\n        cursor: \"pointer\"\n    },\n    \n    DayLabel: {\n        position: \"absolute\",\n        top: \"5px\",\n        right: \"5px\",\n        color: \"#555\",\n        fontSize: \"1rem\"\n    },\n\n    DayLabelDisabled: {\n        position: \"absolute\",\n        top: \"5px\",\n        right: \"5px\",\n        color: \"#ddd\",\n        fontSize: \"1rem\"\n    },\n\n    BookingCountLabel: {\n        position: \"absolute\",\n        top: \"25%\",\n        left: \"38%\",\n        color: \"#3f51b5\",\n        backgroundColor: \"#ebedf7\",\n        fontSize: \"14px\",\n        fontWeight: \"600\",\n        padding: \"5px\",\n        borderRadius: \"50%\",\n        minWidth: \"30px\",\n        cursor : \"pointer\",\n        textAlign: \"center\"\n    },\n\n    BookingCountLabelBusy: {\n        position: \"absolute\",\n        top: \"25%\",\n        left: \"38%\",\n        color: \"#b00000\",\n        backgroundColor: \"#fce6e6\",\n        fontSize: \"14px\",\n        fontWeight: \"600\",\n        padding: \"5px\",\n        borderRadius: \"50%\",\n        minWidth: \"30px\",\n        cursor : \"pointer\",\n        textAlign: \"center\"\n    },\n\n    LoadingProgress: {\n        position: \"absolute\",\n        top: \"40%\",\n        left: \"40%\",\n      },\n\n      BookingCountGauge: {\n        position: \"absolute\",\n        bottom: \"5%\",\n        left: \"8%\",\n        width : \"85%\",\n        height: \"8%\"\n    },\n\n  }));\n\nconst MAX_BOOKING_COUNT = 1;  \n\nconst WeekViewCell = ({key, date, time, dayClicked}) => {\n    const classes = useStyles();\n\n    const [state, setState] = React.useContext(GlobalState);\n    const [bookingsCount, setBookingsCount] = React.useState(-1);\n    const [isPast, setIsPast] = React.useState(false);\n\n    const [cellDate, setCellDate] = React.useState(new Date());\n\n    useEffect( () => {\n        const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\n        setIsPast(date < todayStr);\n\n        setCellDate(new Date(date));\n\n    }, [date]);\n\n    useEffect ( () => {\n      \n      \n      \n        if (!date || date.length <= 0 || !time || time.length <= 0)\n        {\n            return;\n        }\n        \n        // if (isPast)\n        // {\n        //     setBookingsCount(-2);\n        //     return;\n        // }\n\n        setBookingsCount(-1);\n\n       \n\n        var res = state.AdminCalendarCache?.find(record => record.method === 'getBookingsCountByDateStrandTime' && record.query === `${date}${time}`)?.res;\n        if (res)\n        {\n            if (res.data.count >= 0)\n            {\n                setBookingsCount(res.data.count);\n            }  \n            return;\n        }\n\n        let source = axios.CancelToken.source();\n        BookService.getAllBookingsCountByDateStrandTime(date, time, source).then( res => {\n            if (res.data.count >= 0)\n            {\n                setBookingsCount(res.data.count);\n                setState(state => ({...state, AdminCalendarCache : [...state.AdminCalendarCache, {method: 'getBookingsCountByDateStrandTime' , query : `${date}${time}`, res: res}]}));\n            }  \n        }).catch( err => \n            {\n                //do nothing\n            });\n     \n        return () => {\n           if (source)\n              source.cancel('Cancelling in cleanup');\n        }\n     \n    }, [date, time]);\n\n\n    const getBookingsCountLabel = (_bookingsCount) =>\n    {\n        if (_bookingsCount === -1)\n        {\n            return (\n                <div className={classes.LoadingProgress}>\n                      <CircularProgress disableShrink  />\n                </div>\n            );  \n        }\n        else if (_bookingsCount > 0)\n        {\n            if (_bookingsCount >= MAX_BOOKING_COUNT)\n            {\n                return (\n                    <div onClick={(event => dayClicked(event,cellDate))} className={classes.BookingCountLabelBusy}>\n                          {_bookingsCount < 10 ? ` ${_bookingsCount}` : `${_bookingsCount}` }\n                    </div>\n                );\n            }\n            else\n            {\n                return (\n                    <div onClick={(event => dayClicked(event,cellDate))} className={classes.BookingCountLabel}>\n                        {_bookingsCount < 10 ? ` ${_bookingsCount}` : `${_bookingsCount}` }\n                    </div>\n                );\n            }\n        }\n    }\n\n    const getBookingsCountGauge = (_bookingsCount) =>\n    {\n        if (_bookingsCount > 0 )\n        {\n            let percent = (_bookingsCount / MAX_BOOKING_COUNT) * 100;\n            if (percent > 100)\n            {\n                percent = 100;\n            }\n\n            // percent = 100 - percent;\n\n            return (\n\n                <div className={classes.BookingCountGauge}>\n                  <div style={{padding:\"0\", margin:\"0\", width:\"100%\", height:\"100%\", backgroundColor: \"#f5f5f5\"}} >\n                        <div  style={{padding:\"0\", margin:\"0\", height:\"100%\", width:`${percent}%`, backgroundColor: \"#3f51b5\"}} >\n\n                        </div>\n                  </div>\n                </div>\n            );\n        }\n    }\n\n    return (\n        <React.Fragment>\n\n            <div className={isPast ? classes.ContainerPast : classes.Container} onClick={(event => dayClicked(event,cellDate))}>\n\n              {getBookingsCountLabel(bookingsCount)}\n\n              {getBookingsCountGauge(bookingsCount)}\n\n            </div>\n\n        </React.Fragment>\n\n\n    );\n}\n\nWeekViewCell.propTypes = {\n    key: PropTypes.string.isRequired,\n    date: PropTypes.string.isRequired,\n    time: PropTypes.string.isRequired,\n    dayClicked: PropTypes.func\n  };\n\n \n  \nexport default WeekViewCell;","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport WeekViewCell from './WeekViewCell';\nimport dateformat from 'dateformat';\n\nconst rows = [\n    '10:00 AM',\n    '10:30 AM', \n    '11:00 AM', \n    '11:30 AM', \n    '12:00 PM',\n    '12:30 PM',\n    '01:00 PM',\n    '01:30 PM',\n    '02:00 PM',\n    '02:30 PM',\n    '03:00 PM',\n    '03:30 PM',\n    '04:00 PM',\n    '04:30 PM',\n    '05:00 PM',\n    '05:30 PM',\n];\n\n\n\nconst useStyles = makeStyles((theme) => ({\n\n    table: {\n        width: \"100%\",\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        overflowY: \"auto\"\n    },\n\n    th: {\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        verticalAlign: \"middle\",\n        fontcolor: \"#555\",\n        fontWeight: \"400\",\n        fontSize: \"15px\",\n        paddingTop: \"5px\",\n        paddingBottom: \"5px\",\n        width: \"12%\", \n    },\n\n    td: {\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        verticalAlign: \"middle\",\n        height : \"50px\",\n        width: \"12%\", \n    }\n\n  }));\n\nconst WeekView = ({dates, dayClicked}) => {\n    const classes = useStyles();\n\n    return (\n        <React.Fragment>\n\n        <div style={{overflowY: \"scroll\" , height: \"60px\"}}>\n            <table className={classes.table}>\n                <thead>\n                    <tr>\n                        <th style={{width: \"7%\"}}>\n                        \n                        </th>\n                            {dates.map(date => (\n                                <th className={classes.th}>\n                                    <div style={{paddingBottom: \"5px\", color: \"#aaa\"}}>\n                                         {dateformat(date, 'ddd')}\n                                    </div>\n                                    <div>\n                                        <span style={{color: \"#aaa\"}}>\n                                            {dateformat(date, 'mmm ')}\n                                        </span> \n                                        <span  style={(dateformat(new Date(),'yyyy-mm-dd') === dateformat(date, 'yyyy-mm-dd')) ? { backgroundColor: \"#1a73e8\", color: \"#fff\", borderRadius: \"50%\",  padding: \"5px\",} : {color: \"#333\", fontWeight:\"500\"}}>\n                                             {dateformat(date, ' d')}\n                                        </span>\n                                       \n                                    </div>\n                                </th>\n                        ))}\n                    </tr>\n                </thead>\n             </table>\n\n        </div>\n\n            <div style={{overflowY: \"scroll\" , height: \"70vh\"}}>\n                <table className={classes.table}>   \n                    <tbody>\n                        {rows.map(row => (\n                            <tr>\n                                <td style={{width: \"7%\"}}>\n                                    {row}\n                                </td>\n                                {dates.map(day => (\n                                    <td className={classes.td}>\n                                        <WeekViewCell \n                                                dayClicked = {dayClicked}\n                                                key={`${dateformat(day,'yyyy-mm-dd')}-${row.replace(':','-')}`} \n                                                date={dateformat(day,'yyyy-mm-dd')} \n                                                time={row}/>\n                                    </td>\n                                ))}\n                            </tr>\n                        ))}            \n                    </tbody>\n                </table>\n            </div>                    \n      \n        </React.Fragment>\n\n\n    );\n}\n\nWeekView.propTypes = {\n    dates: PropTypes.arrayOf(PropTypes.any).isRequired,\n    dayClicked: PropTypes.func\n  };\n\n\nexport default WeekView;","import React, { useEffect, useRef, useState } from \"react\";\nimport BookService from \"./services/BookService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {\n  Backdrop,\n  Button,\n  Checkbox,\n  CircularProgress,\n  Divider,\n  FormControlLabel,\n  Grid,\n  InputAdornment,\n  InputLabel,\n  Link,\n  makeStyles,\n  MenuItem,\n  Select,\n  Switch,\n  TextField,\n  Tooltip,\n} from \"@material-ui/core\";\nimport GlobalState from \"../GlobalState\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport CreditCardIcon from \"@material-ui/icons/CreditCard\";\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\n\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Draggable from \"react-draggable\";\nimport Paper from \"@material-ui/core/Paper\";\n\nimport Alert from \"@material-ui/lab/Alert\";\n\nimport PropTypes from \"prop-types\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport Box from \"@material-ui/core/Box\";\n\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport { corporates } from \"./Corporates\";\nimport NumberFormat from \"react-number-format\";\n\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { validate } from \"email-validator\";\nimport DateRangeIcon from \"@material-ui/icons/DateRange\";\nimport { CalendarColors } from \"../Admin/calendar-admin/colors\";\n\nvar interval;\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    marginTop: theme.spacing(0),\n    marginBottom: theme.spacing(1),\n  },\n\n  refreshButton: {\n    marginLeft: theme.spacing(2),\n  },\n\n  checkIcon: {\n    color: \"green\",\n  },\n\n  closeIcon: {\n    color: \"red\",\n  },\n\n  RefLink: {\n    cursor: \"pointer\",\n  },\n\n  BookedLabel: {\n    backgroundColor: \"#606060\",\n    color: \"#fff\",\n    paddingRight: \"10px\",\n    paddingLeft: \"10px\",\n  },\n\n  PatientAttendedLabel: {\n    backgroundColor: \"#0066aa\",\n    color: \"#fff\",\n    paddingRight: \"15px\",\n    paddingLeft: \"10px\",\n  },\n\n  SampleTakenLabel: {\n    backgroundColor: \"#0066cc\",\n    color: \"#fff\",\n    paddingRight: \"40px\",\n    paddingLeft: \"10px\",\n  },\n\n  ReportSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"90px\",\n    paddingLeft: \"10px\",\n  },\n\n  ReportCertSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"68px\",\n    paddingLeft: \"10px\",\n  },\n\n  archiveButton: {},\n\n  smartMatchButton: {\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    marginRight: \"10px\",\n    // padding: \"10px\"\n  },\n\n  infoTitle: {\n    fontWeight: \"400\",\n  },\n\n  infoData: {\n    paddingLeft: \"10px\",\n    fontWeight: \"800\",\n  },\n\n  matchButton: {\n    marginTop: \"30px\",\n    marginBottom: \"20px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  resendButton: {\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  resendFilesButton: {\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n    backgroundColor: \"#3792ad\",\n    \"&:hover\": {\n      background: \"#2f798f\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  cancelButton: {\n    marginBottom: \"10px\",\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"90px\",\n    paddingRight: \"90px\",\n  },\n\n  CalendarIcon: {\n    color: theme.palette.primary.main,\n  },\n\n  DateTimeLabel: {\n    fontWeight: \"500\",\n    color: theme.palette.primary.main,\n  },\n\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 5,\n    color: \"#fff\",\n  },\n\n  PriceLabelPaid:{\n    color: theme.palette.primary.main,\n    fontWeight: \"600\"\n  },\n\n  PriceLabelNotPaid:{\n    color: theme.palette.secondary.main,\n    fontWeight: \"600\"\n  },\n\n\n}));\n\nconst Packages = [\n  { packageName: \"Consultation with Consultant Gynaecologist\" },\n  { packageName: `Coil Fitting/Coil Removal` },\n  { packageName: `Well Woman Check` },\n  { packageName: `Sexual Health Screening` },\n  { packageName: `Pre-pregnancy/Fertility check` },\n  { packageName: `Gynaecological Ultrasound` },\n  { packageName: `HPV Vaccination` },\n  { packageName: `Cervical / Pap Smear` },\n  { packageName: `HPV Treatment / Wart Cryo-Therapy` },\n];\n\nfunction NumberFormatCustom(props) {\n  const { inputRef, onChange, ...other } = props;\n\n  return (\n    <NumberFormat\n      {...other}\n      getInputRef={inputRef}\n      onValueChange={(values) => {\n        onChange({\n          target: {\n            name: props.name,\n            value: values.value,\n          },\n        });\n      }}\n      thousandSeparator\n      isNumericString\n      prefix=\"\"\n    />\n  );\n}\n\nNumberFormatCustom.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nconst BorderLinearProgress = withStyles((theme) => ({\n  root: {\n    height: 10,\n    borderRadius: 5,\n  },\n  colorPrimary: {\n    backgroundColor: \"#cedbce\", //theme.palette.grey[theme.palette.type === 'light' ? 200 : 700],\n  },\n  bar: {\n    borderRadius: 5,\n    backgroundColor: \"#2f942e\",\n  },\n}))(LinearProgress);\nfunction LinearProgressWithLabel(props) {\n  return (\n    <Box display=\"flex\" alignItems=\"center\">\n      <Box width=\"100%\" mr={1}>\n        <BorderLinearProgress variant=\"determinate\" {...props} />\n      </Box>\n      <Box minWidth={35}>\n        <Typography\n          style={{ fontWeight: \"800\", color: \"#5e855e\" }}\n          variant=\"body2\"\n          color=\"textSecondary\"\n        >{`${Math.round(props.value)}%`}</Typography>\n      </Box>\n    </Box>\n  );\n}\n\nLinearProgressWithLabel.propTypes = {\n  /**\n   * The value of the progress indicator for the determinate and buffer variants.\n   * Value between 0 and 100.\n   */\n  value: PropTypes.number.isRequired,\n};\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable\n      handle=\"#draggable-dialog-title\"\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\n    >\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nexport default function NewBookingDialog(props) {\n  const classes = useStyles();\n\n  const [state, setState] = React.useContext(GlobalState);\n  const [saving, setSaving] = useState(false);\n\n  const [fullname, setFullname] = React.useState(\"\");\n  const [fullnameError, setFullnameError] = React.useState(false);\n\n  const [phone, setPhone] = React.useState(\"\");\n  const [email, setEmail] = React.useState(\"\");\n  const [service, setService] = React.useState(\"\");\n  const [notes, setNotes] = React.useState(\"\");\n\n  const [deposit, setDeposit] = React.useState(false);\n\n  const depositChanged = (event) => {\n    setDeposit(event.target.checked);\n  };\n\n  const fullnameChanged = (event) => {\n    setFullname(event.target.value);\n    setFullnameError(false);\n  };\n\n  const phoneChanged = (event) => {\n    setPhone(event.target.value);\n  };\n\n  const emailChanged = (event) => {\n    setEmail(event.target.value);\n  };\n\n  const serviceChanged = (event) => {\n    setService(event.target.value);\n  };\n\n  const notesChanged = (event) => {\n    setNotes(event.target.value);\n  };\n\n  const handleClose = () => {\n    if (saving) return;\n\n    setFullname(\"\");\n    setFullnameError(false);\n    setPhone(\"\");\n    setEmail(\"\");\n    setService(\"\");\n    setNotes(\"\");\n    setDeposit(false);\n\n    props.handleClose();\n    setSaving(false);\n  };\n\n  const validateBooking = () => {\n    let error = false;\n    if (!fullname || fullname.trim().length < 1) {\n      setFullnameError(true);\n      error = true;\n    }\n    return !error;\n  };\n\n  const saveClicked = async () => {\n    if (!validateBooking()) {\n      return;\n    }\n\n    setSaving(true);\n\n    try {\n      await BookService.addNewBooking({\n        bookingDate: props.date,\n        bookingTime: props.time,\n        fullname: fullname,\n        phone: phone,\n        email: email,\n        service: service,\n        notes: notes,\n        deposit: deposit ? 100 : 0,\n      });\n      setSaving(false);\n      setState((state) => ({\n        ...state,\n        bookingDialogDataChanged: !state.bookingDialogDataChanged\n          ? true\n          : false,\n      }));\n      handleClose();\n    } catch (err) {\n      console.error(err);\n      setSaving(false);\n    }\n  };\n\n  return (\n    <React.Fragment>\n      {props.date && props.time && (\n        <React.Fragment>\n          <Dialog\n            maxWidth=\"xs\"\n            open={props.open}\n            onClose={handleClose}\n            PaperComponent={PaperComponent}\n            aria-labelledby=\"form-dialog-title\"\n          >\n            <DialogTitle id=\"draggable-dialog-title\" style={{position:\"relative\"}}>\n              <Grid\n                container\n                spacing={2}\n                direction=\"row\"\n                justify=\"center\"\n                alignItems=\"center\"\n              >\n                <Grid item>\n                  <AddIcon style={{ color: \"#f50057\", fontSize: \"3rem\" }} />\n                </Grid>\n\n                <Grid item>\n                  <div\n                    style={{\n                      color: \"#f50057\",\n                      paddingBottom: \"10px\",\n                      fontWeight: \"800\",\n                    }}\n                  >\n                    {\" \"}\n                    ADD New Booking{\" \"}\n                  </div>\n                </Grid>\n              </Grid>\n\n              <div style={{position:\"absolute\", top: \"5px\", right: \"5px\", backgroundColor:CalendarColors.GYNAE_COLOR, color:\"#fff\", padding: \"0px 5px\", borderRadius:\"10px\", fontSize:\"1rem\"}}>\n                    GYNAE\n              </div>\n\n              <Divider />\n            </DialogTitle>\n            <DialogContent>\n              <div\n                style={{\n                  height: \"480px\",\n                }}\n              >\n                <Grid\n                  container\n                  direction=\"row\"\n                  justify=\"stretch\"\n                  spacing={2}\n                  alignItems=\"center\"\n                >\n                  <Grid item xs={12}>\n                    <Grid\n                      container\n                      direction=\"row\"\n                      justify=\"center\"\n                      alignItems=\"center\"\n                      spacing={1}\n                    >\n                      <Grid item>\n                        <DateRangeIcon className={classes.CalendarIcon} />\n                      </Grid>\n                      <Grid item>\n                        <span className={classes.DateTimeLabel}>\n                          {props.date} , {props.time}\n                        </span>\n                      </Grid>\n                    </Grid>\n                  </Grid>\n\n                  <Grid item xs={12}>\n                    <TextField\n                      fullWidth\n                      autoFocus\n                      error={fullnameError}\n                      label=\"Full Name\"\n                      value={fullname}\n                      required\n                      onChange={fullnameChanged}\n                      name=\"fullname\"\n                      id=\"fullname-id\"\n                      autoComplete=\"none\"\n                    />\n                  </Grid>\n\n                  <Grid item xs={12}>\n                    <TextField\n                      fullWidth\n                      label=\"Telephone\"\n                      value={phone}\n                      onChange={phoneChanged}\n                      name=\"phone\"\n                      id=\"phone-id\"\n                      autoComplete=\"none\"\n                    />\n                  </Grid>\n\n                  <Grid item xs={12}>\n                    <TextField\n                      fullWidth\n                      label=\"Email\"\n                      value={email}\n                      onChange={emailChanged}\n                      name=\"email\"\n                      id=\"email-id\"\n                      autoComplete=\"none\"\n                    />\n                  </Grid>\n\n                  <Grid item xs={12} md={12}>\n                    <FormControl className={classes.formControl} fullWidth>\n                      <InputLabel id=\"service-label-id\">Service</InputLabel>\n                      <Select\n                        fullWidth\n                        labelId=\"service-label-id\"\n                        id=\"service-id\"\n                        value={service}\n                        onChange={serviceChanged}\n                      >\n                        {Packages.map((item) => (\n                          <MenuItem value={item.packageName}>\n                            {item.packageName}\n                          </MenuItem>\n                        ))}\n                      </Select>\n                    </FormControl>\n                  </Grid>\n\n                  <Grid item xs={12}>\n                    <TextField\n                      fullWidth\n                      label=\"Notes\"\n                      value={notes}\n                      onChange={notesChanged}\n                      name=\"notes\"\n                      id=\"notes-id\"\n                      autoComplete=\"none\"\n                    />\n                  </Grid>\n\n                  <Grid otem xs={12} style={{marginTop:\"15px\"}}>\n                    <FormControlLabel\n                      control={\n                        <Switch\n                          color=\"primary\"\n                          checked={deposit}\n                          onChange={depositChanged}\n                          name=\"deposit\"\n                        />\n                      }\n                      label={deposit ? <span className={classes.PriceLabelPaid}>£100 Deposit Paid</span> : <span className={classes.PriceLabelNotPaid}>£100 Deposit Not Paid</span>}\n                    />\n                  </Grid>\n                </Grid>\n\n                <div\n                  style={{\n                    position: \"absolute\",\n                    bottom: \"20px\",\n                    right: \"20px\",\n                  }}\n                >\n                  <Grid\n                    container\n                    direction=\"row\"\n                    justify=\"flex-end\"\n                    alignItems=\"center\"\n                    spacing={1}\n                  >\n                    <Grid item>\n                      <Button\n                        onClick={handleClose}\n                        style={{ width: \"100px\" }}\n                        disabled={saving}\n                      >\n                        back\n                      </Button>\n                    </Grid>\n                    <Grid item>\n                      <Button\n                        onClick={saveClicked}\n                        variant=\"contained\"\n                        color=\"secondary\"\n                        style={{ width: \"100px\" }}\n                        disabled={saving}\n                      >\n                        Save\n                      </Button>\n                    </Grid>\n                  </Grid>\n                </div>\n              </div>\n\n              <Backdrop className={classes.backdrop} open={saving}>\n                <CircularProgress color=\"inherit\" />\n              </Backdrop>\n            </DialogContent>\n          </Dialog>\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport PropTypes from \"prop-types\";\nimport dateformat from \"dateformat\";\nimport BookService from \"../services/BookService\";\n\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport GlobalState from \"../../GlobalState\";\nimport BookingDialog from \"../BookingDialog\";\nimport NewBookingDialog from \"../NewBookingDialog\";\n\nconst useStyles = makeStyles((theme) => ({\n  Container: {\n    width: \"100%\",\n    height: \"50px\",\n    position: \"relative\",\n    backgroundColor: \"#fff\",\n    display: \"flex\",\n    alignItems: \"flex-start\",\n    justifyItems: \"flex-start\",\n    paddingLeft: \"10px\",\n  },\n\n  ContainerPast: {\n    width: \"100%\",\n    paddingTop: \"50px\",\n    position: \"relative\",\n    backgroundColor: \"#fafafa\",\n  },\n\n  DayLabel: {\n    position: \"absolute\",\n    top: \"5px\",\n    right: \"5px\",\n    color: \"#555\",\n    fontSize: \"1rem\",\n  },\n\n  DayLabelDisabled: {\n    position: \"absolute\",\n    top: \"5px\",\n    right: \"5px\",\n    color: \"#ddd\",\n    fontSize: \"1rem\",\n  },\n\n  LoadingProgress: {\n    position: \"absolute\",\n    top: \"10%\",\n    left: \"40%\",\n  },\n\n  BookingCountGauge: {\n    position: \"absolute\",\n    bottom: \"5%\",\n    left: \"8%\",\n    width: \"85%\",\n    height: \"8%\",\n  },\n\n  bookingBox: {\n    display: \"flex\",\n    marginRight: \"10px\",\n    marginTop: \"5px\",\n    padding: \"10px\",\n    maxWidth: \"150px\",\n    overflowX: \"hidden\",\n    border: \"1px solid #eee\",\n    fontSize: \"12px\",\n    fontWeight: \"500\",\n    cursor: \"pointer\",\n    backgroundColor: \"#ebedf7\",\n    color: \"#3f51b5\",\n    boxShadow: \"2px 4px #fafafa\",\n\n    \"&:hover\": {\n      background: \"#3f51b5\",\n      color: \"#ebedf7\",\n    },\n  },\n\n  bookingBoxNew: {\n    display: \"flex\",\n    marginRight: \"10px\",\n    marginTop: \"5px\",\n    padding: \"10px\",\n    maxWidth: \"150px\",\n    overflowX: \"hidden\",\n    border: \"1px solid #ddd\",\n    color: \"#ccc\",\n    fontSize: \"12px\",\n    fontWeight: \"500\",\n    cursor: \"pointer\",\n    backgroundColor: \"#fff\",\n\n    boxShadow: \"2px 4px #fafafa\",\n    transition: \"all 0.5s ease\",\n    borderRadius: \"4px\",\n\n    \"&:hover\": {\n      background: \"#fff\",\n      color: theme.palette.secondary.main,\n      borderColor:  theme.palette.secondary.main,\n    },\n  },\n\n  bookingBoxSampleTaken: {\n    display: \"flex\",\n    marginRight: \"10px\",\n    marginTop: \"5px\",\n    padding: \"10px\",\n    maxWidth: \"150px\",\n    overflowX: \"hidden\",\n    border: \"1px solid #eee\",\n    fontSize: \"12px\",\n    fontWeight: \"500\",\n    cursor: \"pointer\",\n    backgroundColor: \"#0066cc\",\n    color: \"#eee\",\n    boxShadow: \"2px 4px #fafafa\",\n\n    \"&:hover\": {\n      background: \"#0059b3\",\n      color: \"#fafafa\",\n    },\n  },\n\n  bookingBoxPositive: {\n    display: \"flex\",\n    marginRight: \"10px\",\n    marginTop: \"5px\",\n    padding: \"10px\",\n    maxWidth: \"150px\",\n    overflowX: \"hidden\",\n    border: \"1px solid #eee\",\n    fontSize: \"12px\",\n    fontWeight: \"500\",\n    cursor: \"pointer\",\n    backgroundColor: \"#d40b0b\",\n    color: \"#fff2f2\",\n    boxShadow: \"2px 4px #fafafa\",\n\n    \"&:hover\": {\n      background: \"#bf0000\",\n      color: \"#fff\",\n    },\n  },\n\n  bookingBoxReportSent: {\n    display: \"flex\",\n    marginRight: \"10px\",\n    marginTop: \"5px\",\n    padding: \"10px\",\n    maxWidth: \"150px\",\n    overflowX: \"hidden\",\n    border: \"1px solid #eee\",\n    fontSize: \"12px\",\n    fontWeight: \"500\",\n    cursor: \"pointer\",\n    backgroundColor: \"#009900\",\n    color: \"#eee\",\n    boxShadow: \"2px 4px #fafafa\",\n\n    \"&:hover\": {\n      background: \"#006e00\",\n      color: \"#fafafa\",\n    },\n  },\n}));\n\nconst DayViewCell = ({ key, date, time }) => {\n  const classes = useStyles();\n\n  const [state, setState] = React.useContext(GlobalState);\n  const [bookings, setBookings] = React.useState(null);\n  const [filteredBookings, setFilteredBookings] = React.useState(null);\n  const [selectedBooking, setSelectedBooking] = React.useState(null);\n\n  const [refresh, setRefresh] = React.useState(true);\n\n  const [isPast, setIsPast] = React.useState(false);\n\n  const [openDialog, setOpenDialog] = React.useState(false);\n  const [openDialogAddNew, setOpenDialogAddNew] = React.useState(false);\n\n\n  useEffect(() => {\n    const todayStr = dateformat(new Date(), \"yyyy-mm-dd\");\n    setIsPast(date < todayStr);\n  }, [date]);\n\n  useEffect(() => {\n    if (bookings) {\n      if (state.dayViewCalFilter && state.dayViewCalFilter.trim().length > 0) {\n        const search = state.dayViewCalFilter.trim().toUpperCase();\n        setFilteredBookings(\n          bookings.filter(\n            (booking) =>\n              booking.fullname.toLowerCase().indexOf(search.toLowerCase()) >= 0\n          )\n        );\n      } else {\n        setFilteredBookings([...bookings]);\n      }\n    }\n  }, [state.dayViewCalFilter, bookings]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      if (!date || date.length <= 0 || !time || time.length <= 0) {\n        return;\n      }\n\n      // if (isPast)\n      // {\n      //     setBookings([]);\n      //     return;\n      // }\n\n      setBookings(null);\n\n      var res = state.AdminCalendarCache?.find(\n        (record) =>\n          record.method === \"getBookingsByDateStrandTime\" &&\n          record.query === `${date}${time}`\n      )?.res;\n      if (!res || openDialog || openDialogAddNew) {\n        res = await BookService.getAllBookingsByDateStrandTime(date, time);\n        setState((state) => ({\n          ...state,\n          AdminCalendarCache: [\n            ...state.AdminCalendarCache,\n            {\n              method: \"getBookingsByDateStrandTime\",\n              query: `${date}${time}`,\n              res: res,\n            },\n          ],\n        }));\n      }\n\n      if (res.data.status === \"OK\") {\n        setBookings(res.data.bookings);\n      }\n    };\n\n    if (openDialog || openDialogAddNew) {\n      setState((state) => ({\n        ...state,\n        AdminCalendarCache: state.AdminCalendarCache.filter(\n          (record) =>\n            !(\n              record.method === \"getBookingsByDateStrandTime\" &&\n              record.query === `${date}${time}`\n            )\n        ),\n      }));\n      setState((state) => ({\n        ...state,\n        AdminCalendarCache: state.AdminCalendarCache.filter(\n          (record) =>\n            !(\n              record.method === \"getBookingsCountByDateStrandTime\" &&\n              record.query === `${date}${time}`\n            )\n        ),\n      }));\n      setState((state) => ({\n        ...state,\n        AdminCalendarCache: state.AdminCalendarCache.filter(\n          (record) =>\n            !(\n              record.method === \"getBookingsCountByDateStr\" &&\n              record.query === date\n            )\n        ),\n      }));\n    }\n\n    fetchData();\n  }, [date, time, state.bookingDialogDataChanged]);\n\n  const bookingCliked = (event, booking) => {\n    setSelectedBooking(booking);\n    setOpenDialog(true);\n  };\n\n  const getBookingClass = (status) => {\n    switch (status) {\n      case \"patient_attended\":\n        return classes.bookingBoxSampleTaken;\n      default:\n        return classes.bookingBox;\n    }\n  };\n\n  const addNewBookingClicked = () =>\n  {\n      setOpenDialogAddNew(true)\n  }\n\n  const getBookingsBox = (_bookings) => {\n    if (_bookings === null) {\n      return (\n        <div className={classes.LoadingProgress}>\n          <CircularProgress disableShrink />\n        </div>\n      );\n    } else if (_bookings.length >= 0) {\n      return (\n        <React.Fragment>\n          {_bookings.map((booking) => (\n            <div\n              style={booking.tr ? { borderTop: \"5px solid #d00fd6\" } : {}}\n              className={getBookingClass(booking.status)}\n              onClick={(event) => bookingCliked(event, booking)}\n            >\n              {`${booking.fullname}`.substring(0, 15)}\n            </div>\n          ))}\n\n          <div className={classes.bookingBoxNew} onClick={addNewBookingClicked}> + Add New Booking</div>\n        </React.Fragment>\n      );\n    }\n  };\n\n  const handleCloseDialog = () => {\n    setOpenDialog(false);\n  };\n\n  const handleCloseDialogAddNew = () => {\n    setOpenDialogAddNew(false);\n  };\n\n  return (\n    <React.Fragment>\n      <div className={classes.Container}>\n        {getBookingsBox(filteredBookings)}\n      </div>\n\n      <BookingDialog\n        booking={selectedBooking}\n        open={openDialog}\n        onClose={handleCloseDialog}\n      />\n\n      <NewBookingDialog\n        date={date}\n        time={time}\n        open={openDialogAddNew}\n        handleClose={handleCloseDialogAddNew}\n        />\n    </React.Fragment>\n  );\n};\n\nDayViewCell.propTypes = {\n  key: PropTypes.string.isRequired,\n  date: PropTypes.string.isRequired,\n  time: PropTypes.string.isRequired,\n};\n\nexport default DayViewCell;\n","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport DayViewCell from './DayViewCell';\nimport dateformat from 'dateformat';\n\n\n\n\nconst rows = [\n    '10:00 AM',\n    '10:30 AM', \n    '11:00 AM', \n    '11:30 AM', \n    '12:00 PM',\n    '12:30 PM',\n    '01:00 PM',\n    '01:30 PM',\n    '02:00 PM',\n    '02:30 PM',\n    '03:00 PM',\n    '03:30 PM',\n    '04:00 PM',\n    '04:30 PM',\n    '05:00 PM',\n    '05:30 PM',\n];\n\nconst useStyles = makeStyles((theme) => ({\n\n    table: {\n        width: \"100%\",\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        overflowY: \"auto\"\n    },\n\n    th: {\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        verticalAlign: \"middle\",\n        fontcolor: \"#555\",\n        fontWeight: \"400\",\n        fontSize: \"15px\",\n        paddingTop: \"5px\",\n        paddingBottom: \"5px\",\n        width: \"12%\", \n    },\n\n    td: {\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        verticalAlign: \"middle\",\n        height : \"50px\",\n        width: \"84%\", \n    },\n\n    titleLabel: {\n        paddingBottom: \"17px\",\n        paddingTop: \"17px\",\n        color: \"#777\",\n        fontSize: \"16px\"\n    },\n\n    titleLabelToday: {\n        paddingBottom: \"17px\",\n        paddingTop: \"17px\",\n        color: \"#fff\",\n        backgroundColor: \"#1a73e8\",\n        fontSize: \"16px\"\n    },\n\n  }));\n\nconst DayView = ({date}) => {\n    const classes = useStyles();\n\n    return (\n        <React.Fragment>\n\n        <div style={{overflowY: \"scroll\" , height: \"60px\"}}>\n            <table className={classes.table}>\n                <thead>\n                    <tr>\n                        <th style={{width: \"7%\"}}>\n                        \n                        </th>\n                        <th style={{width: \"84%\"}}>\n                                <div className={(dateformat(new Date(),'yyyy-mm-dd') === dateformat(date, 'yyyy-mm-dd')) ? classes.titleLabelToday : classes.titleLabel }>\n                                        {dateformat(date,'dddd')}\n                                </div>                                \n                        </th>\n                    </tr>\n                </thead>\n             </table>\n\n        </div>\n\n            <div style={{overflowY: \"scroll\" , height: \"70vh\"}}>\n                <table className={classes.table}>   \n                    <tbody>\n                        {rows.map(row => (\n                            <tr>\n                                <td style={{width: \"7%\"}}>\n                                    {row}\n                                </td>\n                               \n                                <td className={classes.td}>\n                                     <DayViewCell key={`${dateformat(date,'yyyy-mm-dd')}-${row}`} date={dateformat(date,'yyyy-mm-dd')} time={row}/>  \n                                </td>\n                            \n                            </tr>\n                        ))}            \n                    </tbody>\n                </table>\n            </div>                    \n      \n        </React.Fragment>\n\n\n    );\n}\n\nDayView.propTypes = {\n    date: PropTypes.any.isRequired\n  };\n\n\nexport default DayView;","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MonthView from './MonthView';\nimport { Button, Grid, IconButton, InputAdornment, TextField, Tooltip } from '@material-ui/core';\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\n\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport WeekView from './WeekView';\nimport dateformat from 'dateformat';\nimport DayView from './DayView';\nimport GlobalState from '../../GlobalState';\n\nimport CloseIcon from '@material-ui/icons/Close';\n\n\n\nconst monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n  \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n];\n\nconst useStyles = makeStyles((theme) => ({\n\n    title: {\n        textAlign: \"center\",\n        fontSize: \"24px\",\n        fontColor: \"#333\"\n    },\n\n  }));\n\nexport default function CalendarView() {\n    const classes = useStyles();\n\n    const [state, setState] = React.useContext(GlobalState);\n\n    const [month, setMonth] = React.useState(new Date().getMonth() + 1);\n    const [year, setYear] = React.useState(new Date().getFullYear());\n\n    const [day, setDay] = React.useState(new Date());\n\n    const [firstDayofWeek, setFirstDayofWeek] = React.useState(new Date());\n\n    const [weekDates, setWeekDates] = React.useState([]);\n\n    const [mode, setMode] = React.useState('month');\n    const [selectedTab, setSeletedTab] = React.useState('month');\n\n    const [filter,setFilter] = React.useState('');\n\n    const filterChanged = (event) =>{\n        setFilter(event.target.value);\n        setState(state => ({...state, dayViewCalFilter : event.target.value?.trim()?.toUpperCase()}))\n      }\n\n      const removeFilter = () =>\n      {\n        setFilter('');\n        setState(state => ({...state, dayViewCalFilter : ''}));\n      }\n\n\n    useEffect( () => {\n        const today = new Date();\n        const dayofWeek = today.getDay();\n        const firstdayofweek = new Date(today.getTime() - ( dayofWeek * 86400000));\n        setFirstDayofWeek(firstdayofweek);\n        setState(state => ({...state, AdminCalendarCache : []}));\n\n        return () =>\n        {\n            setState(state => ({...state, AdminCalendarCache : []}));\n            removeFilter();\n        }\n       \n    }, []);\n\n\n    useEffect( () => {\n        const dates = [];\n        for (var i = 0; i < 7 ; i++)\n        {\n            dates.push(new Date(firstDayofWeek.getTime() + ( i * 86400000)));\n        }\n        setWeekDates(dates);\n\n    }, [firstDayofWeek]);\n\n    const handlePrevButton = (event) =>\n    {\n       if (mode === 'month')\n       {\n            if (month === 1)\n            {\n                setYear(year - 1);\n            } \n\n            const newMonth = month === 1 ? 12 : month - 1;\n            setMonth(newMonth);\n\n            const newDay = new Date(year, newMonth - 1 , 1, 0 ,0 ,0 ,0);\n            setDay(newDay);\n\n            const dayofWeek = newDay.getDay();\n            setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\n\n       } \n       else if (mode === 'week')\n       {\n           const newFirstDayofWeek = new Date(firstDayofWeek.getTime() - ( 7 * 86400000));\n           setFirstDayofWeek(newFirstDayofWeek);\n\n           setDay(newFirstDayofWeek);\n           setMonth(newFirstDayofWeek.getMonth() + 1);\n           setYear(newFirstDayofWeek.getFullYear());\n\n       }\n       else if (mode === 'day')\n       {\n           const newDay = new Date(day.getTime() - ( 1 * 86400000));\n           setDay(newDay);\n\n           const dayofWeek = newDay.getDay();\n           setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\n\n           setMonth(newDay.getMonth() + 1);\n           setYear(newDay.getFullYear());\n       }\n    }\n\n    const handleNextButton = (event) =>\n    {\n        if (mode === 'month')\n        {\n            if (month === 12)\n            {\n                setYear(year + 1);\n            } \n       \n            const newMonth = month === 12 ? 1 : month + 1;\n            setMonth(newMonth);\n\n            const newDay = new Date(year, newMonth - 1 , 1, 0 ,0 ,0 ,0);\n            setDay(newDay);\n\n            const dayofWeek = newDay.getDay();\n            setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\n        }\n        else if (mode === 'week')\n        {\n            const newFirstDayofWeek = new Date(firstDayofWeek.getTime() + ( 7 * 86400000));\n            setFirstDayofWeek(newFirstDayofWeek);\n\n            setDay(newFirstDayofWeek);\n            setMonth(newFirstDayofWeek.getMonth() + 1);\n            setYear(newFirstDayofWeek.getFullYear());\n\n        }\n        else if (mode === 'day')\n        {\n            const newDay = new Date(day.getTime() + ( 1 * 86400000));\n            setDay(newDay);\n\n            const dayofWeek = newDay.getDay();\n            setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\n \n            setMonth(newDay.getMonth() + 1);\n            setYear(newDay.getFullYear());\n        }\n    }\n\n    const goToday = (event) => {\n        const newDay = new Date();\n        const dayofWeek = newDay.getDay();\n        setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\n        setDay(newDay);\n        setMonth(newDay.getMonth() + 1);\n        setYear(newDay.getFullYear());\n    }\n\n    const dayClicked = (event, date) =>\n    {\n        const newDay = new Date(date);\n        const dayofWeek = newDay.getDay();\n        setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\n        setDay(newDay);\n        setMonth(newDay.getMonth() + 1);\n        setYear(newDay.getFullYear());\n        setSeletedTab('day');\n        setMode('day');\n    }\n\n    const getContentFromMode = (_mode) => {\n        if (_mode === 'month')\n        {\n            return (\n                <MonthView dayClicked={dayClicked} month={month} year={year}/>    \n            );\n        }    \n        else if (_mode === 'week')\n        {\n            return (\n                    <WeekView dayClicked={dayClicked} dates={weekDates}/>\n            );\n            \n        }\n        else if (_mode === 'day')\n        {\n            return (\n                <DayView date={day}/>\n            );\n        }\n    }\n\n    const getCalendarTitleFromMode = (_mode) => {\n        if (_mode === 'month')\n        {\n            return (\n                <span className={classes.title}> {`${monthNames[month - 1]} ${year}`} </span>   \n            );\n        }    \n        else if (_mode === 'week')\n        {\n            const endOfWeek = new Date(firstDayofWeek.getTime() + ( 6 * 86400000));\n            let endofWeekStr = '';\n            if (endOfWeek.getMonth() === firstDayofWeek.getMonth())\n            {\n                endofWeekStr = dateformat(endOfWeek,'d');\n            }else\n            {\n                endofWeekStr = dateformat(endOfWeek,'mmm d');\n            }\n\n            return (\n                <span className={classes.title}> {`${dateformat(firstDayofWeek,'mmm d')} - ${endofWeekStr}, ${year}`} </span>\n            );\n            \n        }\n        else if (_mode === 'day')\n        {\n            return (\n                <span className={classes.title}> {`${dateformat(day,'mmmm d, yyyy')}`} </span>\n            );\n        }\n    }\n\n\n    const handleTabChanged = (event, value) => {\n        if (value && value.length)\n        {\n          setSeletedTab(value);\n          setMode(value);\n        }\n    };\n\n    const getPrevButtonTitle = (_mode) =>\n    {\n        return `Previuos ${mode}`;\n    }\n\n    const getNextButtonTitle = (_mode) =>\n    {\n        return `Next ${mode}`;\n    }\n\n    return (\n        <React.Fragment>\n\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"space-between\"\n            alignItems=\"center\"\n            style= {{marginBottom: \"10px\", marginTop: \"0px\"}}\n            >  \n\n            <Grid item md={3}>\n                <div  style={{display:\"flex\", alignItems: \"flex-start\", justifyContent: \"flex-start\" , paddingLeft: \"10px\"}}>\n                    <Tooltip title={getPrevButtonTitle(mode)} placement=\"bottom-start\">\n                        <IconButton \n                                color=\"default\" \n                                aria-label=\"prev\"\n                                onClick = {handlePrevButton}\n                                >\n                            <NavigateBeforeIcon style={{fontSize: '2rem'}}/>\n                        </IconButton>\n                    </Tooltip>\n\n                    <Tooltip title={getNextButtonTitle(mode)} placement=\"bottom-end\">\n                        <IconButton \n                                color=\"default\" \n                                aria-label=\"next\"\n                                onClick = {handleNextButton}\n                                >\n                            <NavigateNextIcon style={{fontSize: '2rem'}}/>\n                        </IconButton>\n                    </Tooltip>\n\n                    <Button style={{marginTop: \"11px\", marginLeft: \"10px\"}} onClick={goToday} variant=\"outlined\"> Today </Button>\n                </div>\n\n            </Grid>\n\n            <Grid item md={6}>\n\n                    <Grid\n                        container\n                        direction=\"row\"\n                        justify=\"center\"\n                        alignItems=\"flex-end\"\n                        spacing = {3}\n                        >\n                            <Grid item>\n                                    {getCalendarTitleFromMode(mode)}\n                            </Grid>\n                            {mode === 'day' && (\n                                        <Grid item>\n                                                <TextField\n                                                    variant=\"standard\"\n                                                    style={{marginBottom : \"5px\"}}\n                                                    value={filter}\n                                                    onChange={filterChanged}\n                                                    margin=\"normal\"\n                                                    size=\"small\"\n                                                    id=\"filter\"\n                                                    label=\"Filter\"\n                                                    name=\"filter\"\n                                                    autoComplete=\"off\"\n                                                    InputProps={{\n                                                        endAdornment : \n                                                            <InputAdornment position=\"end\">\n                                                                <Tooltip title=\"Clear\">\n                                                                            <IconButton\n                                                                            aria-label=\"remove filter\"\n                                                                            onClick={() => removeFilter()}\n                                                                            onMouseDown={() => removeFilter()}\n                                                                        >\n                                                                            <CloseIcon/>\n                                                                        </IconButton>\n                                                                </Tooltip>\n                                                            \n                                                            </InputAdornment>\n                                                          \n                                                    }}\n                                                   \n                                                />\n                                        </Grid>\n                            )}\n                           \n                    </Grid>\n                \n            </Grid>\n\n            <Grid item md={3}>\n                <div  style={{display:\"flex\", alignItems: \"flex-end\", justifyContent: \"flex-end\", paddingRight: \"10px\" }}>\n                    <ToggleButtonGroup\n                        value={selectedTab}\n                        exclusive\n                        onChange={handleTabChanged}\n                        aria-label=\"select view mode\"\n                    >\n                        <ToggleButton style={selectedTab === 'month' ? {width: \"80px\", color: \"#3f51b5\", backgroundColor: \"#ebedf7\" } : {width: \"80px\"}} value=\"month\" aria-label=\"month view\">\n                                month\n                        </ToggleButton>\n                        <ToggleButton style={selectedTab === 'week' ? {width: \"80px\", color: \"#3f51b5\", backgroundColor: \"#ebedf7\"} : {width: \"80px\"}}  value=\"week\" aria-label=\"week view\">\n                                week\n                        </ToggleButton>\n                        <ToggleButton style={selectedTab === 'day' ? {width: \"80px\", color: \"#3f51b5\", backgroundColor: \"#ebedf7\"} : {width: \"80px\"}} value=\"day\" aria-label=\"day view\">\n                                day\n                        </ToggleButton>\n                    </ToggleButtonGroup>\n                </div>\n            </Grid>\n\n           </Grid> \n\n             {getContentFromMode(mode)}\n\n        </React.Fragment>\n\n\n    );\n\n}","import axios from 'axios';\nimport { authToken, backendAPI } from '../../GlobalPath';\n\nexport default axios.create({\n  baseURL: backendAPI,\n  headers : {\n      'Authorization' : authToken,\n       'Content-Type': 'application/json',\n  }\n});","import API from './api';\nimport axiosRetry from 'axios-retry';\n\nexport default class BookService {\n\n\n   static addNewBooking = (payload) =>\n   {\n      return API.post(`/api/gp/book/addnewbooking`, payload);\n   }\n\n\n   static sendRegFormEmail = (bookingId) =>\n   {\n      return API.post(`/api/gp/book/sendregformemail?id=${bookingId}`);\n   }\n   static payBooking = (bookingId,price, paymentMethod, corporate) =>\n   {\n      return API.post(`/api/gp/book/paybooking?id=${bookingId}&paymentmethod=${paymentMethod}&corporate=${corporate}&price=${price}`);\n   }\n\n   static unPayBooking = (bookingId) =>\n   {\n      return API.post(`/api/gp/book/unpaybooking?id=${bookingId}`);\n   }\n\n   static getShouldRefundsCount = () =>\n   {\n      return API.get(`/api/gp/book/getshouldrefundscount?`);\n   }\n\n   \n\n   static refundBooking = (bookingId) =>\n   {\n      return API.post(`/api/gp/payment/refundpayment`, {bookingId: bookingId});\n   }\n\n   static getBookingsStatsByDateStr = (dateStr) =>\n   {\n      return API.get(`/api/gp/book/getbookingsstatsbydatestr?date=${dateStr}`);\n   }\n\n   static getBookingsCountByDateStr = (dateStr) =>\n   {\n      return API.get(`/api/gp/book/getbookingscountbydatestr?date=${dateStr}`);\n   }\n\n   static getAllBookingsCountAll = () =>\n   {\n      return API.get(`/api/gp/book/getallbookingscountall`);\n   }\n\n   static getBookingsCountByDateStrandTime = (dateStr, time, source) =>\n   {\n      return API.get(`/api/gp/book/getbookingscountbydatestrandtime?date=${dateStr}&time=${time}`, {cancelToken: source.token});\n   }\n\n   static getBookingsByDateStrandTime = (dateStr, time) =>\n   {\n      return API.get(`/api/gp/book/getbookingsbydatestrandtime?date=${dateStr}&time=${time}`);\n   }\n\n\n   static getAllBookingsCountByDateStr = (dateStr) =>\n   {\n      return API.get(`/api/gp/book/getallbookingscountbydatestr?date=${dateStr}`);\n   }\n\n   static getAllBookingsCountByDateStrandTime = (dateStr, time, source) =>\n   {\n      return API.get(`/api/gp/book/getallbookingscountbydatestrandtime?date=${dateStr}&time=${time}`, {cancelToken: source.token});\n   }\n\n   static getAllBookingsByDateStrandTime = (dateStr, time) =>\n   {\n      return API.get(`/api/gp/book/getallbookingsbydatestrandtime?date=${dateStr}&time=${time}`);\n   }\n\n   static changeBackToBookingMade = (id) =>\n   {\n      return API.post(`/api/gp/book/changebacktobookingmade?id=${id}`);\n   }\n\n   static changeToPatientAttended = (id) =>\n   {\n      return API.post(`/api/gp/book/changetopatientattended?id=${id}`);\n   }\n\n   static updateBooking = (payload) =>\n   {\n      return API.post(`/api/gp/book/updatebookappointment`, payload);\n   } \n\n   static updateBookingTime = (payload) =>\n   {\n      return API.post(`/api/gp/book/updatebookappointmenttime`, payload);\n   } \n\n   static deleteBooking = (id) =>\n   {\n      return API.post(`/api/gp/book/deletebookappointment?id=${id}`);\n   } \n\n   static unDeleteBooking = (id) =>\n   {\n      return API.post(`/api/gp/book/undeletebookappointment?id=${id}`);\n   } \n   \n    static getBookingsByRef = (ref) =>\n    {\n       return API.get(`/api/gp/book/getbookingsbyref?ref=${ref}`);\n    }\n\n    static getBookingById = (id) =>\n    {\n       return API.get(`/api/gp/book/getbookingbyid?id=${id}`);\n    }\n\n    static getAllBookings = (limit) =>\n    {\n      if (!limit) limit = 25 \n      return API.get(`/api/gp/book/getallbookings?limit=${limit}`);\n    }\n\n    static getDeletedBookings= (limit) =>\n    {\n      if (!limit) limit = 25 \n       return API.get(`/api/gp/book/getdeletedbookings?limit=${limit}`);\n    }\n\n    static getTodayBookings= () =>\n    {\n       return API.get(`/api/gp/book/gettodaybookings`);\n    }\n\n    static getOldBookings= (limit) =>\n    {\n      if (!limit) limit = 25 \n       return API.get(`/api/gp/book/getoldbookings?limit=${limit}`);\n    }\n\n    static getFutureBookings= (limit) =>\n    {\n      if (!limit) limit = 25 \n       return API.get(`/api/gp/book/getfuturebookings?limit=${limit}`);\n    }\n\n    static getRecentBookings= () =>\n    {\n       return API.get(`/api/gp/book/getrecentbookings`);\n    }\n\n    static getRecentBookingsAll= (limit) =>\n    {\n      if (!limit) limit = 25 \n       return API.get(`/api/gp/book/getrecentbookingsall?limit=${limit}`);\n    }\n}","import API from './api';\n\nexport default class PDFService {\n\n\n    static downloadGPRegForm = (id) =>\n    {\n       return API.get(`/api/pdf/downloadgpregform?id=${id}`, {\n        responseType: 'arraybuffer',\n        id: id,\n        headers: {\n            Accept: 'application/pdf',\n        }\n        });\n    }\n\n\n\n}","export const corporates = [\n    'Visa Medical'\n]","import React, { useEffect, useRef, useState } from \"react\";\nimport BookService from \"./services/BookService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {\n  Backdrop,\n  Button,\n  Checkbox,\n  CircularProgress,\n  Divider,\n  FormControlLabel,\n  Grid,\n  InputAdornment,\n  InputLabel,\n  Link,\n  makeStyles,\n  MenuItem,\n  Select,\n  TextField,\n  Tooltip,\n} from \"@material-ui/core\";\nimport GlobalState from \"./../GlobalState\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport CreditCardIcon from \"@material-ui/icons/CreditCard\";\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\n\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Draggable from \"react-draggable\";\nimport Paper from \"@material-ui/core/Paper\";\n\nimport Alert from \"@material-ui/lab/Alert\";\n\nimport PropTypes from \"prop-types\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport Box from \"@material-ui/core/Box\";\n\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport { corporates } from \"./Corporates\";\nimport NumberFormat from \"react-number-format\";\n\n\nvar interval;\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    marginTop: theme.spacing(0),\n    marginBottom: theme.spacing(1),\n  },\n\n  refreshButton: {\n    marginLeft: theme.spacing(2),\n  },\n\n  checkIcon: {\n    color: \"green\",\n  },\n\n  closeIcon: {\n    color: \"red\",\n  },\n\n  RefLink: {\n    cursor: \"pointer\",\n  },\n\n  BookedLabel: {\n    backgroundColor: \"#606060\",\n    color: \"#fff\",\n    paddingRight: \"10px\",\n    paddingLeft: \"10px\",\n  },\n\n  PatientAttendedLabel: {\n    backgroundColor: \"#0066aa\",\n    color: \"#fff\",\n    paddingRight: \"15px\",\n    paddingLeft: \"10px\",\n  },\n\n  SampleTakenLabel: {\n    backgroundColor: \"#0066cc\",\n    color: \"#fff\",\n    paddingRight: \"40px\",\n    paddingLeft: \"10px\",\n  },\n\n  ReportSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"90px\",\n    paddingLeft: \"10px\",\n  },\n\n  ReportCertSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"68px\",\n    paddingLeft: \"10px\",\n  },\n\n  archiveButton: {},\n\n  smartMatchButton: {\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    marginRight: \"10px\",\n    // padding: \"10px\"\n  },\n\n  infoTitle: {\n    fontWeight: \"400\",\n  },\n\n  infoData: {\n    paddingLeft: \"10px\",\n    fontWeight: \"800\",\n  },\n\n  matchButton: {\n    marginTop: \"30px\",\n    marginBottom: \"20px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  resendButton: {\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  resendFilesButton: {\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n    backgroundColor: \"#3792ad\",\n    \"&:hover\": {\n      background: \"#2f798f\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  cancelButton: {\n    marginBottom: \"10px\",\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"90px\",\n    paddingRight: \"90px\",\n  },\n\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 5,\n    color: \"#fff\",\n  },\n}));\n\nfunction NumberFormatCustom(props) {\n  const { inputRef, onChange, ...other } = props;\n\n  return (\n    <NumberFormat\n      {...other}\n      getInputRef={inputRef}\n      onValueChange={(values) => {\n        onChange({\n          target: {\n            name: props.name,\n            value: values.value,\n          },\n        });\n      }}\n      thousandSeparator\n      isNumericString\n      prefix=\"\"\n    />\n  );\n}\n\nNumberFormatCustom.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\n\nconst BorderLinearProgress = withStyles((theme) => ({\n  root: {\n    height: 10,\n    borderRadius: 5,\n  },\n  colorPrimary: {\n    backgroundColor: \"#cedbce\", //theme.palette.grey[theme.palette.type === 'light' ? 200 : 700],\n  },\n  bar: {\n    borderRadius: 5,\n    backgroundColor: \"#2f942e\",\n  },\n}))(LinearProgress);\nfunction LinearProgressWithLabel(props) {\n  return (\n    <Box display=\"flex\" alignItems=\"center\">\n      <Box width=\"100%\" mr={1}>\n        <BorderLinearProgress variant=\"determinate\" {...props} />\n      </Box>\n      <Box minWidth={35}>\n        <Typography\n          style={{ fontWeight: \"800\", color: \"#5e855e\" }}\n          variant=\"body2\"\n          color=\"textSecondary\"\n        >{`${Math.round(props.value)}%`}</Typography>\n      </Box>\n    </Box>\n  );\n}\n\nLinearProgressWithLabel.propTypes = {\n  /**\n   * The value of the progress indicator for the determinate and buffer variants.\n   * Value between 0 and 100.\n   */\n  value: PropTypes.number.isRequired,\n};\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable\n      handle=\"#draggable-dialog-title\"\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\n    >\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nexport default function PayDialog(props) {\n  const classes = useStyles();\n\n  const [state, setState] = React.useContext(GlobalState);\n  const [paymentMethod, setPaymentMethod] = useState(\"credit card\");\n  const [corporate, setCorporate] = useState(corporates[0]);\n  const [saving, setSaving] = useState(false);\n\n  const [price, setPrice] = useState(\"\");\n  const [priceError, setPriceError] = useState(false);\n\n  useEffect( () => {\n    if (props.price)\n    {\n      setPrice(`${props.price}`)\n    }else\n    {\n      setPrice('')\n    }\n  }, [props.price, props.open])\n\n\n  const priceChanged = (event) =>\n  {\n    setPrice(event.target.value)\n    setPriceError(false)\n  }\n\n  const paymentMethodChanged = (event) => {\n    setPaymentMethod(event.target.value);\n  };\n\n  const handleClose = () => {\n    if (saving) return;\n\n    props.handleClose();\n    setPaymentMethod(\"credit card\");\n    setPrice('')\n    setCorporate(corporates[0]);\n    setSaving(false);\n  };\n\n  const corporateChanged = (event) => {\n    setCorporate(event.target.value);\n  };\n\n  const payClicked = async () => {\n\n\n    if (!price || price.trim().length === 0 || price === '0')\n    {\n      setPriceError(true)\n      return\n    }\n\n    setSaving(true);\n\n  \n\n    try {\n      await BookService.payBooking(\n        props.booking._id,\n        price,\n        paymentMethod,\n        paymentMethod === \"corporate\" ? corporate : \"\"\n      );\n      setSaving(false);\n      setState((state) => ({\n        ...state,\n        bookingPayChanged: !state.bookingPayChanged ? true : false,\n      }));\n      handleClose();\n    } catch (err) {\n      console.error(err);\n      setSaving(false);\n    }\n  };\n\n  return (\n    <React.Fragment>\n      {props.booking && (\n        <React.Fragment>\n          <Dialog\n            maxWidth=\"xs\"\n            open={props.open}\n            onClose={handleClose}\n            PaperComponent={PaperComponent}\n            aria-labelledby=\"form-dialog-title\"\n          >\n            <DialogTitle id=\"draggable-dialog-title\">\n              <Grid\n                container\n                spacing={2}\n                direction=\"row\"\n                justify=\"center\"\n                alignItems=\"center\"\n              >\n                <Grid item>\n                  <CreditCardIcon\n                    style={{ color: \"#f50057\", fontSize: \"3rem\" }}\n                  />\n                </Grid>\n\n                <Grid item>\n                  <div\n                    style={{\n                      color: \"#f50057\",\n                      paddingBottom: \"10px\",\n                      fontWeight: \"800\",\n                    }}\n                  >\n                    {\" \"}\n                    PAY the CHARGE{\" \"}\n                  </div>\n                </Grid>\n              </Grid>\n\n              <Divider />\n            </DialogTitle>\n            <DialogContent>\n              <div\n                style={{\n                  height: \"300px\",\n                }}\n              >\n                <Grid\n                  container\n                  direction=\"column\"\n                  justify=\"space-between\"\n                  spacing={2}\n                  alignItems=\"flex-start\"\n                >\n                  <Grid item>\n                  <TextField\n                                autoFocus\n                                error={priceError}\n                                label=\"TOTAL Charges\"\n                                value={price}\n                                fullWidth\n                                required\n                                onChange={priceChanged}\n                                name=\"product-price\"\n                                id=\"product-price-id\"\n                                InputProps={{\n                                  inputComponent: NumberFormatCustom,\n                                  startAdornment: (\n                                    <InputAdornment position=\"start\">\n                                      £\n                                    </InputAdornment>\n                                  ),\n                                }}\n                              />\n\n                  </Grid>\n\n                  <Grid item>\n                    <div style={{ fontSize: \"17px\" }}>\n                      {\" \"}\n                      How do you want to pay?{\" \"}\n                    </div>\n                  </Grid>\n\n                  <Grid item>\n                    <FormControl component=\"fieldset\">\n                      <RadioGroup\n                        aria-label=\"paymentMethod\"\n                        name=\"paymentMethod\"\n                        value={paymentMethod}\n                        onChange={paymentMethodChanged}\n                      >\n                        <FormControlLabel\n                          value=\"credit card\"\n                          control={<Radio />}\n                          label=\"Credit Card\"\n                        />\n                        <FormControlLabel\n                          value=\"cash\"\n                          control={<Radio />}\n                          label=\"Cash\"\n                        />\n                        <FormControlLabel\n                          value=\"corporate\"\n                          control={<Radio />}\n                          label=\"Corporate\"\n                        />\n                      </RadioGroup>\n\n                      {paymentMethod === \"corporate\" && (\n                        <FormControl\n                          style={{ marginTop: \"10px\" }}\n                          className={classes.formControl}\n                        >\n                          <Select\n                            labelId=\"select-corporate\"\n                            id=\"select-corporate-id\"\n                            value={corporate}\n                            onChange={corporateChanged}\n                          >\n                            {corporates.map((element) => (\n                              <MenuItem\n                                value={element}\n                              >{`${element}`}</MenuItem>\n                            ))}\n                          </Select>\n                        </FormControl>\n                      )}\n                    </FormControl>\n                  </Grid>\n                </Grid>\n\n                <Grid item></Grid>\n\n                <div\n                  style={{\n                    position: \"absolute\",\n                    bottom: \"20px\",\n                    right: \"20px\",\n                  }}\n                >\n                  <Grid\n                    container\n                    direction=\"row\"\n                    justify=\"flex-end\"\n                    alignItems=\"center\"\n                    spacing={1}\n                  >\n                    <Grid item>\n                      <Button\n                        onClick={handleClose}\n                        style={{ width: \"100px\" }}\n                        disabled={saving}\n                      >\n                        back\n                      </Button>\n                    </Grid>\n                    <Grid item>\n                      <Button\n                        onClick={payClicked}\n                        variant=\"contained\"\n                        color=\"secondary\"\n                        style={{ width: \"100px\" }}\n                        disabled={saving}\n                      >\n                        Pay\n                      </Button>\n                    </Grid>\n                  </Grid>\n                </div>\n              </div>\n\n              <Backdrop className={classes.backdrop} open={saving}>\n                <CircularProgress color=\"inherit\" />\n              </Backdrop>\n            </DialogContent>\n          </Dialog>\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport GlobalState from \"./../GlobalState\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {\n  Button,\n  Checkbox,\n  DialogActions,\n  DialogContentText,\n  Divider,\n  FormControlLabel,\n  IconButton,\n  TextField,\n  Tooltip,\n} from \"@material-ui/core\";\nimport PDFService from \"./services/PDFService\";\n\nimport { calculatePrice } from \"./PriceCalculator\";\n\nimport bookingService from \"./services/BookService\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport CloseIcon from \"@material-ui/icons/Close\";\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Draggable from \"react-draggable\";\nimport Slide from \"@material-ui/core/Slide\";\n\nimport Paper from \"@material-ui/core/Paper\";\n\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport BookService from \"./services/BookService\";\n\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport {\n  FormatDateFromString,\n  RevertFormatDateFromString,\n} from \"./DateFormatter\";\nimport PayDialog from \"./PayDialog\";\n\nimport PrintIcon from \"@material-ui/icons/Print\";\nimport UndoIcon from \"@material-ui/icons/Undo\";\n\nimport SendIcon from \"@material-ui/icons/Send\";\n\nimport HistoryIcon from \"@material-ui/icons/History\";\n\nimport FileCopyOutlinedIcon from \"@material-ui/icons/FileCopyOutlined\";\nimport { CalendarColors } from \"../Admin/calendar-admin/colors\";\nimport InvoiceDialog from \"../InvoiceDialog\";\nimport InvoiceService from \"../services/InvoiceService\";\n\nconst useStyles = makeStyles((theme) => ({\n  box: {\n    backgroundColor: \"#373737\",\n    color: \"#fff\",\n    padding: \"1px\",\n    borderRadius: \"4px\",\n    textAlign: \"justify\",\n    paddingRight: \"40px\",\n  },\n\n  boxRed: {\n    backgroundColor: \"#dc2626\",\n    color: \"#fff\",\n    padding: \"1px\",\n    borderRadius: \"4px\",\n    textAlign: \"justify\",\n    paddingRight: \"40px\",\n  },\n\n  boxInfo: {\n    textAlign: \"justify\",\n    backgroundColor: \"#fafafa\",\n    color: \"#333\",\n    padding: \"1px\",\n    borderRadius: \"4px\",\n    paddingRight: \"40px\",\n    border: \"1px solid #eee\",\n  },\n\n  ul: {\n    listStyle: \"none\",\n    padding: \"0\",\n    margin: \"0\",\n  },\n\n  li: {\n    marginBottom: \"15px\",\n  },\n\n  icon: {\n    marginRight: \"8px\",\n  },\n\n  root: {\n    width: \"100%\",\n  },\n\n  lineThrough: {\n    textDecoration: \"line-through\",\n  },\n\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    flexBasis: \"33.33%\",\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n  },\n  secondaryHeading: {\n    fontSize: theme.typography.pxToRem(15),\n  },\n\n  infoDetails: {\n    textAlign: \"left\",\n  },\n\n  infoTitle: {\n    fontWeight: \"800\",\n    marginRight: \"10px\",\n  },\n\n  infoData: {\n    fontWeight: \"400\",\n  },\n\n  title: {\n    textAlign: \"center\",\n    fontWeight: \"600\",\n    marginLeft: \"10px\",\n    marginBottom: \"5px\",\n  },\n\n  Accordion: {\n    backgroundColor: \"#f5f5f5\",\n    color: \"#222\",\n  },\n\n  AccordionDeleted: {\n    backgroundColor: \"#aaa\",\n    color: \"#555\",\n  },\n\n  DownloadForm: {\n    marginTop: \"10px\",\n    marginBottom: \"10px\",\n  },\n\n  infoDataCharges: {\n    fontSize: \"18px\",\n    color: \"green\",\n    fontWeight: \"600\",\n  },\n\n  infoDataChargesHigher: {\n    fontSize: \"18px\",\n    color: \"red\",\n    fontWeight: \"600\",\n  },\n  BookedLabel: {\n    color: \"#606060\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#606060\",\n    width: \"150px\",\n    display: \"inline-block\",\n  },\n\n  PatientAttendedLabel: {\n    color: \"#0066aa\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#0066aa\",\n    width: \"150px\",\n    display: \"inline-block\",\n  },\n\n  SampleTakenLabel: {\n    color: \"#0066cc\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#0066cc\",\n  },\n\n  ReportSentLabel: {\n    color: \"#009900\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#009900\",\n  },\n\n  ReportCertSentLabel: {\n    color: \"#009900\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#009900\",\n  },\n\n  PositiveLabel: {\n    color: \"red\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"red\",\n  },\n\n  EditButton: {\n    marginBottom: \"20px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n  },\n\n  ResendEmailsButton: {\n    // marginBottom : \"20px\",\n    color: \"#2f942e\",\n    borderColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"#fafffa\",\n      borderColor: \"#2f942e\",\n    },\n    textDecoration: \"none !important\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  PayButton: {\n    marginLeft: \"70px\",\n    width: \"300px\",\n  },\n\n  printInvoiceButton: {\n    marginLeft: \"70px\",\n    fontSize: \"0.8rem\",\n    // width: \"300px\",\n  },\n\n  editInvoiceButton: {\n    marginLeft: \"10px\",\n    fontSize: \"0.8rem\",\n  },\n\n  PayLabel: {\n    marginLeft: \"20px\",\n\n    color: \"#2f942e\",\n    fontWeight: \"500\",\n    textAlign: \"center\",\n  },\n\n  RestoreButton: {\n    marginBottom: \"20px\",\n    backgroundColor: \"#eee\",\n    color: \"#333\",\n    \"&:hover\": {\n      background: \"#f1f1f1\",\n      color: \"#111\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n  },\n\n  DeleteButton: {\n    marginBottom: \"20px\",\n    backgroundColor: \"#d90015\",\n    \"&:hover\": {\n      background: \"#b80012\",\n      color: \"#fff\",\n    },\n\n    padding: \"10px\",\n  },\n\n  SaveButton: {\n    marginBottom: \"10px\",\n    padding: \"10px\",\n\n    backgroundColor: \"#d1175e\",\n    \"&:hover\": {\n      background: \"#bd0d50\",\n      color: \"#fff\",\n    },\n  },\n\n  CancelButton: {\n    marginBottom: \"20px\",\n    // padding: \"10px\"\n  },\n\n  TextBox: {\n    padding: \"0px\",\n  },\n\n  checkIcon: {\n    color: \"green\",\n  },\n\n  checkIconSmall: {\n    color: \"green\",\n    paddingTop: \"5px\",\n  },\n\n  closeIcon: {\n    color: \"red\",\n  },\n\n  centeredLabel: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 5,\n    color: \"#fff\",\n  },\n\n  invoiceNumber: {\n    display: \"inline-block\",\n    fontWeight: \"500\",\n    width: \"72px\",\n    fontSize: \"1rem\",\n    color: theme.palette.primary.main,\n  },\n}));\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable\n      handle=\"#alert-dialog-slide-title\"\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\n    >\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nexport default function BookingDialog(props) {\n  const classes = useStyles();\n\n  const [state, setState] = React.useContext(GlobalState);\n\n  const [copied, setCopied] = useState(false);\n\n  const [emailSent, setEmailSent] = React.useState(false);\n  const [emailSentInvoice, setEmailSentInvoice] = React.useState(false);\n\n  const [openResendDialog, setOpenResendDialog] = React.useState(false);\n  const [openPayDialog, setOpenPayDialog] = React.useState(false);\n  const [openRefundDialog, setOpenRefundDialog] = React.useState(false);\n\n  const [openInvoiceDialog, setOpenInvoiceDialog] = React.useState(false);\n\n  const [selectedBooking, setSelectedBooking] = React.useState(null);\n\n  const [editMode, setEditMode] = React.useState({ edit: false, person: null });\n  const [deleteMode, setDeleteMode] = React.useState({\n    delete: false,\n    person: null,\n  });\n  const [restoreMode, setRestoreMode] = React.useState({\n    restore: false,\n    person: null,\n  });\n\n  const [saving, setSaving] = React.useState(false);\n  const [deleting, setDeleting] = React.useState(false);\n  const [restoring, setRestoring] = React.useState(false);\n\n  const [validationError, setValidationError] = React.useState({});\n\n  const [bookingDate, setBookingDate] = React.useState(\"\");\n  const [bookingTime, setBookingTime] = React.useState(\"\");\n\n  const [fullname, setFullname] = React.useState(\"\");\n  const [email, setEmail] = React.useState(\"\");\n  const [tel, setTel] = React.useState(\"\");\n  const [notes, setNotes] = React.useState(\"\");\n  const [service, setService] = React.useState(\"\");\n\n  const [refreshData, setRefreshData] = React.useState(false);\n\n  const [booking, setBooking] = React.useState(null);\n\n  const [recordChanged, setRecordChanged] = React.useState(false);\n\n  const [fieldChanged, setFieldChanged] = React.useState(false);\n\n  const [openUndoPayDialog, setOpenUndoPayDialog] = React.useState(false);\n\n  const [openTimeStampDialog, setOpenTimeStampDialog] = React.useState(false);\n\n  const [invoice, setInvoice] = React.useState(null);\n  const [invoiceLoaded, setInvoiceLoaded] = React.useState(false);\n\n  const fetchInvoice = async () => {\n    try {\n      setInvoiceLoaded(false);\n      const res = await InvoiceService.getInvoiceByBookingId(props.booking._id);\n      setInvoice(res.data.invoice);\n      setInvoiceLoaded(true);\n    } catch (err) {\n      setInvoiceLoaded(true);\n      console.error(err);\n    }\n  };\n\n  React.useEffect(() => {\n    if (props.booking) {\n      fetchInvoice();\n    }\n  }, [props.booking, props.open]);\n\n  const handleCloseTimeStampDialog = () => {\n    setOpenTimeStampDialog(false);\n    setSelectedBooking(null);\n  };\n\n  const handleCloseUndoPayDialog = () => {\n    setOpenUndoPayDialog(false);\n    setSelectedBooking(null);\n  };\n\n  const handleCloseResendDialog = () => {\n    setOpenResendDialog(false);\n    setSelectedBooking(null);\n  };\n\n  const handleClosePayDialog = () => {\n    setOpenPayDialog(false);\n    setSelectedBooking(null);\n  };\n\n  const handleCloseRefundDialog = () => {\n    setOpenRefundDialog(false);\n    setSelectedBooking(null);\n  };\n\n  const handleCloseInvoiceDialog = (refresh) => {\n    setOpenInvoiceDialog(false);\n    setSelectedBooking(null);\n    fetchInvoice();\n  };\n\n  useEffect(() => {\n    if (booking) {\n      const isChanged =\n        bookingDate !== FormatDateFromString(booking.bookingDate) ||\n        bookingTime !== booking.bookingTime ||\n        fullname !== booking.fullname ||\n        email !== booking.email ||\n        tel !== booking.phone ||\n        notes !== booking.notes;\n\n      setRecordChanged(isChanged);\n    }\n  }, [fieldChanged]);\n\n  useEffect(() => {\n    if (!props.open) {\n      setTimeout(() => {\n        setEditMode({ edit: false, person: null });\n        setRecordChanged(false);\n      }, 500);\n    }\n  }, [props.open]);\n\n  const bookingDateChanged = (event) => {\n    setBookingDate(event.target.value);\n    setValidationError({ ...validationError, bookingDateError: false });\n    setFieldChanged(!fieldChanged);\n  };\n\n  const bookingTimeChanged = (event) => {\n    setBookingTime(event.target.value);\n    setValidationError({ ...validationError, bookingTimeError: false });\n    setFieldChanged(!fieldChanged);\n  };\n\n  const fullnameChanged = (event) => {\n    setFullname(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const emailChanged = (event) => {\n    setEmail(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const telChanged = (event) => {\n    setTel(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const serviceChanged = (event) => {\n    setService(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const notesChanged = (event) => {\n    setNotes(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const getStatusLabel = (status) => {\n    if (status === \"booked\") {\n      return <div className={classes.BookedLabel}> Booking Made </div>;\n    } else if (status === \"patient_attended\") {\n      return (\n        <div className={classes.PatientAttendedLabel}> Patient Attended </div>\n      );\n    } else {\n      return \"Unknown\";\n    }\n  };\n\n  const handleEditModeChanged = (edit, person) => {\n    if (edit) {\n      setFullname(person.fullname);\n      setBookingDate(FormatDateFromString(person.bookingDate));\n      setBookingTime(person.bookingTime.toUpperCase());\n      setEmail(person.email);\n      setTel(person.phone);\n      if (person.notes) {\n        setNotes(person.notes);\n      }\n\n      setEditMode({ edit: edit, person: person });\n    } else if (!edit && !person) {\n      setEditMode({ edit: edit, person: person });\n      setRecordChanged(false);\n    } else if (!edit && person) {\n      const booking = {};\n      const bookingId = person._id;\n      booking.email = email;\n      booking.phone = tel;\n      booking.fullname = fullname;\n      booking.notes = notes;\n      booking.service = service;\n      booking.bookingDate = RevertFormatDateFromString(bookingDate);\n      booking.bookingTime = bookingTime;\n      booking.bookingRef = person.bookingRef;\n\n      if (validateBooking(booking)) {\n        updateBooking({ bookingId: bookingId, person: booking });\n      }\n    }\n  };\n\n  const validateDate = (str) => {\n    var error = false;\n    if (!str || str.length !== 10) {\n      error = true;\n    }\n\n    if (str.charAt(4) !== \"-\" || str.charAt(7) !== \"-\") {\n      error = true;\n    }\n\n    try {\n      const result = /^\\d{4}-\\d{2}-\\d{2}$/.test(str);\n      if (!result) {\n        error = true;\n      }\n\n      const year = parseInt(str.substr(0, 4));\n      const month = parseInt(str.substr(5, 2));\n      const day = parseInt(str.substr(8, 2));\n\n      if (year < 1900) {\n        error = true;\n      }\n\n      if (month < 1 || month > 12) {\n        error = true;\n      }\n\n      if (day > 31) {\n        error = true;\n      }\n    } catch (err) {\n      error = true;\n    }\n\n    return !error;\n  };\n\n  const validateTime = (str) => {\n    var error = false;\n\n    const result = /^\\d{2}:\\d{2} AM$|^\\d{2}:\\d{2} PM$/.test(str);\n    if (!result) {\n      error = true;\n    }\n\n    try {\n      const hour = parseInt(str.substr(0, 2));\n      const minute = parseInt(str.substr(3, 2));\n\n      if (hour < 0 || hour > 12) {\n        error = true;\n      }\n\n      if (minute < 0 || minute > 59) {\n        error = true;\n      }\n    } catch (err) {\n      error = true;\n    }\n\n    return !error;\n  };\n\n  const validateBooking = (booking) => {\n    var error = false;\n\n    if (!validateDate(booking.bookingDate)) {\n      error = true;\n      setValidationError({ ...validationError, bookingDateError: true });\n    }\n\n    if (!validateTime(booking.bookingTime)) {\n      error = true;\n      setValidationError({ ...validationError, bookingTimeError: true });\n    }\n    return !error;\n  };\n\n  const updateBooking = (payload) => {\n    setSaving(true);\n    bookingService\n      .updateBooking(payload)\n      .then((res) => {\n        setSaving(false);\n        setEditMode({ edit: false, person: null });\n        setRefreshData(!refreshData);\n      })\n      .catch((err) => {\n        setSaving(false);\n        setEditMode({ edit: false, person: null });\n        console.log(err);\n      });\n  };\n\n  const deleteBooking = (id) => {\n    setDeleting(true);\n    bookingService\n      .deleteBooking(id)\n      .then((res) => {\n        setDeleting(false);\n        setDeleteMode({ delete: false, person: null });\n        setRefreshData(!refreshData);\n      })\n      .catch((err) => {\n        setDeleting(false);\n        setDeleteMode({ delete: false, person: null });\n        console.log(err);\n      });\n  };\n\n  const restoreBooking = (id) => {\n    setRestoring(true);\n    bookingService\n      .unDeleteBooking(id)\n      .then((res) => {\n        setRestoring(false);\n        setRestoreMode({ restore: false, person: null });\n        setRefreshData(!refreshData);\n      })\n      .catch((err) => {\n        setRestoring(false);\n        setRestoreMode({ restore: false, person: null });\n        console.log(err);\n      });\n  };\n\n  const handleDeleteModeChanged = (del, person) => {\n    if (del) {\n      setDeleteMode({ delete: del, person: person });\n    } else if (!del && !person) {\n      setDeleteMode({ delete: del, person: person });\n    } else if (!del && person) {\n      deleteBooking(person._id);\n    }\n  };\n\n  const handleRestoreModeChanged = (restore, person) => {\n    if (restore) {\n      setRestoreMode({ restore: restore, person: person });\n    } else if (!restore && !person) {\n      setRestoreMode({ restore: restore, person: person });\n    } else if (!restore && person) {\n      restoreBooking(person._id);\n    }\n  };\n\n  const changeBackToBookingMade = (event, id) => {\n    setSaving(true);\n    BookService.changeBackToBookingMade(id)\n      .then((res) => {\n        setSaving(false);\n        setRefreshData(!refreshData);\n      })\n      .catch((err) => {\n        console.log(err);\n        setSaving(false);\n      });\n  };\n\n  const changeToPatientAttended = (event, id) => {\n    setSaving(true);\n    BookService.changeToPatientAttended(id)\n      .then((res) => {\n        setSaving(false);\n        setRefreshData(!refreshData);\n      })\n      .catch((err) => {\n        console.log(err);\n        setSaving(false);\n      });\n  };\n\n  const Pay = () => {\n    setSelectedBooking(booking);\n    setOpenPayDialog(true);\n  };\n\n  const OpenInvoiceDialog = () => {\n    setSelectedBooking(booking);\n    setInvoice(invoice);\n    setOpenInvoiceDialog(true);\n  };\n\n  useEffect(() => {\n    if (props.booking) {\n      BookService.getBookingById(props.booking._id)\n        .then((res) => {\n          setBooking(res.data);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n\n      setState((state) => ({\n        ...state,\n        bookingDialogDataChanged: !state.bookingDialogDataChanged\n          ? true\n          : false,\n      }));\n    }\n  }, [refreshData, state.bookingPayChanged]);\n\n  useEffect(() => {\n    if (props.booking) {\n      setBooking(props.booking);\n    }\n  }, [props.booking]);\n\n  const undoPaymentClicked = async () => {\n    setSaving(true);\n    try {\n      await BookService.unPayBooking(booking._id);\n      setSaving(false);\n      setOpenUndoPayDialog(false);\n      setRefreshData(!refreshData);\n    } catch (err) {\n      console.error(err);\n      setSaving(false);\n      setOpenUndoPayDialog(false);\n    }\n  };\n\n  const refundPaymentClicked = async () => {\n    setSaving(true);\n    try {\n      await BookService.refundBooking(booking._id);\n      setSaving(false);\n      updateShouldRefundsCount();\n      setOpenRefundDialog(false);\n      setRefreshData(!refreshData);\n    } catch (err) {\n      console.error(err);\n      setSaving(false);\n      setOpenRefundDialog(false);\n    }\n  };\n\n  const updateShouldRefundsCount = async () => {\n    try {\n      const res = await BookService.getShouldRefundsCount();\n      if (res && res.data && res.data.status === \"OK\") {\n        setState((state) => ({ ...state, shouldRefunsCount: res.data.count }));\n      }\n    } catch (ex) {\n      console.error(ex);\n    }\n  };\n\n  const downloadRegForm = (id) => {\n    PDFService.downloadGPRegForm(id)\n      .then((res) => {\n        const file = new Blob([res.data], { type: \"application/pdf\" });\n\n        const fileURL = URL.createObjectURL(file);\n        window.open(fileURL, \"_blank\");\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const downloadInvoice = (id) => {\n    InvoiceService.downloadInvoice(id)\n      .then((res) => {\n        const file = new Blob([res.data], { type: \"application/pdf\" });\n\n        const fileURL = URL.createObjectURL(file);\n        window.open(fileURL, \"_blank\");\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const sendRegForm = (id) => {\n    setSaving(true);\n    setEmailSent(false);\n    BookService.sendRegFormEmail(id)\n      .then((res) => {\n        setSaving(false);\n        if (res.data.status === \"OK\") {\n          setEmailSent(true);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setSaving(false);\n      });\n  };\n\n  const sendInvoiceEmail = (id, _email) => {\n    setSaving(true);\n    setEmailSentInvoice(false);\n    InvoiceService.emailInvoice(id, _email)\n      .then((res) => {\n        setSaving(false);\n        if (res.data.status === \"OK\") {\n          setEmailSentInvoice(true);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setSaving(false);\n      });\n  };\n\n  const onClose = () => {\n    setEmailSent(false);\n    setEmailSentInvoice(false);\n    setInvoice(null);\n    props.onClose();\n  };\n\n  return (\n    <React.Fragment>\n      {booking && (\n        <React.Fragment>\n          <Dialog\n            maxWidth=\"md\"\n            open={props.open}\n            TransitionComponent={Transition}\n            keepMounted\n            onClose={onClose}\n            PaperComponent={PaperComponent}\n            aria-labelledby=\"alert-dialog-slide-title\"\n            aria-describedby=\"alert-dialog-slide-description\"\n          >\n            <DialogTitle\n              id=\"alert-dialog-slide-title\"\n              style={\n                booking.tr ? { backgroundColor: \"#7e0082\", color: \"#fff\" } : {}\n              }\n            >\n              <div style={{ position: \"absolute\", top: \"25x\", left: \"25px\" }}>\n                <Tooltip title=\"COPY EDIT LINK TO CLIPBOARD\">\n                  <IconButton\n                    onClick={() => {\n                      navigator.clipboard.writeText(\n                        `https://londonmedicalclinic.co.uk/medicalexpressclinic/user/edit/gp/${booking._id}`\n                      );\n                      setCopied(true);\n                      setTimeout(() => {\n                        setCopied(false);\n                      }, 1500);\n                    }}\n                    aria-label=\"delete\"\n                    className={classes.margin}\n                    size=\"small\"\n                  >\n                    <FileCopyOutlinedIcon\n                      style={booking.tr ? { color: \"#ddd\" } : {}}\n                      fontSize=\"14px\"\n                    />\n                  </IconButton>\n                </Tooltip>\n\n                <span\n                  hidden={!copied}\n                  style={{ fontSize: \"12px\", transition: \"all 1s ease-in\" }}\n                >\n                  {\" \"}\n                  Copied{\" \"}\n                </span>\n              </div>\n\n              <div\n                style={{\n                  position: \"absolute\",\n                  top: \"25x\",\n                  right: \"60px\",\n                  backgroundColor: CalendarColors.GP_COLOR,\n                  color: \"#fff\",\n                  padding: \"0px 5px\",\n                  borderRadius: \"10px\",\n                }}\n              >\n                GP\n              </div>\n\n              {/* {booking.tr && (\n                <div style={{position:\"absolute\",  right: \"15px\"}}>\n                     TR\n                </div>\n\n              )} */}\n\n              <Grid\n                container\n                direction=\"row\"\n                justify=\"center\"\n                spacing={2}\n                alignItems=\"center\"\n              >\n                <Grid item>\n                  <div\n                    style={\n                      booking.deleted\n                        ? {\n                            paddingBottom: \"5px\",\n                            textDecoration: \"line-through\",\n                          }\n                        : {}\n                    }\n                  >\n                    {`${booking.fullname}`}\n                  </div>\n                </Grid>\n\n                {booking.deleted && (\n                  <Grid item>\n                    <Tooltip title=\"This record has been deleted.\">\n                      <DeleteIcon\n                        style={\n                          booking.tr\n                            ? {\n                                padding: 0,\n                                margin: 0,\n                                color: \"#fff\",\n                                fontSize: 25,\n                              }\n                            : {\n                                padding: 0,\n                                margin: 0,\n                                color: \"#333\",\n                                fontSize: 25,\n                              }\n                        }\n                      />\n                    </Tooltip>\n                  </Grid>\n                )}\n              </Grid>\n            </DialogTitle>\n            <DialogContent>\n              <div\n                style={{\n                  // height: \"550px\",\n                  paddingTop: \"0px\",\n                }}\n              >\n                <Grid item xs={12} md={12} key={`panel0`}>\n                  <div className={classes.infoDetails}>\n                    <ul className={classes.ul}>\n                      {/* Restore Functionality ******************************************* */}\n                      <li\n                        hidden={\n                          !(\n                            restoreMode.restore &&\n                            restoreMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <div\n                          style={{\n                            fontWeight: \"500\",\n                            paddingBottom: \"5px\",\n                            paddingLeft: \"5px\",\n                            fontSize: \"16px\",\n                            color: \"#333\",\n                          }}\n                        >\n                          Are you sure you want to restore this record?\n                        </div>\n                      </li>\n\n                      <li\n                        hidden={\n                          !booking.deleted ||\n                          (restoreMode.restore &&\n                            restoreMode.person._id === booking._id)\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"primary\"\n                          onClick={() => {\n                            handleRestoreModeChanged(true, booking);\n                          }}\n                          className={classes.RestoreButton}\n                        >\n                          Restore This Record\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            restoreMode.restore &&\n                            restoreMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"primary\"\n                          disabled={restoring}\n                          onClick={() => {\n                            handleRestoreModeChanged(false, booking);\n                          }}\n                          className={classes.SaveButton}\n                        >\n                          YES, Restore this!\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            restoreMode.restore &&\n                            restoreMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"default\"\n                          disabled={restoring}\n                          onClick={() => {\n                            handleRestoreModeChanged(false, null);\n                          }}\n                          className={classes.CancelButton}\n                        >\n                          Cancel\n                        </Button>\n                      </li>\n\n                      {/*  ******************************************************************* */}\n\n                      {/* Edit Functionality ******************************************* */}\n\n                      <li\n                        hidden={\n                          booking.deleted ||\n                          deleteMode.delete ||\n                          (editMode.edit && editMode.person._id === booking._id)\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"primary\"\n                          onClick={() => {\n                            handleEditModeChanged(true, booking);\n                          }}\n                          className={classes.EditButton}\n                        >\n                          Edit Booking Info\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            editMode.edit && editMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"primary\"\n                          disabled={saving || !recordChanged}\n                          onClick={() => {\n                            handleEditModeChanged(false, booking);\n                          }}\n                          className={classes.SaveButton}\n                        >\n                          Save Changes\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            editMode.edit && editMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"default\"\n                          disabled={saving}\n                          onClick={() => {\n                            handleEditModeChanged(false, null);\n                          }}\n                          className={classes.CancelButton}\n                        >\n                          Cancel\n                        </Button>\n                      </li>\n\n                      {/* ****************************************************************************************** */}\n\n                      {/* Delete Functionality ******************************************* */}\n\n                      <li\n                        hidden={\n                          !(\n                            deleteMode.delete &&\n                            deleteMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <div\n                          style={{\n                            fontWeight: \"600\",\n                            paddingBottom: \"5px\",\n                            paddingLeft: \"5px\",\n                            fontSize: \"16px\",\n                          }}\n                        >\n                          Are you sure you want to delete this record?\n                        </div>\n                      </li>\n\n                      <li\n                        hidden={\n                          props.deleteButtonDisabled ||\n                          booking.deleted ||\n                          editMode.edit ||\n                          (deleteMode.delete &&\n                            deleteMode.person._id === booking._id)\n                        }\n                      >\n                        {booking.OTCCharges > 0 && (\n                          <Tooltip title={\"Paid Records Cannot be Deleted!\"}>\n                            <div>\n                              <Button\n                                disabled={booking.OTCCharges > 0}\n                                type=\"button\"\n                                fullWidth\n                                variant=\"contained\"\n                                color=\"primary\"\n                                onClick={() => {\n                                  handleDeleteModeChanged(true, booking);\n                                }}\n                                className={classes.DeleteButton}\n                              >\n                                Delete This Record\n                              </Button>\n                            </div>\n                          </Tooltip>\n                        )}\n                        {booking.OTCCharges === 0 && (\n                          <Button\n                            disabled={booking.OTCCharges > 0}\n                            type=\"button\"\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={() => {\n                              handleDeleteModeChanged(true, booking);\n                            }}\n                            className={classes.DeleteButton}\n                          >\n                            Delete This Record\n                          </Button>\n                        )}\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            deleteMode.delete &&\n                            deleteMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"primary\"\n                          disabled={deleting}\n                          onClick={() => {\n                            handleDeleteModeChanged(false, booking);\n                          }}\n                          className={classes.SaveButton}\n                        >\n                          YES, Delete this!\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            deleteMode.delete &&\n                            deleteMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"default\"\n                          disabled={deleting}\n                          onClick={() => {\n                            handleDeleteModeChanged(false, null);\n                          }}\n                          className={classes.CancelButton}\n                        >\n                          Cancel\n                        </Button>\n                      </li>\n\n                      {/* ****************************************************************************************** */}\n\n                      <li className={classes.li}>\n                        <Grid container spacing={2}>\n                          <Grid item xs={6}>\n                            <span className={classes.infoTitle}>\n                              BOOKED DATE\n                            </span>\n\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {FormatDateFromString(booking.bookingDate)}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                error={validationError.bookingDateError}\n                                className={classes.TextBox}\n                                value={bookingDate}\n                                onChange={bookingDateChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n                          <Grid item xs={6}>\n                            <span className={classes.infoTitle}>\n                              BOOKED TIME\n                            </span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {booking.bookingTime.toUpperCase()}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                error={validationError.bookingTimeError}\n                                className={classes.TextBox}\n                                value={bookingTime}\n                                onChange={bookingTimeChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n                        </Grid>\n                      </li>\n\n                      <li className={classes.li}>\n                        <Grid container spacing={2}>\n                          <Grid item xs={6}>\n                            <span className={classes.infoTitle}>FULLNAME</span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {booking.fullname}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                className={classes.TextBox}\n                                value={fullname}\n                                onChange={fullnameChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n                          <Grid item xs={6}>\n                            <span className={classes.infoTitle}>EMAIL</span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {booking.email}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                className={classes.TextBox}\n                                value={email}\n                                onChange={emailChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n                        </Grid>\n                      </li>\n                      <li className={classes.li}>\n                        <Grid container spacing={2}>\n                          <Grid item xs={6}>\n                            <span className={classes.infoTitle}>TEL</span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {booking.phone?.toUpperCase()}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                className={classes.TextBox}\n                                value={tel}\n                                onChange={telChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n                          <Grid item xs={6}>\n                            <span className={classes.infoTitle}>NOTES</span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {booking.notes}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                className={classes.TextBox}\n                                value={notes}\n                                onChange={notesChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n                        </Grid>\n                      </li>\n\n                      <li className={classes.li} style={{ paddingTop: \"20px\" }}>\n                        <span className={classes.infoTitle}>STATUS</span>{\" \"}\n                        {getStatusLabel(booking.status)}\n                        {booking.status === \"patient_attended\" &&\n                          !(\n                            editMode.edit && editMode.person._id === booking._id\n                          ) &&\n                          !booking.deleted && (\n                            <Button\n                              variant=\"outlined\"\n                              color=\"primary\"\n                              disabled={saving}\n                              style={{ width: \"300px\" }}\n                              onClick={(event) =>\n                                changeBackToBookingMade(event, booking._id)\n                              }\n                            >\n                              Change Back To Booking Made\n                            </Button>\n                          )}\n                        {booking.status === \"booked\" &&\n                          !(\n                            editMode.edit && editMode.person._id === booking._id\n                          ) &&\n                          !booking.deleted && (\n                            <Button\n                              variant=\"outlined\"\n                              color=\"default\"\n                              disabled={saving}\n                              style={{ width: \"300px\" }}\n                              onClick={(event) =>\n                                changeToPatientAttended(event, booking._id)\n                              }\n                            >\n                              Change To Patient Attended\n                            </Button>\n                          )}\n                      </li>\n\n                      <li hidden={booking.deleted || editMode.edit}>\n                        <Button\n                          disabled={!booking.formData}\n                          startIcon={<PrintIcon />}\n                          type=\"button\"\n                          fullWidth\n                          variant=\"outlined\"\n                          color=\"primary\"\n                          onClick={() => {\n                            downloadRegForm(booking._id);\n                          }}\n                          className={classes.DownloadForm}\n                        >\n                          Download Registration Form\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          booking.deleted || editMode.edit || booking.formData\n                        }\n                      >\n                        <Button\n                          disabled={!booking.email || booking.email.length < 3}\n                          startIcon={<SendIcon />}\n                          type=\"button\"\n                          fullWidth\n                          variant=\"outlined\"\n                          color=\"primary\"\n                          onClick={() => {\n                            sendRegForm(booking._id);\n                          }}\n                          className={classes.DownloadForm}\n                          style={{ position: \"relative\" }}\n                        >\n                          Send Registration Form Email\n                          {emailSent && (\n                            <div\n                              style={{\n                                position: \"absolute\",\n                                right: \"10px\",\n                                top: \"5px\",\n                                color: \"#05ad19\",\n                              }}\n                            >\n                              Email Sent\n                            </div>\n                          )}\n                        </Button>\n                      </li>\n\n                      <Divider />\n\n                      <li className={classes.li} style={{ marginTop: \"20px\" }}>\n                        <span className={classes.infoTitle}>INVOICE # : </span>{\" \"}\n                        <span style={{ paddingLeft: \"0px\" }}>\n                          {!invoiceLoaded && (\n                            <span className={classes.invoiceNumber}> ... </span>\n                          )}\n                          {invoiceLoaded && invoice && (\n                            <span className={classes.invoiceNumber}>\n                              {\" \"}\n                              {invoice.invoiceNumber}{\" \"}\n                            </span>\n                          )}\n                          {invoiceLoaded && !invoice && (\n                            <span\n                              className={classes.invoiceNumber}\n                              style={{ color: \"red\", fontSize: \"0.9rem\" }}\n                            >\n                              {\" \"}\n                              N/A{\" \"}\n                            </span>\n                          )}\n                        </span>\n                        {!(\n                          editMode.edit && editMode.person._id === booking._id\n                        ) &&\n                          !booking.deleted && (\n                            <React.Fragment>\n                              {invoiceLoaded && !invoice && (\n                                <Button\n                                  variant=\"outlined\"\n                                  color=\"primary\"\n                                  className={classes.PayButton}\n                                  onClick={() => OpenInvoiceDialog()}\n                                >\n                                  Issue Invoice\n                                </Button>\n                              )}\n\n                              {invoiceLoaded && invoice && (\n                                <React.Fragment>\n                                  <Button\n                                    variant=\"outlined\"\n                                    startIcon={<PrintIcon />}\n                                    color=\"primary\"\n                                    className={classes.printInvoiceButton}\n                                    onClick={() => downloadInvoice(invoice._id)}\n                                  >\n                                    Download Invoice\n                                  </Button>\n\n                                  <Button\n                                    variant=\"outlined\"\n                                    color=\"secondary\"\n                                    className={classes.editInvoiceButton}\n                                    onClick={() => OpenInvoiceDialog()}\n                                  >\n                                    Edit Invoice\n                                  </Button>\n\n                                  <Button\n                                    disabled={\n                                      !booking.email || booking.email.length < 3\n                                    }\n                                    startIcon={<SendIcon />}\n                                    type=\"button\"\n                                    variant=\"outlined\"\n                                    color=\"primary\"\n                                    onClick={() => {\n                                      sendInvoiceEmail(\n                                        invoice._id,\n                                        booking.email\n                                      );\n                                    }}\n                                    style={{\n                                      position: \"relative\",\n                                      marginLeft: \"10px\",\n                                      paddingRight: \"130px\",\n                                      fontSize: \"0.8rem\",\n                                    }}\n                                  >\n                                    Send Invoice By Email\n                                    {emailSentInvoice && (\n                                      <div\n                                        style={{\n                                          position: \"absolute\",\n                                          right: \"10px\",\n                                          top: \"5px\",\n                                          color: \"#05ad19\",\n                                        }}\n                                      >\n                                        Email Sent\n                                      </div>\n                                    )}\n                                  </Button>\n                                </React.Fragment>\n                              )}\n                            </React.Fragment>\n                          )}\n                      </li>\n\n                      <li className={classes.li} style={{ marginTop: \"20px\" }}>\n                        <span className={classes.infoTitle}>TOTAL CHARGES</span>{\" \"}\n                        <span\n                          style={{ paddingLeft: \"15px\" }}\n                          className={\n                            !booking.OTCCharges || booking.OTCCharges === 0\n                              ? classes.infoDataChargesHigher\n                              : classes.infoDataCharges\n                          }\n                        >{`£${booking.OTCCharges.toLocaleString(\n                          \"en-GB\"\n                        )}`}</span>\n                        {!(\n                          editMode.edit && editMode.person._id === booking._id\n                        ) &&\n                          !booking.paid &&\n                          !booking.deleted && (\n                            <Button\n                              variant=\"outlined\"\n                              color=\"secondary\"\n                              className={classes.PayButton}\n                              onClick={(event) => Pay()}\n                            >\n                              Pay\n                            </Button>\n                          )}\n                        {!(\n                          editMode.edit && editMode.person._id === booking._id\n                        ) &&\n                          booking.paid && (\n                            <React.Fragment>\n                              <span className={classes.PayLabel}>\n                                {\" \"}\n                                <CheckIcon\n                                  className={classes.checkIconSmall}\n                                />{\" \"}\n                                Paid by {booking.paidBy}\n                                {booking.paidBy === \"corporate\"\n                                  ? ` \"${booking.corporate}\" `\n                                  : \"\"}\n                              </span>\n\n                              <Tooltip title=\"Undo Payment\">\n                                <IconButton\n                                  onClick={() => setOpenUndoPayDialog(true)}\n                                >\n                                  <UndoIcon style={{ color: \"red\" }} />\n                                </IconButton>\n                              </Tooltip>\n                            </React.Fragment>\n                          )}\n                      </li>\n\n                      {/* <li className={classes.li}>\n                        <div\n                          style={{\n                            borderTop: \"1px solid #ddd\",\n                            paddingTop: \"10px\",\n                          }}\n                        >\n                          <span className={classes.infoTitle}>\n                            TOTAL CHARGES\n                          </span>{\" \"}\n                          <span\n                            className={\n                              !booking.OTCCharges || booking.OTCCharges === 0\n                                ? classes.infoDataChargesHigher\n                                : classes.infoDataCharges\n                            }\n                          >{`£${(\n                            booking.deposit + booking.OTCCharges\n                          ).toLocaleString(\"en-GB\")}`}</span>\n                        </div>\n                      </li> */}\n                    </ul>\n                  </div>\n                </Grid>\n              </div>\n              <Backdrop\n                className={classes.backdrop}\n                open={saving || deleting || restoring}\n              >\n                <CircularProgress color=\"inherit\" />\n              </Backdrop>\n            </DialogContent>\n\n            <PayDialog\n              booking={selectedBooking}\n              open={openPayDialog}\n              price={invoice ? invoice.grandTotal : null}\n              handleClose={handleClosePayDialog}\n            />\n\n            <InvoiceDialog\n              booking={selectedBooking}\n              invoice={invoice}\n              open={openInvoiceDialog}\n              handleClose={handleCloseInvoiceDialog}\n            />\n          </Dialog>\n\n          <Dialog\n            open={openUndoPayDialog}\n            onClose={handleCloseUndoPayDialog}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n          >\n            <DialogTitle style={{ color: \"#999\" }} id=\"alert-dialog-title\">\n              {\"Undo Payment\"}\n            </DialogTitle>\n            <DialogContent>\n              <DialogContentText\n                style={{ color: \"#333\", fontWeight: \"400\" }}\n                id=\"alert-dialog-description\"\n              >\n                Are you sure you want to undo payment for this booking?\n              </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={handleCloseUndoPayDialog} color=\"default\">\n                Back\n              </Button>\n              <Button onClick={undoPaymentClicked} color=\"secondary\" autoFocus>\n                Yes, Undo Payment\n              </Button>\n            </DialogActions>\n          </Dialog>\n\n          <Dialog\n            open={openRefundDialog}\n            onClose={handleCloseRefundDialog}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n          >\n            <DialogTitle style={{ color: \"#999\" }} id=\"alert-dialog-title\">\n              {\"Refund Deposit\"}\n            </DialogTitle>\n            <DialogContent>\n              <DialogContentText\n                style={{ color: \"#333\", fontWeight: \"400\" }}\n                id=\"alert-dialog-description\"\n              >\n                Are you sure you want to refund deposit payment for this\n                booking?\n              </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={handleCloseRefundDialog} color=\"default\">\n                Back\n              </Button>\n              <Button\n                onClick={refundPaymentClicked}\n                color=\"secondary\"\n                autoFocus\n              >\n                Yes, Refund Payment\n              </Button>\n            </DialogActions>\n          </Dialog>\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n}\n","import React, {useEffect, useRef, useState} from 'react';\nimport { DataGrid } from '@material-ui/data-grid';\nimport BookService from './services/BookService';\nimport { Button, Checkbox, CircularProgress, Dialog, DialogContent, DialogTitle, Divider, FormControl, FormControlLabel, Grid, Icon, InputLabel, LinearProgress, Link, makeStyles, MenuItem, Paper, Select, SvgIcon, Switch, TextField, Tooltip } from '@material-ui/core';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport { IconButton } from '@material-ui/core';\nimport CheckIcon from '@material-ui/icons/Check';\nimport CloseIcon from '@material-ui/icons/Close';\nimport GlobalState from './../GlobalState';\nimport { getMenuIndex } from './../MenuList';\nimport {FormatDateFromString, FormatDateFromStringShortYear} from './DateFormatter';\n\nimport SearchIcon from '@material-ui/icons/Search';\nimport BookingDialog from './BookingDialog';\n\nimport NewReleasesIcon from '@material-ui/icons/NewReleases';\nimport HistoryIcon from '@material-ui/icons/History';\nimport TimelineIcon from '@material-ui/icons/Timeline';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport AutorenewIcon from '@material-ui/icons/Autorenew';\nimport LiveTvIcon from '@material-ui/icons/LiveTv';\nimport PlaylistAddCheckIcon from '@material-ui/icons/PlaylistAddCheck';\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport HourglassEmptyIcon from '@material-ui/icons/HourglassEmpty';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faFileExcel } from \"@fortawesome/free-solid-svg-icons\";\nimport Draggable from 'react-draggable';\n\nimport * as dateformat from 'dateformat';\n\nimport DateFnsUtils from '@date-io/date-fns';\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardTimePicker,\n  KeyboardDatePicker,\n} from '@material-ui/pickers';\n\nimport BusinessIcon from '@material-ui/icons/Business';\nimport CreditCardIcon from '@material-ui/icons/CreditCard';\nimport LocalAtmIcon from '@material-ui/icons/LocalAtm';\n\n\nimport ReactHTMLTableToExcel from 'react-html-table-to-excel';\nimport PriceCalculator from './PriceCalculator';\nimport { corporates } from './Corporates';\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    marginTop: theme.spacing(0),\n    marginBottom: theme.spacing(1),\n\n  },\n  \n  refreshButton:{\n    marginLeft: theme.spacing(2),\n  },\n\n  checkIcon:{\n    color: \"green\"\n  },\n\n  closeIcon:{\n    color: \"red\"\n  },\n\n  RefLink: {\n    cursor: \"pointer\"\n  },\n\n  BookedLabel:{\n    backgroundColor: \"#606060\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  PatientAttendedLabel:{\n    backgroundColor: \"#0066aa\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  SampleTakenLabel:{\n    backgroundColor: \"#0066cc\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  ReportSentLabel:{\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  ReportCertSentLabel:{\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  PositiveLabel:{\n    backgroundColor: \"red\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  HideNowRows: {\n    position: \"absolute\",\n    top: \"40%\",\n    left: \"40%\",\n    width: \"600px\",\n    height: \"300px\",\n    backgroundColor : \"#fafafa\",\n    color : \"#111\",\n    zIndex: \"1000\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyItems: \"center\"\n  },\n\n  ExportToExcelButton:\n  {\n    // marginBottom : \"20px\",\n    color : \"#2f942e\",\n    borderColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"#fafffa\",\n      borderColor: \"#2f942e\",\n    },\n    textDecoration : \"none !important\", \n   \n  },\n\n  ExportToExcelButtonInline:\n  {\n    // marginBottom : \"20px\",\n    color : \"#2f942e\",\n    borderColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"#fafffa\",\n      borderColor: \"#2f942e\",\n    },\n    textDecoration : \"none !important\", \n    cursor: \"pointer\",\n    padding: \"10px\"\n   \n  },\n\n  table: {\n    width: \"100%\",\n    border: \"1px solid #ddd\",\n    borderCollapse: \"collapse\",\n},\n\nth: {\n    border: \"1px solid #ddd\",\n    borderCollapse: \"collapse\",\n    verticalAlign: \"middle\",\n    fontcolor: \"#555\",\n    fontWeight: \"400\",\n    fontSize: \"15px\",\n    paddingTop: \"5px\",\n    paddingBottom: \"5px\",\n    width: \"14%\",\n    paddingLeft: \"5px\",\n},\n\ntd: {\n    border: \"1px solid #ddd\",\n    borderCollapse: \"collapse\",\n    verticalAlign: \"middle\",\n    paddingLeft: \"5px\",\n},\n\ntopSelect: {\n  margin: theme.spacing(1),\n  minWidth: 80,\n},\n\nnotifyIcon:{\n  width: \"16px\",\n  height: \"16px\",\n  borderRadius: \"50%\",\n  backgroundColor : \"rgb(220, 0, 78)\",\n  marginLeft: \"10px\"\n}\n\n}));\n\nconst getTableTitle = (str) =>{\n\n  if (str === 'today')\n  {\n    return `Today's Bookings`;\n  }else if (str === 'old')\n  {\n    return `Old Bookings`;\n  }else if (str === 'future')\n  {\n    return `Future Bookings`;\n  }else if (str === 'recent')\n  {\n    return `Recent Bookings`;\n  }else if (str === 'live')\n  {\n    return `Live Bookings`;\n  }else if (str === 'completed')\n  {\n    return `Completed Bookings`;\n  }else if (str === 'positive')\n  {\n    return `Positive Results`;\n  }else if (str === 'deleted')\n  {\n    return `Deleted Records`;\n  }else if (str === 'late')\n  {\n    return `40 Hours Late`;\n  }\n  \n  else\n  {\n    return `All Bookings`;\n  }\n\n}\n\nconst getTableIcon = (str) =>{\n\n  if (str === 'today')\n  {\n    return <NewReleasesIcon style={{fontSize:\"2.2rem\"}} />;\n  }else if (str === 'old')\n  {\n    return <HistoryIcon style={{fontSize:\"2.2rem\"}} />;\n  }else if (str === 'future')\n  {\n    return <TimelineIcon style={{fontSize:\"2.2rem\"}} />;\n  }else if (str === 'recent')\n  {\n    return <AutorenewIcon style={{fontSize:\"2.2rem\"}} />;\n  }else if (str === 'live')\n  {\n    return <LiveTvIcon style={{fontSize:\"2.2rem\"}} />;\n  }else if (str === 'completed')\n  {\n    return  <PlaylistAddCheckIcon style={{fontSize:\"2.2rem\"}} />;\n  }else if (str === 'positive')\n  {\n    return <AddCircleOutlineIcon style={{fontSize:\"2.2rem\"}} />\n  }else if (str === 'deleted')\n  {\n    return <DeleteIcon style={{fontSize:\"2.2rem\"}} />;\n  }else if (str === 'late')\n  {\n    return <HourglassEmptyIcon style={{fontSize:\"2.2rem\"}} />;\n  }\n  \n  else\n  {\n    return <DescriptionIcon style={{fontSize:\"2.2rem\"}} />;\n  }\n\n}\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'}>\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nexport default function BookingTable(props) {\n  \n  const classes = useStyles();\n\n  const [topCount, setTopCount] = React.useState(25)\n  const topCountChanged = (event) =>\n  {\n    setTopCount(event.target.value)\n    loadData(event.target.value)\n  }\n  \n\n  const [openDialogExcel, setOpenDialogExcel] = useState(false);\n  const handleCloseDialogExcel = () =>\n  {\n    setCorporate(corporates[0]);\n    setJustCorporate(false);\n    setOpenDialogExcel(false);\n  }\n\n\n  const [fromDate, setFromDate] = React.useState(new Date(new Date().getTime() - 7 * 24 * 60 * 60 * 1000 ));\n  const handleFromDateChange = (date) => {\n    setFromDate(date);\n    setFromDateStr(dateformat(date,'yyyy-mm-dd'));\n  };\n\n  const [untilDate, setUntilDate] = React.useState(new Date(new Date().getTime() - 1 * 24 * 60 * 60 * 1000 ));\n  const handleUntilDateChange = (date) => {\n    setUntilDate(date);\n    seUntilDateStr(dateformat(date,'yyyy-mm-dd'));\n  };\n\n  const [fromDateStr, setFromDateStr] = useState(dateformat(new Date(new Date().getTime() - 7 * 24 * 60 * 60 * 1000 ), 'yyyy-mm-dd'));\n  const [untilDateStr, seUntilDateStr] = useState(dateformat(new Date(new Date().getTime() - 1 * 24 * 60 * 60 * 1000 ), 'yyyy-mm-dd'));\n\n  const [justCorporate, setJustCorporate] = useState(false);\n\n  const[chkDate, setChkDate] = useState(true);\n  const[chkForename, setChkForename] = useState(true);\n  const[chkSurname, setChkSurname] = useState(true);\n  const[chkDOB, setChkDOB] = useState(true);\n  const[chkEmail, setChkEmail] = useState(true);\n  const[chkTel, setChkTel] = useState(true);\n  const[chkCertificate, setChkCertidicate] = useState(true);\n  const[chkAntiBodyTest, setChkAntiBodyTest] = useState(true);\n  const[chkextRef, setChkExtRef] = useState(true);\n  const[chkPrice, setChkPrice] = useState(true);\n\n  const justCorporateChanged = (event) =>\n  {\n    setJustCorporate(event.target.checked);\n  }\n  \n\n  const chkDateChanged = (event) =>\n  {\n    setChkDate(event.target.checked);\n  }\n\n  const chkForenameChanged = (event) =>\n  {\n    setChkForename(event.target.checked);\n  }\n\n  const chkSurnameChanged = (event) =>\n  {\n    setChkSurname(event.target.checked);\n  }\n\n  const chkDOBChanged = (event) =>\n  {\n    setChkDOB(event.target.checked);\n  }\n\n  const chkEmailChanged = (event) =>\n  {\n    setChkEmail(event.target.checked);\n  }\n\n  const chkTelChanged = (event) =>\n  {\n    setChkTel(event.target.checked);\n  }\n\n  const chkCertificateChanged = (event) =>\n  {\n    setChkCertidicate(event.target.checked);\n  }\n\n  const chkAntiBodyTestChanged = (event) =>\n  {\n    setChkAntiBodyTest(event.target.checked);\n  }\n\n  const chkextRefChanged = (event) =>\n  {\n    setChkExtRef(event.target.checked);\n  }\n\n  const chkPriceChanged = (event) =>\n  {\n    setChkPrice(event.target.checked);\n  }\n\n\n\n  var columns = [];\n\n  if (props.date === 'recent')\n  {\n    columns = [\n      // { field: 'id', headerName: '#', width: 70 },\n  \n      {field: '_id', headerName:' ', width: 70, renderCell: (params) =>{\n          return (\n\n           <React.Fragment>\n\n                <Button \n                        color=\"primary\"\n                        onClick = {event => openDetailsDialog(event, params.value)}\n                > \n            \n            <SearchIcon/> \n            \n            </Button>\n\n           </React.Fragment>\n\n          \n  \n          ); \n      \n        }\n      },\n\n      { field: 'paid', headerName: 'Paid', align: 'center' , width: 90, renderCell: (params) => { \n        if (!params.value)\n        {\n           return ( \n              <React.Fragment>                    \n                    <CloseIcon className={classes.closeIcon}/>                        \n              </React.Fragment>\n           );\n        }\n        else\n        {\n           if (params.getValue('paidBy') === 'credit card')\n           {\n             return ( <CreditCardIcon className={classes.checkIcon}/> );\n           }\n           else if (params.getValue('paidBy') === 'cash')\n           {\n             return ( <LocalAtmIcon className={classes.checkIcon}/> );\n           }\n           else if (params.getValue('paidBy') === 'corporate')\n           {\n             return ( <BusinessIcon className={classes.checkIcon}/> );\n           }\n           else\n           {\n             return '';  \n           }\n        }\n  }\n },\n\n\n      { field: 'timeStamp', headerName: 'TimeStamp', width: 200, valueFormatter: (params) => { \n        return formatTimeStamp(params.value);\n        }\n      },\n  \n      { field: 'bookingDate', headerName: 'B Date', width: 110, valueFormatter: (params) => { \n              return FormatDateFromString(params.value);\n          }\n       },\n      { field: 'bookingTimeNormalized', headerName: 'B Time', width: 105 , valueGetter: (params) => {\n        return params.getValue('bookingTime');\n      }},\n      { field: 'status', headerName: 'Status', width: 100, renderCell: (params) =>{\n          if (params.value === 'booked')\n          {\n            return (\n              <span className={classes.BookedLabel}>  BM </span>\n            );\n        \n          }else if (params.value === 'patient_attended')\n          {\n            return (\n              <span  className={classes.PatientAttendedLabel}> PA </span>\n            );\n          }\n          else{\n            return 'Unknown';\n          }\n        }\n      },\n      { field: 'bookingRef', headerName: 'Ref No.', width: 120 , renderCell: (params) =>{\n        return (\n          <Tooltip title=\"Go Find By Ref\" placement=\"right\">\n              <Link className={classes.RefLink}\n              //  onClick={\n              //   () => {\n              //     console.log(params.value);\n  \n              //     setState(state => ({...state, currentMenuIndex: getMenuIndex(`pcr` , `findByRef`)}));\n              //     setState(state => ({...state, ref : params.value}));\n              //     setState(state => ({...state, refError : false})); \n              //     setState(state => ({...state, foundRecords : []}));\n              //     setState(state => ({...state, findRecords : !state.findRecords}));\n              //   }\n              // }\n              \n              >\n                {params.value}\n              </Link>\n          </Tooltip>\n  \n        );\n      }},\n      { field: 'fullname', headerName: 'Fullname', width: 250 },\n      { field: 'email', headerName: 'Email', width: 200 },\n      { field: 'phone', headerName: 'Tel', width: 150 },\n      { field: 'notes', headerName: 'Notes', width: 500 },\n    \n    ];\n\n  }\n  else\n  {\n    columns = [\n      // { field: 'id', headerName: '#', width: 70 },\n  \n      {field: '_id', headerName:' ', width: 70, renderCell: (params) =>{\n          return (\n            <React.Fragment>\n\n                <Button \n                        color=\"primary\"\n                        onClick = {event => openDetailsDialog(event, params.value)}\n                > \n            \n            <SearchIcon/> \n            \n            </Button>\n\n           </React.Fragment>\n  \n          ); \n      \n        }\n      },\n\n      { field: 'paid', headerName: 'Paid', align: 'center' , width: 90, renderCell: (params) => { \n               if (!params.value)\n               {\n                  return ( \n                    <React.Fragment>\n                                <CloseIcon className={classes.closeIcon}/> \n                                {parseInt(params.getValue('deposit')) > 0 && props.date === 'deleted' && (\n                                      <span className={classes.notifyIcon}>&nbsp;</span>\n                                )}\n\n                               \n                    </React.Fragment>\n                     \n                        \n                  \n                  \n                  );\n               }\n               else\n               {\n                  if (params.getValue('paidBy') === 'credit card')\n                  {\n                    return ( <CreditCardIcon className={classes.checkIcon}/> );\n                  }\n                  else if (params.getValue('paidBy') === 'cash')\n                  {\n                    return ( <LocalAtmIcon className={classes.checkIcon}/> );\n                  }\n                  else if (params.getValue('paidBy') === 'corporate')\n                  {\n                    return ( <BusinessIcon className={classes.checkIcon}/> );\n                  }\n                  else\n                  {\n                    return '';  \n                  }\n               }\n         }\n        },\n        { field: 'bookingDate', headerName: 'B Date', width: 110, valueFormatter: (params) => { \n          return FormatDateFromString(params.value);\n      }\n   },\n  { field: 'bookingTimeNormalized', headerName: 'B Time', width: 105 , valueGetter: (params) => {\n    return params.getValue('bookingTime');\n  }},\n  { field: 'status', headerName: 'Status', width: 100, renderCell: (params) =>{\n      if (params.value === 'booked')\n      {\n        return (\n          <span className={classes.BookedLabel}>  BM </span>\n        );\n    \n      }else if (params.value === 'patient_attended')\n      {\n        return (\n          <span  className={classes.PatientAttendedLabel}> PA </span>\n        );\n      }\n      else{\n        return 'Unknown';\n      }\n    }\n  },\n  { field: 'bookingRef', headerName: 'Ref No.', width: 120 , renderCell: (params) =>{\n    return (\n      <Tooltip title=\"Go Find By Ref\" placement=\"right\">\n          <Link className={classes.RefLink}\n          //  onClick={\n          //   () => {\n          //     console.log(params.value);\n\n          //     setState(state => ({...state, currentMenuIndex: getMenuIndex(`pcr` , `findByRef`)}));\n          //     setState(state => ({...state, ref : params.value}));\n          //     setState(state => ({...state, refError : false})); \n          //     setState(state => ({...state, foundRecords : []}));\n          //     setState(state => ({...state, findRecords : !state.findRecords}));\n          //   }\n          // }\n          \n          >\n            {params.value}\n          </Link>\n      </Tooltip>\n\n    );\n  }},\n  { field: 'fullname', headerName: 'Fullname', width: 250 },\n  { field: 'email', headerName: 'Email', width: 200 },\n  { field: 'phone', headerName: 'Tel', width: 150 },\n  { field: 'notes', headerName: 'Notes', width: 500 },\n\n    \n    ];\n  \n\n  }\n\n\n\n  const [state, setState] = React.useContext(GlobalState);  \n\n  const [data, setData] = React.useState({bookings: [] , cachedBookings: [], isFetching : true});\n\n  const [selectedRow, setSelectedRow] = React.useState(null);\n\n  const [selectedBooking, setSelectedBooking] = React.useState(null);\n  const [seeDetailsDialogOpen, setSeeDetailsDialogOpen] = React.useState(false);\n\n  const [corporate, setCorporate] = useState(corporates[0]);\n  const corporateChanged = (event) =>\n  {\n    setCorporate(event.target.value);\n  }\n  \n\n  const [filter,setFilter] = React.useState('');\n\n\n  const lastPromise = useRef();\n\n  const formatTimeStamp = (timeStamp) =>\n  {\n    const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\n    const timeStampStr = dateformat(timeStamp, 'yyyy-mm-dd');\n    if (todayStr === timeStampStr)\n    {\n      return dateformat(timeStamp, \"'Today', h:MM:ss TT\");\n    }\n    else\n    {\n       return dateformat(timeStamp, \"mmm dS, h:MM:ss TT\");\n    }\n  }\n\n  const loadData = (top) =>\n  {\n    var api = BookService.getAllBookings;\n    if (props.date === 'today')\n    {\n      api = BookService.getTodayBookings;\n    }else if (props.date === 'old')\n    {\n      api = BookService.getOldBookings;\n    }else if (props.date === 'future')\n    {\n      api = BookService.getFutureBookings;\n    }else if (props.date === 'recent')\n    {\n      api = BookService.getRecentBookingsAll;\n    }\n    else if (props.date === 'deleted')\n    {\n      api = BookService.getDeletedBookings;\n    }\n     \n    setData({bookings: [], cachedBookings: [], isFetching: true});\n   \n    // console.log(props)\n\n    const currentPromise = api(top).then( (res) =>{\n      // console.log(res)\n      for (var i=0; i < res.data.length; i++)\n      {\n        res.data[i] = {...res.data[i], id : i + 1}\n      }  \n      setData({bookings: [...res.data], cachedBookings: [...res.data], isFetching: false});\n      // return res.data;\n    }).catch(err => {\n      console.error(err)\n    })\n\n    // lastPromise.current = currentPromise;\n\n    // currentPromise.then(\n    //   result => {\n    //     if (currentPromise === lastPromise.current) {\n    //       setData({bookings: [...result], cachedBookings: [...result], isFetching: false});\n    //       setPage(1);\n    //     }\n    //   },\n    //   e => {\n    //     if (currentPromise === lastPromise.current) {\n    //         console.error(e);\n    //         setData({bookings: data.bookings, cachedBookings: data.cachedBookings, isFetching: false});\n    //     }\n    //   });\n\n  }\n\n  useEffect( () => {\n            setTopCount(25)\n            loadData(25)\n        },\n        [props.date]);\n\n\n\n\n  useEffect( () => {\n\n        if (filter && filter.trim().length > 0)\n        {\n          var filteredData = data.cachedBookings.filter( (element) => \n\n             (element.fullname.toLowerCase().indexOf(filter.toLowerCase()) >= 0)\n               \n              \n          );\n  \n  \n          setData({bookings: [...filteredData], cachedBookings: data.cachedBookings, isFetching: false});\n        }else\n        {\n          setData({bookings: [...data.cachedBookings], cachedBookings: data.cachedBookings, isFetching: false});\n        }\n      },\n      [filter]);\n\n  \n      useEffect(() => {\n\n       loadData(topCount)\n    \n      }, [state.bookingDialogDataChanged]);    \n\n\n  const handleCloseSeeDetaisDialog = () =>\n  {\n    setSelectedBooking(null);\n    setSeeDetailsDialogOpen(false);\n  }    \n  \n  const openDetailsDialog = (event, id) =>\n  {\n    const booking = data.bookings.find(element => element._id === id);\n    setSelectedBooking(booking);\n    setSeeDetailsDialogOpen(true);\n\n  }\n\n  const refreshClicked = (event) =>{\n    setFilter('');\n    loadData(topCount)\n  }\n\n  const filterChanged = (event) =>{\n    setFilter(event.target.value);\n  }\n\n  const handleSelectionChanged = (newSelection) =>\n  {\n    if (newSelection.length > 0){\n      setSelectedRow(newSelection.rows[0]);\n    }\n    \n  }\n\n  const [page, setPage] = React.useState(1);\n\n  const handleExcelButtonClicked = (event) =>\n  {\n    setOpenDialogExcel(true);\n  }\n\n  const isTopSelectHidden = (date)=>\n  {\n    return date === 'live' || date === 'positive' || date === 'late' || date === 'today'\n  }\n\n\n  return (\n    <React.Fragment>\n      {data.isFetching && (\n        <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\n          <LinearProgress color=\"primary\" />\n        </div>\n      )}\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"space-between\"\n        alignItems=\"flex-end\"\n      >\n        <Grid item md={4}>\n          <div style={{ textAlign: \"left\", paddingLeft: \"10px\" }}>\n            <Grid\n              container\n              direction=\"row\"\n              justify=\"flex-start\"\n              alignItems=\"center\"\n            >\n              <Grid item>\n                <span style={{ paddingRight: \"15px\", color: \"#555\" }}>\n                  {\" \"}\n                  {getTableIcon(props.date)}{\" \"}\n                </span>\n              </Grid>\n              <Grid item>\n                <span\n                  style={{\n                    fontSize: \"1.4rem\",\n                    fontWeight: \"600\",\n                    color: \"#444\",\n                  }}\n                >\n                  {\" \"}\n                  {getTableTitle(props.date)}{\" \"}\n                </span>\n              </Grid>\n              <Grid item>\n                <Tooltip title=\"Refresh\" placement=\"right\">\n                  <IconButton\n                    color=\"primary\"\n                    className={classes.refreshButton}\n                    onClick={refreshClicked}\n                  >\n                    <RefreshIcon />\n                  </IconButton>\n                </Tooltip>\n              </Grid>\n            </Grid>\n          </div>\n        </Grid>\n\n        <Grid item md={3}>\n          {props.date === \"completed\" && state.showCreateExcel && (\n            <div style={{ paddingBottom: \"5px\" }}>\n              <Button\n                className={classes.ExportToExcelButton}\n                variant=\"outlined\"\n                color=\"default\"\n                onClick={handleExcelButtonClicked}\n                startIcon={\n                  <FontAwesomeIcon\n                    style={{ color: \"#009900\" }}\n                    icon={faFileExcel}\n                  />\n                }\n              >\n                export to excel\n              </Button>\n            </div>\n          )}\n        </Grid>\n\n        {data.isFetching && <div className={classes.HideNowRows}></div>}\n\n        <Grid item md={3}>\n          <TextField\n            variant=\"standard\"\n            value={filter}\n            onChange={filterChanged}\n            margin=\"normal\"\n            size=\"small\"\n            id=\"filter\"\n            label=\"Filter\"\n            name=\"filter\"\n            autoComplete=\"off\"\n          />\n        </Grid>\n\n        <Grid item hidden={isTopSelectHidden(props.date)}>\n          <FormControl className={classes.topSelect}>\n            <InputLabel id=\"top-select-label\">Limit</InputLabel>\n            <Select\n              labelId=\"top-select-label\"\n              id=\"top-simple-select\"\n              value={topCount}\n              onChange={topCountChanged}\n            >\n              <MenuItem value={25}>25</MenuItem>\n              <MenuItem value={50}>50</MenuItem>\n              <MenuItem value={100}>100</MenuItem>\n              <MenuItem value={500}>500</MenuItem>\n              <MenuItem value={1000}>1000</MenuItem>\n              <MenuItem value={10000}>ALL</MenuItem>\n            </Select>\n          </FormControl>\n\n          {/* <Button onClick={() => loadData(true)}> Show all records </Button> */}\n        </Grid>\n      </Grid>\n\n      <div style={{ height: 700, width: \"100%\" }}>\n        <DataGrid\n          rows={data.bookings}\n          columns={columns}\n          autoPageSize\n          page={page}\n          onPageChange={(params) => {\n            setPage(params.page);\n          }}\n          onSelectionChange={handleSelectionChanged}\n        />\n      </div>\n\n      <BookingDialog\n        booking={selectedBooking}\n        open={seeDetailsDialogOpen}\n        onClose={handleCloseSeeDetaisDialog}\n      />\n\n      {data.bookings && data.bookings.length > 0 && (\n        <Dialog\n          maxWidth=\"lg\"\n          open={openDialogExcel}\n          onClose={handleCloseDialogExcel}\n          PaperComponent={PaperComponent}\n          aria-labelledby=\"form-dialog-title\"\n        >\n          <DialogTitle id=\"draggable-dialog-title\">\n            <Grid\n              container\n              spacing={2}\n              direction=\"row\"\n              justify=\"center\"\n              alignItems=\"center\"\n            >\n              <Grid item>\n                <FontAwesomeIcon\n                  style={{ color: \"#2f942e\", fontSize: \"2rem\" }}\n                  icon={faFileExcel}\n                />\n              </Grid>\n\n              <Grid item>\n                <div\n                  style={{\n                    color: \"#2f942e\",\n                    paddingBottom: \"5px\",\n                    fontWeight: \"800\",\n                  }}\n                >\n                  {\" \"}\n                  Export to EXCEL{\" \"}\n                </div>\n              </Grid>\n            </Grid>\n\n            <Divider />\n          </DialogTitle>\n          <DialogContent>\n            <div\n              style={{\n                minHeight: \"600px\",\n                maxHeight: \"600px\",\n                minWidth: \"1200px\",\n                maxWidth: \"1200px\",\n              }}\n            >\n              <div>\n                <Grid row container justify=\"center\" spacing={3}>\n                  <Grid item>\n                    <FormControlLabel\n                      control={\n                        <Switch\n                          checked={justCorporate}\n                          onChange={justCorporateChanged}\n                          name=\"justCorporate\"\n                        />\n                      }\n                      label=\"Just Corporate Records\"\n                    />\n                  </Grid>\n\n                  {justCorporate && (\n                    <Grid item>\n                      <FormControl\n                        style={{ marginTop: \"0px\" }}\n                        className={classes.formControl}\n                      >\n                        <Select\n                          labelId=\"select-corporate\"\n                          id=\"select-corporate-id\"\n                          value={corporate}\n                          onChange={corporateChanged}\n                        >\n                          {corporates.map((element) => (\n                            <MenuItem value={element}>{`${element}`}</MenuItem>\n                          ))}\n                        </Select>\n                      </FormControl>\n                    </Grid>\n                  )}\n                </Grid>\n\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                  <Grid row container justify=\"center\" spacing={3}>\n                    <Grid item>\n                      <KeyboardDatePicker\n                        disableToolbar\n                        variant=\"inline\"\n                        format=\"dd/MM/yyyy\"\n                        margin=\"normal\"\n                        id=\"date-picker-from\"\n                        label=\"From\"\n                        value={fromDate}\n                        onChange={handleFromDateChange}\n                        KeyboardButtonProps={{\n                          \"aria-label\": \"change date\",\n                        }}\n                      />\n                    </Grid>\n\n                    <Grid item>\n                      <KeyboardDatePicker\n                        disableToolbar\n                        variant=\"inline\"\n                        format=\"dd/MM/yyyy\"\n                        margin=\"normal\"\n                        id=\"date-picker-until\"\n                        label=\"Until\"\n                        value={untilDate}\n                        onChange={handleUntilDateChange}\n                        KeyboardButtonProps={{\n                          \"aria-label\": \"change date\",\n                        }}\n                      />\n                    </Grid>\n\n                    <Grid item>\n                      <div style={{ paddingTop: \"30px\", marginLeft: \"20px\" }}>\n                        <ReactHTMLTableToExcel\n                          id=\"test-table-xls-button\"\n                          className={classes.ExportToExcelButtonInline}\n                          table=\"table-to-xls\"\n                          filename={`PCR.Report.${fromDateStr}.${untilDateStr}`}\n                          sheet=\"PCR-Report\"\n                          buttonText=\"Download as XLS\"\n                        />\n                      </div>\n                    </Grid>\n                  </Grid>\n                </MuiPickersUtilsProvider>\n              </div>\n\n              <div>\n                <Grid container spacing={3}>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkDate}\n                          onChange={chkDateChanged}\n                          name=\"chkDate\"\n                        />\n                      }\n                      label=\"Date\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkForename}\n                          onChange={chkForenameChanged}\n                          name=\"chkForename\"\n                        />\n                      }\n                      label=\"Forename\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkSurname}\n                          onChange={chkSurnameChanged}\n                          name=\"chkSurname\"\n                        />\n                      }\n                      label=\"Surname\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkDOB}\n                          onChange={chkDOBChanged}\n                          name=\"chkDOB\"\n                        />\n                      }\n                      label=\"D.O.B\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkEmail}\n                          onChange={chkEmailChanged}\n                          name=\"chkEmail\"\n                        />\n                      }\n                      label=\"Email\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkTel}\n                          onChange={chkTelChanged}\n                          name=\"chkTel\"\n                        />\n                      }\n                      label=\"Tel\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkCertificate}\n                          onChange={chkCertificateChanged}\n                          name=\"chkCertificate\"\n                        />\n                      }\n                      label=\"Certificate\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkAntiBodyTest}\n                          onChange={chkAntiBodyTestChanged}\n                          name=\"chkAntiBodyTest\"\n                        />\n                      }\n                      label=\"AntiBodyTest\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkextRef}\n                          onChange={chkextRefChanged}\n                          name=\"chkextRef\"\n                        />\n                      }\n                      label=\"Lab No.\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkPrice}\n                          onChange={chkPriceChanged}\n                          name=\"chkPrice\"\n                        />\n                      }\n                      label=\"Price\"\n                    />\n                  </Grid>\n                </Grid>\n              </div>\n\n              <div style={{ width: \"100%\", paddingTop: \"20px\" }}>\n                <table className={classes.table} id=\"table-to-xls\">\n                  <tr>\n                    {chkDate && <th className={classes.th}>Date</th>}\n                    {chkForename && <th className={classes.th}>Forename</th>}\n                    {chkSurname && <th className={classes.th}>Surename</th>}\n                    {chkDOB && <th className={classes.th}>D.O.B</th>}\n                    {chkEmail && <th className={classes.th}>Email</th>}\n                    {chkTel && <th className={classes.th}>Tel</th>}\n                    {chkCertificate && (\n                      <th className={classes.th}>Certificate</th>\n                    )}\n                    {chkAntiBodyTest && (\n                      <th className={classes.th}>AntiBodyTest</th>\n                    )}\n                    {chkextRef && <th className={classes.th}>Lab No.</th>}\n                    {chkPrice && <th className={classes.th}>Price (£) </th>}\n                  </tr>\n\n                  {data.bookings\n                    .filter((booking) => {\n                      if (!justCorporate) {\n                        return (\n                          booking.bookingDate >= fromDateStr &&\n                          booking.bookingDate <= untilDateStr\n                        );\n                      } else {\n                        return (\n                          booking.bookingDate >= fromDateStr &&\n                          booking.bookingDate <= untilDateStr &&\n                          booking.paid &&\n                          booking.paidBy === \"corporate\" &&\n                          booking.corporate === corporate\n                        );\n                      }\n                    })\n\n                    .map((booking) => (\n                      <tr>\n                        {chkDate && (\n                          <td className={classes.td}>\n                            {FormatDateFromString(booking.bookingDate)}\n                          </td>\n                        )}\n                        {chkForename && (\n                          <td className={classes.td}>\n                            {booking.forenameCapital}\n                          </td>\n                        )}\n                        {chkSurname && (\n                          <td className={classes.td}>\n                            {booking.surnameCapital}\n                          </td>\n                        )}\n                        {chkDOB && (\n                          <th className={classes.th}>\n                            {/* {FormatDateFromString(booking.birthDate)} */}\n                          </th>\n                        )}\n                        {chkEmail && (\n                          <td className={classes.td}>{booking.email}</td>\n                        )}\n                        {chkTel && (\n                          <td className={classes.td}>{booking.phone}</td>\n                        )}\n                        {chkCertificate && (\n                          <td className={classes.td}>\n                            {booking.certificate ? \"YES\" : \"NO\"}\n                          </td>\n                        )}\n                        {chkAntiBodyTest && (\n                          <td className={classes.td}>\n                            {booking.antiBodyTest ? \"YES\" : \"NO\"}\n                          </td>\n                        )}\n                        {chkextRef && (\n                          <td className={classes.td}>{booking.extRef}</td>\n                        )}\n                        {chkPrice && (\n                          <td className={classes.td}>\n                            {PriceCalculator.calculatePrice(booking)}\n                          </td>\n                        )}\n                      </tr>\n                    ))}\n                </table>\n              </div>\n            </div>\n          </DialogContent>\n        </Dialog>\n      )}\n    </React.Fragment>\n  );\n} ","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\n\nexport default function Title(props) {\n  return (\n    <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n      {props.children}\n    </Typography>\n  );\n}\n\nTitle.propTypes = {\n  children: PropTypes.node,\n};","import React, { useEffect } from 'react';\nimport { useTheme } from '@material-ui/core/styles';\nimport { LineChart, Line, XAxis, YAxis, Label, ResponsiveContainer } from 'recharts';\nimport Title from './Title';\nimport dateformat from 'dateformat';\nimport BookService from './services/BookService';\nimport { LinearProgress } from '@material-ui/core';\n\n// Generate Sales Data\nfunction createData(time, amount) {\n  return { time, amount };\n}\n\n\nconst emptyData = [\n  createData('09:00', 0),\n  createData('10:00', 0),\n  createData('11:00', 0),\n  createData('12:00', 0),\n  createData('13:00', 0),\n  createData('14:00', 0),\n  createData('15:00', 0),\n  createData('16:00', 0),\n  createData('17:00', 0),\n  createData('18:00', undefined),\n\n];\n\nconst getCount = (data, str) =>\n{\n  if (!data)\n    return 0;\n\n  var count = 0;\n  for (var i=0; i < data.length; i++)\n  {\n    if (data[i]._id.substr(0,2) === str)\n    {\n      count += data[i].count;\n    }\n  }\n  return count;\n}\n\nexport default function Chart() {\n  const theme = useTheme();\n\n  const [data, setData] = React.useState(emptyData);\n  const [loading, setLoading] = React.useState(false)\n\n  useEffect(() =>\n  {\n    const fetchData = async () =>\n    {\n      const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\n      var result = [];\n      try\n      {\n          setLoading(true)\n          const res = await BookService.getBookingsStatsByDateStr(todayStr);\n          setLoading(false)\n          const data = res.data.result;\n          result.push(createData('09:00', getCount(data,'09')));\n          result.push(createData('10:00', getCount(data,'10')));\n          result.push(createData('11:00', getCount(data,'11')));\n          result.push(createData('12:00', getCount(data,'12')));\n          result.push(createData('13:00', getCount(data,'13')));\n          result.push(createData('14:00', getCount(data,'14')));\n          result.push(createData('15:00', getCount(data,'15')));\n          result.push(createData('16:00', getCount(data,'16')));\n          result.push(createData('17:00', getCount(data,'17')));\n          result.push(createData('18:00', undefined));\n \n           setData(result);\n      }\n      catch(err){\n        setLoading(false)\n        console.error(err);\n      }\n\n    }\n  \n   fetchData();\n\n  }, [] );\n\n  return (\n    <React.Fragment>\n       {loading && (\n        <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\n          <LinearProgress color=\"primary\" />\n        </div>\n      )}\n      <Title>Today</Title>\n      <ResponsiveContainer>\n        <LineChart\n          data={data}\n          margin={{\n            top: 16,\n            right: 16,\n            bottom: 0,\n            left: 24,\n          }}\n        >\n          <XAxis dataKey=\"time\" stroke={theme.palette.text.secondary} />\n          <YAxis stroke={theme.palette.text.secondary}>\n            <Label\n              angle={270}\n              position=\"left\"\n              style={{ textAnchor: 'middle', fill: theme.palette.text.primary }}\n            >\n              Online Bookings\n            </Label>\n          </YAxis>\n          <Line type=\"monotone\" dataKey=\"amount\" stroke={theme.palette.primary.main} dot={false} />\n        </LineChart>\n      </ResponsiveContainer>\n    </React.Fragment>\n  );\n}","import React, { useEffect } from \"react\";\nimport Link from \"@material-ui/core/Link\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Title from \"./Title\";\nimport { Grid, LinearProgress, Tooltip } from \"@material-ui/core\";\nimport * as dateformat from \"dateformat\";\nimport BookService from \"./services/BookService\";\nimport BookingDialog from \"./BookingDialog\";\n\nconst useStyles = makeStyles({\n  depositContext: {\n    flex: 1,\n  },\n\n  bookingBox: {\n    display: \"flex\",\n    margin: \"5px\",\n    padding: \"5px\",\n    maxWidth: \"90px\",\n    minHeight: \"30px\",\n    border: \"1px solid #eee\",\n    fontSize: \"12px\",\n    fontWeight: \"500\",\n    cursor: \"pointer\",\n    backgroundColor: \"#ebedf7\",\n    color: \"#3f51b5\",\n    boxShadow: \"2px 4px #fafafa\",\n    borderRadius: \"5px\",\n    textAlign: \"center\",\n    alignItems: \"center\",\n    justifyItems: \"center\",\n    align: \"center\",\n\n    \"&:hover\": {\n      background: \"#3f51b5\",\n      color: \"#ebedf7\",\n    },\n  },\n});\n\nconst isWeekend = (date) => {\n  return (\n    date.getDay() === 1 ||\n    date.getDay() === 2 ||\n    date.getDay() === 3 ||\n    date.getDay() === 6 ||\n    date.getDay() === 0\n  );\n};\n\nconst isThursday = (date) => {\n  return date.getDay() === 4; /// Thursday\n};\n\nconst isFriday = (date) => {\n  return date.getDay() === 5; /// Friday\n};\n\nconst getCurrentTimeSlot = (now) => {\n \n\n  var min = now.getMinutes();\n  var hour = now.getHours();\n\n  if (isWeekend(now) && (hour >= 14 || hour < 10)) {\n    return null;\n  }\n\n  if (hour >= 18 || hour < 10) {\n    return null;\n  }\n\n  const slotMinStr = min < 30 ? \"00\" : \"30\";\n  const pmStr = hour >= 12 ? \"PM\" : \"AM\";\n\n  if (hour > 12) hour = hour - 12;\n\n  const slotHourStr = `0${hour}`;\n\n  return `${slotHourStr}:${slotMinStr} ${pmStr}`;\n};\n\nconst getCurrentTimeSlotLabel = (timeStr) => {\n  if (!timeStr) {\n    return \"Closed\";\n  }\n\n  let endTimeStr = \"\";\n  switch (timeStr) {\n    case \"10:00 AM\":\n      endTimeStr = \"10:30 AM\";\n      break;\n    case \"10:30 AM\":\n      endTimeStr = \"11:00 AM\";\n      break;\n    case \"11:00 AM\":\n      endTimeStr = \"11:30 AM\";\n      break;\n    case \"11:30 AM\":\n      endTimeStr = \"12:00 PM\";\n      break;\n    case \"12:00 PM\":\n      endTimeStr = \"12:30 PM\";\n      break;\n    case \"12:30 PM\":\n      endTimeStr = \"01:00 PM\";\n      break;\n    case \"01:00 PM\":\n      endTimeStr = \"01:30 PM\";\n      break;\n    case \"01:30 PM\":\n      endTimeStr = \"02:00 PM\";\n      break;\n    case \"02:00 PM\":\n      endTimeStr = \"02:30 PM\";\n      break;\n    case \"02:30 PM\":\n      endTimeStr = \"03:00 PM\";\n      break;\n    case \"03:00 PM\":\n      endTimeStr = \"03:30 PM\";\n      break;\n    case \"03:30 PM\":\n      endTimeStr = \"04:00 PM\";\n      break;\n    case \"04:00 PM\":\n      endTimeStr = \"04:30 PM\";\n      break;\n    case \"04:30 PM\":\n      endTimeStr = \"05:00 PM\";\n      break;\n    case \"05:00 PM\":\n      endTimeStr = \"05:30 PM\";\n      break;\n    case \"05:30 PM\":\n      endTimeStr = \"06:00 PM\";\n      break;\n\n    default:\n      endTimeStr = \"\";\n      break;\n  }\n\n  return `${timeStr} - ${endTimeStr}`;\n};\n\nexport default function CurrentVisits() {\n  const classes = useStyles();\n\n  const [current, setCurrent] = React.useState(new Date());\n  const [bookings, setBookings] = React.useState([]);\n\n  const [selectedBooking, setSelectedBooking] = React.useState(null);\n  const [openDialog, setOpenDialog] = React.useState(false);\n\n  const [loading, setLoading] = React.useState(false);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setCurrent(new Date());\n    }, 30000);\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, []);\n\n  useEffect(() => {\n    const currentTimeSlot = getCurrentTimeSlot(current);\n    if (!currentTimeSlot) return;\n    const todayStr = dateformat(current, \"yyyy-mm-dd\");\n    setLoading(true);\n    BookService.getBookingsByDateStrandTime(todayStr, currentTimeSlot)\n      .then((res) => {\n        setLoading(false);\n        if (res.data.status === \"OK\") {\n          setBookings([...res.data.bookings]);\n        }\n      })\n      .catch((err) => {\n        setLoading(false);\n        console.log(err);\n      });\n  }, [current]);\n\n  const getBookingsBox = (_bookings) => {\n    if (_bookings && _bookings.length > 0) {\n      return (\n        <div className={classes.root}>\n          <Grid\n            container\n            justify=\"flex-start\"\n            alignItems=\"flex-start\"\n            spacing={0}\n          >\n            {_bookings.map((booking) => (\n              <Grid item>\n                <div\n                  className={classes.bookingBox}\n                  onClick={(event) => bookingCliked(event, booking)}\n                >\n                  <span style={{ textAlign: \"center\" }}>\n                    {\" \"}\n                    {`${booking.surnameCapital}`.substring(0, 10)}{\" \"}\n                  </span>\n                </div>\n              </Grid>\n            ))}\n          </Grid>\n        </div>\n      );\n    }\n  };\n\n  const bookingCliked = (event, booking) => {\n    setSelectedBooking(booking);\n    setOpenDialog(true);\n  };\n\n  const handleCloseDialog = () => {\n    setOpenDialog(false);\n  };\n\n  return (\n    <React.Fragment>\n      {loading && (\n        <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\n          <LinearProgress color=\"primary\" />\n        </div>\n      )}\n\n      <Title>Current Visits</Title>\n      <Typography component=\"p\" variant=\"h6\">\n        {getCurrentTimeSlotLabel(getCurrentTimeSlot(current))}\n      </Typography>\n      <Typography color=\"textSecondary\" className={classes.depositContext}>\n        on {dateformat(current, \"dd mmmm, yyyy\")}\n      </Typography>\n\n      {getBookingsBox(bookings)}\n\n      <BookingDialog\n        booking={selectedBooking}\n        open={openDialog}\n        onClose={handleCloseDialog}\n      />\n    </React.Fragment>\n  );\n}\n","import React, { useEffect } from 'react';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Title from './Title';\nimport BookService from './services/BookService';\nimport * as dateformat from 'dateformat';\nimport GlobalState from './../GlobalState';\nimport { getMenuIndex } from './../MenuList';\nimport {FormatDateFromString, FormatDateFromStringShortYear} from './DateFormatter';\nimport { LinearProgress } from '@material-ui/core';\n\n\nconst useStyles = makeStyles((theme) => ({\n  seeMore: {\n    marginTop: theme.spacing(3),\n  },\n}));\n\nexport default function BookingView() {\n  const classes = useStyles();\n  const [state, setState] = React.useContext(GlobalState);  \n\n  const [data, setData] = React.useState({bookings: [] , isFetching : false});\n\n  const [refresh, setRefresh] = React.useState(false);\n\n  const [loading, setLoading] = React.useState(false)\n\n  const seeMoreRecords = (event) => {\n    event.preventDefault();\n    setState(state=>({...state, currentMenuIndex:getMenuIndex('gynae',`recentBookings`)}));\n  }\n\n  const loadData = () => \n  {\n    setData({bookings: data.bookings, isFetching: true});\n    setLoading(true)\n    BookService.getRecentBookings().then( (res) =>{\n      setLoading(false)\n        setData({bookings: res.data, isFetching: false});\n\n    }).catch( (err) => {\n      setLoading(false)\n        console.log(err);\n        setData({bookings: data.bookings, isFetching: false});\n    });\n  }\n\n\n  useEffect( () => {\n          loadData();\n        },\n        [refresh]);   \n\n\n   useEffect( () => {\n     loadData();\n     const interval = setInterval(() => {\n       setRefresh(refresh => !refresh);\n     }, 30000);\n\n     return () =>\n     {\n       clearInterval(interval)\n     }\n     \n   }, []) ;    \n\n   const formatTimeStamp = (timeStamp) =>\n   {\n     const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\n     const timeStampStr = dateformat(timeStamp, 'yyyy-mm-dd');\n     if (todayStr === timeStampStr)\n     {\n       return dateformat(timeStamp, \"'Today', h:MM:ss TT\");\n     }\n     else\n     {\n        return dateformat(timeStamp, \"mmm dS, h:MM:ss TT\");\n     }\n   }\n\n  return (\n    <React.Fragment>\n       {loading && (\n        <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\n          <LinearProgress color=\"primary\" />\n        </div>\n      )}\n      <Title>Recent Bookings</Title>\n      <Table size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell>TimeStamp</TableCell>        \n            <TableCell>Fullname</TableCell>\n            <TableCell>Email</TableCell>\n            <TableCell>Tel</TableCell>\n            <TableCell>Booked Date</TableCell>\n            <TableCell>Booked Time</TableCell> \n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {data.bookings.map((row) => (\n            <TableRow key={row._id}>\n              <TableCell>{formatTimeStamp(row.timeStamp)}</TableCell>\n              <TableCell>{row.fullname}</TableCell>\n              <TableCell>{row.email}</TableCell>\n              <TableCell>{row.phone}</TableCell>\n              <TableCell>{FormatDateFromString(row.bookingDate)}</TableCell>\n              <TableCell>{row.bookingTime}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n      <div className={classes.seeMore}>\n        <Link color=\"primary\" href=\"#\" onClick={seeMoreRecords}>\n          See more records\n        </Link>\n      </div>\n    </React.Fragment>\n  );\n}","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Chart from './Chart';\nimport CurrentVisits from './CurrentVisits';\n\n\n\nimport { Tooltip } from '@material-ui/core';\nimport GlobalState from './../GlobalState';\nimport BookingView from './BookingView';\n\nconst useStyles = makeStyles((theme) => ({\n \n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 240,\n  },\n}));\n\nexport default function DashboardPreview() {\n  const classes = useStyles();\n  const [state, setState] = React.useContext(GlobalState);\n\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n\n  return (\n        <React.Fragment>\n\n<           Grid container spacing={3}>\n                    {/* Chart */}\n                    <Grid item xs={12} md={4} lg={6}>\n                    <Paper className={fixedHeightPaper}>\n                        <Chart />\n                    </Paper>\n                    </Grid>\n                    {/* Current Visits */}\n                    <Grid item xs={12} md={4} lg={6}>\n                    <Paper className={fixedHeightPaper}>\n                        <CurrentVisits />\n                    </Paper>\n                    </Grid>\n                    {/* Recent Bookings */}\n                    <Grid item xs={12}>\n                    <Paper className={classes.paper}>\n                        <BookingView/>\n                    </Paper>\n                    </Grid>\n          </Grid>\n        </React.Fragment>\n  );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport GlobalState from './../GlobalState';\nimport Grid from '@material-ui/core/Grid';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { Button, Checkbox, FormControlLabel, Link, TextField, Tooltip } from '@material-ui/core';\nimport PDFService from './services/PDFService';\n\nimport {calculatePrice} from './PriceCalculator';\n\n\nimport bookingService from './services/BookService';\nimport CheckIcon from '@material-ui/icons/Check';\nimport CloseIcon from '@material-ui/icons/Close';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nimport {FormatDateFromString, RevertFormatDateFromString} from './DateFormatter';\n\nimport PrintIcon from '@material-ui/icons/Print';\n\n\nconst useStyles = makeStyles((theme) => ({\n  box: {\n    backgroundColor : \"#373737\",\n    color: \"#fff\",\n    padding : \"1px\",\n    borderRadius : \"4px\",\n    textAlign: \"justify\",\n    paddingRight: \"40px\"\n  },\n\n  boxRed: {\n    backgroundColor : \"#dc2626\",\n    color: \"#fff\",\n    padding : \"1px\",\n    borderRadius : \"4px\",\n    textAlign: \"justify\",\n    paddingRight: \"40px\"\n  },\n\n  boxInfo: {\n    textAlign: \"justify\",\n    backgroundColor : \"#fafafa\",\n    color: \"#333\",\n    padding : \"1px\",\n    borderRadius : \"4px\",\n    paddingRight: \"40px\",\n    border: \"1px solid #eee\",\n  },\n\n  ul: {\n     listStyle: \"none\",\n     padding: \"0\",\n     margin: \"0\"\n  },\n\n  li: {\n    marginBottom : \"15px\"\n  },\n\n\n  icon: {\n    marginRight : \"8px\"\n  },\n\n  root: {\n    width: '100%',\n  },\n\n  lineThrough:{\n    textDecoration : \"line-through\",\n  },\n\n\n\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    flexBasis: '33.33%',\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n  },\n  secondaryHeading: {\n    fontSize: theme.typography.pxToRem(15),\n  },\n\n  infoDetails:{\n    textAlign: \"left\",\n  },\n\n  infoTitle:{\n    fontWeight: \"800\",\n    marginRight: \"10px\"\n  },\n\n  infoData:{\n    fontWeight: \"400\",\n  },\n\n  title:\n  {\n    // textAlign : \"center\",\n    // fontWeight : \"500\",\n    // margin: \"10px\",\n    // backgroundColor : \"#eee\",\n    // padding : \"10px\",\n    // borderRadius : \"4px\"\n    textAlign: \"center\",\n    fontWeight : \"600\",\n    marginLeft: \"10px\",\n    marginBottom: \"5px\"\n\n  },\n\n  Accordion:{\n    backgroundColor : \"#f5f5f5\",\n    color: \"#222\"\n  },\n\n  AccordionDeleted:{\n    backgroundColor : \"#aaa\",\n    color: \"#555\"\n  },\n\n  DownloadForm:{\n      marginTop: \"10px\",\n      marginBottom : \"10px\"\n  },\n\n  infoDataCharges:{\n    fontSize : \"18px\",\n    color: \"green\",\n    fontWeight : \"600\"\n  },\n\n  infoDataChargesHigher:{\n    fontSize : \"18px\",\n    color: \"red\",\n    fontWeight : \"600\"\n  },\n  BookedLabel:{\n    color: \"#606060\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#606060\"\n  },\n\n  PatientAttendedLabel:{\n    color: \"#0066aa\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#0066aa\"\n  },\n\n  SampleTakenLabel:{\n    color: \"#0066cc\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#0066cc\"\n  },\n\n  ReportSentLabel:{\n    color: \"#009900\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#009900\"\n  },\n\n  ReportCertSentLabel:{\n    color: \"#009900\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#009900\"\n  },\n\n  PositiveLabel:{\n    color: \"red\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"red\"\n  },\n\n\n  EditButton:\n  {\n    marginBottom : \"20px\",\n    backgroundColor : \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\"\n    },\n    textDecoration : \"none !important\",\n    padding: \"10px\",\n    width: \"400px\"   \n  },\n\n  RestoreButton:\n  {\n    marginBottom : \"20px\",\n    backgroundColor : \"#fafafa\",\n    color: \"#555\",\n    \"&:hover\": {\n      background: \"#f1f1f1\",\n      color: \"#111\"\n    },\n    textDecoration : \"none !important\",\n    padding: \"10px\" ,\n    width: \"400px\"    \n  },\n\n\n  DeleteButton:\n  {\n    marginBottom : \"20px\",\n    backgroundColor : \"#d90015\",\n    \"&:hover\": {\n      background: \"#b80012\",\n      color: \"#fff\"\n    },\n\n    padding: \"10px\",\n    width: \"400px\"   \n    \n  },\n\n  SaveButton:\n  {\n    marginBottom : \"10px\",\n    padding: \"10px\",\n\n    backgroundColor : \"#d1175e\",\n    \"&:hover\": {\n      background: \"#bd0d50\",\n      color: \"#fff\",\n      \n    },\n    width: \"400px\"   \n\n  },\n\n  CancelButton:\n  {\n    marginBottom : \"20px\",\n    // padding: \"10px\"\n  },\n\n  TextBox: {\n    \n    padding : \"0px\"\n\n  },\n\n  checkIcon:{\n    color: \"green\",   \n  },\n\n  closeIcon:{\n    color: \"red\"\n  },\n\n  centeredLabel : {\n    display: \"flex\",\n    alignItems: \"center\"\n  }\n\n\n\n\n\n\n}));\n\n\n\n\nexport default function PersonsBox() {\n    const classes = useStyles();\n\n    const [state, setState] = React.useContext(GlobalState);\n\n    const [expanded, setExpanded] = React.useState('panel0');\n\n    const [editMode, setEditMode] = React.useState({edit : false, person : null});\n    const [deleteMode, setDeleteMode] = React.useState({delete : false, person : null});\n    const [restoreMode, setRestoreMode] = React.useState({restore : false, person : null});\n\n    const [saving, setSaving] =  React.useState(false);\n    const [deleting, setDeleting] =  React.useState(false);\n    const [restoring, setRestoring] =  React.useState(false);\n\n    const [validationError, setValidationError] = React.useState({});\n\n\n    const [bookingDate, setBookingDate] = React.useState('');\n    const [bookingTime, setBookingTime] = React.useState('');\n\n    const [fullname, setFullname] = React.useState('');\n    const [email, setEmail] = React.useState('');\n    const [tel, setTel] = React.useState('');\n    const [service, setService] = React.useState('');\n    const [notes, setNotes] = React.useState('');\n\n\n    const bookingDateChanged = (event) =>\n    {\n      setBookingDate(event.target.value);\n      setValidationError({...validationError, bookingDateError : false});\n    }\n\n    const bookingTimeChanged = (event) =>\n    {\n      setBookingTime(event.target.value);\n      setValidationError({...validationError, bookingTimeError : false});\n    }\n\n    const fullnameChanged = (event) =>\n    {\n      setFullname(event.target.value);\n    }\n\n    const emailChanged = (event) =>\n    {\n      setEmail(event.target.value);\n    }\n\n    const telChanged = (event) =>\n    {\n      setTel(event.target.value);\n    }\n\n    const serviceChanged = (event) =>\n    {\n      setService(event.target.value);\n    }\n\n    const notesChanged = (event) =>\n    {\n      setNotes(event.target.value);\n    }\n\n\n    const handleChange = (panel) => (event, isExpanded) => {\n      setExpanded(isExpanded ? panel : false);\n    };\n\n    const getStatusLabel = (status) => {\n      if (status === 'booked')\n      {\n        return (\n          <span className={classes.BookedLabel}> Booking Made </span>\n        );\n    \n      }else if (status === 'patient_attended')\n      {\n        return (\n          <span  className={classes.PatientAttendedLabel}> Patient Attended </span>\n        );\n    \n      }\n      else{\n        return 'Unknown';\n      }\n    }\n\n\n   const handleEditModeChanged = (edit, person) => {\n\n       if (edit)\n       {\n         setFullname(person.fullname);\n         setBookingDate(FormatDateFromString(person.bookingDate));\n         setBookingTime(person.bookingTime);\n         setEmail(person.email);\n         setTel(person.phone);\n         setService(person.service)\n         if (person.notes)\n         {\n          setNotes(person.notes);\n         }\n        \n         setEditMode({edit: edit, person: person});\n\n       }\n       else if (!edit && !person)\n       {\n         setEditMode({edit: edit, person: person});\n       }\n       else if (!edit && person)\n       {\n          const booking = {};\n          const bookingId = person._id;\n          booking.email = email;\n          booking.phone = tel;\n          booking.fullname = fullname;\n          booking.notes = notes;\n          booking.service = service;\n          booking.bookingDate = RevertFormatDateFromString(bookingDate);\n          booking.bookingTime = bookingTime;\n          booking.bookingRef = person.bookingRef;\n\n          if  (validateBooking(booking))\n          {\n            updateBooking({bookingId: bookingId, person: booking});\n          }\n       }\n   }\n\n   const validateDate = (str) =>\n   {\n     var error = false;\n     if (!str || str.length !== 10)\n     {\n       error = true;\n     }\n\n     if (str.charAt(4) !== '-'  || str.charAt(7) !== '-')\n     {\n       error = true;\n     }\n\n     try\n     {\n       \n       const result = /^\\d{4}-\\d{2}-\\d{2}$/.test(str);\n       if (!result)\n       {\n          error = true;\n       }\n\n       const year = parseInt(str.substr(0,4));\n       const month = parseInt(str.substr(5,2));\n       const day = parseInt(str.substr(8,2));\n\n       if (year < 1900)\n       {\n          error = true;\n       }\n\n       if (month < 1 || month > 12)\n       {\n         error = true;\n       }        \n\n       if (day > 31)\n       {\n         error = true;\n       }\n\n     }catch(err)\n     {\n       error = true;\n     }\n\n\n\n     return !error;\n   }\n\n   const validateTime =(str) =>\n   {\n     var error = false;\n\n     const result = /^\\d{2}:\\d{2} AM$|^\\d{2}:\\d{2} PM$/.test(str);\n     if (!result)\n     {\n        error = true;\n     }\n\n     try{\n       const hour = parseInt(str.substr(0,2));\n       const minute = parseInt(str.substr(3,2));\n\n       if (hour < 0 || hour > 12)\n       {\n         error = true;\n       }\n\n       if (minute < 0 || minute > 59)\n       {\n         error = true;\n       }\n\n     }catch(err)\n     {\n       error = true;\n     }\n\n     return !error;\n   }\n\n   const validateBooking = (booking) =>\n   {\n      var error = false;\n\n      if (!validateDate(booking.bookingDate))\n      {\n        error = true;\n        setValidationError({...validationError, bookingDateError : true});\n      }\n\n      if (!validateTime(booking.bookingTime))\n      {\n        error = true;\n        setValidationError({...validationError, bookingTimeError : true});\n      }\n     \n\n      return !error;\n   }\n\n   const updateBooking = (payload) =>\n   {\n       setSaving(true);\n       bookingService.updateBooking(payload).then( (res) => {\n        setSaving(false);\n        setEditMode({edit: false, person: null});\n        setState(state => ({...state, RefreshPersonInfo : !state.RefreshPersonInfo}));\n\n       }).catch ( (err) => {\n         setSaving(false);\n         setEditMode({edit: false, person: null});\n         console.log(err);\n       });\n   }\n\n   const deleteBooking = (id) =>\n   {\n       setDeleting(true);\n       bookingService.deleteBooking(id).then( (res) => {\n        setDeleting(false);\n        setDeleteMode({delete: false, person: null});\n        setState(state => ({...state, RefreshPersonInfo : !state.RefreshPersonInfo}));\n\n       }).catch ( (err) => {\n          setDeleting(false);\n          setDeleteMode({delete: false, person: null});\n         console.log(err);\n       });\n   }\n\n   const restoreBooking = (id) =>\n   {\n       setRestoring(true);\n       bookingService.unDeleteBooking(id).then( (res) => {\n        setRestoring(false);\n        setRestoreMode({restore: false, person: null});\n        setState(state => ({...state, RefreshPersonInfo : !state.RefreshPersonInfo}));\n\n       }).catch ( (err) => {\n        setRestoring(false);\n        setRestoreMode({restore: false, person: null});\n         console.log(err);\n       });\n   }\n\n   const changeBackToBookingMade = (event, id) =>\n   {\n     setSaving(true);\n     bookingService.changeBackToBookingMade(id).then(res => {\n       setSaving(false);\n       setState(state => ({...state, RefreshPersonInfo : !state.RefreshPersonInfo}));\n     }).catch(err => {\n       console.log(err);\n       setSaving(false);\n     })\n   }\n\n\n\n   const handleDeleteModeChanged = (del, person) => {\n\n    if (del)\n    {\n      setDeleteMode({delete: del, person: person});\n    }\n    else if (!del && !person)\n    {\n      setDeleteMode({delete: del, person: person});\n    }\n    else if (!del && person)\n    {\n        deleteBooking(person._id);\n    }\n  }\n\n  const handleRestoreModeChanged = (restore, person) => {\n\n    if (restore)\n    {\n      setRestoreMode({restore: restore, person: person});\n    }\n    else if (!restore && !person)\n    {\n      setRestoreMode({restore: restore, person: person});\n    }\n    else if (!restore && person)\n    {\n        restoreBooking(person._id);\n    }\n  }\n\n  return (\n    <React.Fragment>\n          \n      <Grid container direction=\"column\" spacing={1} justify=\"flex-start\" alignItems=\"center\">\n          <div className={classes.title}> Following Records Found :</div>\n\n          {state.foundRecords.map((person,index) => (\n   \n                <Grid item xs={12} md={12} key={`panel${index}`}>\n                <div className={classes.root}>\n                    <Accordion className={person.deleted ? classes.AccordionDeleted : classes.Accordion} expanded={expanded === `panel${index}`} onChange={handleChange(`panel${index}`)}>\n                    <AccordionSummary className={person.deleted ? classes.lineThrough : ''}\n                        expandIcon={<ExpandMoreIcon />}\n                        aria-controls=\"panel1bh-content\"\n                        id={`panel${index}bh-header`}\n                    >\n                      {person.deleted && (\n                          <Tooltip  title=\"This record has been deleted.\">\n                            <DeleteIcon  style={{padding: 0, margin: 0,  color: \"#fff\", fontSize: 25 }}/>\n                        </Tooltip>\n                      )}\n\n                        <Typography className={classes.heading}> {`#${index+1}`} </Typography>\n                        <Typography className={classes.secondaryHeading}>\n                        {`${person.fullname}`}\n                        </Typography>\n                    </AccordionSummary>\n\n                    <AccordionDetails className={classes.infoDetails}>\n                        \n\n\n                        <ul className={classes.ul}>\n\n                        {/* Restore Functionality ******************************************* */}  \n                        <li hidden={!(restoreMode.restore && restoreMode.person._id  === person._id)}>\n                              <div style={{fontWeight: \"500\", paddingBottom: \"5px\", paddingLeft: \"5px\", fontSize:\"16px\" , color:\"#fff\"}}>\n                                Are you sure you want to restore this record?\n                              </div>\n                            </li>\n\n                            <li hidden={!person.deleted || (restoreMode.restore && restoreMode.person._id === person._id)}>\n                                 <Button\n\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick = {() => {handleRestoreModeChanged(true, person)}}\n                                    className={classes.RestoreButton}\n                                 >\n                                   Restore This Record\n                                </Button>\n                            </li>\n\n                            <li hidden={!(restoreMode.restore && restoreMode.person._id  === person._id)}>\n                                 <Button\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    disabled = {restoring}\n                                    onClick = {() => {handleRestoreModeChanged(false, person)}}\n                                    className={classes.SaveButton}\n                                 >\n                                    YES, Restore this!\n                                </Button>\n                            </li>\n\n                            <li hidden={!(restoreMode.restore && restoreMode.person._id  === person._id)}>\n                                 <Button\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"default\"\n                                    disabled = {restoring}\n                                    onClick = {() => {handleRestoreModeChanged(false, null)}}\n                                    className={classes.CancelButton}\n                                 >\n                                    Cancel\n                                </Button>\n                            </li>\n\n                           {/*  ******************************************************************* */}\n\n                              {/* Edit Functionality ******************************************* */}\n\n                            <li hidden={person.deleted || deleteMode.delete || (editMode.edit && editMode.person._id === person._id)}>\n                                 <Button\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick = {() => {handleEditModeChanged(true, person)}}\n                                    className={classes.EditButton}\n                                 >\n                                    Edit Booking Info\n                                </Button>\n                            </li>\n\n                            <li hidden={!(editMode.edit && editMode.person._id  === person._id)}>\n                                 <Button\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    disabled = {saving}\n                                    onClick = {() => {handleEditModeChanged(false, person)}}\n                                    className={classes.SaveButton}\n                                 >\n                                    Save Changes\n                                </Button>\n                            </li>\n\n                            <li hidden={!(editMode.edit && editMode.person._id === person._id)}>\n                                 <Button\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"default\"\n                                    disabled = {saving}\n                                    onClick = {() => {handleEditModeChanged(false, null)}}\n                                    className={classes.CancelButton}\n                                 >\n                                    Cancel\n                                </Button>\n                            </li>\n                            \n                            {/* ****************************************************************************************** */}\n\n\n                            {/* Delete Functionality ******************************************* */}\n\n                            <li hidden={!(deleteMode.delete && deleteMode.person._id  === person._id)}>\n                              <div style={{fontWeight: \"600\",  paddingBottom: \"5px\", paddingLeft: \"5px\", fontSize:\"16px\"}}>\n                                Are you sure you want to delete this record?\n                              </div>\n                            </li>\n\n                            <li hidden={person.deleted ||  editMode.edit || (deleteMode.delete && deleteMode.person._id === person._id)}>\n                                 <Button\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick = {() => {handleDeleteModeChanged(true, person)}}\n                                    className={classes.DeleteButton}\n                                 >\n                                   Delete This Record\n                                </Button>\n                            </li>\n\n                            <li hidden={!(deleteMode.delete && deleteMode.person._id  === person._id)}>\n                                 <Button\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    disabled = {deleting}\n                                    onClick = {() => {handleDeleteModeChanged(false, person)}}\n                                    className={classes.SaveButton}\n                                 >\n                                    YES, Delete this!\n                                </Button>\n                            </li>\n\n                            <li hidden={!(deleteMode.delete && deleteMode.person._id === person._id)}>\n                                 <Button\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"default\"\n                                    disabled = {deleting}\n                                    onClick = {() => {handleDeleteModeChanged(false, null)}}\n                                    className={classes.CancelButton}\n                                 >\n                                    Cancel\n                                </Button>\n                            </li>\n                                 \n                            {/* ****************************************************************************************** */}\n\n                            <li className={classes.li}>\n                                <span className={classes.infoTitle}>BOOKED DATE</span> \n                            \n\n                                <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                   {FormatDateFromString(person.bookingDate) }\n                                  </span>  \n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                          <TextField \n                                                      fullWidth\n                                                      error={validationError.bookingDateError}\n                                                      className={classes.TextBox} \n                                                      value={bookingDate}\n                                                      onChange = {bookingDateChanged}\n                                                      inputProps= {{\n                                                          style:{\n                                                            padding: 0\n                                                          }\n                                                        }\n                                                      }\n                                                      > \n                                          </TextField> \n                                        </span> \n\n\n                            </li>\n\n                            <li className={classes.li}>\n                                <span className={classes.infoTitle}>BOOKED TIME</span> \n                                <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.bookingTime}</span>  \n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                          <TextField \n                                                      fullWidth\n                                                      error={validationError.bookingTimeError}\n                                                      className={classes.TextBox} \n                                                      value={bookingTime}\n                                                      onChange = {bookingTimeChanged}\n                                                      inputProps= {{\n                                                          style:{\n                                                            padding: 0\n                                                          }\n                                                        }\n                                                      }\n                                                      > \n                                          </TextField> \n                                        </span> \n\n\n                            </li>\n\n                            <li className={classes.li}>\n                            <span className={classes.infoTitle}>FULLNAME</span> \n                                        <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.fullname}</span>  \n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                        <TextField \n                                                      fullWidth\n                                                      className={classes.TextBox} \n                                                      value={fullname}\n                                                      onChange = {fullnameChanged}\n                                                      inputProps= {{\n                                                          style:{\n                                                            padding: 0\n                                                          }\n                                                        }\n                                                      }\n                                                      > \n                                          </TextField> \n                                        </span> \n                            </li>\n                            <li className={classes.li}>\n                                <span className={classes.infoTitle}>EMAIL</span> \n                                       <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.email}</span>  \n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                        <TextField \n                                                      fullWidth\n                                                      className={classes.TextBox} \n                                                      value={email}\n                                                      onChange = {emailChanged}\n                                                      inputProps= {{\n                                                          style:{\n                                                            padding: 0\n                                                          }\n                                                        }\n                                                      }\n                                                      > \n                                          </TextField> \n                                        </span>   \n                            </li>\n                            <li className={classes.li}>\n                                <span className={classes.infoTitle}>TEL</span>\n                                 <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.phone}</span>  \n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                        <TextField \n                                                      fullWidth\n                                                      className={classes.TextBox} \n                                                      value={tel}\n                                                      onChange = {telChanged}\n                                                      inputProps= {{\n                                                          style:{\n                                                            padding: 0\n                                                          }\n                                                        }\n                                                      }\n                                                      > \n                                          </TextField> \n                                        </span>  \n                            </li>\n                            <li className={classes.li}>\n                                <span className={classes.infoTitle}>SERVICE</span>\n                                 <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.service}</span>  \n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                        <TextField \n                                                      fullWidth\n                                                      className={classes.TextBox} \n                                                      value={service}\n                                                      onChange = {serviceChanged}\n                                                      inputProps= {{\n                                                          style:{\n                                                            padding: 0\n                                                          }\n                                                        }\n                                                      }\n                                                      > \n                                          </TextField> \n                                        </span>  \n                            </li>\n                            <li className={classes.li}>\n                                <span className={classes.infoTitle}>NOTES</span>\n                                 <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.notes}</span>  \n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                        <TextField \n                                                      fullWidth\n                                                      className={classes.TextBox} \n                                                      value={notes}\n                                                      onChange = {notesChanged}\n                                                      inputProps= {{\n                                                          style:{\n                                                            padding: 0\n                                                          }\n                                                        }\n                                                      }\n                                                      > \n                                          </TextField> \n                                        </span>  \n                            </li>\n                            <li className={classes.li}>\n                                <span className={classes.infoTitle}>STATUS</span> \n                                {getStatusLabel(person.status)} \n                            </li>\n      \n\n                        </ul>\n\n                    </AccordionDetails>\n                    </Accordion>\n                </div>\n            </Grid> \n          ))}\n    </Grid>\n    </React.Fragment>\n  );\n}\n","import React, { useEffect } from 'react';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport GlobalState from './../GlobalState';\nimport Alert from '@material-ui/lab/Alert';\nimport PropTypes from 'prop-types';\nimport MaskedInput from 'react-text-mask';\nimport { FormControl, Grid, Input, InputLabel } from '@material-ui/core';\nimport BookService from './services/BookService';\nimport PersonsBox from './PersonsBox';\nimport { width } from '@material-ui/system';\n\n\nconst isBoolean = (param) => typeof(param) === \"boolean\"\n\nconst useFocus = (initialFocus = false, id = \"\") => {\n    const [focus, setFocus] = React.useState(initialFocus)\n    const setFocusWithTrueDefault = (param) => setFocus(isBoolean(param)? param : true)\n    return ([\n        setFocusWithTrueDefault, {\n            autoFocus: focus,\n            key: `${id}${focus}`,\n            onFocus: () => setFocus(true),\n            onBlur: () => setFocus(false),\n        },\n    ])\n}\n\n\nfunction TextMaskCustom(props) {\n    const { inputRef, ...other } = props;\n  \n    return (\n      <MaskedInput\n        {...other}\n        ref={(ref) => {\n          inputRef(ref ? ref.inputElement : null);\n        }}\n        mask={[/\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/]}\n        // placeholderChar={'\\u2000'}\n        showMask\n      />\n    );\n  }\n  \n  TextMaskCustom.propTypes = {\n    inputRef: PropTypes.func.isRequired,\n  };\n\n\n\nconst useStyles = makeStyles((theme) => ({\n\n    root: {\n        width: '100%',\n        '& > * + *': {\n          marginTop: theme.spacing(2),\n        },\n        marginTop: \"20px\"\n      },  \n\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n\n    Find: {\n        width: \"80px\"\n    },\n\n    Clear:{\n        marginRight: \"20px\"\n    },\n\n    title:{\n        marginTop : \"20px\"\n    },\n\n    TextBox:{\n        marginTop: \"30px\",\n        \"& > *\" :\n        {\n            textAlign: \"center\"\n        },\n  \n    },\n\n    TextField:{\n\n    },\n\n    NoRecordsFound:{\n        marginTop: \"20px\",\n        color: \"red\",\n        fontWeight: \"600\",\n        fontSize: \"14px\",\n    },\n\n    PersonsBox:{\n        marginTop : \"20px\",\n        marginBottom: \"50px\",\n    }\n\n}));\n\nexport default function FindByRef() {\n  const classes = useStyles();\n  const [state, setState] = React.useContext(GlobalState);\n  \n  const [setFocus, focusProps] = useFocus(true);\n\n//   useEffect( () =>\n//   {\n//      findRecords();\n//   }, [state.findRecords]);\n\n useEffect ( () => {\n    setState(state => ({...state, foundRecords : []}));\n }, [])\n\n  useEffect( () => {\n    BookService.getBookingsByRef(state.ref).then( (res)=>\n    {\n        if (res.data.length > 0)\n        {\n            setState(state => ({...state, foundRecords : res.data}));\n        }\n    });\n    }, [state.RefreshPersonInfo]);\n\n    const handleChange = (event) =>\n    {\n        setState(state => ({...state, ref : event.target.value}));\n        setState(state => ({...state, refError : false})); \n    }\n\n    const clearField = () =>\n    {\n        setState(state => ({...state, refError : false})); \n        setState(state => ({...state, ref : '___-___-___'}));\n        setState(state => ({...state, foundRecords : []}));\n        setFocus();\n    }\n\n    const findRecords = () =>\n    {\n        if (!state.ref || state.ref.indexOf('_') >= 0)\n        {\n            setState(state => ({...state, refError : true}));  \n            return;\n        }\n\n        setState(state => ({...state, submiting : true}));\n        setState(state => ({...state, foundRecords : []}));\n\n        BookService.getBookingsByRef(state.ref).then( (res)=>\n        {\n            setState(state => ({...state, submiting : false}));\n            if (res.data.length > 0)\n            {\n                setState(state => ({...state, foundRecords : res.data}));\n            }\n            else\n            {\n                setState(state => ({...state, foundRecords : null}));\n            }\n            \n            console.log(res.data);\n\n        }).catch( (err) =>\n        {\n            console.log(err);\n            setState(state => ({...state, submiting : false}));\n        });\n    }\n\n  return (\n    <React.Fragment>\n        <CssBaseline />\n        <div className={classes.title}>\n            <Typography component=\"h6\" variant=\"h6\" align=\"center\">\n                Find Booking Appoinments\n            </Typography>  \n        </div> \n\n        <Grid container direction=\"column\" spacing={1} justify=\"flex-start\"  alignItems=\"center\">\n\n        <Grid item xs={12} md={12}>\n            <FormControl className={classes.TextBox}>\n                <TextField\n                    {...focusProps}\n                    autoFocus \n                    pattern=\"[0-9]*\"\n                    error = {state.refError ? true : false} \n                    value = {state.ref}\n                    className = {classes.TextField}\n                    width = \"50px\"\n                    onChange={handleChange}\n                    label=\"Reference No.\"\n                    helperText=\"Enter Your 9-digits Reference No.\"\n                    name=\"refNo\"\n                    id=\"refNo\"\n                    variant=\"outlined\"\n                    \n                    size=\"medium\"\n                    margin=\"normal\"\n                    fullWidth = {true}\n                    InputProps={{\n                        inputComponent: TextMaskCustom,\n                        style: { textAlign: 'center', fontSize:\"24px\", width: \"210px\", paddingLeft: \"20px\" }\n                    }}\n\n                    onKeyPress= {event => {\n                        if (event.key === 'Enter') {\n                            findRecords();\n                        }\n                      }}\n                />         \n            </FormControl>\n        </Grid>\n\n        <Grid item xs={12} md={12}>\n               \n                <Button\n                    disabled = {state.submiting}\n                    color=\"default\"\n                    onClick = {clearField}\n                    onTouchTap = {clearField}\n                    className={classes.Clear}\n                >\n                    Clear \n                </Button>  \n            \n                <Button\n                    type=\"button\"\n                    disabled = {state.submiting}\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick = {findRecords}\n                    onTouchTap = {findRecords}\n                    className={classes.Find}\n                >\n                    Find \n                </Button>  \n        </Grid>\n\n        <Grid item xs={12} md={12}>\n\n                    \n\n            {state.foundRecords && state.foundRecords.length > 0 && (\n                <React.Fragment>\n\n                    <div className={classes.PersonsBox}>\n                          <PersonsBox/>\n                    </div>\n                    \n\n\n                </React.Fragment>\n            )}   \n\n            {!state.foundRecords && (\n                <React.Fragment>\n\n                <div className={classes.root}>\n                    <Alert severity=\"error\"> <strong>No Records Found !</strong> <br/> Please check you reference number again.</Alert>\n                </div> \n                   \n                </React.Fragment>\n            )}\n\n        </Grid>\n        \n        \n        </Grid>\n        \n    </React.Fragment>\n   \n  );\n}","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport dateformat from 'dateformat';\nimport BookService from '../services/BookService';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport GlobalState from '../../GlobalState';\n\n\nconst useStyles = makeStyles((theme) => ({\n\n    Container: {\n        width: \"100%\",\n        paddingTop: \"70%\",\n        position: \"relative\",\n        backgroundColor: \"#fff\",\n        cursor: \"pointer\"\n    },\n\n    ContainerPast: {\n        width: \"100%\",\n        paddingTop: \"70%\",\n        position: \"relative\",\n        backgroundColor: \"#fafafa\"\n    },\n    \n    DayLabel: {\n        position: \"absolute\",\n        top: \"5px\",\n        right: \"5px\",\n        color: \"#555\",\n        fontSize: \"1rem\"\n    },\n\n    DayLabelToday: {\n        position: \"absolute\",\n        top: \"5px\",\n        right: \"5px\",\n        backgroundColor: \"#1a73e8\",\n        color: \"#fff\",\n        fontSize: \"1rem\",\n        borderRadius: \"50%\",\n        padding: \"5px\",\n        lineHight: \"35px\",\n        minWidth: \"35px\"\n    },\n\n    DayLabelDisabled: {\n        position: \"absolute\",\n        top: \"5px\",\n        right: \"5px\",\n        color: \"#ddd\",\n        fontSize: \"1rem\"\n    },\n\n    BookingCountLabel: {\n        position: \"absolute\",\n        top: \"35%\",\n        left: \"40%\",\n        color: \"#3f51b5\",\n        backgroundColor: \"#ebedf7\",\n        fontSize: \"16px\",\n        fontWeight: \"600\",\n        padding: \"10px\",\n        borderRadius: \"50%\",\n        minWidth: \"40px\",\n        lineHight: \"40px\",\n        cursor: \"pointer\",\n        textAlign: \"center\"\n    },\n\n    BookingCountLabelBusy: {\n        position: \"absolute\",\n        top: \"35%\",\n        left: \"40%\",\n        color: \"#b00000\",\n        backgroundColor: \"#fce6e6\",\n        fontSize: \"16px\",\n        fontWeight: \"600\",\n        padding: \"10px\",\n        borderRadius: \"50%\",\n        minWidth: \"40px\",\n        cursor: \"pointer\",\n        textAlign: \"center\"\n    },\n\n    LoadingProgress: {\n        position: \"absolute\",\n        top: \"40%\",\n        left: \"40%\",\n      },\n\n      BookingCountGauge: {\n        position: \"absolute\",\n        bottom: \"5%\",\n        left: \"8%\",\n        width : \"8%\",\n        height: \"85%\"\n    },\n\n  }));\n\nconst MAX_BOOKING_COUNT = 10;  \n\nconst MonthViewCell = ({key, cellIndex, month, daysInMonth, dayClicked}) => {\n    const classes = useStyles();\n\n    const [state, setState] = React.useContext(GlobalState);\n\n    const [dateStr, setDateStr] = React.useState('');\n\n    const [cellDate, setCellDate] = React.useState(new Date());\n\n    const [bookingsCount, setBookingsCount] = React.useState(-1);\n\n    const [disableDay, setDisableDay] = React.useState(false);\n\n    const [isPast, setIsPast] = React.useState(false);\n\n    useEffect( () => {\n\n        if (cellIndex <= daysInMonth.length)\n        {\n            const date = daysInMonth[cellIndex - 1];\n            const dateStr = dateformat(date, 'yyyy-mm-dd');\n            setDateStr(dateStr);\n            setCellDate(date);\n            setDisableDay(date.getMonth() !== month - 1);\n            const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\n            setIsPast(dateStr < todayStr);\n        }\n        else\n        {\n            const day = cellIndex - daysInMonth.length;\n            const date = new Date((daysInMonth[daysInMonth.length - 1].getTime() + ( day * 86400000)));\n            const dateStr = dateformat(date, 'yyyy-mm-dd');\n            setDateStr(dateStr);\n            setCellDate(date);\n            setDisableDay(true);\n            const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\n            setIsPast(dateStr < todayStr);\n        }\n\n    }, [cellIndex, month, daysInMonth]);\n\n    useEffect ( () => {\n\n        const fecthData = async () =>\n        {\n            if (!dateStr || dateStr.length <= 0)\n            {\n                return;\n            }\n        \n            if (disableDay)\n            {\n                setBookingsCount(-2);\n                return;\n            }\n\n            setBookingsCount(-1);\n\n            var res = state.AdminCalendarCache?.find(record => record.method === 'getBookingsCountByDateStr' && record.query === dateStr)?.res;\n\n            if (!res)\n            {\n                res = await BookService.getAllBookingsCountByDateStr(dateStr);\n                setState(state => ({...state, AdminCalendarCache : [...state.AdminCalendarCache, {method: 'getBookingsCountByDateStr' , query : dateStr, res: res}]}));\n            }\n        \n            if (res.data.count >= 0)\n            {\n                setBookingsCount(res.data.count);\n            }\n\n        }\n\n      fecthData();\n\n    }, [dateStr]);\n\n    const getDayLabel = (_cellIndex , _month , _daysInMonth) =>\n    {\n        var date = null;\n        var disabled = false;\n        var day = -1;\n\n    \n\n        if (_cellIndex <= _daysInMonth.length)\n        {\n            date = _daysInMonth[_cellIndex - 1];\n            day = date.getDate();\n            if (date.getMonth() !== _month - 1)\n            {\n                disabled = true;\n            }\n        }\n        else\n        {\n            const _day = _cellIndex - _daysInMonth.length;\n            const date = new Date((_daysInMonth[_daysInMonth.length - 1].getTime() + ( _day * 86400000)));\n            day = date.getDate();\n            disabled = true;\n        }\n\n        const isToday = dateformat(new Date(),'yyyy-mm-dd') === dateformat(date, 'yyyy-mm-dd');\n\n        return (\n            <span className={(disabled) ? classes.DayLabelDisabled : isToday ? classes.DayLabelToday : classes.DayLabel}>\n                 {day > 0 ? `${day}` : ''}\n             </span>\n        );\n    }\n\n    const getBookingsCountLabel = (_bookingsCount) =>\n    {\n        if (_bookingsCount === -1)\n        {\n            return (\n                <div className={classes.LoadingProgress}>\n                      <CircularProgress disableShrink  />\n                </div>\n            );  \n        }\n        else if (_bookingsCount > 0 )\n        {\n            if (_bookingsCount >= MAX_BOOKING_COUNT / 2)\n            {\n                return (\n                    <div onClick={(event => dayClicked(event,cellDate))} className={classes.BookingCountLabelBusy}>\n                        {_bookingsCount < 10 ?  ` ${_bookingsCount}` : `${_bookingsCount}`}\n                    </div>\n                );\n            }\n            else\n            {\n                return (\n                    <div onClick={(event => dayClicked(event,cellDate))} className={classes.BookingCountLabel}>\n                          {_bookingsCount < 10 ?  ` ${_bookingsCount}` : `${_bookingsCount}`}\n                    </div>\n                );\n            }\n        }\n    }\n\n    const getBookingsCountGauge = (_bookingsCount) =>\n    {\n        if (_bookingsCount > 0)\n        {\n            let percent = (_bookingsCount / MAX_BOOKING_COUNT) * 100;\n            if (percent > 100)\n            {\n                percent = 100;\n            }\n\n            percent = 100 - percent;\n\n            return (\n\n                <div className={classes.BookingCountGauge}>\n                  <div style={{padding:\"0\", margin:\"0\", width:\"100%\", height:\"100%\", backgroundColor: \"#3f51b5\"}} >\n                        <div  style={{padding:\"0\", margin:\"0\", width:\"100%\", height:`${percent}%`, backgroundColor: \"#fafafa\"}} >\n\n                        </div>\n                  </div>\n                </div>\n            );\n        }\n    }\n\n    return (\n        <React.Fragment>\n\n            <div className={classes.Container}  onClick={(event => dayClicked(event,cellDate))} >\n\n              {getDayLabel(cellIndex, month, daysInMonth)}\n\n              {getBookingsCountLabel(bookingsCount)}\n\n              {getBookingsCountGauge(bookingsCount)}\n\n            </div>\n\n        </React.Fragment>\n\n\n    );\n}\n\nMonthViewCell.propTypes = {\n    key: PropTypes.string.isRequired,\n    cellIndex: PropTypes.number.isRequired,\n    month: PropTypes.number.isRequired,\n    daysInMonth: PropTypes.arrayOf(PropTypes.date),\n    dayClicked: PropTypes.func\n  };\n\n \n  \nexport default MonthViewCell;","import calendar from 'node-calendar';\n\n\nexport default class CalendarUtil {\n\n    static getMonthRange = (month , year) =>\n    {\n        return new calendar.Calendar(calendar.SUNDAY).itermonthdates(year, month);\n    } \n\n} ","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport MonthViewCell from './MonthViewCell';\nimport CalendarUtil from './calendar-util';\n\nconst dayLables = ['Sun', 'Mon', 'Tue', 'Wed' , 'Thu', 'Fri', 'Sat'];\nconst days = [1,2,3,4,5,6,7]; \nconst rows = [1,2,3,4,5,6];\n\nconst useStyles = makeStyles((theme) => ({\n\n    table: {\n        width: \"100%\",\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n    },\n\n    th: {\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        verticalAlign: \"middle\",\n        fontcolor: \"#555\",\n        fontWeight: \"400\",\n        fontSize: \"15px\",\n        paddingTop: \"5px\",\n        paddingBottom: \"5px\",\n        width: \"14%\"\n    },\n\n    td: {\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        verticalAlign: \"middle\",\n    }\n\n  }));\n\nconst MonthView = ({month, year, dayClicked}) => {\n    const classes = useStyles();\n\n    const daysInMonth = CalendarUtil.getMonthRange(month,year);\n\n    return (\n        <React.Fragment>\n\n            <table className={classes.table}>\n                <thead>\n                    <tr>\n                        {dayLables.map(label => (\n                            <th key={`th-${label}`} className={classes.th}>\n                                {label}\n                            </th>\n                        ))}\n                    </tr>\n                </thead>\n                <tbody>\n                    {rows.map(row => (\n                        <tr>\n                            {days.map(day => (\n                                <td className={classes.td}>\n                                    <MonthViewCell \n                                        key={`${month}${year}${(row-1) * days.length + day}`} \n                                        cellIndex={(row-1) * days.length + day} \n                                        month={month} \n                                        daysInMonth={daysInMonth}\n                                        dayClicked = {dayClicked}\n                                        />\n                                </td>\n                            ))}\n                        </tr>\n                    ))}            \n                </tbody>\n\n            </table>\n\n      \n        </React.Fragment>\n\n\n    );\n}\n\nMonthView.propTypes = {\n    month: PropTypes.number.isRequired,\n    year: PropTypes.number.isRequired,\n    dayClicked: PropTypes.func\n  };\n\n\nexport default MonthView;","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport dateformat from 'dateformat';\nimport BookService from '../services/BookService';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport GlobalState from '../../GlobalState';\n\nimport axios from 'axios'\n\nconst useStyles = makeStyles((theme) => ({\n\n    Container: {\n        width: \"100%\",\n        paddingTop: \"40%\",\n        position: \"relative\",\n        backgroundColor: \"#fff\",\n        cursor: \"pointer\"\n    },\n\n    ContainerPast: {\n        width: \"100%\",\n        paddingTop: \"40%\",\n        position: \"relative\",\n        backgroundColor: \"#fafafa\",\n        cursor: \"pointer\"\n    },\n    \n    DayLabel: {\n        position: \"absolute\",\n        top: \"5px\",\n        right: \"5px\",\n        color: \"#555\",\n        fontSize: \"1rem\"\n    },\n\n    DayLabelDisabled: {\n        position: \"absolute\",\n        top: \"5px\",\n        right: \"5px\",\n        color: \"#ddd\",\n        fontSize: \"1rem\"\n    },\n\n    BookingCountLabel: {\n        position: \"absolute\",\n        top: \"25%\",\n        left: \"38%\",\n        color: \"#3f51b5\",\n        backgroundColor: \"#ebedf7\",\n        fontSize: \"14px\",\n        fontWeight: \"600\",\n        padding: \"5px\",\n        borderRadius: \"50%\",\n        minWidth: \"30px\",\n        cursor : \"pointer\",\n        textAlign: \"center\"\n    },\n\n    BookingCountLabelBusy: {\n        position: \"absolute\",\n        top: \"25%\",\n        left: \"38%\",\n        color: \"#b00000\",\n        backgroundColor: \"#fce6e6\",\n        fontSize: \"14px\",\n        fontWeight: \"600\",\n        padding: \"5px\",\n        borderRadius: \"50%\",\n        minWidth: \"30px\",\n        cursor : \"pointer\",\n        textAlign: \"center\"\n    },\n\n    LoadingProgress: {\n        position: \"absolute\",\n        top: \"40%\",\n        left: \"40%\",\n      },\n\n      BookingCountGauge: {\n        position: \"absolute\",\n        bottom: \"5%\",\n        left: \"8%\",\n        width : \"85%\",\n        height: \"8%\"\n    },\n\n  }));\n\nconst MAX_BOOKING_COUNT = 1;  \n\nconst WeekViewCell = ({key, date, time, dayClicked}) => {\n    const classes = useStyles();\n\n    const [state, setState] = React.useContext(GlobalState);\n    const [bookingsCount, setBookingsCount] = React.useState(-1);\n    const [isPast, setIsPast] = React.useState(false);\n\n    const [cellDate, setCellDate] = React.useState(new Date());\n\n    useEffect( () => {\n        const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\n        setIsPast(date < todayStr);\n\n        setCellDate(new Date(date));\n\n    }, [date]);\n\n    useEffect ( () => {\n      \n      \n      \n        if (!date || date.length <= 0 || !time || time.length <= 0)\n        {\n            return;\n        }\n        \n        // if (isPast)\n        // {\n        //     setBookingsCount(-2);\n        //     return;\n        // }\n\n        setBookingsCount(-1);\n\n       \n\n        var res = state.AdminCalendarCache?.find(record => record.method === 'getBookingsCountByDateStrandTime' && record.query === `${date}${time}`)?.res;\n        if (res)\n        {\n            if (res.data.count >= 0)\n            {\n                setBookingsCount(res.data.count);\n            }  \n            return;\n        }\n\n        let source = axios.CancelToken.source();\n        BookService.getAllBookingsCountByDateStrandTime(date, time, source).then( res => {\n            if (res.data.count >= 0)\n            {\n                setBookingsCount(res.data.count);\n                setState(state => ({...state, AdminCalendarCache : [...state.AdminCalendarCache, {method: 'getBookingsCountByDateStrandTime' , query : `${date}${time}`, res: res}]}));\n            }  \n        }).catch( err => \n            {\n                //do nothing\n            });\n     \n        return () => {\n           if (source)\n              source.cancel('Cancelling in cleanup');\n        }\n     \n    }, [date, time]);\n\n\n    const getBookingsCountLabel = (_bookingsCount) =>\n    {\n        if (_bookingsCount === -1)\n        {\n            return (\n                <div className={classes.LoadingProgress}>\n                      <CircularProgress disableShrink  />\n                </div>\n            );  \n        }\n        else if (_bookingsCount > 0)\n        {\n            if (_bookingsCount >= MAX_BOOKING_COUNT)\n            {\n                return (\n                    <div onClick={(event => dayClicked(event,cellDate))} className={classes.BookingCountLabelBusy}>\n                          {_bookingsCount < 10 ? ` ${_bookingsCount}` : `${_bookingsCount}` }\n                    </div>\n                );\n            }\n            else\n            {\n                return (\n                    <div onClick={(event => dayClicked(event,cellDate))} className={classes.BookingCountLabel}>\n                        {_bookingsCount < 10 ? ` ${_bookingsCount}` : `${_bookingsCount}` }\n                    </div>\n                );\n            }\n        }\n    }\n\n    const getBookingsCountGauge = (_bookingsCount) =>\n    {\n        if (_bookingsCount > 0 )\n        {\n            let percent = (_bookingsCount / MAX_BOOKING_COUNT) * 100;\n            if (percent > 100)\n            {\n                percent = 100;\n            }\n\n            // percent = 100 - percent;\n\n            return (\n\n                <div className={classes.BookingCountGauge}>\n                  <div style={{padding:\"0\", margin:\"0\", width:\"100%\", height:\"100%\", backgroundColor: \"#f5f5f5\"}} >\n                        <div  style={{padding:\"0\", margin:\"0\", height:\"100%\", width:`${percent}%`, backgroundColor: \"#3f51b5\"}} >\n\n                        </div>\n                  </div>\n                </div>\n            );\n        }\n    }\n\n    return (\n        <React.Fragment>\n\n            <div className={isPast ? classes.ContainerPast : classes.Container} onClick={(event => dayClicked(event,cellDate))} >\n\n              {getBookingsCountLabel(bookingsCount)}\n\n              {getBookingsCountGauge(bookingsCount)}\n\n            </div>\n\n        </React.Fragment>\n\n\n    );\n}\n\nWeekViewCell.propTypes = {\n    key: PropTypes.string.isRequired,\n    date: PropTypes.string.isRequired,\n    time: PropTypes.string.isRequired,\n    dayClicked: PropTypes.func\n  };\n\n \n  \nexport default WeekViewCell;","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport WeekViewCell from './WeekViewCell';\nimport dateformat from 'dateformat';\n\nconst rows = [\n    '10:00 AM',\n    '10:30 AM', \n    '11:00 AM', \n    '11:30 AM', \n    '12:00 PM',\n    '12:30 PM',\n    '01:00 PM',\n    '01:30 PM',\n    '02:00 PM',\n    '02:30 PM',\n    '03:00 PM',\n    '03:30 PM',\n    '04:00 PM',\n    '04:30 PM',\n    '05:00 PM',\n    '05:30 PM',\n];\n\n\n\nconst useStyles = makeStyles((theme) => ({\n\n    table: {\n        width: \"100%\",\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        overflowY: \"auto\"\n    },\n\n    th: {\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        verticalAlign: \"middle\",\n        fontcolor: \"#555\",\n        fontWeight: \"400\",\n        fontSize: \"15px\",\n        paddingTop: \"5px\",\n        paddingBottom: \"5px\",\n        width: \"12%\", \n    },\n\n    td: {\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        verticalAlign: \"middle\",\n        height : \"50px\",\n        width: \"12%\", \n    }\n\n  }));\n\nconst WeekView = ({dates, dayClicked}) => {\n    const classes = useStyles();\n\n    return (\n        <React.Fragment>\n\n        <div style={{overflowY: \"scroll\" , height: \"60px\"}}>\n            <table className={classes.table}>\n                <thead>\n                    <tr>\n                        <th style={{width: \"7%\"}}>\n                        \n                        </th>\n                            {dates.map(date => (\n                                <th className={classes.th}>\n                                    <div style={{paddingBottom: \"5px\", color: \"#aaa\"}}>\n                                         {dateformat(date, 'ddd')}\n                                    </div>\n                                    <div>\n                                        <span style={{color: \"#aaa\"}}>\n                                            {dateformat(date, 'mmm ')}\n                                        </span> \n                                        <span  style={(dateformat(new Date(),'yyyy-mm-dd') === dateformat(date, 'yyyy-mm-dd')) ? { backgroundColor: \"#1a73e8\", color: \"#fff\", borderRadius: \"50%\",  padding: \"5px\",} : {color: \"#333\", fontWeight:\"500\"}}>\n                                             {dateformat(date, ' d')}\n                                        </span>\n                                       \n                                    </div>\n                                </th>\n                        ))}\n                    </tr>\n                </thead>\n             </table>\n\n        </div>\n\n            <div style={{overflowY: \"scroll\" , height: \"70vh\"}}>\n                <table className={classes.table}>   \n                    <tbody>\n                        {rows.map(row => (\n                            <tr>\n                                <td style={{width: \"7%\"}}>\n                                    {row}\n                                </td>\n                                {dates.map(day => (\n                                    <td className={classes.td}>\n                                        <WeekViewCell \n                                                dayClicked = {dayClicked}\n                                                key={`${dateformat(day,'yyyy-mm-dd')}-${row.replace(':','-')}`} \n                                                date={dateformat(day,'yyyy-mm-dd')} \n                                                time={row}/>\n                                    </td>\n                                ))}\n                            </tr>\n                        ))}            \n                    </tbody>\n                </table>\n            </div>                    \n      \n        </React.Fragment>\n\n\n    );\n}\n\nWeekView.propTypes = {\n    dates: PropTypes.arrayOf(PropTypes.any).isRequired,\n    dayClicked: PropTypes.func\n  };\n\n\nexport default WeekView;","import React, { useEffect, useRef, useState } from \"react\";\nimport BookService from \"./services/BookService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {\n  Backdrop,\n  Button,\n  Checkbox,\n  CircularProgress,\n  Divider,\n  FormControlLabel,\n  Grid,\n  InputAdornment,\n  InputLabel,\n  Link,\n  makeStyles,\n  MenuItem,\n  Select,\n  Switch,\n  TextField,\n  Tooltip,\n} from \"@material-ui/core\";\nimport GlobalState from \"../GlobalState\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport CreditCardIcon from \"@material-ui/icons/CreditCard\";\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\n\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Draggable from \"react-draggable\";\nimport Paper from \"@material-ui/core/Paper\";\n\nimport Alert from \"@material-ui/lab/Alert\";\n\nimport PropTypes from \"prop-types\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport Box from \"@material-ui/core/Box\";\n\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport { corporates } from \"./Corporates\";\nimport NumberFormat from \"react-number-format\";\n\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { validate } from \"email-validator\";\nimport DateRangeIcon from \"@material-ui/icons/DateRange\";\nimport { CalendarColors } from \"../Admin/calendar-admin/colors\";\n\nvar interval;\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    marginTop: theme.spacing(0),\n    marginBottom: theme.spacing(1),\n  },\n\n  refreshButton: {\n    marginLeft: theme.spacing(2),\n  },\n\n  checkIcon: {\n    color: \"green\",\n  },\n\n  closeIcon: {\n    color: \"red\",\n  },\n\n  RefLink: {\n    cursor: \"pointer\",\n  },\n\n  BookedLabel: {\n    backgroundColor: \"#606060\",\n    color: \"#fff\",\n    paddingRight: \"10px\",\n    paddingLeft: \"10px\",\n  },\n\n  PatientAttendedLabel: {\n    backgroundColor: \"#0066aa\",\n    color: \"#fff\",\n    paddingRight: \"15px\",\n    paddingLeft: \"10px\",\n  },\n\n  SampleTakenLabel: {\n    backgroundColor: \"#0066cc\",\n    color: \"#fff\",\n    paddingRight: \"40px\",\n    paddingLeft: \"10px\",\n  },\n\n  ReportSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"90px\",\n    paddingLeft: \"10px\",\n  },\n\n  ReportCertSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"68px\",\n    paddingLeft: \"10px\",\n  },\n\n  archiveButton: {},\n\n  smartMatchButton: {\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    marginRight: \"10px\",\n    // padding: \"10px\"\n  },\n\n  infoTitle: {\n    fontWeight: \"400\",\n  },\n\n  infoData: {\n    paddingLeft: \"10px\",\n    fontWeight: \"800\",\n  },\n\n  matchButton: {\n    marginTop: \"30px\",\n    marginBottom: \"20px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  resendButton: {\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  resendFilesButton: {\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n    backgroundColor: \"#3792ad\",\n    \"&:hover\": {\n      background: \"#2f798f\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  cancelButton: {\n    marginBottom: \"10px\",\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"90px\",\n    paddingRight: \"90px\",\n  },\n\n  CalendarIcon: {\n    color: theme.palette.primary.main,\n  },\n\n  DateTimeLabel: {\n    fontWeight: \"500\",\n    color: theme.palette.primary.main,\n  },\n\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 5,\n    color: \"#fff\",\n  },\n\n  PriceLabelPaid:{\n    color: theme.palette.primary.main,\n    fontWeight: \"600\"\n  },\n\n  PriceLabelNotPaid:{\n    color: theme.palette.secondary.main,\n    fontWeight: \"600\"\n  },\n\n\n}));\n\nconst Packages = [\n  { packageName: \"Consultation with Consultant Gynaecologist\" },\n  { packageName: `Coil Fitting/Coil Removal` },\n  { packageName: `Well Woman Check` },\n  { packageName: `Sexual Health Screening` },\n  { packageName: `Pre-pregnancy/Fertility check` },\n  { packageName: `Gynaecological Ultrasound` },\n  { packageName: `HPV Vaccination` },\n  { packageName: `Cervical / Pap Smear` },\n  { packageName: `HPV Treatment / Wart Cryo-Therapy` },\n];\n\nfunction NumberFormatCustom(props) {\n  const { inputRef, onChange, ...other } = props;\n\n  return (\n    <NumberFormat\n      {...other}\n      getInputRef={inputRef}\n      onValueChange={(values) => {\n        onChange({\n          target: {\n            name: props.name,\n            value: values.value,\n          },\n        });\n      }}\n      thousandSeparator\n      isNumericString\n      prefix=\"\"\n    />\n  );\n}\n\nNumberFormatCustom.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nconst BorderLinearProgress = withStyles((theme) => ({\n  root: {\n    height: 10,\n    borderRadius: 5,\n  },\n  colorPrimary: {\n    backgroundColor: \"#cedbce\", //theme.palette.grey[theme.palette.type === 'light' ? 200 : 700],\n  },\n  bar: {\n    borderRadius: 5,\n    backgroundColor: \"#2f942e\",\n  },\n}))(LinearProgress);\nfunction LinearProgressWithLabel(props) {\n  return (\n    <Box display=\"flex\" alignItems=\"center\">\n      <Box width=\"100%\" mr={1}>\n        <BorderLinearProgress variant=\"determinate\" {...props} />\n      </Box>\n      <Box minWidth={35}>\n        <Typography\n          style={{ fontWeight: \"800\", color: \"#5e855e\" }}\n          variant=\"body2\"\n          color=\"textSecondary\"\n        >{`${Math.round(props.value)}%`}</Typography>\n      </Box>\n    </Box>\n  );\n}\n\nLinearProgressWithLabel.propTypes = {\n  /**\n   * The value of the progress indicator for the determinate and buffer variants.\n   * Value between 0 and 100.\n   */\n  value: PropTypes.number.isRequired,\n};\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable\n      handle=\"#draggable-dialog-title\"\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\n    >\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nexport default function NewBookingDialog(props) {\n  const classes = useStyles();\n\n  const [state, setState] = React.useContext(GlobalState);\n  const [saving, setSaving] = useState(false);\n\n  const [fullname, setFullname] = React.useState(\"\");\n  const [fullnameError, setFullnameError] = React.useState(false);\n\n  const [phone, setPhone] = React.useState(\"\");\n  const [email, setEmail] = React.useState(\"\");\n  const [notes, setNotes] = React.useState(\"\");\n\n  \n  const fullnameChanged = (event) => {\n    setFullname(event.target.value);\n    setFullnameError(false);\n  };\n\n  const phoneChanged = (event) => {\n    setPhone(event.target.value);\n  };\n\n  const emailChanged = (event) => {\n    setEmail(event.target.value);\n  };\n\n\n  const notesChanged = (event) => {\n    setNotes(event.target.value);\n  };\n\n  const handleClose = () => {\n    if (saving) return;\n\n    setFullname(\"\");\n    setFullnameError(false);\n    setPhone(\"\");\n    setEmail(\"\");\n    setNotes(\"\");\n    \n    props.handleClose();\n    setSaving(false);\n  };\n\n  const validateBooking = () => {\n    let error = false;\n    if (!fullname || fullname.trim().length < 1) {\n      setFullnameError(true);\n      error = true;\n    }\n    return !error;\n  };\n\n  const saveClicked = async () => {\n    if (!validateBooking()) {\n      return;\n    }\n\n    setSaving(true);\n\n    try {\n      await BookService.addNewBooking({\n        bookingDate: props.date,\n        bookingTime: props.time,\n        fullname: fullname,\n        phone: phone,\n        email: email,\n        notes: notes,\n      });\n      setSaving(false);\n      setState((state) => ({\n        ...state,\n        bookingDialogDataChanged: !state.bookingDialogDataChanged\n          ? true\n          : false,\n      }));\n      handleClose();\n    } catch (err) {\n      console.error(err);\n      setSaving(false);\n    }\n  };\n\n  return (\n    <React.Fragment>\n      {props.date && props.time && (\n        <React.Fragment>\n          <Dialog\n            maxWidth=\"xs\"\n            open={props.open}\n            onClose={handleClose}\n            PaperComponent={PaperComponent}\n            aria-labelledby=\"form-dialog-title\"\n          >\n            <DialogTitle id=\"draggable-dialog-title\">\n              <Grid\n                container\n                spacing={2}\n                direction=\"row\"\n                justify=\"center\"\n                alignItems=\"center\"\n              >\n                <Grid item>\n                  <AddIcon style={{ color: \"#f50057\", fontSize: \"3rem\" }} />\n                </Grid>\n\n                <Grid item>\n                  <div\n                    style={{\n                      color: \"#f50057\",\n                      paddingBottom: \"10px\",\n                      fontWeight: \"800\",\n                    }}\n                  >\n                    {\" \"}\n                    ADD New Booking{\" \"}\n                  </div>\n                </Grid>\n              </Grid>\n\n              <div style={{position:\"absolute\", top: \"5px\", right: \"5px\", backgroundColor:CalendarColors.GP_COLOR, color:\"#fff\", padding: \"0px 5px\", borderRadius:\"10px\", fontSize:\"1rem\"}}>\n                    GP\n              </div>\n\n\n              <Divider />\n            </DialogTitle>\n            <DialogContent>\n              <div\n                style={{\n                  height: \"400px\",\n                }}\n              >\n                <Grid\n                  container\n                  direction=\"row\"\n                  justify=\"stretch\"\n                  spacing={2}\n                  alignItems=\"center\"\n                >\n                  <Grid item xs={12}>\n                    <Grid\n                      container\n                      direction=\"row\"\n                      justify=\"center\"\n                      alignItems=\"center\"\n                      spacing={1}\n                    >\n                      <Grid item>\n                        <DateRangeIcon className={classes.CalendarIcon} />\n                      </Grid>\n                      <Grid item>\n                        <span className={classes.DateTimeLabel}>\n                          {props.date} , {props.time}\n                        </span>\n                      </Grid>\n                    </Grid>\n                  </Grid>\n\n                  <Grid item xs={12}>\n                    <TextField\n                      fullWidth\n                      autoFocus\n                      error={fullnameError}\n                      label=\"Full Name\"\n                      value={fullname}\n                      required\n                      onChange={fullnameChanged}\n                      name=\"fullname\"\n                      id=\"fullname-id\"\n                      autoComplete=\"none\"\n                    />\n                  </Grid>\n\n                  <Grid item xs={12}>\n                    <TextField\n                      fullWidth\n                      label=\"Telephone\"\n                      value={phone}\n                      onChange={phoneChanged}\n                      name=\"phone\"\n                      id=\"phone-id\"\n                      autoComplete=\"none\"\n                    />\n                  </Grid>\n\n                  <Grid item xs={12}>\n                    <TextField\n                      fullWidth\n                      label=\"Email\"\n                      value={email}\n                      onChange={emailChanged}\n                      name=\"email\"\n                      id=\"email-id\"\n                      autoComplete=\"none\"\n                    />\n                  </Grid>\n\n\n                  <Grid item xs={12}>\n                    <TextField\n                      fullWidth\n                      label=\"Notes\"\n                      value={notes}\n                      onChange={notesChanged}\n                      name=\"notes\"\n                      id=\"notes-id\"\n                      autoComplete=\"none\"\n                    />\n                  </Grid>\n\n                </Grid>\n\n                <div\n                  style={{\n                    position: \"absolute\",\n                    bottom: \"20px\",\n                    right: \"20px\",\n                  }}\n                >\n                  <Grid\n                    container\n                    direction=\"row\"\n                    justify=\"flex-end\"\n                    alignItems=\"center\"\n                    spacing={1}\n                  >\n                    <Grid item>\n                      <Button\n                        onClick={handleClose}\n                        style={{ width: \"100px\" }}\n                        disabled={saving}\n                      >\n                        back\n                      </Button>\n                    </Grid>\n                    <Grid item>\n                      <Button\n                        onClick={saveClicked}\n                        variant=\"contained\"\n                        color=\"secondary\"\n                        style={{ width: \"100px\" }}\n                        disabled={saving}\n                      >\n                        Save\n                      </Button>\n                    </Grid>\n                  </Grid>\n                </div>\n              </div>\n\n              <Backdrop className={classes.backdrop} open={saving}>\n                <CircularProgress color=\"inherit\" />\n              </Backdrop>\n            </DialogContent>\n          </Dialog>\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport PropTypes from \"prop-types\";\nimport dateformat from \"dateformat\";\nimport BookService from \"../services/BookService\";\n\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport GlobalState from \"../../GlobalState\";\nimport BookingDialog from \"../BookingDialog\";\nimport NewBookingDialog from \"../NewBookingDialog\";\nimport clsx from \"clsx\";\nimport { CalendarColors } from \"../../Admin/calendar-admin/colors\";\n\nconst useStyles = makeStyles((theme) => ({\n  Container: {\n    width: \"100%\",\n    height: \"50px\",\n    position: \"relative\",\n    backgroundColor: \"#fff\",\n    display: \"flex\",\n    alignItems: \"flex-start\",\n    justifyItems: \"flex-start\",\n    paddingLeft: \"10px\",\n  },\n\n  ContainerPast: {\n    width: \"100%\",\n    paddingTop: \"50px\",\n    position: \"relative\",\n    backgroundColor: \"#fafafa\",\n  },\n\n  DayLabel: {\n    position: \"absolute\",\n    top: \"5px\",\n    right: \"5px\",\n    color: \"#555\",\n    fontSize: \"1rem\",\n  },\n\n  DayLabelDisabled: {\n    position: \"absolute\",\n    top: \"5px\",\n    right: \"5px\",\n    color: \"#ddd\",\n    fontSize: \"1rem\",\n  },\n\n  LoadingProgress: {\n    position: \"absolute\",\n    top: \"10%\",\n    left: \"40%\",\n  },\n\n  BookingCountGauge: {\n    position: \"absolute\",\n    bottom: \"5%\",\n    left: \"8%\",\n    width: \"85%\",\n    height: \"8%\",\n  },\n\n  bookingBox: {\n    display: \"flex\",\n    marginRight: \"10px\",\n    marginTop: \"5px\",\n    padding: \"10px\",\n    maxWidth: \"150px\",\n    overflowX: \"hidden\",\n    border: \"1px solid #eee\",\n    fontSize: \"12px\",\n    fontWeight: \"500\",\n    cursor: \"pointer\",\n    backgroundColor: \"#ebedf7\",\n    color: \"#3f51b5\",\n    boxShadow: \"2px 4px #fafafa\",\n\n    \"&:hover\": {\n      background: \"#3f51b5\",\n      color: \"#ebedf7\",\n    },\n  },\n\n  bookingBoxNew: {\n    display: \"flex\",\n    marginRight: \"10px\",\n    marginTop: \"5px\",\n    padding: \"10px\",\n    maxWidth: \"150px\",\n    overflowX: \"hidden\",\n    border: \"1px solid #ddd\",\n    color: \"#ccc\",\n    fontSize: \"12px\",\n    fontWeight: \"500\",\n    cursor: \"pointer\",\n    backgroundColor: \"#fff\",\n\n    boxShadow: \"2px 4px #fafafa\",\n    transition: \"all 0.5s ease\",\n    borderRadius: \"4px\",\n\n    \"&:hover\": {\n      background: \"#fff\",\n      color: theme.palette.secondary.main,\n      borderColor: theme.palette.secondary.main,\n    },\n  },\n\n  bookingBoxSampleTaken: {\n    display: \"flex\",\n    marginRight: \"10px\",\n    marginTop: \"5px\",\n    padding: \"10px\",\n    maxWidth: \"150px\",\n    overflowX: \"hidden\",\n    border: \"1px solid #eee\",\n    fontSize: \"12px\",\n    fontWeight: \"500\",\n    cursor: \"pointer\",\n    backgroundColor: \"#0066cc\",\n    color: \"#eee\",\n    boxShadow: \"2px 4px #fafafa\",\n\n    \"&:hover\": {\n      background: \"#0059b3\",\n      color: \"#fafafa\",\n    },\n  },\n\n  bookingBoxPositive: {\n    display: \"flex\",\n    marginRight: \"10px\",\n    marginTop: \"5px\",\n    padding: \"10px\",\n    maxWidth: \"150px\",\n    overflowX: \"hidden\",\n    border: \"1px solid #eee\",\n    fontSize: \"12px\",\n    fontWeight: \"500\",\n    cursor: \"pointer\",\n    backgroundColor: \"#d40b0b\",\n    color: \"#fff2f2\",\n    boxShadow: \"2px 4px #fafafa\",\n\n    \"&:hover\": {\n      background: \"#bf0000\",\n      color: \"#fff\",\n    },\n  },\n\n  bookingBoxReportSent: {\n    display: \"flex\",\n    marginRight: \"10px\",\n    marginTop: \"5px\",\n    padding: \"10px\",\n    maxWidth: \"150px\",\n    overflowX: \"hidden\",\n    border: \"1px solid #eee\",\n    fontSize: \"12px\",\n    fontWeight: \"500\",\n    cursor: \"pointer\",\n    backgroundColor: \"#009900\",\n    color: \"#eee\",\n    boxShadow: \"2px 4px #fafafa\",\n\n    \"&:hover\": {\n      background: \"#006e00\",\n      color: \"#fafafa\",\n    },\n  },\n\n\n\n}));\n\nconst DayViewCell = ({ key, date, time }) => {\n  const classes = useStyles();\n\n  const [state, setState] = React.useContext(GlobalState);\n  const [bookings, setBookings] = React.useState(null);\n  const [filteredBookings, setFilteredBookings] = React.useState(null);\n  const [selectedBooking, setSelectedBooking] = React.useState(null);\n\n  const [refresh, setRefresh] = React.useState(true);\n\n  const [isPast, setIsPast] = React.useState(false);\n\n  const [openDialog, setOpenDialog] = React.useState(false);\n  const [openDialogAddNew, setOpenDialogAddNew] = React.useState(false);\n\n  useEffect(() => {\n    const todayStr = dateformat(new Date(), \"yyyy-mm-dd\");\n    setIsPast(date < todayStr);\n  }, [date]);\n\n  useEffect(() => {\n    if (bookings) {\n      if (state.dayViewCalFilter && state.dayViewCalFilter.trim().length > 0) {\n        const search = state.dayViewCalFilter.trim().toUpperCase();\n        setFilteredBookings(\n          bookings.filter(\n            (booking) =>\n              booking.fullname.toLowerCase().indexOf(search.toLowerCase()) >= 0\n          )\n        );\n      } else {\n        setFilteredBookings([...bookings]);\n      }\n    }\n  }, [state.dayViewCalFilter, bookings]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      if (!date || date.length <= 0 || !time || time.length <= 0) {\n        return;\n      }\n\n      // if (isPast)\n      // {\n      //     setBookings([]);\n      //     return;\n      // }\n\n      setBookings(null);\n\n      var res = state.AdminCalendarCache?.find(\n        (record) =>\n          record.method === \"getBookingsByDateStrandTime\" &&\n          record.query === `${date}${time}`\n      )?.res;\n      if (!res || openDialog || openDialogAddNew) {\n        res = await BookService.getAllBookingsByDateStrandTime(date, time);\n        setState((state) => ({\n          ...state,\n          AdminCalendarCache: [\n            ...state.AdminCalendarCache,\n            {\n              method: \"getBookingsByDateStrandTime\",\n              query: `${date}${time}`,\n              res: res,\n            },\n          ],\n        }));\n      }\n\n      if (res.data.status === \"OK\") {\n        setBookings(res.data.bookings);\n      }\n    };\n\n    if (openDialog || openDialogAddNew) {\n      setState((state) => ({\n        ...state,\n        AdminCalendarCache: state.AdminCalendarCache.filter(\n          (record) =>\n            !(\n              record.method === \"getBookingsByDateStrandTime\" &&\n              record.query === `${date}${time}`\n            )\n        ),\n      }));\n      setState((state) => ({\n        ...state,\n        AdminCalendarCache: state.AdminCalendarCache.filter(\n          (record) =>\n            !(\n              record.method === \"getBookingsCountByDateStrandTime\" &&\n              record.query === `${date}${time}`\n            )\n        ),\n      }));\n      setState((state) => ({\n        ...state,\n        AdminCalendarCache: state.AdminCalendarCache.filter(\n          (record) =>\n            !(\n              record.method === \"getBookingsCountByDateStr\" &&\n              record.query === date\n            )\n        ),\n      }));\n    }\n\n    fetchData();\n  }, [date, time, state.bookingDialogDataChanged]);\n\n  const bookingCliked = (event, booking) => {\n    setSelectedBooking(booking);\n    setOpenDialog(true);\n  };\n\n  const getBookingClass = (status) => {\n    switch (status) {\n      case \"patient_attended\":\n        return classes.bookingBoxSampleTaken;\n      default:\n        return classes.bookingBox;\n    }\n  };\n\n  const addNewBookingClicked = () => {\n    setOpenDialogAddNew(true);\n  };\n\n\n  const getBookingsBox = (_bookings) => {\n    if (_bookings === null) {\n      return (\n        <div className={classes.LoadingProgress}>\n          <CircularProgress disableShrink />\n        </div>\n      );\n    } else if (_bookings.length >= 0) {\n      return (\n        <React.Fragment>\n          {_bookings.map((booking) => (\n            <div\n              style={booking.tr ? { borderTop: \"5px solid #d00fd6\" } : {}}\n              className={\n                getBookingClass(booking.status)\n                }\n              onClick={(event) => bookingCliked(event, booking)}\n            >\n              {`${booking.fullname}`.substring(0, 15)}\n            </div>\n          ))}\n\n          <div className={classes.bookingBoxNew} onClick={addNewBookingClicked}>\n            {\" \"}\n            + Add New Booking\n          </div>\n        </React.Fragment>\n      );\n    }\n  };\n\n  const handleCloseDialog = () => {\n    setOpenDialog(false);\n  };\n\n  const handleCloseDialogAddNew = () => {\n    setOpenDialogAddNew(false);\n  };\n\n  return (\n    <React.Fragment>\n      <div className={classes.Container}>\n        {getBookingsBox(filteredBookings)}\n      </div>\n\n      <BookingDialog\n        booking={selectedBooking}\n        open={openDialog}\n        onClose={handleCloseDialog}\n      />\n\n      <NewBookingDialog\n        date={date}\n        time={time}\n        open={openDialogAddNew}\n        handleClose={handleCloseDialogAddNew}\n      />\n    </React.Fragment>\n  );\n};\n\nDayViewCell.propTypes = {\n  key: PropTypes.string.isRequired,\n  date: PropTypes.string.isRequired,\n  time: PropTypes.string.isRequired,\n};\n\nexport default DayViewCell;\n","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport DayViewCell from './DayViewCell';\nimport dateformat from 'dateformat';\n\n\n\n\nconst rows = [\n    '10:00 AM',\n    '10:30 AM', \n    '11:00 AM', \n    '11:30 AM', \n    '12:00 PM',\n    '12:30 PM',\n    '01:00 PM',\n    '01:30 PM',\n    '02:00 PM',\n    '02:30 PM',\n    '03:00 PM',\n    '03:30 PM',\n    '04:00 PM',\n    '04:30 PM',\n    '05:00 PM',\n    '05:30 PM',\n];\n\nconst useStyles = makeStyles((theme) => ({\n\n    table: {\n        width: \"100%\",\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        overflowY: \"auto\"\n    },\n\n    th: {\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        verticalAlign: \"middle\",\n        fontcolor: \"#555\",\n        fontWeight: \"400\",\n        fontSize: \"15px\",\n        paddingTop: \"5px\",\n        paddingBottom: \"5px\",\n        width: \"12%\", \n    },\n\n    td: {\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        verticalAlign: \"middle\",\n        height : \"50px\",\n        width: \"84%\", \n    },\n\n    titleLabel: {\n        paddingBottom: \"17px\",\n        paddingTop: \"17px\",\n        color: \"#777\",\n        fontSize: \"16px\"\n    },\n\n    titleLabelToday: {\n        paddingBottom: \"17px\",\n        paddingTop: \"17px\",\n        color: \"#fff\",\n        backgroundColor: \"#1a73e8\",\n        fontSize: \"16px\"\n    },\n\n  }));\n\nconst DayView = ({date}) => {\n    const classes = useStyles();\n\n    return (\n        <React.Fragment>\n\n        <div style={{overflowY: \"scroll\" , height: \"60px\"}}>\n            <table className={classes.table}>\n                <thead>\n                    <tr>\n                        <th style={{width: \"7%\"}}>\n                        \n                        </th>\n                        <th style={{width: \"84%\"}}>\n                                <div className={(dateformat(new Date(),'yyyy-mm-dd') === dateformat(date, 'yyyy-mm-dd')) ? classes.titleLabelToday : classes.titleLabel }>\n                                        {dateformat(date,'dddd')}\n                                </div>                                \n                        </th>\n                    </tr>\n                </thead>\n             </table>\n\n        </div>\n\n            <div style={{overflowY: \"scroll\" , height: \"70vh\"}}>\n                <table className={classes.table}>   \n                    <tbody>\n                        {rows.map(row => (\n                            <tr>\n                                <td style={{width: \"7%\"}}>\n                                    {row}\n                                </td>\n                               \n                                <td className={classes.td}>\n                                     <DayViewCell key={`${dateformat(date,'yyyy-mm-dd')}-${row}`} date={dateformat(date,'yyyy-mm-dd')} time={row}/>  \n                                </td>\n                            \n                            </tr>\n                        ))}            \n                    </tbody>\n                </table>\n            </div>                    \n      \n        </React.Fragment>\n\n\n    );\n}\n\nDayView.propTypes = {\n    date: PropTypes.any.isRequired\n  };\n\n\nexport default DayView;","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MonthView from './MonthView';\nimport { Button, Grid, IconButton, InputAdornment, TextField, Tooltip } from '@material-ui/core';\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\n\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport WeekView from './WeekView';\nimport dateformat from 'dateformat';\nimport DayView from './DayView';\nimport GlobalState from '../../GlobalState';\n\nimport CloseIcon from '@material-ui/icons/Close';\n\n\n\nconst monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n  \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n];\n\nconst useStyles = makeStyles((theme) => ({\n\n    title: {\n        textAlign: \"center\",\n        fontSize: \"24px\",\n        fontColor: \"#333\"\n    },\n\n  }));\n\nexport default function CalendarView() {\n    const classes = useStyles();\n\n    const [state, setState] = React.useContext(GlobalState);\n\n    const [month, setMonth] = React.useState(new Date().getMonth() + 1);\n    const [year, setYear] = React.useState(new Date().getFullYear());\n\n    const [day, setDay] = React.useState(new Date());\n\n    const [firstDayofWeek, setFirstDayofWeek] = React.useState(new Date());\n\n    const [weekDates, setWeekDates] = React.useState([]);\n\n    const [mode, setMode] = React.useState('month');\n    const [selectedTab, setSeletedTab] = React.useState('month');\n\n    const [filter,setFilter] = React.useState('');\n\n    const filterChanged = (event) =>{\n        setFilter(event.target.value);\n        setState(state => ({...state, dayViewCalFilter : event.target.value?.trim()?.toUpperCase()}))\n      }\n\n      const removeFilter = () =>\n      {\n        setFilter('');\n        setState(state => ({...state, dayViewCalFilter : ''}));\n      }\n\n\n    useEffect( () => {\n        const today = new Date();\n        const dayofWeek = today.getDay();\n        const firstdayofweek = new Date(today.getTime() - ( dayofWeek * 86400000));\n        setFirstDayofWeek(firstdayofweek);\n        setState(state => ({...state, AdminCalendarCache : []}));\n\n        return () =>\n        {\n            setState(state => ({...state, AdminCalendarCache : []}));\n            removeFilter();\n        }\n       \n    }, []);\n\n\n    useEffect( () => {\n        const dates = [];\n        for (var i = 0; i < 7 ; i++)\n        {\n            dates.push(new Date(firstDayofWeek.getTime() + ( i * 86400000)));\n        }\n        setWeekDates(dates);\n\n    }, [firstDayofWeek]);\n\n    const handlePrevButton = (event) =>\n    {\n       if (mode === 'month')\n       {\n            if (month === 1)\n            {\n                setYear(year - 1);\n            } \n\n            const newMonth = month === 1 ? 12 : month - 1;\n            setMonth(newMonth);\n\n            const newDay = new Date(year, newMonth - 1 , 1, 0 ,0 ,0 ,0);\n            setDay(newDay);\n\n            const dayofWeek = newDay.getDay();\n            setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\n\n       } \n       else if (mode === 'week')\n       {\n           const newFirstDayofWeek = new Date(firstDayofWeek.getTime() - ( 7 * 86400000));\n           setFirstDayofWeek(newFirstDayofWeek);\n\n           setDay(newFirstDayofWeek);\n           setMonth(newFirstDayofWeek.getMonth() + 1);\n           setYear(newFirstDayofWeek.getFullYear());\n\n       }\n       else if (mode === 'day')\n       {\n           const newDay = new Date(day.getTime() - ( 1 * 86400000));\n           setDay(newDay);\n\n           const dayofWeek = newDay.getDay();\n           setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\n\n           setMonth(newDay.getMonth() + 1);\n           setYear(newDay.getFullYear());\n       }\n    }\n\n    const handleNextButton = (event) =>\n    {\n        if (mode === 'month')\n        {\n            if (month === 12)\n            {\n                setYear(year + 1);\n            } \n       \n            const newMonth = month === 12 ? 1 : month + 1;\n            setMonth(newMonth);\n\n            const newDay = new Date(year, newMonth - 1 , 1, 0 ,0 ,0 ,0);\n            setDay(newDay);\n\n            const dayofWeek = newDay.getDay();\n            setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\n        }\n        else if (mode === 'week')\n        {\n            const newFirstDayofWeek = new Date(firstDayofWeek.getTime() + ( 7 * 86400000));\n            setFirstDayofWeek(newFirstDayofWeek);\n\n            setDay(newFirstDayofWeek);\n            setMonth(newFirstDayofWeek.getMonth() + 1);\n            setYear(newFirstDayofWeek.getFullYear());\n\n        }\n        else if (mode === 'day')\n        {\n            const newDay = new Date(day.getTime() + ( 1 * 86400000));\n            setDay(newDay);\n\n            const dayofWeek = newDay.getDay();\n            setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\n \n            setMonth(newDay.getMonth() + 1);\n            setYear(newDay.getFullYear());\n        }\n    }\n\n    const goToday = (event) => {\n        const newDay = new Date();\n        const dayofWeek = newDay.getDay();\n        setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\n        setDay(newDay);\n        setMonth(newDay.getMonth() + 1);\n        setYear(newDay.getFullYear());\n    }\n\n    const dayClicked = (event, date) =>\n    {\n        const newDay = new Date(date);\n        const dayofWeek = newDay.getDay();\n        setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\n        setDay(newDay);\n        setMonth(newDay.getMonth() + 1);\n        setYear(newDay.getFullYear());\n        setSeletedTab('day');\n        setMode('day');\n    }\n\n    const getContentFromMode = (_mode) => {\n        if (_mode === 'month')\n        {\n            return (\n                <MonthView dayClicked={dayClicked} month={month} year={year}/>    \n            );\n        }    \n        else if (_mode === 'week')\n        {\n            return (\n                    <WeekView dayClicked={dayClicked} dates={weekDates}/>\n            );\n            \n        }\n        else if (_mode === 'day')\n        {\n            return (\n                <DayView date={day}/>\n            );\n        }\n    }\n\n    const getCalendarTitleFromMode = (_mode) => {\n        if (_mode === 'month')\n        {\n            return (\n                <span className={classes.title}> {`${monthNames[month - 1]} ${year}`} </span>   \n            );\n        }    \n        else if (_mode === 'week')\n        {\n            const endOfWeek = new Date(firstDayofWeek.getTime() + ( 6 * 86400000));\n            let endofWeekStr = '';\n            if (endOfWeek.getMonth() === firstDayofWeek.getMonth())\n            {\n                endofWeekStr = dateformat(endOfWeek,'d');\n            }else\n            {\n                endofWeekStr = dateformat(endOfWeek,'mmm d');\n            }\n\n            return (\n                <span className={classes.title}> {`${dateformat(firstDayofWeek,'mmm d')} - ${endofWeekStr}, ${year}`} </span>\n            );\n            \n        }\n        else if (_mode === 'day')\n        {\n            return (\n                <span className={classes.title}> {`${dateformat(day,'mmmm d, yyyy')}`} </span>\n            );\n        }\n    }\n\n\n    const handleTabChanged = (event, value) => {\n        if (value && value.length)\n        {\n          setSeletedTab(value);\n          setMode(value);\n        }\n    };\n\n    const getPrevButtonTitle = (_mode) =>\n    {\n        return `Previuos ${mode}`;\n    }\n\n    const getNextButtonTitle = (_mode) =>\n    {\n        return `Next ${mode}`;\n    }\n\n    return (\n        <React.Fragment>\n\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"space-between\"\n            alignItems=\"center\"\n            style= {{marginBottom: \"10px\", marginTop: \"0px\"}}\n            >  \n\n            <Grid item md={3}>\n                <div  style={{display:\"flex\", alignItems: \"flex-start\", justifyContent: \"flex-start\" , paddingLeft: \"10px\"}}>\n                    <Tooltip title={getPrevButtonTitle(mode)} placement=\"bottom-start\">\n                        <IconButton \n                                color=\"default\" \n                                aria-label=\"prev\"\n                                onClick = {handlePrevButton}\n                                >\n                            <NavigateBeforeIcon style={{fontSize: '2rem'}}/>\n                        </IconButton>\n                    </Tooltip>\n\n                    <Tooltip title={getNextButtonTitle(mode)} placement=\"bottom-end\">\n                        <IconButton \n                                color=\"default\" \n                                aria-label=\"next\"\n                                onClick = {handleNextButton}\n                                >\n                            <NavigateNextIcon style={{fontSize: '2rem'}}/>\n                        </IconButton>\n                    </Tooltip>\n\n                    <Button style={{marginTop: \"11px\", marginLeft: \"10px\"}} onClick={goToday} variant=\"outlined\"> Today </Button>\n                </div>\n\n            </Grid>\n\n            <Grid item md={6}>\n\n                    <Grid\n                        container\n                        direction=\"row\"\n                        justify=\"center\"\n                        alignItems=\"flex-end\"\n                        spacing = {3}\n                        >\n                            <Grid item>\n                                    {getCalendarTitleFromMode(mode)}\n                            </Grid>\n                            {mode === 'day' && (\n                                        <Grid item>\n                                                <TextField\n                                                    variant=\"standard\"\n                                                    style={{marginBottom : \"5px\"}}\n                                                    value={filter}\n                                                    onChange={filterChanged}\n                                                    margin=\"normal\"\n                                                    size=\"small\"\n                                                    id=\"filter\"\n                                                    label=\"Filter\"\n                                                    name=\"filter\"\n                                                    autoComplete=\"off\"\n                                                    InputProps={{\n                                                        endAdornment : \n                                                            <InputAdornment position=\"end\">\n                                                                <Tooltip title=\"Clear\">\n                                                                            <IconButton\n                                                                            aria-label=\"remove filter\"\n                                                                            onClick={() => removeFilter()}\n                                                                            onMouseDown={() => removeFilter()}\n                                                                        >\n                                                                            <CloseIcon/>\n                                                                        </IconButton>\n                                                                </Tooltip>\n                                                            \n                                                            </InputAdornment>\n                                                          \n                                                    }}\n                                                   \n                                                />\n                                        </Grid>\n                            )}\n                           \n                    </Grid>\n                \n            </Grid>\n\n            <Grid item md={3}>\n                <div  style={{display:\"flex\", alignItems: \"flex-end\", justifyContent: \"flex-end\", paddingRight: \"10px\" }}>\n                    <ToggleButtonGroup\n                        value={selectedTab}\n                        exclusive\n                        onChange={handleTabChanged}\n                        aria-label=\"select view mode\"\n                    >\n                        <ToggleButton style={selectedTab === 'month' ? {width: \"80px\", color: \"#3f51b5\", backgroundColor: \"#ebedf7\" } : {width: \"80px\"}} value=\"month\" aria-label=\"month view\">\n                                month\n                        </ToggleButton>\n                        <ToggleButton style={selectedTab === 'week' ? {width: \"80px\", color: \"#3f51b5\", backgroundColor: \"#ebedf7\"} : {width: \"80px\"}}  value=\"week\" aria-label=\"week view\">\n                                week\n                        </ToggleButton>\n                        <ToggleButton style={selectedTab === 'day' ? {width: \"80px\", color: \"#3f51b5\", backgroundColor: \"#ebedf7\"} : {width: \"80px\"}} value=\"day\" aria-label=\"day view\">\n                                day\n                        </ToggleButton>\n                    </ToggleButtonGroup>\n                </div>\n            </Grid>\n\n           </Grid> \n\n             {getContentFromMode(mode)}\n\n        </React.Fragment>\n\n\n    );\n\n}","import axios from 'axios';\nimport { authToken, backendAPI } from '../../GlobalPath';\n\nexport default axios.create({\n  baseURL: backendAPI,\n  headers : {\n      'Authorization' : authToken,\n       'Content-Type': 'application/json',\n  }\n});","import API from './api';\nimport axiosRetry from 'axios-retry';\n\nexport default class BookService {\n\n\n   static addNewBooking = (payload) =>\n   {\n      return API.post(`/api/std/book/addnewbooking`, payload);\n   }\n   \n   static sendRegFormEmail = (bookingId) =>\n   {\n      return API.post(`/api/std/book/sendregformemail?id=${bookingId}`);\n   }\n   static payBooking = (bookingId,price, paymentMethod, corporate) =>\n   {\n      return API.post(`/api/std/book/paybooking?id=${bookingId}&paymentmethod=${paymentMethod}&corporate=${corporate}&price=${price}`);\n   }\n\n   static unPayBooking = (bookingId) =>\n   {\n      return API.post(`/api/std/book/unpaybooking?id=${bookingId}`);\n   }\n\n   static getShouldRefundsCount = () =>\n   {\n      return API.get(`/api/std/book/getshouldrefundscount?`);\n   }\n\n   \n\n   static refundBooking = (bookingId) =>\n   {\n      return API.post(`/api/std/payment/refundpayment`, {bookingId: bookingId});\n   }\n\n   static getBookingsStatsByDateStr = (dateStr) =>\n   {\n      return API.get(`/api/std/book/getbookingsstatsbydatestr?date=${dateStr}`);\n   }\n\n   static getBookingsCountByDateStr = (dateStr) =>\n   {\n      return API.get(`/api/std/book/getbookingscountbydatestr?date=${dateStr}`);\n   }\n\n   static getAllBookingsCountAll = () =>\n   {\n      return API.get(`/api/std/book/getallbookingscountall`);\n   }\n\n   static getBookingsCountByDateStrandTime = (dateStr, time, source) =>\n   {\n      return API.get(`/api/std/book/getbookingscountbydatestrandtime?date=${dateStr}&time=${time}`, {cancelToken: source.token});\n   }\n\n   static getBookingsByDateStrandTime = (dateStr, time) =>\n   {\n      return API.get(`/api/std/book/getbookingsbydatestrandtime?date=${dateStr}&time=${time}`);\n   }\n\n\n   static getAllBookingsCountByDateStr = (dateStr) =>\n   {\n      return API.get(`/api/std/book/getallbookingscountbydatestr?date=${dateStr}`);\n   }\n\n   static getAllBookingsCountByDateStrandTime = (dateStr, time, source) =>\n   {\n      return API.get(`/api/std/book/getallbookingscountbydatestrandtime?date=${dateStr}&time=${time}`, {cancelToken: source.token});\n   }\n\n   static getAllBookingsByDateStrandTime = (dateStr, time) =>\n   {\n      return API.get(`/api/std/book/getallbookingsbydatestrandtime?date=${dateStr}&time=${time}`);\n   }\n\n   static changeBackToBookingMade = (id) =>\n   {\n      return API.post(`/api/std/book/changebacktobookingmade?id=${id}`);\n   }\n\n   static changeToPatientAttended = (id) =>\n   {\n      return API.post(`/api/std/book/changetopatientattended?id=${id}`);\n   }\n\n   static updateBooking = (payload) =>\n   {\n      return API.post(`/api/std/book/updatebookappointment`, payload);\n   } \n\n   static updateBookingTime = (payload) =>\n   {\n      return API.post(`/api/std/book/updatebookappointmenttime`, payload);\n   } \n\n   static deleteBooking = (id) =>\n   {\n      return API.post(`/api/std/book/deletebookappointment?id=${id}`);\n   } \n\n   static unDeleteBooking = (id) =>\n   {\n      return API.post(`/api/std/book/undeletebookappointment?id=${id}`);\n   } \n   \n    static getBookingsByRef = (ref) =>\n    {\n       return API.get(`/api/std/book/getbookingsbyref?ref=${ref}`);\n    }\n\n    static getBookingById = (id) =>\n    {\n       return API.get(`/api/std/book/getbookingbyid?id=${id}`);\n    }\n\n    static getAllBookings = (limit) =>\n    {\n      if (!limit) limit = 25 \n      return API.get(`/api/std/book/getallbookings?limit=${limit}`);\n    }\n\n    static getDeletedBookings= (limit) =>\n    {\n      if (!limit) limit = 25 \n       return API.get(`/api/std/book/getdeletedbookings?limit=${limit}`);\n    }\n\n    static getTodayBookings= () =>\n    {\n       return API.get(`/api/std/book/gettodaybookings`);\n    }\n\n    static getOldBookings= (limit) =>\n    {\n      if (!limit) limit = 25 \n       return API.get(`/api/std/book/getoldbookings?limit=${limit}`);\n    }\n\n    static getFutureBookings= (limit) =>\n    {\n      if (!limit) limit = 25 \n       return API.get(`/api/std/book/getfuturebookings?limit=${limit}`);\n    }\n\n    static getRecentBookings= () =>\n    {\n       return API.get(`/api/std/book/getrecentbookings`);\n    }\n\n    static getRecentBookingsAll= (limit) =>\n    {\n      if (!limit) limit = 25 \n       return API.get(`/api/std/book/getrecentbookingsall?limit=${limit}`);\n    }\n}","import API from './api';\n\nexport default class PDFService {\n\n\n    static downloadSTDRegForm = (id) =>\n    {\n       return API.get(`/api/pdf/downloadstdregform?id=${id}`, {\n        responseType: 'arraybuffer',\n        id: id,\n        headers: {\n            Accept: 'application/pdf',\n        }\n        });\n    }\n\n}","export const corporates = [\n    'Visa Medical'\n]","import React, { useEffect, useRef, useState } from \"react\";\nimport BookService from \"./services/BookService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {\n  Backdrop,\n  Button,\n  Checkbox,\n  CircularProgress,\n  Divider,\n  FormControlLabel,\n  Grid,\n  InputAdornment,\n  InputLabel,\n  Link,\n  makeStyles,\n  MenuItem,\n  Select,\n  TextField,\n  Tooltip,\n} from \"@material-ui/core\";\nimport GlobalState from \"../GlobalState\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport CreditCardIcon from \"@material-ui/icons/CreditCard\";\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\n\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Draggable from \"react-draggable\";\nimport Paper from \"@material-ui/core/Paper\";\n\nimport Alert from \"@material-ui/lab/Alert\";\n\nimport PropTypes from \"prop-types\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport Box from \"@material-ui/core/Box\";\n\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport { corporates } from \"./Corporates\";\nimport NumberFormat from \"react-number-format\";\n\n\nvar interval;\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    marginTop: theme.spacing(0),\n    marginBottom: theme.spacing(1),\n  },\n\n  refreshButton: {\n    marginLeft: theme.spacing(2),\n  },\n\n  checkIcon: {\n    color: \"green\",\n  },\n\n  closeIcon: {\n    color: \"red\",\n  },\n\n  RefLink: {\n    cursor: \"pointer\",\n  },\n\n  BookedLabel: {\n    backgroundColor: \"#606060\",\n    color: \"#fff\",\n    paddingRight: \"10px\",\n    paddingLeft: \"10px\",\n  },\n\n  PatientAttendedLabel: {\n    backgroundColor: \"#0066aa\",\n    color: \"#fff\",\n    paddingRight: \"15px\",\n    paddingLeft: \"10px\",\n  },\n\n  SampleTakenLabel: {\n    backgroundColor: \"#0066cc\",\n    color: \"#fff\",\n    paddingRight: \"40px\",\n    paddingLeft: \"10px\",\n  },\n\n  ReportSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"90px\",\n    paddingLeft: \"10px\",\n  },\n\n  ReportCertSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"68px\",\n    paddingLeft: \"10px\",\n  },\n\n  archiveButton: {},\n\n  smartMatchButton: {\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    marginRight: \"10px\",\n    // padding: \"10px\"\n  },\n\n  infoTitle: {\n    fontWeight: \"400\",\n  },\n\n  infoData: {\n    paddingLeft: \"10px\",\n    fontWeight: \"800\",\n  },\n\n  matchButton: {\n    marginTop: \"30px\",\n    marginBottom: \"20px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  resendButton: {\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  resendFilesButton: {\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n    backgroundColor: \"#3792ad\",\n    \"&:hover\": {\n      background: \"#2f798f\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  cancelButton: {\n    marginBottom: \"10px\",\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"90px\",\n    paddingRight: \"90px\",\n  },\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 5,\n    color: \"#fff\",\n  },\n}));\n\nfunction NumberFormatCustom(props) {\n  const { inputRef, onChange, ...other } = props;\n\n  return (\n    <NumberFormat\n      {...other}\n      getInputRef={inputRef}\n      onValueChange={(values) => {\n        onChange({\n          target: {\n            name: props.name,\n            value: values.value,\n          },\n        });\n      }}\n      thousandSeparator\n      isNumericString\n      prefix=\"\"\n    />\n  );\n}\n\nNumberFormatCustom.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\n\nconst BorderLinearProgress = withStyles((theme) => ({\n  root: {\n    height: 10,\n    borderRadius: 5,\n  },\n  colorPrimary: {\n    backgroundColor: \"#cedbce\", //theme.palette.grey[theme.palette.type === 'light' ? 200 : 700],\n  },\n  bar: {\n    borderRadius: 5,\n    backgroundColor: \"#2f942e\",\n  },\n}))(LinearProgress);\nfunction LinearProgressWithLabel(props) {\n  return (\n    <Box display=\"flex\" alignItems=\"center\">\n      <Box width=\"100%\" mr={1}>\n        <BorderLinearProgress variant=\"determinate\" {...props} />\n      </Box>\n      <Box minWidth={35}>\n        <Typography\n          style={{ fontWeight: \"800\", color: \"#5e855e\" }}\n          variant=\"body2\"\n          color=\"textSecondary\"\n        >{`${Math.round(props.value)}%`}</Typography>\n      </Box>\n    </Box>\n  );\n}\n\nLinearProgressWithLabel.propTypes = {\n  /**\n   * The value of the progress indicator for the determinate and buffer variants.\n   * Value between 0 and 100.\n   */\n  value: PropTypes.number.isRequired,\n};\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable\n      handle=\"#draggable-dialog-title\"\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\n    >\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nexport default function PayDialog(props) {\n  const classes = useStyles();\n\n  const [state, setState] = React.useContext(GlobalState);\n  const [paymentMethod, setPaymentMethod] = useState(\"credit card\");\n  const [corporate, setCorporate] = useState(corporates[0]);\n  const [saving, setSaving] = useState(false);\n\n  const [price, setPrice] = useState(\"\");\n  const [priceError, setPriceError] = useState(false);\n\n  useEffect( () => {\n    if (props.price)\n    {\n      setPrice(`${props.price}`)\n    }else\n    {\n      setPrice('')\n    }\n  }, [props.price, props.open])\n\n  const priceChanged = (event) =>\n  {\n    setPrice(event.target.value)\n    setPriceError(false)\n  }\n\n  const paymentMethodChanged = (event) => {\n    setPaymentMethod(event.target.value);\n  };\n\n  const handleClose = () => {\n    if (saving) return;\n\n    props.handleClose();\n    setPaymentMethod(\"credit card\");\n    setPrice('')\n    setCorporate(corporates[0]);\n    setSaving(false);\n  };\n\n  const corporateChanged = (event) => {\n    setCorporate(event.target.value);\n  };\n\n  const payClicked = async () => {\n\n\n    if (!price || price.trim().length === 0 || price === '0')\n    {\n      setPriceError(true)\n      return\n    }\n\n    setSaving(true);\n\n  \n\n    try {\n      await BookService.payBooking(\n        props.booking._id,\n        price,\n        paymentMethod,\n        paymentMethod === \"corporate\" ? corporate : \"\"\n      );\n      setSaving(false);\n      setState((state) => ({\n        ...state,\n        bookingPayChanged: !state.bookingPayChanged ? true : false,\n      }));\n      handleClose();\n    } catch (err) {\n      console.error(err);\n      setSaving(false);\n    }\n  };\n\n  return (\n    <React.Fragment>\n      {props.booking && (\n        <React.Fragment>\n          <Dialog\n            maxWidth=\"xs\"\n            open={props.open}\n            onClose={handleClose}\n            PaperComponent={PaperComponent}\n            aria-labelledby=\"form-dialog-title\"\n          >\n            <DialogTitle id=\"draggable-dialog-title\">\n              <Grid\n                container\n                spacing={2}\n                direction=\"row\"\n                justify=\"center\"\n                alignItems=\"center\"\n              >\n                <Grid item>\n                  <CreditCardIcon\n                    style={{ color: \"#f50057\", fontSize: \"3rem\" }}\n                  />\n                </Grid>\n\n                <Grid item>\n                  <div\n                    style={{\n                      color: \"#f50057\",\n                      paddingBottom: \"10px\",\n                      fontWeight: \"800\",\n                    }}\n                  >\n                    {\" \"}\n                    PAY the CHARGE{\" \"}\n                  </div>\n                </Grid>\n              </Grid>\n\n              <Divider />\n            </DialogTitle>\n            <DialogContent>\n              <div\n                style={{\n                  height: \"300px\",\n                }}\n              >\n                <Grid\n                  container\n                  direction=\"column\"\n                  justify=\"space-between\"\n                  spacing={2}\n                  alignItems=\"flex-start\"\n                >\n                  <Grid item>\n                  <TextField\n                                autoFocus\n                                error={priceError}\n                                label=\"TOTAL Charges\"\n                                value={price}\n                                fullWidth\n                                required\n                                onChange={priceChanged}\n                                name=\"product-price\"\n                                id=\"product-price-id\"\n                                InputProps={{\n                                  inputComponent: NumberFormatCustom,\n                                  startAdornment: (\n                                    <InputAdornment position=\"start\">\n                                      £\n                                    </InputAdornment>\n                                  ),\n                                }}\n                              />\n\n                  </Grid>\n\n                  <Grid item>\n                    <div style={{ fontSize: \"17px\" }}>\n                      {\" \"}\n                      How do you want to pay?{\" \"}\n                    </div>\n                  </Grid>\n\n                  <Grid item>\n                    <FormControl component=\"fieldset\">\n                      <RadioGroup\n                        aria-label=\"paymentMethod\"\n                        name=\"paymentMethod\"\n                        value={paymentMethod}\n                        onChange={paymentMethodChanged}\n                      >\n                        <FormControlLabel\n                          value=\"credit card\"\n                          control={<Radio />}\n                          label=\"Credit Card\"\n                        />\n                        <FormControlLabel\n                          value=\"cash\"\n                          control={<Radio />}\n                          label=\"Cash\"\n                        />\n                        <FormControlLabel\n                          value=\"corporate\"\n                          control={<Radio />}\n                          label=\"Corporate\"\n                        />\n                      </RadioGroup>\n\n                      {paymentMethod === \"corporate\" && (\n                        <FormControl\n                          style={{ marginTop: \"10px\" }}\n                          className={classes.formControl}\n                        >\n                          <Select\n                            labelId=\"select-corporate\"\n                            id=\"select-corporate-id\"\n                            value={corporate}\n                            onChange={corporateChanged}\n                          >\n                            {corporates.map((element) => (\n                              <MenuItem\n                                value={element}\n                              >{`${element}`}</MenuItem>\n                            ))}\n                          </Select>\n                        </FormControl>\n                      )}\n                    </FormControl>\n                  </Grid>\n                </Grid>\n\n                <Grid item></Grid>\n\n                <div\n                  style={{\n                    position: \"absolute\",\n                    bottom: \"20px\",\n                    right: \"20px\",\n                  }}\n                >\n                  <Grid\n                    container\n                    direction=\"row\"\n                    justify=\"flex-end\"\n                    alignItems=\"center\"\n                    spacing={1}\n                  >\n                    <Grid item>\n                      <Button\n                        onClick={handleClose}\n                        style={{ width: \"100px\" }}\n                        disabled={saving}\n                      >\n                        back\n                      </Button>\n                    </Grid>\n                    <Grid item>\n                      <Button\n                        onClick={payClicked}\n                        variant=\"contained\"\n                        color=\"secondary\"\n                        style={{ width: \"100px\" }}\n                        disabled={saving}\n                      >\n                        Pay\n                      </Button>\n                    </Grid>\n                  </Grid>\n                </div>\n              </div>\n\n              <Backdrop className={classes.backdrop} open={saving}>\n                <CircularProgress color=\"inherit\" />\n              </Backdrop>\n            </DialogContent>\n          </Dialog>\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport GlobalState from \"../GlobalState\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {\n  Button,\n  Checkbox,\n  DialogActions,\n  DialogContentText,\n  Divider,\n  FormControlLabel,\n  IconButton,\n  TextField,\n  Tooltip,\n} from \"@material-ui/core\";\nimport PDFService from \"./services/PDFService\";\n\nimport { calculatePrice } from \"./PriceCalculator\";\n\nimport bookingService from \"./services/BookService\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport CloseIcon from \"@material-ui/icons/Close\";\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Draggable from \"react-draggable\";\nimport Slide from \"@material-ui/core/Slide\";\n\nimport Paper from \"@material-ui/core/Paper\";\n\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport BookService from \"./services/BookService\";\n\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport {\n  FormatDateFromString,\n  RevertFormatDateFromString,\n} from \"./DateFormatter\";\nimport PayDialog from \"./PayDialog\";\n\nimport PrintIcon from \"@material-ui/icons/Print\";\nimport UndoIcon from \"@material-ui/icons/Undo\";\n\nimport SendIcon from \"@material-ui/icons/Send\";\n\nimport HistoryIcon from \"@material-ui/icons/History\";\n\nimport FileCopyOutlinedIcon from \"@material-ui/icons/FileCopyOutlined\";\nimport { CalendarColors } from \"../Admin/calendar-admin/colors\";\nimport InvoiceService from \"../services/InvoiceService\";\nimport InvoiceDialog from \"../InvoiceDialog\";\n\nconst useStyles = makeStyles((theme) => ({\n  box: {\n    backgroundColor: \"#373737\",\n    color: \"#fff\",\n    padding: \"1px\",\n    borderRadius: \"4px\",\n    textAlign: \"justify\",\n    paddingRight: \"40px\",\n  },\n\n  boxRed: {\n    backgroundColor: \"#dc2626\",\n    color: \"#fff\",\n    padding: \"1px\",\n    borderRadius: \"4px\",\n    textAlign: \"justify\",\n    paddingRight: \"40px\",\n  },\n\n  boxInfo: {\n    textAlign: \"justify\",\n    backgroundColor: \"#fafafa\",\n    color: \"#333\",\n    padding: \"1px\",\n    borderRadius: \"4px\",\n    paddingRight: \"40px\",\n    border: \"1px solid #eee\",\n  },\n\n  ul: {\n    listStyle: \"none\",\n    padding: \"0\",\n    margin: \"0\",\n  },\n\n  li: {\n    marginBottom: \"15px\",\n  },\n\n  icon: {\n    marginRight: \"8px\",\n  },\n\n  root: {\n    width: \"100%\",\n  },\n\n  lineThrough: {\n    textDecoration: \"line-through\",\n  },\n\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    flexBasis: \"33.33%\",\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n  },\n  secondaryHeading: {\n    fontSize: theme.typography.pxToRem(15),\n  },\n\n  infoDetails: {\n    textAlign: \"left\",\n  },\n\n  infoTitle: {\n    fontWeight: \"800\",\n    marginRight: \"10px\",\n  },\n\n  infoData: {\n    fontWeight: \"400\",\n  },\n\n  title: {\n    textAlign: \"center\",\n    fontWeight: \"600\",\n    marginLeft: \"10px\",\n    marginBottom: \"5px\",\n  },\n\n  Accordion: {\n    backgroundColor: \"#f5f5f5\",\n    color: \"#222\",\n  },\n\n  AccordionDeleted: {\n    backgroundColor: \"#aaa\",\n    color: \"#555\",\n  },\n\n  DownloadForm: {\n    marginTop: \"10px\",\n    marginBottom: \"10px\",\n  },\n\n  infoDataCharges: {\n    fontSize: \"18px\",\n    color: \"green\",\n    fontWeight: \"600\",\n  },\n\n  infoDataChargesHigher: {\n    fontSize: \"18px\",\n    color: \"red\",\n    fontWeight: \"600\",\n  },\n  BookedLabel: {\n    color: \"#606060\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#606060\",\n    width: \"150px\",\n    display: \"inline-block\",\n  },\n\n  PatientAttendedLabel: {\n    color: \"#0066aa\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#0066aa\",\n    width: \"150px\",\n    display: \"inline-block\",\n  },\n\n  SampleTakenLabel: {\n    color: \"#0066cc\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#0066cc\",\n  },\n\n  ReportSentLabel: {\n    color: \"#009900\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#009900\",\n  },\n\n  ReportCertSentLabel: {\n    color: \"#009900\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#009900\",\n  },\n\n  PositiveLabel: {\n    color: \"red\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"red\",\n  },\n\n  EditButton: {\n    marginBottom: \"20px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n  },\n\n  ResendEmailsButton: {\n    // marginBottom : \"20px\",\n    color: \"#2f942e\",\n    borderColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"#fafffa\",\n      borderColor: \"#2f942e\",\n    },\n    textDecoration: \"none !important\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  PayButton: {\n    marginLeft: \"70px\",\n    width: \"300px\",\n  },\n\n  PayLabel: {\n    marginLeft: \"20px\",\n\n    color: \"#2f942e\",\n    fontWeight: \"500\",\n    textAlign: \"center\",\n  },\n\n  RestoreButton: {\n    marginBottom: \"20px\",\n    backgroundColor: \"#eee\",\n    color: \"#333\",\n    \"&:hover\": {\n      background: \"#f1f1f1\",\n      color: \"#111\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n  },\n\n  DeleteButton: {\n    marginBottom: \"20px\",\n    backgroundColor: \"#d90015\",\n    \"&:hover\": {\n      background: \"#b80012\",\n      color: \"#fff\",\n    },\n\n    padding: \"10px\",\n  },\n\n  SaveButton: {\n    marginBottom: \"10px\",\n    padding: \"10px\",\n\n    backgroundColor: \"#d1175e\",\n    \"&:hover\": {\n      background: \"#bd0d50\",\n      color: \"#fff\",\n    },\n  },\n\n  CancelButton: {\n    marginBottom: \"20px\",\n    // padding: \"10px\"\n  },\n\n  TextBox: {\n    padding: \"0px\",\n  },\n\n  checkIcon: {\n    color: \"green\",\n  },\n\n  checkIconSmall: {\n    color: \"green\",\n    paddingTop: \"5px\",\n  },\n\n  closeIcon: {\n    color: \"red\",\n  },\n\n  centeredLabel: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 5,\n    color: \"#fff\",\n  },\n\n  invoiceNumber: {\n    display: \"inline-block\",\n    fontWeight: \"500\",\n    width: \"72px\",\n    fontSize: \"1rem\",\n    color: theme.palette.primary.main,\n  },\n\n  printInvoiceButton: {\n    marginLeft: \"70px\",\n    fontSize: \"0.8rem\",\n    // width: \"300px\",\n  },\n\n  editInvoiceButton: {\n    marginLeft: \"10px\",\n    fontSize: \"0.8rem\",\n  },\n}));\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable\n      handle=\"#alert-dialog-slide-title\"\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\n    >\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nexport default function BookingDialog(props) {\n  const classes = useStyles();\n\n  const [state, setState] = React.useContext(GlobalState);\n\n  const [copied, setCopied] = useState(false);\n\n  const [emailSent, setEmailSent] = React.useState(false);\n\n  const [openResendDialog, setOpenResendDialog] = React.useState(false);\n  const [openPayDialog, setOpenPayDialog] = React.useState(false);\n  const [openRefundDialog, setOpenRefundDialog] = React.useState(false);\n\n  const [selectedBooking, setSelectedBooking] = React.useState(null);\n\n  const [editMode, setEditMode] = React.useState({ edit: false, person: null });\n  const [deleteMode, setDeleteMode] = React.useState({\n    delete: false,\n    person: null,\n  });\n  const [restoreMode, setRestoreMode] = React.useState({\n    restore: false,\n    person: null,\n  });\n\n  const [saving, setSaving] = React.useState(false);\n  const [deleting, setDeleting] = React.useState(false);\n  const [restoring, setRestoring] = React.useState(false);\n\n  const [validationError, setValidationError] = React.useState({});\n\n  const [bookingDate, setBookingDate] = React.useState(\"\");\n  const [bookingTime, setBookingTime] = React.useState(\"\");\n\n  const [fullname, setFullname] = React.useState(\"\");\n  const [email, setEmail] = React.useState(\"\");\n  const [tel, setTel] = React.useState(\"\");\n  const [notes, setNotes] = React.useState(\"\");\n  const [service, setService] = React.useState(\"\");\n\n  const [refreshData, setRefreshData] = React.useState(false);\n\n  const [booking, setBooking] = React.useState(null);\n\n  const [recordChanged, setRecordChanged] = React.useState(false);\n\n  const [fieldChanged, setFieldChanged] = React.useState(false);\n\n  const [openUndoPayDialog, setOpenUndoPayDialog] = React.useState(false);\n\n  const [openTimeStampDialog, setOpenTimeStampDialog] = React.useState(false);\n\n  const handleCloseTimeStampDialog = () => {\n    setOpenTimeStampDialog(false);\n    setSelectedBooking(null);\n  };\n\n  const handleCloseUndoPayDialog = () => {\n    setOpenUndoPayDialog(false);\n    setSelectedBooking(null);\n  };\n\n  const handleCloseResendDialog = () => {\n    setOpenResendDialog(false);\n    setSelectedBooking(null);\n  };\n\n  const handleClosePayDialog = () => {\n    setOpenPayDialog(false);\n    setSelectedBooking(null);\n  };\n\n  const handleCloseRefundDialog = () => {\n    setOpenRefundDialog(false);\n    setSelectedBooking(null);\n  };\n\n  useEffect(() => {\n    if (booking) {\n      const isChanged =\n        bookingDate !== FormatDateFromString(booking.bookingDate) ||\n        bookingTime !== booking.bookingTime ||\n        fullname !== booking.fullname ||\n        email !== booking.email ||\n        tel !== booking.phone ||\n        notes !== booking.notes ||\n        service !== booking.packageName;\n\n      setRecordChanged(isChanged);\n    }\n  }, [fieldChanged]);\n\n  useEffect(() => {\n    if (!props.open) {\n      setTimeout(() => {\n        setEditMode({ edit: false, person: null });\n        setRecordChanged(false);\n      }, 500);\n    }\n  }, [props.open]);\n\n  const bookingDateChanged = (event) => {\n    setBookingDate(event.target.value);\n    setValidationError({ ...validationError, bookingDateError: false });\n    setFieldChanged(!fieldChanged);\n  };\n\n  const bookingTimeChanged = (event) => {\n    setBookingTime(event.target.value);\n    setValidationError({ ...validationError, bookingTimeError: false });\n    setFieldChanged(!fieldChanged);\n  };\n\n  const fullnameChanged = (event) => {\n    setFullname(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const emailChanged = (event) => {\n    setEmail(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const telChanged = (event) => {\n    setTel(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const serviceChanged = (event) => {\n    setService(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const notesChanged = (event) => {\n    setNotes(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const getStatusLabel = (status) => {\n    if (status === \"booked\") {\n      return <div className={classes.BookedLabel}> Booking Made </div>;\n    } else if (status === \"patient_attended\") {\n      return (\n        <div className={classes.PatientAttendedLabel}> Patient Attended </div>\n      );\n    } else {\n      return \"Unknown\";\n    }\n  };\n\n  const handleEditModeChanged = (edit, person) => {\n    if (edit) {\n      setFullname(person.fullname);\n      setBookingDate(FormatDateFromString(person.bookingDate));\n      setBookingTime(person.bookingTime.toUpperCase());\n      setEmail(person.email);\n      setTel(person.phone);\n      setService(person.packageName);\n      if (person.notes) {\n        setNotes(person.notes);\n      }\n\n      setEditMode({ edit: edit, person: person });\n    } else if (!edit && !person) {\n      setEditMode({ edit: edit, person: person });\n      setRecordChanged(false);\n    } else if (!edit && person) {\n      const booking = {};\n      const bookingId = person._id;\n      booking.email = email;\n      booking.phone = tel;\n      booking.fullname = fullname;\n      booking.notes = notes;\n      booking.packageName = service;\n      booking.bookingDate = RevertFormatDateFromString(bookingDate);\n      booking.bookingTime = bookingTime;\n      booking.bookingRef = person.bookingRef;\n\n      if (validateBooking(booking)) {\n        updateBooking({ bookingId: bookingId, person: booking });\n      }\n    }\n  };\n\n  const validateDate = (str) => {\n    var error = false;\n    if (!str || str.length !== 10) {\n      error = true;\n    }\n\n    if (str.charAt(4) !== \"-\" || str.charAt(7) !== \"-\") {\n      error = true;\n    }\n\n    try {\n      const result = /^\\d{4}-\\d{2}-\\d{2}$/.test(str);\n      if (!result) {\n        error = true;\n      }\n\n      const year = parseInt(str.substr(0, 4));\n      const month = parseInt(str.substr(5, 2));\n      const day = parseInt(str.substr(8, 2));\n\n      if (year < 1900) {\n        error = true;\n      }\n\n      if (month < 1 || month > 12) {\n        error = true;\n      }\n\n      if (day > 31) {\n        error = true;\n      }\n    } catch (err) {\n      error = true;\n    }\n\n    return !error;\n  };\n\n  const validateTime = (str) => {\n    var error = false;\n\n    const result = /^\\d{2}:\\d{2} AM$|^\\d{2}:\\d{2} PM$/.test(str);\n    if (!result) {\n      error = true;\n    }\n\n    try {\n      const hour = parseInt(str.substr(0, 2));\n      const minute = parseInt(str.substr(3, 2));\n\n      if (hour < 0 || hour > 12) {\n        error = true;\n      }\n\n      if (minute < 0 || minute > 59) {\n        error = true;\n      }\n    } catch (err) {\n      error = true;\n    }\n\n    return !error;\n  };\n\n  const validateBooking = (booking) => {\n    var error = false;\n\n    if (!validateDate(booking.bookingDate)) {\n      error = true;\n      setValidationError({ ...validationError, bookingDateError: true });\n    }\n\n    if (!validateTime(booking.bookingTime)) {\n      error = true;\n      setValidationError({ ...validationError, bookingTimeError: true });\n    }\n    return !error;\n  };\n\n  const updateBooking = (payload) => {\n    setSaving(true);\n    bookingService\n      .updateBooking(payload)\n      .then((res) => {\n        setSaving(false);\n        setEditMode({ edit: false, person: null });\n        setRefreshData(!refreshData);\n      })\n      .catch((err) => {\n        setSaving(false);\n        setEditMode({ edit: false, person: null });\n        console.log(err);\n      });\n  };\n\n  const deleteBooking = (id) => {\n    setDeleting(true);\n    bookingService\n      .deleteBooking(id)\n      .then((res) => {\n        setDeleting(false);\n        setDeleteMode({ delete: false, person: null });\n        setRefreshData(!refreshData);\n      })\n      .catch((err) => {\n        setDeleting(false);\n        setDeleteMode({ delete: false, person: null });\n        console.log(err);\n      });\n  };\n\n  const restoreBooking = (id) => {\n    setRestoring(true);\n    bookingService\n      .unDeleteBooking(id)\n      .then((res) => {\n        setRestoring(false);\n        setRestoreMode({ restore: false, person: null });\n        setRefreshData(!refreshData);\n      })\n      .catch((err) => {\n        setRestoring(false);\n        setRestoreMode({ restore: false, person: null });\n        console.log(err);\n      });\n  };\n\n  const handleDeleteModeChanged = (del, person) => {\n    if (del) {\n      setDeleteMode({ delete: del, person: person });\n    } else if (!del && !person) {\n      setDeleteMode({ delete: del, person: person });\n    } else if (!del && person) {\n      deleteBooking(person._id);\n    }\n  };\n\n  const handleRestoreModeChanged = (restore, person) => {\n    if (restore) {\n      setRestoreMode({ restore: restore, person: person });\n    } else if (!restore && !person) {\n      setRestoreMode({ restore: restore, person: person });\n    } else if (!restore && person) {\n      restoreBooking(person._id);\n    }\n  };\n\n  const changeBackToBookingMade = (event, id) => {\n    setSaving(true);\n    BookService.changeBackToBookingMade(id)\n      .then((res) => {\n        setSaving(false);\n        setRefreshData(!refreshData);\n      })\n      .catch((err) => {\n        console.log(err);\n        setSaving(false);\n      });\n  };\n\n  const changeToPatientAttended = (event, id) => {\n    setSaving(true);\n    BookService.changeToPatientAttended(id)\n      .then((res) => {\n        setSaving(false);\n        setRefreshData(!refreshData);\n      })\n      .catch((err) => {\n        console.log(err);\n        setSaving(false);\n      });\n  };\n\n  const Pay = (event, id) => {\n    setSelectedBooking(booking);\n    setOpenPayDialog(true);\n  };\n\n  useEffect(() => {\n    if (props.booking) {\n      BookService.getBookingById(props.booking._id)\n        .then((res) => {\n          setBooking(res.data);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n\n      setState((state) => ({\n        ...state,\n        bookingDialogDataChanged: !state.bookingDialogDataChanged\n          ? true\n          : false,\n      }));\n    }\n  }, [refreshData, state.bookingPayChanged]);\n\n  useEffect(() => {\n    if (props.booking) {\n      setBooking(props.booking);\n    }\n  }, [props.booking]);\n\n  const undoPaymentClicked = async () => {\n    setSaving(true);\n    try {\n      await BookService.unPayBooking(booking._id);\n      setSaving(false);\n      setOpenUndoPayDialog(false);\n      setRefreshData(!refreshData);\n    } catch (err) {\n      console.error(err);\n      setSaving(false);\n      setOpenUndoPayDialog(false);\n    }\n  };\n\n  const refundPaymentClicked = async () => {\n    setSaving(true);\n    try {\n      await BookService.refundBooking(booking._id);\n      setSaving(false);\n      updateShouldRefundsCount();\n      setOpenRefundDialog(false);\n      setRefreshData(!refreshData);\n    } catch (err) {\n      console.error(err);\n      setSaving(false);\n      setOpenRefundDialog(false);\n    }\n  };\n\n  const updateShouldRefundsCount = async () => {\n    try {\n      const res = await BookService.getShouldRefundsCount();\n      if (res && res.data && res.data.status === \"OK\") {\n        setState((state) => ({ ...state, shouldRefunsCount: res.data.count }));\n      }\n    } catch (ex) {\n      console.error(ex);\n    }\n  };\n\n  const downloadRegForm = (id) => {\n    PDFService.downloadSTDRegForm(id)\n      .then((res) => {\n        const file = new Blob([res.data], { type: \"application/pdf\" });\n\n        const fileURL = URL.createObjectURL(file);\n        window.open(fileURL, \"_blank\");\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const sendRegForm = (id) => {\n    setSaving(true);\n    setEmailSent(false);\n    BookService.sendRegFormEmail(id)\n      .then((res) => {\n        setSaving(false);\n        if (res.data.status === \"OK\") {\n          setEmailSent(true);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setSaving(false);\n      });\n  };\n\n  const onClose = () => {\n    setEmailSent(false);\n    setEmailSentInvoice(false);\n    setInvoice(null);\n\n    props.onClose();\n  };\n\n  ///*** Invoice  ******************/\n\n  const [invoice, setInvoice] = React.useState(null);\n  const [invoiceLoaded, setInvoiceLoaded] = React.useState(false);\n  const [openInvoiceDialog, setOpenInvoiceDialog] = React.useState(false);\n  const [emailSentInvoice, setEmailSentInvoice] = React.useState(false);\n\n  const fetchInvoice = async () => {\n    try {\n      setInvoiceLoaded(false);\n      const res = await InvoiceService.getInvoiceByBookingId(props.booking._id);\n      setInvoice(res.data.invoice);\n      setInvoiceLoaded(true);\n    } catch (err) {\n      setInvoiceLoaded(true);\n      console.error(err);\n    }\n  };\n\n  React.useEffect(() => {\n    if (props.booking) {\n      fetchInvoice();\n    }\n  }, [props.booking, props.open]);\n\n  const handleCloseInvoiceDialog = (refresh) => {\n    setOpenInvoiceDialog(false);\n    setSelectedBooking(null);\n    fetchInvoice();\n  };\n\n  const OpenInvoiceDialog = () => {\n    setSelectedBooking(booking);\n    setInvoice(invoice);\n    setOpenInvoiceDialog(true);\n  };\n\n  const downloadInvoice = (id) => {\n    InvoiceService.downloadInvoice(id)\n      .then((res) => {\n        const file = new Blob([res.data], { type: \"application/pdf\" });\n\n        const fileURL = URL.createObjectURL(file);\n        window.open(fileURL, \"_blank\");\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const sendInvoiceEmail = (id, _email) => {\n    setSaving(true);\n    setEmailSentInvoice(false);\n    InvoiceService.emailInvoice(id, _email)\n      .then((res) => {\n        setSaving(false);\n        if (res.data.status === \"OK\") {\n          setEmailSentInvoice(true);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setSaving(false);\n      });\n  };\n\n  //***************************** */\n\n  return (\n    <React.Fragment>\n      {booking && (\n        <React.Fragment>\n          <Dialog\n            maxWidth=\"md\"\n            open={props.open}\n            TransitionComponent={Transition}\n            keepMounted\n            onClose={onClose}\n            PaperComponent={PaperComponent}\n            aria-labelledby=\"alert-dialog-slide-title\"\n            aria-describedby=\"alert-dialog-slide-description\"\n          >\n            <DialogTitle\n              id=\"alert-dialog-slide-title\"\n              style={\n                booking.tr ? { backgroundColor: \"#7e0082\", color: \"#fff\" } : {}\n              }\n            >\n              <div style={{ position: \"absolute\", top: \"25x\", left: \"25px\" }}>\n                <Tooltip title=\"COPY EDIT LINK TO CLIPBOARD\">\n                  <IconButton\n                    onClick={() => {\n                      navigator.clipboard.writeText(\n                        `https://londonmedicalclinic.co.uk/medicalexpressclinic/user/edit/std/${booking._id}`\n                      );\n                      setCopied(true);\n                      setTimeout(() => {\n                        setCopied(false);\n                      }, 1500);\n                    }}\n                    aria-label=\"delete\"\n                    className={classes.margin}\n                    size=\"small\"\n                  >\n                    <FileCopyOutlinedIcon\n                      style={booking.tr ? { color: \"#ddd\" } : {}}\n                      fontSize=\"14px\"\n                    />\n                  </IconButton>\n                </Tooltip>\n\n                <span\n                  hidden={!copied}\n                  style={{ fontSize: \"12px\", transition: \"all 1s ease-in\" }}\n                >\n                  {\" \"}\n                  Copied{\" \"}\n                </span>\n              </div>\n\n              <div\n                style={{\n                  position: \"absolute\",\n                  top: \"25x\",\n                  right: \"60px\",\n                  backgroundColor: CalendarColors.STD_COLOR,\n                  color: \"#fff\",\n                  padding: \"0px 5px\",\n                  borderRadius: \"10px\",\n                }}\n              >\n                STD\n              </div>\n\n              <Grid\n                container\n                direction=\"row\"\n                justify=\"center\"\n                spacing={2}\n                alignItems=\"center\"\n              >\n                <Grid item>\n                  <div\n                    style={\n                      booking.deleted\n                        ? {\n                            paddingBottom: \"5px\",\n                            textDecoration: \"line-through\",\n                          }\n                        : {}\n                    }\n                  >\n                    {`${booking.fullname}`}\n                  </div>\n                </Grid>\n\n                {booking.deleted && (\n                  <Grid item>\n                    <Tooltip title=\"This record has been deleted.\">\n                      <DeleteIcon\n                        style={\n                          booking.tr\n                            ? {\n                                padding: 0,\n                                margin: 0,\n                                color: \"#fff\",\n                                fontSize: 25,\n                              }\n                            : {\n                                padding: 0,\n                                margin: 0,\n                                color: \"#333\",\n                                fontSize: 25,\n                              }\n                        }\n                      />\n                    </Tooltip>\n                  </Grid>\n                )}\n              </Grid>\n            </DialogTitle>\n            <DialogContent>\n              <div\n                style={{\n                  // height: \"550px\",\n                  paddingTop: \"0px\",\n                }}\n              >\n                <Grid item xs={12} md={12} key={`panel0`}>\n                  <div className={classes.infoDetails}>\n                    <ul className={classes.ul}>\n                      {/* Restore Functionality ******************************************* */}\n                      <li\n                        hidden={\n                          !(\n                            restoreMode.restore &&\n                            restoreMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <div\n                          style={{\n                            fontWeight: \"500\",\n                            paddingBottom: \"5px\",\n                            paddingLeft: \"5px\",\n                            fontSize: \"16px\",\n                            color: \"#333\",\n                          }}\n                        >\n                          Are you sure you want to restore this record?\n                        </div>\n                      </li>\n\n                      <li\n                        hidden={\n                          !booking.deleted ||\n                          (restoreMode.restore &&\n                            restoreMode.person._id === booking._id)\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"primary\"\n                          onClick={() => {\n                            handleRestoreModeChanged(true, booking);\n                          }}\n                          className={classes.RestoreButton}\n                        >\n                          Restore This Record\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            restoreMode.restore &&\n                            restoreMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"primary\"\n                          disabled={restoring}\n                          onClick={() => {\n                            handleRestoreModeChanged(false, booking);\n                          }}\n                          className={classes.SaveButton}\n                        >\n                          YES, Restore this!\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            restoreMode.restore &&\n                            restoreMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"default\"\n                          disabled={restoring}\n                          onClick={() => {\n                            handleRestoreModeChanged(false, null);\n                          }}\n                          className={classes.CancelButton}\n                        >\n                          Cancel\n                        </Button>\n                      </li>\n\n                      {/*  ******************************************************************* */}\n\n                      {/* Edit Functionality ******************************************* */}\n\n                      <li\n                        hidden={\n                          booking.deleted ||\n                          deleteMode.delete ||\n                          (editMode.edit && editMode.person._id === booking._id)\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"primary\"\n                          onClick={() => {\n                            handleEditModeChanged(true, booking);\n                          }}\n                          className={classes.EditButton}\n                        >\n                          Edit Booking Info\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            editMode.edit && editMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"primary\"\n                          disabled={saving || !recordChanged}\n                          onClick={() => {\n                            handleEditModeChanged(false, booking);\n                          }}\n                          className={classes.SaveButton}\n                        >\n                          Save Changes\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            editMode.edit && editMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"default\"\n                          disabled={saving}\n                          onClick={() => {\n                            handleEditModeChanged(false, null);\n                          }}\n                          className={classes.CancelButton}\n                        >\n                          Cancel\n                        </Button>\n                      </li>\n\n                      {/* ****************************************************************************************** */}\n\n                      {/* Delete Functionality ******************************************* */}\n\n                      <li\n                        hidden={\n                          !(\n                            deleteMode.delete &&\n                            deleteMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <div\n                          style={{\n                            fontWeight: \"600\",\n                            paddingBottom: \"5px\",\n                            paddingLeft: \"5px\",\n                            fontSize: \"16px\",\n                          }}\n                        >\n                          Are you sure you want to delete this record?\n                        </div>\n                      </li>\n\n                      <li\n                        hidden={\n                          props.deleteButtonDisabled ||\n                          booking.deleted ||\n                          editMode.edit ||\n                          (deleteMode.delete &&\n                            deleteMode.person._id === booking._id)\n                        }\n                      >\n                        {booking.OTCCharges > 0 && (\n                          <Tooltip title={\"Paid Records Cannot be Deleted!\"}>\n                            <div>\n                              <Button\n                                disabled={booking.OTCCharges > 0}\n                                type=\"button\"\n                                fullWidth\n                                variant=\"contained\"\n                                color=\"primary\"\n                                onClick={() => {\n                                  handleDeleteModeChanged(true, booking);\n                                }}\n                                className={classes.DeleteButton}\n                              >\n                                Delete This Record\n                              </Button>\n                            </div>\n                          </Tooltip>\n                        )}\n                        {booking.OTCCharges === 0 && (\n                          <Button\n                            disabled={booking.OTCCharges > 0}\n                            type=\"button\"\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={() => {\n                              handleDeleteModeChanged(true, booking);\n                            }}\n                            className={classes.DeleteButton}\n                          >\n                            Delete This Record\n                          </Button>\n                        )}\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            deleteMode.delete &&\n                            deleteMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"primary\"\n                          disabled={deleting}\n                          onClick={() => {\n                            handleDeleteModeChanged(false, booking);\n                          }}\n                          className={classes.SaveButton}\n                        >\n                          YES, Delete this!\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            deleteMode.delete &&\n                            deleteMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"default\"\n                          disabled={deleting}\n                          onClick={() => {\n                            handleDeleteModeChanged(false, null);\n                          }}\n                          className={classes.CancelButton}\n                        >\n                          Cancel\n                        </Button>\n                      </li>\n\n                      {/* ****************************************************************************************** */}\n\n                      <li className={classes.li}>\n                        <Grid container spacing={2}>\n                          <Grid item xs={6}>\n                            <span className={classes.infoTitle}>\n                              BOOKED DATE\n                            </span>\n\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {FormatDateFromString(booking.bookingDate)}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                error={validationError.bookingDateError}\n                                className={classes.TextBox}\n                                value={bookingDate}\n                                onChange={bookingDateChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n                          <Grid item xs={6}>\n                            <span className={classes.infoTitle}>\n                              BOOKED TIME\n                            </span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {booking.bookingTime.toUpperCase()}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                error={validationError.bookingTimeError}\n                                className={classes.TextBox}\n                                value={bookingTime}\n                                onChange={bookingTimeChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n                        </Grid>\n                      </li>\n\n                      <li className={classes.li}>\n                        <Grid container spacing={2}>\n                          <Grid item xs={6}>\n                            <span className={classes.infoTitle}>FULLNAME</span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {booking.fullname}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                className={classes.TextBox}\n                                value={fullname}\n                                onChange={fullnameChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n                          <Grid item xs={6}>\n                            <span className={classes.infoTitle}>EMAIL</span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {booking.email}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                className={classes.TextBox}\n                                value={email}\n                                onChange={emailChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n                        </Grid>\n                      </li>\n                      <li className={classes.li}>\n                        <Grid container spacing={2}>\n                          <Grid item xs={6}>\n                            <span className={classes.infoTitle}>TEL</span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {booking.phone?.toUpperCase()}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                className={classes.TextBox}\n                                value={tel}\n                                onChange={telChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n                          <Grid item xs={6}>\n                            <span className={classes.infoTitle}>NOTES</span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {booking.notes}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                className={classes.TextBox}\n                                value={notes}\n                                onChange={notesChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n                        </Grid>\n                      </li>\n\n                      <li className={classes.li} style={{ paddingTop: \"10px\" }}>\n                        <span className={classes.infoTitle}>Package</span>\n                        <span\n                          hidden={\n                            editMode.edit && editMode.person._id === booking._id\n                          }\n                          className={classes.infoData}\n                        >\n                          {booking.packageName}\n                        </span>\n                        <span\n                          hidden={\n                            !(\n                              editMode.edit &&\n                              editMode.person._id === booking._id\n                            )\n                          }\n                          className={classes.infoData}\n                        >\n                          <TextField\n                            fullWidth\n                            className={classes.TextBox}\n                            value={service}\n                            onChange={serviceChanged}\n                            inputProps={{\n                              style: {\n                                padding: 0,\n                              },\n                            }}\n                          ></TextField>\n                        </span>\n                      </li>\n\n                      <li className={classes.li} style={{ paddingTop: \"10px\" }}>\n                        <span className={classes.infoTitle}>STATUS</span>{\" \"}\n                        {getStatusLabel(booking.status)}\n                        {booking.status === \"patient_attended\" &&\n                          !(\n                            editMode.edit && editMode.person._id === booking._id\n                          ) &&\n                          !booking.deleted && (\n                            <Button\n                              variant=\"outlined\"\n                              color=\"primary\"\n                              disabled={saving}\n                              style={{ width: \"300px\" }}\n                              onClick={(event) =>\n                                changeBackToBookingMade(event, booking._id)\n                              }\n                            >\n                              Change Back To Booking Made\n                            </Button>\n                          )}\n                        {booking.status === \"booked\" &&\n                          !(\n                            editMode.edit && editMode.person._id === booking._id\n                          ) &&\n                          !booking.deleted && (\n                            <Button\n                              variant=\"outlined\"\n                              color=\"default\"\n                              disabled={saving}\n                              style={{ width: \"300px\" }}\n                              onClick={(event) =>\n                                changeToPatientAttended(event, booking._id)\n                              }\n                            >\n                              Change To Patient Attended\n                            </Button>\n                          )}\n                      </li>\n\n                      <li className={classes.li} style={{ paddingTop: \"10px\" }}>\n                        <span\n                          hidden={\n                            editMode.edit && editMode.person._id === booking._id\n                          }\n                          className={classes.infoTitle}\n                        >\n                          Estimated Price\n                        </span>\n                        <span\n                          hidden={\n                            editMode.edit && editMode.person._id === booking._id\n                          }\n                          className={classes.infoData}\n                        >\n                          {booking.estimatedPrice}\n                        </span>\n                      </li>\n\n                      <li hidden={booking.deleted || editMode.edit}>\n                        <Button\n                          disabled={!booking.formData}\n                          startIcon={<PrintIcon />}\n                          type=\"button\"\n                          fullWidth\n                          variant=\"outlined\"\n                          color=\"primary\"\n                          onClick={() => {\n                            downloadRegForm(booking._id);\n                          }}\n                          className={classes.DownloadForm}\n                        >\n                          Download Registration Form\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          booking.deleted || editMode.edit || booking.formData\n                        }\n                      >\n                        <Button\n                          disabled={!booking.email || booking.email.length < 3}\n                          startIcon={<SendIcon />}\n                          type=\"button\"\n                          fullWidth\n                          variant=\"outlined\"\n                          color=\"primary\"\n                          onClick={() => {\n                            sendRegForm(booking._id);\n                          }}\n                          className={classes.DownloadForm}\n                          style={{ position: \"relative\" }}\n                        >\n                          Send Registration Form Email\n                          {emailSent && (\n                            <div\n                              style={{\n                                position: \"absolute\",\n                                right: \"10px\",\n                                top: \"5px\",\n                                color: \"#05ad19\",\n                              }}\n                            >\n                              Email Sent\n                            </div>\n                          )}\n                        </Button>\n                      </li>\n\n                      <Divider />\n\n                      <li className={classes.li} style={{ marginTop: \"20px\" }}>\n                        <span className={classes.infoTitle}>INVOICE # : </span>{\" \"}\n                        <span style={{ paddingLeft: \"0px\" }}>\n                          {!invoiceLoaded && (\n                            <span className={classes.invoiceNumber}> ... </span>\n                          )}\n                          {invoiceLoaded && invoice && (\n                            <span className={classes.invoiceNumber}>\n                              {\" \"}\n                              {invoice.invoiceNumber}{\" \"}\n                            </span>\n                          )}\n                          {invoiceLoaded && !invoice && (\n                            <span\n                              className={classes.invoiceNumber}\n                              style={{ color: \"red\", fontSize: \"0.9rem\" }}\n                            >\n                              {\" \"}\n                              N/A{\" \"}\n                            </span>\n                          )}\n                        </span>\n                        {!(\n                          editMode.edit && editMode.person._id === booking._id\n                        ) &&\n                          !booking.deleted && (\n                            <React.Fragment>\n                              {invoiceLoaded && !invoice && (\n                                <Button\n                                  variant=\"outlined\"\n                                  color=\"primary\"\n                                  className={classes.PayButton}\n                                  onClick={() => OpenInvoiceDialog()}\n                                >\n                                  Issue Invoice\n                                </Button>\n                              )}\n\n                              {invoiceLoaded && invoice && (\n                                <React.Fragment>\n                                  <Button\n                                    variant=\"outlined\"\n                                    startIcon={<PrintIcon />}\n                                    color=\"primary\"\n                                    className={classes.printInvoiceButton}\n                                    onClick={() => downloadInvoice(invoice._id)}\n                                  >\n                                    Download Invoice\n                                  </Button>\n\n                                  <Button\n                                    variant=\"outlined\"\n                                    color=\"secondary\"\n                                    className={classes.editInvoiceButton}\n                                    onClick={() => OpenInvoiceDialog()}\n                                  >\n                                    Edit Invoice\n                                  </Button>\n\n                                  <Button\n                                    disabled={\n                                      !booking.email || booking.email.length < 3\n                                    }\n                                    startIcon={<SendIcon />}\n                                    type=\"button\"\n                                    variant=\"outlined\"\n                                    color=\"primary\"\n                                    onClick={() => {\n                                      sendInvoiceEmail(\n                                        invoice._id,\n                                        booking.email\n                                      );\n                                    }}\n                                    style={{\n                                      position: \"relative\",\n                                      marginLeft: \"10px\",\n                                      paddingRight: \"130px\",\n                                      fontSize: \"0.8rem\",\n                                    }}\n                                  >\n                                    Send Invoice By Email\n                                    {emailSentInvoice && (\n                                      <div\n                                        style={{\n                                          position: \"absolute\",\n                                          right: \"10px\",\n                                          top: \"5px\",\n                                          color: \"#05ad19\",\n                                        }}\n                                      >\n                                        Email Sent\n                                      </div>\n                                    )}\n                                  </Button>\n                                </React.Fragment>\n                              )}\n                            </React.Fragment>\n                          )}\n                      </li>\n\n                      <li className={classes.li} style={{ marginTop: \"20px\" }}>\n                        <span className={classes.infoTitle}>TOTAL CHARGES</span>{\" \"}\n                        <span\n                          style={{ paddingLeft: \"15px\" }}\n                          className={\n                            !booking.OTCCharges || booking.OTCCharges === 0\n                              ? classes.infoDataChargesHigher\n                              : classes.infoDataCharges\n                          }\n                        >{`£${booking.OTCCharges.toLocaleString(\n                          \"en-GB\"\n                        )}`}</span>\n                        {!(\n                          editMode.edit && editMode.person._id === booking._id\n                        ) &&\n                          !booking.paid &&\n                          !booking.deleted && (\n                            <Button\n                              variant=\"outlined\"\n                              color=\"secondary\"\n                              className={classes.PayButton}\n                              onClick={(event) => Pay(event, booking._id)}\n                            >\n                              Pay\n                            </Button>\n                          )}\n                        {!(\n                          editMode.edit && editMode.person._id === booking._id\n                        ) &&\n                          booking.paid && (\n                            <React.Fragment>\n                              <span className={classes.PayLabel}>\n                                {\" \"}\n                                <CheckIcon\n                                  className={classes.checkIconSmall}\n                                />{\" \"}\n                                Paid by {booking.paidBy}\n                                {booking.paidBy === \"corporate\"\n                                  ? ` \"${booking.corporate}\" `\n                                  : \"\"}\n                              </span>\n\n                              <Tooltip title=\"Undo Payment\">\n                                <IconButton\n                                  onClick={() => setOpenUndoPayDialog(true)}\n                                >\n                                  <UndoIcon style={{ color: \"red\" }} />\n                                </IconButton>\n                              </Tooltip>\n                            </React.Fragment>\n                          )}\n                      </li>\n                    </ul>\n                  </div>\n                </Grid>\n              </div>\n              <Backdrop\n                className={classes.backdrop}\n                open={saving || deleting || restoring}\n              >\n                <CircularProgress color=\"inherit\" />\n              </Backdrop>\n            </DialogContent>\n\n            <PayDialog\n              booking={selectedBooking}\n              open={openPayDialog}\n              price={invoice ? invoice.grandTotal : null}\n              handleClose={handleClosePayDialog}\n            />\n\n            <InvoiceDialog\n              booking={selectedBooking}\n              invoice={invoice}\n              open={openInvoiceDialog}\n              handleClose={handleCloseInvoiceDialog}\n            />\n          </Dialog>\n\n          <Dialog\n            open={openUndoPayDialog}\n            onClose={handleCloseUndoPayDialog}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n          >\n            <DialogTitle style={{ color: \"#999\" }} id=\"alert-dialog-title\">\n              {\"Undo Payment\"}\n            </DialogTitle>\n            <DialogContent>\n              <DialogContentText\n                style={{ color: \"#333\", fontWeight: \"400\" }}\n                id=\"alert-dialog-description\"\n              >\n                Are you sure you want to undo payment for this booking?\n              </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={handleCloseUndoPayDialog} color=\"default\">\n                Back\n              </Button>\n              <Button onClick={undoPaymentClicked} color=\"secondary\" autoFocus>\n                Yes, Undo Payment\n              </Button>\n            </DialogActions>\n          </Dialog>\n\n          <Dialog\n            open={openRefundDialog}\n            onClose={handleCloseRefundDialog}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n          >\n            <DialogTitle style={{ color: \"#999\" }} id=\"alert-dialog-title\">\n              {\"Refund Deposit\"}\n            </DialogTitle>\n            <DialogContent>\n              <DialogContentText\n                style={{ color: \"#333\", fontWeight: \"400\" }}\n                id=\"alert-dialog-description\"\n              >\n                Are you sure you want to refund deposit payment for this\n                booking?\n              </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={handleCloseRefundDialog} color=\"default\">\n                Back\n              </Button>\n              <Button\n                onClick={refundPaymentClicked}\n                color=\"secondary\"\n                autoFocus\n              >\n                Yes, Refund Payment\n              </Button>\n            </DialogActions>\n          </Dialog>\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n}\n","import React, {useEffect, useRef, useState} from 'react';\nimport { DataGrid } from '@material-ui/data-grid';\nimport BookService from './services/BookService';\nimport { Button, Checkbox, CircularProgress, Dialog, DialogContent, DialogTitle, Divider, FormControl, FormControlLabel, Grid, Icon, InputLabel, LinearProgress, Link, makeStyles, MenuItem, Paper, Select, SvgIcon, Switch, TextField, Tooltip } from '@material-ui/core';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport { IconButton } from '@material-ui/core';\nimport CheckIcon from '@material-ui/icons/Check';\nimport CloseIcon from '@material-ui/icons/Close';\nimport GlobalState from './../GlobalState';\nimport { getMenuIndex } from './../MenuList';\nimport {FormatDateFromString, FormatDateFromStringShortYear} from './DateFormatter';\n\nimport SearchIcon from '@material-ui/icons/Search';\nimport BookingDialog from './BookingDialog';\n\nimport NewReleasesIcon from '@material-ui/icons/NewReleases';\nimport HistoryIcon from '@material-ui/icons/History';\nimport TimelineIcon from '@material-ui/icons/Timeline';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport AutorenewIcon from '@material-ui/icons/Autorenew';\nimport LiveTvIcon from '@material-ui/icons/LiveTv';\nimport PlaylistAddCheckIcon from '@material-ui/icons/PlaylistAddCheck';\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport HourglassEmptyIcon from '@material-ui/icons/HourglassEmpty';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faFileExcel } from \"@fortawesome/free-solid-svg-icons\";\nimport Draggable from 'react-draggable';\n\nimport * as dateformat from 'dateformat';\n\nimport DateFnsUtils from '@date-io/date-fns';\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardTimePicker,\n  KeyboardDatePicker,\n} from '@material-ui/pickers';\n\nimport BusinessIcon from '@material-ui/icons/Business';\nimport CreditCardIcon from '@material-ui/icons/CreditCard';\nimport LocalAtmIcon from '@material-ui/icons/LocalAtm';\n\n\nimport ReactHTMLTableToExcel from 'react-html-table-to-excel';\nimport PriceCalculator from './PriceCalculator';\nimport { corporates } from './Corporates';\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    marginTop: theme.spacing(0),\n    marginBottom: theme.spacing(1),\n\n  },\n  \n  refreshButton:{\n    marginLeft: theme.spacing(2),\n  },\n\n  checkIcon:{\n    color: \"green\"\n  },\n\n  closeIcon:{\n    color: \"red\"\n  },\n\n  RefLink: {\n    cursor: \"pointer\"\n  },\n\n  BookedLabel:{\n    backgroundColor: \"#606060\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  PatientAttendedLabel:{\n    backgroundColor: \"#0066aa\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  SampleTakenLabel:{\n    backgroundColor: \"#0066cc\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  ReportSentLabel:{\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  ReportCertSentLabel:{\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  PositiveLabel:{\n    backgroundColor: \"red\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  HideNowRows: {\n    position: \"absolute\",\n    top: \"40%\",\n    left: \"40%\",\n    width: \"600px\",\n    height: \"300px\",\n    backgroundColor : \"#fafafa\",\n    color : \"#111\",\n    zIndex: \"1000\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyItems: \"center\"\n  },\n\n  ExportToExcelButton:\n  {\n    // marginBottom : \"20px\",\n    color : \"#2f942e\",\n    borderColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"#fafffa\",\n      borderColor: \"#2f942e\",\n    },\n    textDecoration : \"none !important\", \n   \n  },\n\n  ExportToExcelButtonInline:\n  {\n    // marginBottom : \"20px\",\n    color : \"#2f942e\",\n    borderColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"#fafffa\",\n      borderColor: \"#2f942e\",\n    },\n    textDecoration : \"none !important\", \n    cursor: \"pointer\",\n    padding: \"10px\"\n   \n  },\n\n  table: {\n    width: \"100%\",\n    border: \"1px solid #ddd\",\n    borderCollapse: \"collapse\",\n},\n\nth: {\n    border: \"1px solid #ddd\",\n    borderCollapse: \"collapse\",\n    verticalAlign: \"middle\",\n    fontcolor: \"#555\",\n    fontWeight: \"400\",\n    fontSize: \"15px\",\n    paddingTop: \"5px\",\n    paddingBottom: \"5px\",\n    width: \"14%\",\n    paddingLeft: \"5px\",\n},\n\ntd: {\n    border: \"1px solid #ddd\",\n    borderCollapse: \"collapse\",\n    verticalAlign: \"middle\",\n    paddingLeft: \"5px\",\n},\n\ntopSelect: {\n  margin: theme.spacing(1),\n  minWidth: 80,\n},\n\nnotifyIcon:{\n  width: \"16px\",\n  height: \"16px\",\n  borderRadius: \"50%\",\n  backgroundColor : \"rgb(220, 0, 78)\",\n  marginLeft: \"10px\"\n}\n\n}));\n\nconst getTableTitle = (str) =>{\n\n  if (str === 'today')\n  {\n    return `Today's Bookings`;\n  }else if (str === 'old')\n  {\n    return `Old Bookings`;\n  }else if (str === 'future')\n  {\n    return `Future Bookings`;\n  }else if (str === 'recent')\n  {\n    return `Recent Bookings`;\n  }else if (str === 'live')\n  {\n    return `Live Bookings`;\n  }else if (str === 'completed')\n  {\n    return `Completed Bookings`;\n  }else if (str === 'positive')\n  {\n    return `Positive Results`;\n  }else if (str === 'deleted')\n  {\n    return `Deleted Records`;\n  }else if (str === 'late')\n  {\n    return `40 Hours Late`;\n  }\n  \n  else\n  {\n    return `All Bookings`;\n  }\n\n}\n\nconst getTableIcon = (str) =>{\n\n  if (str === 'today')\n  {\n    return <NewReleasesIcon style={{fontSize:\"2.2rem\"}} />;\n  }else if (str === 'old')\n  {\n    return <HistoryIcon style={{fontSize:\"2.2rem\"}} />;\n  }else if (str === 'future')\n  {\n    return <TimelineIcon style={{fontSize:\"2.2rem\"}} />;\n  }else if (str === 'recent')\n  {\n    return <AutorenewIcon style={{fontSize:\"2.2rem\"}} />;\n  }else if (str === 'live')\n  {\n    return <LiveTvIcon style={{fontSize:\"2.2rem\"}} />;\n  }else if (str === 'completed')\n  {\n    return  <PlaylistAddCheckIcon style={{fontSize:\"2.2rem\"}} />;\n  }else if (str === 'positive')\n  {\n    return <AddCircleOutlineIcon style={{fontSize:\"2.2rem\"}} />\n  }else if (str === 'deleted')\n  {\n    return <DeleteIcon style={{fontSize:\"2.2rem\"}} />;\n  }else if (str === 'late')\n  {\n    return <HourglassEmptyIcon style={{fontSize:\"2.2rem\"}} />;\n  }\n  \n  else\n  {\n    return <DescriptionIcon style={{fontSize:\"2.2rem\"}} />;\n  }\n\n}\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'}>\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nexport default function BookingTable(props) {\n  \n  const classes = useStyles();\n\n  const [topCount, setTopCount] = React.useState(25)\n  const topCountChanged = (event) =>\n  {\n    setTopCount(event.target.value)\n    loadData(event.target.value)\n  }\n  \n\n  const [openDialogExcel, setOpenDialogExcel] = useState(false);\n  const handleCloseDialogExcel = () =>\n  {\n    setCorporate(corporates[0]);\n    setJustCorporate(false);\n    setOpenDialogExcel(false);\n  }\n\n\n  const [fromDate, setFromDate] = React.useState(new Date(new Date().getTime() - 7 * 24 * 60 * 60 * 1000 ));\n  const handleFromDateChange = (date) => {\n    setFromDate(date);\n    setFromDateStr(dateformat(date,'yyyy-mm-dd'));\n  };\n\n  const [untilDate, setUntilDate] = React.useState(new Date(new Date().getTime() - 1 * 24 * 60 * 60 * 1000 ));\n  const handleUntilDateChange = (date) => {\n    setUntilDate(date);\n    seUntilDateStr(dateformat(date,'yyyy-mm-dd'));\n  };\n\n  const [fromDateStr, setFromDateStr] = useState(dateformat(new Date(new Date().getTime() - 7 * 24 * 60 * 60 * 1000 ), 'yyyy-mm-dd'));\n  const [untilDateStr, seUntilDateStr] = useState(dateformat(new Date(new Date().getTime() - 1 * 24 * 60 * 60 * 1000 ), 'yyyy-mm-dd'));\n\n  const [justCorporate, setJustCorporate] = useState(false);\n\n  const[chkDate, setChkDate] = useState(true);\n  const[chkForename, setChkForename] = useState(true);\n  const[chkSurname, setChkSurname] = useState(true);\n  const[chkDOB, setChkDOB] = useState(true);\n  const[chkEmail, setChkEmail] = useState(true);\n  const[chkTel, setChkTel] = useState(true);\n  const[chkCertificate, setChkCertidicate] = useState(true);\n  const[chkAntiBodyTest, setChkAntiBodyTest] = useState(true);\n  const[chkextRef, setChkExtRef] = useState(true);\n  const[chkPrice, setChkPrice] = useState(true);\n\n  const justCorporateChanged = (event) =>\n  {\n    setJustCorporate(event.target.checked);\n  }\n  \n\n  const chkDateChanged = (event) =>\n  {\n    setChkDate(event.target.checked);\n  }\n\n  const chkForenameChanged = (event) =>\n  {\n    setChkForename(event.target.checked);\n  }\n\n  const chkSurnameChanged = (event) =>\n  {\n    setChkSurname(event.target.checked);\n  }\n\n  const chkDOBChanged = (event) =>\n  {\n    setChkDOB(event.target.checked);\n  }\n\n  const chkEmailChanged = (event) =>\n  {\n    setChkEmail(event.target.checked);\n  }\n\n  const chkTelChanged = (event) =>\n  {\n    setChkTel(event.target.checked);\n  }\n\n  const chkCertificateChanged = (event) =>\n  {\n    setChkCertidicate(event.target.checked);\n  }\n\n  const chkAntiBodyTestChanged = (event) =>\n  {\n    setChkAntiBodyTest(event.target.checked);\n  }\n\n  const chkextRefChanged = (event) =>\n  {\n    setChkExtRef(event.target.checked);\n  }\n\n  const chkPriceChanged = (event) =>\n  {\n    setChkPrice(event.target.checked);\n  }\n\n\n\n  var columns = [];\n\n  if (props.date === 'recent')\n  {\n    columns = [\n      // { field: 'id', headerName: '#', width: 70 },\n  \n      {field: '_id', headerName:' ', width: 70, renderCell: (params) =>{\n          return (\n\n           <React.Fragment>\n\n                <Button \n                        color=\"primary\"\n                        onClick = {event => openDetailsDialog(event, params.value)}\n                > \n            \n            <SearchIcon/> \n            \n            </Button>\n\n           </React.Fragment>\n\n          \n  \n          ); \n      \n        }\n      },\n\n      { field: 'paid', headerName: 'Paid', align: 'center' , width: 90, renderCell: (params) => { \n        if (!params.value)\n        {\n           return ( \n              <React.Fragment>                    \n                    <CloseIcon className={classes.closeIcon}/>                        \n              </React.Fragment>\n           );\n        }\n        else\n        {\n           if (params.getValue('paidBy') === 'credit card')\n           {\n             return ( <CreditCardIcon className={classes.checkIcon}/> );\n           }\n           else if (params.getValue('paidBy') === 'cash')\n           {\n             return ( <LocalAtmIcon className={classes.checkIcon}/> );\n           }\n           else if (params.getValue('paidBy') === 'corporate')\n           {\n             return ( <BusinessIcon className={classes.checkIcon}/> );\n           }\n           else\n           {\n             return '';  \n           }\n        }\n  }\n },\n\n\n      { field: 'timeStamp', headerName: 'TimeStamp', width: 200, valueFormatter: (params) => { \n        return formatTimeStamp(params.value);\n        }\n      },\n  \n      { field: 'bookingDate', headerName: 'B Date', width: 110, valueFormatter: (params) => { \n              return FormatDateFromString(params.value);\n          }\n       },\n      { field: 'bookingTimeNormalized', headerName: 'B Time', width: 105 , valueGetter: (params) => {\n        return params.getValue('bookingTime');\n      }},\n      { field: 'status', headerName: 'Status', width: 100, renderCell: (params) =>{\n          if (params.value === 'booked')\n          {\n            return (\n              <span className={classes.BookedLabel}>  BM </span>\n            );\n        \n          }else if (params.value === 'patient_attended')\n          {\n            return (\n              <span  className={classes.PatientAttendedLabel}> PA </span>\n            );\n          }\n          else{\n            return 'Unknown';\n          }\n        }\n      },\n      { field: 'bookingRef', headerName: 'Ref No.', width: 120 , renderCell: (params) =>{\n        return (\n          <Tooltip title=\"Go Find By Ref\" placement=\"right\">\n              <Link className={classes.RefLink}\n              //  onClick={\n              //   () => {\n              //     console.log(params.value);\n  \n              //     setState(state => ({...state, currentMenuIndex: getMenuIndex(`pcr` , `findByRef`)}));\n              //     setState(state => ({...state, ref : params.value}));\n              //     setState(state => ({...state, refError : false})); \n              //     setState(state => ({...state, foundRecords : []}));\n              //     setState(state => ({...state, findRecords : !state.findRecords}));\n              //   }\n              // }\n              \n              >\n                {params.value}\n              </Link>\n          </Tooltip>\n  \n        );\n      }},\n      { field: 'fullname', headerName: 'Fullname', width: 250 },\n      { field: 'email', headerName: 'Email', width: 200 },\n      { field: 'phone', headerName: 'Tel', width: 150 },\n      { field: 'notes', headerName: 'Notes', width: 500 },\n    \n    ];\n\n  }\n  else\n  {\n    columns = [\n      // { field: 'id', headerName: '#', width: 70 },\n  \n      {field: '_id', headerName:' ', width: 70, renderCell: (params) =>{\n          return (\n            <React.Fragment>\n\n                <Button \n                        color=\"primary\"\n                        onClick = {event => openDetailsDialog(event, params.value)}\n                > \n            \n            <SearchIcon/> \n            \n            </Button>\n\n           </React.Fragment>\n  \n          ); \n      \n        }\n      },\n\n      { field: 'paid', headerName: 'Paid', align: 'center' , width: 90, renderCell: (params) => { \n               if (!params.value)\n               {\n                  return ( \n                    <React.Fragment>\n                                <CloseIcon className={classes.closeIcon}/> \n                                {parseInt(params.getValue('deposit')) > 0 && props.date === 'deleted' && (\n                                      <span className={classes.notifyIcon}>&nbsp;</span>\n                                )}\n\n                               \n                    </React.Fragment>\n                     \n                        \n                  \n                  \n                  );\n               }\n               else\n               {\n                  if (params.getValue('paidBy') === 'credit card')\n                  {\n                    return ( <CreditCardIcon className={classes.checkIcon}/> );\n                  }\n                  else if (params.getValue('paidBy') === 'cash')\n                  {\n                    return ( <LocalAtmIcon className={classes.checkIcon}/> );\n                  }\n                  else if (params.getValue('paidBy') === 'corporate')\n                  {\n                    return ( <BusinessIcon className={classes.checkIcon}/> );\n                  }\n                  else\n                  {\n                    return '';  \n                  }\n               }\n         }\n        },\n        { field: 'bookingDate', headerName: 'B Date', width: 110, valueFormatter: (params) => { \n          return FormatDateFromString(params.value);\n      }\n   },\n  { field: 'bookingTimeNormalized', headerName: 'B Time', width: 105 , valueGetter: (params) => {\n    return params.getValue('bookingTime');\n  }},\n  { field: 'status', headerName: 'Status', width: 100, renderCell: (params) =>{\n      if (params.value === 'booked')\n      {\n        return (\n          <span className={classes.BookedLabel}>  BM </span>\n        );\n    \n      }else if (params.value === 'patient_attended')\n      {\n        return (\n          <span  className={classes.PatientAttendedLabel}> PA </span>\n        );\n      }\n      else{\n        return 'Unknown';\n      }\n    }\n  },\n  { field: 'bookingRef', headerName: 'Ref No.', width: 120 , renderCell: (params) =>{\n    return (\n      <Tooltip title=\"Go Find By Ref\" placement=\"right\">\n          <Link className={classes.RefLink}\n          //  onClick={\n          //   () => {\n          //     console.log(params.value);\n\n          //     setState(state => ({...state, currentMenuIndex: getMenuIndex(`pcr` , `findByRef`)}));\n          //     setState(state => ({...state, ref : params.value}));\n          //     setState(state => ({...state, refError : false})); \n          //     setState(state => ({...state, foundRecords : []}));\n          //     setState(state => ({...state, findRecords : !state.findRecords}));\n          //   }\n          // }\n          \n          >\n            {params.value}\n          </Link>\n      </Tooltip>\n\n    );\n  }},\n  { field: 'fullname', headerName: 'Fullname', width: 250 },\n  { field: 'email', headerName: 'Email', width: 200 },\n  { field: 'phone', headerName: 'Tel', width: 150 },\n  { field: 'notes', headerName: 'Notes', width: 500 },\n\n    \n    ];\n  \n\n  }\n\n\n\n  const [state, setState] = React.useContext(GlobalState);  \n\n  const [data, setData] = React.useState({bookings: [] , cachedBookings: [], isFetching : true});\n\n  const [selectedRow, setSelectedRow] = React.useState(null);\n\n  const [selectedBooking, setSelectedBooking] = React.useState(null);\n  const [seeDetailsDialogOpen, setSeeDetailsDialogOpen] = React.useState(false);\n\n  const [corporate, setCorporate] = useState(corporates[0]);\n  const corporateChanged = (event) =>\n  {\n    setCorporate(event.target.value);\n  }\n  \n\n  const [filter,setFilter] = React.useState('');\n\n\n  const lastPromise = useRef();\n\n  const formatTimeStamp = (timeStamp) =>\n  {\n    const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\n    const timeStampStr = dateformat(timeStamp, 'yyyy-mm-dd');\n    if (todayStr === timeStampStr)\n    {\n      return dateformat(timeStamp, \"'Today', h:MM:ss TT\");\n    }\n    else\n    {\n       return dateformat(timeStamp, \"mmm dS, h:MM:ss TT\");\n    }\n  }\n\n  const loadData = (top) =>\n  {\n    var api = BookService.getAllBookings;\n    if (props.date === 'today')\n    {\n      api = BookService.getTodayBookings;\n    }else if (props.date === 'old')\n    {\n      api = BookService.getOldBookings;\n    }else if (props.date === 'future')\n    {\n      api = BookService.getFutureBookings;\n    }else if (props.date === 'recent')\n    {\n      api = BookService.getRecentBookingsAll;\n    }\n    else if (props.date === 'deleted')\n    {\n      api = BookService.getDeletedBookings;\n    }\n     \n    setData({bookings: [], cachedBookings: [], isFetching: true});\n   \n    // console.log(props)\n\n    const currentPromise = api(top).then( (res) =>{\n      // console.log(res)\n      for (var i=0; i < res.data.length; i++)\n      {\n        res.data[i] = {...res.data[i], id : i + 1}\n      }  \n      setData({bookings: [...res.data], cachedBookings: [...res.data], isFetching: false});\n      // return res.data;\n    }).catch(err => {\n      console.error(err)\n    })\n\n    // lastPromise.current = currentPromise;\n\n    // currentPromise.then(\n    //   result => {\n    //     if (currentPromise === lastPromise.current) {\n    //       setData({bookings: [...result], cachedBookings: [...result], isFetching: false});\n    //       setPage(1);\n    //     }\n    //   },\n    //   e => {\n    //     if (currentPromise === lastPromise.current) {\n    //         console.error(e);\n    //         setData({bookings: data.bookings, cachedBookings: data.cachedBookings, isFetching: false});\n    //     }\n    //   });\n\n  }\n\n  useEffect( () => {\n            setTopCount(25)\n            loadData(25)\n        },\n        [props.date]);\n\n\n\n\n  useEffect( () => {\n\n        if (filter && filter.trim().length > 0)\n        {\n          var filteredData = data.cachedBookings.filter( (element) => \n\n             (element.fullname.toLowerCase().indexOf(filter.toLowerCase()) >= 0)\n               \n              \n          );\n  \n  \n          setData({bookings: [...filteredData], cachedBookings: data.cachedBookings, isFetching: false});\n        }else\n        {\n          setData({bookings: [...data.cachedBookings], cachedBookings: data.cachedBookings, isFetching: false});\n        }\n      },\n      [filter]);\n\n  \n      useEffect(() => {\n\n       loadData(topCount)\n    \n      }, [state.bookingDialogDataChanged]);    \n\n\n  const handleCloseSeeDetaisDialog = () =>\n  {\n    setSelectedBooking(null);\n    setSeeDetailsDialogOpen(false);\n  }    \n  \n  const openDetailsDialog = (event, id) =>\n  {\n    const booking = data.bookings.find(element => element._id === id);\n    setSelectedBooking(booking);\n    setSeeDetailsDialogOpen(true);\n\n  }\n\n  const refreshClicked = (event) =>{\n    setFilter('');\n    loadData(topCount)\n  }\n\n  const filterChanged = (event) =>{\n    setFilter(event.target.value);\n  }\n\n  const handleSelectionChanged = (newSelection) =>\n  {\n    if (newSelection.length > 0){\n      setSelectedRow(newSelection.rows[0]);\n    }\n    \n  }\n\n  const [page, setPage] = React.useState(1);\n\n  const handleExcelButtonClicked = (event) =>\n  {\n    setOpenDialogExcel(true);\n  }\n\n  const isTopSelectHidden = (date)=>\n  {\n    return date === 'live' || date === 'positive' || date === 'late' || date === 'today'\n  }\n\n\n  return (\n    <React.Fragment>\n      {data.isFetching && (\n        <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\n          <LinearProgress color=\"primary\" />\n        </div>\n      )}\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"space-between\"\n        alignItems=\"flex-end\"\n      >\n        <Grid item md={4}>\n          <div style={{ textAlign: \"left\", paddingLeft: \"10px\" }}>\n            <Grid\n              container\n              direction=\"row\"\n              justify=\"flex-start\"\n              alignItems=\"center\"\n            >\n              <Grid item>\n                <span style={{ paddingRight: \"15px\", color: \"#555\" }}>\n                  {\" \"}\n                  {getTableIcon(props.date)}{\" \"}\n                </span>\n              </Grid>\n              <Grid item>\n                <span\n                  style={{\n                    fontSize: \"1.4rem\",\n                    fontWeight: \"600\",\n                    color: \"#444\",\n                  }}\n                >\n                  {\" \"}\n                  {getTableTitle(props.date)}{\" \"}\n                </span>\n              </Grid>\n              <Grid item>\n                <Tooltip title=\"Refresh\" placement=\"right\">\n                  <IconButton\n                    color=\"primary\"\n                    className={classes.refreshButton}\n                    onClick={refreshClicked}\n                  >\n                    <RefreshIcon />\n                  </IconButton>\n                </Tooltip>\n              </Grid>\n            </Grid>\n          </div>\n        </Grid>\n\n        <Grid item md={3}>\n          {props.date === \"completed\" && state.showCreateExcel && (\n            <div style={{ paddingBottom: \"5px\" }}>\n              <Button\n                className={classes.ExportToExcelButton}\n                variant=\"outlined\"\n                color=\"default\"\n                onClick={handleExcelButtonClicked}\n                startIcon={\n                  <FontAwesomeIcon\n                    style={{ color: \"#009900\" }}\n                    icon={faFileExcel}\n                  />\n                }\n              >\n                export to excel\n              </Button>\n            </div>\n          )}\n        </Grid>\n\n        {data.isFetching && <div className={classes.HideNowRows}></div>}\n\n        <Grid item md={3}>\n          <TextField\n            variant=\"standard\"\n            value={filter}\n            onChange={filterChanged}\n            margin=\"normal\"\n            size=\"small\"\n            id=\"filter\"\n            label=\"Filter\"\n            name=\"filter\"\n            autoComplete=\"off\"\n          />\n        </Grid>\n\n        <Grid item hidden={isTopSelectHidden(props.date)}>\n          <FormControl className={classes.topSelect}>\n            <InputLabel id=\"top-select-label\">Limit</InputLabel>\n            <Select\n              labelId=\"top-select-label\"\n              id=\"top-simple-select\"\n              value={topCount}\n              onChange={topCountChanged}\n            >\n              <MenuItem value={25}>25</MenuItem>\n              <MenuItem value={50}>50</MenuItem>\n              <MenuItem value={100}>100</MenuItem>\n              <MenuItem value={500}>500</MenuItem>\n              <MenuItem value={1000}>1000</MenuItem>\n              <MenuItem value={10000}>ALL</MenuItem>\n            </Select>\n          </FormControl>\n\n          {/* <Button onClick={() => loadData(true)}> Show all records </Button> */}\n        </Grid>\n      </Grid>\n\n      <div style={{ height: 700, width: \"100%\" }}>\n        <DataGrid\n          rows={data.bookings}\n          columns={columns}\n          autoPageSize\n          page={page}\n          onPageChange={(params) => {\n            setPage(params.page);\n          }}\n          onSelectionChange={handleSelectionChanged}\n        />\n      </div>\n\n      <BookingDialog\n        booking={selectedBooking}\n        open={seeDetailsDialogOpen}\n        onClose={handleCloseSeeDetaisDialog}\n      />\n\n      {data.bookings && data.bookings.length > 0 && (\n        <Dialog\n          maxWidth=\"lg\"\n          open={openDialogExcel}\n          onClose={handleCloseDialogExcel}\n          PaperComponent={PaperComponent}\n          aria-labelledby=\"form-dialog-title\"\n        >\n          <DialogTitle id=\"draggable-dialog-title\">\n            <Grid\n              container\n              spacing={2}\n              direction=\"row\"\n              justify=\"center\"\n              alignItems=\"center\"\n            >\n              <Grid item>\n                <FontAwesomeIcon\n                  style={{ color: \"#2f942e\", fontSize: \"2rem\" }}\n                  icon={faFileExcel}\n                />\n              </Grid>\n\n              <Grid item>\n                <div\n                  style={{\n                    color: \"#2f942e\",\n                    paddingBottom: \"5px\",\n                    fontWeight: \"800\",\n                  }}\n                >\n                  {\" \"}\n                  Export to EXCEL{\" \"}\n                </div>\n              </Grid>\n            </Grid>\n\n            <Divider />\n          </DialogTitle>\n          <DialogContent>\n            <div\n              style={{\n                minHeight: \"600px\",\n                maxHeight: \"600px\",\n                minWidth: \"1200px\",\n                maxWidth: \"1200px\",\n              }}\n            >\n              <div>\n                <Grid row container justify=\"center\" spacing={3}>\n                  <Grid item>\n                    <FormControlLabel\n                      control={\n                        <Switch\n                          checked={justCorporate}\n                          onChange={justCorporateChanged}\n                          name=\"justCorporate\"\n                        />\n                      }\n                      label=\"Just Corporate Records\"\n                    />\n                  </Grid>\n\n                  {justCorporate && (\n                    <Grid item>\n                      <FormControl\n                        style={{ marginTop: \"0px\" }}\n                        className={classes.formControl}\n                      >\n                        <Select\n                          labelId=\"select-corporate\"\n                          id=\"select-corporate-id\"\n                          value={corporate}\n                          onChange={corporateChanged}\n                        >\n                          {corporates.map((element) => (\n                            <MenuItem value={element}>{`${element}`}</MenuItem>\n                          ))}\n                        </Select>\n                      </FormControl>\n                    </Grid>\n                  )}\n                </Grid>\n\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                  <Grid row container justify=\"center\" spacing={3}>\n                    <Grid item>\n                      <KeyboardDatePicker\n                        disableToolbar\n                        variant=\"inline\"\n                        format=\"dd/MM/yyyy\"\n                        margin=\"normal\"\n                        id=\"date-picker-from\"\n                        label=\"From\"\n                        value={fromDate}\n                        onChange={handleFromDateChange}\n                        KeyboardButtonProps={{\n                          \"aria-label\": \"change date\",\n                        }}\n                      />\n                    </Grid>\n\n                    <Grid item>\n                      <KeyboardDatePicker\n                        disableToolbar\n                        variant=\"inline\"\n                        format=\"dd/MM/yyyy\"\n                        margin=\"normal\"\n                        id=\"date-picker-until\"\n                        label=\"Until\"\n                        value={untilDate}\n                        onChange={handleUntilDateChange}\n                        KeyboardButtonProps={{\n                          \"aria-label\": \"change date\",\n                        }}\n                      />\n                    </Grid>\n\n                    <Grid item>\n                      <div style={{ paddingTop: \"30px\", marginLeft: \"20px\" }}>\n                        <ReactHTMLTableToExcel\n                          id=\"test-table-xls-button\"\n                          className={classes.ExportToExcelButtonInline}\n                          table=\"table-to-xls\"\n                          filename={`PCR.Report.${fromDateStr}.${untilDateStr}`}\n                          sheet=\"PCR-Report\"\n                          buttonText=\"Download as XLS\"\n                        />\n                      </div>\n                    </Grid>\n                  </Grid>\n                </MuiPickersUtilsProvider>\n              </div>\n\n              <div>\n                <Grid container spacing={3}>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkDate}\n                          onChange={chkDateChanged}\n                          name=\"chkDate\"\n                        />\n                      }\n                      label=\"Date\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkForename}\n                          onChange={chkForenameChanged}\n                          name=\"chkForename\"\n                        />\n                      }\n                      label=\"Forename\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkSurname}\n                          onChange={chkSurnameChanged}\n                          name=\"chkSurname\"\n                        />\n                      }\n                      label=\"Surname\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkDOB}\n                          onChange={chkDOBChanged}\n                          name=\"chkDOB\"\n                        />\n                      }\n                      label=\"D.O.B\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkEmail}\n                          onChange={chkEmailChanged}\n                          name=\"chkEmail\"\n                        />\n                      }\n                      label=\"Email\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkTel}\n                          onChange={chkTelChanged}\n                          name=\"chkTel\"\n                        />\n                      }\n                      label=\"Tel\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkCertificate}\n                          onChange={chkCertificateChanged}\n                          name=\"chkCertificate\"\n                        />\n                      }\n                      label=\"Certificate\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkAntiBodyTest}\n                          onChange={chkAntiBodyTestChanged}\n                          name=\"chkAntiBodyTest\"\n                        />\n                      }\n                      label=\"AntiBodyTest\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkextRef}\n                          onChange={chkextRefChanged}\n                          name=\"chkextRef\"\n                        />\n                      }\n                      label=\"Lab No.\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkPrice}\n                          onChange={chkPriceChanged}\n                          name=\"chkPrice\"\n                        />\n                      }\n                      label=\"Price\"\n                    />\n                  </Grid>\n                </Grid>\n              </div>\n\n              <div style={{ width: \"100%\", paddingTop: \"20px\" }}>\n                <table className={classes.table} id=\"table-to-xls\">\n                  <tr>\n                    {chkDate && <th className={classes.th}>Date</th>}\n                    {chkForename && <th className={classes.th}>Forename</th>}\n                    {chkSurname && <th className={classes.th}>Surename</th>}\n                    {chkDOB && <th className={classes.th}>D.O.B</th>}\n                    {chkEmail && <th className={classes.th}>Email</th>}\n                    {chkTel && <th className={classes.th}>Tel</th>}\n                    {chkCertificate && (\n                      <th className={classes.th}>Certificate</th>\n                    )}\n                    {chkAntiBodyTest && (\n                      <th className={classes.th}>AntiBodyTest</th>\n                    )}\n                    {chkextRef && <th className={classes.th}>Lab No.</th>}\n                    {chkPrice && <th className={classes.th}>Price (£) </th>}\n                  </tr>\n\n                  {data.bookings\n                    .filter((booking) => {\n                      if (!justCorporate) {\n                        return (\n                          booking.bookingDate >= fromDateStr &&\n                          booking.bookingDate <= untilDateStr\n                        );\n                      } else {\n                        return (\n                          booking.bookingDate >= fromDateStr &&\n                          booking.bookingDate <= untilDateStr &&\n                          booking.paid &&\n                          booking.paidBy === \"corporate\" &&\n                          booking.corporate === corporate\n                        );\n                      }\n                    })\n\n                    .map((booking) => (\n                      <tr>\n                        {chkDate && (\n                          <td className={classes.td}>\n                            {FormatDateFromString(booking.bookingDate)}\n                          </td>\n                        )}\n                        {chkForename && (\n                          <td className={classes.td}>\n                            {booking.forenameCapital}\n                          </td>\n                        )}\n                        {chkSurname && (\n                          <td className={classes.td}>\n                            {booking.surnameCapital}\n                          </td>\n                        )}\n                        {chkDOB && (\n                          <th className={classes.th}>\n                            {/* {FormatDateFromString(booking.birthDate)} */}\n                          </th>\n                        )}\n                        {chkEmail && (\n                          <td className={classes.td}>{booking.email}</td>\n                        )}\n                        {chkTel && (\n                          <td className={classes.td}>{booking.phone}</td>\n                        )}\n                        {chkCertificate && (\n                          <td className={classes.td}>\n                            {booking.certificate ? \"YES\" : \"NO\"}\n                          </td>\n                        )}\n                        {chkAntiBodyTest && (\n                          <td className={classes.td}>\n                            {booking.antiBodyTest ? \"YES\" : \"NO\"}\n                          </td>\n                        )}\n                        {chkextRef && (\n                          <td className={classes.td}>{booking.extRef}</td>\n                        )}\n                        {chkPrice && (\n                          <td className={classes.td}>\n                            {PriceCalculator.calculatePrice(booking)}\n                          </td>\n                        )}\n                      </tr>\n                    ))}\n                </table>\n              </div>\n            </div>\n          </DialogContent>\n        </Dialog>\n      )}\n    </React.Fragment>\n  );\n} ","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\n\nexport default function Title(props) {\n  return (\n    <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n      {props.children}\n    </Typography>\n  );\n}\n\nTitle.propTypes = {\n  children: PropTypes.node,\n};","import React, { useEffect } from 'react';\nimport { useTheme } from '@material-ui/core/styles';\nimport { LineChart, Line, XAxis, YAxis, Label, ResponsiveContainer } from 'recharts';\nimport Title from './Title';\nimport dateformat from 'dateformat';\nimport BookService from './services/BookService';\nimport { LinearProgress } from '@material-ui/core';\n\n// Generate Sales Data\nfunction createData(time, amount) {\n  return { time, amount };\n}\n\n\nconst emptyData = [\n  createData('09:00', 0),\n  createData('10:00', 0),\n  createData('11:00', 0),\n  createData('12:00', 0),\n  createData('13:00', 0),\n  createData('14:00', 0),\n  createData('15:00', 0),\n  createData('16:00', 0),\n  createData('17:00', 0),\n  createData('18:00', undefined),\n\n];\n\nconst getCount = (data, str) =>\n{\n  if (!data)\n    return 0;\n\n  var count = 0;\n  for (var i=0; i < data.length; i++)\n  {\n    if (data[i]._id.substr(0,2) === str)\n    {\n      count += data[i].count;\n    }\n  }\n  return count;\n}\n\nexport default function Chart() {\n  const theme = useTheme();\n\n  const [data, setData] = React.useState(emptyData);\n  const [loading, setLoading] = React.useState(false)\n\n  useEffect(() =>\n  {\n    const fetchData = async () =>\n    {\n      const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\n      var result = [];\n      try\n      {\n          setLoading(true)\n          const res = await BookService.getBookingsStatsByDateStr(todayStr);\n          setLoading(false)\n          const data = res.data.result;\n          result.push(createData('09:00', getCount(data,'09')));\n          result.push(createData('10:00', getCount(data,'10')));\n          result.push(createData('11:00', getCount(data,'11')));\n          result.push(createData('12:00', getCount(data,'12')));\n          result.push(createData('13:00', getCount(data,'13')));\n          result.push(createData('14:00', getCount(data,'14')));\n          result.push(createData('15:00', getCount(data,'15')));\n          result.push(createData('16:00', getCount(data,'16')));\n          result.push(createData('17:00', getCount(data,'17')));\n          result.push(createData('18:00', undefined));\n \n           setData(result);\n      }\n      catch(err){\n        setLoading(false)\n        console.error(err);\n      }\n\n    }\n  \n   fetchData();\n\n  }, [] );\n\n  return (\n    <React.Fragment>\n       {loading && (\n        <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\n          <LinearProgress color=\"primary\" />\n        </div>\n      )}\n      <Title>Today</Title>\n      <ResponsiveContainer>\n        <LineChart\n          data={data}\n          margin={{\n            top: 16,\n            right: 16,\n            bottom: 0,\n            left: 24,\n          }}\n        >\n          <XAxis dataKey=\"time\" stroke={theme.palette.text.secondary} />\n          <YAxis stroke={theme.palette.text.secondary}>\n            <Label\n              angle={270}\n              position=\"left\"\n              style={{ textAnchor: 'middle', fill: theme.palette.text.primary }}\n            >\n              Online Bookings\n            </Label>\n          </YAxis>\n          <Line type=\"monotone\" dataKey=\"amount\" stroke={theme.palette.primary.main} dot={false} />\n        </LineChart>\n      </ResponsiveContainer>\n    </React.Fragment>\n  );\n}","import React, { useEffect } from \"react\";\nimport Link from \"@material-ui/core/Link\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Title from \"./Title\";\nimport { Grid, LinearProgress, Tooltip } from \"@material-ui/core\";\nimport * as dateformat from \"dateformat\";\nimport BookService from \"./services/BookService\";\nimport BookingDialog from \"./BookingDialog\";\n\nconst useStyles = makeStyles({\n  depositContext: {\n    flex: 1,\n  },\n\n  bookingBox: {\n    display: \"flex\",\n    margin: \"5px\",\n    padding: \"5px\",\n    maxWidth: \"90px\",\n    minHeight: \"30px\",\n    border: \"1px solid #eee\",\n    fontSize: \"12px\",\n    fontWeight: \"500\",\n    cursor: \"pointer\",\n    backgroundColor: \"#ebedf7\",\n    color: \"#3f51b5\",\n    boxShadow: \"2px 4px #fafafa\",\n    borderRadius: \"5px\",\n    textAlign: \"center\",\n    alignItems: \"center\",\n    justifyItems: \"center\",\n    align: \"center\",\n\n    \"&:hover\": {\n      background: \"#3f51b5\",\n      color: \"#ebedf7\",\n    },\n  },\n});\n\nconst isWeekend = (date) =>\n{\n    return (date.getDay() === 0 || date.getDay() === 6) /// Weekend\n}\n\nconst getCurrentTimeSlot = (now) =>\n{\n    var min = now.getMinutes();\n    var hour = now.getHours();\n    var pm = (hour >= 12);\n    if (hour > 12)\n    {\n      hour = hour - 12;\n    }\n\n    if (min >= 0 && min < 15)\n    {\n      min = 0;\n    }else if (min >= 15 && min < 30)\n    {\n      min = 15;\n    }else if (min >= 30 && min < 45)\n    {\n      min = 30;\n    }else if (min >= 45)\n    {\n      min = 45;\n    }\n\n    const minStr = min < 10 ? `0${min}` : `${min}`;\n    const hourStr = hour < 10 ? `0${hour}` : `${hour}`;\n    const pmStr = pm ? 'PM' : 'AM';\n\n    const timeStr = `${hourStr}:${minStr} ${pmStr}`;\n\n    if (isWeekend(now))\n    {\n      if (now.getHours() < 10 || now.getHours() >= 14)\n      {\n        return null;\n      }\n      else\n      {\n        return timeStr;\n      }\n    }\n    else\n    {\n      if (now.getHours() < 9 || now.getHours() >= 18)\n      {\n        return null;\n      }\n      else\n      {\n        return timeStr;\n      }\n\n    }\n}\n\nconst getCurrentTimeSlotLabel = (timeStr) =>\n{\n  if (!timeStr)\n  {\n    return 'Closed';\n  }\n\n  var hour = parseInt(timeStr.substr(0,2));\n  var minute = parseInt(timeStr.substr(3,2)); \n  var pm = timeStr.indexOf('PM') > 0;\n  if (minute !== 45)\n  {\n    minute += 15;\n  }\n  else{\n    minute = 0;\n    hour += 1;\n    if (hour >= 12)\n    {\n      pm = true;\n    }\n    if (hour > 12)\n    {\n      hour = hour - 12;\n    }\n  }\n\n  const minStr = minute < 10 ? `0${minute}` : `${minute}`;\n  const hourStr = hour < 10 ? `0${hour}` : `${hour}`;\n  const pmStr = pm ? 'PM' : 'AM';\n\n  const endTimeStr = `${hourStr}:${minStr} ${pmStr}`;\n\n  return `${timeStr} - ${endTimeStr}`;\n\n}\n\nexport default function CurrentVisits() {\n  const classes = useStyles();\n\n  const [current, setCurrent] = React.useState(new Date());\n  const [bookings, setBookings] = React.useState([]);\n\n  const [selectedBooking, setSelectedBooking] = React.useState(null);\n  const [openDialog, setOpenDialog] = React.useState(false);\n\n  const [loading, setLoading] = React.useState(false);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setCurrent(new Date());\n    }, 30000);\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, []);\n\n  useEffect(() => {\n    const currentTimeSlot = getCurrentTimeSlot(current);\n    if (!currentTimeSlot) return;\n    const todayStr = dateformat(current, \"yyyy-mm-dd\");\n    setLoading(true);\n    BookService.getBookingsByDateStrandTime(todayStr, currentTimeSlot)\n      .then((res) => {\n        setLoading(false);\n        if (res.data.status === \"OK\") {\n          setBookings([...res.data.bookings]);\n        }\n      })\n      .catch((err) => {\n        setLoading(false);\n        console.log(err);\n      });\n  }, [current]);\n\n  const getBookingsBox = (_bookings) => {\n    if (_bookings && _bookings.length > 0) {\n      return (\n        <div className={classes.root}>\n          <Grid\n            container\n            justify=\"flex-start\"\n            alignItems=\"flex-start\"\n            spacing={0}\n          >\n            {_bookings.map((booking) => (\n              <Grid item>\n                <div\n                  className={classes.bookingBox}\n                  onClick={(event) => bookingCliked(event, booking)}\n                >\n                  <span style={{ textAlign: \"center\" }}>\n                    {\" \"}\n                    {`${booking.surnameCapital}`.substring(0, 10)}{\" \"}\n                  </span>\n                </div>\n              </Grid>\n            ))}\n          </Grid>\n        </div>\n      );\n    }\n  };\n\n  const bookingCliked = (event, booking) => {\n    setSelectedBooking(booking);\n    setOpenDialog(true);\n  };\n\n  const handleCloseDialog = () => {\n    setOpenDialog(false);\n  };\n\n  return (\n    <React.Fragment>\n      {loading && (\n        <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\n          <LinearProgress color=\"primary\" />\n        </div>\n      )}\n\n      <Title>Current Visits</Title>\n      <Typography component=\"p\" variant=\"h6\">\n        {getCurrentTimeSlotLabel(getCurrentTimeSlot(current))}\n      </Typography>\n      <Typography color=\"textSecondary\" className={classes.depositContext}>\n        on {dateformat(current, \"dd mmmm, yyyy\")}\n      </Typography>\n\n      {getBookingsBox(bookings)}\n\n      <BookingDialog\n        booking={selectedBooking}\n        open={openDialog}\n        onClose={handleCloseDialog}\n      />\n    </React.Fragment>\n  );\n}\n","import React, { useEffect } from 'react';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Title from './Title';\nimport BookService from './services/BookService';\nimport * as dateformat from 'dateformat';\nimport GlobalState from './../GlobalState';\nimport { getMenuIndex } from './../MenuList';\nimport {FormatDateFromString, FormatDateFromStringShortYear} from './DateFormatter';\nimport { LinearProgress } from '@material-ui/core';\n\n\nconst useStyles = makeStyles((theme) => ({\n  seeMore: {\n    marginTop: theme.spacing(3),\n  },\n}));\n\nexport default function BookingView() {\n  const classes = useStyles();\n  const [state, setState] = React.useContext(GlobalState);  \n\n  const [data, setData] = React.useState({bookings: [] , isFetching : false});\n\n  const [refresh, setRefresh] = React.useState(false);\n\n  const [loading, setLoading] = React.useState(false)\n\n  const seeMoreRecords = (event) => {\n    event.preventDefault();\n    setState(state=>({...state, currentMenuIndex:getMenuIndex('gynae',`recentBookings`)}));\n  }\n\n  const loadData = () => \n  {\n    setData({bookings: data.bookings, isFetching: true});\n    setLoading(true)\n    BookService.getRecentBookings().then( (res) =>{\n      setLoading(false)\n        setData({bookings: res.data, isFetching: false});\n\n    }).catch( (err) => {\n      setLoading(false)\n        console.log(err);\n        setData({bookings: data.bookings, isFetching: false});\n    });\n  }\n\n\n  useEffect( () => {\n          loadData();\n        },\n        [refresh]);   \n\n\n   useEffect( () => {\n     loadData();\n     const interval = setInterval(() => {\n       setRefresh(refresh => !refresh);\n     }, 30000);\n\n     return () =>\n     {\n       clearInterval(interval)\n     }\n     \n   }, []) ;    \n\n   const formatTimeStamp = (timeStamp) =>\n   {\n     const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\n     const timeStampStr = dateformat(timeStamp, 'yyyy-mm-dd');\n     if (todayStr === timeStampStr)\n     {\n       return dateformat(timeStamp, \"'Today', h:MM:ss TT\");\n     }\n     else\n     {\n        return dateformat(timeStamp, \"mmm dS, h:MM:ss TT\");\n     }\n   }\n\n  return (\n    <React.Fragment>\n       {loading && (\n        <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\n          <LinearProgress color=\"primary\" />\n        </div>\n      )}\n      <Title>Recent Bookings</Title>\n      <Table size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell>TimeStamp</TableCell>        \n            <TableCell>Fullname</TableCell>\n            <TableCell>Email</TableCell>\n            <TableCell>Tel</TableCell>\n            <TableCell>Booked Date</TableCell>\n            <TableCell>Booked Time</TableCell> \n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {data.bookings.map((row) => (\n            <TableRow key={row._id}>\n              <TableCell>{formatTimeStamp(row.timeStamp)}</TableCell>\n              <TableCell>{row.fullname}</TableCell>\n              <TableCell>{row.email}</TableCell>\n              <TableCell>{row.phone}</TableCell>\n              <TableCell>{FormatDateFromString(row.bookingDate)}</TableCell>\n              <TableCell>{row.bookingTime}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n      <div className={classes.seeMore}>\n        <Link color=\"primary\" href=\"#\" onClick={seeMoreRecords}>\n          See more records\n        </Link>\n      </div>\n    </React.Fragment>\n  );\n}","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Chart from './Chart';\nimport CurrentVisits from './CurrentVisits';\n\n\n\nimport { Tooltip } from '@material-ui/core';\nimport GlobalState from './../GlobalState';\nimport BookingView from './BookingView';\n\nconst useStyles = makeStyles((theme) => ({\n \n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 240,\n  },\n}));\n\nexport default function DashboardPreview() {\n  const classes = useStyles();\n  const [state, setState] = React.useContext(GlobalState);\n\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n\n  return (\n        <React.Fragment>\n\n<           Grid container spacing={3}>\n                    {/* Chart */}\n                    <Grid item xs={12} md={4} lg={6}>\n                    <Paper className={fixedHeightPaper}>\n                        <Chart />\n                    </Paper>\n                    </Grid>\n                    {/* Current Visits */}\n                    <Grid item xs={12} md={4} lg={6}>\n                    <Paper className={fixedHeightPaper}>\n                        <CurrentVisits />\n                    </Paper>\n                    </Grid>\n                    {/* Recent Bookings */}\n                    <Grid item xs={12}>\n                    <Paper className={classes.paper}>\n                        <BookingView/>\n                    </Paper>\n                    </Grid>\n          </Grid>\n        </React.Fragment>\n  );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport GlobalState from './../GlobalState';\nimport Grid from '@material-ui/core/Grid';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { Button, Checkbox, FormControlLabel, Link, TextField, Tooltip } from '@material-ui/core';\nimport PDFService from './services/PDFService';\n\nimport {calculatePrice} from './PriceCalculator';\n\n\nimport bookingService from './services/BookService';\nimport CheckIcon from '@material-ui/icons/Check';\nimport CloseIcon from '@material-ui/icons/Close';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nimport {FormatDateFromString, RevertFormatDateFromString} from './DateFormatter';\n\nimport PrintIcon from '@material-ui/icons/Print';\n\n\nconst useStyles = makeStyles((theme) => ({\n  box: {\n    backgroundColor : \"#373737\",\n    color: \"#fff\",\n    padding : \"1px\",\n    borderRadius : \"4px\",\n    textAlign: \"justify\",\n    paddingRight: \"40px\"\n  },\n\n  boxRed: {\n    backgroundColor : \"#dc2626\",\n    color: \"#fff\",\n    padding : \"1px\",\n    borderRadius : \"4px\",\n    textAlign: \"justify\",\n    paddingRight: \"40px\"\n  },\n\n  boxInfo: {\n    textAlign: \"justify\",\n    backgroundColor : \"#fafafa\",\n    color: \"#333\",\n    padding : \"1px\",\n    borderRadius : \"4px\",\n    paddingRight: \"40px\",\n    border: \"1px solid #eee\",\n  },\n\n  ul: {\n     listStyle: \"none\",\n     padding: \"0\",\n     margin: \"0\"\n  },\n\n  li: {\n    marginBottom : \"15px\"\n  },\n\n\n  icon: {\n    marginRight : \"8px\"\n  },\n\n  root: {\n    width: '100%',\n  },\n\n  lineThrough:{\n    textDecoration : \"line-through\",\n  },\n\n\n\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    flexBasis: '33.33%',\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n  },\n  secondaryHeading: {\n    fontSize: theme.typography.pxToRem(15),\n  },\n\n  infoDetails:{\n    textAlign: \"left\",\n  },\n\n  infoTitle:{\n    fontWeight: \"800\",\n    marginRight: \"10px\"\n  },\n\n  infoData:{\n    fontWeight: \"400\",\n  },\n\n  title:\n  {\n    // textAlign : \"center\",\n    // fontWeight : \"500\",\n    // margin: \"10px\",\n    // backgroundColor : \"#eee\",\n    // padding : \"10px\",\n    // borderRadius : \"4px\"\n    textAlign: \"center\",\n    fontWeight : \"600\",\n    marginLeft: \"10px\",\n    marginBottom: \"5px\"\n\n  },\n\n  Accordion:{\n    backgroundColor : \"#f5f5f5\",\n    color: \"#222\"\n  },\n\n  AccordionDeleted:{\n    backgroundColor : \"#aaa\",\n    color: \"#555\"\n  },\n\n  DownloadForm:{\n      marginTop: \"10px\",\n      marginBottom : \"10px\"\n  },\n\n  infoDataCharges:{\n    fontSize : \"18px\",\n    color: \"green\",\n    fontWeight : \"600\"\n  },\n\n  infoDataChargesHigher:{\n    fontSize : \"18px\",\n    color: \"red\",\n    fontWeight : \"600\"\n  },\n  BookedLabel:{\n    color: \"#606060\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#606060\"\n  },\n\n  PatientAttendedLabel:{\n    color: \"#0066aa\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#0066aa\"\n  },\n\n  SampleTakenLabel:{\n    color: \"#0066cc\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#0066cc\"\n  },\n\n  ReportSentLabel:{\n    color: \"#009900\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#009900\"\n  },\n\n  ReportCertSentLabel:{\n    color: \"#009900\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#009900\"\n  },\n\n  PositiveLabel:{\n    color: \"red\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"red\"\n  },\n\n\n  EditButton:\n  {\n    marginBottom : \"20px\",\n    backgroundColor : \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\"\n    },\n    textDecoration : \"none !important\",\n    padding: \"10px\",\n    width: \"400px\"   \n  },\n\n  RestoreButton:\n  {\n    marginBottom : \"20px\",\n    backgroundColor : \"#fafafa\",\n    color: \"#555\",\n    \"&:hover\": {\n      background: \"#f1f1f1\",\n      color: \"#111\"\n    },\n    textDecoration : \"none !important\",\n    padding: \"10px\" ,\n    width: \"400px\"    \n  },\n\n\n  DeleteButton:\n  {\n    marginBottom : \"20px\",\n    backgroundColor : \"#d90015\",\n    \"&:hover\": {\n      background: \"#b80012\",\n      color: \"#fff\"\n    },\n\n    padding: \"10px\",\n    width: \"400px\"   \n    \n  },\n\n  SaveButton:\n  {\n    marginBottom : \"10px\",\n    padding: \"10px\",\n\n    backgroundColor : \"#d1175e\",\n    \"&:hover\": {\n      background: \"#bd0d50\",\n      color: \"#fff\",\n      \n    },\n    width: \"400px\"   \n\n  },\n\n  CancelButton:\n  {\n    marginBottom : \"20px\",\n    // padding: \"10px\"\n  },\n\n  TextBox: {\n    \n    padding : \"0px\"\n\n  },\n\n  checkIcon:{\n    color: \"green\",   \n  },\n\n  closeIcon:{\n    color: \"red\"\n  },\n\n  centeredLabel : {\n    display: \"flex\",\n    alignItems: \"center\"\n  }\n\n\n\n\n\n\n}));\n\n\n\n\nexport default function PersonsBox() {\n    const classes = useStyles();\n\n    const [state, setState] = React.useContext(GlobalState);\n\n    const [expanded, setExpanded] = React.useState('panel0');\n\n    const [editMode, setEditMode] = React.useState({edit : false, person : null});\n    const [deleteMode, setDeleteMode] = React.useState({delete : false, person : null});\n    const [restoreMode, setRestoreMode] = React.useState({restore : false, person : null});\n\n    const [saving, setSaving] =  React.useState(false);\n    const [deleting, setDeleting] =  React.useState(false);\n    const [restoring, setRestoring] =  React.useState(false);\n\n    const [validationError, setValidationError] = React.useState({});\n\n\n    const [bookingDate, setBookingDate] = React.useState('');\n    const [bookingTime, setBookingTime] = React.useState('');\n\n    const [fullname, setFullname] = React.useState('');\n    const [email, setEmail] = React.useState('');\n    const [tel, setTel] = React.useState('');\n    const [service, setService] = React.useState('');\n    const [notes, setNotes] = React.useState('');\n\n\n    const bookingDateChanged = (event) =>\n    {\n      setBookingDate(event.target.value);\n      setValidationError({...validationError, bookingDateError : false});\n    }\n\n    const bookingTimeChanged = (event) =>\n    {\n      setBookingTime(event.target.value);\n      setValidationError({...validationError, bookingTimeError : false});\n    }\n\n    const fullnameChanged = (event) =>\n    {\n      setFullname(event.target.value);\n    }\n\n    const emailChanged = (event) =>\n    {\n      setEmail(event.target.value);\n    }\n\n    const telChanged = (event) =>\n    {\n      setTel(event.target.value);\n    }\n\n    const serviceChanged = (event) =>\n    {\n      setService(event.target.value);\n    }\n\n    const notesChanged = (event) =>\n    {\n      setNotes(event.target.value);\n    }\n\n\n    const handleChange = (panel) => (event, isExpanded) => {\n      setExpanded(isExpanded ? panel : false);\n    };\n\n    const getStatusLabel = (status) => {\n      if (status === 'booked')\n      {\n        return (\n          <span className={classes.BookedLabel}> Booking Made </span>\n        );\n    \n      }else if (status === 'patient_attended')\n      {\n        return (\n          <span  className={classes.PatientAttendedLabel}> Patient Attended </span>\n        );\n    \n      }\n      else{\n        return 'Unknown';\n      }\n    }\n\n\n   const handleEditModeChanged = (edit, person) => {\n\n       if (edit)\n       {\n         setFullname(person.fullname);\n         setBookingDate(FormatDateFromString(person.bookingDate));\n         setBookingTime(person.bookingTime);\n         setEmail(person.email);\n         setTel(person.phone);\n         setService(person.service)\n         if (person.notes)\n         {\n          setNotes(person.notes);\n         }\n        \n         setEditMode({edit: edit, person: person});\n\n       }\n       else if (!edit && !person)\n       {\n         setEditMode({edit: edit, person: person});\n       }\n       else if (!edit && person)\n       {\n          const booking = {};\n          const bookingId = person._id;\n          booking.email = email;\n          booking.phone = tel;\n          booking.fullname = fullname;\n          booking.notes = notes;\n          booking.service = service;\n          booking.bookingDate = RevertFormatDateFromString(bookingDate);\n          booking.bookingTime = bookingTime;\n          booking.bookingRef = person.bookingRef;\n\n          if  (validateBooking(booking))\n          {\n            updateBooking({bookingId: bookingId, person: booking});\n          }\n       }\n   }\n\n   const validateDate = (str) =>\n   {\n     var error = false;\n     if (!str || str.length !== 10)\n     {\n       error = true;\n     }\n\n     if (str.charAt(4) !== '-'  || str.charAt(7) !== '-')\n     {\n       error = true;\n     }\n\n     try\n     {\n       \n       const result = /^\\d{4}-\\d{2}-\\d{2}$/.test(str);\n       if (!result)\n       {\n          error = true;\n       }\n\n       const year = parseInt(str.substr(0,4));\n       const month = parseInt(str.substr(5,2));\n       const day = parseInt(str.substr(8,2));\n\n       if (year < 1900)\n       {\n          error = true;\n       }\n\n       if (month < 1 || month > 12)\n       {\n         error = true;\n       }        \n\n       if (day > 31)\n       {\n         error = true;\n       }\n\n     }catch(err)\n     {\n       error = true;\n     }\n\n\n\n     return !error;\n   }\n\n   const validateTime =(str) =>\n   {\n     var error = false;\n\n     const result = /^\\d{2}:\\d{2} AM$|^\\d{2}:\\d{2} PM$/.test(str);\n     if (!result)\n     {\n        error = true;\n     }\n\n     try{\n       const hour = parseInt(str.substr(0,2));\n       const minute = parseInt(str.substr(3,2));\n\n       if (hour < 0 || hour > 12)\n       {\n         error = true;\n       }\n\n       if (minute < 0 || minute > 59)\n       {\n         error = true;\n       }\n\n     }catch(err)\n     {\n       error = true;\n     }\n\n     return !error;\n   }\n\n   const validateBooking = (booking) =>\n   {\n      var error = false;\n\n      if (!validateDate(booking.bookingDate))\n      {\n        error = true;\n        setValidationError({...validationError, bookingDateError : true});\n      }\n\n      if (!validateTime(booking.bookingTime))\n      {\n        error = true;\n        setValidationError({...validationError, bookingTimeError : true});\n      }\n     \n\n      return !error;\n   }\n\n   const updateBooking = (payload) =>\n   {\n       setSaving(true);\n       bookingService.updateBooking(payload).then( (res) => {\n        setSaving(false);\n        setEditMode({edit: false, person: null});\n        setState(state => ({...state, RefreshPersonInfo : !state.RefreshPersonInfo}));\n\n       }).catch ( (err) => {\n         setSaving(false);\n         setEditMode({edit: false, person: null});\n         console.log(err);\n       });\n   }\n\n   const deleteBooking = (id) =>\n   {\n       setDeleting(true);\n       bookingService.deleteBooking(id).then( (res) => {\n        setDeleting(false);\n        setDeleteMode({delete: false, person: null});\n        setState(state => ({...state, RefreshPersonInfo : !state.RefreshPersonInfo}));\n\n       }).catch ( (err) => {\n          setDeleting(false);\n          setDeleteMode({delete: false, person: null});\n         console.log(err);\n       });\n   }\n\n   const restoreBooking = (id) =>\n   {\n       setRestoring(true);\n       bookingService.unDeleteBooking(id).then( (res) => {\n        setRestoring(false);\n        setRestoreMode({restore: false, person: null});\n        setState(state => ({...state, RefreshPersonInfo : !state.RefreshPersonInfo}));\n\n       }).catch ( (err) => {\n        setRestoring(false);\n        setRestoreMode({restore: false, person: null});\n         console.log(err);\n       });\n   }\n\n   const changeBackToBookingMade = (event, id) =>\n   {\n     setSaving(true);\n     bookingService.changeBackToBookingMade(id).then(res => {\n       setSaving(false);\n       setState(state => ({...state, RefreshPersonInfo : !state.RefreshPersonInfo}));\n     }).catch(err => {\n       console.log(err);\n       setSaving(false);\n     })\n   }\n\n\n\n   const handleDeleteModeChanged = (del, person) => {\n\n    if (del)\n    {\n      setDeleteMode({delete: del, person: person});\n    }\n    else if (!del && !person)\n    {\n      setDeleteMode({delete: del, person: person});\n    }\n    else if (!del && person)\n    {\n        deleteBooking(person._id);\n    }\n  }\n\n  const handleRestoreModeChanged = (restore, person) => {\n\n    if (restore)\n    {\n      setRestoreMode({restore: restore, person: person});\n    }\n    else if (!restore && !person)\n    {\n      setRestoreMode({restore: restore, person: person});\n    }\n    else if (!restore && person)\n    {\n        restoreBooking(person._id);\n    }\n  }\n\n  return (\n    <React.Fragment>\n          \n      <Grid container direction=\"column\" spacing={1} justify=\"flex-start\" alignItems=\"center\">\n          <div className={classes.title}> Following Records Found :</div>\n\n          {state.foundRecords.map((person,index) => (\n   \n                <Grid item xs={12} md={12} key={`panel${index}`}>\n                <div className={classes.root}>\n                    <Accordion className={person.deleted ? classes.AccordionDeleted : classes.Accordion} expanded={expanded === `panel${index}`} onChange={handleChange(`panel${index}`)}>\n                    <AccordionSummary className={person.deleted ? classes.lineThrough : ''}\n                        expandIcon={<ExpandMoreIcon />}\n                        aria-controls=\"panel1bh-content\"\n                        id={`panel${index}bh-header`}\n                    >\n                      {person.deleted && (\n                          <Tooltip  title=\"This record has been deleted.\">\n                            <DeleteIcon  style={{padding: 0, margin: 0,  color: \"#fff\", fontSize: 25 }}/>\n                        </Tooltip>\n                      )}\n\n                        <Typography className={classes.heading}> {`#${index+1}`} </Typography>\n                        <Typography className={classes.secondaryHeading}>\n                        {`${person.fullname}`}\n                        </Typography>\n                    </AccordionSummary>\n\n                    <AccordionDetails className={classes.infoDetails}>\n                        \n\n\n                        <ul className={classes.ul}>\n\n                        {/* Restore Functionality ******************************************* */}  \n                        <li hidden={!(restoreMode.restore && restoreMode.person._id  === person._id)}>\n                              <div style={{fontWeight: \"500\", paddingBottom: \"5px\", paddingLeft: \"5px\", fontSize:\"16px\" , color:\"#fff\"}}>\n                                Are you sure you want to restore this record?\n                              </div>\n                            </li>\n\n                            <li hidden={!person.deleted || (restoreMode.restore && restoreMode.person._id === person._id)}>\n                                 <Button\n\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick = {() => {handleRestoreModeChanged(true, person)}}\n                                    className={classes.RestoreButton}\n                                 >\n                                   Restore This Record\n                                </Button>\n                            </li>\n\n                            <li hidden={!(restoreMode.restore && restoreMode.person._id  === person._id)}>\n                                 <Button\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    disabled = {restoring}\n                                    onClick = {() => {handleRestoreModeChanged(false, person)}}\n                                    className={classes.SaveButton}\n                                 >\n                                    YES, Restore this!\n                                </Button>\n                            </li>\n\n                            <li hidden={!(restoreMode.restore && restoreMode.person._id  === person._id)}>\n                                 <Button\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"default\"\n                                    disabled = {restoring}\n                                    onClick = {() => {handleRestoreModeChanged(false, null)}}\n                                    className={classes.CancelButton}\n                                 >\n                                    Cancel\n                                </Button>\n                            </li>\n\n                           {/*  ******************************************************************* */}\n\n                              {/* Edit Functionality ******************************************* */}\n\n                            <li hidden={person.deleted || deleteMode.delete || (editMode.edit && editMode.person._id === person._id)}>\n                                 <Button\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick = {() => {handleEditModeChanged(true, person)}}\n                                    className={classes.EditButton}\n                                 >\n                                    Edit Booking Info\n                                </Button>\n                            </li>\n\n                            <li hidden={!(editMode.edit && editMode.person._id  === person._id)}>\n                                 <Button\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    disabled = {saving}\n                                    onClick = {() => {handleEditModeChanged(false, person)}}\n                                    className={classes.SaveButton}\n                                 >\n                                    Save Changes\n                                </Button>\n                            </li>\n\n                            <li hidden={!(editMode.edit && editMode.person._id === person._id)}>\n                                 <Button\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"default\"\n                                    disabled = {saving}\n                                    onClick = {() => {handleEditModeChanged(false, null)}}\n                                    className={classes.CancelButton}\n                                 >\n                                    Cancel\n                                </Button>\n                            </li>\n                            \n                            {/* ****************************************************************************************** */}\n\n\n                            {/* Delete Functionality ******************************************* */}\n\n                            <li hidden={!(deleteMode.delete && deleteMode.person._id  === person._id)}>\n                              <div style={{fontWeight: \"600\",  paddingBottom: \"5px\", paddingLeft: \"5px\", fontSize:\"16px\"}}>\n                                Are you sure you want to delete this record?\n                              </div>\n                            </li>\n\n                            <li hidden={person.deleted ||  editMode.edit || (deleteMode.delete && deleteMode.person._id === person._id)}>\n                                 <Button\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick = {() => {handleDeleteModeChanged(true, person)}}\n                                    className={classes.DeleteButton}\n                                 >\n                                   Delete This Record\n                                </Button>\n                            </li>\n\n                            <li hidden={!(deleteMode.delete && deleteMode.person._id  === person._id)}>\n                                 <Button\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    disabled = {deleting}\n                                    onClick = {() => {handleDeleteModeChanged(false, person)}}\n                                    className={classes.SaveButton}\n                                 >\n                                    YES, Delete this!\n                                </Button>\n                            </li>\n\n                            <li hidden={!(deleteMode.delete && deleteMode.person._id === person._id)}>\n                                 <Button\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"default\"\n                                    disabled = {deleting}\n                                    onClick = {() => {handleDeleteModeChanged(false, null)}}\n                                    className={classes.CancelButton}\n                                 >\n                                    Cancel\n                                </Button>\n                            </li>\n                                 \n                            {/* ****************************************************************************************** */}\n\n                            <li className={classes.li}>\n                                <span className={classes.infoTitle}>BOOKED DATE</span> \n                            \n\n                                <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                   {FormatDateFromString(person.bookingDate) }\n                                  </span>  \n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                          <TextField \n                                                      fullWidth\n                                                      error={validationError.bookingDateError}\n                                                      className={classes.TextBox} \n                                                      value={bookingDate}\n                                                      onChange = {bookingDateChanged}\n                                                      inputProps= {{\n                                                          style:{\n                                                            padding: 0\n                                                          }\n                                                        }\n                                                      }\n                                                      > \n                                          </TextField> \n                                        </span> \n\n\n                            </li>\n\n                            <li className={classes.li}>\n                                <span className={classes.infoTitle}>BOOKED TIME</span> \n                                <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.bookingTime}</span>  \n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                          <TextField \n                                                      fullWidth\n                                                      error={validationError.bookingTimeError}\n                                                      className={classes.TextBox} \n                                                      value={bookingTime}\n                                                      onChange = {bookingTimeChanged}\n                                                      inputProps= {{\n                                                          style:{\n                                                            padding: 0\n                                                          }\n                                                        }\n                                                      }\n                                                      > \n                                          </TextField> \n                                        </span> \n\n\n                            </li>\n\n                            <li className={classes.li}>\n                            <span className={classes.infoTitle}>FULLNAME</span> \n                                        <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.fullname}</span>  \n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                        <TextField \n                                                      fullWidth\n                                                      className={classes.TextBox} \n                                                      value={fullname}\n                                                      onChange = {fullnameChanged}\n                                                      inputProps= {{\n                                                          style:{\n                                                            padding: 0\n                                                          }\n                                                        }\n                                                      }\n                                                      > \n                                          </TextField> \n                                        </span> \n                            </li>\n                            <li className={classes.li}>\n                                <span className={classes.infoTitle}>EMAIL</span> \n                                       <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.email}</span>  \n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                        <TextField \n                                                      fullWidth\n                                                      className={classes.TextBox} \n                                                      value={email}\n                                                      onChange = {emailChanged}\n                                                      inputProps= {{\n                                                          style:{\n                                                            padding: 0\n                                                          }\n                                                        }\n                                                      }\n                                                      > \n                                          </TextField> \n                                        </span>   \n                            </li>\n                            <li className={classes.li}>\n                                <span className={classes.infoTitle}>TEL</span>\n                                 <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.phone}</span>  \n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                        <TextField \n                                                      fullWidth\n                                                      className={classes.TextBox} \n                                                      value={tel}\n                                                      onChange = {telChanged}\n                                                      inputProps= {{\n                                                          style:{\n                                                            padding: 0\n                                                          }\n                                                        }\n                                                      }\n                                                      > \n                                          </TextField> \n                                        </span>  \n                            </li>\n                            <li className={classes.li}>\n                                <span className={classes.infoTitle}>SERVICE</span>\n                                 <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.service}</span>  \n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                        <TextField \n                                                      fullWidth\n                                                      className={classes.TextBox} \n                                                      value={service}\n                                                      onChange = {serviceChanged}\n                                                      inputProps= {{\n                                                          style:{\n                                                            padding: 0\n                                                          }\n                                                        }\n                                                      }\n                                                      > \n                                          </TextField> \n                                        </span>  \n                            </li>\n                            <li className={classes.li}>\n                                <span className={classes.infoTitle}>NOTES</span>\n                                 <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.notes}</span>  \n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                        <TextField \n                                                      fullWidth\n                                                      className={classes.TextBox} \n                                                      value={notes}\n                                                      onChange = {notesChanged}\n                                                      inputProps= {{\n                                                          style:{\n                                                            padding: 0\n                                                          }\n                                                        }\n                                                      }\n                                                      > \n                                          </TextField> \n                                        </span>  \n                            </li>\n                            <li className={classes.li}>\n                                <span className={classes.infoTitle}>STATUS</span> \n                                {getStatusLabel(person.status)} \n                            </li>\n      \n\n                        </ul>\n\n                    </AccordionDetails>\n                    </Accordion>\n                </div>\n            </Grid> \n          ))}\n    </Grid>\n    </React.Fragment>\n  );\n}\n","import React, { useEffect } from 'react';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport GlobalState from './../GlobalState';\nimport Alert from '@material-ui/lab/Alert';\nimport PropTypes from 'prop-types';\nimport MaskedInput from 'react-text-mask';\nimport { FormControl, Grid, Input, InputLabel } from '@material-ui/core';\nimport BookService from './services/BookService';\nimport PersonsBox from './PersonsBox';\nimport { width } from '@material-ui/system';\n\n\nconst isBoolean = (param) => typeof(param) === \"boolean\"\n\nconst useFocus = (initialFocus = false, id = \"\") => {\n    const [focus, setFocus] = React.useState(initialFocus)\n    const setFocusWithTrueDefault = (param) => setFocus(isBoolean(param)? param : true)\n    return ([\n        setFocusWithTrueDefault, {\n            autoFocus: focus,\n            key: `${id}${focus}`,\n            onFocus: () => setFocus(true),\n            onBlur: () => setFocus(false),\n        },\n    ])\n}\n\n\nfunction TextMaskCustom(props) {\n    const { inputRef, ...other } = props;\n  \n    return (\n      <MaskedInput\n        {...other}\n        ref={(ref) => {\n          inputRef(ref ? ref.inputElement : null);\n        }}\n        mask={[/\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/]}\n        // placeholderChar={'\\u2000'}\n        showMask\n      />\n    );\n  }\n  \n  TextMaskCustom.propTypes = {\n    inputRef: PropTypes.func.isRequired,\n  };\n\n\n\nconst useStyles = makeStyles((theme) => ({\n\n    root: {\n        width: '100%',\n        '& > * + *': {\n          marginTop: theme.spacing(2),\n        },\n        marginTop: \"20px\"\n      },  \n\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n\n    Find: {\n        width: \"80px\"\n    },\n\n    Clear:{\n        marginRight: \"20px\"\n    },\n\n    title:{\n        marginTop : \"20px\"\n    },\n\n    TextBox:{\n        marginTop: \"30px\",\n        \"& > *\" :\n        {\n            textAlign: \"center\"\n        },\n  \n    },\n\n    TextField:{\n\n    },\n\n    NoRecordsFound:{\n        marginTop: \"20px\",\n        color: \"red\",\n        fontWeight: \"600\",\n        fontSize: \"14px\",\n    },\n\n    PersonsBox:{\n        marginTop : \"20px\",\n        marginBottom: \"50px\",\n    }\n\n}));\n\nexport default function FindByRef() {\n  const classes = useStyles();\n  const [state, setState] = React.useContext(GlobalState);\n  \n  const [setFocus, focusProps] = useFocus(true);\n\n//   useEffect( () =>\n//   {\n//      findRecords();\n//   }, [state.findRecords]);\n\n useEffect ( () => {\n    setState(state => ({...state, foundRecords : []}));\n }, [])\n\n  useEffect( () => {\n    BookService.getBookingsByRef(state.ref).then( (res)=>\n    {\n        if (res.data.length > 0)\n        {\n            setState(state => ({...state, foundRecords : res.data}));\n        }\n    });\n    }, [state.RefreshPersonInfo]);\n\n    const handleChange = (event) =>\n    {\n        setState(state => ({...state, ref : event.target.value}));\n        setState(state => ({...state, refError : false})); \n    }\n\n    const clearField = () =>\n    {\n        setState(state => ({...state, refError : false})); \n        setState(state => ({...state, ref : '___-___-___'}));\n        setState(state => ({...state, foundRecords : []}));\n        setFocus();\n    }\n\n    const findRecords = () =>\n    {\n        if (!state.ref || state.ref.indexOf('_') >= 0)\n        {\n            setState(state => ({...state, refError : true}));  \n            return;\n        }\n\n        setState(state => ({...state, submiting : true}));\n        setState(state => ({...state, foundRecords : []}));\n\n        BookService.getBookingsByRef(state.ref).then( (res)=>\n        {\n            setState(state => ({...state, submiting : false}));\n            if (res.data.length > 0)\n            {\n                setState(state => ({...state, foundRecords : res.data}));\n            }\n            else\n            {\n                setState(state => ({...state, foundRecords : null}));\n            }\n            \n            console.log(res.data);\n\n        }).catch( (err) =>\n        {\n            console.log(err);\n            setState(state => ({...state, submiting : false}));\n        });\n    }\n\n  return (\n    <React.Fragment>\n        <CssBaseline />\n        <div className={classes.title}>\n            <Typography component=\"h6\" variant=\"h6\" align=\"center\">\n                Find Booking Appoinments\n            </Typography>  \n        </div> \n\n        <Grid container direction=\"column\" spacing={1} justify=\"flex-start\"  alignItems=\"center\">\n\n        <Grid item xs={12} md={12}>\n            <FormControl className={classes.TextBox}>\n                <TextField\n                    {...focusProps}\n                    autoFocus \n                    pattern=\"[0-9]*\"\n                    error = {state.refError ? true : false} \n                    value = {state.ref}\n                    className = {classes.TextField}\n                    width = \"50px\"\n                    onChange={handleChange}\n                    label=\"Reference No.\"\n                    helperText=\"Enter Your 9-digits Reference No.\"\n                    name=\"refNo\"\n                    id=\"refNo\"\n                    variant=\"outlined\"\n                    \n                    size=\"medium\"\n                    margin=\"normal\"\n                    fullWidth = {true}\n                    InputProps={{\n                        inputComponent: TextMaskCustom,\n                        style: { textAlign: 'center', fontSize:\"24px\", width: \"210px\", paddingLeft: \"20px\" }\n                    }}\n\n                    onKeyPress= {event => {\n                        if (event.key === 'Enter') {\n                            findRecords();\n                        }\n                      }}\n                />         \n            </FormControl>\n        </Grid>\n\n        <Grid item xs={12} md={12}>\n               \n                <Button\n                    disabled = {state.submiting}\n                    color=\"default\"\n                    onClick = {clearField}\n                    onTouchTap = {clearField}\n                    className={classes.Clear}\n                >\n                    Clear \n                </Button>  \n            \n                <Button\n                    type=\"button\"\n                    disabled = {state.submiting}\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick = {findRecords}\n                    onTouchTap = {findRecords}\n                    className={classes.Find}\n                >\n                    Find \n                </Button>  \n        </Grid>\n\n        <Grid item xs={12} md={12}>\n\n                    \n\n            {state.foundRecords && state.foundRecords.length > 0 && (\n                <React.Fragment>\n\n                    <div className={classes.PersonsBox}>\n                          <PersonsBox/>\n                    </div>\n                    \n\n\n                </React.Fragment>\n            )}   \n\n            {!state.foundRecords && (\n                <React.Fragment>\n\n                <div className={classes.root}>\n                    <Alert severity=\"error\"> <strong>No Records Found !</strong> <br/> Please check you reference number again.</Alert>\n                </div> \n                   \n                </React.Fragment>\n            )}\n\n        </Grid>\n        \n        \n        </Grid>\n        \n    </React.Fragment>\n   \n  );\n}","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport dateformat from 'dateformat';\nimport BookService from '../services/BookService';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport GlobalState from '../../GlobalState';\n\n\nconst useStyles = makeStyles((theme) => ({\n\n    Container: {\n        width: \"100%\",\n        paddingTop: \"70%\",\n        position: \"relative\",\n        backgroundColor: \"#fff\",\n        cursor: \"pointer\"\n    },\n\n    ContainerPast: {\n        width: \"100%\",\n        paddingTop: \"70%\",\n        position: \"relative\",\n        backgroundColor: \"#fafafa\",\n        cursor: \"pointer\"\n    },\n    \n    DayLabel: {\n        position: \"absolute\",\n        top: \"5px\",\n        right: \"5px\",\n        color: \"#555\",\n        fontSize: \"1rem\"\n    },\n\n    DayLabelToday: {\n        position: \"absolute\",\n        top: \"5px\",\n        right: \"5px\",\n        backgroundColor: \"#1a73e8\",\n        color: \"#fff\",\n        fontSize: \"1rem\",\n        borderRadius: \"50%\",\n        padding: \"5px\",\n        lineHight: \"35px\",\n        minWidth: \"35px\"\n    },\n\n    DayLabelDisabled: {\n        position: \"absolute\",\n        top: \"5px\",\n        right: \"5px\",\n        color: \"#ddd\",\n        fontSize: \"1rem\"\n    },\n\n    BookingCountLabel: {\n        position: \"absolute\",\n        top: \"35%\",\n        left: \"40%\",\n        color: \"#3f51b5\",\n        backgroundColor: \"#ebedf7\",\n        fontSize: \"16px\",\n        fontWeight: \"600\",\n        padding: \"10px\",\n        borderRadius: \"50%\",\n        minWidth: \"40px\",\n        lineHight: \"40px\",\n        cursor: \"pointer\",\n        textAlign: \"center\"\n    },\n\n    BookingCountLabelBusy: {\n        position: \"absolute\",\n        top: \"35%\",\n        left: \"40%\",\n        color: \"#b00000\",\n        backgroundColor: \"#fce6e6\",\n        fontSize: \"16px\",\n        fontWeight: \"600\",\n        padding: \"10px\",\n        borderRadius: \"50%\",\n        minWidth: \"40px\",\n        cursor: \"pointer\",\n        textAlign: \"center\"\n    },\n\n    LoadingProgress: {\n        position: \"absolute\",\n        top: \"40%\",\n        left: \"40%\",\n      },\n\n      BookingCountGauge: {\n        position: \"absolute\",\n        bottom: \"5%\",\n        left: \"8%\",\n        width : \"8%\",\n        height: \"85%\"\n    },\n\n  }));\n\nconst MAX_BOOKING_COUNT = 10;  \n\nconst MonthViewCell = ({key, cellIndex, month, daysInMonth, dayClicked}) => {\n    const classes = useStyles();\n\n    const [state, setState] = React.useContext(GlobalState);\n\n    const [dateStr, setDateStr] = React.useState('');\n\n    const [cellDate, setCellDate] = React.useState(new Date());\n\n    const [bookingsCount, setBookingsCount] = React.useState(-1);\n\n    const [disableDay, setDisableDay] = React.useState(false);\n\n    const [isPast, setIsPast] = React.useState(false);\n\n    useEffect( () => {\n\n        if (cellIndex <= daysInMonth.length)\n        {\n            const date = daysInMonth[cellIndex - 1];\n            const dateStr = dateformat(date, 'yyyy-mm-dd');\n            setDateStr(dateStr);\n            setCellDate(date);\n            setDisableDay(date.getMonth() !== month - 1);\n            const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\n            setIsPast(dateStr < todayStr);\n        }\n        else\n        {\n            const day = cellIndex - daysInMonth.length;\n            const date = new Date((daysInMonth[daysInMonth.length - 1].getTime() + ( day * 86400000)));\n            const dateStr = dateformat(date, 'yyyy-mm-dd');\n            setDateStr(dateStr);\n            setCellDate(date);\n            setDisableDay(true);\n            const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\n            setIsPast(dateStr < todayStr);\n        }\n\n    }, [cellIndex, month, daysInMonth]);\n\n    useEffect ( () => {\n\n        const fecthData = async () =>\n        {\n            if (!dateStr || dateStr.length <= 0)\n            {\n                return;\n            }\n        \n            if (disableDay)\n            {\n                setBookingsCount(-2);\n                return;\n            }\n\n            setBookingsCount(-1);\n\n            var res = state.AdminCalendarCache?.find(record => record.method === 'getBookingsCountByDateStr' && record.query === dateStr)?.res;\n\n            if (!res)\n            {\n                res = await BookService.getAllBookingsCountByDateStr(dateStr);\n                setState(state => ({...state, AdminCalendarCache : [...state.AdminCalendarCache, {method: 'getBookingsCountByDateStr' , query : dateStr, res: res}]}));\n            }\n        \n            if (res.data.count >= 0)\n            {\n                setBookingsCount(res.data.count);\n            }\n\n        }\n\n      fecthData();\n\n    }, [dateStr]);\n\n    const getDayLabel = (_cellIndex , _month , _daysInMonth) =>\n    {\n        var date = null;\n        var disabled = false;\n        var day = -1;\n\n    \n\n        if (_cellIndex <= _daysInMonth.length)\n        {\n            date = _daysInMonth[_cellIndex - 1];\n            day = date.getDate();\n            if (date.getMonth() !== _month - 1)\n            {\n                disabled = true;\n            }\n        }\n        else\n        {\n            const _day = _cellIndex - _daysInMonth.length;\n            const date = new Date((_daysInMonth[_daysInMonth.length - 1].getTime() + ( _day * 86400000)));\n            day = date.getDate();\n            disabled = true;\n        }\n\n        const isToday = dateformat(new Date(),'yyyy-mm-dd') === dateformat(date, 'yyyy-mm-dd');\n\n        return (\n            <span className={(disabled) ? classes.DayLabelDisabled : isToday ? classes.DayLabelToday : classes.DayLabel}>\n                 {day > 0 ? `${day}` : ''}\n             </span>\n        );\n    }\n\n    const getBookingsCountLabel = (_bookingsCount) =>\n    {\n        if (_bookingsCount === -1)\n        {\n            return (\n                <div className={classes.LoadingProgress}>\n                      <CircularProgress disableShrink  />\n                </div>\n            );  \n        }\n        else if (_bookingsCount > 0 )\n        {\n            if (_bookingsCount >= MAX_BOOKING_COUNT / 2)\n            {\n                return (\n                    <div onClick={(event => dayClicked(event,cellDate))} className={classes.BookingCountLabelBusy}>\n                        {_bookingsCount < 10 ?  ` ${_bookingsCount}` : `${_bookingsCount}`}\n                    </div>\n                );\n            }\n            else\n            {\n                return (\n                    <div onClick={(event => dayClicked(event,cellDate))} className={classes.BookingCountLabel}>\n                          {_bookingsCount < 10 ?  ` ${_bookingsCount}` : `${_bookingsCount}`}\n                    </div>\n                );\n            }\n        }\n    }\n\n    const getBookingsCountGauge = (_bookingsCount) =>\n    {\n        if (_bookingsCount > 0)\n        {\n            let percent = (_bookingsCount / MAX_BOOKING_COUNT) * 100;\n            if (percent > 100)\n            {\n                percent = 100;\n            }\n\n            percent = 100 - percent;\n\n            return (\n\n                <div className={classes.BookingCountGauge}>\n                  <div style={{padding:\"0\", margin:\"0\", width:\"100%\", height:\"100%\", backgroundColor: \"#3f51b5\"}} >\n                        <div  style={{padding:\"0\", margin:\"0\", width:\"100%\", height:`${percent}%`, backgroundColor: \"#fafafa\"}} >\n\n                        </div>\n                  </div>\n                </div>\n            );\n        }\n    }\n\n    return (\n        <React.Fragment>\n\n            <div className={classes.Container} onClick={(event => dayClicked(event,cellDate))}>\n\n              {getDayLabel(cellIndex, month, daysInMonth)}\n\n              {getBookingsCountLabel(bookingsCount)}\n\n              {getBookingsCountGauge(bookingsCount)}\n\n            </div>\n\n        </React.Fragment>\n\n\n    );\n}\n\nMonthViewCell.propTypes = {\n    key: PropTypes.string.isRequired,\n    cellIndex: PropTypes.number.isRequired,\n    month: PropTypes.number.isRequired,\n    daysInMonth: PropTypes.arrayOf(PropTypes.date),\n    dayClicked: PropTypes.func\n  };\n\n \n  \nexport default MonthViewCell;","import calendar from 'node-calendar';\n\n\nexport default class CalendarUtil {\n\n    static getMonthRange = (month , year) =>\n    {\n        return new calendar.Calendar(calendar.SUNDAY).itermonthdates(year, month);\n    } \n\n} ","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport MonthViewCell from './MonthViewCell';\nimport CalendarUtil from './calendar-util';\n\nconst dayLables = ['Sun', 'Mon', 'Tue', 'Wed' , 'Thu', 'Fri', 'Sat'];\nconst days = [1,2,3,4,5,6,7]; \nconst rows = [1,2,3,4,5,6];\n\nconst useStyles = makeStyles((theme) => ({\n\n    table: {\n        width: \"100%\",\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n    },\n\n    th: {\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        verticalAlign: \"middle\",\n        fontcolor: \"#555\",\n        fontWeight: \"400\",\n        fontSize: \"15px\",\n        paddingTop: \"5px\",\n        paddingBottom: \"5px\",\n        width: \"14%\"\n    },\n\n    td: {\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        verticalAlign: \"middle\",\n    }\n\n  }));\n\nconst MonthView = ({month, year, dayClicked}) => {\n    const classes = useStyles();\n\n    const daysInMonth = CalendarUtil.getMonthRange(month,year);\n\n    return (\n        <React.Fragment>\n\n            <table className={classes.table}>\n                <thead>\n                    <tr>\n                        {dayLables.map(label => (\n                            <th key={`th-${label}`} className={classes.th}>\n                                {label}\n                            </th>\n                        ))}\n                    </tr>\n                </thead>\n                <tbody>\n                    {rows.map(row => (\n                        <tr>\n                            {days.map(day => (\n                                <td className={classes.td}>\n                                    <MonthViewCell \n                                        key={`${month}${year}${(row-1) * days.length + day}`} \n                                        cellIndex={(row-1) * days.length + day} \n                                        month={month} \n                                        daysInMonth={daysInMonth}\n                                        dayClicked = {dayClicked}\n                                        />\n                                </td>\n                            ))}\n                        </tr>\n                    ))}            \n                </tbody>\n\n            </table>\n\n      \n        </React.Fragment>\n\n\n    );\n}\n\nMonthView.propTypes = {\n    month: PropTypes.number.isRequired,\n    year: PropTypes.number.isRequired,\n    dayClicked: PropTypes.func\n  };\n\n\nexport default MonthView;","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport dateformat from 'dateformat';\nimport BookService from '../services/BookService';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport GlobalState from '../../GlobalState';\n\nimport axios from 'axios'\n\nconst useStyles = makeStyles((theme) => ({\n\n    Container: {\n        width: \"100%\",\n        paddingTop: \"40%\",\n        position: \"relative\",\n        backgroundColor: \"#fff\",\n        cursor: \"pointer\"\n    },\n\n    ContainerPast: {\n        width: \"100%\",\n        paddingTop: \"40%\",\n        position: \"relative\",\n        backgroundColor: \"#fafafa\",\n        cursor: \"pointer\"\n    },\n    \n    DayLabel: {\n        position: \"absolute\",\n        top: \"5px\",\n        right: \"5px\",\n        color: \"#555\",\n        fontSize: \"1rem\"\n    },\n\n    DayLabelDisabled: {\n        position: \"absolute\",\n        top: \"5px\",\n        right: \"5px\",\n        color: \"#ddd\",\n        fontSize: \"1rem\"\n    },\n\n    BookingCountLabel: {\n        position: \"absolute\",\n        top: \"25%\",\n        left: \"38%\",\n        color: \"#3f51b5\",\n        backgroundColor: \"#ebedf7\",\n        fontSize: \"14px\",\n        fontWeight: \"600\",\n        padding: \"5px\",\n        borderRadius: \"50%\",\n        minWidth: \"30px\",\n        cursor : \"pointer\",\n        textAlign: \"center\"\n    },\n\n    BookingCountLabelBusy: {\n        position: \"absolute\",\n        top: \"25%\",\n        left: \"38%\",\n        color: \"#b00000\",\n        backgroundColor: \"#fce6e6\",\n        fontSize: \"14px\",\n        fontWeight: \"600\",\n        padding: \"5px\",\n        borderRadius: \"50%\",\n        minWidth: \"30px\",\n        cursor : \"pointer\",\n        textAlign: \"center\"\n    },\n\n    LoadingProgress: {\n        position: \"absolute\",\n        top: \"40%\",\n        left: \"40%\",\n      },\n\n      BookingCountGauge: {\n        position: \"absolute\",\n        bottom: \"5%\",\n        left: \"8%\",\n        width : \"85%\",\n        height: \"8%\"\n    },\n\n  }));\n\nconst MAX_BOOKING_COUNT = 1;  \n\nconst WeekViewCell = ({key, date, time, dayClicked}) => {\n    const classes = useStyles();\n\n    const [state, setState] = React.useContext(GlobalState);\n    const [bookingsCount, setBookingsCount] = React.useState(-1);\n    const [isPast, setIsPast] = React.useState(false);\n\n    const [cellDate, setCellDate] = React.useState(new Date());\n\n    useEffect( () => {\n        const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\n        setIsPast(date < todayStr);\n\n        setCellDate(new Date(date));\n\n    }, [date]);\n\n    useEffect ( () => {\n      \n      \n      \n        if (!date || date.length <= 0 || !time || time.length <= 0)\n        {\n            return;\n        }\n        \n        // if (isPast)\n        // {\n        //     setBookingsCount(-2);\n        //     return;\n        // }\n\n        setBookingsCount(-1);\n\n       \n\n        var res = state.AdminCalendarCache?.find(record => record.method === 'getBookingsCountByDateStrandTime' && record.query === `${date}${time}`)?.res;\n        if (res)\n        {\n            if (res.data.count >= 0)\n            {\n                setBookingsCount(res.data.count);\n            }  \n            return;\n        }\n\n        let source = axios.CancelToken.source();\n        BookService.getAllBookingsCountByDateStrandTime(date, time, source).then( res => {\n            if (res.data.count >= 0)\n            {\n                setBookingsCount(res.data.count);\n                setState(state => ({...state, AdminCalendarCache : [...state.AdminCalendarCache, {method: 'getBookingsCountByDateStrandTime' , query : `${date}${time}`, res: res}]}));\n            }  \n        }).catch( err => \n            {\n                //do nothing\n            });\n     \n        return () => {\n           if (source)\n              source.cancel('Cancelling in cleanup');\n        }\n     \n    }, [date, time]);\n\n\n    const getBookingsCountLabel = (_bookingsCount) =>\n    {\n        if (_bookingsCount === -1)\n        {\n            return (\n                <div className={classes.LoadingProgress}>\n                      <CircularProgress disableShrink  />\n                </div>\n            );  \n        }\n        else if (_bookingsCount > 0)\n        {\n            if (_bookingsCount >= MAX_BOOKING_COUNT)\n            {\n                return (\n                    <div onClick={(event => dayClicked(event,cellDate))} className={classes.BookingCountLabelBusy}>\n                          {_bookingsCount < 10 ? ` ${_bookingsCount}` : `${_bookingsCount}` }\n                    </div>\n                );\n            }\n            else\n            {\n                return (\n                    <div onClick={(event => dayClicked(event,cellDate))} className={classes.BookingCountLabel}>\n                        {_bookingsCount < 10 ? ` ${_bookingsCount}` : `${_bookingsCount}` }\n                    </div>\n                );\n            }\n        }\n    }\n\n    const getBookingsCountGauge = (_bookingsCount) =>\n    {\n        if (_bookingsCount > 0 )\n        {\n            let percent = (_bookingsCount / MAX_BOOKING_COUNT) * 100;\n            if (percent > 100)\n            {\n                percent = 100;\n            }\n\n            // percent = 100 - percent;\n\n            return (\n\n                <div className={classes.BookingCountGauge}>\n                  <div style={{padding:\"0\", margin:\"0\", width:\"100%\", height:\"100%\", backgroundColor: \"#f5f5f5\"}} >\n                        <div  style={{padding:\"0\", margin:\"0\", height:\"100%\", width:`${percent}%`, backgroundColor: \"#3f51b5\"}} >\n\n                        </div>\n                  </div>\n                </div>\n            );\n        }\n    }\n\n    return (\n        <React.Fragment>\n\n            <div className={isPast ? classes.ContainerPast : classes.Container}  onClick={(event => dayClicked(event,cellDate))} >\n\n              {getBookingsCountLabel(bookingsCount)}\n\n              {getBookingsCountGauge(bookingsCount)}\n\n            </div>\n\n        </React.Fragment>\n\n\n    );\n}\n\nWeekViewCell.propTypes = {\n    key: PropTypes.string.isRequired,\n    date: PropTypes.string.isRequired,\n    time: PropTypes.string.isRequired,\n    dayClicked: PropTypes.func\n  };\n\n \n  \nexport default WeekViewCell;","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport WeekViewCell from './WeekViewCell';\nimport dateformat from 'dateformat';\n\nconst rows = [\n    '09:00 AM',\n    '09:15 AM', \n    '09:30 AM', \n    '09:45 AM',\n    '10:00 AM',\n    '10:15 AM',\n    '10:30 AM',\n    '10:45 AM',\n    '11:00 AM',\n    '11:15 AM',\n    '11:30 AM',\n    '11:45 AM',\n    '12:00 PM',\n    '12:15 PM',\n    '12:30 PM',\n    '12:45 PM',\n    '01:00 PM',\n    '01:15 PM',\n    '01:30 PM',\n    '01:45 PM',\n    '02:00 PM',\n    '02:15 PM',\n    '02:30 PM',\n    '02:45 PM',\n    '03:00 PM',\n    '03:15 PM',\n    '03:30 PM',\n    '03:45 PM',\n    '04:00 PM',\n    '04:15 PM',\n    '04:30 PM',\n    '04:45 PM',\n    '05:00 PM',\n    '05:15 PM',\n    '05:30 PM',\n    '05:45 PM',\n];\n\n\n\nconst useStyles = makeStyles((theme) => ({\n\n    table: {\n        width: \"100%\",\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        overflowY: \"auto\"\n    },\n\n    th: {\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        verticalAlign: \"middle\",\n        fontcolor: \"#555\",\n        fontWeight: \"400\",\n        fontSize: \"15px\",\n        paddingTop: \"5px\",\n        paddingBottom: \"5px\",\n        width: \"12%\", \n    },\n\n    td: {\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        verticalAlign: \"middle\",\n        height : \"50px\",\n        width: \"12%\", \n    }\n\n  }));\n\nconst WeekView = ({dates, dayClicked}) => {\n    const classes = useStyles();\n\n    return (\n        <React.Fragment>\n\n        <div style={{overflowY: \"scroll\" , height: \"60px\"}}>\n            <table className={classes.table}>\n                <thead>\n                    <tr>\n                        <th style={{width: \"7%\"}}>\n                        \n                        </th>\n                            {dates.map(date => (\n                                <th className={classes.th}>\n                                    <div style={{paddingBottom: \"5px\", color: \"#aaa\"}}>\n                                         {dateformat(date, 'ddd')}\n                                    </div>\n                                    <div>\n                                        <span style={{color: \"#aaa\"}}>\n                                            {dateformat(date, 'mmm ')}\n                                        </span> \n                                        <span  style={(dateformat(new Date(),'yyyy-mm-dd') === dateformat(date, 'yyyy-mm-dd')) ? { backgroundColor: \"#1a73e8\", color: \"#fff\", borderRadius: \"50%\",  padding: \"5px\",} : {color: \"#333\", fontWeight:\"500\"}}>\n                                             {dateformat(date, ' d')}\n                                        </span>\n                                       \n                                    </div>\n                                </th>\n                        ))}\n                    </tr>\n                </thead>\n             </table>\n\n        </div>\n\n            <div style={{overflowY: \"scroll\" , height: \"70vh\"}}>\n                <table className={classes.table}>   \n                    <tbody>\n                        {rows.map(row => (\n                            <tr>\n                                <td style={{width: \"7%\"}}>\n                                    {row}\n                                </td>\n                                {dates.map(day => (\n                                    <td className={classes.td}>\n                                        <WeekViewCell \n                                                dayClicked = {dayClicked}\n                                                key={`${dateformat(day,'yyyy-mm-dd')}-${row.replace(':','-')}`} \n                                                date={dateformat(day,'yyyy-mm-dd')} \n                                                time={row}/>\n                                    </td>\n                                ))}\n                            </tr>\n                        ))}            \n                    </tbody>\n                </table>\n            </div>                    \n      \n        </React.Fragment>\n\n\n    );\n}\n\nWeekView.propTypes = {\n    dates: PropTypes.arrayOf(PropTypes.any).isRequired,\n    dayClicked: PropTypes.func\n  };\n\n\nexport default WeekView;","import React, { useEffect, useRef, useState } from \"react\";\nimport BookService from \"./services/BookService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {\n  Backdrop,\n  Button,\n  Checkbox,\n  CircularProgress,\n  Divider,\n  FormControlLabel,\n  Grid,\n  InputAdornment,\n  InputLabel,\n  Link,\n  makeStyles,\n  MenuItem,\n  Select,\n  Switch,\n  TextField,\n  Tooltip,\n} from \"@material-ui/core\";\nimport GlobalState from \"../GlobalState\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport CreditCardIcon from \"@material-ui/icons/CreditCard\";\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\n\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Draggable from \"react-draggable\";\nimport Paper from \"@material-ui/core/Paper\";\n\nimport Alert from \"@material-ui/lab/Alert\";\n\nimport PropTypes from \"prop-types\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport Box from \"@material-ui/core/Box\";\n\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport { corporates } from \"./Corporates\";\nimport NumberFormat from \"react-number-format\";\n\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { validate } from \"email-validator\";\nimport DateRangeIcon from \"@material-ui/icons/DateRange\";\nimport { CalendarColors } from \"../Admin/calendar-admin/colors\";\n\nvar interval;\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    marginTop: theme.spacing(0),\n    marginBottom: theme.spacing(1),\n  },\n\n  refreshButton: {\n    marginLeft: theme.spacing(2),\n  },\n\n  checkIcon: {\n    color: \"green\",\n  },\n\n  closeIcon: {\n    color: \"red\",\n  },\n\n  RefLink: {\n    cursor: \"pointer\",\n  },\n\n  BookedLabel: {\n    backgroundColor: \"#606060\",\n    color: \"#fff\",\n    paddingRight: \"10px\",\n    paddingLeft: \"10px\",\n  },\n\n  PatientAttendedLabel: {\n    backgroundColor: \"#0066aa\",\n    color: \"#fff\",\n    paddingRight: \"15px\",\n    paddingLeft: \"10px\",\n  },\n\n  SampleTakenLabel: {\n    backgroundColor: \"#0066cc\",\n    color: \"#fff\",\n    paddingRight: \"40px\",\n    paddingLeft: \"10px\",\n  },\n\n  ReportSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"90px\",\n    paddingLeft: \"10px\",\n  },\n\n  ReportCertSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"68px\",\n    paddingLeft: \"10px\",\n  },\n\n  archiveButton: {},\n\n  smartMatchButton: {\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    marginRight: \"10px\",\n    // padding: \"10px\"\n  },\n\n  infoTitle: {\n    fontWeight: \"400\",\n  },\n\n  infoData: {\n    paddingLeft: \"10px\",\n    fontWeight: \"800\",\n  },\n\n  matchButton: {\n    marginTop: \"30px\",\n    marginBottom: \"20px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  resendButton: {\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  resendFilesButton: {\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n    backgroundColor: \"#3792ad\",\n    \"&:hover\": {\n      background: \"#2f798f\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  cancelButton: {\n    marginBottom: \"10px\",\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"90px\",\n    paddingRight: \"90px\",\n  },\n\n  CalendarIcon: {\n    color: theme.palette.primary.main,\n  },\n\n  DateTimeLabel: {\n    fontWeight: \"500\",\n    color: theme.palette.primary.main,\n  },\n\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 5,\n    color: \"#fff\",\n  },\n\n  PriceLabelPaid: {\n    color: theme.palette.primary.main,\n    fontWeight: \"600\",\n  },\n\n  PriceLabelNotPaid: {\n    color: theme.palette.secondary.main,\n    fontWeight: \"600\",\n  },\n}));\n\nconst Packages = [\n  { packageName: \"Sexual Health Clinic - Bronze\" },\n  { packageName: `Sexual Health Clinic - Silver` },\n  { packageName: `Sexual Health Clinic - Gold` },\n  { packageName: `Sexual Health Clinic - Platinium` },\n  { packageName: `BLOOD SAMPLE AND URINE` },\n  { packageName: `BLOOD SAMPLE AND URINE OR SWAB` },\n  { packageName: `Indivisual Tests` },\n  { packageName: `Combo STD Checks` },\n];\n\nconst IndivisualTests = [\n  \"HIV TESTING\",\n  \"CHLAMYDIA TESTING\",\n  \"SYPHILIS BLOOD TESTING\",\n  \"HERPES TESTING\",\n  \"GONORRHOEA TESTING\",\n  \"HEPATITIS A PROFILE TESTING\",\n  \"HEPATITIS B PROFILE TESTING\",\n  \"HEPATITIS C ANTIBODIES TESTING\",\n  \"HPV TESTING\",\n  \"BACTERIAL SWAB TESTING\",\n];\n\nconst comboSTDChecks = [\n  \"CHLAMYDIA, GONORRHOEA AND TRICHOMONAS\",\n  \"HIV I & II WITH SYPHILIS\",\n];\n\nfunction NumberFormatCustom(props) {\n  const { inputRef, onChange, ...other } = props;\n\n  return (\n    <NumberFormat\n      {...other}\n      getInputRef={inputRef}\n      onValueChange={(values) => {\n        onChange({\n          target: {\n            name: props.name,\n            value: values.value,\n          },\n        });\n      }}\n      thousandSeparator\n      isNumericString\n      prefix=\"\"\n    />\n  );\n}\n\nNumberFormatCustom.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nconst BorderLinearProgress = withStyles((theme) => ({\n  root: {\n    height: 10,\n    borderRadius: 5,\n  },\n  colorPrimary: {\n    backgroundColor: \"#cedbce\", //theme.palette.grey[theme.palette.type === 'light' ? 200 : 700],\n  },\n  bar: {\n    borderRadius: 5,\n    backgroundColor: \"#2f942e\",\n  },\n}))(LinearProgress);\nfunction LinearProgressWithLabel(props) {\n  return (\n    <Box display=\"flex\" alignItems=\"center\">\n      <Box width=\"100%\" mr={1}>\n        <BorderLinearProgress variant=\"determinate\" {...props} />\n      </Box>\n      <Box minWidth={35}>\n        <Typography\n          style={{ fontWeight: \"800\", color: \"#5e855e\" }}\n          variant=\"body2\"\n          color=\"textSecondary\"\n        >{`${Math.round(props.value)}%`}</Typography>\n      </Box>\n    </Box>\n  );\n}\n\nLinearProgressWithLabel.propTypes = {\n  /**\n   * The value of the progress indicator for the determinate and buffer variants.\n   * Value between 0 and 100.\n   */\n  value: PropTypes.number.isRequired,\n};\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable\n      handle=\"#draggable-dialog-title\"\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\n    >\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nexport default function NewBookingDialog(props) {\n  const classes = useStyles();\n\n  const [state, setState] = React.useContext(GlobalState);\n  const [saving, setSaving] = useState(false);\n\n  const [fullname, setFullname] = React.useState(\"\");\n  const [fullnameError, setFullnameError] = React.useState(false);\n\n  const [phone, setPhone] = React.useState(\"\");\n  const [email, setEmail] = React.useState(\"\");\n  const [service, setService] = React.useState(\"\");\n  const [serviceError, setServiceError] = React.useState(false);\n\n  const [notes, setNotes] = React.useState(\"\");\n\n  const [indivisualArray, setIndivisualArray] = React.useState([]);\n  const [comboArray, setComboArray] = React.useState([]);\n\n  const fullnameChanged = (event) => {\n    setFullname(event.target.value);\n    setFullnameError(false);\n  };\n\n  const phoneChanged = (event) => {\n    setPhone(event.target.value);\n  };\n\n  const emailChanged = (event) => {\n    setEmail(event.target.value);\n  };\n\n  const serviceChanged = (event) => {\n    setService(event.target.value);\n    setServiceError(false)\n  };\n\n  const notesChanged = (event) => {\n    setNotes(event.target.value);\n  };\n\n  const handleClose = () => {\n    if (saving) return;\n\n    setFullname(\"\");\n    setFullnameError(false);\n    setPhone(\"\");\n    setEmail(\"\");\n    setService(\"\");\n    setServiceError(false)\n    setNotes(\"\");\n    setIndivisualArray([]);\n    setComboArray([]);\n\n    props.handleClose();\n    setSaving(false);\n  };\n\n  const validateBooking = () => {\n    let error = false;\n    if (!fullname || fullname.trim().length < 1) {\n      setFullnameError(true);\n      error = true;\n    }\n\n    if (!service || service.trim().length < 1)\n    {\n      setServiceError(true)\n      error = true\n    }\n\n    if (service === 'Indivisual Tests' && indivisualArray.length === 0)\n    {\n      setServiceError(true)\n      error = true\n    }\n\n    if (service === 'Combo STD Checks' && comboArray.length === 0)\n    {\n      setServiceError(true)\n      error = true\n    }\n\n    return !error;\n  };\n\n  const saveClicked = async () => {\n    if (!validateBooking()) {\n      return;\n    }\n\n    setSaving(true);\n\n    let packageName = service;\n    if (service === \"Indivisual Tests\") {\n      let temp = \"\";\n      indivisualArray.forEach((item, index) => {\n        temp += item;\n        if (index < indivisualArray.length - 1) {\n          temp += \" - \";\n        }\n      });\n      packageName = `Indivisual Tests : ( ${temp} )`;\n    } else if (service === \"Combo STD Checks\") {\n      let temp = \"\";\n      comboArray.forEach((item, index) => {\n        temp += item;\n        if (index < comboArray.length - 1) {\n          temp += \" - \";\n        }\n      });\n      packageName = `Combo STD Checks : ( ${temp} )`;\n    }\n\n    try {\n      await BookService.addNewBooking({\n        bookingDate: props.date,\n        bookingTime: props.time,\n        fullname: fullname,\n        phone: phone,\n        email: email,\n        packageName: packageName,\n        notes: notes,\n      });\n      setSaving(false);\n      setState((state) => ({\n        ...state,\n        bookingDialogDataChanged: !state.bookingDialogDataChanged\n          ? true\n          : false,\n      }));\n      handleClose();\n    } catch (err) {\n      console.error(err);\n      setSaving(false);\n    }\n  };\n\n  const IndivisualTestsChanged = (event, item) => {\n    const checked = event.target.checked;\n\n    if (checked) {\n      setServiceError(false)\n      if (indivisualArray.findIndex((e) => e === item) < 0)\n        setIndivisualArray([...indivisualArray, item]);\n    } else {\n      setIndivisualArray(indivisualArray.filter((e) => e !== item));\n    }\n\n    setServiceError(false)\n  };\n\n  const comboSTDChecksChanged = (event, item) => {\n    const checked = event.target.checked;\n\n    if (checked) {\n      setServiceError(false)\n      if (comboArray.findIndex((e) => e === item) < 0)\n        setComboArray([...comboArray, item]);\n    } else {\n      setComboArray(comboArray.filter((e) => e !== item));\n    }\n  };\n\n  return (\n    <React.Fragment>\n      {props.date && props.time && (\n        <React.Fragment>\n          <Dialog\n            maxWidth=\"md\"\n            open={props.open}\n            onClose={handleClose}\n            PaperComponent={PaperComponent}\n            aria-labelledby=\"form-dialog-title\"\n          >\n            <DialogTitle id=\"draggable-dialog-title\">\n              <Grid\n                container\n                spacing={2}\n                direction=\"row\"\n                justify=\"center\"\n                alignItems=\"center\"\n              >\n                <Grid item>\n                  <AddIcon style={{ color: \"#f50057\", fontSize: \"3rem\" }} />\n                </Grid>\n\n                <Grid item>\n                  <div\n                    style={{\n                      color: \"#f50057\",\n                      paddingBottom: \"10px\",\n                      fontWeight: \"800\",\n                    }}\n                  >\n                    {\" \"}\n                    ADD New Booking{\" \"}\n                  </div>\n                </Grid>\n              </Grid>\n\n              <div style={{position:\"absolute\", top: \"5px\", right: \"5px\", backgroundColor:CalendarColors.STD_COLOR, color:\"#fff\", padding: \"0px 5px\", borderRadius:\"10px\", fontSize:\"1rem\"}}>\n                    STD\n              </div>\n\n\n              <Divider />\n            </DialogTitle>\n            <DialogContent>\n              <div\n                style={{\n                  height: \"600px\",\n                }}\n              >\n                <Grid\n                  container\n                  direction=\"row\"\n                  justify=\"stretch\"\n                  spacing={2}\n                  alignItems=\"center\"\n                >\n                  <Grid item xs={12}>\n                    <Grid\n                      container\n                      direction=\"row\"\n                      justify=\"center\"\n                      alignItems=\"center\"\n                      spacing={1}\n                    >\n                      <Grid item>\n                        <DateRangeIcon className={classes.CalendarIcon} />\n                      </Grid>\n                      <Grid item>\n                        <span className={classes.DateTimeLabel}>\n                          {props.date} , {props.time}\n                        </span>\n                      </Grid>\n                    </Grid>\n                  </Grid>\n\n                  <Grid item xs={12}>\n                    <TextField\n                      fullWidth\n                      autoFocus\n                      error={fullnameError}\n                      label=\"Full Name\"\n                      value={fullname}\n                      required\n                      onChange={fullnameChanged}\n                      name=\"fullname\"\n                      id=\"fullname-id\"\n                      autoComplete=\"none\"\n                    />\n                  </Grid>\n\n                  <Grid item xs={12}>\n                    <TextField\n                      fullWidth\n                      label=\"Telephone\"\n                      value={phone}\n                      onChange={phoneChanged}\n                      name=\"phone\"\n                      id=\"phone-id\"\n                      autoComplete=\"none\"\n                    />\n                  </Grid>\n\n                  <Grid item xs={12}>\n                    <TextField\n                      fullWidth\n                      label=\"Email\"\n                      value={email}\n                      onChange={emailChanged}\n                      name=\"email\"\n                      id=\"email-id\"\n                      autoComplete=\"none\"\n                    />\n                  </Grid>\n\n                  <Grid item xs={12} md={12}>\n                    <FormControl className={classes.formControl} fullWidth required error={serviceError}>\n                      <InputLabel id=\"service-label-id\">Package</InputLabel>\n                      <Select\n                        fullWidth\n                        labelId=\"service-label-id\"\n                        id=\"service-id\"\n                        value={service}\n                        onChange={serviceChanged}\n                      >\n                        {Packages.map((item) => (\n                          <MenuItem value={item.packageName}>\n                            {item.packageName}\n                          </MenuItem>\n                        ))}\n                      </Select>\n                    </FormControl>\n                  </Grid>\n\n                  {service === \"Indivisual Tests\" && (\n                    <Grid item xs={12}>\n                      {IndivisualTests.map((item) => (\n                        <FormControlLabel\n                          control={\n                            <Checkbox\n                              checked={\n                                indivisualArray.findIndex((e) => e === item) >=\n                                0\n                              }\n                              onChange={(event) =>\n                                IndivisualTestsChanged(event, item)\n                              }\n                              name={item}\n                            />\n                          }\n                          label={item}\n                        />\n                      ))}\n                    </Grid>\n                  )}\n\n                  {service === \"Combo STD Checks\" && (\n                    <Grid item xs={12}>\n                      {comboSTDChecks.map((item) => (\n                        <FormControlLabel\n                          control={\n                            <Checkbox\n                              checked={\n                                comboArray.findIndex((e) => e === item) >= 0\n                              }\n                              onChange={(event) =>\n                                comboSTDChecksChanged(event, item)\n                              }\n                              name={item}\n                            />\n                          }\n                          label={item}\n                        />\n                      ))}\n                    </Grid>\n                  )}\n\n                  <Grid item xs={12}>\n                    <TextField\n                      fullWidth\n                      label=\"Notes\"\n                      value={notes}\n                      onChange={notesChanged}\n                      name=\"notes\"\n                      id=\"notes-id\"\n                      autoComplete=\"none\"\n                    />\n                  </Grid>\n                </Grid>\n\n                <div\n                  style={{\n                    position: \"absolute\",\n                    bottom: \"20px\",\n                    right: \"20px\",\n                  }}\n                >\n                  <Grid\n                    container\n                    direction=\"row\"\n                    justify=\"flex-end\"\n                    alignItems=\"center\"\n                    spacing={1}\n                  >\n                    <Grid item>\n                      <Button\n                        onClick={handleClose}\n                        style={{ width: \"100px\" }}\n                        disabled={saving}\n                      >\n                        back\n                      </Button>\n                    </Grid>\n                    <Grid item>\n                      <Button\n                        onClick={saveClicked}\n                        variant=\"contained\"\n                        color=\"secondary\"\n                        style={{ width: \"100px\" }}\n                        disabled={saving}\n                      >\n                        Save\n                      </Button>\n                    </Grid>\n                  </Grid>\n                </div>\n              </div>\n\n              <Backdrop className={classes.backdrop} open={saving}>\n                <CircularProgress color=\"inherit\" />\n              </Backdrop>\n            </DialogContent>\n          </Dialog>\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport dateformat from 'dateformat';\nimport BookService from '../services/BookService';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport GlobalState from '../../GlobalState';\nimport BookingDialog from '../BookingDialog';\nimport NewBookingDialog from '../NewBookingDialog';\n\nconst useStyles = makeStyles((theme) => ({\n\n    Container: {\n        width: \"100%\",\n        height : \"50px\",\n        position: \"relative\",\n        backgroundColor: \"#fff\",\n        display: \"flex\",\n        alignItems : \"flex-start\",\n        justifyItems: \"flex-start\",\n        paddingLeft : \"10px\"\n\n    },\n\n    ContainerPast: {\n        width: \"100%\",\n        paddingTop: \"50px\",\n        position: \"relative\",\n        backgroundColor: \"#fafafa\"\n    },\n    \n    DayLabel: {\n        position: \"absolute\",\n        top: \"5px\",\n        right: \"5px\",\n        color: \"#555\",\n        fontSize: \"1rem\"\n    },\n\n    DayLabelDisabled: {\n        position: \"absolute\",\n        top: \"5px\",\n        right: \"5px\",\n        color: \"#ddd\",\n        fontSize: \"1rem\"\n    },\n\n    LoadingProgress: {\n        position: \"absolute\",\n        top: \"10%\",\n        left: \"40%\",\n      },\n\n      BookingCountGauge: {\n        position: \"absolute\",\n        bottom: \"5%\",\n        left: \"8%\",\n        width : \"85%\",\n        height: \"8%\"\n    },\n\n    bookingBoxNew: {\n        display: \"flex\",\n        marginRight: \"10px\",\n        marginTop: \"5px\",\n        padding: \"10px\",\n        maxWidth: \"150px\",\n        overflowX: \"hidden\",\n        border: \"1px solid #ddd\",\n        color: \"#ccc\",\n        fontSize: \"12px\",\n        fontWeight: \"500\",\n        cursor: \"pointer\",\n        backgroundColor: \"#fff\",\n    \n        boxShadow: \"2px 4px #fafafa\",\n        transition: \"all 0.5s ease\",\n        borderRadius: \"4px\",\n    \n        \"&:hover\": {\n          background: \"#fff\",\n          color: theme.palette.secondary.main,\n          borderColor:  theme.palette.secondary.main,\n        },\n      },\n\n    bookingBox: {\n        display: \"flex\",\n        marginRight: \"10px\",\n        marginTop: \"5px\",\n        padding: \"10px\",\n        maxWidth : \"150px\",\n        overflowX: \"hidden\",\n        border : \"1px solid #eee\",\n        fontSize: \"12px\",\n        fontWeight : \"500\",\n        cursor: \"pointer\",\n        backgroundColor: \"#ebedf7\",\n        color: \"#3f51b5\",\n        boxShadow: \"2px 4px #fafafa\",\n\n        \"&:hover\": {\n            background: \"#3f51b5\",\n            color: \"#ebedf7\"\n          },\n    },\n\n    bookingBoxSampleTaken: {\n        display: \"flex\",\n        marginRight: \"10px\",\n        marginTop: \"5px\",\n        padding: \"10px\",\n        maxWidth : \"150px\",\n        overflowX: \"hidden\",\n        border : \"1px solid #eee\",\n        fontSize: \"12px\",\n        fontWeight : \"500\",\n        cursor: \"pointer\",\n        backgroundColor: \"#0066cc\",\n        color: \"#eee\",\n        boxShadow: \"2px 4px #fafafa\",\n\n        \"&:hover\": {\n            background: \"#0059b3\",\n            color: \"#fafafa\"\n          },\n    },\n\n    bookingBoxPositive: {\n        display: \"flex\",\n        marginRight: \"10px\",\n        marginTop: \"5px\",\n        padding: \"10px\",\n        maxWidth : \"150px\",\n        overflowX: \"hidden\",\n        border : \"1px solid #eee\",\n        fontSize: \"12px\",\n        fontWeight : \"500\",\n        cursor: \"pointer\",\n        backgroundColor: \"#d40b0b\",\n        color: \"#fff2f2\",\n        boxShadow: \"2px 4px #fafafa\",\n\n        \"&:hover\": {\n            background: \"#bf0000\",\n            color: \"#fff\"\n          },\n    },\n\n    bookingBoxReportSent: {\n        display: \"flex\",\n        marginRight: \"10px\",\n        marginTop: \"5px\",\n        padding: \"10px\",\n        maxWidth : \"150px\",\n        overflowX: \"hidden\",\n        border : \"1px solid #eee\",\n        fontSize: \"12px\",\n        fontWeight : \"500\",\n        cursor: \"pointer\",\n        backgroundColor: \"#009900\",\n        color: \"#eee\",\n        boxShadow: \"2px 4px #fafafa\",\n\n        \"&:hover\": {\n            background: \"#006e00\",\n            color: \"#fafafa\"\n          },\n    },\n\n  \n\n  }));\n\n\n\nconst DayViewCell = ({key, date, time}) => {\n    const classes = useStyles();\n\n    const [state, setState] = React.useContext(GlobalState);\n    const [bookings, setBookings] = React.useState(null);\n    const [filteredBookings, setFilteredBookings] = React.useState(null);\n    const [selectedBooking, setSelectedBooking] = React.useState(null);\n\n    const [refresh, setRefresh] = React.useState(true); \n\n    const [isPast, setIsPast] = React.useState(false);\n\n    const [openDialog, setOpenDialog] = React.useState(false);\n\n    const [openDialogAddNew, setOpenDialogAddNew] = React.useState(false);\n\n\n\n    useEffect( () => {\n        const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\n        setIsPast(date < todayStr);\n\n    }, [date]);\n\n    useEffect( () => \n    {\n        if (bookings) {\n\n\n            if (state.dayViewCalFilter && state.dayViewCalFilter.trim().length > 0)\n            {\n                const search = state.dayViewCalFilter.trim().toUpperCase();\n                setFilteredBookings( bookings.filter(booking => booking.fullname.toLowerCase().indexOf(search.toLowerCase()) >= 0\n                                                          \n                    \n                    ));\n            }\n            else\n            {\n                setFilteredBookings([...bookings]);\n            }\n        }\n\n    }, [state.dayViewCalFilter, bookings]);\n \n\n\n    useEffect ( () => {\n       \n        const fetchData = async () =>\n        {\n            if (!date || date.length <= 0 || !time || time.length <= 0)\n            {\n                return;\n            }\n         \n            // if (isPast)\n            // {\n            //     setBookings([]);\n            //     return;\n            // }\n    \n            setBookings(null);\n    \n            var res = state.AdminCalendarCache?.find(record => record.method === 'getBookingsByDateStrandTime' && record.query === `${date}${time}`)?.res;\n            if (!res || openDialog || openDialogAddNew)\n            {\n                res = await BookService.getAllBookingsByDateStrandTime(date, time);\n                setState(state => ({...state, AdminCalendarCache : [...state.AdminCalendarCache, {method: 'getBookingsByDateStrandTime' , query : `${date}${time}`, res: res}]}));\n            }\n          \n          \n            if (res.data.status === 'OK')\n            {\n                setBookings(res.data.bookings);\n            }   \n        }\n\n        if (openDialog || openDialogAddNew)\n        {\n            setState(state => ({...state, AdminCalendarCache : state.AdminCalendarCache.filter(record => !(record.method === 'getBookingsByDateStrandTime' && record.query ===  `${date}${time}`))}));\n            setState(state => ({...state, AdminCalendarCache : state.AdminCalendarCache.filter(record => !(record.method === 'getBookingsCountByDateStrandTime' && record.query ===  `${date}${time}`))}));\n            setState(state => ({...state, AdminCalendarCache : state.AdminCalendarCache.filter(record => !(record.method === 'getBookingsCountByDateStr' && record.query ===  date))}));\n        }\n\n         fetchData();\n     \n    }, [date, time, state.bookingDialogDataChanged]);\n\n    const bookingCliked = (event, booking) =>\n    {\n        setSelectedBooking(booking);\n        setOpenDialog(true);\n    }\n\n    \n\n    const getBookingClass = (status) =>\n    {\n        switch (status) {\n\n            case 'patient_attended':\n                return classes.bookingBoxSampleTaken;\n            default : \n                return classes.bookingBox;\n        }\n    }\n\n    const addNewBookingClicked = () =>\n    {\n        setOpenDialogAddNew(true)\n    }\n\n    const getBookingsBox = (_bookings) =>\n    {\n        if (_bookings === null) \n        {\n            return (\n                <div className={classes.LoadingProgress}>\n                      <CircularProgress disableShrink  />\n                </div>\n            );  \n        }\n        else if (_bookings.length >= 0)\n        {\n           return (\n            <React.Fragment>\n            {_bookings.map((booking) => (\n              <div\n                style={booking.tr ? { borderTop: \"5px solid #d00fd6\" } : {}}\n                className={getBookingClass(booking.status)}\n                onClick={(event) => bookingCliked(event, booking)}\n              >\n                {`${booking.fullname}`.substring(0, 15)}\n              </div>\n            ))}\n  \n            <div className={classes.bookingBoxNew} onClick={addNewBookingClicked}> + Add New Booking</div>\n          </React.Fragment>\n           );\n        }\n    }\n\n\n    const handleCloseDialog = () =>\n    {\n        setOpenDialog(false);\n    }\n\n    const handleCloseDialogAddNew = () => {\n        setOpenDialogAddNew(false);\n      };\n\n    return (\n        <React.Fragment>\n\n            <div className={classes.Container}>\n\n              {getBookingsBox(filteredBookings)}\n\n            </div>\n\n            <BookingDialog\n                booking={selectedBooking}\n                open={openDialog}\n                onClose={handleCloseDialog}\n            />\n\n        <NewBookingDialog\n        date={date}\n        time={time}\n        open={openDialogAddNew}\n        handleClose={handleCloseDialogAddNew}\n        />\n\n        </React.Fragment>\n\n\n    );\n}\n\nDayViewCell.propTypes = {\n    key: PropTypes.string.isRequired,\n    date: PropTypes.string.isRequired,\n    time: PropTypes.string.isRequired,\n  };\n\n \n  \nexport default DayViewCell;","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport DayViewCell from './DayViewCell';\nimport dateformat from 'dateformat';\n\n\n\n\nconst rows = [\n    '09:00 AM',\n    '09:15 AM', \n    '09:30 AM', \n    '09:45 AM',\n    '10:00 AM',\n    '10:15 AM',\n    '10:30 AM',\n    '10:45 AM',\n    '11:00 AM',\n    '11:15 AM',\n    '11:30 AM',\n    '11:45 AM',\n    '12:00 PM',\n    '12:15 PM',\n    '12:30 PM',\n    '12:45 PM',\n    '01:00 PM',\n    '01:15 PM',\n    '01:30 PM',\n    '01:45 PM',\n    '02:00 PM',\n    '02:15 PM',\n    '02:30 PM',\n    '02:45 PM',\n    '03:00 PM',\n    '03:15 PM',\n    '03:30 PM',\n    '03:45 PM',\n    '04:00 PM',\n    '04:15 PM',\n    '04:30 PM',\n    '04:45 PM',\n    '05:00 PM',\n    '05:15 PM',\n    '05:30 PM',\n    '05:45 PM',\n];\n\nconst useStyles = makeStyles((theme) => ({\n\n    table: {\n        width: \"100%\",\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        overflowY: \"auto\"\n    },\n\n    th: {\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        verticalAlign: \"middle\",\n        fontcolor: \"#555\",\n        fontWeight: \"400\",\n        fontSize: \"15px\",\n        paddingTop: \"5px\",\n        paddingBottom: \"5px\",\n        width: \"12%\", \n    },\n\n    td: {\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        verticalAlign: \"middle\",\n        height : \"50px\",\n        width: \"84%\", \n    },\n\n    titleLabel: {\n        paddingBottom: \"17px\",\n        paddingTop: \"17px\",\n        color: \"#777\",\n        fontSize: \"16px\"\n    },\n\n    titleLabelToday: {\n        paddingBottom: \"17px\",\n        paddingTop: \"17px\",\n        color: \"#fff\",\n        backgroundColor: \"#1a73e8\",\n        fontSize: \"16px\"\n    },\n\n  }));\n\nconst DayView = ({date}) => {\n    const classes = useStyles();\n\n    return (\n        <React.Fragment>\n\n        <div style={{overflowY: \"scroll\" , height: \"60px\"}}>\n            <table className={classes.table}>\n                <thead>\n                    <tr>\n                        <th style={{width: \"7%\"}}>\n                        \n                        </th>\n                        <th style={{width: \"84%\"}}>\n                                <div className={(dateformat(new Date(),'yyyy-mm-dd') === dateformat(date, 'yyyy-mm-dd')) ? classes.titleLabelToday : classes.titleLabel }>\n                                        {dateformat(date,'dddd')}\n                                </div>                                \n                        </th>\n                    </tr>\n                </thead>\n             </table>\n\n        </div>\n\n            <div style={{overflowY: \"scroll\" , height: \"70vh\"}}>\n                <table className={classes.table}>   \n                    <tbody>\n                        {rows.map(row => (\n                            <tr>\n                                <td style={{width: \"7%\"}}>\n                                    {row}\n                                </td>\n                               \n                                <td className={classes.td}>\n                                     <DayViewCell key={`${dateformat(date,'yyyy-mm-dd')}-${row}`} date={dateformat(date,'yyyy-mm-dd')} time={row}/>  \n                                </td>\n                            \n                            </tr>\n                        ))}            \n                    </tbody>\n                </table>\n            </div>                    \n      \n        </React.Fragment>\n\n\n    );\n}\n\nDayView.propTypes = {\n    date: PropTypes.any.isRequired\n  };\n\n\nexport default DayView;","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MonthView from './MonthView';\nimport { Button, Grid, IconButton, InputAdornment, TextField, Tooltip } from '@material-ui/core';\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\n\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport WeekView from './WeekView';\nimport dateformat from 'dateformat';\nimport DayView from './DayView';\nimport GlobalState from '../../GlobalState';\n\nimport CloseIcon from '@material-ui/icons/Close';\n\n\n\nconst monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n  \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n];\n\nconst useStyles = makeStyles((theme) => ({\n\n    title: {\n        textAlign: \"center\",\n        fontSize: \"24px\",\n        fontColor: \"#333\"\n    },\n\n  }));\n\nexport default function CalendarView() {\n    const classes = useStyles();\n\n    const [state, setState] = React.useContext(GlobalState);\n\n    const [month, setMonth] = React.useState(new Date().getMonth() + 1);\n    const [year, setYear] = React.useState(new Date().getFullYear());\n\n    const [day, setDay] = React.useState(new Date());\n\n    const [firstDayofWeek, setFirstDayofWeek] = React.useState(new Date());\n\n    const [weekDates, setWeekDates] = React.useState([]);\n\n    const [mode, setMode] = React.useState('month');\n    const [selectedTab, setSeletedTab] = React.useState('month');\n\n    const [filter,setFilter] = React.useState('');\n\n    const filterChanged = (event) =>{\n        setFilter(event.target.value);\n        setState(state => ({...state, dayViewCalFilter : event.target.value?.trim()?.toUpperCase()}))\n      }\n\n      const removeFilter = () =>\n      {\n        setFilter('');\n        setState(state => ({...state, dayViewCalFilter : ''}));\n      }\n\n\n    useEffect( () => {\n        const today = new Date();\n        const dayofWeek = today.getDay();\n        const firstdayofweek = new Date(today.getTime() - ( dayofWeek * 86400000));\n        setFirstDayofWeek(firstdayofweek);\n        setState(state => ({...state, AdminCalendarCache : []}));\n\n        return () =>\n        {\n            setState(state => ({...state, AdminCalendarCache : []}));\n            removeFilter();\n        }\n       \n    }, []);\n\n\n    useEffect( () => {\n        const dates = [];\n        for (var i = 0; i < 7 ; i++)\n        {\n            dates.push(new Date(firstDayofWeek.getTime() + ( i * 86400000)));\n        }\n        setWeekDates(dates);\n\n    }, [firstDayofWeek]);\n\n    const handlePrevButton = (event) =>\n    {\n       if (mode === 'month')\n       {\n            if (month === 1)\n            {\n                setYear(year - 1);\n            } \n\n            const newMonth = month === 1 ? 12 : month - 1;\n            setMonth(newMonth);\n\n            const newDay = new Date(year, newMonth - 1 , 1, 0 ,0 ,0 ,0);\n            setDay(newDay);\n\n            const dayofWeek = newDay.getDay();\n            setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\n\n       } \n       else if (mode === 'week')\n       {\n           const newFirstDayofWeek = new Date(firstDayofWeek.getTime() - ( 7 * 86400000));\n           setFirstDayofWeek(newFirstDayofWeek);\n\n           setDay(newFirstDayofWeek);\n           setMonth(newFirstDayofWeek.getMonth() + 1);\n           setYear(newFirstDayofWeek.getFullYear());\n\n       }\n       else if (mode === 'day')\n       {\n           const newDay = new Date(day.getTime() - ( 1 * 86400000));\n           setDay(newDay);\n\n           const dayofWeek = newDay.getDay();\n           setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\n\n           setMonth(newDay.getMonth() + 1);\n           setYear(newDay.getFullYear());\n       }\n    }\n\n    const handleNextButton = (event) =>\n    {\n        if (mode === 'month')\n        {\n            if (month === 12)\n            {\n                setYear(year + 1);\n            } \n       \n            const newMonth = month === 12 ? 1 : month + 1;\n            setMonth(newMonth);\n\n            const newDay = new Date(year, newMonth - 1 , 1, 0 ,0 ,0 ,0);\n            setDay(newDay);\n\n            const dayofWeek = newDay.getDay();\n            setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\n        }\n        else if (mode === 'week')\n        {\n            const newFirstDayofWeek = new Date(firstDayofWeek.getTime() + ( 7 * 86400000));\n            setFirstDayofWeek(newFirstDayofWeek);\n\n            setDay(newFirstDayofWeek);\n            setMonth(newFirstDayofWeek.getMonth() + 1);\n            setYear(newFirstDayofWeek.getFullYear());\n\n        }\n        else if (mode === 'day')\n        {\n            const newDay = new Date(day.getTime() + ( 1 * 86400000));\n            setDay(newDay);\n\n            const dayofWeek = newDay.getDay();\n            setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\n \n            setMonth(newDay.getMonth() + 1);\n            setYear(newDay.getFullYear());\n        }\n    }\n\n    const goToday = (event) => {\n        const newDay = new Date();\n        const dayofWeek = newDay.getDay();\n        setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\n        setDay(newDay);\n        setMonth(newDay.getMonth() + 1);\n        setYear(newDay.getFullYear());\n    }\n\n    const dayClicked = (event, date) =>\n    {\n        const newDay = new Date(date);\n        const dayofWeek = newDay.getDay();\n        setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\n        setDay(newDay);\n        setMonth(newDay.getMonth() + 1);\n        setYear(newDay.getFullYear());\n        setSeletedTab('day');\n        setMode('day');\n    }\n\n    const getContentFromMode = (_mode) => {\n        if (_mode === 'month')\n        {\n            return (\n                <MonthView dayClicked={dayClicked} month={month} year={year}/>    \n            );\n        }    \n        else if (_mode === 'week')\n        {\n            return (\n                    <WeekView dayClicked={dayClicked} dates={weekDates}/>\n            );\n            \n        }\n        else if (_mode === 'day')\n        {\n            return (\n                <DayView date={day}/>\n            );\n        }\n    }\n\n    const getCalendarTitleFromMode = (_mode) => {\n        if (_mode === 'month')\n        {\n            return (\n                <span className={classes.title}> {`${monthNames[month - 1]} ${year}`} </span>   \n            );\n        }    \n        else if (_mode === 'week')\n        {\n            const endOfWeek = new Date(firstDayofWeek.getTime() + ( 6 * 86400000));\n            let endofWeekStr = '';\n            if (endOfWeek.getMonth() === firstDayofWeek.getMonth())\n            {\n                endofWeekStr = dateformat(endOfWeek,'d');\n            }else\n            {\n                endofWeekStr = dateformat(endOfWeek,'mmm d');\n            }\n\n            return (\n                <span className={classes.title}> {`${dateformat(firstDayofWeek,'mmm d')} - ${endofWeekStr}, ${year}`} </span>\n            );\n            \n        }\n        else if (_mode === 'day')\n        {\n            return (\n                <span className={classes.title}> {`${dateformat(day,'mmmm d, yyyy')}`} </span>\n            );\n        }\n    }\n\n\n    const handleTabChanged = (event, value) => {\n        if (value && value.length)\n        {\n          setSeletedTab(value);\n          setMode(value);\n        }\n    };\n\n    const getPrevButtonTitle = (_mode) =>\n    {\n        return `Previuos ${mode}`;\n    }\n\n    const getNextButtonTitle = (_mode) =>\n    {\n        return `Next ${mode}`;\n    }\n\n    return (\n        <React.Fragment>\n\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"space-between\"\n            alignItems=\"center\"\n            style= {{marginBottom: \"10px\", marginTop: \"0px\"}}\n            >  \n\n            <Grid item md={3}>\n                <div  style={{display:\"flex\", alignItems: \"flex-start\", justifyContent: \"flex-start\" , paddingLeft: \"10px\"}}>\n                    <Tooltip title={getPrevButtonTitle(mode)} placement=\"bottom-start\">\n                        <IconButton \n                                color=\"default\" \n                                aria-label=\"prev\"\n                                onClick = {handlePrevButton}\n                                >\n                            <NavigateBeforeIcon style={{fontSize: '2rem'}}/>\n                        </IconButton>\n                    </Tooltip>\n\n                    <Tooltip title={getNextButtonTitle(mode)} placement=\"bottom-end\">\n                        <IconButton \n                                color=\"default\" \n                                aria-label=\"next\"\n                                onClick = {handleNextButton}\n                                >\n                            <NavigateNextIcon style={{fontSize: '2rem'}}/>\n                        </IconButton>\n                    </Tooltip>\n\n                    <Button style={{marginTop: \"11px\", marginLeft: \"10px\"}} onClick={goToday} variant=\"outlined\"> Today </Button>\n                </div>\n\n            </Grid>\n\n            <Grid item md={6}>\n\n                    <Grid\n                        container\n                        direction=\"row\"\n                        justify=\"center\"\n                        alignItems=\"flex-end\"\n                        spacing = {3}\n                        >\n                            <Grid item>\n                                    {getCalendarTitleFromMode(mode)}\n                            </Grid>\n                            {mode === 'day' && (\n                                        <Grid item>\n                                                <TextField\n                                                    variant=\"standard\"\n                                                    style={{marginBottom : \"5px\"}}\n                                                    value={filter}\n                                                    onChange={filterChanged}\n                                                    margin=\"normal\"\n                                                    size=\"small\"\n                                                    id=\"filter\"\n                                                    label=\"Filter\"\n                                                    name=\"filter\"\n                                                    autoComplete=\"off\"\n                                                    InputProps={{\n                                                        endAdornment : \n                                                            <InputAdornment position=\"end\">\n                                                                <Tooltip title=\"Clear\">\n                                                                            <IconButton\n                                                                            aria-label=\"remove filter\"\n                                                                            onClick={() => removeFilter()}\n                                                                            onMouseDown={() => removeFilter()}\n                                                                        >\n                                                                            <CloseIcon/>\n                                                                        </IconButton>\n                                                                </Tooltip>\n                                                            \n                                                            </InputAdornment>\n                                                          \n                                                    }}\n                                                   \n                                                />\n                                        </Grid>\n                            )}\n                           \n                    </Grid>\n                \n            </Grid>\n\n            <Grid item md={3}>\n                <div  style={{display:\"flex\", alignItems: \"flex-end\", justifyContent: \"flex-end\", paddingRight: \"10px\" }}>\n                    <ToggleButtonGroup\n                        value={selectedTab}\n                        exclusive\n                        onChange={handleTabChanged}\n                        aria-label=\"select view mode\"\n                    >\n                        <ToggleButton style={selectedTab === 'month' ? {width: \"80px\", color: \"#3f51b5\", backgroundColor: \"#ebedf7\" } : {width: \"80px\"}} value=\"month\" aria-label=\"month view\">\n                                month\n                        </ToggleButton>\n                        <ToggleButton style={selectedTab === 'week' ? {width: \"80px\", color: \"#3f51b5\", backgroundColor: \"#ebedf7\"} : {width: \"80px\"}}  value=\"week\" aria-label=\"week view\">\n                                week\n                        </ToggleButton>\n                        <ToggleButton style={selectedTab === 'day' ? {width: \"80px\", color: \"#3f51b5\", backgroundColor: \"#ebedf7\"} : {width: \"80px\"}} value=\"day\" aria-label=\"day view\">\n                                day\n                        </ToggleButton>\n                    </ToggleButtonGroup>\n                </div>\n            </Grid>\n\n           </Grid> \n\n             {getContentFromMode(mode)}\n\n        </React.Fragment>\n\n\n    );\n\n}","import axios from 'axios';\nimport { authToken, backendAPI } from '../../GlobalPath';\n\nexport default axios.create({\n  baseURL: backendAPI,\n  headers : {\n      'Authorization' : authToken,\n       'Content-Type': 'application/json',\n  }\n});","import API from './api';\nimport axiosRetry from 'axios-retry';\n\nexport default class BookService {\n\n   static getAllCodes = () =>\n   {\n       return API.get(`/api/medex/invoice/getallbloodcodes`)\n   }\n\n   \n\n   static getNewBloodResultsCount = () =>\n   {\n      return API.get(`/api/blood/book/getnewbloodresultscount`);\n   }\n\n   static getSentBloodReports = () =>\n   {\n      return API.get(`/api/blood/book/getsentbloodreports`);\n   }\n\n\n   static getArchivedBloodReports = () =>\n   {\n      return API.get(`/api/blood/book/getarchivedbloodreports`);\n   }\n\n   static getNewMatchedBloodReports = () =>\n   {\n      return API.get(`/api/blood/book/getnewmatchedbloodreports`);\n   }\n\n   static getArchivedMatchedBloodReports = () =>\n   {\n      return API.get(`/api/blood/book/getarchivedmatchedbloodreports`);\n   }\n\n   static getNewUnmatchedBloodReports = () =>\n   {\n      return API.get(`/api/blood/book/getnewunmatchedbloodreports`);\n   }\n\n   static getArchivedUnmatchedBloodReports = () =>\n   {\n      return API.get(`/api/blood/book/getarchivedunmatchedbloodreports`);\n   }\n\n   static sendBloodReportEmail = (bloodreportId, email, notes) =>\n   {\n      return API.post(`/api/blood/book/sendbloodreportemail?id=${bloodreportId}`, {email, notes});\n   }\n\n   static updateBloodReport = (bloodreportId, email, notes) =>\n   {\n      return API.post(`/api/blood/book/updatebloodreport?id=${bloodreportId}`, {email, notes});\n   }\n\n\n   static archiveBloodReport = (bloodreportId) =>\n   {\n      return API.post(`/api/blood/book/archivebloodreport?id=${bloodreportId}`);\n   }\n\n   static unArchiveBloodReport = (bloodreportId) =>\n   {\n      return API.post(`/api/blood/book/unarchivebloodreport?id=${bloodreportId}`);\n   }\n\n\n\n\n   static addNewBooking = (payload) =>\n   {\n      return API.post(`/api/blood/book/addnewbooking`, payload);\n   }\n   \n   static sendRegFormEmail = (bookingId) =>\n   {\n      return API.post(`/api/blood/book/sendregformemail?id=${bookingId}`);\n   }\n   static payBooking = (bookingId,price, paymentMethod, corporate) =>\n   {\n      return API.post(`/api/blood/book/paybooking?id=${bookingId}&paymentmethod=${paymentMethod}&corporate=${corporate}&price=${price}`);\n   }\n\n   static unPayBooking = (bookingId) =>\n   {\n      return API.post(`/api/blood/book/unpaybooking?id=${bookingId}`);\n   }\n\n   static getShouldRefundsCount = () =>\n   {\n      return API.get(`/api/blood/book/getshouldrefundscount`);\n   }  \n\n   static refundBooking = (bookingId) =>\n   {\n      return API.post(`/api/blood/payment/refundpayment`, {bookingId: bookingId});\n   }\n\n   static getBookingsStatsByDateStr = (dateStr) =>\n   {\n      return API.get(`/api/blood/book/getbookingsstatsbydatestr?date=${dateStr}`);\n   }\n\n   static getBookingsCountByDateStr = (dateStr) =>\n   {\n      return API.get(`/api/blood/book/getbookingscountbydatestr?date=${dateStr}`);\n   }\n\n   static getAllBookingsCountAll = () =>\n   {\n      return API.get(`/api/blood/book/getallbookingscountall`);\n   }\n\n   static getBookingsCountByDateStrandTime = (dateStr, time, source) =>\n   {\n      return API.get(`/api/blood/book/getbookingscountbydatestrandtime?date=${dateStr}&time=${time}`, {cancelToken: source.token});\n   }\n\n   static getBookingsByDateStrandTime = (dateStr, time) =>\n   {\n      return API.get(`/api/blood/book/getbookingsbydatestrandtime?date=${dateStr}&time=${time}`);\n   }\n\n\n   static getAllBookingsCountByDateStr = (dateStr) =>\n   {\n      return API.get(`/api/blood/book/getallbookingscountbydatestr?date=${dateStr}`);\n   }\n\n   static getAllBookingsCountByDateStrandTime = (dateStr, time, source) =>\n   {\n      return API.get(`/api/blood/book/getallbookingscountbydatestrandtime?date=${dateStr}&time=${time}`, {cancelToken: source.token});\n   }\n\n   static getAllBookingsByDateStrandTime = (dateStr, time) =>\n   {\n      return API.get(`/api/blood/book/getallbookingsbydatestrandtime?date=${dateStr}&time=${time}`);\n   }\n\n   static changeBackToBookingMade = (id) =>\n   {\n      return API.post(`/api/blood/book/changebacktobookingmade?id=${id}`);\n   }\n\n   static changeToPatientAttended = (id) =>\n   {\n      return API.post(`/api/blood/book/changetopatientattended?id=${id}`);\n   }\n\n   static updateBooking = (payload) =>\n   {\n      return API.post(`/api/blood/book/updatebookappointment`, payload);\n   } \n\n   static updateBookingTime = (payload) =>\n   {\n      return API.post(`/api/blood/book/updatebookappointmenttime`, payload);\n   } \n\n   static deleteBooking = (id) =>\n   {\n      return API.post(`/api/blood/book/deletebookappointment?id=${id}`);\n   } \n\n   static unDeleteBooking = (id) =>\n   {\n      return API.post(`/api/blood/book/undeletebookappointment?id=${id}`);\n   } \n   \n    static getBookingsByRef = (ref) =>\n    {\n       return API.get(`/api/blood/book/getbookingsbyref?ref=${ref}`);\n    }\n\n    static getBookingById = (id) =>\n    {\n       return API.get(`/api/blood/book/getbookingbyid?id=${id}`);\n    }\n\n    static getAllBookings = (limit) =>\n    {\n      if (!limit) limit = 25 \n      return API.get(`/api/blood/book/getallbookings?limit=${limit}`);\n    }\n\n    static getDeletedBookings= (limit) =>\n    {\n      if (!limit) limit = 25 \n       return API.get(`/api/blood/book/getdeletedbookings?limit=${limit}`);\n    }\n\n    static getTodayBookings= () =>\n    {\n       return API.get(`/api/blood/book/gettodaybookings`);\n    }\n\n    static getOldBookings= (limit) =>\n    {\n      if (!limit) limit = 25 \n       return API.get(`/api/blood/book/getoldbookings?limit=${limit}`);\n    }\n\n    static getFutureBookings= (limit) =>\n    {\n      if (!limit) limit = 25 \n       return API.get(`/api/blood/book/getfuturebookings?limit=${limit}`);\n    }\n\n    static getRecentBookings= () =>\n    {\n       return API.get(`/api/blood/book/getrecentbookings`);\n    }\n\n    static getRecentBookingsAll= (limit) =>\n    {\n      if (!limit) limit = 25 \n       return API.get(`/api/blood/book/getrecentbookingsall?limit=${limit}`);\n    }\n}","import API from './api';\n\nexport default class PDFService {\n\n\n    static downloadBloodRegForm = (id) =>\n    {\n       return API.get(`/api/pdf/downloadbloodregform?id=${id}`, {\n        responseType: 'arraybuffer',\n        id: id,\n        headers: {\n            Accept: 'application/pdf',\n        }\n        });\n    }\n\n    static downloadPdfLabReport = (id) =>\n    {\n       return API.get(`/api/pdf/downloadpdflabreport?id=${id}`, {\n        responseType: 'arraybuffer',\n        headers: {\n            Accept: 'application/pdf',\n        }\n        });\n    }\n\n\n}","export const corporates = [\n    'Visa Medical'\n]","import React, { useEffect, useRef, useState } from \"react\";\nimport BookService from \"./services/BookService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {\n  Backdrop,\n  Button,\n  Checkbox,\n  CircularProgress,\n  Divider,\n  FormControlLabel,\n  Grid,\n  InputAdornment,\n  InputLabel,\n  Link,\n  makeStyles,\n  MenuItem,\n  Select,\n  TextField,\n  Tooltip,\n} from \"@material-ui/core\";\nimport GlobalState from \"../GlobalState\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport CreditCardIcon from \"@material-ui/icons/CreditCard\";\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\n\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Draggable from \"react-draggable\";\nimport Paper from \"@material-ui/core/Paper\";\n\nimport Alert from \"@material-ui/lab/Alert\";\n\nimport PropTypes from \"prop-types\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport Box from \"@material-ui/core/Box\";\n\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport { corporates } from \"./Corporates\";\nimport NumberFormat from \"react-number-format\";\n\n\nvar interval;\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    marginTop: theme.spacing(0),\n    marginBottom: theme.spacing(1),\n  },\n\n  refreshButton: {\n    marginLeft: theme.spacing(2),\n  },\n\n  checkIcon: {\n    color: \"green\",\n  },\n\n  closeIcon: {\n    color: \"red\",\n  },\n\n  RefLink: {\n    cursor: \"pointer\",\n  },\n\n  BookedLabel: {\n    backgroundColor: \"#606060\",\n    color: \"#fff\",\n    paddingRight: \"10px\",\n    paddingLeft: \"10px\",\n  },\n\n  PatientAttendedLabel: {\n    backgroundColor: \"#0066aa\",\n    color: \"#fff\",\n    paddingRight: \"15px\",\n    paddingLeft: \"10px\",\n  },\n\n  SampleTakenLabel: {\n    backgroundColor: \"#0066cc\",\n    color: \"#fff\",\n    paddingRight: \"40px\",\n    paddingLeft: \"10px\",\n  },\n\n  ReportSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"90px\",\n    paddingLeft: \"10px\",\n  },\n\n  ReportCertSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"68px\",\n    paddingLeft: \"10px\",\n  },\n\n  archiveButton: {},\n\n  smartMatchButton: {\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    marginRight: \"10px\",\n    // padding: \"10px\"\n  },\n\n  infoTitle: {\n    fontWeight: \"400\",\n  },\n\n  infoData: {\n    paddingLeft: \"10px\",\n    fontWeight: \"800\",\n  },\n\n  matchButton: {\n    marginTop: \"30px\",\n    marginBottom: \"20px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  resendButton: {\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  resendFilesButton: {\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n    backgroundColor: \"#3792ad\",\n    \"&:hover\": {\n      background: \"#2f798f\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  cancelButton: {\n    marginBottom: \"10px\",\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"90px\",\n    paddingRight: \"90px\",\n  },\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 5,\n    color: \"#fff\",\n  },\n}));\n\nfunction NumberFormatCustom(props) {\n  const { inputRef, onChange, ...other } = props;\n\n  return (\n    <NumberFormat\n      {...other}\n      getInputRef={inputRef}\n      onValueChange={(values) => {\n        onChange({\n          target: {\n            name: props.name,\n            value: values.value,\n          },\n        });\n      }}\n      thousandSeparator\n      isNumericString\n      prefix=\"\"\n    />\n  );\n}\n\nNumberFormatCustom.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\n\nconst BorderLinearProgress = withStyles((theme) => ({\n  root: {\n    height: 10,\n    borderRadius: 5,\n  },\n  colorPrimary: {\n    backgroundColor: \"#cedbce\", //theme.palette.grey[theme.palette.type === 'light' ? 200 : 700],\n  },\n  bar: {\n    borderRadius: 5,\n    backgroundColor: \"#2f942e\",\n  },\n}))(LinearProgress);\nfunction LinearProgressWithLabel(props) {\n  return (\n    <Box display=\"flex\" alignItems=\"center\">\n      <Box width=\"100%\" mr={1}>\n        <BorderLinearProgress variant=\"determinate\" {...props} />\n      </Box>\n      <Box minWidth={35}>\n        <Typography\n          style={{ fontWeight: \"800\", color: \"#5e855e\" }}\n          variant=\"body2\"\n          color=\"textSecondary\"\n        >{`${Math.round(props.value)}%`}</Typography>\n      </Box>\n    </Box>\n  );\n}\n\nLinearProgressWithLabel.propTypes = {\n  /**\n   * The value of the progress indicator for the determinate and buffer variants.\n   * Value between 0 and 100.\n   */\n  value: PropTypes.number.isRequired,\n};\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable\n      handle=\"#draggable-dialog-title\"\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\n    >\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nexport default function PayDialog(props) {\n  const classes = useStyles();\n\n  const [state, setState] = React.useContext(GlobalState);\n  const [paymentMethod, setPaymentMethod] = useState(\"credit card\");\n  const [corporate, setCorporate] = useState(corporates[0]);\n  const [saving, setSaving] = useState(false);\n\n  const [price, setPrice] = useState(\"\");\n  const [priceError, setPriceError] = useState(false);\n\n  useEffect( () => {\n    if (props.price)\n    {\n      setPrice(`${props.price}`)\n    }else\n    {\n      setPrice('')\n    }\n  }, [props.price, props.open])\n\n  const priceChanged = (event) =>\n  {\n    setPrice(event.target.value)\n    setPriceError(false)\n  }\n\n  const paymentMethodChanged = (event) => {\n    setPaymentMethod(event.target.value);\n  };\n\n  const handleClose = () => {\n    if (saving) return;\n\n    props.handleClose();\n    setPaymentMethod(\"credit card\");\n    setPrice('')\n    setCorporate(corporates[0]);\n    setSaving(false);\n  };\n\n  const corporateChanged = (event) => {\n    setCorporate(event.target.value);\n  };\n\n  const payClicked = async () => {\n\n\n    if (!price || price.trim().length === 0 || price === '0')\n    {\n      setPriceError(true)\n      return\n    }\n\n    setSaving(true);\n\n  \n\n    try {\n      await BookService.payBooking(\n        props.booking._id,\n        price,\n        paymentMethod,\n        paymentMethod === \"corporate\" ? corporate : \"\"\n      );\n      setSaving(false);\n      setState((state) => ({\n        ...state,\n        bookingPayChanged: !state.bookingPayChanged ? true : false,\n      }));\n      handleClose();\n    } catch (err) {\n      console.error(err);\n      setSaving(false);\n    }\n  };\n\n  return (\n    <React.Fragment>\n      {props.booking && (\n        <React.Fragment>\n          <Dialog\n            maxWidth=\"xs\"\n            open={props.open}\n            onClose={handleClose}\n            PaperComponent={PaperComponent}\n            aria-labelledby=\"form-dialog-title\"\n          >\n            <DialogTitle id=\"draggable-dialog-title\">\n              <Grid\n                container\n                spacing={2}\n                direction=\"row\"\n                justify=\"center\"\n                alignItems=\"center\"\n              >\n                <Grid item>\n                  <CreditCardIcon\n                    style={{ color: \"#f50057\", fontSize: \"3rem\" }}\n                  />\n                </Grid>\n\n                <Grid item>\n                  <div\n                    style={{\n                      color: \"#f50057\",\n                      paddingBottom: \"10px\",\n                      fontWeight: \"800\",\n                    }}\n                  >\n                    {\" \"}\n                    PAY the CHARGE{\" \"}\n                  </div>\n                </Grid>\n              </Grid>\n\n              <Divider />\n            </DialogTitle>\n            <DialogContent>\n              <div\n                style={{\n                  height: \"300px\",\n                }}\n              >\n                <Grid\n                  container\n                  direction=\"column\"\n                  justify=\"space-between\"\n                  spacing={2}\n                  alignItems=\"flex-start\"\n                >\n                  <Grid item>\n                  <TextField\n                                autoFocus\n                                error={priceError}\n                                label=\"TOTAL Charges\"\n                                value={price}\n                                fullWidth\n                                required\n                                onChange={priceChanged}\n                                name=\"product-price\"\n                                id=\"product-price-id\"\n                                InputProps={{\n                                  inputComponent: NumberFormatCustom,\n                                  startAdornment: (\n                                    <InputAdornment position=\"start\">\n                                      £\n                                    </InputAdornment>\n                                  ),\n                                }}\n                              />\n\n                  </Grid>\n\n                  <Grid item>\n                    <div style={{ fontSize: \"17px\" }}>\n                      {\" \"}\n                      How do you want to pay?{\" \"}\n                    </div>\n                  </Grid>\n\n                  <Grid item>\n                    <FormControl component=\"fieldset\">\n                      <RadioGroup\n                        aria-label=\"paymentMethod\"\n                        name=\"paymentMethod\"\n                        value={paymentMethod}\n                        onChange={paymentMethodChanged}\n                      >\n                        <FormControlLabel\n                          value=\"credit card\"\n                          control={<Radio />}\n                          label=\"Credit Card\"\n                        />\n                        <FormControlLabel\n                          value=\"cash\"\n                          control={<Radio />}\n                          label=\"Cash\"\n                        />\n                        <FormControlLabel\n                          value=\"corporate\"\n                          control={<Radio />}\n                          label=\"Corporate\"\n                        />\n                      </RadioGroup>\n\n                      {paymentMethod === \"corporate\" && (\n                        <FormControl\n                          style={{ marginTop: \"10px\" }}\n                          className={classes.formControl}\n                        >\n                          <Select\n                            labelId=\"select-corporate\"\n                            id=\"select-corporate-id\"\n                            value={corporate}\n                            onChange={corporateChanged}\n                          >\n                            {corporates.map((element) => (\n                              <MenuItem\n                                value={element}\n                              >{`${element}`}</MenuItem>\n                            ))}\n                          </Select>\n                        </FormControl>\n                      )}\n                    </FormControl>\n                  </Grid>\n                </Grid>\n\n                <Grid item></Grid>\n\n                <div\n                  style={{\n                    position: \"absolute\",\n                    bottom: \"20px\",\n                    right: \"20px\",\n                  }}\n                >\n                  <Grid\n                    container\n                    direction=\"row\"\n                    justify=\"flex-end\"\n                    alignItems=\"center\"\n                    spacing={1}\n                  >\n                    <Grid item>\n                      <Button\n                        onClick={handleClose}\n                        style={{ width: \"100px\" }}\n                        disabled={saving}\n                      >\n                        back\n                      </Button>\n                    </Grid>\n                    <Grid item>\n                      <Button\n                        onClick={payClicked}\n                        variant=\"contained\"\n                        color=\"secondary\"\n                        style={{ width: \"100px\" }}\n                        disabled={saving}\n                      >\n                        Pay\n                      </Button>\n                    </Grid>\n                  </Grid>\n                </div>\n              </div>\n\n              <Backdrop className={classes.backdrop} open={saving}>\n                <CircularProgress color=\"inherit\" />\n              </Backdrop>\n            </DialogContent>\n          </Dialog>\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport GlobalState from \"../GlobalState\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {\n  Button,\n  Checkbox,\n  DialogActions,\n  DialogContentText,\n  Divider,\n  FormControlLabel,\n  IconButton,\n  TextField,\n  Tooltip,\n} from \"@material-ui/core\";\nimport PDFService from \"./services/PDFService\";\n\nimport { calculatePrice } from \"./PriceCalculator\";\n\nimport bookingService from \"./services/BookService\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport CloseIcon from \"@material-ui/icons/Close\";\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Draggable from \"react-draggable\";\nimport Slide from \"@material-ui/core/Slide\";\n\nimport Paper from \"@material-ui/core/Paper\";\n\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport BookService from \"./services/BookService\";\n\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport {\n  FormatDateFromString,\n  RevertFormatDateFromString,\n} from \"./DateFormatter\";\nimport PayDialog from \"./PayDialog\";\n\nimport PrintIcon from \"@material-ui/icons/Print\";\nimport UndoIcon from \"@material-ui/icons/Undo\";\n\nimport SendIcon from \"@material-ui/icons/Send\";\n\nimport HistoryIcon from \"@material-ui/icons/History\";\n\nimport FileCopyOutlinedIcon from \"@material-ui/icons/FileCopyOutlined\";\nimport { CalendarColors } from \"../Admin/calendar-admin/colors\";\nimport InvoiceService from \"../services/InvoiceService\";\nimport InvoiceDialog from \"../InvoiceDialog\";\n\nconst useStyles = makeStyles((theme) => ({\n  box: {\n    backgroundColor: \"#373737\",\n    color: \"#fff\",\n    padding: \"1px\",\n    borderRadius: \"4px\",\n    textAlign: \"justify\",\n    paddingRight: \"40px\",\n  },\n\n  boxRed: {\n    backgroundColor: \"#dc2626\",\n    color: \"#fff\",\n    padding: \"1px\",\n    borderRadius: \"4px\",\n    textAlign: \"justify\",\n    paddingRight: \"40px\",\n  },\n\n  boxInfo: {\n    textAlign: \"justify\",\n    backgroundColor: \"#fafafa\",\n    color: \"#333\",\n    padding: \"1px\",\n    borderRadius: \"4px\",\n    paddingRight: \"40px\",\n    border: \"1px solid #eee\",\n  },\n\n  ul: {\n    listStyle: \"none\",\n    padding: \"0\",\n    margin: \"0\",\n  },\n\n  li: {\n    marginBottom: \"15px\",\n  },\n\n  icon: {\n    marginRight: \"8px\",\n  },\n\n  root: {\n    width: \"100%\",\n  },\n\n  lineThrough: {\n    textDecoration: \"line-through\",\n  },\n\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    flexBasis: \"33.33%\",\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n  },\n  secondaryHeading: {\n    fontSize: theme.typography.pxToRem(15),\n  },\n\n  infoDetails: {\n    textAlign: \"left\",\n  },\n\n  infoTitle: {\n    fontWeight: \"800\",\n    marginRight: \"10px\",\n  },\n\n  infoData: {\n    fontWeight: \"400\",\n  },\n\n  title: {\n    textAlign: \"center\",\n    fontWeight: \"600\",\n    marginLeft: \"10px\",\n    marginBottom: \"5px\",\n  },\n\n  Accordion: {\n    backgroundColor: \"#f5f5f5\",\n    color: \"#222\",\n  },\n\n  AccordionDeleted: {\n    backgroundColor: \"#aaa\",\n    color: \"#555\",\n  },\n\n  DownloadForm: {\n    marginTop: \"10px\",\n    marginBottom: \"10px\",\n  },\n\n  infoDataCharges: {\n    fontSize: \"18px\",\n    color: \"green\",\n    fontWeight: \"600\",\n  },\n\n  infoDataChargesHigher: {\n    fontSize: \"18px\",\n    color: \"red\",\n    fontWeight: \"600\",\n  },\n  BookedLabel: {\n    color: \"#606060\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#606060\",\n    width: \"150px\",\n    display: \"inline-block\",\n  },\n\n  PatientAttendedLabel: {\n    color: \"#0066aa\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#0066aa\",\n    width: \"150px\",\n    display: \"inline-block\",\n  },\n\n  SampleTakenLabel: {\n    color: \"#0066cc\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#0066cc\",\n  },\n\n  ReportSentLabel: {\n    color: \"#009900\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#009900\",\n  },\n\n  ReportCertSentLabel: {\n    color: \"#009900\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#009900\",\n  },\n\n  PositiveLabel: {\n    color: \"red\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"red\",\n  },\n\n  EditButton: {\n    marginBottom: \"20px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n  },\n\n  ResendEmailsButton: {\n    // marginBottom : \"20px\",\n    color: \"#2f942e\",\n    borderColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"#fafffa\",\n      borderColor: \"#2f942e\",\n    },\n    textDecoration: \"none !important\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  PayButton: {\n    marginLeft: \"70px\",\n    width: \"300px\",\n  },\n\n  PayLabel: {\n    marginLeft: \"20px\",\n\n    color: \"#2f942e\",\n    fontWeight: \"500\",\n    textAlign: \"center\",\n  },\n\n  RestoreButton: {\n    marginBottom: \"20px\",\n    backgroundColor: \"#eee\",\n    color: \"#333\",\n    \"&:hover\": {\n      background: \"#f1f1f1\",\n      color: \"#111\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n  },\n\n  DeleteButton: {\n    marginBottom: \"20px\",\n    backgroundColor: \"#d90015\",\n    \"&:hover\": {\n      background: \"#b80012\",\n      color: \"#fff\",\n    },\n\n    padding: \"10px\",\n  },\n\n  SaveButton: {\n    marginBottom: \"10px\",\n    padding: \"10px\",\n\n    backgroundColor: \"#d1175e\",\n    \"&:hover\": {\n      background: \"#bd0d50\",\n      color: \"#fff\",\n    },\n  },\n\n  CancelButton: {\n    marginBottom: \"20px\",\n    // padding: \"10px\"\n  },\n\n  TextBox: {\n    padding: \"0px\",\n  },\n\n  checkIcon: {\n    color: \"green\",\n  },\n\n  checkIconSmall: {\n    color: \"green\",\n    paddingTop: \"5px\",\n  },\n\n  closeIcon: {\n    color: \"red\",\n  },\n\n  centeredLabel: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 5,\n    color: \"#fff\",\n  },\n\n  invoiceNumber: {\n    display: \"inline-block\",\n    fontWeight: \"500\",\n    width: \"72px\",\n    fontSize: \"1rem\",\n    color: theme.palette.primary.main,\n  },\n\n  printInvoiceButton: {\n    marginLeft: \"70px\",\n    fontSize: \"0.8rem\",\n    // width: \"300px\",\n  },\n\n  editInvoiceButton: {\n    marginLeft: \"10px\",\n    fontSize: \"0.8rem\",\n  },\n}));\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable\n      handle=\"#alert-dialog-slide-title\"\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\n    >\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nexport default function BookingDialog(props) {\n  const classes = useStyles();\n\n  const [state, setState] = React.useContext(GlobalState);\n\n  const [copied, setCopied] = useState(false);\n\n  const [emailSent, setEmailSent] = React.useState(false);\n\n  const [openResendDialog, setOpenResendDialog] = React.useState(false);\n  const [openPayDialog, setOpenPayDialog] = React.useState(false);\n  const [openRefundDialog, setOpenRefundDialog] = React.useState(false);\n\n  const [selectedBooking, setSelectedBooking] = React.useState(null);\n\n  const [editMode, setEditMode] = React.useState({ edit: false, person: null });\n  const [deleteMode, setDeleteMode] = React.useState({\n    delete: false,\n    person: null,\n  });\n  const [restoreMode, setRestoreMode] = React.useState({\n    restore: false,\n    person: null,\n  });\n\n  const [saving, setSaving] = React.useState(false);\n  const [deleting, setDeleting] = React.useState(false);\n  const [restoring, setRestoring] = React.useState(false);\n\n  const [validationError, setValidationError] = React.useState({});\n\n  const [bookingDate, setBookingDate] = React.useState(\"\");\n  const [bookingTime, setBookingTime] = React.useState(\"\");\n\n  const [fullname, setFullname] = React.useState(\"\");\n  const [email, setEmail] = React.useState(\"\");\n  const [tel, setTel] = React.useState(\"\");\n  const [notes, setNotes] = React.useState(\"\");\n  const [service, setService] = React.useState(\"\");\n\n  const [refreshData, setRefreshData] = React.useState(false);\n\n  const [booking, setBooking] = React.useState(null);\n\n  const [recordChanged, setRecordChanged] = React.useState(false);\n\n  const [fieldChanged, setFieldChanged] = React.useState(false);\n\n  const [openUndoPayDialog, setOpenUndoPayDialog] = React.useState(false);\n\n  const [openTimeStampDialog, setOpenTimeStampDialog] = React.useState(false);\n\n  const handleCloseTimeStampDialog = () => {\n    setOpenTimeStampDialog(false);\n    setSelectedBooking(null);\n  };\n\n  const handleCloseUndoPayDialog = () => {\n    setOpenUndoPayDialog(false);\n    setSelectedBooking(null);\n  };\n\n  const handleCloseResendDialog = () => {\n    setOpenResendDialog(false);\n    setSelectedBooking(null);\n  };\n\n  const handleClosePayDialog = () => {\n    setOpenPayDialog(false);\n    setSelectedBooking(null);\n  };\n\n  const handleCloseRefundDialog = () => {\n    setOpenRefundDialog(false);\n    setSelectedBooking(null);\n  };\n\n  useEffect(() => {\n    if (booking) {\n      const isChanged =\n        bookingDate !== FormatDateFromString(booking.bookingDate) ||\n        bookingTime !== booking.bookingTime ||\n        fullname !== booking.fullname ||\n        dob !== FormatDateFromString(booking.birthDate) ||\n        email !== booking.email ||\n        tel !== booking.phone ||\n        notes !== booking.notes ||\n        service !== booking.packageName;\n\n      setRecordChanged(isChanged);\n    }\n  }, [fieldChanged]);\n\n  useEffect(() => {\n    if (!props.open) {\n      setTimeout(() => {\n        setEditMode({ edit: false, person: null });\n        setRecordChanged(false);\n      }, 500);\n    }\n  }, [props.open]);\n\n  const bookingDateChanged = (event) => {\n    setBookingDate(event.target.value);\n    setValidationError({ ...validationError, bookingDateError: false });\n    setFieldChanged(!fieldChanged);\n  };\n\n  const bookingTimeChanged = (event) => {\n    setBookingTime(event.target.value);\n    setValidationError({ ...validationError, bookingTimeError: false });\n    setFieldChanged(!fieldChanged);\n  };\n\n  const fullnameChanged = (event) => {\n    setFullname(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const emailChanged = (event) => {\n    setEmail(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const telChanged = (event) => {\n    setTel(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const serviceChanged = (event) => {\n    setService(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const notesChanged = (event) => {\n    setNotes(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const getStatusLabel = (status) => {\n    if (status === \"booked\") {\n      return <div className={classes.BookedLabel}> Booking Made </div>;\n    } else if (status === \"patient_attended\") {\n      return (\n        <div className={classes.PatientAttendedLabel}> Patient Attended </div>\n      );\n    } else {\n      return \"Unknown\";\n    }\n  };\n\n  const handleEditModeChanged = (edit, person) => {\n    if (edit) {\n      setFullname(person.fullname);\n      setBookingDate(FormatDateFromString(person.bookingDate));\n      setBookingTime(person.bookingTime.toUpperCase());\n      setEmail(person.email);\n      setTel(person.phone);\n      setDOB(FormatDateFromString(person.birthDate));\n      setService(person.packageName);\n      if (person.notes) {\n        setNotes(person.notes);\n      }\n\n      setEditMode({ edit: edit, person: person });\n    } else if (!edit && !person) {\n      setEditMode({ edit: edit, person: person });\n      setRecordChanged(false);\n    } else if (!edit && person) {\n      const booking = {};\n      const bookingId = person._id;\n      booking.email = email;\n      booking.phone = tel;\n      booking.fullname = fullname;\n      booking.notes = notes;\n      booking.birthDate = RevertFormatDateFromString(dob);\n      booking.packageName = service;\n      booking.bookingDate = RevertFormatDateFromString(bookingDate);\n      booking.bookingTime = bookingTime;\n      booking.bookingRef = person.bookingRef;\n\n      if (validateBooking(booking)) {\n        updateBooking({ bookingId: bookingId, person: booking });\n      }\n    }\n  };\n\n  const validateDate = (str) => {\n    var error = false;\n    if (!str || str.length !== 10) {\n      error = true;\n    }\n\n    if (str.charAt(4) !== \"-\" || str.charAt(7) !== \"-\") {\n      error = true;\n    }\n\n    try {\n      const result = /^\\d{4}-\\d{2}-\\d{2}$/.test(str);\n      if (!result) {\n        error = true;\n      }\n\n      const year = parseInt(str.substr(0, 4));\n      const month = parseInt(str.substr(5, 2));\n      const day = parseInt(str.substr(8, 2));\n\n      if (year < 1900) {\n        error = true;\n      }\n\n      if (month < 1 || month > 12) {\n        error = true;\n      }\n\n      if (day > 31) {\n        error = true;\n      }\n    } catch (err) {\n      error = true;\n    }\n\n    return !error;\n  };\n\n  const validateTime = (str) => {\n    var error = false;\n\n    const result = /^\\d{2}:\\d{2} AM$|^\\d{2}:\\d{2} PM$/.test(str);\n    if (!result) {\n      error = true;\n    }\n\n    try {\n      const hour = parseInt(str.substr(0, 2));\n      const minute = parseInt(str.substr(3, 2));\n\n      if (hour < 0 || hour > 12) {\n        error = true;\n      }\n\n      if (minute < 0 || minute > 59) {\n        error = true;\n      }\n    } catch (err) {\n      error = true;\n    }\n\n    return !error;\n  };\n\n  const validateBooking = (booking) => {\n    var error = false;\n\n    if (!validateDate(booking.bookingDate)) {\n      error = true;\n      setValidationError({ ...validationError, bookingDateError: true });\n    }\n\n    if (!validateDate(booking.birthDate)) {\n      error = true;\n      setValidationError({ ...validationError, dobError: true });\n    }\n\n    if (!validateTime(booking.bookingTime)) {\n      error = true;\n      setValidationError({ ...validationError, bookingTimeError: true });\n    }\n    return !error;\n  };\n\n  const updateBooking = (payload) => {\n    setSaving(true);\n    bookingService\n      .updateBooking(payload)\n      .then((res) => {\n        setSaving(false);\n        setEditMode({ edit: false, person: null });\n        setRefreshData(!refreshData);\n      })\n      .catch((err) => {\n        setSaving(false);\n        setEditMode({ edit: false, person: null });\n        console.log(err);\n      });\n  };\n\n  const deleteBooking = (id) => {\n    setDeleting(true);\n    bookingService\n      .deleteBooking(id)\n      .then((res) => {\n        setDeleting(false);\n        setDeleteMode({ delete: false, person: null });\n        setRefreshData(!refreshData);\n      })\n      .catch((err) => {\n        setDeleting(false);\n        setDeleteMode({ delete: false, person: null });\n        console.log(err);\n      });\n  };\n\n  const restoreBooking = (id) => {\n    setRestoring(true);\n    bookingService\n      .unDeleteBooking(id)\n      .then((res) => {\n        setRestoring(false);\n        setRestoreMode({ restore: false, person: null });\n        setRefreshData(!refreshData);\n      })\n      .catch((err) => {\n        setRestoring(false);\n        setRestoreMode({ restore: false, person: null });\n        console.log(err);\n      });\n  };\n\n  const handleDeleteModeChanged = (del, person) => {\n    if (del) {\n      setDeleteMode({ delete: del, person: person });\n    } else if (!del && !person) {\n      setDeleteMode({ delete: del, person: person });\n    } else if (!del && person) {\n      deleteBooking(person._id);\n    }\n  };\n\n  const handleRestoreModeChanged = (restore, person) => {\n    if (restore) {\n      setRestoreMode({ restore: restore, person: person });\n    } else if (!restore && !person) {\n      setRestoreMode({ restore: restore, person: person });\n    } else if (!restore && person) {\n      restoreBooking(person._id);\n    }\n  };\n\n  const changeBackToBookingMade = (event, id) => {\n    setSaving(true);\n    BookService.changeBackToBookingMade(id)\n      .then((res) => {\n        setSaving(false);\n        setRefreshData(!refreshData);\n      })\n      .catch((err) => {\n        console.log(err);\n        setSaving(false);\n      });\n  };\n\n  const changeToPatientAttended = (event, id) => {\n    setSaving(true);\n    BookService.changeToPatientAttended(id)\n      .then((res) => {\n        setSaving(false);\n        setRefreshData(!refreshData);\n      })\n      .catch((err) => {\n        console.log(err);\n        setSaving(false);\n      });\n  };\n\n  const Pay = (event, id) => {\n    setSelectedBooking(booking);\n    setOpenPayDialog(true);\n  };\n\n  useEffect(() => {\n    if (props.booking) {\n      BookService.getBookingById(props.booking._id)\n        .then((res) => {\n          setBooking(res.data);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n\n      setState((state) => ({\n        ...state,\n        bookingDialogDataChanged: !state.bookingDialogDataChanged\n          ? true\n          : false,\n      }));\n    }\n  }, [refreshData, state.bookingPayChanged]);\n\n  useEffect(() => {\n    if (props.booking) {\n      setBooking(props.booking);\n    }\n  }, [props.booking]);\n\n  const undoPaymentClicked = async () => {\n    setSaving(true);\n    try {\n      await BookService.unPayBooking(booking._id);\n      setSaving(false);\n      setOpenUndoPayDialog(false);\n      setRefreshData(!refreshData);\n    } catch (err) {\n      console.error(err);\n      setSaving(false);\n      setOpenUndoPayDialog(false);\n    }\n  };\n\n  const refundPaymentClicked = async () => {\n    setSaving(true);\n    try {\n      await BookService.refundBooking(booking._id);\n      setSaving(false);\n      updateShouldRefundsCount();\n      setOpenRefundDialog(false);\n      setRefreshData(!refreshData);\n    } catch (err) {\n      console.error(err);\n      setSaving(false);\n      setOpenRefundDialog(false);\n    }\n  };\n\n  const updateShouldRefundsCount = async () => {\n    try {\n      const res = await BookService.getShouldRefundsCount();\n      if (res && res.data && res.data.status === \"OK\") {\n        setState((state) => ({ ...state, shouldRefunsCount: res.data.count }));\n      }\n    } catch (ex) {\n      console.error(ex);\n    }\n  };\n\n  const downloadRegForm = (id) => {\n    PDFService.downloadBloodRegForm(id)\n      .then((res) => {\n        const file = new Blob([res.data], { type: \"application/pdf\" });\n\n        const fileURL = URL.createObjectURL(file);\n        window.open(fileURL, \"_blank\");\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const sendRegForm = (id) => {\n    setSaving(true);\n    setEmailSent(false);\n    BookService.sendRegFormEmail(id)\n      .then((res) => {\n        setSaving(false);\n        if (res.data.status === \"OK\") {\n          setEmailSent(true);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setSaving(false);\n      });\n  };\n\n  const onClose = () => {\n    setEmailSent(false);\n    setEmailSentInvoice(false);\n    setInvoice(null);\n\n    props.onClose();\n  };\n\n  ///*** Invoice  ******************/\n\n  const [invoice, setInvoice] = React.useState(null);\n  const [invoiceLoaded, setInvoiceLoaded] = React.useState(false);\n  const [openInvoiceDialog, setOpenInvoiceDialog] = React.useState(false);\n  const [emailSentInvoice, setEmailSentInvoice] = React.useState(false);\n\n  const fetchInvoice = async () => {\n    try {\n      setInvoiceLoaded(false);\n      const res = await InvoiceService.getInvoiceByBookingId(props.booking._id);\n      setInvoice(res.data.invoice);\n      setInvoiceLoaded(true);\n    } catch (err) {\n      setInvoiceLoaded(true);\n      console.error(err);\n    }\n  };\n\n  React.useEffect(() => {\n    if (props.booking) {\n      fetchInvoice();\n    }\n  }, [props.booking, props.open]);\n\n  const handleCloseInvoiceDialog = (refresh) => {\n    setOpenInvoiceDialog(false);\n    setSelectedBooking(null);\n    fetchInvoice();\n  };\n\n  const OpenInvoiceDialog = () => {\n    setSelectedBooking(booking);\n    setInvoice(invoice);\n    setOpenInvoiceDialog(true);\n  };\n\n  const downloadInvoice = (id) => {\n    InvoiceService.downloadInvoice(id)\n      .then((res) => {\n        const file = new Blob([res.data], { type: \"application/pdf\" });\n\n        const fileURL = URL.createObjectURL(file);\n        window.open(fileURL, \"_blank\");\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const sendInvoiceEmail = (id, _email) => {\n    setSaving(true);\n    setEmailSentInvoice(false);\n    InvoiceService.emailInvoice(id, _email)\n      .then((res) => {\n        setSaving(false);\n        if (res.data.status === \"OK\") {\n          setEmailSentInvoice(true);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setSaving(false);\n      });\n  };\n\n  //***************************** */\n\n  const [dob, setDOB] = React.useState(\"\");\n  const dobChanged = (event) => {\n    setDOB(event.target.value);\n    setValidationError({ ...validationError, dobError: false });\n    setFieldChanged(!fieldChanged);\n  };\n\n  const getIndivisualTestsString = (indivisualTests) => {\n    if (!indivisualTests)\n      return '-'\n    const tests = JSON.parse(indivisualTests);\n    let testsString = \"\";\n    tests.forEach((item) => {\n      testsString += item.description;\n      testsString += \" , \";\n    });\n    return testsString;\n  };\n\n\n\n  return (\n    <React.Fragment>\n      {booking && (\n        <React.Fragment>\n          <Dialog\n            maxWidth=\"md\"\n            open={props.open}\n            TransitionComponent={Transition}\n            keepMounted\n            onClose={onClose}\n            PaperComponent={PaperComponent}\n            aria-labelledby=\"alert-dialog-slide-title\"\n            aria-describedby=\"alert-dialog-slide-description\"\n          >\n            <DialogTitle\n              id=\"alert-dialog-slide-title\"\n              style={\n                booking.tr ? { backgroundColor: \"#7e0082\", color: \"#fff\" } : {}\n              }\n            >\n              <div style={{ position: \"absolute\", top: \"25x\", left: \"25px\" }}>\n                <Tooltip title=\"COPY EDIT LINK TO CLIPBOARD\">\n                  <IconButton\n                    onClick={() => {\n                      navigator.clipboard.writeText(\n                        `https://londonmedicalclinic.co.uk/medicalexpressclinic/user/edit/blood/${booking._id}`\n                      );\n                      setCopied(true);\n                      setTimeout(() => {\n                        setCopied(false);\n                      }, 1500);\n                    }}\n                    aria-label=\"delete\"\n                    className={classes.margin}\n                    size=\"small\"\n                  >\n                    <FileCopyOutlinedIcon\n                      style={booking.tr ? { color: \"#ddd\" } : {}}\n                      fontSize=\"14px\"\n                    />\n                  </IconButton>\n                </Tooltip>\n\n                <span\n                  hidden={!copied}\n                  style={{ fontSize: \"12px\", transition: \"all 1s ease-in\" }}\n                >\n                  {\" \"}\n                  Copied{\" \"}\n                </span>\n              </div>\n\n              <div\n                style={{\n                  position: \"absolute\",\n                  top: \"25x\",\n                  right: \"20px\",\n                  backgroundColor: CalendarColors.BLOOD_COLOR,\n                  color: \"#fff\",\n                  padding: \"0px 5px\",\n                  borderRadius: \"10px\",\n                }}\n              >\n                {booking.doctorConsultation ? \"Blood + Doctor Consultation\" : \"Blood\"}\n              </div>\n\n              <Grid\n                container\n                direction=\"row\"\n                justify=\"center\"\n                spacing={2}\n                alignItems=\"center\"\n              >\n                <Grid item>\n                  <div\n                    style={\n                      booking.deleted\n                        ? {\n                            paddingBottom: \"5px\",\n                            textDecoration: \"line-through\",\n                          }\n                        : {}\n                    }\n                  >\n                    {`${booking.fullname}`}\n                  </div>\n                </Grid>\n\n                {booking.deleted && (\n                  <Grid item>\n                    <Tooltip title=\"This record has been deleted.\">\n                      <DeleteIcon\n                        style={\n                          booking.tr\n                            ? {\n                                padding: 0,\n                                margin: 0,\n                                color: \"#fff\",\n                                fontSize: 25,\n                              }\n                            : {\n                                padding: 0,\n                                margin: 0,\n                                color: \"#333\",\n                                fontSize: 25,\n                              }\n                        }\n                      />\n                    </Tooltip>\n                  </Grid>\n                )}\n              </Grid>\n            </DialogTitle>\n            <DialogContent>\n              <div\n                style={{\n                  // height: \"550px\",\n                  paddingTop: \"0px\",\n                }}\n              >\n                <Grid item xs={12} md={12} key={`panel0`}>\n                  <div className={classes.infoDetails}>\n                    <ul className={classes.ul}>\n                      {/* Restore Functionality ******************************************* */}\n                      <li\n                        hidden={\n                          !(\n                            restoreMode.restore &&\n                            restoreMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <div\n                          style={{\n                            fontWeight: \"500\",\n                            paddingBottom: \"5px\",\n                            paddingLeft: \"5px\",\n                            fontSize: \"16px\",\n                            color: \"#333\",\n                          }}\n                        >\n                          Are you sure you want to restore this record?\n                        </div>\n                      </li>\n\n                      <li\n                        hidden={\n                          !booking.deleted ||\n                          (restoreMode.restore &&\n                            restoreMode.person._id === booking._id)\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"primary\"\n                          onClick={() => {\n                            handleRestoreModeChanged(true, booking);\n                          }}\n                          className={classes.RestoreButton}\n                        >\n                          Restore This Record\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            restoreMode.restore &&\n                            restoreMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"primary\"\n                          disabled={restoring}\n                          onClick={() => {\n                            handleRestoreModeChanged(false, booking);\n                          }}\n                          className={classes.SaveButton}\n                        >\n                          YES, Restore this!\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            restoreMode.restore &&\n                            restoreMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"default\"\n                          disabled={restoring}\n                          onClick={() => {\n                            handleRestoreModeChanged(false, null);\n                          }}\n                          className={classes.CancelButton}\n                        >\n                          Cancel\n                        </Button>\n                      </li>\n\n                      {/*  ******************************************************************* */}\n\n                      {/* Edit Functionality ******************************************* */}\n\n                      <li\n                        hidden={\n                          booking.deleted ||\n                          deleteMode.delete ||\n                          (editMode.edit && editMode.person._id === booking._id)\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"primary\"\n                          onClick={() => {\n                            handleEditModeChanged(true, booking);\n                          }}\n                          className={classes.EditButton}\n                        >\n                          Edit Booking Info\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            editMode.edit && editMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"primary\"\n                          disabled={saving || !recordChanged}\n                          onClick={() => {\n                            handleEditModeChanged(false, booking);\n                          }}\n                          className={classes.SaveButton}\n                        >\n                          Save Changes\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            editMode.edit && editMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"default\"\n                          disabled={saving}\n                          onClick={() => {\n                            handleEditModeChanged(false, null);\n                          }}\n                          className={classes.CancelButton}\n                        >\n                          Cancel\n                        </Button>\n                      </li>\n\n                      {/* ****************************************************************************************** */}\n\n                      {/* Delete Functionality ******************************************* */}\n\n                      <li\n                        hidden={\n                          !(\n                            deleteMode.delete &&\n                            deleteMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <div\n                          style={{\n                            fontWeight: \"600\",\n                            paddingBottom: \"5px\",\n                            paddingLeft: \"5px\",\n                            fontSize: \"16px\",\n                          }}\n                        >\n                          Are you sure you want to delete this record?\n                        </div>\n                      </li>\n\n                      <li\n                        hidden={\n                          props.deleteButtonDisabled ||\n                          booking.deleted ||\n                          editMode.edit ||\n                          (deleteMode.delete &&\n                            deleteMode.person._id === booking._id)\n                        }\n                      >\n                        {booking.OTCCharges > 0 && (\n                          <Tooltip title={\"Paid Records Cannot be Deleted!\"}>\n                            <div>\n                              <Button\n                                disabled={booking.OTCCharges > 0}\n                                type=\"button\"\n                                fullWidth\n                                variant=\"contained\"\n                                color=\"primary\"\n                                onClick={() => {\n                                  handleDeleteModeChanged(true, booking);\n                                }}\n                                className={classes.DeleteButton}\n                              >\n                                Delete This Record\n                              </Button>\n                            </div>\n                          </Tooltip>\n                        )}\n                        {booking.OTCCharges === 0 && (\n                          <Button\n                            disabled={booking.OTCCharges > 0}\n                            type=\"button\"\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={() => {\n                              handleDeleteModeChanged(true, booking);\n                            }}\n                            className={classes.DeleteButton}\n                          >\n                            Delete This Record\n                          </Button>\n                        )}\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            deleteMode.delete &&\n                            deleteMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"primary\"\n                          disabled={deleting}\n                          onClick={() => {\n                            handleDeleteModeChanged(false, booking);\n                          }}\n                          className={classes.SaveButton}\n                        >\n                          YES, Delete this!\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            deleteMode.delete &&\n                            deleteMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"default\"\n                          disabled={deleting}\n                          onClick={() => {\n                            handleDeleteModeChanged(false, null);\n                          }}\n                          className={classes.CancelButton}\n                        >\n                          Cancel\n                        </Button>\n                      </li>\n\n                      {/* ****************************************************************************************** */}\n\n                      <li className={classes.li}>\n                        <Grid container spacing={2}>\n                          <Grid item xs={6}>\n                            <span className={classes.infoTitle}>\n                              BOOKED DATE\n                            </span>\n\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {FormatDateFromString(booking.bookingDate)}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                error={validationError.bookingDateError}\n                                className={classes.TextBox}\n                                value={bookingDate}\n                                onChange={bookingDateChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n                          <Grid item xs={6}>\n                            <span className={classes.infoTitle}>\n                              BOOKED TIME\n                            </span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {booking.bookingTime.toUpperCase()}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                error={validationError.bookingTimeError}\n                                className={classes.TextBox}\n                                value={bookingTime}\n                                onChange={bookingTimeChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n                        </Grid>\n                      </li>\n\n                      <li className={classes.li}>\n                        <Grid container spacing={2}>\n                          <Grid item xs={6}>\n                            <span className={classes.infoTitle}>FULLNAME</span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {booking.fullname}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                className={classes.TextBox}\n                                value={fullname}\n                                onChange={fullnameChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n                          <Grid item xs={6}>\n                            <span className={classes.infoTitle}>EMAIL</span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {booking.email}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                className={classes.TextBox}\n                                value={email}\n                                onChange={emailChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n                        </Grid>\n                      </li>\n                      <li className={classes.li}>\n                        <Grid container spacing={2}>\n                          <Grid item xs={6}>\n                            <span className={classes.infoTitle}>TEL</span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {booking.phone?.toUpperCase()}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                className={classes.TextBox}\n                                value={tel}\n                                onChange={telChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n                          <Grid item xs={6}>\n                          <span className={classes.infoTitle}>D.O.B</span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {FormatDateFromString(booking.birthDate)}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                error={validationError.dobError}\n                                className={classes.TextBox}\n                                value={dob}\n                                onChange={dobChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n\n                          </Grid>\n                        </Grid>\n                      </li>\n\n                      <li className={classes.li} style={{ paddingTop: \"10px\" }}>\n                        <span className={classes.infoTitle}>Package</span>\n                        <span\n                          hidden={\n                            editMode.edit && editMode.person._id === booking._id\n                          }\n                          className={classes.infoData}\n                        >\n                          {booking.packageName}\n                        </span>\n                        <span\n                          hidden={\n                            !(\n                              editMode.edit &&\n                              editMode.person._id === booking._id\n                            )\n                          }\n                          className={classes.infoData}\n                        >\n                          <TextField\n                            fullWidth\n                            className={classes.TextBox}\n                            value={service}\n                            onChange={serviceChanged}\n                            inputProps={{\n                              style: {\n                                padding: 0,\n                              },\n                            }}\n                          ></TextField>\n                        </span>\n                      </li>\n\n                      <li className={classes.li} style={{ paddingTop: \"10px\" }}>\n                        <span className={classes.infoTitle}>Indivisual Tests</span>\n                        <span\n                          className={classes.infoData}\n                        >\n                          {getIndivisualTestsString(booking.indivisualTests)}\n                        </span>\n                      </li>\n\n\n                      <li className={classes.li} style={{ paddingTop: \"10px\" }}>\n                      <span className={classes.infoTitle}>NOTES</span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {booking.notes}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                className={classes.TextBox}\n                                value={notes}\n                                onChange={notesChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n\n                      </li>\n\n                      <li className={classes.li} style={{ paddingTop: \"10px\" }}>\n                        <span className={classes.infoTitle}>STATUS</span>{\" \"}\n                        {getStatusLabel(booking.status)}\n                        {booking.status === \"patient_attended\" &&\n                          !(\n                            editMode.edit && editMode.person._id === booking._id\n                          ) &&\n                          !booking.deleted && (\n                            <Button\n                              variant=\"outlined\"\n                              color=\"primary\"\n                              disabled={saving}\n                              style={{ width: \"300px\" }}\n                              onClick={(event) =>\n                                changeBackToBookingMade(event, booking._id)\n                              }\n                            >\n                              Change Back To Booking Made\n                            </Button>\n                          )}\n                        {booking.status === \"booked\" &&\n                          !(\n                            editMode.edit && editMode.person._id === booking._id\n                          ) &&\n                          !booking.deleted && (\n                            <Button\n                              variant=\"outlined\"\n                              color=\"default\"\n                              disabled={saving}\n                              style={{ width: \"300px\" }}\n                              onClick={(event) =>\n                                changeToPatientAttended(event, booking._id)\n                              }\n                            >\n                              Change To Patient Attended\n                            </Button>\n                          )}\n                      </li>\n\n                      <li className={classes.li} style={{ paddingTop: \"10px\" }}>\n                        <span\n                          hidden={\n                            editMode.edit && editMode.person._id === booking._id\n                          }\n                          className={classes.infoTitle}\n                        >\n                          Estimated Price\n                        </span>\n                        <span\n                          hidden={\n                            editMode.edit && editMode.person._id === booking._id\n                          }\n                          className={classes.infoData}\n                        >\n                          {booking.estimatedPrice}\n                        </span>\n                      </li>\n\n                      <li hidden={booking.deleted || editMode.edit}>\n                        <Button\n                          disabled={!booking.formData}\n                          startIcon={<PrintIcon />}\n                          type=\"button\"\n                          fullWidth\n                          variant=\"outlined\"\n                          color=\"primary\"\n                          onClick={() => {\n                            downloadRegForm(booking._id);\n                          }}\n                          className={classes.DownloadForm}\n                        >\n                          Download Registration Form\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          booking.deleted || editMode.edit || booking.formData\n                        }\n                      >\n                        <Button\n                          disabled={!booking.email || booking.email.length < 3}\n                          startIcon={<SendIcon />}\n                          type=\"button\"\n                          fullWidth\n                          variant=\"outlined\"\n                          color=\"primary\"\n                          onClick={() => {\n                            sendRegForm(booking._id);\n                          }}\n                          className={classes.DownloadForm}\n                          style={{ position: \"relative\" }}\n                        >\n                          Send Registration Form Email\n                          {emailSent && (\n                            <div\n                              style={{\n                                position: \"absolute\",\n                                right: \"10px\",\n                                top: \"5px\",\n                                color: \"#05ad19\",\n                              }}\n                            >\n                              Email Sent\n                            </div>\n                          )}\n                        </Button>\n                      </li>\n\n                      <Divider />\n\n                      <li className={classes.li} style={{ marginTop: \"20px\" }}>\n                        <span className={classes.infoTitle}>INVOICE # : </span>{\" \"}\n                        <span style={{ paddingLeft: \"0px\" }}>\n                          {!invoiceLoaded && (\n                            <span className={classes.invoiceNumber}> ... </span>\n                          )}\n                          {invoiceLoaded && invoice && (\n                            <span className={classes.invoiceNumber}>\n                              {\" \"}\n                              {invoice.invoiceNumber}{\" \"}\n                            </span>\n                          )}\n                          {invoiceLoaded && !invoice && (\n                            <span\n                              className={classes.invoiceNumber}\n                              style={{ color: \"red\", fontSize: \"0.9rem\" }}\n                            >\n                              {\" \"}\n                              N/A{\" \"}\n                            </span>\n                          )}\n                        </span>\n                        {!(\n                          editMode.edit && editMode.person._id === booking._id\n                        ) &&\n                          !booking.deleted && (\n                            <React.Fragment>\n                              {invoiceLoaded && !invoice && (\n                                <Button\n                                  variant=\"outlined\"\n                                  color=\"primary\"\n                                  className={classes.PayButton}\n                                  onClick={() => OpenInvoiceDialog()}\n                                >\n                                  Issue Invoice\n                                </Button>\n                              )}\n\n                              {invoiceLoaded && invoice && (\n                                <React.Fragment>\n                                  <Button\n                                    variant=\"outlined\"\n                                    startIcon={<PrintIcon />}\n                                    color=\"primary\"\n                                    className={classes.printInvoiceButton}\n                                    onClick={() => downloadInvoice(invoice._id)}\n                                  >\n                                    Download Invoice\n                                  </Button>\n\n                                  <Button\n                                    variant=\"outlined\"\n                                    color=\"secondary\"\n                                    className={classes.editInvoiceButton}\n                                    onClick={() => OpenInvoiceDialog()}\n                                  >\n                                    Edit Invoice\n                                  </Button>\n\n                                  <Button\n                                    disabled={\n                                      !booking.email || booking.email.length < 3\n                                    }\n                                    startIcon={<SendIcon />}\n                                    type=\"button\"\n                                    variant=\"outlined\"\n                                    color=\"primary\"\n                                    onClick={() => {\n                                      sendInvoiceEmail(\n                                        invoice._id,\n                                        booking.email\n                                      );\n                                    }}\n                                    style={{\n                                      position: \"relative\",\n                                      marginLeft: \"10px\",\n                                      paddingRight: \"130px\",\n                                      fontSize: \"0.8rem\",\n                                    }}\n                                  >\n                                    Send Invoice By Email\n                                    {emailSentInvoice && (\n                                      <div\n                                        style={{\n                                          position: \"absolute\",\n                                          right: \"10px\",\n                                          top: \"5px\",\n                                          color: \"#05ad19\",\n                                        }}\n                                      >\n                                        Email Sent\n                                      </div>\n                                    )}\n                                  </Button>\n                                </React.Fragment>\n                              )}\n                            </React.Fragment>\n                          )}\n                      </li>\n\n                      <li className={classes.li} style={{ marginTop: \"20px\" }}>\n                        <span className={classes.infoTitle}>TOTAL CHARGES</span>{\" \"}\n                        <span\n                          style={{ paddingLeft: \"15px\" }}\n                          className={\n                            !booking.OTCCharges || booking.OTCCharges === 0\n                              ? classes.infoDataChargesHigher\n                              : classes.infoDataCharges\n                          }\n                        >{`£${booking.OTCCharges.toLocaleString(\n                          \"en-GB\"\n                        )}`}</span>\n                        {!(\n                          editMode.edit && editMode.person._id === booking._id\n                        ) &&\n                          !booking.paid &&\n                          !booking.deleted && (\n                            <Button\n                              variant=\"outlined\"\n                              color=\"secondary\"\n                              className={classes.PayButton}\n                              onClick={(event) => Pay(event, booking._id)}\n                            >\n                              Pay\n                            </Button>\n                          )}\n                        {!(\n                          editMode.edit && editMode.person._id === booking._id\n                        ) &&\n                          booking.paid && (\n                            <React.Fragment>\n                              <span className={classes.PayLabel}>\n                                {\" \"}\n                                <CheckIcon\n                                  className={classes.checkIconSmall}\n                                />{\" \"}\n                                Paid by {booking.paidBy}\n                                {booking.paidBy === \"corporate\"\n                                  ? ` \"${booking.corporate}\" `\n                                  : \"\"}\n                              </span>\n\n                              <Tooltip title=\"Undo Payment\">\n                                <IconButton\n                                  onClick={() => setOpenUndoPayDialog(true)}\n                                >\n                                  <UndoIcon style={{ color: \"red\" }} />\n                                </IconButton>\n                              </Tooltip>\n                            </React.Fragment>\n                          )}\n                      </li>\n                    </ul>\n                  </div>\n                </Grid>\n              </div>\n              <Backdrop\n                className={classes.backdrop}\n                open={saving || deleting || restoring}\n              >\n                <CircularProgress color=\"inherit\" />\n              </Backdrop>\n            </DialogContent>\n\n            <PayDialog\n              booking={selectedBooking}\n              open={openPayDialog}\n              price={invoice ? invoice.grandTotal : null}\n              handleClose={handleClosePayDialog}\n            />\n\n            <InvoiceDialog\n              booking={selectedBooking}\n              invoice={invoice}\n              open={openInvoiceDialog}\n              handleClose={handleCloseInvoiceDialog}\n            />\n          </Dialog>\n\n          <Dialog\n            open={openUndoPayDialog}\n            onClose={handleCloseUndoPayDialog}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n          >\n            <DialogTitle style={{ color: \"#999\" }} id=\"alert-dialog-title\">\n              {\"Undo Payment\"}\n            </DialogTitle>\n            <DialogContent>\n              <DialogContentText\n                style={{ color: \"#333\", fontWeight: \"400\" }}\n                id=\"alert-dialog-description\"\n              >\n                Are you sure you want to undo payment for this booking?\n              </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={handleCloseUndoPayDialog} color=\"default\">\n                Back\n              </Button>\n              <Button onClick={undoPaymentClicked} color=\"secondary\" autoFocus>\n                Yes, Undo Payment\n              </Button>\n            </DialogActions>\n          </Dialog>\n\n          <Dialog\n            open={openRefundDialog}\n            onClose={handleCloseRefundDialog}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n          >\n            <DialogTitle style={{ color: \"#999\" }} id=\"alert-dialog-title\">\n              {\"Refund Deposit\"}\n            </DialogTitle>\n            <DialogContent>\n              <DialogContentText\n                style={{ color: \"#333\", fontWeight: \"400\" }}\n                id=\"alert-dialog-description\"\n              >\n                Are you sure you want to refund deposit payment for this\n                booking?\n              </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={handleCloseRefundDialog} color=\"default\">\n                Back\n              </Button>\n              <Button\n                onClick={refundPaymentClicked}\n                color=\"secondary\"\n                autoFocus\n              >\n                Yes, Refund Payment\n              </Button>\n            </DialogActions>\n          </Dialog>\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n}\n","import React, {useEffect, useRef, useState} from 'react';\nimport { DataGrid } from '@material-ui/data-grid';\nimport BookService from './services/BookService';\nimport { Button, Checkbox, CircularProgress, Dialog, DialogContent, DialogTitle, Divider, FormControl, FormControlLabel, Grid, Icon, InputLabel, LinearProgress, Link, makeStyles, MenuItem, Paper, Select, SvgIcon, Switch, TextField, Tooltip } from '@material-ui/core';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport { IconButton } from '@material-ui/core';\nimport CheckIcon from '@material-ui/icons/Check';\nimport CloseIcon from '@material-ui/icons/Close';\nimport GlobalState from '../GlobalState';\nimport { getMenuIndex } from '../MenuList';\nimport {FormatDateFromString, FormatDateFromStringShortYear} from './DateFormatter';\n\nimport SearchIcon from '@material-ui/icons/Search';\nimport BookingDialog from './BookingDialog';\n\nimport NewReleasesIcon from '@material-ui/icons/NewReleases';\nimport HistoryIcon from '@material-ui/icons/History';\nimport TimelineIcon from '@material-ui/icons/Timeline';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport AutorenewIcon from '@material-ui/icons/Autorenew';\nimport LiveTvIcon from '@material-ui/icons/LiveTv';\nimport PlaylistAddCheckIcon from '@material-ui/icons/PlaylistAddCheck';\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport HourglassEmptyIcon from '@material-ui/icons/HourglassEmpty';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faFileExcel } from \"@fortawesome/free-solid-svg-icons\";\nimport Draggable from 'react-draggable';\n\nimport * as dateformat from 'dateformat';\n\nimport DateFnsUtils from '@date-io/date-fns';\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardTimePicker,\n  KeyboardDatePicker,\n} from '@material-ui/pickers';\n\nimport BusinessIcon from '@material-ui/icons/Business';\nimport CreditCardIcon from '@material-ui/icons/CreditCard';\nimport LocalAtmIcon from '@material-ui/icons/LocalAtm';\n\n\nimport ReactHTMLTableToExcel from 'react-html-table-to-excel';\nimport PriceCalculator from './PriceCalculator';\nimport { corporates } from './Corporates';\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    marginTop: theme.spacing(0),\n    marginBottom: theme.spacing(1),\n\n  },\n  \n  refreshButton:{\n    marginLeft: theme.spacing(2),\n  },\n\n  checkIcon:{\n    color: \"green\"\n  },\n\n  closeIcon:{\n    color: \"red\"\n  },\n\n  RefLink: {\n    cursor: \"pointer\"\n  },\n\n  BookedLabel:{\n    backgroundColor: \"#606060\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  PatientAttendedLabel:{\n    backgroundColor: \"#0066aa\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  SampleTakenLabel:{\n    backgroundColor: \"#0066cc\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  ReportSentLabel:{\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  ReportCertSentLabel:{\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  PositiveLabel:{\n    backgroundColor: \"red\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  HideNowRows: {\n    position: \"absolute\",\n    top: \"40%\",\n    left: \"40%\",\n    width: \"600px\",\n    height: \"300px\",\n    backgroundColor : \"#fafafa\",\n    color : \"#111\",\n    zIndex: \"1000\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyItems: \"center\"\n  },\n\n  ExportToExcelButton:\n  {\n    // marginBottom : \"20px\",\n    color : \"#2f942e\",\n    borderColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"#fafffa\",\n      borderColor: \"#2f942e\",\n    },\n    textDecoration : \"none !important\", \n   \n  },\n\n  ExportToExcelButtonInline:\n  {\n    // marginBottom : \"20px\",\n    color : \"#2f942e\",\n    borderColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"#fafffa\",\n      borderColor: \"#2f942e\",\n    },\n    textDecoration : \"none !important\", \n    cursor: \"pointer\",\n    padding: \"10px\"\n   \n  },\n\n  table: {\n    width: \"100%\",\n    border: \"1px solid #ddd\",\n    borderCollapse: \"collapse\",\n},\n\nth: {\n    border: \"1px solid #ddd\",\n    borderCollapse: \"collapse\",\n    verticalAlign: \"middle\",\n    fontcolor: \"#555\",\n    fontWeight: \"400\",\n    fontSize: \"15px\",\n    paddingTop: \"5px\",\n    paddingBottom: \"5px\",\n    width: \"14%\",\n    paddingLeft: \"5px\",\n},\n\ntd: {\n    border: \"1px solid #ddd\",\n    borderCollapse: \"collapse\",\n    verticalAlign: \"middle\",\n    paddingLeft: \"5px\",\n},\n\ntopSelect: {\n  margin: theme.spacing(1),\n  minWidth: 80,\n},\n\nnotifyIcon:{\n  width: \"16px\",\n  height: \"16px\",\n  borderRadius: \"50%\",\n  backgroundColor : \"rgb(220, 0, 78)\",\n  marginLeft: \"10px\"\n}\n\n}));\n\nconst getTableTitle = (str) =>{\n\n  if (str === 'today')\n  {\n    return `Today's Bookings`;\n  }else if (str === 'old')\n  {\n    return `Old Bookings`;\n  }else if (str === 'future')\n  {\n    return `Future Bookings`;\n  }else if (str === 'recent')\n  {\n    return `Recent Bookings`;\n  }else if (str === 'live')\n  {\n    return `Live Bookings`;\n  }else if (str === 'completed')\n  {\n    return `Completed Bookings`;\n  }else if (str === 'positive')\n  {\n    return `Positive Results`;\n  }else if (str === 'deleted')\n  {\n    return `Deleted Records`;\n  }else if (str === 'late')\n  {\n    return `40 Hours Late`;\n  }\n  \n  else\n  {\n    return `All Bookings`;\n  }\n\n}\n\nconst getTableIcon = (str) =>{\n\n  if (str === 'today')\n  {\n    return <NewReleasesIcon style={{fontSize:\"2.2rem\"}} />;\n  }else if (str === 'old')\n  {\n    return <HistoryIcon style={{fontSize:\"2.2rem\"}} />;\n  }else if (str === 'future')\n  {\n    return <TimelineIcon style={{fontSize:\"2.2rem\"}} />;\n  }else if (str === 'recent')\n  {\n    return <AutorenewIcon style={{fontSize:\"2.2rem\"}} />;\n  }else if (str === 'live')\n  {\n    return <LiveTvIcon style={{fontSize:\"2.2rem\"}} />;\n  }else if (str === 'completed')\n  {\n    return  <PlaylistAddCheckIcon style={{fontSize:\"2.2rem\"}} />;\n  }else if (str === 'positive')\n  {\n    return <AddCircleOutlineIcon style={{fontSize:\"2.2rem\"}} />\n  }else if (str === 'deleted')\n  {\n    return <DeleteIcon style={{fontSize:\"2.2rem\"}} />;\n  }else if (str === 'late')\n  {\n    return <HourglassEmptyIcon style={{fontSize:\"2.2rem\"}} />;\n  }\n  \n  else\n  {\n    return <DescriptionIcon style={{fontSize:\"2.2rem\"}} />;\n  }\n\n}\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'}>\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nexport default function BookingTable(props) {\n  \n  const classes = useStyles();\n\n  const [topCount, setTopCount] = React.useState(25)\n  const topCountChanged = (event) =>\n  {\n    setTopCount(event.target.value)\n    loadData(event.target.value)\n  }\n  \n\n  const [openDialogExcel, setOpenDialogExcel] = useState(false);\n  const handleCloseDialogExcel = () =>\n  {\n    setCorporate(corporates[0]);\n    setJustCorporate(false);\n    setOpenDialogExcel(false);\n  }\n\n\n  const [fromDate, setFromDate] = React.useState(new Date(new Date().getTime() - 7 * 24 * 60 * 60 * 1000 ));\n  const handleFromDateChange = (date) => {\n    setFromDate(date);\n    setFromDateStr(dateformat(date,'yyyy-mm-dd'));\n  };\n\n  const [untilDate, setUntilDate] = React.useState(new Date(new Date().getTime() - 1 * 24 * 60 * 60 * 1000 ));\n  const handleUntilDateChange = (date) => {\n    setUntilDate(date);\n    seUntilDateStr(dateformat(date,'yyyy-mm-dd'));\n  };\n\n  const [fromDateStr, setFromDateStr] = useState(dateformat(new Date(new Date().getTime() - 7 * 24 * 60 * 60 * 1000 ), 'yyyy-mm-dd'));\n  const [untilDateStr, seUntilDateStr] = useState(dateformat(new Date(new Date().getTime() - 1 * 24 * 60 * 60 * 1000 ), 'yyyy-mm-dd'));\n\n  const [justCorporate, setJustCorporate] = useState(false);\n\n  const[chkDate, setChkDate] = useState(true);\n  const[chkForename, setChkForename] = useState(true);\n  const[chkSurname, setChkSurname] = useState(true);\n  const[chkDOB, setChkDOB] = useState(true);\n  const[chkEmail, setChkEmail] = useState(true);\n  const[chkTel, setChkTel] = useState(true);\n  const[chkCertificate, setChkCertidicate] = useState(true);\n  const[chkAntiBodyTest, setChkAntiBodyTest] = useState(true);\n  const[chkextRef, setChkExtRef] = useState(true);\n  const[chkPrice, setChkPrice] = useState(true);\n\n  const justCorporateChanged = (event) =>\n  {\n    setJustCorporate(event.target.checked);\n  }\n  \n\n  const chkDateChanged = (event) =>\n  {\n    setChkDate(event.target.checked);\n  }\n\n  const chkForenameChanged = (event) =>\n  {\n    setChkForename(event.target.checked);\n  }\n\n  const chkSurnameChanged = (event) =>\n  {\n    setChkSurname(event.target.checked);\n  }\n\n  const chkDOBChanged = (event) =>\n  {\n    setChkDOB(event.target.checked);\n  }\n\n  const chkEmailChanged = (event) =>\n  {\n    setChkEmail(event.target.checked);\n  }\n\n  const chkTelChanged = (event) =>\n  {\n    setChkTel(event.target.checked);\n  }\n\n  const chkCertificateChanged = (event) =>\n  {\n    setChkCertidicate(event.target.checked);\n  }\n\n  const chkAntiBodyTestChanged = (event) =>\n  {\n    setChkAntiBodyTest(event.target.checked);\n  }\n\n  const chkextRefChanged = (event) =>\n  {\n    setChkExtRef(event.target.checked);\n  }\n\n  const chkPriceChanged = (event) =>\n  {\n    setChkPrice(event.target.checked);\n  }\n\n\n\n  var columns = [];\n\n  if (props.date === 'recent')\n  {\n    columns = [\n      // { field: 'id', headerName: '#', width: 70 },\n  \n      {field: '_id', headerName:' ', width: 70, renderCell: (params) =>{\n          return (\n\n           <React.Fragment>\n\n                <Button \n                        color=\"primary\"\n                        onClick = {event => openDetailsDialog(event, params.value)}\n                > \n            \n            <SearchIcon/> \n            \n            </Button>\n\n           </React.Fragment>\n\n          \n  \n          ); \n      \n        }\n      },\n\n      { field: 'paid', headerName: 'Paid', align: 'center' , width: 90, renderCell: (params) => { \n        if (!params.value)\n        {\n           return ( \n              <React.Fragment>                    \n                    <CloseIcon className={classes.closeIcon}/>                        \n              </React.Fragment>\n           );\n        }\n        else\n        {\n           if (params.getValue('paidBy') === 'credit card')\n           {\n             return ( <CreditCardIcon className={classes.checkIcon}/> );\n           }\n           else if (params.getValue('paidBy') === 'cash')\n           {\n             return ( <LocalAtmIcon className={classes.checkIcon}/> );\n           }\n           else if (params.getValue('paidBy') === 'corporate')\n           {\n             return ( <BusinessIcon className={classes.checkIcon}/> );\n           }\n           else\n           {\n             return '';  \n           }\n        }\n  }\n },\n\n\n      { field: 'timeStamp', headerName: 'TimeStamp', width: 200, valueFormatter: (params) => { \n        return formatTimeStamp(params.value);\n        }\n      },\n  \n      { field: 'bookingDate', headerName: 'B Date', width: 110, valueFormatter: (params) => { \n              return FormatDateFromString(params.value);\n          }\n       },\n      { field: 'bookingTimeNormalized', headerName: 'B Time', width: 105 , valueGetter: (params) => {\n        return params.getValue('bookingTime');\n      }},\n      { field: 'status', headerName: 'Status', width: 100, renderCell: (params) =>{\n          if (params.value === 'booked')\n          {\n            return (\n              <span className={classes.BookedLabel}>  BM </span>\n            );\n        \n          }else if (params.value === 'patient_attended')\n          {\n            return (\n              <span  className={classes.PatientAttendedLabel}> PA </span>\n            );\n          }\n          else{\n            return 'Unknown';\n          }\n        }\n      },\n      { field: 'bookingRef', headerName: 'Ref No.', width: 120 , renderCell: (params) =>{\n        return (\n          <Tooltip title=\"Go Find By Ref\" placement=\"right\">\n              <Link className={classes.RefLink}\n              //  onClick={\n              //   () => {\n              //     console.log(params.value);\n  \n              //     setState(state => ({...state, currentMenuIndex: getMenuIndex(`pcr` , `findByRef`)}));\n              //     setState(state => ({...state, ref : params.value}));\n              //     setState(state => ({...state, refError : false})); \n              //     setState(state => ({...state, foundRecords : []}));\n              //     setState(state => ({...state, findRecords : !state.findRecords}));\n              //   }\n              // }\n              \n              >\n                {params.value}\n              </Link>\n          </Tooltip>\n  \n        );\n      }},\n      { field: 'fullname', headerName: 'Fullname', width: 250 },\n      { field: 'email', headerName: 'Email', width: 200 },\n      { field: 'phone', headerName: 'Tel', width: 150 },\n      { field: 'notes', headerName: 'Notes', width: 500 },\n    \n    ];\n\n  }\n  else\n  {\n    columns = [\n      // { field: 'id', headerName: '#', width: 70 },\n  \n      {field: '_id', headerName:' ', width: 70, renderCell: (params) =>{\n          return (\n            <React.Fragment>\n\n                <Button \n                        color=\"primary\"\n                        onClick = {event => openDetailsDialog(event, params.value)}\n                > \n            \n            <SearchIcon/> \n            \n            </Button>\n\n           </React.Fragment>\n  \n          ); \n      \n        }\n      },\n\n      { field: 'paid', headerName: 'Paid', align: 'center' , width: 90, renderCell: (params) => { \n               if (!params.value)\n               {\n                  return ( \n                    <React.Fragment>\n                                <CloseIcon className={classes.closeIcon}/> \n                                {parseInt(params.getValue('deposit')) > 0 && props.date === 'deleted' && (\n                                      <span className={classes.notifyIcon}>&nbsp;</span>\n                                )}\n\n                               \n                    </React.Fragment>\n                     \n                        \n                  \n                  \n                  );\n               }\n               else\n               {\n                  if (params.getValue('paidBy') === 'credit card')\n                  {\n                    return ( <CreditCardIcon className={classes.checkIcon}/> );\n                  }\n                  else if (params.getValue('paidBy') === 'cash')\n                  {\n                    return ( <LocalAtmIcon className={classes.checkIcon}/> );\n                  }\n                  else if (params.getValue('paidBy') === 'corporate')\n                  {\n                    return ( <BusinessIcon className={classes.checkIcon}/> );\n                  }\n                  else\n                  {\n                    return '';  \n                  }\n               }\n         }\n        },\n        { field: 'bookingDate', headerName: 'B Date', width: 110, valueFormatter: (params) => { \n          return FormatDateFromString(params.value);\n      }\n   },\n  { field: 'bookingTimeNormalized', headerName: 'B Time', width: 105 , valueGetter: (params) => {\n    return params.getValue('bookingTime');\n  }},\n  { field: 'status', headerName: 'Status', width: 100, renderCell: (params) =>{\n      if (params.value === 'booked')\n      {\n        return (\n          <span className={classes.BookedLabel}>  BM </span>\n        );\n    \n      }else if (params.value === 'patient_attended')\n      {\n        return (\n          <span  className={classes.PatientAttendedLabel}> PA </span>\n        );\n      }\n      else{\n        return 'Unknown';\n      }\n    }\n  },\n  { field: 'bookingRef', headerName: 'Ref No.', width: 120 , renderCell: (params) =>{\n    return (\n      <Tooltip title=\"Go Find By Ref\" placement=\"right\">\n          <Link className={classes.RefLink}\n          //  onClick={\n          //   () => {\n          //     console.log(params.value);\n\n          //     setState(state => ({...state, currentMenuIndex: getMenuIndex(`pcr` , `findByRef`)}));\n          //     setState(state => ({...state, ref : params.value}));\n          //     setState(state => ({...state, refError : false})); \n          //     setState(state => ({...state, foundRecords : []}));\n          //     setState(state => ({...state, findRecords : !state.findRecords}));\n          //   }\n          // }\n          \n          >\n            {params.value}\n          </Link>\n      </Tooltip>\n\n    );\n  }},\n  { field: 'fullname', headerName: 'Fullname', width: 250 },\n  { field: 'email', headerName: 'Email', width: 200 },\n  { field: 'phone', headerName: 'Tel', width: 150 },\n  { field: 'notes', headerName: 'Notes', width: 500 },\n\n    \n    ];\n  \n\n  }\n\n\n\n  const [state, setState] = React.useContext(GlobalState);  \n\n  const [data, setData] = React.useState({bookings: [] , cachedBookings: [], isFetching : true});\n\n  const [selectedRow, setSelectedRow] = React.useState(null);\n\n  const [selectedBooking, setSelectedBooking] = React.useState(null);\n  const [seeDetailsDialogOpen, setSeeDetailsDialogOpen] = React.useState(false);\n\n  const [corporate, setCorporate] = useState(corporates[0]);\n  const corporateChanged = (event) =>\n  {\n    setCorporate(event.target.value);\n  }\n  \n\n  const [filter,setFilter] = React.useState('');\n\n\n  const lastPromise = useRef();\n\n  const formatTimeStamp = (timeStamp) =>\n  {\n    const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\n    const timeStampStr = dateformat(timeStamp, 'yyyy-mm-dd');\n    if (todayStr === timeStampStr)\n    {\n      return dateformat(timeStamp, \"'Today', h:MM:ss TT\");\n    }\n    else\n    {\n       return dateformat(timeStamp, \"mmm dS, h:MM:ss TT\");\n    }\n  }\n\n  const loadData = (top) =>\n  {\n    var api = BookService.getAllBookings;\n    if (props.date === 'today')\n    {\n      api = BookService.getTodayBookings;\n    }else if (props.date === 'old')\n    {\n      api = BookService.getOldBookings;\n    }else if (props.date === 'future')\n    {\n      api = BookService.getFutureBookings;\n    }else if (props.date === 'recent')\n    {\n      api = BookService.getRecentBookingsAll;\n    }\n    else if (props.date === 'deleted')\n    {\n      api = BookService.getDeletedBookings;\n    }\n     \n    setData({bookings: [], cachedBookings: [], isFetching: true});\n   \n    // console.log(props)\n\n    const currentPromise = api(top).then( (res) =>{\n      // console.log(res)\n      for (var i=0; i < res.data.length; i++)\n      {\n        res.data[i] = {...res.data[i], id : i + 1}\n      }  \n      setData({bookings: [...res.data], cachedBookings: [...res.data], isFetching: false});\n      // return res.data;\n    }).catch(err => {\n      console.error(err)\n    })\n\n    // lastPromise.current = currentPromise;\n\n    // currentPromise.then(\n    //   result => {\n    //     if (currentPromise === lastPromise.current) {\n    //       setData({bookings: [...result], cachedBookings: [...result], isFetching: false});\n    //       setPage(1);\n    //     }\n    //   },\n    //   e => {\n    //     if (currentPromise === lastPromise.current) {\n    //         console.error(e);\n    //         setData({bookings: data.bookings, cachedBookings: data.cachedBookings, isFetching: false});\n    //     }\n    //   });\n\n  }\n\n  useEffect( () => {\n            setTopCount(25)\n            loadData(25)\n        },\n        [props.date]);\n\n\n\n\n  useEffect( () => {\n\n        if (filter && filter.trim().length > 0)\n        {\n          var filteredData = data.cachedBookings.filter( (element) => \n\n             (element.fullname.toLowerCase().indexOf(filter.toLowerCase()) >= 0)\n              \n          );\n  \n  \n          setData({bookings: [...filteredData], cachedBookings: data.cachedBookings, isFetching: false});\n        }else\n        {\n          setData({bookings: [...data.cachedBookings], cachedBookings: data.cachedBookings, isFetching: false});\n        }\n      },\n      [filter]);\n\n  \n      useEffect(() => {\n\n       loadData(topCount)\n    \n      }, [state.bookingDialogDataChanged]);    \n\n\n  const handleCloseSeeDetaisDialog = () =>\n  {\n    setSelectedBooking(null);\n    setSeeDetailsDialogOpen(false);\n  }    \n  \n  const openDetailsDialog = (event, id) =>\n  {\n    const booking = data.bookings.find(element => element._id === id);\n    setSelectedBooking(booking);\n    setSeeDetailsDialogOpen(true);\n  }\n\n  const refreshClicked = (event) =>{\n    setFilter('');\n    loadData(topCount)\n  }\n\n  const filterChanged = (event) =>{\n    setFilter(event.target.value);\n  }\n\n  const handleSelectionChanged = (newSelection) =>\n  {\n    if (newSelection.length > 0){\n      setSelectedRow(newSelection.rows[0]);\n    }\n    \n  }\n\n  const [page, setPage] = React.useState(1);\n\n  const handleExcelButtonClicked = (event) =>\n  {\n    setOpenDialogExcel(true);\n  }\n\n  const isTopSelectHidden = (date)=>\n  {\n    return date === 'live' || date === 'positive' || date === 'late' || date === 'today'\n  }\n\n\n  return (\n    <React.Fragment>\n      {data.isFetching && (\n        <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\n          <LinearProgress color=\"primary\" />\n        </div>\n      )}\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"space-between\"\n        alignItems=\"flex-end\"\n      >\n        <Grid item md={4}>\n          <div style={{ textAlign: \"left\", paddingLeft: \"10px\" }}>\n            <Grid\n              container\n              direction=\"row\"\n              justify=\"flex-start\"\n              alignItems=\"center\"\n            >\n              <Grid item>\n                <span style={{ paddingRight: \"15px\", color: \"#555\" }}>\n                  {\" \"}\n                  {getTableIcon(props.date)}{\" \"}\n                </span>\n              </Grid>\n              <Grid item>\n                <span\n                  style={{\n                    fontSize: \"1.4rem\",\n                    fontWeight: \"600\",\n                    color: \"#444\",\n                  }}\n                >\n                  {\" \"}\n                  {getTableTitle(props.date)}{\" \"}\n                </span>\n              </Grid>\n              <Grid item>\n                <Tooltip title=\"Refresh\" placement=\"right\">\n                  <IconButton\n                    color=\"primary\"\n                    className={classes.refreshButton}\n                    onClick={refreshClicked}\n                  >\n                    <RefreshIcon />\n                  </IconButton>\n                </Tooltip>\n              </Grid>\n            </Grid>\n          </div>\n        </Grid>\n\n        <Grid item md={3}>\n          {props.date === \"completed\" && state.showCreateExcel && (\n            <div style={{ paddingBottom: \"5px\" }}>\n              <Button\n                className={classes.ExportToExcelButton}\n                variant=\"outlined\"\n                color=\"default\"\n                onClick={handleExcelButtonClicked}\n                startIcon={\n                  <FontAwesomeIcon\n                    style={{ color: \"#009900\" }}\n                    icon={faFileExcel}\n                  />\n                }\n              >\n                export to excel\n              </Button>\n            </div>\n          )}\n        </Grid>\n\n        {data.isFetching && <div className={classes.HideNowRows}></div>}\n\n        <Grid item md={3}>\n          <TextField\n            variant=\"standard\"\n            value={filter}\n            onChange={filterChanged}\n            margin=\"normal\"\n            size=\"small\"\n            id=\"filter\"\n            label=\"Filter\"\n            name=\"filter\"\n            autoComplete=\"off\"\n          />\n        </Grid>\n\n        <Grid item hidden={isTopSelectHidden(props.date)}>\n          <FormControl className={classes.topSelect}>\n            <InputLabel id=\"top-select-label\">Limit</InputLabel>\n            <Select\n              labelId=\"top-select-label\"\n              id=\"top-simple-select\"\n              value={topCount}\n              onChange={topCountChanged}\n            >\n              <MenuItem value={25}>25</MenuItem>\n              <MenuItem value={50}>50</MenuItem>\n              <MenuItem value={100}>100</MenuItem>\n              <MenuItem value={500}>500</MenuItem>\n              <MenuItem value={1000}>1000</MenuItem>\n              <MenuItem value={10000}>ALL</MenuItem>\n            </Select>\n          </FormControl>\n\n          {/* <Button onClick={() => loadData(true)}> Show all records </Button> */}\n        </Grid>\n      </Grid>\n\n      <div style={{ height: 700, width: \"100%\" }}>\n        <DataGrid\n          rows={data.bookings}\n          columns={columns}\n          autoPageSize\n          page={page}\n          onPageChange={(params) => {\n            setPage(params.page);\n          }}\n          onSelectionChange={handleSelectionChanged}\n        />\n      </div>\n\n      <BookingDialog\n        booking={selectedBooking}\n        open={seeDetailsDialogOpen}\n        onClose={handleCloseSeeDetaisDialog}\n      />\n\n      {data.bookings && data.bookings.length > 0 && (\n        <Dialog\n          maxWidth=\"lg\"\n          open={openDialogExcel}\n          onClose={handleCloseDialogExcel}\n          PaperComponent={PaperComponent}\n          aria-labelledby=\"form-dialog-title\"\n        >\n          <DialogTitle id=\"draggable-dialog-title\">\n            <Grid\n              container\n              spacing={2}\n              direction=\"row\"\n              justify=\"center\"\n              alignItems=\"center\"\n            >\n              <Grid item>\n                <FontAwesomeIcon\n                  style={{ color: \"#2f942e\", fontSize: \"2rem\" }}\n                  icon={faFileExcel}\n                />\n              </Grid>\n\n              <Grid item>\n                <div\n                  style={{\n                    color: \"#2f942e\",\n                    paddingBottom: \"5px\",\n                    fontWeight: \"800\",\n                  }}\n                >\n                  {\" \"}\n                  Export to EXCEL{\" \"}\n                </div>\n              </Grid>\n            </Grid>\n\n            <Divider />\n          </DialogTitle>\n          <DialogContent>\n            <div\n              style={{\n                minHeight: \"600px\",\n                maxHeight: \"600px\",\n                minWidth: \"1200px\",\n                maxWidth: \"1200px\",\n              }}\n            >\n              <div>\n                <Grid row container justify=\"center\" spacing={3}>\n                  <Grid item>\n                    <FormControlLabel\n                      control={\n                        <Switch\n                          checked={justCorporate}\n                          onChange={justCorporateChanged}\n                          name=\"justCorporate\"\n                        />\n                      }\n                      label=\"Just Corporate Records\"\n                    />\n                  </Grid>\n\n                  {justCorporate && (\n                    <Grid item>\n                      <FormControl\n                        style={{ marginTop: \"0px\" }}\n                        className={classes.formControl}\n                      >\n                        <Select\n                          labelId=\"select-corporate\"\n                          id=\"select-corporate-id\"\n                          value={corporate}\n                          onChange={corporateChanged}\n                        >\n                          {corporates.map((element) => (\n                            <MenuItem value={element}>{`${element}`}</MenuItem>\n                          ))}\n                        </Select>\n                      </FormControl>\n                    </Grid>\n                  )}\n                </Grid>\n\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                  <Grid row container justify=\"center\" spacing={3}>\n                    <Grid item>\n                      <KeyboardDatePicker\n                        disableToolbar\n                        variant=\"inline\"\n                        format=\"dd/MM/yyyy\"\n                        margin=\"normal\"\n                        id=\"date-picker-from\"\n                        label=\"From\"\n                        value={fromDate}\n                        onChange={handleFromDateChange}\n                        KeyboardButtonProps={{\n                          \"aria-label\": \"change date\",\n                        }}\n                      />\n                    </Grid>\n\n                    <Grid item>\n                      <KeyboardDatePicker\n                        disableToolbar\n                        variant=\"inline\"\n                        format=\"dd/MM/yyyy\"\n                        margin=\"normal\"\n                        id=\"date-picker-until\"\n                        label=\"Until\"\n                        value={untilDate}\n                        onChange={handleUntilDateChange}\n                        KeyboardButtonProps={{\n                          \"aria-label\": \"change date\",\n                        }}\n                      />\n                    </Grid>\n\n                    <Grid item>\n                      <div style={{ paddingTop: \"30px\", marginLeft: \"20px\" }}>\n                        <ReactHTMLTableToExcel\n                          id=\"test-table-xls-button\"\n                          className={classes.ExportToExcelButtonInline}\n                          table=\"table-to-xls\"\n                          filename={`PCR.Report.${fromDateStr}.${untilDateStr}`}\n                          sheet=\"PCR-Report\"\n                          buttonText=\"Download as XLS\"\n                        />\n                      </div>\n                    </Grid>\n                  </Grid>\n                </MuiPickersUtilsProvider>\n              </div>\n\n              <div>\n                <Grid container spacing={3}>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkDate}\n                          onChange={chkDateChanged}\n                          name=\"chkDate\"\n                        />\n                      }\n                      label=\"Date\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkForename}\n                          onChange={chkForenameChanged}\n                          name=\"chkForename\"\n                        />\n                      }\n                      label=\"Forename\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkSurname}\n                          onChange={chkSurnameChanged}\n                          name=\"chkSurname\"\n                        />\n                      }\n                      label=\"Surname\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkDOB}\n                          onChange={chkDOBChanged}\n                          name=\"chkDOB\"\n                        />\n                      }\n                      label=\"D.O.B\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkEmail}\n                          onChange={chkEmailChanged}\n                          name=\"chkEmail\"\n                        />\n                      }\n                      label=\"Email\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkTel}\n                          onChange={chkTelChanged}\n                          name=\"chkTel\"\n                        />\n                      }\n                      label=\"Tel\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkCertificate}\n                          onChange={chkCertificateChanged}\n                          name=\"chkCertificate\"\n                        />\n                      }\n                      label=\"Certificate\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkAntiBodyTest}\n                          onChange={chkAntiBodyTestChanged}\n                          name=\"chkAntiBodyTest\"\n                        />\n                      }\n                      label=\"AntiBodyTest\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkextRef}\n                          onChange={chkextRefChanged}\n                          name=\"chkextRef\"\n                        />\n                      }\n                      label=\"Lab No.\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkPrice}\n                          onChange={chkPriceChanged}\n                          name=\"chkPrice\"\n                        />\n                      }\n                      label=\"Price\"\n                    />\n                  </Grid>\n                </Grid>\n              </div>\n\n              <div style={{ width: \"100%\", paddingTop: \"20px\" }}>\n                <table className={classes.table} id=\"table-to-xls\">\n                  <tr>\n                    {chkDate && <th className={classes.th}>Date</th>}\n                    {chkForename && <th className={classes.th}>Forename</th>}\n                    {chkSurname && <th className={classes.th}>Surename</th>}\n                    {chkDOB && <th className={classes.th}>D.O.B</th>}\n                    {chkEmail && <th className={classes.th}>Email</th>}\n                    {chkTel && <th className={classes.th}>Tel</th>}\n                    {chkCertificate && (\n                      <th className={classes.th}>Certificate</th>\n                    )}\n                    {chkAntiBodyTest && (\n                      <th className={classes.th}>AntiBodyTest</th>\n                    )}\n                    {chkextRef && <th className={classes.th}>Lab No.</th>}\n                    {chkPrice && <th className={classes.th}>Price (£) </th>}\n                  </tr>\n\n                  {data.bookings\n                    .filter((booking) => {\n                      if (!justCorporate) {\n                        return (\n                          booking.bookingDate >= fromDateStr &&\n                          booking.bookingDate <= untilDateStr\n                        );\n                      } else {\n                        return (\n                          booking.bookingDate >= fromDateStr &&\n                          booking.bookingDate <= untilDateStr &&\n                          booking.paid &&\n                          booking.paidBy === \"corporate\" &&\n                          booking.corporate === corporate\n                        );\n                      }\n                    })\n\n                    .map((booking) => (\n                      <tr>\n                        {chkDate && (\n                          <td className={classes.td}>\n                            {FormatDateFromString(booking.bookingDate)}\n                          </td>\n                        )}\n                        {chkForename && (\n                          <td className={classes.td}>\n                            {booking.forenameCapital}\n                          </td>\n                        )}\n                        {chkSurname && (\n                          <td className={classes.td}>\n                            {booking.surnameCapital}\n                          </td>\n                        )}\n                        {chkDOB && (\n                          <th className={classes.th}>\n                            {/* {FormatDateFromString(booking.birthDate)} */}\n                          </th>\n                        )}\n                        {chkEmail && (\n                          <td className={classes.td}>{booking.email}</td>\n                        )}\n                        {chkTel && (\n                          <td className={classes.td}>{booking.phone}</td>\n                        )}\n                        {chkCertificate && (\n                          <td className={classes.td}>\n                            {booking.certificate ? \"YES\" : \"NO\"}\n                          </td>\n                        )}\n                        {chkAntiBodyTest && (\n                          <td className={classes.td}>\n                            {booking.antiBodyTest ? \"YES\" : \"NO\"}\n                          </td>\n                        )}\n                        {chkextRef && (\n                          <td className={classes.td}>{booking.extRef}</td>\n                        )}\n                        {chkPrice && (\n                          <td className={classes.td}>\n                            {PriceCalculator.calculatePrice(booking)}\n                          </td>\n                        )}\n                      </tr>\n                    ))}\n                </table>\n              </div>\n            </div>\n          </DialogContent>\n        </Dialog>\n      )}\n    </React.Fragment>\n  );\n} ","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\n\nexport default function Title(props) {\n  return (\n    <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n      {props.children}\n    </Typography>\n  );\n}\n\nTitle.propTypes = {\n  children: PropTypes.node,\n};","import React, { useEffect } from 'react';\nimport { useTheme } from '@material-ui/core/styles';\nimport { LineChart, Line, XAxis, YAxis, Label, ResponsiveContainer } from 'recharts';\nimport Title from './Title';\nimport dateformat from 'dateformat';\nimport BookService from './services/BookService';\nimport { LinearProgress } from '@material-ui/core';\n\n// Generate Sales Data\nfunction createData(time, amount) {\n  return { time, amount };\n}\n\n\nconst emptyData = [\n  createData('09:00', 0),\n  createData('10:00', 0),\n  createData('11:00', 0),\n  createData('12:00', 0),\n  createData('13:00', 0),\n  createData('14:00', 0),\n  createData('15:00', 0),\n  createData('16:00', 0),\n  createData('17:00', 0),\n  createData('18:00', undefined),\n\n];\n\nconst getCount = (data, str) =>\n{\n  if (!data)\n    return 0;\n\n  var count = 0;\n  for (var i=0; i < data.length; i++)\n  {\n    if (data[i]._id.substr(0,2) === str)\n    {\n      count += data[i].count;\n    }\n  }\n  return count;\n}\n\nexport default function Chart() {\n  const theme = useTheme();\n\n  const [data, setData] = React.useState(emptyData);\n  const [loading, setLoading] = React.useState(false)\n\n  useEffect(() =>\n  {\n    const fetchData = async () =>\n    {\n      const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\n      var result = [];\n      try\n      {\n          setLoading(true)\n          const res = await BookService.getBookingsStatsByDateStr(todayStr);\n          setLoading(false)\n          const data = res.data.result;\n          result.push(createData('09:00', getCount(data,'09')));\n          result.push(createData('10:00', getCount(data,'10')));\n          result.push(createData('11:00', getCount(data,'11')));\n          result.push(createData('12:00', getCount(data,'12')));\n          result.push(createData('13:00', getCount(data,'13')));\n          result.push(createData('14:00', getCount(data,'14')));\n          result.push(createData('15:00', getCount(data,'15')));\n          result.push(createData('16:00', getCount(data,'16')));\n          result.push(createData('17:00', getCount(data,'17')));\n          result.push(createData('18:00', undefined));\n \n           setData(result);\n      }\n      catch(err){\n        setLoading(false)\n        console.error(err);\n      }\n\n    }\n  \n   fetchData();\n\n  }, [] );\n\n  return (\n    <React.Fragment>\n       {loading && (\n        <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\n          <LinearProgress color=\"primary\" />\n        </div>\n      )}\n      <Title>Today</Title>\n      <ResponsiveContainer>\n        <LineChart\n          data={data}\n          margin={{\n            top: 16,\n            right: 16,\n            bottom: 0,\n            left: 24,\n          }}\n        >\n          <XAxis dataKey=\"time\" stroke={theme.palette.text.secondary} />\n          <YAxis stroke={theme.palette.text.secondary}>\n            <Label\n              angle={270}\n              position=\"left\"\n              style={{ textAnchor: 'middle', fill: theme.palette.text.primary }}\n            >\n              Online Bookings\n            </Label>\n          </YAxis>\n          <Line type=\"monotone\" dataKey=\"amount\" stroke={theme.palette.primary.main} dot={false} />\n        </LineChart>\n      </ResponsiveContainer>\n    </React.Fragment>\n  );\n}","import React, { useEffect } from \"react\";\nimport Link from \"@material-ui/core/Link\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Title from \"./Title\";\nimport { Grid, LinearProgress, Tooltip } from \"@material-ui/core\";\nimport * as dateformat from \"dateformat\";\nimport BookService from \"./services/BookService\";\nimport BookingDialog from \"./BookingDialog\";\n\nconst useStyles = makeStyles({\n  depositContext: {\n    flex: 1,\n  },\n\n  bookingBox: {\n    display: \"flex\",\n    margin: \"5px\",\n    padding: \"5px\",\n    maxWidth: \"90px\",\n    minHeight: \"30px\",\n    border: \"1px solid #eee\",\n    fontSize: \"12px\",\n    fontWeight: \"500\",\n    cursor: \"pointer\",\n    backgroundColor: \"#ebedf7\",\n    color: \"#3f51b5\",\n    boxShadow: \"2px 4px #fafafa\",\n    borderRadius: \"5px\",\n    textAlign: \"center\",\n    alignItems: \"center\",\n    justifyItems: \"center\",\n    align: \"center\",\n\n    \"&:hover\": {\n      background: \"#3f51b5\",\n      color: \"#ebedf7\",\n    },\n  },\n});\n\nconst isWeekend = (date) =>\n{\n    return (date.getDay() === 0 || date.getDay() === 6) /// Weekend\n}\n\nconst getCurrentTimeSlot = (now) =>\n{\n    var min = now.getMinutes();\n    var hour = now.getHours();\n    var pm = (hour >= 12);\n    if (hour > 12)\n    {\n      hour = hour - 12;\n    }\n\n    if (min >= 0 && min < 15)\n    {\n      min = 0;\n    }else if (min >= 15 && min < 30)\n    {\n      min = 15;\n    }else if (min >= 30 && min < 45)\n    {\n      min = 30;\n    }else if (min >= 45)\n    {\n      min = 45;\n    }\n\n    const minStr = min < 10 ? `0${min}` : `${min}`;\n    const hourStr = hour < 10 ? `0${hour}` : `${hour}`;\n    const pmStr = pm ? 'PM' : 'AM';\n\n    const timeStr = `${hourStr}:${minStr} ${pmStr}`;\n\n    if (isWeekend(now))\n    {\n      if (now.getHours() < 10 || now.getHours() >= 14)\n      {\n        return null;\n      }\n      else\n      {\n        return timeStr;\n      }\n    }\n    else\n    {\n      if (now.getHours() < 9 || now.getHours() >= 18)\n      {\n        return null;\n      }\n      else\n      {\n        return timeStr;\n      }\n\n    }\n}\n\nconst getCurrentTimeSlotLabel = (timeStr) =>\n{\n  if (!timeStr)\n  {\n    return 'Closed';\n  }\n\n  var hour = parseInt(timeStr.substr(0,2));\n  var minute = parseInt(timeStr.substr(3,2)); \n  var pm = timeStr.indexOf('PM') > 0;\n  if (minute !== 45)\n  {\n    minute += 15;\n  }\n  else{\n    minute = 0;\n    hour += 1;\n    if (hour >= 12)\n    {\n      pm = true;\n    }\n    if (hour > 12)\n    {\n      hour = hour - 12;\n    }\n  }\n\n  const minStr = minute < 10 ? `0${minute}` : `${minute}`;\n  const hourStr = hour < 10 ? `0${hour}` : `${hour}`;\n  const pmStr = pm ? 'PM' : 'AM';\n\n  const endTimeStr = `${hourStr}:${minStr} ${pmStr}`;\n\n  return `${timeStr} - ${endTimeStr}`;\n\n}\n\nexport default function CurrentVisits() {\n  const classes = useStyles();\n\n  const [current, setCurrent] = React.useState(new Date());\n  const [bookings, setBookings] = React.useState([]);\n\n  const [selectedBooking, setSelectedBooking] = React.useState(null);\n  const [openDialog, setOpenDialog] = React.useState(false);\n\n  const [loading, setLoading] = React.useState(false);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setCurrent(new Date());\n    }, 30000);\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, []);\n\n  useEffect(() => {\n    const currentTimeSlot = getCurrentTimeSlot(current);\n    if (!currentTimeSlot) return;\n    const todayStr = dateformat(current, \"yyyy-mm-dd\");\n    setLoading(true);\n    BookService.getBookingsByDateStrandTime(todayStr, currentTimeSlot)\n      .then((res) => {\n        setLoading(false);\n        if (res.data.status === \"OK\") {\n          setBookings([...res.data.bookings]);\n        }\n      })\n      .catch((err) => {\n        setLoading(false);\n        console.log(err);\n      });\n  }, [current]);\n\n  const getBookingsBox = (_bookings) => {\n    if (_bookings && _bookings.length > 0) {\n      return (\n        <div className={classes.root}>\n          <Grid\n            container\n            justify=\"flex-start\"\n            alignItems=\"flex-start\"\n            spacing={0}\n          >\n            {_bookings.map((booking) => (\n              <Grid item>\n                <div\n                  className={classes.bookingBox}\n                  onClick={(event) => bookingCliked(event, booking)}\n                >\n                  <span style={{ textAlign: \"center\" }}>\n                    {\" \"}\n                    {`${booking.surnameCapital}`.substring(0, 10)}{\" \"}\n                  </span>\n                </div>\n              </Grid>\n            ))}\n          </Grid>\n        </div>\n      );\n    }\n  };\n\n  const bookingCliked = (event, booking) => {\n    setSelectedBooking(booking);\n    setOpenDialog(true);\n  };\n\n  const handleCloseDialog = () => {\n    setOpenDialog(false);\n  };\n\n  return (\n    <React.Fragment>\n      {loading && (\n        <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\n          <LinearProgress color=\"primary\" />\n        </div>\n      )}\n\n      <Title>Current Visits</Title>\n      <Typography component=\"p\" variant=\"h6\">\n        {getCurrentTimeSlotLabel(getCurrentTimeSlot(current))}\n      </Typography>\n      <Typography color=\"textSecondary\" className={classes.depositContext}>\n        on {dateformat(current, \"dd mmmm, yyyy\")}\n      </Typography>\n\n      {getBookingsBox(bookings)}\n\n      <BookingDialog\n        booking={selectedBooking}\n        open={openDialog}\n        onClose={handleCloseDialog}\n      />\n    </React.Fragment>\n  );\n}\n","import React, { useEffect } from 'react';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Title from './Title';\nimport BookService from './services/BookService';\nimport * as dateformat from 'dateformat';\nimport GlobalState from './../GlobalState';\nimport { getMenuIndex } from './../MenuList';\nimport {FormatDateFromString, FormatDateFromStringShortYear} from './DateFormatter';\nimport { LinearProgress } from '@material-ui/core';\n\n\nconst useStyles = makeStyles((theme) => ({\n  seeMore: {\n    marginTop: theme.spacing(3),\n  },\n}));\n\nexport default function BookingView() {\n  const classes = useStyles();\n  const [state, setState] = React.useContext(GlobalState);  \n\n  const [data, setData] = React.useState({bookings: [] , isFetching : false});\n\n  const [refresh, setRefresh] = React.useState(false);\n\n  const [loading, setLoading] = React.useState(false)\n\n  const seeMoreRecords = (event) => {\n    event.preventDefault();\n    setState(state=>({...state, currentMenuIndex:getMenuIndex('gynae',`recentBookings`)}));\n  }\n\n  const loadData = () => \n  {\n    setData({bookings: data.bookings, isFetching: true});\n    setLoading(true)\n    BookService.getRecentBookings().then( (res) =>{\n      setLoading(false)\n        setData({bookings: res.data, isFetching: false});\n\n    }).catch( (err) => {\n      setLoading(false)\n        console.log(err);\n        setData({bookings: data.bookings, isFetching: false});\n    });\n  }\n\n\n  useEffect( () => {\n          loadData();\n        },\n        [refresh]);   \n\n\n   useEffect( () => {\n     loadData();\n     const interval = setInterval(() => {\n       setRefresh(refresh => !refresh);\n     }, 30000);\n\n     return () =>\n     {\n       clearInterval(interval)\n     }\n     \n   }, []) ;    \n\n   const formatTimeStamp = (timeStamp) =>\n   {\n     const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\n     const timeStampStr = dateformat(timeStamp, 'yyyy-mm-dd');\n     if (todayStr === timeStampStr)\n     {\n       return dateformat(timeStamp, \"'Today', h:MM:ss TT\");\n     }\n     else\n     {\n        return dateformat(timeStamp, \"mmm dS, h:MM:ss TT\");\n     }\n   }\n\n  return (\n    <React.Fragment>\n       {loading && (\n        <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\n          <LinearProgress color=\"primary\" />\n        </div>\n      )}\n      <Title>Recent Bookings</Title>\n      <Table size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell>TimeStamp</TableCell>        \n            <TableCell>Fullname</TableCell>\n            <TableCell>Email</TableCell>\n            <TableCell>Tel</TableCell>\n            <TableCell>Booked Date</TableCell>\n            <TableCell>Booked Time</TableCell> \n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {data.bookings.map((row) => (\n            <TableRow key={row._id}>\n              <TableCell>{formatTimeStamp(row.timeStamp)}</TableCell>\n              <TableCell>{row.fullname}</TableCell>\n              <TableCell>{row.email}</TableCell>\n              <TableCell>{row.phone}</TableCell>\n              <TableCell>{FormatDateFromString(row.bookingDate)}</TableCell>\n              <TableCell>{row.bookingTime}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n      <div className={classes.seeMore}>\n        <Link color=\"primary\" href=\"#\" onClick={seeMoreRecords}>\n          See more records\n        </Link>\n      </div>\n    </React.Fragment>\n  );\n}","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Chart from './Chart';\nimport CurrentVisits from './CurrentVisits';\n\n\n\nimport { Tooltip } from '@material-ui/core';\nimport GlobalState from './../GlobalState';\nimport BookingView from './BookingView';\n\nconst useStyles = makeStyles((theme) => ({\n \n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 240,\n  },\n}));\n\nexport default function DashboardPreview() {\n  const classes = useStyles();\n  const [state, setState] = React.useContext(GlobalState);\n\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n\n  return (\n        <React.Fragment>\n\n<           Grid container spacing={3}>\n                    {/* Chart */}\n                    <Grid item xs={12} md={4} lg={6}>\n                    <Paper className={fixedHeightPaper}>\n                        <Chart />\n                    </Paper>\n                    </Grid>\n                    {/* Current Visits */}\n                    <Grid item xs={12} md={4} lg={6}>\n                    <Paper className={fixedHeightPaper}>\n                        <CurrentVisits />\n                    </Paper>\n                    </Grid>\n                    {/* Recent Bookings */}\n                    <Grid item xs={12}>\n                    <Paper className={classes.paper}>\n                        <BookingView/>\n                    </Paper>\n                    </Grid>\n          </Grid>\n        </React.Fragment>\n  );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport GlobalState from './../GlobalState';\nimport Grid from '@material-ui/core/Grid';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { Button, Checkbox, FormControlLabel, Link, TextField, Tooltip } from '@material-ui/core';\nimport PDFService from './services/PDFService';\n\nimport {calculatePrice} from './PriceCalculator';\n\n\nimport bookingService from './services/BookService';\nimport CheckIcon from '@material-ui/icons/Check';\nimport CloseIcon from '@material-ui/icons/Close';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nimport {FormatDateFromString, RevertFormatDateFromString} from './DateFormatter';\n\nimport PrintIcon from '@material-ui/icons/Print';\n\n\nconst useStyles = makeStyles((theme) => ({\n  box: {\n    backgroundColor : \"#373737\",\n    color: \"#fff\",\n    padding : \"1px\",\n    borderRadius : \"4px\",\n    textAlign: \"justify\",\n    paddingRight: \"40px\"\n  },\n\n  boxRed: {\n    backgroundColor : \"#dc2626\",\n    color: \"#fff\",\n    padding : \"1px\",\n    borderRadius : \"4px\",\n    textAlign: \"justify\",\n    paddingRight: \"40px\"\n  },\n\n  boxInfo: {\n    textAlign: \"justify\",\n    backgroundColor : \"#fafafa\",\n    color: \"#333\",\n    padding : \"1px\",\n    borderRadius : \"4px\",\n    paddingRight: \"40px\",\n    border: \"1px solid #eee\",\n  },\n\n  ul: {\n     listStyle: \"none\",\n     padding: \"0\",\n     margin: \"0\"\n  },\n\n  li: {\n    marginBottom : \"15px\"\n  },\n\n\n  icon: {\n    marginRight : \"8px\"\n  },\n\n  root: {\n    width: '100%',\n  },\n\n  lineThrough:{\n    textDecoration : \"line-through\",\n  },\n\n\n\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    flexBasis: '33.33%',\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n  },\n  secondaryHeading: {\n    fontSize: theme.typography.pxToRem(15),\n  },\n\n  infoDetails:{\n    textAlign: \"left\",\n  },\n\n  infoTitle:{\n    fontWeight: \"800\",\n    marginRight: \"10px\"\n  },\n\n  infoData:{\n    fontWeight: \"400\",\n  },\n\n  title:\n  {\n    // textAlign : \"center\",\n    // fontWeight : \"500\",\n    // margin: \"10px\",\n    // backgroundColor : \"#eee\",\n    // padding : \"10px\",\n    // borderRadius : \"4px\"\n    textAlign: \"center\",\n    fontWeight : \"600\",\n    marginLeft: \"10px\",\n    marginBottom: \"5px\"\n\n  },\n\n  Accordion:{\n    backgroundColor : \"#f5f5f5\",\n    color: \"#222\"\n  },\n\n  AccordionDeleted:{\n    backgroundColor : \"#aaa\",\n    color: \"#555\"\n  },\n\n  DownloadForm:{\n      marginTop: \"10px\",\n      marginBottom : \"10px\"\n  },\n\n  infoDataCharges:{\n    fontSize : \"18px\",\n    color: \"green\",\n    fontWeight : \"600\"\n  },\n\n  infoDataChargesHigher:{\n    fontSize : \"18px\",\n    color: \"red\",\n    fontWeight : \"600\"\n  },\n  BookedLabel:{\n    color: \"#606060\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#606060\"\n  },\n\n  PatientAttendedLabel:{\n    color: \"#0066aa\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#0066aa\"\n  },\n\n  SampleTakenLabel:{\n    color: \"#0066cc\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#0066cc\"\n  },\n\n  ReportSentLabel:{\n    color: \"#009900\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#009900\"\n  },\n\n  ReportCertSentLabel:{\n    color: \"#009900\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#009900\"\n  },\n\n  PositiveLabel:{\n    color: \"red\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"red\"\n  },\n\n\n  EditButton:\n  {\n    marginBottom : \"20px\",\n    backgroundColor : \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\"\n    },\n    textDecoration : \"none !important\",\n    padding: \"10px\",\n    width: \"400px\"   \n  },\n\n  RestoreButton:\n  {\n    marginBottom : \"20px\",\n    backgroundColor : \"#fafafa\",\n    color: \"#555\",\n    \"&:hover\": {\n      background: \"#f1f1f1\",\n      color: \"#111\"\n    },\n    textDecoration : \"none !important\",\n    padding: \"10px\" ,\n    width: \"400px\"    \n  },\n\n\n  DeleteButton:\n  {\n    marginBottom : \"20px\",\n    backgroundColor : \"#d90015\",\n    \"&:hover\": {\n      background: \"#b80012\",\n      color: \"#fff\"\n    },\n\n    padding: \"10px\",\n    width: \"400px\"   \n    \n  },\n\n  SaveButton:\n  {\n    marginBottom : \"10px\",\n    padding: \"10px\",\n\n    backgroundColor : \"#d1175e\",\n    \"&:hover\": {\n      background: \"#bd0d50\",\n      color: \"#fff\",\n      \n    },\n    width: \"400px\"   \n\n  },\n\n  CancelButton:\n  {\n    marginBottom : \"20px\",\n    // padding: \"10px\"\n  },\n\n  TextBox: {\n    \n    padding : \"0px\"\n\n  },\n\n  checkIcon:{\n    color: \"green\",   \n  },\n\n  closeIcon:{\n    color: \"red\"\n  },\n\n  centeredLabel : {\n    display: \"flex\",\n    alignItems: \"center\"\n  }\n\n\n\n\n\n\n}));\n\n\n\n\nexport default function PersonsBox() {\n    const classes = useStyles();\n\n    const [state, setState] = React.useContext(GlobalState);\n\n    const [expanded, setExpanded] = React.useState('panel0');\n\n    const [editMode, setEditMode] = React.useState({edit : false, person : null});\n    const [deleteMode, setDeleteMode] = React.useState({delete : false, person : null});\n    const [restoreMode, setRestoreMode] = React.useState({restore : false, person : null});\n\n    const [saving, setSaving] =  React.useState(false);\n    const [deleting, setDeleting] =  React.useState(false);\n    const [restoring, setRestoring] =  React.useState(false);\n\n    const [validationError, setValidationError] = React.useState({});\n\n\n    const [bookingDate, setBookingDate] = React.useState('');\n    const [bookingTime, setBookingTime] = React.useState('');\n\n    const [fullname, setFullname] = React.useState('');\n    const [email, setEmail] = React.useState('');\n    const [tel, setTel] = React.useState('');\n    const [service, setService] = React.useState('');\n    const [notes, setNotes] = React.useState('');\n\n\n    const bookingDateChanged = (event) =>\n    {\n      setBookingDate(event.target.value);\n      setValidationError({...validationError, bookingDateError : false});\n    }\n\n    const bookingTimeChanged = (event) =>\n    {\n      setBookingTime(event.target.value);\n      setValidationError({...validationError, bookingTimeError : false});\n    }\n\n    const fullnameChanged = (event) =>\n    {\n      setFullname(event.target.value);\n    }\n\n    const emailChanged = (event) =>\n    {\n      setEmail(event.target.value);\n    }\n\n    const telChanged = (event) =>\n    {\n      setTel(event.target.value);\n    }\n\n    const serviceChanged = (event) =>\n    {\n      setService(event.target.value);\n    }\n\n    const notesChanged = (event) =>\n    {\n      setNotes(event.target.value);\n    }\n\n\n    const handleChange = (panel) => (event, isExpanded) => {\n      setExpanded(isExpanded ? panel : false);\n    };\n\n    const getStatusLabel = (status) => {\n      if (status === 'booked')\n      {\n        return (\n          <span className={classes.BookedLabel}> Booking Made </span>\n        );\n    \n      }else if (status === 'patient_attended')\n      {\n        return (\n          <span  className={classes.PatientAttendedLabel}> Patient Attended </span>\n        );\n    \n      }\n      else{\n        return 'Unknown';\n      }\n    }\n\n\n   const handleEditModeChanged = (edit, person) => {\n\n       if (edit)\n       {\n         setFullname(person.fullname);\n         setBookingDate(FormatDateFromString(person.bookingDate));\n         setBookingTime(person.bookingTime);\n         setEmail(person.email);\n         setTel(person.phone);\n         setService(person.service)\n         if (person.notes)\n         {\n          setNotes(person.notes);\n         }\n        \n         setEditMode({edit: edit, person: person});\n\n       }\n       else if (!edit && !person)\n       {\n         setEditMode({edit: edit, person: person});\n       }\n       else if (!edit && person)\n       {\n          const booking = {};\n          const bookingId = person._id;\n          booking.email = email;\n          booking.phone = tel;\n          booking.fullname = fullname;\n          booking.notes = notes;\n          booking.service = service;\n          booking.bookingDate = RevertFormatDateFromString(bookingDate);\n          booking.bookingTime = bookingTime;\n          booking.bookingRef = person.bookingRef;\n\n          if  (validateBooking(booking))\n          {\n            updateBooking({bookingId: bookingId, person: booking});\n          }\n       }\n   }\n\n   const validateDate = (str) =>\n   {\n     var error = false;\n     if (!str || str.length !== 10)\n     {\n       error = true;\n     }\n\n     if (str.charAt(4) !== '-'  || str.charAt(7) !== '-')\n     {\n       error = true;\n     }\n\n     try\n     {\n       \n       const result = /^\\d{4}-\\d{2}-\\d{2}$/.test(str);\n       if (!result)\n       {\n          error = true;\n       }\n\n       const year = parseInt(str.substr(0,4));\n       const month = parseInt(str.substr(5,2));\n       const day = parseInt(str.substr(8,2));\n\n       if (year < 1900)\n       {\n          error = true;\n       }\n\n       if (month < 1 || month > 12)\n       {\n         error = true;\n       }        \n\n       if (day > 31)\n       {\n         error = true;\n       }\n\n     }catch(err)\n     {\n       error = true;\n     }\n\n\n\n     return !error;\n   }\n\n   const validateTime =(str) =>\n   {\n     var error = false;\n\n     const result = /^\\d{2}:\\d{2} AM$|^\\d{2}:\\d{2} PM$/.test(str);\n     if (!result)\n     {\n        error = true;\n     }\n\n     try{\n       const hour = parseInt(str.substr(0,2));\n       const minute = parseInt(str.substr(3,2));\n\n       if (hour < 0 || hour > 12)\n       {\n         error = true;\n       }\n\n       if (minute < 0 || minute > 59)\n       {\n         error = true;\n       }\n\n     }catch(err)\n     {\n       error = true;\n     }\n\n     return !error;\n   }\n\n   const validateBooking = (booking) =>\n   {\n      var error = false;\n\n      if (!validateDate(booking.bookingDate))\n      {\n        error = true;\n        setValidationError({...validationError, bookingDateError : true});\n      }\n\n      if (!validateTime(booking.bookingTime))\n      {\n        error = true;\n        setValidationError({...validationError, bookingTimeError : true});\n      }\n     \n\n      return !error;\n   }\n\n   const updateBooking = (payload) =>\n   {\n       setSaving(true);\n       bookingService.updateBooking(payload).then( (res) => {\n        setSaving(false);\n        setEditMode({edit: false, person: null});\n        setState(state => ({...state, RefreshPersonInfo : !state.RefreshPersonInfo}));\n\n       }).catch ( (err) => {\n         setSaving(false);\n         setEditMode({edit: false, person: null});\n         console.log(err);\n       });\n   }\n\n   const deleteBooking = (id) =>\n   {\n       setDeleting(true);\n       bookingService.deleteBooking(id).then( (res) => {\n        setDeleting(false);\n        setDeleteMode({delete: false, person: null});\n        setState(state => ({...state, RefreshPersonInfo : !state.RefreshPersonInfo}));\n\n       }).catch ( (err) => {\n          setDeleting(false);\n          setDeleteMode({delete: false, person: null});\n         console.log(err);\n       });\n   }\n\n   const restoreBooking = (id) =>\n   {\n       setRestoring(true);\n       bookingService.unDeleteBooking(id).then( (res) => {\n        setRestoring(false);\n        setRestoreMode({restore: false, person: null});\n        setState(state => ({...state, RefreshPersonInfo : !state.RefreshPersonInfo}));\n\n       }).catch ( (err) => {\n        setRestoring(false);\n        setRestoreMode({restore: false, person: null});\n         console.log(err);\n       });\n   }\n\n   const changeBackToBookingMade = (event, id) =>\n   {\n     setSaving(true);\n     bookingService.changeBackToBookingMade(id).then(res => {\n       setSaving(false);\n       setState(state => ({...state, RefreshPersonInfo : !state.RefreshPersonInfo}));\n     }).catch(err => {\n       console.log(err);\n       setSaving(false);\n     })\n   }\n\n\n\n   const handleDeleteModeChanged = (del, person) => {\n\n    if (del)\n    {\n      setDeleteMode({delete: del, person: person});\n    }\n    else if (!del && !person)\n    {\n      setDeleteMode({delete: del, person: person});\n    }\n    else if (!del && person)\n    {\n        deleteBooking(person._id);\n    }\n  }\n\n  const handleRestoreModeChanged = (restore, person) => {\n\n    if (restore)\n    {\n      setRestoreMode({restore: restore, person: person});\n    }\n    else if (!restore && !person)\n    {\n      setRestoreMode({restore: restore, person: person});\n    }\n    else if (!restore && person)\n    {\n        restoreBooking(person._id);\n    }\n  }\n\n  return (\n    <React.Fragment>\n          \n      <Grid container direction=\"column\" spacing={1} justify=\"flex-start\" alignItems=\"center\">\n          <div className={classes.title}> Following Records Found :</div>\n\n          {state.foundRecords.map((person,index) => (\n   \n                <Grid item xs={12} md={12} key={`panel${index}`}>\n                <div className={classes.root}>\n                    <Accordion className={person.deleted ? classes.AccordionDeleted : classes.Accordion} expanded={expanded === `panel${index}`} onChange={handleChange(`panel${index}`)}>\n                    <AccordionSummary className={person.deleted ? classes.lineThrough : ''}\n                        expandIcon={<ExpandMoreIcon />}\n                        aria-controls=\"panel1bh-content\"\n                        id={`panel${index}bh-header`}\n                    >\n                      {person.deleted && (\n                          <Tooltip  title=\"This record has been deleted.\">\n                            <DeleteIcon  style={{padding: 0, margin: 0,  color: \"#fff\", fontSize: 25 }}/>\n                        </Tooltip>\n                      )}\n\n                        <Typography className={classes.heading}> {`#${index+1}`} </Typography>\n                        <Typography className={classes.secondaryHeading}>\n                        {`${person.fullname}`}\n                        </Typography>\n                    </AccordionSummary>\n\n                    <AccordionDetails className={classes.infoDetails}>\n                        \n\n\n                        <ul className={classes.ul}>\n\n                        {/* Restore Functionality ******************************************* */}  \n                        <li hidden={!(restoreMode.restore && restoreMode.person._id  === person._id)}>\n                              <div style={{fontWeight: \"500\", paddingBottom: \"5px\", paddingLeft: \"5px\", fontSize:\"16px\" , color:\"#fff\"}}>\n                                Are you sure you want to restore this record?\n                              </div>\n                            </li>\n\n                            <li hidden={!person.deleted || (restoreMode.restore && restoreMode.person._id === person._id)}>\n                                 <Button\n\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick = {() => {handleRestoreModeChanged(true, person)}}\n                                    className={classes.RestoreButton}\n                                 >\n                                   Restore This Record\n                                </Button>\n                            </li>\n\n                            <li hidden={!(restoreMode.restore && restoreMode.person._id  === person._id)}>\n                                 <Button\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    disabled = {restoring}\n                                    onClick = {() => {handleRestoreModeChanged(false, person)}}\n                                    className={classes.SaveButton}\n                                 >\n                                    YES, Restore this!\n                                </Button>\n                            </li>\n\n                            <li hidden={!(restoreMode.restore && restoreMode.person._id  === person._id)}>\n                                 <Button\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"default\"\n                                    disabled = {restoring}\n                                    onClick = {() => {handleRestoreModeChanged(false, null)}}\n                                    className={classes.CancelButton}\n                                 >\n                                    Cancel\n                                </Button>\n                            </li>\n\n                           {/*  ******************************************************************* */}\n\n                              {/* Edit Functionality ******************************************* */}\n\n                            <li hidden={person.deleted || deleteMode.delete || (editMode.edit && editMode.person._id === person._id)}>\n                                 <Button\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick = {() => {handleEditModeChanged(true, person)}}\n                                    className={classes.EditButton}\n                                 >\n                                    Edit Booking Info\n                                </Button>\n                            </li>\n\n                            <li hidden={!(editMode.edit && editMode.person._id  === person._id)}>\n                                 <Button\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    disabled = {saving}\n                                    onClick = {() => {handleEditModeChanged(false, person)}}\n                                    className={classes.SaveButton}\n                                 >\n                                    Save Changes\n                                </Button>\n                            </li>\n\n                            <li hidden={!(editMode.edit && editMode.person._id === person._id)}>\n                                 <Button\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"default\"\n                                    disabled = {saving}\n                                    onClick = {() => {handleEditModeChanged(false, null)}}\n                                    className={classes.CancelButton}\n                                 >\n                                    Cancel\n                                </Button>\n                            </li>\n                            \n                            {/* ****************************************************************************************** */}\n\n\n                            {/* Delete Functionality ******************************************* */}\n\n                            <li hidden={!(deleteMode.delete && deleteMode.person._id  === person._id)}>\n                              <div style={{fontWeight: \"600\",  paddingBottom: \"5px\", paddingLeft: \"5px\", fontSize:\"16px\"}}>\n                                Are you sure you want to delete this record?\n                              </div>\n                            </li>\n\n                            <li hidden={person.deleted ||  editMode.edit || (deleteMode.delete && deleteMode.person._id === person._id)}>\n                                 <Button\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick = {() => {handleDeleteModeChanged(true, person)}}\n                                    className={classes.DeleteButton}\n                                 >\n                                   Delete This Record\n                                </Button>\n                            </li>\n\n                            <li hidden={!(deleteMode.delete && deleteMode.person._id  === person._id)}>\n                                 <Button\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    disabled = {deleting}\n                                    onClick = {() => {handleDeleteModeChanged(false, person)}}\n                                    className={classes.SaveButton}\n                                 >\n                                    YES, Delete this!\n                                </Button>\n                            </li>\n\n                            <li hidden={!(deleteMode.delete && deleteMode.person._id === person._id)}>\n                                 <Button\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"default\"\n                                    disabled = {deleting}\n                                    onClick = {() => {handleDeleteModeChanged(false, null)}}\n                                    className={classes.CancelButton}\n                                 >\n                                    Cancel\n                                </Button>\n                            </li>\n                                 \n                            {/* ****************************************************************************************** */}\n\n                            <li className={classes.li}>\n                                <span className={classes.infoTitle}>BOOKED DATE</span> \n                            \n\n                                <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                   {FormatDateFromString(person.bookingDate) }\n                                  </span>  \n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                          <TextField \n                                                      fullWidth\n                                                      error={validationError.bookingDateError}\n                                                      className={classes.TextBox} \n                                                      value={bookingDate}\n                                                      onChange = {bookingDateChanged}\n                                                      inputProps= {{\n                                                          style:{\n                                                            padding: 0\n                                                          }\n                                                        }\n                                                      }\n                                                      > \n                                          </TextField> \n                                        </span> \n\n\n                            </li>\n\n                            <li className={classes.li}>\n                                <span className={classes.infoTitle}>BOOKED TIME</span> \n                                <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.bookingTime}</span>  \n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                          <TextField \n                                                      fullWidth\n                                                      error={validationError.bookingTimeError}\n                                                      className={classes.TextBox} \n                                                      value={bookingTime}\n                                                      onChange = {bookingTimeChanged}\n                                                      inputProps= {{\n                                                          style:{\n                                                            padding: 0\n                                                          }\n                                                        }\n                                                      }\n                                                      > \n                                          </TextField> \n                                        </span> \n\n\n                            </li>\n\n                            <li className={classes.li}>\n                            <span className={classes.infoTitle}>FULLNAME</span> \n                                        <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.fullname}</span>  \n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                        <TextField \n                                                      fullWidth\n                                                      className={classes.TextBox} \n                                                      value={fullname}\n                                                      onChange = {fullnameChanged}\n                                                      inputProps= {{\n                                                          style:{\n                                                            padding: 0\n                                                          }\n                                                        }\n                                                      }\n                                                      > \n                                          </TextField> \n                                        </span> \n                            </li>\n                            <li className={classes.li}>\n                                <span className={classes.infoTitle}>EMAIL</span> \n                                       <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.email}</span>  \n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                        <TextField \n                                                      fullWidth\n                                                      className={classes.TextBox} \n                                                      value={email}\n                                                      onChange = {emailChanged}\n                                                      inputProps= {{\n                                                          style:{\n                                                            padding: 0\n                                                          }\n                                                        }\n                                                      }\n                                                      > \n                                          </TextField> \n                                        </span>   \n                            </li>\n                            <li className={classes.li}>\n                                <span className={classes.infoTitle}>TEL</span>\n                                 <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.phone}</span>  \n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                        <TextField \n                                                      fullWidth\n                                                      className={classes.TextBox} \n                                                      value={tel}\n                                                      onChange = {telChanged}\n                                                      inputProps= {{\n                                                          style:{\n                                                            padding: 0\n                                                          }\n                                                        }\n                                                      }\n                                                      > \n                                          </TextField> \n                                        </span>  \n                            </li>\n                            <li className={classes.li} hidden={true}>\n                                <span className={classes.infoTitle}>SERVICE</span>\n                                 <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.service}</span>  \n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                        <TextField \n                                                      fullWidth\n                                                      className={classes.TextBox} \n                                                      value={service}\n                                                      onChange = {serviceChanged}\n                                                      inputProps= {{\n                                                          style:{\n                                                            padding: 0\n                                                          }\n                                                        }\n                                                      }\n                                                      > \n                                          </TextField> \n                                        </span>  \n                            </li>\n                            <li className={classes.li} hidden={true}>\n                                <span className={classes.infoTitle}>NOTES</span>\n                                 <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.notes}</span>  \n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                        <TextField \n                                                      fullWidth\n                                                      className={classes.TextBox} \n                                                      value={notes}\n                                                      onChange = {notesChanged}\n                                                      inputProps= {{\n                                                          style:{\n                                                            padding: 0\n                                                          }\n                                                        }\n                                                      }\n                                                      > \n                                          </TextField> \n                                        </span>  \n                            </li>\n                            <li className={classes.li}>\n                                <span className={classes.infoTitle}>STATUS</span> \n                                {getStatusLabel(person.status)} \n                            </li>\n      \n\n                        </ul>\n\n                    </AccordionDetails>\n                    </Accordion>\n                </div>\n            </Grid> \n          ))}\n    </Grid>\n    </React.Fragment>\n  );\n}\n","import React, { useEffect } from 'react';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport GlobalState from './../GlobalState';\nimport Alert from '@material-ui/lab/Alert';\nimport PropTypes from 'prop-types';\nimport MaskedInput from 'react-text-mask';\nimport { FormControl, Grid, Input, InputLabel } from '@material-ui/core';\nimport BookService from './services/BookService';\nimport PersonsBox from './PersonsBox';\nimport { width } from '@material-ui/system';\n\n\nconst isBoolean = (param) => typeof(param) === \"boolean\"\n\nconst useFocus = (initialFocus = false, id = \"\") => {\n    const [focus, setFocus] = React.useState(initialFocus)\n    const setFocusWithTrueDefault = (param) => setFocus(isBoolean(param)? param : true)\n    return ([\n        setFocusWithTrueDefault, {\n            autoFocus: focus,\n            key: `${id}${focus}`,\n            onFocus: () => setFocus(true),\n            onBlur: () => setFocus(false),\n        },\n    ])\n}\n\n\nfunction TextMaskCustom(props) {\n    const { inputRef, ...other } = props;\n  \n    return (\n      <MaskedInput\n        {...other}\n        ref={(ref) => {\n          inputRef(ref ? ref.inputElement : null);\n        }}\n        mask={[/\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/]}\n        // placeholderChar={'\\u2000'}\n        showMask\n      />\n    );\n  }\n  \n  TextMaskCustom.propTypes = {\n    inputRef: PropTypes.func.isRequired,\n  };\n\n\n\nconst useStyles = makeStyles((theme) => ({\n\n    root: {\n        width: '100%',\n        '& > * + *': {\n          marginTop: theme.spacing(2),\n        },\n        marginTop: \"20px\"\n      },  \n\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n\n    Find: {\n        width: \"80px\"\n    },\n\n    Clear:{\n        marginRight: \"20px\"\n    },\n\n    title:{\n        marginTop : \"20px\"\n    },\n\n    TextBox:{\n        marginTop: \"30px\",\n        \"& > *\" :\n        {\n            textAlign: \"center\"\n        },\n  \n    },\n\n    TextField:{\n\n    },\n\n    NoRecordsFound:{\n        marginTop: \"20px\",\n        color: \"red\",\n        fontWeight: \"600\",\n        fontSize: \"14px\",\n    },\n\n    PersonsBox:{\n        marginTop : \"20px\",\n        marginBottom: \"50px\",\n    }\n\n}));\n\nexport default function FindByRef() {\n  const classes = useStyles();\n  const [state, setState] = React.useContext(GlobalState);\n  \n  const [setFocus, focusProps] = useFocus(true);\n\n//   useEffect( () =>\n//   {\n//      findRecords();\n//   }, [state.findRecords]);\n\n useEffect ( () => {\n    setState(state => ({...state, foundRecords : []}));\n }, [])\n\n  useEffect( () => {\n    BookService.getBookingsByRef(state.ref).then( (res)=>\n    {\n        if (res.data.length > 0)\n        {\n            setState(state => ({...state, foundRecords : res.data}));\n        }\n    });\n    }, [state.RefreshPersonInfo]);\n\n    const handleChange = (event) =>\n    {\n        setState(state => ({...state, ref : event.target.value}));\n        setState(state => ({...state, refError : false})); \n    }\n\n    const clearField = () =>\n    {\n        setState(state => ({...state, refError : false})); \n        setState(state => ({...state, ref : '___-___-___'}));\n        setState(state => ({...state, foundRecords : []}));\n        setFocus();\n    }\n\n    const findRecords = () =>\n    {\n        if (!state.ref || state.ref.indexOf('_') >= 0)\n        {\n            setState(state => ({...state, refError : true}));  \n            return;\n        }\n\n        setState(state => ({...state, submiting : true}));\n        setState(state => ({...state, foundRecords : []}));\n\n        BookService.getBookingsByRef(state.ref).then( (res)=>\n        {\n            setState(state => ({...state, submiting : false}));\n            if (res.data.length > 0)\n            {\n                setState(state => ({...state, foundRecords : res.data}));\n            }\n            else\n            {\n                setState(state => ({...state, foundRecords : null}));\n            }\n            \n            console.log(res.data);\n\n        }).catch( (err) =>\n        {\n            console.log(err);\n            setState(state => ({...state, submiting : false}));\n        });\n    }\n\n  return (\n    <React.Fragment>\n        <CssBaseline />\n        <div className={classes.title}>\n            <Typography component=\"h6\" variant=\"h6\" align=\"center\">\n                Find Booking Appoinments\n            </Typography>  \n        </div> \n\n        <Grid container direction=\"column\" spacing={1} justify=\"flex-start\"  alignItems=\"center\">\n\n        <Grid item xs={12} md={12}>\n            <FormControl className={classes.TextBox}>\n                <TextField\n                    {...focusProps}\n                    autoFocus \n                    pattern=\"[0-9]*\"\n                    error = {state.refError ? true : false} \n                    value = {state.ref}\n                    className = {classes.TextField}\n                    width = \"50px\"\n                    onChange={handleChange}\n                    label=\"Reference No.\"\n                    helperText=\"Enter Your 9-digits Reference No.\"\n                    name=\"refNo\"\n                    id=\"refNo\"\n                    variant=\"outlined\"\n                    \n                    size=\"medium\"\n                    margin=\"normal\"\n                    fullWidth = {true}\n                    InputProps={{\n                        inputComponent: TextMaskCustom,\n                        style: { textAlign: 'center', fontSize:\"24px\", width: \"210px\", paddingLeft: \"20px\" }\n                    }}\n\n                    onKeyPress= {event => {\n                        if (event.key === 'Enter') {\n                            findRecords();\n                        }\n                      }}\n                />         \n            </FormControl>\n        </Grid>\n\n        <Grid item xs={12} md={12}>\n               \n                <Button\n                    disabled = {state.submiting}\n                    color=\"default\"\n                    onClick = {clearField}\n                    onTouchTap = {clearField}\n                    className={classes.Clear}\n                >\n                    Clear \n                </Button>  \n            \n                <Button\n                    type=\"button\"\n                    disabled = {state.submiting}\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick = {findRecords}\n                    onTouchTap = {findRecords}\n                    className={classes.Find}\n                >\n                    Find \n                </Button>  \n        </Grid>\n\n        <Grid item xs={12} md={12}>\n\n                    \n\n            {state.foundRecords && state.foundRecords.length > 0 && (\n                <React.Fragment>\n\n                    <div className={classes.PersonsBox}>\n                          <PersonsBox/>\n                    </div>\n                    \n\n\n                </React.Fragment>\n            )}   \n\n            {!state.foundRecords && (\n                <React.Fragment>\n\n                <div className={classes.root}>\n                    <Alert severity=\"error\"> <strong>No Records Found !</strong> <br/> Please check you reference number again.</Alert>\n                </div> \n                   \n                </React.Fragment>\n            )}\n\n        </Grid>\n        \n        \n        </Grid>\n        \n    </React.Fragment>\n   \n  );\n}","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport dateformat from 'dateformat';\nimport BookService from '../services/BookService';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport GlobalState from '../../GlobalState';\n\n\nconst useStyles = makeStyles((theme) => ({\n\n    Container: {\n        width: \"100%\",\n        paddingTop: \"70%\",\n        position: \"relative\",\n        backgroundColor: \"#fff\",\n        cursor: \"pointer\"\n    },\n\n    ContainerPast: {\n        width: \"100%\",\n        paddingTop: \"70%\",\n        position: \"relative\",\n        backgroundColor: \"#fafafa\",\n        cursor: \"pointer\"\n    },\n    \n    DayLabel: {\n        position: \"absolute\",\n        top: \"5px\",\n        right: \"5px\",\n        color: \"#555\",\n        fontSize: \"1rem\"\n    },\n\n    DayLabelToday: {\n        position: \"absolute\",\n        top: \"5px\",\n        right: \"5px\",\n        backgroundColor: \"#1a73e8\",\n        color: \"#fff\",\n        fontSize: \"1rem\",\n        borderRadius: \"50%\",\n        padding: \"5px\",\n        lineHight: \"35px\",\n        minWidth: \"35px\"\n    },\n\n    DayLabelDisabled: {\n        position: \"absolute\",\n        top: \"5px\",\n        right: \"5px\",\n        color: \"#ddd\",\n        fontSize: \"1rem\"\n    },\n\n    BookingCountLabel: {\n        position: \"absolute\",\n        top: \"35%\",\n        left: \"40%\",\n        color: \"#3f51b5\",\n        backgroundColor: \"#ebedf7\",\n        fontSize: \"16px\",\n        fontWeight: \"600\",\n        padding: \"10px\",\n        borderRadius: \"50%\",\n        minWidth: \"40px\",\n        lineHight: \"40px\",\n        cursor: \"pointer\",\n        textAlign: \"center\"\n    },\n\n    BookingCountLabelBusy: {\n        position: \"absolute\",\n        top: \"35%\",\n        left: \"40%\",\n        color: \"#b00000\",\n        backgroundColor: \"#fce6e6\",\n        fontSize: \"16px\",\n        fontWeight: \"600\",\n        padding: \"10px\",\n        borderRadius: \"50%\",\n        minWidth: \"40px\",\n        cursor: \"pointer\",\n        textAlign: \"center\"\n    },\n\n    LoadingProgress: {\n        position: \"absolute\",\n        top: \"40%\",\n        left: \"40%\",\n      },\n\n      BookingCountGauge: {\n        position: \"absolute\",\n        bottom: \"5%\",\n        left: \"8%\",\n        width : \"8%\",\n        height: \"85%\"\n    },\n\n  }));\n\nconst MAX_BOOKING_COUNT = 10;  \n\nconst MonthViewCell = ({key, cellIndex, month, daysInMonth, dayClicked}) => {\n    const classes = useStyles();\n\n    const [state, setState] = React.useContext(GlobalState);\n\n    const [dateStr, setDateStr] = React.useState('');\n\n    const [cellDate, setCellDate] = React.useState(new Date());\n\n    const [bookingsCount, setBookingsCount] = React.useState(-1);\n\n    const [disableDay, setDisableDay] = React.useState(false);\n\n    const [isPast, setIsPast] = React.useState(false);\n\n    useEffect( () => {\n\n        if (cellIndex <= daysInMonth.length)\n        {\n            const date = daysInMonth[cellIndex - 1];\n            const dateStr = dateformat(date, 'yyyy-mm-dd');\n            setDateStr(dateStr);\n            setCellDate(date);\n            setDisableDay(date.getMonth() !== month - 1);\n            const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\n            setIsPast(dateStr < todayStr);\n        }\n        else\n        {\n            const day = cellIndex - daysInMonth.length;\n            const date = new Date((daysInMonth[daysInMonth.length - 1].getTime() + ( day * 86400000)));\n            const dateStr = dateformat(date, 'yyyy-mm-dd');\n            setDateStr(dateStr);\n            setCellDate(date);\n            setDisableDay(true);\n            const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\n            setIsPast(dateStr < todayStr);\n        }\n\n    }, [cellIndex, month, daysInMonth]);\n\n    useEffect ( () => {\n\n        const fecthData = async () =>\n        {\n            if (!dateStr || dateStr.length <= 0)\n            {\n                return;\n            }\n        \n            if (disableDay)\n            {\n                setBookingsCount(-2);\n                return;\n            }\n\n            setBookingsCount(-1);\n\n            var res = state.AdminCalendarCache?.find(record => record.method === 'getBookingsCountByDateStr' && record.query === dateStr)?.res;\n\n            if (!res)\n            {\n                res = await BookService.getAllBookingsCountByDateStr(dateStr);\n                setState(state => ({...state, AdminCalendarCache : [...state.AdminCalendarCache, {method: 'getBookingsCountByDateStr' , query : dateStr, res: res}]}));\n            }\n        \n            if (res.data.count >= 0)\n            {\n                setBookingsCount(res.data.count);\n            }\n\n        }\n\n      fecthData();\n\n    }, [dateStr]);\n\n    const getDayLabel = (_cellIndex , _month , _daysInMonth) =>\n    {\n        var date = null;\n        var disabled = false;\n        var day = -1;\n\n    \n\n        if (_cellIndex <= _daysInMonth.length)\n        {\n            date = _daysInMonth[_cellIndex - 1];\n            day = date.getDate();\n            if (date.getMonth() !== _month - 1)\n            {\n                disabled = true;\n            }\n        }\n        else\n        {\n            const _day = _cellIndex - _daysInMonth.length;\n            const date = new Date((_daysInMonth[_daysInMonth.length - 1].getTime() + ( _day * 86400000)));\n            day = date.getDate();\n            disabled = true;\n        }\n\n        const isToday = dateformat(new Date(),'yyyy-mm-dd') === dateformat(date, 'yyyy-mm-dd');\n\n        return (\n            <span className={(disabled) ? classes.DayLabelDisabled : isToday ? classes.DayLabelToday : classes.DayLabel}>\n                 {day > 0 ? `${day}` : ''}\n             </span>\n        );\n    }\n\n    const getBookingsCountLabel = (_bookingsCount) =>\n    {\n        if (_bookingsCount === -1)\n        {\n            return (\n                <div className={classes.LoadingProgress}>\n                      <CircularProgress disableShrink  />\n                </div>\n            );  \n        }\n        else if (_bookingsCount > 0 )\n        {\n            if (_bookingsCount >= MAX_BOOKING_COUNT / 2)\n            {\n                return (\n                    <div onClick={(event => dayClicked(event,cellDate))} className={classes.BookingCountLabelBusy}>\n                        {_bookingsCount < 10 ?  ` ${_bookingsCount}` : `${_bookingsCount}`}\n                    </div>\n                );\n            }\n            else\n            {\n                return (\n                    <div onClick={(event => dayClicked(event,cellDate))} className={classes.BookingCountLabel}>\n                          {_bookingsCount < 10 ?  ` ${_bookingsCount}` : `${_bookingsCount}`}\n                    </div>\n                );\n            }\n        }\n    }\n\n    const getBookingsCountGauge = (_bookingsCount) =>\n    {\n        if (_bookingsCount > 0)\n        {\n            let percent = (_bookingsCount / MAX_BOOKING_COUNT) * 100;\n            if (percent > 100)\n            {\n                percent = 100;\n            }\n\n            percent = 100 - percent;\n\n            return (\n\n                <div className={classes.BookingCountGauge}>\n                  <div style={{padding:\"0\", margin:\"0\", width:\"100%\", height:\"100%\", backgroundColor: \"#3f51b5\"}} >\n                        <div  style={{padding:\"0\", margin:\"0\", width:\"100%\", height:`${percent}%`, backgroundColor: \"#fafafa\"}} >\n\n                        </div>\n                  </div>\n                </div>\n            );\n        }\n    }\n\n    return (\n        <React.Fragment>\n\n            <div className={classes.Container} onClick={(event => dayClicked(event,cellDate))}>\n\n              {getDayLabel(cellIndex, month, daysInMonth)}\n\n              {getBookingsCountLabel(bookingsCount)}\n\n              {getBookingsCountGauge(bookingsCount)}\n\n            </div>\n\n        </React.Fragment>\n\n\n    );\n}\n\nMonthViewCell.propTypes = {\n    key: PropTypes.string.isRequired,\n    cellIndex: PropTypes.number.isRequired,\n    month: PropTypes.number.isRequired,\n    daysInMonth: PropTypes.arrayOf(PropTypes.date),\n    dayClicked: PropTypes.func\n  };\n\n \n  \nexport default MonthViewCell;","import calendar from 'node-calendar';\n\n\nexport default class CalendarUtil {\n\n    static getMonthRange = (month , year) =>\n    {\n        return new calendar.Calendar(calendar.SUNDAY).itermonthdates(year, month);\n    } \n\n} ","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport MonthViewCell from './MonthViewCell';\nimport CalendarUtil from './calendar-util';\n\nconst dayLables = ['Sun', 'Mon', 'Tue', 'Wed' , 'Thu', 'Fri', 'Sat'];\nconst days = [1,2,3,4,5,6,7]; \nconst rows = [1,2,3,4,5,6];\n\nconst useStyles = makeStyles((theme) => ({\n\n    table: {\n        width: \"100%\",\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n    },\n\n    th: {\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        verticalAlign: \"middle\",\n        fontcolor: \"#555\",\n        fontWeight: \"400\",\n        fontSize: \"15px\",\n        paddingTop: \"5px\",\n        paddingBottom: \"5px\",\n        width: \"14%\"\n    },\n\n    td: {\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        verticalAlign: \"middle\",\n    }\n\n  }));\n\nconst MonthView = ({month, year, dayClicked}) => {\n    const classes = useStyles();\n\n    const daysInMonth = CalendarUtil.getMonthRange(month,year);\n\n    return (\n        <React.Fragment>\n\n            <table className={classes.table}>\n                <thead>\n                    <tr>\n                        {dayLables.map(label => (\n                            <th key={`th-${label}`} className={classes.th}>\n                                {label}\n                            </th>\n                        ))}\n                    </tr>\n                </thead>\n                <tbody>\n                    {rows.map(row => (\n                        <tr>\n                            {days.map(day => (\n                                <td className={classes.td}>\n                                    <MonthViewCell \n                                        key={`${month}${year}${(row-1) * days.length + day}`} \n                                        cellIndex={(row-1) * days.length + day} \n                                        month={month} \n                                        daysInMonth={daysInMonth}\n                                        dayClicked = {dayClicked}\n                                        />\n                                </td>\n                            ))}\n                        </tr>\n                    ))}            \n                </tbody>\n\n            </table>\n\n      \n        </React.Fragment>\n\n\n    );\n}\n\nMonthView.propTypes = {\n    month: PropTypes.number.isRequired,\n    year: PropTypes.number.isRequired,\n    dayClicked: PropTypes.func\n  };\n\n\nexport default MonthView;","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport dateformat from 'dateformat';\nimport BookService from '../services/BookService';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport GlobalState from '../../GlobalState';\n\nimport axios from 'axios'\n\nconst useStyles = makeStyles((theme) => ({\n\n    Container: {\n        width: \"100%\",\n        paddingTop: \"40%\",\n        position: \"relative\",\n        backgroundColor: \"#fff\",\n        cursor: \"pointer\"\n    },\n\n    ContainerPast: {\n        width: \"100%\",\n        paddingTop: \"40%\",\n        position: \"relative\",\n        backgroundColor: \"#fafafa\",\n        cursor: \"pointer\"\n    },\n    \n    DayLabel: {\n        position: \"absolute\",\n        top: \"5px\",\n        right: \"5px\",\n        color: \"#555\",\n        fontSize: \"1rem\"\n    },\n\n    DayLabelDisabled: {\n        position: \"absolute\",\n        top: \"5px\",\n        right: \"5px\",\n        color: \"#ddd\",\n        fontSize: \"1rem\"\n    },\n\n    BookingCountLabel: {\n        position: \"absolute\",\n        top: \"25%\",\n        left: \"38%\",\n        color: \"#3f51b5\",\n        backgroundColor: \"#ebedf7\",\n        fontSize: \"14px\",\n        fontWeight: \"600\",\n        padding: \"5px\",\n        borderRadius: \"50%\",\n        minWidth: \"30px\",\n        cursor : \"pointer\",\n        textAlign: \"center\"\n    },\n\n    BookingCountLabelBusy: {\n        position: \"absolute\",\n        top: \"25%\",\n        left: \"38%\",\n        color: \"#b00000\",\n        backgroundColor: \"#fce6e6\",\n        fontSize: \"14px\",\n        fontWeight: \"600\",\n        padding: \"5px\",\n        borderRadius: \"50%\",\n        minWidth: \"30px\",\n        cursor : \"pointer\",\n        textAlign: \"center\"\n    },\n\n    LoadingProgress: {\n        position: \"absolute\",\n        top: \"40%\",\n        left: \"40%\",\n      },\n\n      BookingCountGauge: {\n        position: \"absolute\",\n        bottom: \"5%\",\n        left: \"8%\",\n        width : \"85%\",\n        height: \"8%\"\n    },\n\n  }));\n\nconst MAX_BOOKING_COUNT = 1;  \n\nconst WeekViewCell = ({key, date, time, dayClicked}) => {\n    const classes = useStyles();\n\n    const [state, setState] = React.useContext(GlobalState);\n    const [bookingsCount, setBookingsCount] = React.useState(-1);\n    const [isPast, setIsPast] = React.useState(false);\n\n    const [cellDate, setCellDate] = React.useState(new Date());\n\n    useEffect( () => {\n        const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\n        setIsPast(date < todayStr);\n\n        setCellDate(new Date(date));\n\n    }, [date]);\n\n    useEffect ( () => {\n      \n      \n      \n        if (!date || date.length <= 0 || !time || time.length <= 0)\n        {\n            return;\n        }\n        \n        // if (isPast)\n        // {\n        //     setBookingsCount(-2);\n        //     return;\n        // }\n\n        setBookingsCount(-1);\n\n       \n\n        var res = state.AdminCalendarCache?.find(record => record.method === 'getBookingsCountByDateStrandTime' && record.query === `${date}${time}`)?.res;\n        if (res)\n        {\n            if (res.data.count >= 0)\n            {\n                setBookingsCount(res.data.count);\n            }  \n            return;\n        }\n\n        let source = axios.CancelToken.source();\n        BookService.getAllBookingsCountByDateStrandTime(date, time, source).then( res => {\n            if (res.data.count >= 0)\n            {\n                setBookingsCount(res.data.count);\n                setState(state => ({...state, AdminCalendarCache : [...state.AdminCalendarCache, {method: 'getBookingsCountByDateStrandTime' , query : `${date}${time}`, res: res}]}));\n            }  \n        }).catch( err => \n            {\n                //do nothing\n            });\n     \n        return () => {\n           if (source)\n              source.cancel('Cancelling in cleanup');\n        }\n     \n    }, [date, time]);\n\n\n    const getBookingsCountLabel = (_bookingsCount) =>\n    {\n        if (_bookingsCount === -1)\n        {\n            return (\n                <div className={classes.LoadingProgress}>\n                      <CircularProgress disableShrink  />\n                </div>\n            );  \n        }\n        else if (_bookingsCount > 0)\n        {\n            if (_bookingsCount >= MAX_BOOKING_COUNT)\n            {\n                return (\n                    <div onClick={(event => dayClicked(event,cellDate))} className={classes.BookingCountLabelBusy}>\n                          {_bookingsCount < 10 ? ` ${_bookingsCount}` : `${_bookingsCount}` }\n                    </div>\n                );\n            }\n            else\n            {\n                return (\n                    <div onClick={(event => dayClicked(event,cellDate))} className={classes.BookingCountLabel}>\n                        {_bookingsCount < 10 ? ` ${_bookingsCount}` : `${_bookingsCount}` }\n                    </div>\n                );\n            }\n        }\n    }\n\n    const getBookingsCountGauge = (_bookingsCount) =>\n    {\n        if (_bookingsCount > 0 )\n        {\n            let percent = (_bookingsCount / MAX_BOOKING_COUNT) * 100;\n            if (percent > 100)\n            {\n                percent = 100;\n            }\n\n            // percent = 100 - percent;\n\n            return (\n\n                <div className={classes.BookingCountGauge}>\n                  <div style={{padding:\"0\", margin:\"0\", width:\"100%\", height:\"100%\", backgroundColor: \"#f5f5f5\"}} >\n                        <div  style={{padding:\"0\", margin:\"0\", height:\"100%\", width:`${percent}%`, backgroundColor: \"#3f51b5\"}} >\n\n                        </div>\n                  </div>\n                </div>\n            );\n        }\n    }\n\n    return (\n        <React.Fragment>\n\n            <div className={isPast ? classes.ContainerPast : classes.Container}  onClick={(event => dayClicked(event,cellDate))} >\n\n              {getBookingsCountLabel(bookingsCount)}\n\n              {getBookingsCountGauge(bookingsCount)}\n\n            </div>\n\n        </React.Fragment>\n\n\n    );\n}\n\nWeekViewCell.propTypes = {\n    key: PropTypes.string.isRequired,\n    date: PropTypes.string.isRequired,\n    time: PropTypes.string.isRequired,\n    dayClicked: PropTypes.func\n  };\n\n \n  \nexport default WeekViewCell;","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport WeekViewCell from './WeekViewCell';\nimport dateformat from 'dateformat';\n\nconst rows = [\n    '09:00 AM',\n    '09:15 AM', \n    '09:30 AM', \n    '09:45 AM',\n    '10:00 AM',\n    '10:15 AM',\n    '10:30 AM',\n    '10:45 AM',\n    '11:00 AM',\n    '11:15 AM',\n    '11:30 AM',\n    '11:45 AM',\n    '12:00 PM',\n    '12:15 PM',\n    '12:30 PM',\n    '12:45 PM',\n    '01:00 PM',\n    '01:15 PM',\n    '01:30 PM',\n    '01:45 PM',\n    '02:00 PM',\n    '02:15 PM',\n    '02:30 PM',\n    '02:45 PM',\n    '03:00 PM',\n    '03:15 PM',\n    '03:30 PM',\n    '03:45 PM',\n    '04:00 PM',\n    '04:15 PM',\n    '04:30 PM',\n    '04:45 PM',\n    '05:00 PM',\n    '05:15 PM',\n    '05:30 PM',\n    '05:45 PM',\n];\n\n\n\nconst useStyles = makeStyles((theme) => ({\n\n    table: {\n        width: \"100%\",\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        overflowY: \"auto\"\n    },\n\n    th: {\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        verticalAlign: \"middle\",\n        fontcolor: \"#555\",\n        fontWeight: \"400\",\n        fontSize: \"15px\",\n        paddingTop: \"5px\",\n        paddingBottom: \"5px\",\n        width: \"12%\", \n    },\n\n    td: {\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        verticalAlign: \"middle\",\n        height : \"50px\",\n        width: \"12%\", \n    }\n\n  }));\n\nconst WeekView = ({dates, dayClicked}) => {\n    const classes = useStyles();\n\n    return (\n        <React.Fragment>\n\n        <div style={{overflowY: \"scroll\" , height: \"60px\"}}>\n            <table className={classes.table}>\n                <thead>\n                    <tr>\n                        <th style={{width: \"7%\"}}>\n                        \n                        </th>\n                            {dates.map(date => (\n                                <th className={classes.th}>\n                                    <div style={{paddingBottom: \"5px\", color: \"#aaa\"}}>\n                                         {dateformat(date, 'ddd')}\n                                    </div>\n                                    <div>\n                                        <span style={{color: \"#aaa\"}}>\n                                            {dateformat(date, 'mmm ')}\n                                        </span> \n                                        <span  style={(dateformat(new Date(),'yyyy-mm-dd') === dateformat(date, 'yyyy-mm-dd')) ? { backgroundColor: \"#1a73e8\", color: \"#fff\", borderRadius: \"50%\",  padding: \"5px\",} : {color: \"#333\", fontWeight:\"500\"}}>\n                                             {dateformat(date, ' d')}\n                                        </span>\n                                       \n                                    </div>\n                                </th>\n                        ))}\n                    </tr>\n                </thead>\n             </table>\n\n        </div>\n\n            <div style={{overflowY: \"scroll\" , height: \"70vh\"}}>\n                <table className={classes.table}>   \n                    <tbody>\n                        {rows.map(row => (\n                            <tr>\n                                <td style={{width: \"7%\"}}>\n                                    {row}\n                                </td>\n                                {dates.map(day => (\n                                    <td className={classes.td}>\n                                        <WeekViewCell \n                                                dayClicked = {dayClicked}\n                                                key={`${dateformat(day,'yyyy-mm-dd')}-${row.replace(':','-')}`} \n                                                date={dateformat(day,'yyyy-mm-dd')} \n                                                time={row}/>\n                                    </td>\n                                ))}\n                            </tr>\n                        ))}            \n                    </tbody>\n                </table>\n            </div>                    \n      \n        </React.Fragment>\n\n\n    );\n}\n\nWeekView.propTypes = {\n    dates: PropTypes.arrayOf(PropTypes.any).isRequired,\n    dayClicked: PropTypes.func\n  };\n\n\nexport default WeekView;","import PropTypes from 'prop-types';\n\n\nimport React, { useEffect } from 'react';\nimport Typography from '@material-ui/core/Typography';\n\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\n\n\nimport dateformat from 'dateformat';\nimport { FormControl, InputLabel, Select } from '@material-ui/core';\nimport MenuItem from '@material-ui/core/MenuItem';\n\n\n\n\nconst useStyles = makeStyles((theme) => ({\n\n  loadingBox: {\n    \n  }\n\n}));\n\n\nconst DateField = ({title, value, dateChanged, error}) => {\n\n    const [day, setDay] = React.useState('');\n    const [month, setMonth] = React.useState('');\n    const [year, setYear] = React.useState('');\n\n    const [dayArray, setDayArray] = React.useState([]);\n    const [monthArray, setMonthArray] = React.useState([]);\n    const [yearArray, setYearArray] = React.useState([]);\n\n        const updateDate = (dd,mm,yyyy) =>\n        {\n            let dayStr = `${dd}`;\n            let monthStr = `${mm + 1}`;\n            \n\n            if (dayStr.length === 1)\n            {\n                dayStr = `0${dayStr}`;\n            }\n\n            if (monthStr.length === 1)\n            {\n                monthStr = `0${monthStr}`;\n            }\n\n            dateChanged(`${yyyy}-${monthStr}-${dayStr}`);\n            \n\n        }\n\n        const handleDayChanged = (event) => {\n            setDay(event.target.value);\n            updateDate(event.target.value,month,year);\n        };\n\n        const handleMonthChanged = (event) => {\n            setMonth(event.target.value);\n            updateDate(day, event.target.value, year);\n        };\n\n        const handleYearChanged = (event) => {\n            setYear(event.target.value);\n            updateDate(day,month,event.target.value);\n        };\n\n        useEffect ( () => \n        {\n            if (value && value.length === 10)\n            {\n                const d = parseInt(value.substr(8,2));\n                const m = parseInt(value.substr(5,2));\n                const y = parseInt(value.substr(0,4));\n\n                setDay(d);\n                setMonth(m-1);\n                setYear(y);\n            }\n           \n\n        }, [value]);\n\n      useEffect( () => {\n\n        const days = [];\n        const months = [];\n        const years = [];\n\n\n        for (var i = 1 ; i <= 31; i++)\n        {\n            days.push(i);\n        }\n\n        for ( i = 0 ; i < 12; i++)\n        {\n            months.push(dateformat(new Date(2020,i,5), 'mmmm'));\n        }\n\n        for ( i = 1900 ; i < new Date().getFullYear(); i++)\n        {\n            years.push(i);\n        }\n\n       \n        setDayArray(days);\n        setMonthArray(months);\n        setYearArray(years);\n\n      } , [])\n    \n  return (\n\n    <React.Fragment>\n\n        \n    <div style={{position:\"relative\", border:`1px solid ${error ? 'red' : '#ddd'}` , borderRadius:\"10px\", padding:\"20px\", paddingBottom: \"50px\", marginTop: \"20px\"}}>\n\n        <div style={{position:\"absolute\", top: \"-15px\", left : \"15px\", backgroundColor:\"#fff\", color : `${error ? 'red' : '#555'}`, padding:\"5px\" , paddingLeft:\"10px\", paddingRight:\"10px\" }}>\n               {title} \n       </div>\n\n    \n\n        <Grid\n            container\n            direction=\"row\"\n            justify=\"flex-start\"\n            alignItems=\"flex-start\"\n            spacing={2}\n        >\n\n\n            <Grid item xs={12} sm={4}>\n                <FormControl fullWidth>\n                    <InputLabel  id=\"day-label\">Day</InputLabel>\n                    <Select\n                        \n                        labelId=\"day-label\"\n                        id=\"day-select\"\n                        value={day}\n                        onChange={handleDayChanged}\n                        >\n                        {\n                            dayArray.map( item => (\n                                <MenuItem value={item}>{item}</MenuItem>\n                            )\n                        )} \n                    </Select>\n                </FormControl>\n\n\n            </Grid>\n\n            <Grid item xs={12} sm={4}>\n                <FormControl fullWidth>\n                    <InputLabel  id=\"month-label\">Month</InputLabel>\n                    <Select\n                        labelId=\"month-label\"\n                        id=\"month-select\"\n                        value={month}\n                        onChange={handleMonthChanged}\n                        >\n                        {\n                            monthArray.map( (item , index) => (\n                                <MenuItem value={index}>{item}</MenuItem>\n                            )\n                        )} \n                    </Select>\n                </FormControl>\n\n                \n            </Grid>\n\n            <Grid item xs={12} sm={4}>\n                <FormControl fullWidth>\n                    <InputLabel  id=\"day-label\">Year</InputLabel>\n                    <Select\n                    labelId=\"year-label\"\n                    id=\"year-select\"\n                    value={year}\n                    onChange={handleYearChanged}\n                    >\n                    {\n                        yearArray.map( item => (\n                            <MenuItem value={item}>{item}</MenuItem>\n                        )\n                    )} \n                    </Select>\n                </FormControl>\n            </Grid>\n        </Grid>\n\n        </div>\n    </React.Fragment>\n  );\n}\n\n\nDateField.propTypes = {\n    title : PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired,\n    dateChanged: PropTypes.func.isRequired,\n    error: PropTypes.bool\n  };\n\nexport default DateField;\n\n\n\n\n","import React, { useEffect, useRef, useState } from \"react\";\nimport BookService from \"./services/BookService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {\n  Backdrop,\n  Button,\n  Checkbox,\n  Chip,\n  CircularProgress,\n  DialogActions,\n  Divider,\n  FormControlLabel,\n  Grid,\n  InputAdornment,\n  InputLabel,\n  Link,\n  makeStyles,\n  MenuItem,\n  Select,\n  Switch,\n  TextField,\n  Tooltip,\n} from \"@material-ui/core\";\nimport GlobalState from \"../GlobalState\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport CreditCardIcon from \"@material-ui/icons/CreditCard\";\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\n\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Draggable from \"react-draggable\";\nimport Paper from \"@material-ui/core/Paper\";\n\nimport Alert from \"@material-ui/lab/Alert\";\n\nimport PropTypes from \"prop-types\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport Box from \"@material-ui/core/Box\";\n\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport { corporates } from \"./Corporates\";\nimport NumberFormat from \"react-number-format\";\n\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { validate } from \"email-validator\";\nimport DateRangeIcon from \"@material-ui/icons/DateRange\";\nimport { CalendarColors } from \"../Admin/calendar-admin/colors\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\n\nimport { matchSorter } from 'match-sorter'\nimport DateField from \"./DateField\";\n\n\nvar interval;\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    marginTop: theme.spacing(0),\n    marginBottom: theme.spacing(1),\n  },\n\n  refreshButton: {\n    marginLeft: theme.spacing(2),\n  },\n\n  checkIcon: {\n    color: \"green\",\n  },\n\n  closeIcon: {\n    color: \"red\",\n  },\n\n  RefLink: {\n    cursor: \"pointer\",\n  },\n\n  BookedLabel: {\n    backgroundColor: \"#606060\",\n    color: \"#fff\",\n    paddingRight: \"10px\",\n    paddingLeft: \"10px\",\n  },\n\n  PatientAttendedLabel: {\n    backgroundColor: \"#0066aa\",\n    color: \"#fff\",\n    paddingRight: \"15px\",\n    paddingLeft: \"10px\",\n  },\n\n  SampleTakenLabel: {\n    backgroundColor: \"#0066cc\",\n    color: \"#fff\",\n    paddingRight: \"40px\",\n    paddingLeft: \"10px\",\n  },\n\n  ReportSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"90px\",\n    paddingLeft: \"10px\",\n  },\n\n  ReportCertSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"68px\",\n    paddingLeft: \"10px\",\n  },\n\n  archiveButton: {},\n\n  smartMatchButton: {\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    marginRight: \"10px\",\n    // padding: \"10px\"\n  },\n\n  infoTitle: {\n    fontWeight: \"400\",\n  },\n\n  infoData: {\n    paddingLeft: \"10px\",\n    fontWeight: \"800\",\n  },\n\n  matchButton: {\n    marginTop: \"30px\",\n    marginBottom: \"20px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  resendButton: {\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  resendFilesButton: {\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n    backgroundColor: \"#3792ad\",\n    \"&:hover\": {\n      background: \"#2f798f\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  cancelButton: {\n    marginBottom: \"10px\",\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"90px\",\n    paddingRight: \"90px\",\n  },\n\n  CalendarIcon: {\n    color: theme.palette.primary.main,\n  },\n\n  DateTimeLabel: {\n    fontWeight: \"500\",\n    color: theme.palette.primary.main,\n  },\n\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 5,\n    color: \"#fff\",\n  },\n\n  PriceLabelPaid: {\n    color: theme.palette.primary.main,\n    fontWeight: \"600\",\n  },\n\n  PriceLabelNotPaid: {\n    color: theme.palette.secondary.main,\n    fontWeight: \"600\",\n  },\n\n  listOptions:{\n    backgroundColor: \"#dcf0f5\",\n    color: \"#034859\",\n    borderRadius:\"30px\",\n    padding: \"10px\",\n    fontWeight:\"500\",\n    fontSize: \"1rem\"\n  }\n\n}));\n\nconst Packages = [\n  { packageName: \"-\" }, \n  { packageName: \"SLIVER BLOOD TEST\" },\n  { packageName: `SLIVER PLUS BLOOD TEST\"` },\n  { packageName: `GOLD BLOOD TEST` },\n  { packageName: `PLATINIUM BLOOD TEST` },\n];\n\n\nfunction NumberFormatCustom(props) {\n  const { inputRef, onChange, ...other } = props;\n\n  return (\n    <NumberFormat\n      {...other}\n      getInputRef={inputRef}\n      onValueChange={(values) => {\n        onChange({\n          target: {\n            name: props.name,\n            value: values.value,\n          },\n        });\n      }}\n      thousandSeparator\n      isNumericString\n      prefix=\"\"\n    />\n  );\n}\n\nNumberFormatCustom.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nconst BorderLinearProgress = withStyles((theme) => ({\n  root: {\n    height: 10,\n    borderRadius: 5,\n  },\n  colorPrimary: {\n    backgroundColor: \"#cedbce\", //theme.palette.grey[theme.palette.type === 'light' ? 200 : 700],\n  },\n  bar: {\n    borderRadius: 5,\n    backgroundColor: \"#2f942e\",\n  },\n}))(LinearProgress);\nfunction LinearProgressWithLabel(props) {\n  return (\n    <Box display=\"flex\" alignItems=\"center\">\n      <Box width=\"100%\" mr={1}>\n        <BorderLinearProgress variant=\"determinate\" {...props} />\n      </Box>\n      <Box minWidth={35}>\n        <Typography\n          style={{ fontWeight: \"800\", color: \"#5e855e\" }}\n          variant=\"body2\"\n          color=\"textSecondary\"\n        >{`${Math.round(props.value)}%`}</Typography>\n      </Box>\n    </Box>\n  );\n}\n\nLinearProgressWithLabel.propTypes = {\n  /**\n   * The value of the progress indicator for the determinate and buffer variants.\n   * Value between 0 and 100.\n   */\n  value: PropTypes.number.isRequired,\n};\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable\n      handle=\"#draggable-dialog-title\"\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\n    >\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nexport default function NewBookingDialog(props) {\n  const classes = useStyles();\n\n  const [state, setState] = React.useContext(GlobalState);\n  const [saving, setSaving] = useState(false);\n\n  const [fullname, setFullname] = React.useState(\"\");\n  const [fullnameError, setFullnameError] = React.useState(false);\n\n  const [phone, setPhone] = React.useState(\"\");\n  const [email, setEmail] = React.useState(\"\");\n  const [service, setService] = React.useState(\"\");\n  const [serviceError, setServiceError] = React.useState(false);\n\n  const [notes, setNotes] = React.useState(\"\");\n\n  const [indivisualArray, setIndivisualArray] = React.useState([]);\n  const [comboArray, setComboArray] = React.useState([]);\n\n  const [noOptionsText, setNoOptionsText] = React.useState('')\n\n  const [allCodes, setAllCodes] = React.useState([]);\n\n  const [indivisualTests, setIndivisualTests] = React.useState([])\n\n  const [birthDate, setBirthDate] = React.useState(null);\n  const [birthDateError, setBirthDateError] = React.useState(false);\n\n  const birthDateChanged = (dateStr) =>\n  {\n      setBirthDate(dateStr);\n      setBirthDateError(false)\n  }  \n\n\n  const fetchAllCodes = async () => {\n    try {\n      const res = await BookService.getAllCodes();\n      const data = res.data.result\n      const options = data.map((option) => {\n        const firstLetter = option.code[0].toUpperCase();\n        return {\n          firstLetter: /[0-9]/.test(firstLetter) ? '0-9' : firstLetter,\n          ...option,\n        };\n      });\n\n      console.log(options)\n      setAllCodes(options);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n    if ((!allCodes || allCodes.length === 0) && props.open)\n      fetchAllCodes();\n  }, [props.open]);\n\n\n\n  const filterOptions = (options, { inputValue }) => {\n\n    if (inputValue && inputValue.length >= 3) {\n      setNoOptionsText(\"\")\n      return matchSorter(options, inputValue, { keys: ['code', 'description'] });\n    }\n    else {\n      setNoOptionsText(\"Please enter at least 3 characters\")\n      return matchSorter(options, '$$$$', { keys: ['code', 'description'] });\n    }\n  }\n\n  const fullnameChanged = (event) => {\n    setFullname(event.target.value);\n    setFullnameError(false);\n  };\n\n  const phoneChanged = (event) => {\n    setPhone(event.target.value);\n  };\n\n  const emailChanged = (event) => {\n    setEmail(event.target.value);\n  };\n\n  const serviceChanged = (event) => {\n    setService(event.target.value);\n    setServiceError(false)\n  };\n\n  const notesChanged = (event) => {\n    setNotes(event.target.value);\n  };\n\n  const handleClose = () => {\n    if (saving) return;\n\n    setFullname(\"\");\n    setFullnameError(false);\n    setPhone(\"\");\n    setEmail(\"\");\n    setService(\"\");\n    setServiceError(false)\n    setNotes(\"\");\n    setIndivisualArray([]);\n    setComboArray([]);\n    setBirthDate(null)\n    setIndivisualTests([])\n\n    props.handleClose();\n    setSaving(false);\n  };\n\n  const validateBooking = () => {\n    let error = false;\n    if (!fullname || fullname.trim().length < 1) {\n      setFullnameError(true);\n      error = true;\n    }\n\n    if (!birthDate || birthDate.length !== 10)\n    {\n      setBirthDateError(true)\n      error = true\n    }\n\n    return !error;\n  };\n\n  const saveClicked = async () => {\n    if (!validateBooking()) {\n      return;\n    }\n\n    setSaving(true);\n\n    let packageName = service;\n\n    try {\n      await BookService.addNewBooking({\n        bookingDate: props.date,\n        bookingTime: props.time,\n        fullname: fullname,\n        phone: phone,\n        email: email,\n        packageName: packageName,\n        birthDate: birthDate,\n        indivisualTests: indivisualTests.length === 0 ? null : JSON.stringify(indivisualTests),\n        notes: notes,\n      });\n      setSaving(false);\n      setState((state) => ({\n        ...state,\n        bookingDialogDataChanged: !state.bookingDialogDataChanged\n          ? true\n          : false,\n      }));\n      handleClose();\n    } catch (err) {\n      console.error(err);\n      setSaving(false);\n    }\n  };\n\n  const IndivisualTestsChanged = (event, item) => {\n    const checked = event.target.checked;\n\n    if (checked) {\n      setServiceError(false)\n      if (indivisualArray.findIndex((e) => e === item) < 0)\n        setIndivisualArray([...indivisualArray, item]);\n    } else {\n      setIndivisualArray(indivisualArray.filter((e) => e !== item));\n    }\n\n    setServiceError(false)\n  };\n\n  const comboSTDChecksChanged = (event, item) => {\n    const checked = event.target.checked;\n\n    if (checked) {\n      setServiceError(false)\n      if (comboArray.findIndex((e) => e === item) < 0)\n        setComboArray([...comboArray, item]);\n    } else {\n      setComboArray(comboArray.filter((e) => e !== item));\n    }\n  };\n\n  return (\n    <React.Fragment>\n      {props.date && props.time && (\n        <React.Fragment>\n          <Dialog\n            maxWidth=\"md\"\n            open={props.open}\n            onClose={handleClose}\n            PaperComponent={PaperComponent}\n            aria-labelledby=\"form-dialog-title\"\n          >\n            <DialogTitle id=\"draggable-dialog-title\">\n              <Grid\n                container\n                spacing={2}\n                direction=\"row\"\n                justify=\"center\"\n                alignItems=\"center\"\n              >\n                <Grid item>\n                  <AddIcon style={{ color: \"#f50057\", fontSize: \"3rem\" }} />\n                </Grid>\n\n                <Grid item>\n                  <div\n                    style={{\n                      color: \"#f50057\",\n                      paddingBottom: \"10px\",\n                      fontWeight: \"800\",\n                    }}\n                  >\n                    {\" \"}\n                    ADD New Booking{\" \"}\n                  </div>\n                </Grid>\n              </Grid>\n\n              <div style={{ position: \"absolute\", top: \"5px\", right: \"5px\", backgroundColor: CalendarColors.BLOOD_COLOR, color: \"#fff\", padding: \"0px 5px\", borderRadius: \"10px\", fontSize: \"1rem\" }}>\n                Blood\n              </div>\n\n\n              <Divider />\n            </DialogTitle>\n            <DialogContent>\n              <div\n                style={{\n                  height: \"620px\",\n                }}\n              >\n                <Grid\n                  container\n                  direction=\"row\"\n                  justify=\"stretch\"\n                  spacing={2}\n                  alignItems=\"center\"\n                >\n                  <Grid item xs={12}>\n                    <Grid\n                      container\n                      direction=\"row\"\n                      justify=\"center\"\n                      alignItems=\"center\"\n                      spacing={1}\n                    >\n                      <Grid item>\n                        <DateRangeIcon className={classes.CalendarIcon} />\n                      </Grid>\n                      <Grid item>\n                        <span className={classes.DateTimeLabel}>\n                          {props.date} , {props.time}\n                        </span>\n                      </Grid>\n                    </Grid>\n                  </Grid>\n\n                  <Grid item xs={12}>\n                    <TextField\n                      fullWidth\n                      autoFocus\n                      error={fullnameError}\n                      label=\"Full Name\"\n                      value={fullname}\n                      required\n                      onChange={fullnameChanged}\n                      name=\"fullname\"\n                      id=\"fullname-id\"\n                      autoComplete=\"none\"\n                    />\n                  </Grid>\n\n                  <Grid item xs={12}>\n                    <TextField\n                      fullWidth\n                      label=\"Telephone\"\n                      value={phone}\n                      onChange={phoneChanged}\n                      name=\"phone\"\n                      id=\"phone-id\"\n                      autoComplete=\"none\"\n                    />\n                  </Grid>\n\n                  <Grid item xs={12}>\n                    <TextField\n                      fullWidth\n                      label=\"Email\"\n                      value={email}\n                      onChange={emailChanged}\n                      name=\"email\"\n                      id=\"email-id\"\n                      autoComplete=\"none\"\n                    />\n                  </Grid>\n\n                  <Grid item xs={12} md={12}>\n                    <DateField\n                      error={birthDateError}\n                      title=\"Date of Birth\"\n                      value={birthDate}\n                      dateChanged={birthDateChanged}\n                    >\n\n                    </DateField>\n                  </Grid>\n\n                  <Grid item xs={12} md={12}>\n                    <FormControl className={classes.formControl} fullWidth error={serviceError}>\n                      <InputLabel id=\"service-label-id\">Package</InputLabel>\n                      <Select\n                        fullWidth\n                        labelId=\"service-label-id\"\n                        id=\"service-id\"\n                        value={service}\n                        onChange={serviceChanged}\n                      >\n                        {Packages.map((item) => (\n                          <MenuItem value={item.packageName}>\n                            {item.packageName}\n                          </MenuItem>\n                        ))}\n                      </Select>\n                    </FormControl>\n                  </Grid>\n\n                  <Grid item xs={12} md={12}>\n\n\n                    <div\n                      style={{\n                        textAlign: \"center\",\n                        width: \"100%\",\n                        fontWeight: \"400\",\n                        color: \"#777\",\n                        marginTop:\"20px\"\n                      }}\n                    >\n                      <Autocomplete\n                        multiple\n                        id=\"tags-outlined\"\n                        noOptionsText={noOptionsText}\n                        value={indivisualTests}\n                        onChange={(event, newValue) => {\n                          setIndivisualTests(newValue)\n                          setState(state => ({ ...state, indivisualTests: newValue }))\n                        }}\n                        filterOptions={filterOptions}\n                        options={allCodes.sort((a, b) => -b.firstLetter.localeCompare(a.firstLetter))}\n                        // groupBy={(option) => option.firstLetter}\n                        getOptionLabel={(option) => <div className={classes.listOptions}>\n                          {option.code} - {option.description} - {parseFloat(\n                            option.price\n                          ).toLocaleString(\"en-GB\", {\n                            style: \"currency\",\n                            currency: \"GBP\",\n                          })}</div>\n                        }\n                        renderTags={(value, getTagProps) =>\n                          value.map((option, index) => (\n                            <Chip\n                              variant=\"outlined\"\n                              color=\"primary\"\n                              label={\n                                <Typography\n                                  style={{\n                                    whiteSpace: \"normal\",\n                                    fontSize: \"0.9rem\",\n                                    fontWeight: \"500\",\n                                    padding: \"10px\",\n                                    width: \"100%\",\n                                  }}\n                                >\n                                  {`${option.code} - ${option.description} - ${parseFloat(\n                                    option.price\n                                  ).toLocaleString(\"en-GB\", {\n                                    style: \"currency\",\n                                    currency: \"GBP\",\n                                  })}`}\n                                </Typography>\n                              }\n                              {...getTagProps({ index })}\n                              style={{ height: \"100%\", width: \"100%\" }}\n                            />\n                          ))\n                        }\n                        filterSelectedOptions\n                        renderInput={(params) => (\n                          <TextField\n                            fullWidth\n                            {...params}\n                            variant=\"outlined\"\n                            label=\"Blood Tests\"\n                            placeholder=\"Enter blood test\"\n                          />\n                        )}\n                      />\n\n                    </div>\n                  </Grid>\n\n\n                  <Grid item xs={12} style={{marginBottom:\"20px\"}}>\n                    <TextField\n                      fullWidth\n                      label=\"Notes\"\n                      value={notes}\n                      onChange={notesChanged}\n                      name=\"notes\"\n                      id=\"notes-id\"\n                      autoComplete=\"none\"\n                    />\n                  </Grid>\n                </Grid>\n\n                <div\n                  style={{\n                    position: \"absolute\",\n                    bottom: \"20px\",\n                    right: \"20px\",\n                  }}\n                >\n                </div>\n              </div>\n\n              <Backdrop className={classes.backdrop} open={saving}>\n                <CircularProgress color=\"inherit\" />\n              </Backdrop>\n            </DialogContent>\n\n            <DialogActions>\n            <Grid\n                    container\n                    direction=\"row\"\n                    justify=\"flex-end\"\n                    alignItems=\"center\"\n                    spacing={1}\n                  >\n                    <Grid item>\n                      <Button\n                        onClick={handleClose}\n                        style={{ width: \"100px\" }}\n                        disabled={saving}\n                      >\n                        back\n                      </Button>\n                    </Grid>\n                    <Grid item>\n                      <Button\n                        onClick={saveClicked}\n                        variant=\"contained\"\n                        color=\"secondary\"\n                        style={{ width: \"100px\" }}\n                        disabled={saving}\n                      >\n                        Save\n                      </Button>\n                    </Grid>\n                  </Grid>\n\n            </DialogActions>\n          </Dialog>\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport dateformat from 'dateformat';\nimport BookService from '../services/BookService';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport GlobalState from '../../GlobalState';\nimport BookingDialog from '../BookingDialog';\nimport NewBookingDialog from '../NewBookingDialog';\n\nconst useStyles = makeStyles((theme) => ({\n\n    Container: {\n        width: \"100%\",\n        height : \"50px\",\n        position: \"relative\",\n        backgroundColor: \"#fff\",\n        display: \"flex\",\n        alignItems : \"flex-start\",\n        justifyItems: \"flex-start\",\n        paddingLeft : \"10px\"\n\n    },\n\n    ContainerPast: {\n        width: \"100%\",\n        paddingTop: \"50px\",\n        position: \"relative\",\n        backgroundColor: \"#fafafa\"\n    },\n    \n    DayLabel: {\n        position: \"absolute\",\n        top: \"5px\",\n        right: \"5px\",\n        color: \"#555\",\n        fontSize: \"1rem\"\n    },\n\n    DayLabelDisabled: {\n        position: \"absolute\",\n        top: \"5px\",\n        right: \"5px\",\n        color: \"#ddd\",\n        fontSize: \"1rem\"\n    },\n\n    LoadingProgress: {\n        position: \"absolute\",\n        top: \"10%\",\n        left: \"40%\",\n      },\n\n      BookingCountGauge: {\n        position: \"absolute\",\n        bottom: \"5%\",\n        left: \"8%\",\n        width : \"85%\",\n        height: \"8%\"\n    },\n\n    bookingBoxNew: {\n        display: \"flex\",\n        marginRight: \"10px\",\n        marginTop: \"5px\",\n        padding: \"10px\",\n        maxWidth: \"150px\",\n        overflowX: \"hidden\",\n        border: \"1px solid #ddd\",\n        color: \"#ccc\",\n        fontSize: \"12px\",\n        fontWeight: \"500\",\n        cursor: \"pointer\",\n        backgroundColor: \"#fff\",\n    \n        boxShadow: \"2px 4px #fafafa\",\n        transition: \"all 0.5s ease\",\n        borderRadius: \"4px\",\n    \n        \"&:hover\": {\n          background: \"#fff\",\n          color: theme.palette.secondary.main,\n          borderColor:  theme.palette.secondary.main,\n        },\n      },\n\n    bookingBox: {\n        display: \"flex\",\n        marginRight: \"10px\",\n        marginTop: \"5px\",\n        padding: \"10px\",\n        maxWidth : \"150px\",\n        overflowX: \"hidden\",\n        border : \"1px solid #eee\",\n        fontSize: \"12px\",\n        fontWeight : \"500\",\n        cursor: \"pointer\",\n        backgroundColor: \"#ebedf7\",\n        color: \"#3f51b5\",\n        boxShadow: \"2px 4px #fafafa\",\n\n        \"&:hover\": {\n            background: \"#3f51b5\",\n            color: \"#ebedf7\"\n          },\n    },\n\n    bookingBoxSampleTaken: {\n        display: \"flex\",\n        marginRight: \"10px\",\n        marginTop: \"5px\",\n        padding: \"10px\",\n        maxWidth : \"150px\",\n        overflowX: \"hidden\",\n        border : \"1px solid #eee\",\n        fontSize: \"12px\",\n        fontWeight : \"500\",\n        cursor: \"pointer\",\n        backgroundColor: \"#0066cc\",\n        color: \"#eee\",\n        boxShadow: \"2px 4px #fafafa\",\n\n        \"&:hover\": {\n            background: \"#0059b3\",\n            color: \"#fafafa\"\n          },\n    },\n\n    bookingBoxPositive: {\n        display: \"flex\",\n        marginRight: \"10px\",\n        marginTop: \"5px\",\n        padding: \"10px\",\n        maxWidth : \"150px\",\n        overflowX: \"hidden\",\n        border : \"1px solid #eee\",\n        fontSize: \"12px\",\n        fontWeight : \"500\",\n        cursor: \"pointer\",\n        backgroundColor: \"#d40b0b\",\n        color: \"#fff2f2\",\n        boxShadow: \"2px 4px #fafafa\",\n\n        \"&:hover\": {\n            background: \"#bf0000\",\n            color: \"#fff\"\n          },\n    },\n\n    bookingBoxReportSent: {\n        display: \"flex\",\n        marginRight: \"10px\",\n        marginTop: \"5px\",\n        padding: \"10px\",\n        maxWidth : \"150px\",\n        overflowX: \"hidden\",\n        border : \"1px solid #eee\",\n        fontSize: \"12px\",\n        fontWeight : \"500\",\n        cursor: \"pointer\",\n        backgroundColor: \"#009900\",\n        color: \"#eee\",\n        boxShadow: \"2px 4px #fafafa\",\n\n        \"&:hover\": {\n            background: \"#006e00\",\n            color: \"#fafafa\"\n          },\n    },\n\n  \n\n  }));\n\n\n\nconst DayViewCell = ({key, date, time}) => {\n    const classes = useStyles();\n\n    const [state, setState] = React.useContext(GlobalState);\n    const [bookings, setBookings] = React.useState(null);\n    const [filteredBookings, setFilteredBookings] = React.useState(null);\n    const [selectedBooking, setSelectedBooking] = React.useState(null);\n\n    const [refresh, setRefresh] = React.useState(true); \n\n    const [isPast, setIsPast] = React.useState(false);\n\n    const [openDialog, setOpenDialog] = React.useState(false);\n\n    const [openDialogAddNew, setOpenDialogAddNew] = React.useState(false);\n\n\n\n    useEffect( () => {\n        const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\n        setIsPast(date < todayStr);\n\n    }, [date]);\n\n    useEffect( () => \n    {\n        if (bookings) {\n\n\n            if (state.dayViewCalFilter && state.dayViewCalFilter.trim().length > 0)\n            {\n                const search = state.dayViewCalFilter.trim().toUpperCase();\n                setFilteredBookings( bookings.filter(booking => booking.fullname.toLowerCase().indexOf(search.toLowerCase()) >= 0\n                                                          \n                    \n                    ));\n            }\n            else\n            {\n                setFilteredBookings([...bookings]);\n            }\n        }\n\n    }, [state.dayViewCalFilter, bookings]);\n \n\n\n    useEffect ( () => {\n       \n        const fetchData = async () =>\n        {\n            if (!date || date.length <= 0 || !time || time.length <= 0)\n            {\n                return;\n            }\n         \n            // if (isPast)\n            // {\n            //     setBookings([]);\n            //     return;\n            // }\n    \n            setBookings(null);\n    \n            var res = state.AdminCalendarCache?.find(record => record.method === 'getBookingsByDateStrandTime' && record.query === `${date}${time}`)?.res;\n            if (!res || openDialog || openDialogAddNew)\n            {\n                res = await BookService.getAllBookingsByDateStrandTime(date, time);\n                setState(state => ({...state, AdminCalendarCache : [...state.AdminCalendarCache, {method: 'getBookingsByDateStrandTime' , query : `${date}${time}`, res: res}]}));\n            }\n          \n          \n            if (res.data.status === 'OK')\n            {\n                setBookings(res.data.bookings);\n            }   \n        }\n\n        if (openDialog || openDialogAddNew)\n        {\n            setState(state => ({...state, AdminCalendarCache : state.AdminCalendarCache.filter(record => !(record.method === 'getBookingsByDateStrandTime' && record.query ===  `${date}${time}`))}));\n            setState(state => ({...state, AdminCalendarCache : state.AdminCalendarCache.filter(record => !(record.method === 'getBookingsCountByDateStrandTime' && record.query ===  `${date}${time}`))}));\n            setState(state => ({...state, AdminCalendarCache : state.AdminCalendarCache.filter(record => !(record.method === 'getBookingsCountByDateStr' && record.query ===  date))}));\n        }\n\n         fetchData();\n     \n    }, [date, time, state.bookingDialogDataChanged]);\n\n    const bookingCliked = (event, booking) =>\n    {\n        setSelectedBooking(booking);\n        setOpenDialog(true);\n    }\n\n    \n\n    const getBookingClass = (status) =>\n    {\n        switch (status) {\n\n            case 'patient_attended':\n                return classes.bookingBoxSampleTaken;\n            default : \n                return classes.bookingBox;\n        }\n    }\n\n    const addNewBookingClicked = () =>\n    {\n        setOpenDialogAddNew(true)\n    }\n\n    const getBookingsBox = (_bookings) =>\n    {\n        if (_bookings === null) \n        {\n            return (\n                <div className={classes.LoadingProgress}>\n                      <CircularProgress disableShrink  />\n                </div>\n            );  \n        }\n        else if (_bookings.length >= 0)\n        {\n           return (\n            <React.Fragment>\n            {_bookings.map((booking) => (\n              <div\n                style={booking.tr ? { borderTop: \"5px solid #d00fd6\" } : {}}\n                className={getBookingClass(booking.status)}\n                onClick={(event) => bookingCliked(event, booking)}\n              >\n                {`${booking.fullname}`.substring(0, 15)}\n              </div>\n            ))}\n  \n            <div className={classes.bookingBoxNew} onClick={addNewBookingClicked}> + Add New Booking</div>\n          </React.Fragment>\n           );\n        }\n    }\n\n\n    const handleCloseDialog = () =>\n    {\n        setOpenDialog(false);\n    }\n\n    const handleCloseDialogAddNew = () => {\n        setOpenDialogAddNew(false);\n      };\n\n    return (\n        <React.Fragment>\n\n            <div className={classes.Container}>\n\n              {getBookingsBox(filteredBookings)}\n\n            </div>\n\n            <BookingDialog\n                booking={selectedBooking}\n                open={openDialog}\n                onClose={handleCloseDialog}\n            />\n\n        <NewBookingDialog\n        date={date}\n        time={time}\n        open={openDialogAddNew}\n        handleClose={handleCloseDialogAddNew}\n        />\n\n        </React.Fragment>\n\n\n    );\n}\n\nDayViewCell.propTypes = {\n    key: PropTypes.string.isRequired,\n    date: PropTypes.string.isRequired,\n    time: PropTypes.string.isRequired,\n  };\n\n \n  \nexport default DayViewCell;","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport DayViewCell from './DayViewCell';\nimport dateformat from 'dateformat';\n\n\n\n\nconst rows = [\n    '09:00 AM',\n    '09:15 AM', \n    '09:30 AM', \n    '09:45 AM',\n    '10:00 AM',\n    '10:15 AM',\n    '10:30 AM',\n    '10:45 AM',\n    '11:00 AM',\n    '11:15 AM',\n    '11:30 AM',\n    '11:45 AM',\n    '12:00 PM',\n    '12:15 PM',\n    '12:30 PM',\n    '12:45 PM',\n    '01:00 PM',\n    '01:15 PM',\n    '01:30 PM',\n    '01:45 PM',\n    '02:00 PM',\n    '02:15 PM',\n    '02:30 PM',\n    '02:45 PM',\n    '03:00 PM',\n    '03:15 PM',\n    '03:30 PM',\n    '03:45 PM',\n    '04:00 PM',\n    '04:15 PM',\n    '04:30 PM',\n    '04:45 PM',\n    '05:00 PM',\n    '05:15 PM',\n    '05:30 PM',\n    '05:45 PM',\n];\n\nconst useStyles = makeStyles((theme) => ({\n\n    table: {\n        width: \"100%\",\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        overflowY: \"auto\"\n    },\n\n    th: {\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        verticalAlign: \"middle\",\n        fontcolor: \"#555\",\n        fontWeight: \"400\",\n        fontSize: \"15px\",\n        paddingTop: \"5px\",\n        paddingBottom: \"5px\",\n        width: \"12%\", \n    },\n\n    td: {\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        verticalAlign: \"middle\",\n        height : \"50px\",\n        width: \"84%\", \n    },\n\n    titleLabel: {\n        paddingBottom: \"17px\",\n        paddingTop: \"17px\",\n        color: \"#777\",\n        fontSize: \"16px\"\n    },\n\n    titleLabelToday: {\n        paddingBottom: \"17px\",\n        paddingTop: \"17px\",\n        color: \"#fff\",\n        backgroundColor: \"#1a73e8\",\n        fontSize: \"16px\"\n    },\n\n  }));\n\nconst DayView = ({date}) => {\n    const classes = useStyles();\n\n    return (\n        <React.Fragment>\n\n        <div style={{overflowY: \"scroll\" , height: \"60px\"}}>\n            <table className={classes.table}>\n                <thead>\n                    <tr>\n                        <th style={{width: \"7%\"}}>\n                        \n                        </th>\n                        <th style={{width: \"84%\"}}>\n                                <div className={(dateformat(new Date(),'yyyy-mm-dd') === dateformat(date, 'yyyy-mm-dd')) ? classes.titleLabelToday : classes.titleLabel }>\n                                        {dateformat(date,'dddd')}\n                                </div>                                \n                        </th>\n                    </tr>\n                </thead>\n             </table>\n\n        </div>\n\n            <div style={{overflowY: \"scroll\" , height: \"70vh\"}}>\n                <table className={classes.table}>   \n                    <tbody>\n                        {rows.map(row => (\n                            <tr>\n                                <td style={{width: \"7%\"}}>\n                                    {row}\n                                </td>\n                               \n                                <td className={classes.td}>\n                                     <DayViewCell key={`${dateformat(date,'yyyy-mm-dd')}-${row}`} date={dateformat(date,'yyyy-mm-dd')} time={row}/>  \n                                </td>\n                            \n                            </tr>\n                        ))}            \n                    </tbody>\n                </table>\n            </div>                    \n      \n        </React.Fragment>\n\n\n    );\n}\n\nDayView.propTypes = {\n    date: PropTypes.any.isRequired\n  };\n\n\nexport default DayView;","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MonthView from './MonthView';\nimport { Button, Grid, IconButton, InputAdornment, TextField, Tooltip } from '@material-ui/core';\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\n\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport WeekView from './WeekView';\nimport dateformat from 'dateformat';\nimport DayView from './DayView';\nimport GlobalState from '../../GlobalState';\n\nimport CloseIcon from '@material-ui/icons/Close';\n\n\n\nconst monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n  \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n];\n\nconst useStyles = makeStyles((theme) => ({\n\n    title: {\n        textAlign: \"center\",\n        fontSize: \"24px\",\n        fontColor: \"#333\"\n    },\n\n  }));\n\nexport default function CalendarView() {\n    const classes = useStyles();\n\n    const [state, setState] = React.useContext(GlobalState);\n\n    const [month, setMonth] = React.useState(new Date().getMonth() + 1);\n    const [year, setYear] = React.useState(new Date().getFullYear());\n\n    const [day, setDay] = React.useState(new Date());\n\n    const [firstDayofWeek, setFirstDayofWeek] = React.useState(new Date());\n\n    const [weekDates, setWeekDates] = React.useState([]);\n\n    const [mode, setMode] = React.useState('month');\n    const [selectedTab, setSeletedTab] = React.useState('month');\n\n    const [filter,setFilter] = React.useState('');\n\n    const filterChanged = (event) =>{\n        setFilter(event.target.value);\n        setState(state => ({...state, dayViewCalFilter : event.target.value?.trim()?.toUpperCase()}))\n      }\n\n      const removeFilter = () =>\n      {\n        setFilter('');\n        setState(state => ({...state, dayViewCalFilter : ''}));\n      }\n\n\n    useEffect( () => {\n        const today = new Date();\n        const dayofWeek = today.getDay();\n        const firstdayofweek = new Date(today.getTime() - ( dayofWeek * 86400000));\n        setFirstDayofWeek(firstdayofweek);\n        setState(state => ({...state, AdminCalendarCache : []}));\n\n        return () =>\n        {\n            setState(state => ({...state, AdminCalendarCache : []}));\n            removeFilter();\n        }\n       \n    }, []);\n\n\n    useEffect( () => {\n        const dates = [];\n        for (var i = 0; i < 7 ; i++)\n        {\n            dates.push(new Date(firstDayofWeek.getTime() + ( i * 86400000)));\n        }\n        setWeekDates(dates);\n\n    }, [firstDayofWeek]);\n\n    const handlePrevButton = (event) =>\n    {\n       if (mode === 'month')\n       {\n            if (month === 1)\n            {\n                setYear(year - 1);\n            } \n\n            const newMonth = month === 1 ? 12 : month - 1;\n            setMonth(newMonth);\n\n            const newDay = new Date(year, newMonth - 1 , 1, 0 ,0 ,0 ,0);\n            setDay(newDay);\n\n            const dayofWeek = newDay.getDay();\n            setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\n\n       } \n       else if (mode === 'week')\n       {\n           const newFirstDayofWeek = new Date(firstDayofWeek.getTime() - ( 7 * 86400000));\n           setFirstDayofWeek(newFirstDayofWeek);\n\n           setDay(newFirstDayofWeek);\n           setMonth(newFirstDayofWeek.getMonth() + 1);\n           setYear(newFirstDayofWeek.getFullYear());\n\n       }\n       else if (mode === 'day')\n       {\n           const newDay = new Date(day.getTime() - ( 1 * 86400000));\n           setDay(newDay);\n\n           const dayofWeek = newDay.getDay();\n           setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\n\n           setMonth(newDay.getMonth() + 1);\n           setYear(newDay.getFullYear());\n       }\n    }\n\n    const handleNextButton = (event) =>\n    {\n        if (mode === 'month')\n        {\n            if (month === 12)\n            {\n                setYear(year + 1);\n            } \n       \n            const newMonth = month === 12 ? 1 : month + 1;\n            setMonth(newMonth);\n\n            const newDay = new Date(year, newMonth - 1 , 1, 0 ,0 ,0 ,0);\n            setDay(newDay);\n\n            const dayofWeek = newDay.getDay();\n            setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\n        }\n        else if (mode === 'week')\n        {\n            const newFirstDayofWeek = new Date(firstDayofWeek.getTime() + ( 7 * 86400000));\n            setFirstDayofWeek(newFirstDayofWeek);\n\n            setDay(newFirstDayofWeek);\n            setMonth(newFirstDayofWeek.getMonth() + 1);\n            setYear(newFirstDayofWeek.getFullYear());\n\n        }\n        else if (mode === 'day')\n        {\n            const newDay = new Date(day.getTime() + ( 1 * 86400000));\n            setDay(newDay);\n\n            const dayofWeek = newDay.getDay();\n            setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\n \n            setMonth(newDay.getMonth() + 1);\n            setYear(newDay.getFullYear());\n        }\n    }\n\n    const goToday = (event) => {\n        const newDay = new Date();\n        const dayofWeek = newDay.getDay();\n        setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\n        setDay(newDay);\n        setMonth(newDay.getMonth() + 1);\n        setYear(newDay.getFullYear());\n    }\n\n    const dayClicked = (event, date) =>\n    {\n        const newDay = new Date(date);\n        const dayofWeek = newDay.getDay();\n        setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\n        setDay(newDay);\n        setMonth(newDay.getMonth() + 1);\n        setYear(newDay.getFullYear());\n        setSeletedTab('day');\n        setMode('day');\n    }\n\n    const getContentFromMode = (_mode) => {\n        if (_mode === 'month')\n        {\n            return (\n                <MonthView dayClicked={dayClicked} month={month} year={year}/>    \n            );\n        }    \n        else if (_mode === 'week')\n        {\n            return (\n                    <WeekView dayClicked={dayClicked} dates={weekDates}/>\n            );\n            \n        }\n        else if (_mode === 'day')\n        {\n            return (\n                <DayView date={day}/>\n            );\n        }\n    }\n\n    const getCalendarTitleFromMode = (_mode) => {\n        if (_mode === 'month')\n        {\n            return (\n                <span className={classes.title}> {`${monthNames[month - 1]} ${year}`} </span>   \n            );\n        }    \n        else if (_mode === 'week')\n        {\n            const endOfWeek = new Date(firstDayofWeek.getTime() + ( 6 * 86400000));\n            let endofWeekStr = '';\n            if (endOfWeek.getMonth() === firstDayofWeek.getMonth())\n            {\n                endofWeekStr = dateformat(endOfWeek,'d');\n            }else\n            {\n                endofWeekStr = dateformat(endOfWeek,'mmm d');\n            }\n\n            return (\n                <span className={classes.title}> {`${dateformat(firstDayofWeek,'mmm d')} - ${endofWeekStr}, ${year}`} </span>\n            );\n            \n        }\n        else if (_mode === 'day')\n        {\n            return (\n                <span className={classes.title}> {`${dateformat(day,'mmmm d, yyyy')}`} </span>\n            );\n        }\n    }\n\n\n    const handleTabChanged = (event, value) => {\n        if (value && value.length)\n        {\n          setSeletedTab(value);\n          setMode(value);\n        }\n    };\n\n    const getPrevButtonTitle = (_mode) =>\n    {\n        return `Previuos ${mode}`;\n    }\n\n    const getNextButtonTitle = (_mode) =>\n    {\n        return `Next ${mode}`;\n    }\n\n    return (\n        <React.Fragment>\n\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"space-between\"\n            alignItems=\"center\"\n            style= {{marginBottom: \"10px\", marginTop: \"0px\"}}\n            >  \n\n            <Grid item md={3}>\n                <div  style={{display:\"flex\", alignItems: \"flex-start\", justifyContent: \"flex-start\" , paddingLeft: \"10px\"}}>\n                    <Tooltip title={getPrevButtonTitle(mode)} placement=\"bottom-start\">\n                        <IconButton \n                                color=\"default\" \n                                aria-label=\"prev\"\n                                onClick = {handlePrevButton}\n                                >\n                            <NavigateBeforeIcon style={{fontSize: '2rem'}}/>\n                        </IconButton>\n                    </Tooltip>\n\n                    <Tooltip title={getNextButtonTitle(mode)} placement=\"bottom-end\">\n                        <IconButton \n                                color=\"default\" \n                                aria-label=\"next\"\n                                onClick = {handleNextButton}\n                                >\n                            <NavigateNextIcon style={{fontSize: '2rem'}}/>\n                        </IconButton>\n                    </Tooltip>\n\n                    <Button style={{marginTop: \"11px\", marginLeft: \"10px\"}} onClick={goToday} variant=\"outlined\"> Today </Button>\n                </div>\n\n            </Grid>\n\n            <Grid item md={6}>\n\n                    <Grid\n                        container\n                        direction=\"row\"\n                        justify=\"center\"\n                        alignItems=\"flex-end\"\n                        spacing = {3}\n                        >\n                            <Grid item>\n                                    {getCalendarTitleFromMode(mode)}\n                            </Grid>\n                            {mode === 'day' && (\n                                        <Grid item>\n                                                <TextField\n                                                    variant=\"standard\"\n                                                    style={{marginBottom : \"5px\"}}\n                                                    value={filter}\n                                                    onChange={filterChanged}\n                                                    margin=\"normal\"\n                                                    size=\"small\"\n                                                    id=\"filter\"\n                                                    label=\"Filter\"\n                                                    name=\"filter\"\n                                                    autoComplete=\"off\"\n                                                    InputProps={{\n                                                        endAdornment : \n                                                            <InputAdornment position=\"end\">\n                                                                <Tooltip title=\"Clear\">\n                                                                            <IconButton\n                                                                            aria-label=\"remove filter\"\n                                                                            onClick={() => removeFilter()}\n                                                                            onMouseDown={() => removeFilter()}\n                                                                        >\n                                                                            <CloseIcon/>\n                                                                        </IconButton>\n                                                                </Tooltip>\n                                                            \n                                                            </InputAdornment>\n                                                          \n                                                    }}\n                                                   \n                                                />\n                                        </Grid>\n                            )}\n                           \n                    </Grid>\n                \n            </Grid>\n\n            <Grid item md={3}>\n                <div  style={{display:\"flex\", alignItems: \"flex-end\", justifyContent: \"flex-end\", paddingRight: \"10px\" }}>\n                    <ToggleButtonGroup\n                        value={selectedTab}\n                        exclusive\n                        onChange={handleTabChanged}\n                        aria-label=\"select view mode\"\n                    >\n                        <ToggleButton style={selectedTab === 'month' ? {width: \"80px\", color: \"#3f51b5\", backgroundColor: \"#ebedf7\" } : {width: \"80px\"}} value=\"month\" aria-label=\"month view\">\n                                month\n                        </ToggleButton>\n                        <ToggleButton style={selectedTab === 'week' ? {width: \"80px\", color: \"#3f51b5\", backgroundColor: \"#ebedf7\"} : {width: \"80px\"}}  value=\"week\" aria-label=\"week view\">\n                                week\n                        </ToggleButton>\n                        <ToggleButton style={selectedTab === 'day' ? {width: \"80px\", color: \"#3f51b5\", backgroundColor: \"#ebedf7\"} : {width: \"80px\"}} value=\"day\" aria-label=\"day view\">\n                                day\n                        </ToggleButton>\n                    </ToggleButtonGroup>\n                </div>\n            </Grid>\n\n           </Grid> \n\n             {getContentFromMode(mode)}\n\n        </React.Fragment>\n\n\n    );\n\n}","import React, { useEffect, useRef, useState } from 'react';\nimport { DataGrid, ROW_CLICK } from '@material-ui/data-grid';\nimport BookService from './services/BookService';\nimport Typography from '@material-ui/core/Typography';\nimport { Button, Checkbox, Divider, FormControlLabel, Grid, Link, makeStyles, TextField, Tooltip } from '@material-ui/core';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport { IconButton } from '@material-ui/core';\nimport LoaderSpinner from 'react-loader-spinner';\nimport GlobalState from '../GlobalState';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\nimport WbIncandescentIcon from '@material-ui/icons/WbIncandescent';\nimport SearchIcon from '@material-ui/icons/Search';\n\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Draggable from 'react-draggable';\nimport Paper from '@material-ui/core/Paper';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport dateformat from 'dateformat';\nimport ReportProblemIcon from '@material-ui/icons/ReportProblem';\nimport BookingDialog from './BookingDialog';\nimport BloodReportDialog from './BloodReportDialog';\n\nimport Alert from '@material-ui/lab/Alert';\n\nimport PropTypes from 'prop-types';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Box from '@material-ui/core/Box';\n\nimport WarningIcon from '@material-ui/icons/Warning';\n\nimport { FormatDateFromString, RevertFormatDateFromString } from './DateFormatter';\nimport PDFService from './services/PDFService';\n\nimport DoneOutlineIcon from '@material-ui/icons/DoneOutline';\nimport MailOutlineIcon from '@material-ui/icons/MailOutline';\nimport EmailRoundedIcon from '@material-ui/icons/EmailRounded';\nimport SendRoundedIcon from '@material-ui/icons/SendRounded';\n\nimport DraftsIcon from '@material-ui/icons/Drafts';\n\nvar interval;\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    marginTop: theme.spacing(0),\n    marginBottom: theme.spacing(1),\n\n  },\n\n  refreshButton: {\n    marginLeft: theme.spacing(2),\n  },\n\n  checkIcon: {\n    color: \"green\"\n  },\n\n  closeIcon: {\n    color: \"red\"\n  },\n\n  RefLink: {\n    cursor: \"pointer\"\n  },\n\n  BookedLabel: {\n    backgroundColor: \"#606060\",\n    color: \"#fff\",\n    paddingRight: \"10px\",\n    paddingLeft: \"10px\"\n  },\n\n  PatientAttendedLabel: {\n    backgroundColor: \"#0066aa\",\n    color: \"#fff\",\n    paddingRight: \"15px\",\n    paddingLeft: \"10px\"\n  },\n\n  SampleTakenLabel: {\n    backgroundColor: \"#0066cc\",\n    color: \"#fff\",\n    paddingRight: \"40px\",\n    paddingLeft: \"10px\"\n  },\n\n  ReportSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"90px\",\n    paddingLeft: \"10px\"\n  },\n\n  ReportCertSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"68px\",\n    paddingLeft: \"10px\"\n  },\n\n  archiveButton: {\n\n  },\n\n  smartMatchButton: {\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\"\n    },\n    textDecoration: \"none !important\",\n    marginRight: \"10px\"\n    // padding: \"10px\"  \n  },\n\n  infoTitle: {\n    fontWeight: \"400\"\n  },\n\n  infoData: {\n    paddingLeft: \"10px\",\n    fontWeight: \"800\"\n  },\n\n  matchButton:\n  {\n    marginTop: \"30px\",\n    marginBottom: \"20px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\"\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\"\n  },\n\n  resendButton:\n  {\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\"\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\"\n  },\n\n  resendFilesButton: {\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n    backgroundColor: \"#3792ad\",\n    \"&:hover\": {\n      background: \"#2f798f\",\n      color: \"#fff\"\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\"\n  },\n\n  cancelButton:\n  {\n    marginBottom: \"10px\",\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"90px\",\n    paddingRight: \"90px\"\n  },\n\n  downloadPDFButton:\n  {\n    marginRight: \"50px\"\n  },\n\n  clinicTitle: {\n    fontWeight: \"600\",\n    textAlign: \"center\",\n    color: theme.palette.primary.main,\n    padding: \"2px 10px\",\n  },\n\n  PCRLabel: {\n    color: \"#4faef7\",\n    fontWeight: \"600\",\n    fontSize: \"0.95rem\",\n  },\n\n  GynaeLabel: {\n    color: \"#e83caf\",\n    fontWeight: \"600\",\n    fontSize: \"0.95rem\",\n  },\n\n  GPLabel: {\n    color: \"#ff4f14\",\n    fontWeight: \"600\",\n    fontSize: \"0.95rem\",\n  },\n\n  STDLabel: {\n    color: \"#d6733a\",\n    fontWeight: \"600\",\n    fontSize: \"0.95rem\",\n  },\n\n  BloodLabel: {\n    color: \"#dc2626\",\n    fontWeight: \"600\",\n    fontSize: \"0.95rem\",\n  },\n\n\n}));\n\nconst BorderLinearProgress = withStyles((theme) => ({\n  root: {\n    height: 10,\n    borderRadius: 5,\n  },\n  colorPrimary: {\n    backgroundColor: \"#cedbce\" //theme.palette.grey[theme.palette.type === 'light' ? 200 : 700],\n  },\n  bar: {\n    borderRadius: 5,\n    backgroundColor: '#2f942e',\n  },\n}))(LinearProgress);\nfunction LinearProgressWithLabel(props) {\n  return (\n    <Box display=\"flex\" alignItems=\"center\">\n      <Box width=\"100%\" mr={1}>\n        <BorderLinearProgress variant=\"determinate\" {...props} />\n      </Box>\n      <Box minWidth={35}>\n        <Typography style={{ fontWeight: \"800\", color: \"#5e855e\" }} variant=\"body2\" color=\"textSecondary\">{`${Math.round(\n          props.value,\n        )}%`}</Typography>\n      </Box>\n    </Box>\n  );\n}\n\nLinearProgressWithLabel.propTypes = {\n  /**\n   * The value of the progress indicator for the determinate and buffer variants.\n   * Value between 0 and 100.\n   */\n  value: PropTypes.number.isRequired,\n};\n\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'}>\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nexport default function MatchedRecords() {\n\n  const classes = useStyles();\n\n  const getClassforClinic = (clinic) => {\n    switch (clinic) {\n      case \"pcr\":\n        return classes.PCRLabel;\n      case \"gp\":\n        return classes.GPLabel;\n      case \"gynae\":\n        return classes.GynaeLabel;\n      case \"std\":\n        return classes.STDLabel;\n      case \"blood\":\n        return classes.BloodLabel;\n\n\n      default:\n        return classes.clinicTitle;\n    }\n  };\n\n  const [selectedBooking, setSelectedBooking] = React.useState(null);\n  const [seeDetailsDialogOpen, setSeeDetailsDialogOpen] = React.useState(false);\n\n\n  const openDetailsDialog = (id) => {\n    const booking = data.bookings.find(element => element._id === id);\n    setSelectedBooking(booking);\n    setSeeDetailsDialogOpen(true);\n  }\n\n\n\n\n  const columns = [\n    {\n      field: 'id', headerName: ' ', width: 100, renderCell: (params) => {\n        return (\n\n          <React.Fragment>\n\n            { params.getValue(\"emailSent\") && (\n              <Tooltip style={{ fontSize: \"20px\" }} title=\"Email has been sent\">\n                <SendRoundedIcon style={{ fontSize: \"20px\", color: \"#009634\" }} />\n              </Tooltip>\n            )\n            }\n            { !params.getValue(\"emailSent\") && (\n              <SendRoundedIcon style={{ fontSize: \"20px\", color: \"#fafafa\" }} />\n            )\n            }\n\n\n\n            <Button\n              color=\"primary\"\n              onClick={event => openDetailsDialog(params.getValue(\"_id\"))}\n            >\n\n              <SearchIcon />\n\n            </Button>\n\n          </React.Fragment>\n\n\n\n        );\n\n      }\n    },\n\n    {\n      field: 'testDate', headerName: 'Test Date', width: 120, valueFormatter: (params) => {\n        return FormatDateFromString(params.value);\n      }\n    },\n    { field: 'name', headerName: 'Name', width: 250 },\n    {\n      field: 'birthDate', headerName: 'D.O.B', width: 120, valueFormatter: (params) => {\n        return FormatDateFromString(params.value);\n      }\n    },\n\n    {\n      field: '_id', headerName: 'Action', width: 500, renderCell: (params) => {\n        if (selectedTab === 'unresolved') {\n          return (\n            <React.Fragment>\n\n              {/* <Button\n                    disabled = {params.value === disableId}\n                    type=\"button\"\n                    variant=\"contained\"\n                    color=\"primary\"\n                    startIcon={<WbIncandescentIcon />}\n                    onClick = { event => smartMatchClicked(event,params.value)}\n                    className={classes.smartMatchButton}\n                    >\n                    smart match\n              </Button> */}\n\n              <Button\n                disabled={params.value === disableId}\n                type=\"button\"\n                color=\"primary\"\n                onClick={event => downloadLabReport(params.value)}\n                className={classes.downloadPDFButton}\n              >\n                view pdf\n              </Button>\n\n              <Button\n                disabled={params.value === disableId}\n                type=\"button\"\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={event => archiveRecord(event, params.value)}\n                className={classes.archiveButton}\n              >\n                archive\n              </Button>\n\n\n\n\n\n            </React.Fragment>\n\n          );\n        } else {\n          return (\n\n            <React.Fragment>\n\n              {/* <Button\n                        disabled = {params.value === disableId}\n                        type=\"button\"\n                        variant=\"contained\"\n                        color=\"primary\"\n                        startIcon={<WbIncandescentIcon />}\n                        onClick = { event => smartMatchClicked(event,params.value)}\n                        className={classes.smartMatchButton}\n                        >\n                        smart match\n                  </Button> */}\n\n              <Button\n                disabled={params.value === disableId}\n                type=\"button\"\n                color=\"primary\"\n                onClick={event => downloadLabReport(params.value)}\n                className={classes.downloadPDFButton}\n              >\n                view pdf\n                  </Button>\n\n              <Button\n                disabled={params.value === disableId}\n                type=\"button\"\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={event => unArchiveRecord(event, params.value)}\n                className={classes.archiveButton}\n              >\n                Restore\n                  </Button>\n\n\n\n            </React.Fragment>\n          );\n        }\n\n      }\n    },\n\n  ];\n\n  const [state, setState] = React.useContext(GlobalState);\n\n  const [data, setData] = React.useState({ bookings: [], cachedBookings: [], isFetching: false });\n\n  const [selectedRow, setSelectedRow] = React.useState(null);\n\n  const [filter, setFilter] = React.useState('');\n\n  const [refresh, setRefresh] = React.useState(false);\n\n  const [disableId, setDisableId] = React.useState(null);\n\n  const [selectedTab, setSeletedTab] = React.useState('unresolved');\n\n  const [openDialog, setOpenDialog] = React.useState(false);\n\n  const [smartLinkId, setSmartLinkId] = React.useState(null);\n\n  const [smartLinkDetails, setSmartLinkDetails] = React.useState(null);\n\n  const [likelyBookings, setLikelyBookings] = React.useState(null);\n\n  const [seeDetailsBooking, setSeeDetailsBooking] = React.useState(null);\n\n  const [matching, setMatching] = React.useState(false);\n\n  const [matched, setMatched] = React.useState(false);\n\n  const [sending, setSending] = React.useState(false);\n  const [sent, setSent] = React.useState(false);\n\n  const [sendJustToPCR, setSendJustToPCR] = React.useState(false);\n\n  const [sendingStatus, setSendingStatus] = React.useState('');\n\n  const [sendingProgress, setSendingProgress] = React.useState(10);\n\n  const [loading, setLoading] = React.useState(false)\n\n\n  const handleTabChanged = (event, value) => {\n    if (value && value.length) {\n      setSeletedTab(value);\n    }\n\n  };\n\n  const handleCloseDialog = () => {\n    setOpenDialog(false);\n    setTimeout(() => {\n      setSmartLinkId(null);\n      setSmartLinkDetails(null);\n      setLikelyBookings(null);\n      setSelectedBooking(null);\n      setMatched(false);\n      setMatching(false);\n      setSendingStatus(null);\n      setSending(false);\n      setSent(false);\n      clearInterval(interval);\n      setSendJustToPCR(false);\n    }, 100);\n  }\n\n  const handleCloseSeeDetaisDialog = () => {\n    setSeeDetailsDialogOpen(false);\n    setSelectedBooking(false)\n    // setTimeout(() => {\n    //   setSeeDetailsBooking(null);\n    // }, 500);\n  }\n\n  const seeDetailsClicked = (event, row) => {\n    setSeeDetailsBooking(row);\n    setSeeDetailsDialogOpen(true);\n  }\n\n  const smartMatchClicked = (event, id) => {\n    setSmartLinkId(id);\n    setOpenDialog(true);\n    findBestMatches(id);\n  }\n\n  useEffect(() => {\n    if (smartLinkId) {\n      findBestMatches(smartLinkId);\n      // console.log('refrshing....');\n\n    }\n\n\n  }, [state.bookingDialogDataChanged]);\n\n  const findBestMatches = (id) => {\n    BookService.getLinkDetails(id).then(res => {\n      setSmartLinkDetails(res.data);\n      console.log(res.data);\n    }).catch(err => {\n      console.log(err);\n    });\n\n    BookService.findBestMatches(id).then(res => {\n      setLikelyBookings(res.data.matchedBookings);\n    }).catch(err => {\n      console.log(err);\n      setLikelyBookings([]);\n    })\n  }\n\n  const archiveRecord = (event, id) => {\n    if (disableId) {\n      return;\n    }\n    setDisableId(id);\n\n    BookService.archiveBloodReport(id).then(\n      (res) => {\n        setDisableId(null);\n        setRefresh(!refresh);\n      }\n    ).catch((err) => {\n      setDisableId(null);\n    })\n  }\n\n  const unArchiveRecord = (event, id) => {\n    if (disableId) {\n      return;\n    }\n    setDisableId(id);\n\n    BookService.unArchiveBloodReport(id).then(\n      (res) => {\n        setDisableId(null);\n        setRefresh(!refresh);\n      }\n    ).catch((err) => {\n      setDisableId(null);\n    })\n  }\n\n\n  const lastPromise = useRef();\n\n  useEffect(() => {\n\n    var api = BookService.getNewUnmatchedBloodReports;\n    if (selectedTab === 'archived') {\n      api = BookService.getArchivedUnmatchedBloodReports;\n    }\n\n    setLoading(true)\n\n    setData({ bookings: [], cachedBookings: [], isFetching: true });\n    const currentPromise = api().then((res) => {\n\n      for (var i = 0; i < res.data.result.length; i++) {\n        res.data.result[i] = { ...res.data.result[i], id: i + 1 }\n      }\n\n      return res.data.result;\n    })\n\n    lastPromise.current = currentPromise;\n\n    currentPromise.then(\n      result => {\n        if (currentPromise === lastPromise.current) {\n          setLoading(false)\n          setData({ bookings: result, cachedBookings: [...result], isFetching: false });\n        }\n      },\n      e => {\n        if (currentPromise === lastPromise.current) {\n          setLoading(false)\n          console.log(e);\n          setData({ bookings: data.bookings, cachedBookings: data.cachedBookings, isFetching: false });\n        }\n      });\n  },\n    [refresh, selectedTab, state.bloodReportRefresh]);\n\n\n\n  useEffect(() => {\n\n    if (filter && filter.trim().length > 0) {\n      var filteredData = data.cachedBookings.filter((element) => {\n\n        return (element.name.toLowerCase().indexOf(filter.toLowerCase()) >= 0)\n          ;\n\n      });\n\n\n      setData({ bookings: filteredData, cachedBookings: data.cachedBookings, isFetching: false });\n    } else {\n      setData({ bookings: [...data.cachedBookings], cachedBookings: data.cachedBookings, isFetching: false });\n    }\n  },\n    [filter]);\n\n\n\n\n\n\n  const refreshClicked = (event) => {\n    setFilter('');\n    setRefresh(!refresh);\n\n  }\n\n  const filterChanged = (event) => {\n    setFilter(event.target.value);\n  }\n\n  const handleSelectionChanged = (newSelection) => {\n    if (newSelection.length > 0) {\n      setSelectedRow(newSelection.rows[0]);\n    }\n  }\n\n  const handleCheckChanged = (event, row) => {\n    if (event.target.checked) {\n      setSelectedBooking(row);\n    }\n    else {\n      setSelectedBooking(null);\n    }\n  }\n\n  const matchRecords = (event) => {\n\n    setMatching(true);\n\n    BookService.getBookingById(selectedBooking._id).then(res => {\n      setSelectedBooking(res.data);\n    });\n\n    BookService.matchRecords(selectedBooking._id, smartLinkId).then(res => {\n\n      if (res.data.status === 'OK') {\n        setMatching(false);\n        setMatched(true);\n      }\n\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  const getProgress = (status) => {\n    console.log(`status : ${status}`);\n\n    if (status === 'downloadFailed')\n      return 10;\n    else if (status === 'downloading')\n      return 30;\n    else if (status === 'downloadSuccess')\n      return 70;\n    else if (status === 'sent')\n      return 100;\n    else\n      return 0;\n\n  }\n\n  useEffect(() => {\n\n    setSendingProgress((prevProgress) => (prevProgress >= 100 ? 100 : getProgress(sendingStatus)));\n\n  }, [sendingStatus]);\n\n  const resendFilesClicked = (event) => {\n    setSending(true);\n    setSendingProgress(0);\n    setSendingStatus('downloadFailed');\n    setSendJustToPCR(true);\n\n\n    BookService.regenerateFiles(smartLinkId).then(res => {\n\n      interval = setInterval(() => {\n\n        // setProgress(sendingCounter);\n\n        // setProgress(getProgress(sendingStatus));\n\n        BookService.getLinkDetails(smartLinkId).then(res => {\n\n          setSendingStatus(res.data.status);\n\n          if (res.data.status === 'sent') {\n            setSending(false);\n            setSent(true);\n            setRefresh(!refresh);\n            clearInterval(interval);\n          }\n        });\n\n      }, 1000);\n\n    }).catch(err => {\n      console.log(err);\n      setSending(false);\n    });\n\n\n  }\n\n  const resendEmailsClicked = (event) => {\n    setSending(true);\n    setSendingProgress(0);\n    setSendingStatus('downloadFailed');\n\n\n    BookService.resendEmails(smartLinkId).then(res => {\n\n      interval = setInterval(() => {\n\n\n\n        // setProgress(sendingCounter);\n\n        // setProgress(getProgress(sendingStatus));\n\n        BookService.getLinkDetails(smartLinkId).then(res => {\n\n          setSendingStatus(res.data.status);\n\n          if (res.data.status === 'sent') {\n            setSending(false);\n            setSent(true);\n            setRefresh(!refresh);\n            clearInterval(interval);\n          }\n        });\n\n      }, 1000);\n\n    }).catch(err => {\n      console.log(err);\n      setSending(false);\n    });\n\n\n\n  }\n\n  const cancelResendEmailsClicked = (event) => {\n    setMatched(false);\n  }\n\n  const downloadLabReport = (id) => {\n    PDFService.downloadPdfLabReport(id).then((res) => {\n      const file = new Blob(\n        [res.data],\n        { type: 'application/pdf' });\n\n      const fileURL = URL.createObjectURL(file);\n      window.open(fileURL, \"_blank\");\n\n\n\n    }).catch((err) => {\n      console.log(err);\n    });\n  }\n\n\n  return (\n    <React.Fragment>\n\n      {loading && (\n        <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\n          <LinearProgress color=\"primary\" />\n        </div>\n      )}\n\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"space-between\"\n        alignItems=\"flex-end\"\n      >\n        <Grid item md={5}>\n          <div style={{ textAlign: \"left\", paddingLeft: \"10px\" }}>\n            <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"center\">\n              <Grid item>\n                <span style={{ paddingRight: \"15px\", color: \"#ff8000\" }}> <WarningIcon style={{ fontSize: \"2.2rem\" }} /> </span>\n              </Grid>\n              <Grid item>\n                <span style={{ fontSize: '1.4rem', fontWeight: \"600\", color: \"#555\" }}> Unmatched Blood Results </span>\n              </Grid>\n              <Grid item>\n                <Tooltip title=\"Refresh\" placement=\"right\">\n                  <IconButton\n                    color=\"primary\"\n                    className={classes.refreshButton}\n                    onClick={refreshClicked}\n                  >\n                    <RefreshIcon />\n                  </IconButton>\n                </Tooltip>\n              </Grid>\n            </Grid>\n          </div>\n        </Grid>\n\n        <Grid item md={3}>\n          <ToggleButtonGroup\n            value={selectedTab}\n            style={{ marginBottom: \"10px\" }}\n            exclusive\n            onChange={handleTabChanged}\n            aria-label=\"text alignment\"\n          >\n            <ToggleButton value=\"unresolved\" aria-label=\"left aligned\">\n              NEW\n            </ToggleButton>\n            <ToggleButton value=\"archived\" aria-label=\"centered\">\n              Archived\n            </ToggleButton>\n          </ToggleButtonGroup>\n        </Grid>\n\n        <Grid item md={3}>\n          <TextField\n            variant=\"standard\"\n            value={filter}\n            onChange={filterChanged}\n            margin=\"normal\"\n            size=\"small\"\n            id=\"filter\"\n            label=\"Filter\"\n            name=\"filter\"\n            autoComplete=\"off\"\n          />\n        </Grid>\n      </Grid>\n\n      <div style={{ height: 700, width: \"100%\" }}>\n        <DataGrid\n          rows={data.bookings}\n          columns={columns}\n          autoPageSize\n          onSelectionChange={handleSelectionChanged}\n        />\n      </div>\n\n      <Dialog\n        maxWidth=\"lg\"\n        open={openDialog}\n        onClose={handleCloseDialog}\n        PaperComponent={PaperComponent}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogTitle id=\"draggable-dialog-title\">\n          <Grid\n            container\n            spacing={2}\n            direction=\"row\"\n            justify=\"center\"\n            alignItems=\"center\"\n          >\n            <Grid item>\n              <WbIncandescentIcon\n                style={{ color: \"#2f942e\", fontSize: \"2rem\" }}\n              />\n            </Grid>\n\n            <Grid item>\n              <div\n                style={{\n                  color: \"#2f942e\",\n                  paddingBottom: \"12px\",\n                  fontWeight: \"800\",\n                }}\n              >\n                {\" \"}\n                SMART MATCH{\" \"}\n              </div>\n            </Grid>\n          </Grid>\n\n          <Divider />\n        </DialogTitle>\n        <DialogContent>\n          <div\n            style={{\n              height: \"600px\",\n              // width: \"1200px\",\n            }}\n          >\n            {(!likelyBookings || !smartLinkDetails) && (\n              <React.Fragment>\n                <Grid\n                  container\n                  direction=\"column\"\n                  justify=\"center\"\n                  alignItems=\"center\"\n                  spacing={2}\n                >\n                  <Grid item>\n                    <LoaderSpinner\n                      style={{ marginTop: \"170px\" }}\n                      type=\"Grid\"\n                      color=\"#2f942e\"\n                      height={100}\n                      width={100}\n                      timeout={0} //3 secs\n                    />\n                  </Grid>\n                  <Grid item>\n                    <div\n                      style={{\n                        color: \"#2f942e\",\n                        paddingBottom: \"12px\",\n                        fontWeight: \"800\",\n                      }}\n                    >\n                      {\" \"}\n                      SEARCHING ...{\" \"}\n                    </div>\n                  </Grid>\n                </Grid>\n              </React.Fragment>\n            )}\n\n            {likelyBookings && likelyBookings.length === 0 && (\n              <React.Fragment>\n                <Grid\n                  container\n                  direction=\"column\"\n                  justify=\"center\"\n                  alignItems=\"center\"\n                  spacing={2}\n                >\n                  <Grid item>\n                    <div\n                      style={{\n                        color: \"#2f942e\",\n                        paddingBottom: \"12px\",\n                        fontWeight: \"800\",\n                        marginTop: \"230px\",\n                      }}\n                    >\n                      {\" \"}\n                      SORRY, NO RECORDS FOUND !{\" \"}\n                    </div>\n                  </Grid>\n                </Grid>\n              </React.Fragment>\n            )}\n\n            {likelyBookings && smartLinkDetails && likelyBookings.length > 0 && (\n              <React.Fragment>\n                <Grid\n                  container\n                  direction=\"column\"\n                  justify=\"flex-start\"\n                  alignItems=\"stretch\"\n                  spacing={2}\n                >\n                  <Grid item>\n                    <div\n                      style={{\n                        fontSize: \"1.1rem\",\n                        fontWeight: \"600\",\n                        color: \"#2f942e\",\n                        marginBottom: \"15px\",\n                      }}\n                    >\n                      {\" \"}\n                      LAB RECORD :\n                    </div>\n\n                    <Grid\n                      style={{ paddingLeft: \"20px\", paddingBottom: \"20px\" }}\n                      container\n                      direction=\"row\"\n                      justify=\"flex-start\"\n                      alignItems=\"flex-start\"\n                      spacing={4}\n                    >\n                      <Grid item>\n                        <span className={classes.infoTitle}>Name:</span>\n                        <span className={classes.infoData}>\n                          {smartLinkDetails.name}\n                        </span>\n                      </Grid>\n\n                      <Grid item>\n                        <span className={classes.infoTitle}>D.O.B:</span>\n                        <span className={classes.infoData}>\n                          {FormatDateFromString(smartLinkDetails.birthDate)}\n                        </span>\n                      </Grid>\n\n                      <Grid item>\n                        <span className={classes.infoTitle}>Test Date:</span>\n                        <span className={classes.infoData}>\n                          {FormatDateFromString(smartLinkDetails.testDate)}\n                        </span>\n                      </Grid>\n                    </Grid>\n\n                    <Divider />\n                  </Grid>\n\n                  <Grid item>\n                    <div\n                      style={{\n                        fontSize: \"1.1rem\",\n                        fontWeight: \"600\",\n                        color: \"#2f942e\",\n                        marginBottom: \"15px\",\n                      }}\n                    >\n                      {\" \"}\n                      BEST MATCHES :\n                    </div>\n                  </Grid>\n\n                  <Grid item>\n                    <Table size=\"small\">\n                      <TableHead>\n                        <TableRow>\n                          <TableCell>Select</TableCell>\n                          <TableCell>Match</TableCell>\n                          <TableCell>Forename</TableCell>\n                          <TableCell>Surname</TableCell>\n                          <TableCell>D.O.B</TableCell>\n                          <TableCell>Email</TableCell>\n                          <TableCell>Test Date</TableCell>\n                          <TableCell></TableCell>\n                        </TableRow>\n                      </TableHead>\n                      <TableBody>\n                        {likelyBookings.map((row) => (\n                          <TableRow key={row._id}>\n                            <TableCell>\n                              <Tooltip\n                                title={\n                                  row.birthDate !== smartLinkDetails.birthDate\n                                    ? '\"D.O.B\" DOES NOT MATCH THE LAB REPORT ! PLEASE MAKE SURE \"D.O.B\" OF THE SELECTED BOOKING IS CORRECT !'\n                                    : \"\"\n                                }\n                              >\n                                <FormControlLabel\n                                  control={\n                                    <Checkbox\n                                      checked={\n                                        selectedBooking &&\n                                        selectedBooking._id === row._id\n                                      }\n                                      disabled={\n                                        matched || matching\n                                      }\n                                      onChange={(event) =>\n                                        handleCheckChanged(event, row)\n                                      }\n                                      name=\"checkedA\"\n                                    />\n                                  }\n                                  label=\"\"\n                                />\n                              </Tooltip>\n                            </TableCell>\n                            <TableCell\n                              style={{\n                                fontWeight: \"800\",\n                                color: \"#2f942e\",\n                                fontSize: \"1.1rem\",\n                              }}\n                            >{`${row.likelihood} %`}</TableCell>\n                            <TableCell\n                              style={\n                                row.forenameCapital ===\n                                  smartLinkDetails.forename\n                                  ? { fontWeight: \"800\", color: \"#2f942e\" }\n                                  : { fontWeight: \"800\", color: \"#ff871f\" }\n                              }\n                            >\n                              {row.forenameCapital}\n                            </TableCell>\n                            <TableCell\n                              style={\n                                row.surnameCapital === smartLinkDetails.surname\n                                  ? { fontWeight: \"800\", color: \"#2f942e\" }\n                                  : { fontWeight: \"800\", color: \"#ff871f\" }\n                              }\n                            >\n                              {row.surnameCapital}\n                            </TableCell>\n                            <TableCell\n                              style={\n                                row.birthDate === smartLinkDetails.birthDate\n                                  ? { fontWeight: \"800\", color: \"#2f942e\" }\n                                  : { fontWeight: \"800\", color: \"red\" }\n                              }\n                            >\n                              <Grid\n                                container\n                                direction=\"column\"\n                                justify=\"center\"\n                                alignItems=\"center\"\n                                spacing={1}\n                              >\n                                <Grid item>\n                                  {row.birthDate !==\n                                    smartLinkDetails.birthDate && (\n                                      <span style={{ textAlign: \"center\" }}>\n                                        <ReportProblemIcon />\n                                      </span>\n                                    )}\n                                </Grid>\n                                {FormatDateFromString(row.birthDate)}\n                                <Grid item></Grid>\n                              </Grid>\n                            </TableCell>\n                            <TableCell>{row.email?.toUpperCase()}</TableCell>\n                            <TableCell\n                              style={\n                                dateformat(\n                                  row.samplingTimeStamp,\n                                  \"yyyy-mm-dd\"\n                                ) === smartLinkDetails.testDate\n                                  ? { fontWeight: \"800\", color: \"#2f942e\" }\n                                  : { fontWeight: \"800\", color: \"red\" }\n                              }\n                            >\n                              {FormatDateFromString(dateformat(row.samplingTimeStamp, \"yyyy-mm-dd\"))}\n                            </TableCell>\n                            <TableCell>\n                              <Button\n                                color=\"primary\"\n                                disabled={sending}\n                                onClick={(event) =>\n                                  seeDetailsClicked(event, row)\n                                }\n                              >\n                                See Details\n                              </Button>\n                            </TableCell>\n                          </TableRow>\n                        ))}\n                      </TableBody>\n                    </Table>\n                  </Grid>\n                </Grid>\n\n                <Grid\n                  container\n                  direction=\"column\"\n                  justify=\"center\"\n                  spacing={1}\n                  alignItems=\"center\"\n                >\n\n                  {!matched && (\n                    <React.Fragment>\n                      <Grid item>\n                        <Button\n                          disabled={!selectedBooking || matching}\n                          className={classes.matchButton}\n                          variant=\"contained\"\n                          color=\"primary\"\n                          onClick={matchRecords}\n                        >\n                          GO Match THE Records\n                          </Button>\n                      </Grid>\n\n                      {!selectedBooking && (\n                        <Grid item>\n                          <Alert severity=\"warning\">No Record is Selected ! — Please select a record you think it is a match.</Alert>\n                        </Grid>\n                      )}\n\n                    </React.Fragment>\n                  )}\n\n                  {matched && !sent && !sending && (\n                    <React.Fragment>\n\n                      <Grid item>\n\n                        <Alert style={{ marginTop: \"10px\", paddingLeft: \"50px\", paddingRight: \"50px\" }} severity=\"success\"> Success — The Records are Matched Now !</Alert>\n\n                      </Grid>\n\n                      <Grid item>\n\n                        <div style={{ paddingTop: \"5px\", fontSize: \"1rem\", fontWeight: \"500\", color: \"#555\" }}>\n                          Do you want to Resend the LAB Report {selectedBooking.certificate ? ' and Certificate' : ''}  Now?\n                      </div>\n\n                      </Grid>\n\n                      <Grid item>\n                        <Button\n                          disabled={sending || sent}\n                          className={classes.resendButton}\n                          variant=\"contained\"\n                          color=\"primary\"\n                          onClick={resendEmailsClicked}\n                        >\n                          YES ! RESEND THE EMAILS\n                          </Button>\n                      </Grid>\n\n                      <Grid item>\n                        <Button\n                          disabled={sending || sent}\n                          className={classes.cancelButton}\n                          variant=\"contained\"\n                          color=\"default\"\n                          onClick={cancelResendEmailsClicked}\n                        >\n                          NO ! NOT NOW\n                          </Button>\n                      </Grid>\n\n\n                      <Grid item>\n                        <Button\n                          disabled={sending || sent}\n                          className={classes.resendFilesButton}\n                          variant=\"contained\"\n                          color=\"primary\"\n                          onClick={resendFilesClicked}\n                        >\n                          Just Generate The Files and send to pcrresults@medicalexpressclinic.co.uk\n                          </Button>\n                      </Grid>\n\n                      <Grid item>\n\n                        <Alert style={{ marginTop: \"10px\", paddingLeft: \"50px\", paddingRight: \"50px\" }} severity=\"warning\">\n                          Caution! — The LAB Report and Certificate will be Sent According to the Record you have Selected !\n                          </Alert>\n\n                      </Grid>\n\n\n\n                    </React.Fragment>\n                  )}\n\n                  {matched && (sending || sent) && (\n                    <Grid item>\n\n                      <div style={{ paddingTop: \"50px\", color: \"#2f942e\", fontWeight: \"600\", fontSize: \"1rem\" }}>\n                        {sending && !sent && (\n                          'Sending ...'\n                        )}\n\n                        {sent && !sendJustToPCR && (\n                          <Alert style={{ marginTop: \"10px\", paddingLeft: \"50px\", paddingRight: \"50px\" }} severity=\"success\">\n                            Success! — The LAB Report {selectedBooking.certificate ? ' and Certificate ' : ' '}  Successfully Sent.\n                          </Alert>\n                        )}\n\n                        {sent && sendJustToPCR && (\n                          <Alert style={{ marginTop: \"10px\", paddingLeft: \"50px\", paddingRight: \"50px\" }} severity=\"success\">\n                            Success! — The LAB Report {selectedBooking.certificate ? ' and Certificate ' : ' '}  Successfully Sent Just to pcrresults@medicalexpressclinic.co.uk .\n                          </Alert>\n                        )}\n\n\n\n\n                      </div>\n\n                    </Grid>\n\n                  )}\n\n                </Grid>\n              </React.Fragment>\n            )}\n\n\n            {matched && (sending || sent) && (\n              <React.Fragment>\n\n                <div style={{ marginTop: \"10px\", width: \"50%\", marginLeft: \"27%\" }}>\n\n                  <LinearProgressWithLabel variant=\"determinate\" color=\"primary\" value={sendingProgress} />\n\n                </div>\n\n                <div style={{ paddingTop: \"30px\", color: \"#2f942e\", fontWeight: \"600\", fontSize: \"1rem\", marginLeft: \"45%\" }}>\n                  {sending && !sent && (\n                    'PLEASE WAIT ...'\n                  )}\n\n                </div>\n\n              </React.Fragment>\n            )}\n\n\n          </div>\n\n        </DialogContent>\n      </Dialog>\n\n      <BloodReportDialog\n        booking={selectedBooking}\n        open={seeDetailsDialogOpen}\n        onClose={handleCloseSeeDetaisDialog}\n      />\n\n    </React.Fragment>\n  );\n}","import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport GlobalState from \"../GlobalState\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {\n  Button,\n  Checkbox,\n  DialogActions,\n  DialogContentText,\n  Divider,\n  FormControlLabel,\n  IconButton,\n  TextField,\n  Tooltip,\n} from \"@material-ui/core\";\nimport PDFService from \"./services/PDFService\";\n\nimport * as EmailValidator from 'email-validator';\n\nimport { calculatePrice } from \"./PriceCalculator\";\n\nimport bookingService from \"./services/BookService\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport CloseIcon from \"@material-ui/icons/Close\";\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Draggable from \"react-draggable\";\nimport Slide from \"@material-ui/core/Slide\";\n\nimport Paper from \"@material-ui/core/Paper\";\n\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport BookService from \"./services/BookService\";\n\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport {\n  FormatDateFromString,\n  RevertFormatDateFromString,\n} from \"./DateFormatter\";\nimport PayDialog from \"./PayDialog\";\nimport SaveIcon from '@material-ui/icons/Save';\n\nimport PrintIcon from \"@material-ui/icons/Print\";\nimport UndoIcon from \"@material-ui/icons/Undo\";\n\nimport SendIcon from \"@material-ui/icons/Send\";\n\nimport HistoryIcon from \"@material-ui/icons/History\";\n\nimport FileCopyOutlinedIcon from \"@material-ui/icons/FileCopyOutlined\";\nimport { CalendarColors } from \"../Admin/calendar-admin/colors\";\nimport InvoiceService from \"../services/InvoiceService\";\nimport InvoiceDialog from \"../InvoiceDialog\";\nimport { getInitialColumnReorderState } from \"@material-ui/data-grid\";\n\nimport { Document, Page } from 'react-pdf';\n\nimport SendRoundedIcon from '@material-ui/icons/SendRounded';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n  box: {\n    backgroundColor: \"#373737\",\n    color: \"#fff\",\n    padding: \"1px\",\n    borderRadius: \"4px\",\n    textAlign: \"justify\",\n    paddingRight: \"40px\",\n  },\n\n  boxRed: {\n    backgroundColor: \"#dc2626\",\n    color: \"#fff\",\n    padding: \"1px\",\n    borderRadius: \"4px\",\n    textAlign: \"justify\",\n    paddingRight: \"40px\",\n  },\n\n  boxInfo: {\n    textAlign: \"justify\",\n    backgroundColor: \"#fafafa\",\n    color: \"#333\",\n    padding: \"1px\",\n    borderRadius: \"4px\",\n    paddingRight: \"40px\",\n    border: \"1px solid #eee\",\n  },\n\n  ul: {\n    listStyle: \"none\",\n    padding: \"0\",\n    margin: \"0\",\n  },\n\n  li: {\n    marginBottom: \"15px\",\n  },\n\n  icon: {\n    marginRight: \"8px\",\n  },\n\n  root: {\n    width: \"100%\",\n  },\n\n  lineThrough: {\n    textDecoration: \"line-through\",\n  },\n\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    flexBasis: \"33.33%\",\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n  },\n  secondaryHeading: {\n    fontSize: theme.typography.pxToRem(15),\n  },\n\n  infoDetails: {\n    textAlign: \"left\",\n  },\n\n  infoTitle: {\n    fontWeight: \"800\",\n    marginRight: \"10px\",\n  },\n\n  infoData: {\n    fontWeight: \"400\",\n  },\n\n  title: {\n    textAlign: \"center\",\n    fontWeight: \"600\",\n    marginLeft: \"10px\",\n    marginBottom: \"5px\",\n  },\n\n  Accordion: {\n    backgroundColor: \"#f5f5f5\",\n    color: \"#222\",\n  },\n\n  AccordionDeleted: {\n    backgroundColor: \"#aaa\",\n    color: \"#555\",\n  },\n\n  DownloadForm: {\n    marginTop: \"10px\",\n    marginBottom: \"10px\",\n  },\n\n  infoDataCharges: {\n    fontSize: \"18px\",\n    color: \"green\",\n    fontWeight: \"600\",\n  },\n\n  infoDataChargesHigher: {\n    fontSize: \"18px\",\n    color: \"red\",\n    fontWeight: \"600\",\n  },\n  BookedLabel: {\n    color: \"#606060\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#606060\",\n    width: \"150px\",\n    display: \"inline-block\",\n  },\n\n  PatientAttendedLabel: {\n    color: \"#0066aa\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#0066aa\",\n    width: \"150px\",\n    display: \"inline-block\",\n  },\n\n  SampleTakenLabel: {\n    color: \"#0066cc\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#0066cc\",\n  },\n\n  ReportSentLabel: {\n    color: \"#009900\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#009900\",\n  },\n\n  ReportCertSentLabel: {\n    color: \"#009900\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#009900\",\n  },\n\n  PositiveLabel: {\n    color: \"red\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"red\",\n  },\n\n  EditButton: {\n    marginBottom: \"20px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n  },\n\n  ResendEmailsButton: {\n    // marginBottom : \"20px\",\n    color: \"#2f942e\",\n    borderColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"#fafffa\",\n      borderColor: \"#2f942e\",\n    },\n    textDecoration: \"none !important\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  PayButton: {\n    marginLeft: \"70px\",\n    width: \"300px\",\n  },\n\n  PayLabel: {\n    marginLeft: \"20px\",\n\n    color: \"#2f942e\",\n    fontWeight: \"500\",\n    textAlign: \"center\",\n  },\n\n  RestoreButton: {\n    marginBottom: \"20px\",\n    backgroundColor: \"#eee\",\n    color: \"#333\",\n    \"&:hover\": {\n      background: \"#f1f1f1\",\n      color: \"#111\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n  },\n\n  DeleteButton: {\n    marginBottom: \"20px\",\n    backgroundColor: \"#d90015\",\n    \"&:hover\": {\n      background: \"#b80012\",\n      color: \"#fff\",\n    },\n\n    padding: \"10px\",\n  },\n\n  SaveButton: {\n    marginBottom: \"10px\",\n    padding: \"10px\",\n\n    backgroundColor: \"#d1175e\",\n    \"&:hover\": {\n      background: \"#bd0d50\",\n      color: \"#fff\",\n    },\n  },\n\n  CancelButton: {\n    marginBottom: \"20px\",\n    // padding: \"10px\"\n  },\n\n  TextBox: {\n    padding: \"0px\",\n  },\n\n  checkIcon: {\n    color: \"green\",\n  },\n\n  checkIconSmall: {\n    color: \"green\",\n    paddingTop: \"5px\",\n  },\n\n  closeIcon: {\n    color: \"red\",\n  },\n\n  centeredLabel: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 5,\n    color: \"#fff\",\n  },\n\n  invoiceNumber: {\n    display: \"inline-block\",\n    fontWeight: \"500\",\n    width: \"72px\",\n    fontSize: \"1rem\",\n    color: theme.palette.primary.main,\n  },\n\n  printInvoiceButton: {\n    marginLeft: \"70px\",\n    fontSize: \"0.8rem\",\n    // width: \"300px\",\n  },\n\n  editInvoiceButton: {\n    marginLeft: \"10px\",\n    fontSize: \"0.8rem\",\n  },\n}));\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable\n      handle=\"#alert-dialog-slide-title\"\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\n    >\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nexport default function BloodReportDialog(props) {\n  const classes = useStyles();\n\n  const [numPages, setNumPages] = useState(null);\n  const [pageNumber, setPageNumber] = useState(1);\n\n  function onDocumentLoadSuccess({ numPages }) {\n    setNumPages(numPages);\n  }\n\n\n  const [state, setState] = React.useContext(GlobalState);\n\n  const [copied, setCopied] = useState(false);\n\n  const [emailSent, setEmailSent] = React.useState(false);\n  const [changesSaved, setChangesSaved] = React.useState(false);\n\n  const [openResendDialog, setOpenResendDialog] = React.useState(false);\n  const [openPayDialog, setOpenPayDialog] = React.useState(false);\n  const [openRefundDialog, setOpenRefundDialog] = React.useState(false);\n\n  const [selectedBooking, setSelectedBooking] = React.useState(null);\n\n  const [editMode, setEditMode] = React.useState({ edit: false, person: null });\n  const [deleteMode, setDeleteMode] = React.useState({\n    delete: false,\n    person: null,\n  });\n  const [restoreMode, setRestoreMode] = React.useState({\n    restore: false,\n    person: null,\n  });\n\n  const [saving, setSaving] = React.useState(false);\n  const [deleting, setDeleting] = React.useState(false);\n  const [restoring, setRestoring] = React.useState(false);\n\n  const [validationError, setValidationError] = React.useState({});\n\n  const [bookingDate, setBookingDate] = React.useState(\"\");\n  const [bookingTime, setBookingTime] = React.useState(\"\");\n\n  const [fullname, setFullname] = React.useState(\"\");\n  const [email, setEmail] = React.useState(\"\");\n  const [tel, setTel] = React.useState(\"\");\n  const [notes, setNotes] = React.useState(\"\");\n  const [service, setService] = React.useState(\"\");\n\n  const [refreshData, setRefreshData] = React.useState(false);\n\n  const [booking, setBooking] = React.useState(null);\n\n  const [recordChanged, setRecordChanged] = React.useState(false);\n\n  const [fieldChanged, setFieldChanged] = React.useState(false);\n\n  const [openUndoPayDialog, setOpenUndoPayDialog] = React.useState(false);\n\n  const [openTimeStampDialog, setOpenTimeStampDialog] = React.useState(false);\n\n  const handleCloseTimeStampDialog = () => {\n    setOpenTimeStampDialog(false);\n    setSelectedBooking(null);\n  };\n\n  const handleCloseUndoPayDialog = () => {\n    setOpenUndoPayDialog(false);\n    setSelectedBooking(null);\n  };\n\n  const handleCloseResendDialog = () => {\n    setOpenResendDialog(false);\n    setSelectedBooking(null);\n  };\n\n  const handleClosePayDialog = () => {\n    setOpenPayDialog(false);\n    setSelectedBooking(null);\n  };\n\n  const handleCloseRefundDialog = () => {\n    setOpenRefundDialog(false);\n    setSelectedBooking(null);\n  };\n\n\n\n  const bookingDateChanged = (event) => {\n    setBookingDate(event.target.value);\n    setValidationError({ ...validationError, bookingDateError: false });\n    setFieldChanged(!fieldChanged);\n  };\n\n  const bookingTimeChanged = (event) => {\n    setBookingTime(event.target.value);\n    setValidationError({ ...validationError, bookingTimeError: false });\n    setFieldChanged(!fieldChanged);\n  };\n\n  const fullnameChanged = (event) => {\n    setFullname(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const emailChanged = (event) => {\n    setEmail(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const telChanged = (event) => {\n    setTel(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const serviceChanged = (event) => {\n    setService(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const notesChanged = (event) => {\n    setNotes(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const getStatusLabel = (status) => {\n    if (status === \"booked\") {\n      return <div className={classes.BookedLabel}> Booking Made </div>;\n    } else if (status === \"patient_attended\") {\n      return (\n        <div className={classes.PatientAttendedLabel}> Patient Attended </div>\n      );\n    } else {\n      return \"Unknown\";\n    }\n  };\n\n  const handleEditModeChanged = (edit, person) => {\n    if (edit) {\n      setFullname(person.fullname);\n      setBookingDate(FormatDateFromString(person.bookingDate));\n      setBookingTime(person.bookingTime.toUpperCase());\n      setEmail(person.email);\n      setTel(person.phone);\n      setDOB(FormatDateFromString(person.birthDate));\n      setService(person.packageName);\n      if (person.notes) {\n        setNotes(person.notes);\n      }\n\n      setEditMode({ edit: edit, person: person });\n    } else if (!edit && !person) {\n      setEditMode({ edit: edit, person: person });\n      setRecordChanged(false);\n    } else if (!edit && person) {\n      const booking = {};\n      const bookingId = person._id;\n      booking.email = email;\n      booking.phone = tel;\n      booking.fullname = fullname;\n      booking.notes = notes;\n      booking.birthDate = RevertFormatDateFromString(dob);\n      booking.packageName = service;\n      booking.bookingDate = RevertFormatDateFromString(bookingDate);\n      booking.bookingTime = bookingTime;\n      booking.bookingRef = person.bookingRef;\n\n      if (validateBooking(booking)) {\n        updateBooking({ bookingId: bookingId, person: booking });\n      }\n    }\n  };\n\n  const validateDate = (str) => {\n    var error = false;\n    if (!str || str.length !== 10) {\n      error = true;\n    }\n\n    if (str.charAt(4) !== \"-\" || str.charAt(7) !== \"-\") {\n      error = true;\n    }\n\n    try {\n      const result = /^\\d{4}-\\d{2}-\\d{2}$/.test(str);\n      if (!result) {\n        error = true;\n      }\n\n      const year = parseInt(str.substr(0, 4));\n      const month = parseInt(str.substr(5, 2));\n      const day = parseInt(str.substr(8, 2));\n\n      if (year < 1900) {\n        error = true;\n      }\n\n      if (month < 1 || month > 12) {\n        error = true;\n      }\n\n      if (day > 31) {\n        error = true;\n      }\n    } catch (err) {\n      error = true;\n    }\n\n    return !error;\n  };\n\n  const validateTime = (str) => {\n    var error = false;\n\n    const result = /^\\d{2}:\\d{2} AM$|^\\d{2}:\\d{2} PM$/.test(str);\n    if (!result) {\n      error = true;\n    }\n\n    try {\n      const hour = parseInt(str.substr(0, 2));\n      const minute = parseInt(str.substr(3, 2));\n\n      if (hour < 0 || hour > 12) {\n        error = true;\n      }\n\n      if (minute < 0 || minute > 59) {\n        error = true;\n      }\n    } catch (err) {\n      error = true;\n    }\n\n    return !error;\n  };\n\n  const validateBooking = (booking) => {\n    var error = false;\n\n    if (!validateDate(booking.bookingDate)) {\n      error = true;\n      setValidationError({ ...validationError, bookingDateError: true });\n    }\n\n    if (!validateDate(booking.birthDate)) {\n      error = true;\n      setValidationError({ ...validationError, dobError: true });\n    }\n\n    if (!validateTime(booking.bookingTime)) {\n      error = true;\n      setValidationError({ ...validationError, bookingTimeError: true });\n    }\n    return !error;\n  };\n\n  const updateBooking = (payload) => {\n    setSaving(true);\n    bookingService\n      .updateBooking(payload)\n      .then((res) => {\n        setSaving(false);\n        setEditMode({ edit: false, person: null });\n        setRefreshData(!refreshData);\n      })\n      .catch((err) => {\n        setSaving(false);\n        setEditMode({ edit: false, person: null });\n        console.log(err);\n      });\n  };\n\n  const deleteBooking = (id) => {\n    setDeleting(true);\n    bookingService\n      .deleteBooking(id)\n      .then((res) => {\n        setDeleting(false);\n        setDeleteMode({ delete: false, person: null });\n        setRefreshData(!refreshData);\n      })\n      .catch((err) => {\n        setDeleting(false);\n        setDeleteMode({ delete: false, person: null });\n        console.log(err);\n      });\n  };\n\n  const restoreBooking = (id) => {\n    setRestoring(true);\n    bookingService\n      .unDeleteBooking(id)\n      .then((res) => {\n        setRestoring(false);\n        setRestoreMode({ restore: false, person: null });\n        setRefreshData(!refreshData);\n      })\n      .catch((err) => {\n        setRestoring(false);\n        setRestoreMode({ restore: false, person: null });\n        console.log(err);\n      });\n  };\n\n  const handleDeleteModeChanged = (del, person) => {\n    if (del) {\n      setDeleteMode({ delete: del, person: person });\n    } else if (!del && !person) {\n      setDeleteMode({ delete: del, person: person });\n    } else if (!del && person) {\n      deleteBooking(person._id);\n    }\n  };\n\n  const handleRestoreModeChanged = (restore, person) => {\n    if (restore) {\n      setRestoreMode({ restore: restore, person: person });\n    } else if (!restore && !person) {\n      setRestoreMode({ restore: restore, person: person });\n    } else if (!restore && person) {\n      restoreBooking(person._id);\n    }\n  };\n\n  const changeBackToBookingMade = (event, id) => {\n    setSaving(true);\n    BookService.changeBackToBookingMade(id)\n      .then((res) => {\n        setSaving(false);\n        setRefreshData(!refreshData);\n      })\n      .catch((err) => {\n        console.log(err);\n        setSaving(false);\n      });\n  };\n\n  const changeToPatientAttended = (event, id) => {\n    setSaving(true);\n    BookService.changeToPatientAttended(id)\n      .then((res) => {\n        setSaving(false);\n        setRefreshData(!refreshData);\n      })\n      .catch((err) => {\n        console.log(err);\n        setSaving(false);\n      });\n  };\n\n  const Pay = (event, id) => {\n    setSelectedBooking(booking);\n    setOpenPayDialog(true);\n  };\n\n\n  useEffect(() => {\n    if (props.booking) {\n      loadFileUrl(props.booking._id)\n      setBooking(props.booking);\n      setEmail(props.booking.email)\n      setNotes(props.booking.notes)\n    }\n  }, [props.booking]);\n\n  const undoPaymentClicked = async () => {\n    setSaving(true);\n    try {\n      await BookService.unPayBooking(booking._id);\n      setSaving(false);\n      setOpenUndoPayDialog(false);\n      setRefreshData(!refreshData);\n    } catch (err) {\n      console.error(err);\n      setSaving(false);\n      setOpenUndoPayDialog(false);\n    }\n  };\n\n  const refundPaymentClicked = async () => {\n    setSaving(true);\n    try {\n      await BookService.refundBooking(booking._id);\n      setSaving(false);\n      updateShouldRefundsCount();\n      setOpenRefundDialog(false);\n      setRefreshData(!refreshData);\n    } catch (err) {\n      console.error(err);\n      setSaving(false);\n      setOpenRefundDialog(false);\n    }\n  };\n\n  const updateShouldRefundsCount = async () => {\n    try {\n      const res = await BookService.getShouldRefundsCount();\n      if (res && res.data && res.data.status === \"OK\") {\n        setState((state) => ({ ...state, shouldRefunsCount: res.data.count }));\n      }\n    } catch (ex) {\n      console.error(ex);\n    }\n  };\n\n  const [fileURL, setFileURL] = React.useState(null)\n  const loadFileUrl = (id) => {\n    setFileURL(null)\n    PDFService.downloadPdfLabReport(id)\n      .then((res) => {\n        const file = new Blob([res.data], { type: \"application/pdf\" });\n        var reader = new FileReader();\n        reader.readAsDataURL(file);\n        reader.onloadend = function () {\n          var base64data = reader.result;\n          console.log(base64data);\n          setFileURL(base64data)\n        }\n        // const _fileURL = URL.createObjectURL(file);\n        // setFileURL(_fileURL)\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n\n  const downloadRegForm = (id) => {\n    PDFService.downloadPdfLabReport(id)\n      .then((res) => {\n        const file = new Blob([res.data], { type: \"application/pdf\" });\n\n        const fileURL = URL.createObjectURL(file);\n        window.open(fileURL, \"_blank\");\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const sendRegForm = (id) => {\n    setSaving(true);\n    setEmailSent(false);\n    BookService.sendBloodReportEmail(id, email, notes)\n      .then((res) => {\n        setSaving(false);\n        if (res.data.status === \"OK\") {\n          setEmailSent(true);\n          setState(state => ({ ...state, bloodReportRefresh: !state.bloodReportRefresh }))\n          booking.emailSent = true\n\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setSaving(false);\n      });\n  };\n\n  const saveChanges = (id) => {\n    setSaving(true);\n    setChangesSaved(false);\n    BookService.updateBloodReport(id, email, notes)\n      .then((res) => {\n        setSaving(false);\n        if (res.data.status === \"OK\") {\n          setChangesSaved(true);\n          setState(state => ({ ...state, bloodReportRefresh: !state.bloodReportRefresh }))\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setSaving(false);\n      });\n  };\n\n\n  const onClose = () => {\n    setEmailSent(false);\n    setChangesSaved(false)\n    setEmailSentInvoice(false);\n    setInvoice(null);\n\n    setEmail('')\n    setNotes('')\n\n    props.onClose();\n  };\n\n  ///*** Invoice  ******************/\n\n  const [invoice, setInvoice] = React.useState(null);\n  const [invoiceLoaded, setInvoiceLoaded] = React.useState(false);\n  const [openInvoiceDialog, setOpenInvoiceDialog] = React.useState(false);\n  const [emailSentInvoice, setEmailSentInvoice] = React.useState(false);\n\n  const fetchInvoice = async () => {\n    try {\n      setInvoiceLoaded(false);\n      const res = await InvoiceService.getInvoiceByBookingId(props.booking._id);\n      setInvoice(res.data.invoice);\n      setInvoiceLoaded(true);\n    } catch (err) {\n      setInvoiceLoaded(true);\n      console.error(err);\n    }\n  };\n\n  React.useEffect(() => {\n    if (props.booking) {\n      fetchInvoice();\n    }\n  }, [props.booking, props.open]);\n\n  const handleCloseInvoiceDialog = (refresh) => {\n    setOpenInvoiceDialog(false);\n    setSelectedBooking(null);\n    fetchInvoice();\n  };\n\n  const OpenInvoiceDialog = () => {\n    setSelectedBooking(booking);\n    setInvoice(invoice);\n    setOpenInvoiceDialog(true);\n  };\n\n  const downloadInvoice = (id) => {\n    InvoiceService.downloadInvoice(id)\n      .then((res) => {\n        const file = new Blob([res.data], { type: \"application/pdf\" });\n\n        const fileURL = URL.createObjectURL(file);\n        window.open(fileURL, \"_blank\");\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const sendInvoiceEmail = (id, _email) => {\n    setSaving(true);\n    setEmailSentInvoice(false);\n    InvoiceService.emailInvoice(id, _email)\n      .then((res) => {\n        setSaving(false);\n        if (res.data.status === \"OK\") {\n          setEmailSentInvoice(true);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setSaving(false);\n      });\n  };\n\n  //***************************** */\n\n  const [dob, setDOB] = React.useState(\"\");\n  const dobChanged = (event) => {\n    setDOB(event.target.value);\n    setValidationError({ ...validationError, dobError: false });\n    setFieldChanged(!fieldChanged);\n  };\n\n  const getIndivisualTestsString = (indivisualTests) => {\n    if (!indivisualTests)\n      return '-'\n    const tests = JSON.parse(indivisualTests);\n    let testsString = \"\";\n    tests.forEach((item) => {\n      testsString += item.description;\n      testsString += \" , \";\n    });\n    return testsString;\n  };\n\n  const getColorFromClinic = (clinic) => {\n    switch (clinic) {\n      case 'blood':\n        return CalendarColors.BLOOD_COLOR\n      case 'std':\n        return CalendarColors.STD_COLOR\n      case 'gp':\n        return CalendarColors.GP_COLOR\n      case 'gynae':\n        return CalendarColors.GYNAE_COLOR\n      default:\n        return \"#999\"\n    }\n  }\n\n\n\n  return (\n    <React.Fragment>\n      {booking && (\n        <React.Fragment>\n          <Dialog\n            maxWidth=\"lg\"\n            open={props.open}\n            TransitionComponent={Transition}\n            keepMounted\n            onClose={onClose}\n            PaperComponent={PaperComponent}\n            aria-labelledby=\"alert-dialog-slide-title\"\n            aria-describedby=\"alert-dialog-slide-description\"\n          >\n            <DialogTitle\n              id=\"alert-dialog-slide-title\"\n              style={\n                booking.tr ? { backgroundColor: \"#7e0082\", color: \"#fff\" } : {}\n              }\n            >\n\n              <div\n                style={{\n                  position: \"absolute\",\n                  top: \"25x\",\n                  right: \"10px\",\n                  backgroundColor: getColorFromClinic(booking.clinic),\n                  color: \"#fff\",\n                  padding: \"0px 5px\",\n                  borderRadius: \"10px\",\n                }}\n              >\n                {booking.clinic?.toUpperCase()}\n              </div>\n\n              <div\n                style={{\n                  position: \"absolute\",\n                  top: \"25x\",\n                  left: \"20px\",\n                  color: \"#fff\",\n                  padding: \"0px 5px\",\n                }}\n                hidden={!booking.emailSent}\n              >\n                <Tooltip style={{ fontSize: \"20px\" }} title=\"Email has been sent\">\n                  <SendRoundedIcon style={{ fontSize: \"25px\", color: \"#009634\" }} />\n                </Tooltip>\n\n              </div>\n\n              <Grid\n                container\n                direction=\"row\"\n                justify=\"center\"\n                spacing={2}\n                alignItems=\"center\"\n              >\n                <Grid item>\n                  <div\n                    style={\n                      booking.deleted\n                        ? {\n                          paddingBottom: \"5px\",\n                          textDecoration: \"line-through\",\n                        }\n                        : {}\n                    }\n                  >\n                    {`${booking.name}`}\n                  </div>\n                </Grid>\n\n                {booking.deleted && (\n                  <Grid item>\n                    <Tooltip title=\"This record has been deleted.\">\n                      <DeleteIcon\n                        style={\n                          booking.tr\n                            ? {\n                              padding: 0,\n                              margin: 0,\n                              color: \"#fff\",\n                              fontSize: 25,\n                            }\n                            : {\n                              padding: 0,\n                              margin: 0,\n                              color: \"#333\",\n                              fontSize: 25,\n                            }\n                        }\n                      />\n                    </Tooltip>\n                  </Grid>\n                )}\n              </Grid>\n            </DialogTitle>\n            <DialogContent>\n              <div\n                style={{\n                  // height: \"550px\",\n                  paddingTop: \"0px\",\n                }}\n              >\n                <Grid item xs={12} md={12} key={`panel0`}>\n                  <div className={classes.infoDetails}>\n                    <ul className={classes.ul}>\n                      {/* Restore Functionality ******************************************* */}\n                      <li\n                        hidden={\n                          !(\n                            restoreMode.restore &&\n                            restoreMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <div\n                          style={{\n                            fontWeight: \"500\",\n                            paddingBottom: \"5px\",\n                            paddingLeft: \"5px\",\n                            fontSize: \"16px\",\n                            color: \"#333\",\n                          }}\n                        >\n                          Are you sure you want to restore this record?\n                        </div>\n                      </li>\n\n                      <li\n                        hidden={\n                          !booking.deleted ||\n                          (restoreMode.restore &&\n                            restoreMode.person._id === booking._id)\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"primary\"\n                          onClick={() => {\n                            handleRestoreModeChanged(true, booking);\n                          }}\n                          className={classes.RestoreButton}\n                        >\n                          Restore This Record\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            restoreMode.restore &&\n                            restoreMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"primary\"\n                          disabled={restoring}\n                          onClick={() => {\n                            handleRestoreModeChanged(false, booking);\n                          }}\n                          className={classes.SaveButton}\n                        >\n                          YES, Restore this!\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            restoreMode.restore &&\n                            restoreMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"default\"\n                          disabled={restoring}\n                          onClick={() => {\n                            handleRestoreModeChanged(false, null);\n                          }}\n                          className={classes.CancelButton}\n                        >\n                          Cancel\n                        </Button>\n                      </li>\n\n                      {/*  ******************************************************************* */}\n\n                      {/* Edit Functionality ******************************************* */}\n\n                      <li\n                        hidden={\n                          !(\n                            editMode.edit && editMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"primary\"\n                          disabled={saving || !recordChanged}\n                          onClick={() => {\n                            handleEditModeChanged(false, booking);\n                          }}\n                          className={classes.SaveButton}\n                        >\n                          Save Changes\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            editMode.edit && editMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"default\"\n                          disabled={saving}\n                          onClick={() => {\n                            handleEditModeChanged(false, null);\n                          }}\n                          className={classes.CancelButton}\n                        >\n                          Cancel\n                        </Button>\n                      </li>\n\n                      {/* ****************************************************************************************** */}\n\n                      {/* Delete Functionality ******************************************* */}\n\n                      <li\n                        hidden={\n                          !(\n                            deleteMode.delete &&\n                            deleteMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <div\n                          style={{\n                            fontWeight: \"600\",\n                            paddingBottom: \"5px\",\n                            paddingLeft: \"5px\",\n                            fontSize: \"16px\",\n                          }}\n                        >\n                          Are you sure you want to delete this record?\n                        </div>\n                      </li>\n\n                      <li\n                        hidden={\n                          props.deleteButtonDisabled ||\n                          booking.deleted ||\n                          editMode.edit ||\n                          (deleteMode.delete &&\n                            deleteMode.person._id === booking._id)\n                        }\n                      >\n                        {booking.OTCCharges > 0 && (\n                          <Tooltip title={\"Paid Records Cannot be Deleted!\"}>\n                            <div>\n                              <Button\n                                disabled={booking.OTCCharges > 0}\n                                type=\"button\"\n                                fullWidth\n                                variant=\"contained\"\n                                color=\"primary\"\n                                onClick={() => {\n                                  handleDeleteModeChanged(true, booking);\n                                }}\n                                className={classes.DeleteButton}\n                              >\n                                Delete This Record\n                              </Button>\n                            </div>\n                          </Tooltip>\n                        )}\n                        {booking.OTCCharges === 0 && (\n                          <Button\n                            disabled={booking.OTCCharges > 0}\n                            type=\"button\"\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={() => {\n                              handleDeleteModeChanged(true, booking);\n                            }}\n                            className={classes.DeleteButton}\n                          >\n                            Delete This Record\n                          </Button>\n                        )}\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            deleteMode.delete &&\n                            deleteMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"primary\"\n                          disabled={deleting}\n                          onClick={() => {\n                            handleDeleteModeChanged(false, booking);\n                          }}\n                          className={classes.SaveButton}\n                        >\n                          YES, Delete this!\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            deleteMode.delete &&\n                            deleteMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"default\"\n                          disabled={deleting}\n                          onClick={() => {\n                            handleDeleteModeChanged(false, null);\n                          }}\n                          className={classes.CancelButton}\n                        >\n                          Cancel\n                        </Button>\n                      </li>\n\n                      {/* ****************************************************************************************** */}\n\n\n\n                      <li className={classes.li}>\n\n                        <Grid container spacing={2}>\n                          <Grid item xs={12} md={4}>\n                            <span className={classes.infoTitle}>\n                              TEST DATE :\n                            </span>\n\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {FormatDateFromString(booking.testDate)}\n                            </span>\n\n\n                          </Grid>\n                          <Grid item xs={12} md={4}>\n                            <span className={classes.infoTitle}>NAME : </span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {booking.name}\n                            </span>\n\n\n                          </Grid>\n                          <Grid item xs={12} md={4}>\n                            <span className={classes.infoTitle}>D.O.B : </span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {FormatDateFromString(booking.birthDate)}\n                            </span>\n\n                          </Grid>\n\n                        </Grid>\n\n                      </li>\n\n                      {fileURL && (\n                        <div>\n                          {/* <Document\n                          file={{data:fileURL}}\n                          onLoadSuccess={onDocumentLoadSuccess}\n                        >\n                          <Page pageNumber={pageNumber} />\n                        </Document>\n                        <p>Page {pageNumber} of {numPages}</p> */}\n                          <iframe style={{ width: \"100%\", minHeight: \"500px\" }} src={fileURL}></iframe>\n                        </div>\n\n                      )}\n\n\n\n                      <li>\n                        {/* <span className={classes.infoTitle}>EMAIL :</span> */}\n                        <span\n                          className={classes.infoData}\n                        >\n                          <TextField\n                            label=\"EMAIL\"\n                            style={{ margin: \"10px\" }}\n                            fullWidth\n                            variant=\"outlined\"\n                            className={classes.TextBox}\n                            value={email}\n                            onChange={emailChanged}\n                          // inputProps={{\n                          //   style: {\n                          //     padding: 0,\n                          //   },\n                          // }}\n                          ></TextField>\n                        </span>\n\n                      </li>\n\n                      <li className={classes.li} style={{ paddingTop: \"0px\" }}>\n                        {/* <span className={classes.infoTitle}>NOTES :</span> */}\n                        <span\n                          className={classes.infoData}\n                        >\n                          <TextField\n                            fullWidth\n                            label=\"NOTES\"\n                            style={{ margin: \"10px\" }}\n                            className={classes.TextBox}\n                            value={notes}\n                            onChange={notesChanged}\n                            variant=\"outlined\"\n                            multiline\n                            rows={4}\n                          // inputProps={{\n                          //   style: {\n                          //     padding: 0,\n                          //   },\n                          // }}\n                          ></TextField>\n                        </span>\n\n                      </li>\n\n\n                      {/* <li hidden={booking.deleted || editMode.edit}>\n                        <Button\n                          startIcon={<PrintIcon />}\n                          type=\"button\"\n                          fullWidth\n                          variant=\"outlined\"\n                          color=\"primary\"\n                          onClick={() => {\n                            downloadRegForm(booking._id);\n                          }}\n                          className={classes.DownloadForm}\n                        >\n                          Download LAB Report\n                        </Button>\n                      </li> */}\n\n                      <li>\n                        <Button\n                          disabled={!email || !EmailValidator.validate(email)}\n                          startIcon={<SendIcon />}\n                          type=\"button\"\n                          fullWidth\n                          variant=\"outlined\"\n                          color=\"primary\"\n                          onClick={() => {\n                            sendRegForm(booking._id);\n                          }}\n                          className={classes.DownloadForm}\n                          style={{ position: \"relative\", marginBottom: \"10px\" }}\n                        >\n                          Send Email To Patient\n                          {emailSent && (\n                            <div\n                              style={{\n                                position: \"absolute\",\n                                right: \"10px\",\n                                top: \"5px\",\n                                color: \"#05ad19\",\n                              }}\n                            >\n                              Email Sent\n                            </div>\n                          )}\n                        </Button>\n                      </li>\n\n                      <li>\n                        <Button\n                          startIcon={<SaveIcon />}\n                          type=\"button\"\n                          fullWidth\n                          variant=\"outlined\"\n                          color=\"secondary\"\n                          onClick={() => {\n                            saveChanges(booking._id);\n                          }}\n                          className={classes.DownloadForm}\n                          style={{ position: \"relative\", marginBottom: \"10px\" }}\n                        >\n                          Save Changes\n                          {changesSaved && (\n                            <div\n                              style={{\n                                position: \"absolute\",\n                                right: \"10px\",\n                                top: \"5px\",\n                                color: \"#05ad19\",\n                              }}\n                            >\n                              Saved Successfully\n                            </div>\n                          )}\n                        </Button>\n                      </li>\n\n\n\n\n                    </ul>\n                  </div>\n                </Grid>\n              </div>\n              <Backdrop\n                className={classes.backdrop}\n                open={saving || deleting || restoring}\n              >\n                <CircularProgress color=\"inherit\" />\n              </Backdrop>\n            </DialogContent>\n\n            <PayDialog\n              booking={selectedBooking}\n              open={openPayDialog}\n              price={invoice ? invoice.grandTotal : null}\n              handleClose={handleClosePayDialog}\n            />\n\n            <InvoiceDialog\n              booking={selectedBooking}\n              invoice={invoice}\n              open={openInvoiceDialog}\n              handleClose={handleCloseInvoiceDialog}\n            />\n          </Dialog>\n\n          <Dialog\n            open={openUndoPayDialog}\n            onClose={handleCloseUndoPayDialog}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n          >\n            <DialogTitle style={{ color: \"#999\" }} id=\"alert-dialog-title\">\n              {\"Undo Payment\"}\n            </DialogTitle>\n            <DialogContent>\n              <DialogContentText\n                style={{ color: \"#333\", fontWeight: \"400\" }}\n                id=\"alert-dialog-description\"\n              >\n                Are you sure you want to undo payment for this booking?\n              </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={handleCloseUndoPayDialog} color=\"default\">\n                Back\n              </Button>\n              <Button onClick={undoPaymentClicked} color=\"secondary\" autoFocus>\n                Yes, Undo Payment\n              </Button>\n            </DialogActions>\n          </Dialog>\n\n          <Dialog\n            open={openRefundDialog}\n            onClose={handleCloseRefundDialog}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n          >\n            <DialogTitle style={{ color: \"#999\" }} id=\"alert-dialog-title\">\n              {\"Refund Deposit\"}\n            </DialogTitle>\n            <DialogContent>\n              <DialogContentText\n                style={{ color: \"#333\", fontWeight: \"400\" }}\n                id=\"alert-dialog-description\"\n              >\n                Are you sure you want to refund deposit payment for this\n                booking?\n              </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={handleCloseRefundDialog} color=\"default\">\n                Back\n              </Button>\n              <Button\n                onClick={refundPaymentClicked}\n                color=\"secondary\"\n                autoFocus\n              >\n                Yes, Refund Payment\n              </Button>\n            </DialogActions>\n          </Dialog>\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n}\n","import React, { useEffect, useRef, useState } from 'react';\nimport { DataGrid, ROW_CLICK } from '@material-ui/data-grid';\nimport BookService from './services/BookService';\nimport Typography from '@material-ui/core/Typography';\nimport { Button, Checkbox, Divider, FormControlLabel, Grid, Link, makeStyles, TextField, Tooltip } from '@material-ui/core';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport { IconButton } from '@material-ui/core';\nimport LoaderSpinner from 'react-loader-spinner';\nimport GlobalState from '../GlobalState';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\nimport WbIncandescentIcon from '@material-ui/icons/WbIncandescent';\nimport SearchIcon from '@material-ui/icons/Search';\n\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Draggable from 'react-draggable';\nimport Paper from '@material-ui/core/Paper';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport dateformat from 'dateformat';\nimport ReportProblemIcon from '@material-ui/icons/ReportProblem';\nimport BookingDialog from './BookingDialog';\nimport BloodReportDialog from './BloodReportDialog';\n\nimport Alert from '@material-ui/lab/Alert';\n\nimport PropTypes from 'prop-types';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Box from '@material-ui/core/Box';\n\nimport WarningIcon from '@material-ui/icons/Warning';\n\nimport { FormatDateFromString, RevertFormatDateFromString } from './DateFormatter';\nimport PDFService from './services/PDFService';\n\nimport DoneOutlineIcon from '@material-ui/icons/DoneOutline';\n\nimport SendRoundedIcon from '@material-ui/icons/SendRounded';\n\n\nvar interval;\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    marginTop: theme.spacing(0),\n    marginBottom: theme.spacing(1),\n\n  },\n\n  refreshButton: {\n    marginLeft: theme.spacing(2),\n  },\n\n  checkIcon: {\n    color: \"green\"\n  },\n\n  closeIcon: {\n    color: \"red\"\n  },\n\n  RefLink: {\n    cursor: \"pointer\"\n  },\n\n  BookedLabel: {\n    backgroundColor: \"#606060\",\n    color: \"#fff\",\n    paddingRight: \"10px\",\n    paddingLeft: \"10px\"\n  },\n\n  PatientAttendedLabel: {\n    backgroundColor: \"#0066aa\",\n    color: \"#fff\",\n    paddingRight: \"15px\",\n    paddingLeft: \"10px\"\n  },\n\n  SampleTakenLabel: {\n    backgroundColor: \"#0066cc\",\n    color: \"#fff\",\n    paddingRight: \"40px\",\n    paddingLeft: \"10px\"\n  },\n\n  ReportSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"90px\",\n    paddingLeft: \"10px\"\n  },\n\n  ReportCertSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"68px\",\n    paddingLeft: \"10px\"\n  },\n\n  archiveButton: {\n\n  },\n\n  smartMatchButton: {\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\"\n    },\n    textDecoration: \"none !important\",\n    marginRight: \"10px\"\n    // padding: \"10px\"  \n  },\n\n  infoTitle: {\n    fontWeight: \"400\"\n  },\n\n  infoData: {\n    paddingLeft: \"10px\",\n    fontWeight: \"800\"\n  },\n\n  matchButton:\n  {\n    marginTop: \"30px\",\n    marginBottom: \"20px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\"\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\"\n  },\n\n  resendButton:\n  {\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\"\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\"\n  },\n\n  resendFilesButton: {\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n    backgroundColor: \"#3792ad\",\n    \"&:hover\": {\n      background: \"#2f798f\",\n      color: \"#fff\"\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\"\n  },\n\n  cancelButton:\n  {\n    marginBottom: \"10px\",\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"90px\",\n    paddingRight: \"90px\"\n  },\n\n  downloadPDFButton:\n  {\n    marginRight: \"50px\"\n  },\n\n  clinicTitle: {\n    fontWeight: \"600\",\n    textAlign: \"center\",\n    color: theme.palette.primary.main,\n    padding: \"2px 10px\",\n  },\n\n  PCRLabel: {\n    color: \"#4faef7\",\n    fontWeight: \"600\",\n    fontSize: \"0.95rem\",\n  },\n\n  GynaeLabel: {\n    color: \"#e83caf\",\n    fontWeight: \"600\",\n    fontSize: \"0.95rem\",\n  },\n\n  GPLabel: {\n    color: \"#ff4f14\",\n    fontWeight: \"600\",\n    fontSize: \"0.95rem\",\n  },\n\n  STDLabel: {\n    color: \"#d6733a\",\n    fontWeight: \"600\",\n    fontSize: \"0.95rem\",\n  },\n\n  BloodLabel: {\n    color: \"#dc2626\",\n    fontWeight: \"600\",\n    fontSize: \"0.95rem\",\n  },\n\n\n}));\n\nconst BorderLinearProgress = withStyles((theme) => ({\n  root: {\n    height: 10,\n    borderRadius: 5,\n  },\n  colorPrimary: {\n    backgroundColor: \"#cedbce\" //theme.palette.grey[theme.palette.type === 'light' ? 200 : 700],\n  },\n  bar: {\n    borderRadius: 5,\n    backgroundColor: '#2f942e',\n  },\n}))(LinearProgress);\nfunction LinearProgressWithLabel(props) {\n  return (\n    <Box display=\"flex\" alignItems=\"center\">\n      <Box width=\"100%\" mr={1}>\n        <BorderLinearProgress variant=\"determinate\" {...props} />\n      </Box>\n      <Box minWidth={35}>\n        <Typography style={{ fontWeight: \"800\", color: \"#5e855e\" }} variant=\"body2\" color=\"textSecondary\">{`${Math.round(\n          props.value,\n        )}%`}</Typography>\n      </Box>\n    </Box>\n  );\n}\n\nLinearProgressWithLabel.propTypes = {\n  /**\n   * The value of the progress indicator for the determinate and buffer variants.\n   * Value between 0 and 100.\n   */\n  value: PropTypes.number.isRequired,\n};\n\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'}>\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nexport default function MatchedRecords() {\n\n  const classes = useStyles();\n\n  const getClassforClinic = (clinic) => {\n    switch (clinic) {\n      case \"pcr\":\n        return classes.PCRLabel;\n      case \"gp\":\n        return classes.GPLabel;\n      case \"gynae\":\n        return classes.GynaeLabel;\n      case \"std\":\n        return classes.STDLabel;\n      case \"blood\":\n        return classes.BloodLabel;\n\n\n      default:\n        return classes.clinicTitle;\n    }\n  };\n\n  const [selectedBooking, setSelectedBooking] = React.useState(null);\n  const [seeDetailsDialogOpen, setSeeDetailsDialogOpen] = React.useState(false);\n\n\n  const openDetailsDialog = (id) => {\n    const booking = data.bookings.find(element => element._id === id);\n    setSelectedBooking(booking);\n    setSeeDetailsDialogOpen(true);\n  }\n\n\n\n\n  const columns = [\n    {\n      field: 'id', headerName: ' ', width: 100, renderCell: (params) => {\n        return (\n\n          <React.Fragment>\n\n            {params.getValue(\"emailSent\") && (\n              <Tooltip style={{ fontSize: \"20px\" }} title=\"Email has been sent\">\n                <SendRoundedIcon style={{ fontSize: \"20px\", color: \"#009634\" }} />\n              </Tooltip>\n            )\n            }\n            { !params.getValue(\"emailSent\") && (\n              <SendRoundedIcon style={{ fontSize: \"20px\", color: \"#fafafa\" }} />\n            )\n            }\n\n\n\n            <Button\n              color=\"primary\"\n              onClick={event => openDetailsDialog(params.getValue(\"_id\"))}\n            >\n\n              <SearchIcon />\n\n            </Button>\n\n          </React.Fragment>\n\n\n\n        );\n\n      }\n    },\n\n    {\n      field: \"clinic\",\n      headerName: \"Clinic\",\n      align: \"center\",\n      width: 90,\n      renderCell: (params) => {\n        return (\n          <span className={getClassforClinic(params.value)}>\n            {params.value ? params.value.toUpperCase() : \"N/A\"}\n          </span>\n        );\n      },\n    },\n\n\n    {\n      field: 'testDate', headerName: 'Test Date', width: 120, valueFormatter: (params) => {\n        return FormatDateFromString(params.value);\n      }\n    },\n    { field: 'name', headerName: 'Name', width: 150 },\n    {\n      field: 'birthDate', headerName: 'D.O.B', width: 120, valueFormatter: (params) => {\n        return FormatDateFromString(params.value);\n      }\n    },\n    { field: 'email', headerName: 'Email', width: 150 },\n\n    {\n      field: '_id', headerName: 'Action', width: 500, renderCell: (params) => {\n        if (selectedTab === 'unresolved') {\n          return (\n            <React.Fragment>\n\n              {/* <Button\n                    disabled = {params.value === disableId}\n                    type=\"button\"\n                    variant=\"contained\"\n                    color=\"primary\"\n                    startIcon={<WbIncandescentIcon />}\n                    onClick = { event => smartMatchClicked(event,params.value)}\n                    className={classes.smartMatchButton}\n                    >\n                    smart match\n              </Button> */}\n\n\n\n              <Button\n                disabled={params.value === disableId}\n                type=\"button\"\n                color=\"primary\"\n                onClick={event => downloadLabReport(params.value)}\n                className={classes.downloadPDFButton}\n              >\n                view pdf\n              </Button>\n\n              <Button\n                disabled={params.value === disableId}\n                type=\"button\"\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={event => archiveRecord(event, params.value)}\n                className={classes.archiveButton}\n              >\n                archive\n              </Button>\n\n\n\n            </React.Fragment>\n\n          );\n        } else {\n          return (\n\n            <React.Fragment>\n\n              {/* <Button\n                        disabled = {params.value === disableId}\n                        type=\"button\"\n                        variant=\"contained\"\n                        color=\"primary\"\n                        startIcon={<WbIncandescentIcon />}\n                        onClick = { event => smartMatchClicked(event,params.value)}\n                        className={classes.smartMatchButton}\n                        >\n                        smart match\n                  </Button> */}\n\n\n              <Button\n                disabled={params.value === disableId}\n                type=\"button\"\n                color=\"primary\"\n                onClick={event => downloadLabReport(params.value)}\n                className={classes.downloadPDFButton}\n              >\n                view pdf\n                  </Button>\n\n              <Button\n                disabled={params.value === disableId}\n                type=\"button\"\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={event => unArchiveRecord(event, params.value)}\n                className={classes.archiveButton}\n              >\n                Restore\n                  </Button>\n\n\n            </React.Fragment>\n          );\n        }\n\n      }\n    },\n\n  ];\n\n  const [state, setState] = React.useContext(GlobalState);\n\n  const [data, setData] = React.useState({ bookings: [], cachedBookings: [], isFetching: false });\n\n  const [selectedRow, setSelectedRow] = React.useState(null);\n\n  const [filter, setFilter] = React.useState('');\n\n  const [refresh, setRefresh] = React.useState(false);\n\n  const [disableId, setDisableId] = React.useState(null);\n\n  const [selectedTab, setSeletedTab] = React.useState('unresolved');\n\n  const [openDialog, setOpenDialog] = React.useState(false);\n\n  const [smartLinkId, setSmartLinkId] = React.useState(null);\n\n  const [smartLinkDetails, setSmartLinkDetails] = React.useState(null);\n\n  const [likelyBookings, setLikelyBookings] = React.useState(null);\n\n  const [seeDetailsBooking, setSeeDetailsBooking] = React.useState(null);\n\n  const [matching, setMatching] = React.useState(false);\n\n  const [matched, setMatched] = React.useState(false);\n\n  const [sending, setSending] = React.useState(false);\n  const [sent, setSent] = React.useState(false);\n\n  const [sendJustToPCR, setSendJustToPCR] = React.useState(false);\n\n  const [sendingStatus, setSendingStatus] = React.useState('');\n\n  const [sendingProgress, setSendingProgress] = React.useState(10);\n\n  const [loading, setLoading] = React.useState(false)\n\n\n  const handleTabChanged = (event, value) => {\n    if (value && value.length) {\n      setSeletedTab(value);\n    }\n\n  };\n\n  const handleCloseDialog = () => {\n    setOpenDialog(false);\n    setTimeout(() => {\n      setSmartLinkId(null);\n      setSmartLinkDetails(null);\n      setLikelyBookings(null);\n      setSelectedBooking(null);\n      setMatched(false);\n      setMatching(false);\n      setSendingStatus(null);\n      setSending(false);\n      setSent(false);\n      clearInterval(interval);\n      setSendJustToPCR(false);\n    }, 100);\n  }\n\n  const handleCloseSeeDetaisDialog = () => {\n    setSeeDetailsDialogOpen(false);\n    setSelectedBooking(false)\n    // setTimeout(() => {\n    //   setSeeDetailsBooking(null);\n    // }, 500);\n  }\n\n  const seeDetailsClicked = (event, row) => {\n    setSeeDetailsBooking(row);\n    setSeeDetailsDialogOpen(true);\n  }\n\n  const smartMatchClicked = (event, id) => {\n    setSmartLinkId(id);\n    setOpenDialog(true);\n    findBestMatches(id);\n  }\n\n  useEffect(() => {\n    if (smartLinkId) {\n      findBestMatches(smartLinkId);\n      // console.log('refrshing....');\n\n    }\n\n\n  }, [state.bookingDialogDataChanged]);\n\n  const findBestMatches = (id) => {\n    BookService.getLinkDetails(id).then(res => {\n      setSmartLinkDetails(res.data);\n      console.log(res.data);\n    }).catch(err => {\n      console.log(err);\n    });\n\n    BookService.findBestMatches(id).then(res => {\n      setLikelyBookings(res.data.matchedBookings);\n    }).catch(err => {\n      console.log(err);\n      setLikelyBookings([]);\n    })\n  }\n\n  const archiveRecord = (event, id) => {\n    if (disableId) {\n      return;\n    }\n    setDisableId(id);\n\n    BookService.archiveBloodReport(id).then(\n      (res) => {\n        setDisableId(null);\n        setRefresh(!refresh);\n      }\n    ).catch((err) => {\n      setDisableId(null);\n    })\n  }\n\n  const unArchiveRecord = (event, id) => {\n    if (disableId) {\n      return;\n    }\n    setDisableId(id);\n\n    BookService.unArchiveBloodReport(id).then(\n      (res) => {\n        setDisableId(null);\n        setRefresh(!refresh);\n      }\n    ).catch((err) => {\n      setDisableId(null);\n    })\n  }\n\n\n  const lastPromise = useRef();\n\n  useEffect(() => {\n\n    var api = BookService.getNewMatchedBloodReports;\n    if (selectedTab === 'archived') {\n      api = BookService.getArchivedMatchedBloodReports;\n    }\n\n    setLoading(true)\n\n    setData({ bookings: [], cachedBookings: [], isFetching: true });\n    const currentPromise = api().then((res) => {\n\n      for (var i = 0; i < res.data.result.length; i++) {\n        res.data.result[i] = { ...res.data.result[i], id: i + 1 }\n      }\n\n      return res.data.result;\n    })\n\n    lastPromise.current = currentPromise;\n\n    currentPromise.then(\n      result => {\n        if (currentPromise === lastPromise.current) {\n          setLoading(false)\n          setData({ bookings: result, cachedBookings: [...result], isFetching: false });\n        }\n      },\n      e => {\n        if (currentPromise === lastPromise.current) {\n          setLoading(false)\n          console.log(e);\n          setData({ bookings: data.bookings, cachedBookings: data.cachedBookings, isFetching: false });\n        }\n      });\n  },\n    [refresh, selectedTab, state.bloodReportRefresh]);\n\n\n\n\n\n  useEffect(() => {\n\n    if (filter && filter.trim().length > 0) {\n      var filteredData = data.cachedBookings.filter((element) => {\n\n        return (element.name.toLowerCase().indexOf(filter.toLowerCase()) >= 0)\n          ;\n\n      });\n\n\n      setData({ bookings: filteredData, cachedBookings: data.cachedBookings, isFetching: false });\n    } else {\n      setData({ bookings: [...data.cachedBookings], cachedBookings: data.cachedBookings, isFetching: false });\n    }\n  },\n    [filter]);\n\n\n\n\n\n\n  const refreshClicked = (event) => {\n    setFilter('');\n    setRefresh(!refresh);\n\n  }\n\n  const filterChanged = (event) => {\n    setFilter(event.target.value);\n  }\n\n  const handleSelectionChanged = (newSelection) => {\n    if (newSelection.length > 0) {\n      setSelectedRow(newSelection.rows[0]);\n    }\n  }\n\n  const handleCheckChanged = (event, row) => {\n    if (event.target.checked) {\n      setSelectedBooking(row);\n    }\n    else {\n      setSelectedBooking(null);\n    }\n  }\n\n  const matchRecords = (event) => {\n\n    setMatching(true);\n\n    BookService.getBookingById(selectedBooking._id).then(res => {\n      setSelectedBooking(res.data);\n    });\n\n    BookService.matchRecords(selectedBooking._id, smartLinkId).then(res => {\n\n      if (res.data.status === 'OK') {\n        setMatching(false);\n        setMatched(true);\n      }\n\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  const getProgress = (status) => {\n    console.log(`status : ${status}`);\n\n    if (status === 'downloadFailed')\n      return 10;\n    else if (status === 'downloading')\n      return 30;\n    else if (status === 'downloadSuccess')\n      return 70;\n    else if (status === 'sent')\n      return 100;\n    else\n      return 0;\n\n  }\n\n  useEffect(() => {\n\n    setSendingProgress((prevProgress) => (prevProgress >= 100 ? 100 : getProgress(sendingStatus)));\n\n  }, [sendingStatus]);\n\n  const resendFilesClicked = (event) => {\n    setSending(true);\n    setSendingProgress(0);\n    setSendingStatus('downloadFailed');\n    setSendJustToPCR(true);\n\n\n    BookService.regenerateFiles(smartLinkId).then(res => {\n\n      interval = setInterval(() => {\n\n        // setProgress(sendingCounter);\n\n        // setProgress(getProgress(sendingStatus));\n\n        BookService.getLinkDetails(smartLinkId).then(res => {\n\n          setSendingStatus(res.data.status);\n\n          if (res.data.status === 'sent') {\n            setSending(false);\n            setSent(true);\n            setRefresh(!refresh);\n            clearInterval(interval);\n          }\n        });\n\n      }, 1000);\n\n    }).catch(err => {\n      console.log(err);\n      setSending(false);\n    });\n\n\n  }\n\n  const resendEmailsClicked = (event) => {\n    setSending(true);\n    setSendingProgress(0);\n    setSendingStatus('downloadFailed');\n\n\n    BookService.resendEmails(smartLinkId).then(res => {\n\n      interval = setInterval(() => {\n\n\n\n        // setProgress(sendingCounter);\n\n        // setProgress(getProgress(sendingStatus));\n\n        BookService.getLinkDetails(smartLinkId).then(res => {\n\n          setSendingStatus(res.data.status);\n\n          if (res.data.status === 'sent') {\n            setSending(false);\n            setSent(true);\n            setRefresh(!refresh);\n            clearInterval(interval);\n          }\n        });\n\n      }, 1000);\n\n    }).catch(err => {\n      console.log(err);\n      setSending(false);\n    });\n\n\n\n  }\n\n  const cancelResendEmailsClicked = (event) => {\n    setMatched(false);\n  }\n\n  const downloadLabReport = (id) => {\n    PDFService.downloadPdfLabReport(id).then((res) => {\n      const file = new Blob(\n        [res.data],\n        { type: 'application/pdf' });\n\n      const fileURL = URL.createObjectURL(file);\n      window.open(fileURL, \"_blank\");\n\n\n\n    }).catch((err) => {\n      console.log(err);\n    });\n  }\n\n\n  return (\n    <React.Fragment>\n\n      {loading && (\n        <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\n          <LinearProgress color=\"primary\" />\n        </div>\n      )}\n\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"space-between\"\n        alignItems=\"flex-end\"\n      >\n        <Grid item md={5}>\n          <div style={{ textAlign: \"left\", paddingLeft: \"10px\" }}>\n            <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"center\">\n              <Grid item>\n                <span style={{ paddingRight: \"15px\", color: \"#008c00\" }}> <DoneOutlineIcon style={{ fontSize: \"2.2rem\" }} /> </span>\n              </Grid>\n              <Grid item>\n                <span style={{ fontSize: '1.4rem', fontWeight: \"600\", color: \"#555\" }}> Matched Blood Results </span>\n              </Grid>\n              <Grid item>\n                <Tooltip title=\"Refresh\" placement=\"right\">\n                  <IconButton\n                    color=\"primary\"\n                    className={classes.refreshButton}\n                    onClick={refreshClicked}\n                  >\n                    <RefreshIcon />\n                  </IconButton>\n                </Tooltip>\n              </Grid>\n            </Grid>\n          </div>\n        </Grid>\n\n        <Grid item md={3}>\n          <ToggleButtonGroup\n            value={selectedTab}\n            style={{ marginBottom: \"10px\" }}\n            exclusive\n            onChange={handleTabChanged}\n            aria-label=\"text alignment\"\n          >\n            <ToggleButton value=\"unresolved\" aria-label=\"left aligned\">\n              NEW\n            </ToggleButton>\n            <ToggleButton value=\"archived\" aria-label=\"centered\">\n              Archived\n            </ToggleButton>\n          </ToggleButtonGroup>\n        </Grid>\n\n        <Grid item md={3}>\n          <TextField\n            variant=\"standard\"\n            value={filter}\n            onChange={filterChanged}\n            margin=\"normal\"\n            size=\"small\"\n            id=\"filter\"\n            label=\"Filter\"\n            name=\"filter\"\n            autoComplete=\"off\"\n          />\n        </Grid>\n      </Grid>\n\n      <div style={{ height: 700, width: \"100%\" }}>\n        <DataGrid\n          rows={data.bookings}\n          columns={columns}\n          autoPageSize\n          onSelectionChange={handleSelectionChanged}\n        />\n      </div>\n\n      <Dialog\n        maxWidth=\"lg\"\n        open={openDialog}\n        onClose={handleCloseDialog}\n        PaperComponent={PaperComponent}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogTitle id=\"draggable-dialog-title\">\n          <Grid\n            container\n            spacing={2}\n            direction=\"row\"\n            justify=\"center\"\n            alignItems=\"center\"\n          >\n            <Grid item>\n              <WbIncandescentIcon\n                style={{ color: \"#2f942e\", fontSize: \"2rem\" }}\n              />\n            </Grid>\n\n            <Grid item>\n              <div\n                style={{\n                  color: \"#2f942e\",\n                  paddingBottom: \"12px\",\n                  fontWeight: \"800\",\n                }}\n              >\n                {\" \"}\n                SMART MATCH{\" \"}\n              </div>\n            </Grid>\n          </Grid>\n\n          <Divider />\n        </DialogTitle>\n        <DialogContent>\n          <div\n            style={{\n              height: \"600px\",\n              // width: \"1200px\",\n            }}\n          >\n            {(!likelyBookings || !smartLinkDetails) && (\n              <React.Fragment>\n                <Grid\n                  container\n                  direction=\"column\"\n                  justify=\"center\"\n                  alignItems=\"center\"\n                  spacing={2}\n                >\n                  <Grid item>\n                    <LoaderSpinner\n                      style={{ marginTop: \"170px\" }}\n                      type=\"Grid\"\n                      color=\"#2f942e\"\n                      height={100}\n                      width={100}\n                      timeout={0} //3 secs\n                    />\n                  </Grid>\n                  <Grid item>\n                    <div\n                      style={{\n                        color: \"#2f942e\",\n                        paddingBottom: \"12px\",\n                        fontWeight: \"800\",\n                      }}\n                    >\n                      {\" \"}\n                      SEARCHING ...{\" \"}\n                    </div>\n                  </Grid>\n                </Grid>\n              </React.Fragment>\n            )}\n\n            {likelyBookings && likelyBookings.length === 0 && (\n              <React.Fragment>\n                <Grid\n                  container\n                  direction=\"column\"\n                  justify=\"center\"\n                  alignItems=\"center\"\n                  spacing={2}\n                >\n                  <Grid item>\n                    <div\n                      style={{\n                        color: \"#2f942e\",\n                        paddingBottom: \"12px\",\n                        fontWeight: \"800\",\n                        marginTop: \"230px\",\n                      }}\n                    >\n                      {\" \"}\n                      SORRY, NO RECORDS FOUND !{\" \"}\n                    </div>\n                  </Grid>\n                </Grid>\n              </React.Fragment>\n            )}\n\n            {likelyBookings && smartLinkDetails && likelyBookings.length > 0 && (\n              <React.Fragment>\n                <Grid\n                  container\n                  direction=\"column\"\n                  justify=\"flex-start\"\n                  alignItems=\"stretch\"\n                  spacing={2}\n                >\n                  <Grid item>\n                    <div\n                      style={{\n                        fontSize: \"1.1rem\",\n                        fontWeight: \"600\",\n                        color: \"#2f942e\",\n                        marginBottom: \"15px\",\n                      }}\n                    >\n                      {\" \"}\n                      LAB RECORD :\n                    </div>\n\n                    <Grid\n                      style={{ paddingLeft: \"20px\", paddingBottom: \"20px\" }}\n                      container\n                      direction=\"row\"\n                      justify=\"flex-start\"\n                      alignItems=\"flex-start\"\n                      spacing={4}\n                    >\n                      <Grid item>\n                        <span className={classes.infoTitle}>Name:</span>\n                        <span className={classes.infoData}>\n                          {smartLinkDetails.name}\n                        </span>\n                      </Grid>\n\n                      <Grid item>\n                        <span className={classes.infoTitle}>D.O.B:</span>\n                        <span className={classes.infoData}>\n                          {FormatDateFromString(smartLinkDetails.birthDate)}\n                        </span>\n                      </Grid>\n\n                      <Grid item>\n                        <span className={classes.infoTitle}>Test Date:</span>\n                        <span className={classes.infoData}>\n                          {FormatDateFromString(smartLinkDetails.testDate)}\n                        </span>\n                      </Grid>\n                    </Grid>\n\n                    <Divider />\n                  </Grid>\n\n                  <Grid item>\n                    <div\n                      style={{\n                        fontSize: \"1.1rem\",\n                        fontWeight: \"600\",\n                        color: \"#2f942e\",\n                        marginBottom: \"15px\",\n                      }}\n                    >\n                      {\" \"}\n                      BEST MATCHES :\n                    </div>\n                  </Grid>\n\n                  <Grid item>\n                    <Table size=\"small\">\n                      <TableHead>\n                        <TableRow>\n                          <TableCell>Select</TableCell>\n                          <TableCell>Match</TableCell>\n                          <TableCell>Forename</TableCell>\n                          <TableCell>Surname</TableCell>\n                          <TableCell>D.O.B</TableCell>\n                          <TableCell>Email</TableCell>\n                          <TableCell>Test Date</TableCell>\n                          <TableCell></TableCell>\n                        </TableRow>\n                      </TableHead>\n                      <TableBody>\n                        {likelyBookings.map((row) => (\n                          <TableRow key={row._id}>\n                            <TableCell>\n                              <Tooltip\n                                title={\n                                  row.birthDate !== smartLinkDetails.birthDate\n                                    ? '\"D.O.B\" DOES NOT MATCH THE LAB REPORT ! PLEASE MAKE SURE \"D.O.B\" OF THE SELECTED BOOKING IS CORRECT !'\n                                    : \"\"\n                                }\n                              >\n                                <FormControlLabel\n                                  control={\n                                    <Checkbox\n                                      checked={\n                                        selectedBooking &&\n                                        selectedBooking._id === row._id\n                                      }\n                                      disabled={\n                                        matched || matching\n                                      }\n                                      onChange={(event) =>\n                                        handleCheckChanged(event, row)\n                                      }\n                                      name=\"checkedA\"\n                                    />\n                                  }\n                                  label=\"\"\n                                />\n                              </Tooltip>\n                            </TableCell>\n                            <TableCell\n                              style={{\n                                fontWeight: \"800\",\n                                color: \"#2f942e\",\n                                fontSize: \"1.1rem\",\n                              }}\n                            >{`${row.likelihood} %`}</TableCell>\n                            <TableCell\n                              style={\n                                row.forenameCapital ===\n                                  smartLinkDetails.forename\n                                  ? { fontWeight: \"800\", color: \"#2f942e\" }\n                                  : { fontWeight: \"800\", color: \"#ff871f\" }\n                              }\n                            >\n                              {row.forenameCapital}\n                            </TableCell>\n                            <TableCell\n                              style={\n                                row.surnameCapital === smartLinkDetails.surname\n                                  ? { fontWeight: \"800\", color: \"#2f942e\" }\n                                  : { fontWeight: \"800\", color: \"#ff871f\" }\n                              }\n                            >\n                              {row.surnameCapital}\n                            </TableCell>\n                            <TableCell\n                              style={\n                                row.birthDate === smartLinkDetails.birthDate\n                                  ? { fontWeight: \"800\", color: \"#2f942e\" }\n                                  : { fontWeight: \"800\", color: \"red\" }\n                              }\n                            >\n                              <Grid\n                                container\n                                direction=\"column\"\n                                justify=\"center\"\n                                alignItems=\"center\"\n                                spacing={1}\n                              >\n                                <Grid item>\n                                  {row.birthDate !==\n                                    smartLinkDetails.birthDate && (\n                                      <span style={{ textAlign: \"center\" }}>\n                                        <ReportProblemIcon />\n                                      </span>\n                                    )}\n                                </Grid>\n                                {FormatDateFromString(row.birthDate)}\n                                <Grid item></Grid>\n                              </Grid>\n                            </TableCell>\n                            <TableCell>{row.email?.toUpperCase()}</TableCell>\n                            <TableCell\n                              style={\n                                dateformat(\n                                  row.samplingTimeStamp,\n                                  \"yyyy-mm-dd\"\n                                ) === smartLinkDetails.testDate\n                                  ? { fontWeight: \"800\", color: \"#2f942e\" }\n                                  : { fontWeight: \"800\", color: \"red\" }\n                              }\n                            >\n                              {FormatDateFromString(dateformat(row.samplingTimeStamp, \"yyyy-mm-dd\"))}\n                            </TableCell>\n                            <TableCell>\n                              <Button\n                                color=\"primary\"\n                                disabled={sending}\n                                onClick={(event) =>\n                                  seeDetailsClicked(event, row)\n                                }\n                              >\n                                See Details\n                              </Button>\n                            </TableCell>\n                          </TableRow>\n                        ))}\n                      </TableBody>\n                    </Table>\n                  </Grid>\n                </Grid>\n\n                <Grid\n                  container\n                  direction=\"column\"\n                  justify=\"center\"\n                  spacing={1}\n                  alignItems=\"center\"\n                >\n\n                  {!matched && (\n                    <React.Fragment>\n                      <Grid item>\n                        <Button\n                          disabled={!selectedBooking || matching}\n                          className={classes.matchButton}\n                          variant=\"contained\"\n                          color=\"primary\"\n                          onClick={matchRecords}\n                        >\n                          GO Match THE Records\n                          </Button>\n                      </Grid>\n\n                      {!selectedBooking && (\n                        <Grid item>\n                          <Alert severity=\"warning\">No Record is Selected ! — Please select a record you think it is a match.</Alert>\n                        </Grid>\n                      )}\n\n                    </React.Fragment>\n                  )}\n\n                  {matched && !sent && !sending && (\n                    <React.Fragment>\n\n                      <Grid item>\n\n                        <Alert style={{ marginTop: \"10px\", paddingLeft: \"50px\", paddingRight: \"50px\" }} severity=\"success\"> Success — The Records are Matched Now !</Alert>\n\n                      </Grid>\n\n                      <Grid item>\n\n                        <div style={{ paddingTop: \"5px\", fontSize: \"1rem\", fontWeight: \"500\", color: \"#555\" }}>\n                          Do you want to Resend the LAB Report {selectedBooking.certificate ? ' and Certificate' : ''}  Now?\n                      </div>\n\n                      </Grid>\n\n                      <Grid item>\n                        <Button\n                          disabled={sending || sent}\n                          className={classes.resendButton}\n                          variant=\"contained\"\n                          color=\"primary\"\n                          onClick={resendEmailsClicked}\n                        >\n                          YES ! RESEND THE EMAILS\n                          </Button>\n                      </Grid>\n\n                      <Grid item>\n                        <Button\n                          disabled={sending || sent}\n                          className={classes.cancelButton}\n                          variant=\"contained\"\n                          color=\"default\"\n                          onClick={cancelResendEmailsClicked}\n                        >\n                          NO ! NOT NOW\n                          </Button>\n                      </Grid>\n\n\n                      <Grid item>\n                        <Button\n                          disabled={sending || sent}\n                          className={classes.resendFilesButton}\n                          variant=\"contained\"\n                          color=\"primary\"\n                          onClick={resendFilesClicked}\n                        >\n                          Just Generate The Files and send to pcrresults@medicalexpressclinic.co.uk\n                          </Button>\n                      </Grid>\n\n                      <Grid item>\n\n                        <Alert style={{ marginTop: \"10px\", paddingLeft: \"50px\", paddingRight: \"50px\" }} severity=\"warning\">\n                          Caution! — The LAB Report and Certificate will be Sent According to the Record you have Selected !\n                          </Alert>\n\n                      </Grid>\n\n\n\n                    </React.Fragment>\n                  )}\n\n                  {matched && (sending || sent) && (\n                    <Grid item>\n\n                      <div style={{ paddingTop: \"50px\", color: \"#2f942e\", fontWeight: \"600\", fontSize: \"1rem\" }}>\n                        {sending && !sent && (\n                          'Sending ...'\n                        )}\n\n                        {sent && !sendJustToPCR && (\n                          <Alert style={{ marginTop: \"10px\", paddingLeft: \"50px\", paddingRight: \"50px\" }} severity=\"success\">\n                            Success! — The LAB Report {selectedBooking.certificate ? ' and Certificate ' : ' '}  Successfully Sent.\n                          </Alert>\n                        )}\n\n                        {sent && sendJustToPCR && (\n                          <Alert style={{ marginTop: \"10px\", paddingLeft: \"50px\", paddingRight: \"50px\" }} severity=\"success\">\n                            Success! — The LAB Report {selectedBooking.certificate ? ' and Certificate ' : ' '}  Successfully Sent Just to pcrresults@medicalexpressclinic.co.uk .\n                          </Alert>\n                        )}\n\n\n\n\n                      </div>\n\n                    </Grid>\n\n                  )}\n\n                </Grid>\n              </React.Fragment>\n            )}\n\n\n            {matched && (sending || sent) && (\n              <React.Fragment>\n\n                <div style={{ marginTop: \"10px\", width: \"50%\", marginLeft: \"27%\" }}>\n\n                  <LinearProgressWithLabel variant=\"determinate\" color=\"primary\" value={sendingProgress} />\n\n                </div>\n\n                <div style={{ paddingTop: \"30px\", color: \"#2f942e\", fontWeight: \"600\", fontSize: \"1rem\", marginLeft: \"45%\" }}>\n                  {sending && !sent && (\n                    'PLEASE WAIT ...'\n                  )}\n\n                </div>\n\n              </React.Fragment>\n            )}\n\n\n          </div>\n\n        </DialogContent>\n      </Dialog>\n\n      <BloodReportDialog\n        booking={selectedBooking}\n        open={seeDetailsDialogOpen}\n        onClose={handleCloseSeeDetaisDialog}\n      />\n\n    </React.Fragment>\n  );\n}","import React, { useEffect, useRef, useState } from 'react';\nimport { DataGrid, ROW_CLICK } from '@material-ui/data-grid';\nimport BookService from './services/BookService';\nimport Typography from '@material-ui/core/Typography';\nimport { Button, Checkbox, Divider, FormControlLabel, Grid, Link, makeStyles, TextField, Tooltip } from '@material-ui/core';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport { IconButton } from '@material-ui/core';\nimport LoaderSpinner from 'react-loader-spinner';\nimport GlobalState from '../GlobalState';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\nimport WbIncandescentIcon from '@material-ui/icons/WbIncandescent';\nimport SearchIcon from '@material-ui/icons/Search';\n\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Draggable from 'react-draggable';\nimport Paper from '@material-ui/core/Paper';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport dateformat from 'dateformat';\nimport ReportProblemIcon from '@material-ui/icons/ReportProblem';\nimport BookingDialog from './BookingDialog';\nimport BloodReportDialog from './BloodReportDialog';\n\nimport Alert from '@material-ui/lab/Alert';\n\nimport PropTypes from 'prop-types';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Box from '@material-ui/core/Box';\n\nimport WarningIcon from '@material-ui/icons/Warning';\n\nimport { FormatDateFromString, RevertFormatDateFromString } from './DateFormatter';\nimport PDFService from './services/PDFService';\n\nimport DoneOutlineIcon from '@material-ui/icons/DoneOutline';\n\nimport SendRoundedIcon from '@material-ui/icons/SendRounded';\n\nimport ArchiveIcon from '@material-ui/icons/Archive';\n\n\nvar interval;\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    marginTop: theme.spacing(0),\n    marginBottom: theme.spacing(1),\n\n  },\n\n  refreshButton: {\n    marginLeft: theme.spacing(2),\n  },\n\n  checkIcon: {\n    color: \"green\"\n  },\n\n  closeIcon: {\n    color: \"red\"\n  },\n\n  RefLink: {\n    cursor: \"pointer\"\n  },\n\n  BookedLabel: {\n    backgroundColor: \"#606060\",\n    color: \"#fff\",\n    paddingRight: \"10px\",\n    paddingLeft: \"10px\"\n  },\n\n  PatientAttendedLabel: {\n    backgroundColor: \"#0066aa\",\n    color: \"#fff\",\n    paddingRight: \"15px\",\n    paddingLeft: \"10px\"\n  },\n\n  SampleTakenLabel: {\n    backgroundColor: \"#0066cc\",\n    color: \"#fff\",\n    paddingRight: \"40px\",\n    paddingLeft: \"10px\"\n  },\n\n  ReportSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"90px\",\n    paddingLeft: \"10px\"\n  },\n\n  ReportCertSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"68px\",\n    paddingLeft: \"10px\"\n  },\n\n  archiveButton: {\n\n  },\n\n  smartMatchButton: {\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\"\n    },\n    textDecoration: \"none !important\",\n    marginRight: \"10px\"\n    // padding: \"10px\"  \n  },\n\n  infoTitle: {\n    fontWeight: \"400\"\n  },\n\n  infoData: {\n    paddingLeft: \"10px\",\n    fontWeight: \"800\"\n  },\n\n  matchButton:\n  {\n    marginTop: \"30px\",\n    marginBottom: \"20px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\"\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\"\n  },\n\n  resendButton:\n  {\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\"\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\"\n  },\n\n  resendFilesButton: {\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n    backgroundColor: \"#3792ad\",\n    \"&:hover\": {\n      background: \"#2f798f\",\n      color: \"#fff\"\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\"\n  },\n\n  cancelButton:\n  {\n    marginBottom: \"10px\",\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"90px\",\n    paddingRight: \"90px\"\n  },\n\n  downloadPDFButton:\n  {\n    marginRight: \"50px\"\n  },\n\n  clinicTitle: {\n    fontWeight: \"600\",\n    textAlign: \"center\",\n    color: theme.palette.primary.main,\n    padding: \"2px 10px\",\n  },\n\n  PCRLabel: {\n    color: \"#4faef7\",\n    fontWeight: \"600\",\n    fontSize: \"0.95rem\",\n  },\n\n  GynaeLabel: {\n    color: \"#e83caf\",\n    fontWeight: \"600\",\n    fontSize: \"0.95rem\",\n  },\n\n  GPLabel: {\n    color: \"#ff4f14\",\n    fontWeight: \"600\",\n    fontSize: \"0.95rem\",\n  },\n\n  STDLabel: {\n    color: \"#d6733a\",\n    fontWeight: \"600\",\n    fontSize: \"0.95rem\",\n  },\n\n  BloodLabel: {\n    color: \"#dc2626\",\n    fontWeight: \"600\",\n    fontSize: \"0.95rem\",\n  },\n\n\n}));\n\nconst BorderLinearProgress = withStyles((theme) => ({\n  root: {\n    height: 10,\n    borderRadius: 5,\n  },\n  colorPrimary: {\n    backgroundColor: \"#cedbce\" //theme.palette.grey[theme.palette.type === 'light' ? 200 : 700],\n  },\n  bar: {\n    borderRadius: 5,\n    backgroundColor: '#2f942e',\n  },\n}))(LinearProgress);\nfunction LinearProgressWithLabel(props) {\n  return (\n    <Box display=\"flex\" alignItems=\"center\">\n      <Box width=\"100%\" mr={1}>\n        <BorderLinearProgress variant=\"determinate\" {...props} />\n      </Box>\n      <Box minWidth={35}>\n        <Typography style={{ fontWeight: \"800\", color: \"#5e855e\" }} variant=\"body2\" color=\"textSecondary\">{`${Math.round(\n          props.value,\n        )}%`}</Typography>\n      </Box>\n    </Box>\n  );\n}\n\nLinearProgressWithLabel.propTypes = {\n  /**\n   * The value of the progress indicator for the determinate and buffer variants.\n   * Value between 0 and 100.\n   */\n  value: PropTypes.number.isRequired,\n};\n\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'}>\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nexport default function ArchivedRecords() {\n\n  const classes = useStyles();\n\n  const getClassforClinic = (clinic) => {\n    switch (clinic) {\n      case \"pcr\":\n        return classes.PCRLabel;\n      case \"gp\":\n        return classes.GPLabel;\n      case \"gynae\":\n        return classes.GynaeLabel;\n      case \"std\":\n        return classes.STDLabel;\n      case \"blood\":\n        return classes.BloodLabel;\n\n\n      default:\n        return classes.clinicTitle;\n    }\n  };\n\n  const [selectedBooking, setSelectedBooking] = React.useState(null);\n  const [seeDetailsDialogOpen, setSeeDetailsDialogOpen] = React.useState(false);\n\n\n  const openDetailsDialog = (id) =>\n  {\n    const booking = data.bookings.find(element => element._id === id);\n    setSelectedBooking(booking);\n    setSeeDetailsDialogOpen(true);\n  }\n\n  \n\n\n  const columns = [\n    {\n      field: 'id', headerName: ' ', width: 100, renderCell: (params) => {\n        return (\n\n          <React.Fragment>\n\n            {params.getValue(\"emailSent\") && (\n              <Tooltip style={{ fontSize: \"20px\" }} title=\"Email has been sent\">\n                <SendRoundedIcon style={{ fontSize: \"20px\", color: \"#009634\" }} />\n              </Tooltip>\n            )\n            }\n            { !params.getValue(\"emailSent\") && (\n              <SendRoundedIcon style={{ fontSize: \"20px\", color: \"#fafafa\" }} />\n            )\n            }\n\n\n\n            <Button\n              color=\"primary\"\n              onClick={event => openDetailsDialog(params.getValue(\"_id\"))}\n            >\n\n              <SearchIcon />\n\n            </Button>\n\n          </React.Fragment>\n\n\n\n        );\n\n      }\n    },\n\n    {\n      field: \"clinic\",\n      headerName: \"Clinic\",\n      align: \"center\",\n      width: 90,\n      renderCell: (params) => {\n        return (\n          <span className={getClassforClinic(params.value)}>\n            {params.value ? params.value.toUpperCase() : \"N/A\"}\n          </span>\n        );\n      },\n    },\n\n\n    {\n      field: 'testDate', headerName: 'Test Date', width: 120, valueFormatter: (params) => {\n        return FormatDateFromString(params.value);\n      }\n    },\n    { field: 'name', headerName: 'Name', width: 150 },\n    {\n      field: 'birthDate', headerName: 'D.O.B', width: 120, valueFormatter: (params) => {\n        return FormatDateFromString(params.value);\n      }\n    },\n    { field: 'email', headerName: 'Email', width: 150 },\n\n    {\n      field: '_id', headerName: 'Action', width: 500, renderCell: (params) => {\n        if (selectedTab === 'unresolved') {\n          return (\n            <React.Fragment>\n\n              {/* <Button\n                    disabled = {params.value === disableId}\n                    type=\"button\"\n                    variant=\"contained\"\n                    color=\"primary\"\n                    startIcon={<WbIncandescentIcon />}\n                    onClick = { event => smartMatchClicked(event,params.value)}\n                    className={classes.smartMatchButton}\n                    >\n                    smart match\n              </Button> */}\n\n\n\n              <Button\n                disabled={params.value === disableId}\n                type=\"button\"\n                color=\"primary\"\n                onClick={event => downloadLabReport(params.value)}\n                className={classes.downloadPDFButton}\n              >\n                view pdf\n              </Button>\n\n              <Button\n                disabled={params.value === disableId}\n                type=\"button\"\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={event => unArchiveRecord(event, params.value)}\n                className={classes.archiveButton}\n              >\n                Restore\n              </Button>\n\n\n\n            </React.Fragment>\n\n          );\n        } else {\n          return (\n\n            <React.Fragment>\n\n              {/* <Button\n                        disabled = {params.value === disableId}\n                        type=\"button\"\n                        variant=\"contained\"\n                        color=\"primary\"\n                        startIcon={<WbIncandescentIcon />}\n                        onClick = { event => smartMatchClicked(event,params.value)}\n                        className={classes.smartMatchButton}\n                        >\n                        smart match\n                  </Button> */}\n\n              <Button\n                disabled={params.value === disableId}\n                type=\"button\"\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={event => unArchiveRecord(event, params.value)}\n                className={classes.archiveButton}\n              >\n                Restore\n                  </Button>\n\n              <Button\n                disabled={params.value === disableId}\n                type=\"button\"\n                color=\"primary\"\n                onClick={event => downloadLabReport(params.value)}\n                className={classes.downloadPDFButton}\n              >\n                view pdf\n                  </Button>\n\n            </React.Fragment>\n          );\n        }\n\n      }\n    },\n\n  ];\n\n  const [state, setState] = React.useContext(GlobalState);\n\n  const [data, setData] = React.useState({ bookings: [], cachedBookings: [], isFetching: false });\n\n  const [selectedRow, setSelectedRow] = React.useState(null);\n\n  const [filter, setFilter] = React.useState('');\n\n  const [refresh, setRefresh] = React.useState(false);\n\n  const [disableId, setDisableId] = React.useState(null);\n\n  const [selectedTab, setSeletedTab] = React.useState('unresolved');\n\n  const [openDialog, setOpenDialog] = React.useState(false);\n\n  const [smartLinkId, setSmartLinkId] = React.useState(null);\n\n  const [smartLinkDetails, setSmartLinkDetails] = React.useState(null);\n\n  const [likelyBookings, setLikelyBookings] = React.useState(null);\n\n  const [seeDetailsBooking, setSeeDetailsBooking] = React.useState(null);\n\n  const [matching, setMatching] = React.useState(false);\n\n  const [matched, setMatched] = React.useState(false);\n\n  const [sending, setSending] = React.useState(false);\n  const [sent, setSent] = React.useState(false);\n\n  const [sendJustToPCR, setSendJustToPCR] = React.useState(false);\n\n  const [sendingStatus, setSendingStatus] = React.useState('');\n\n  const [sendingProgress, setSendingProgress] = React.useState(10);\n\n  const [loading, setLoading] = React.useState(false)\n\n\n  const handleTabChanged = (event, value) => {\n    if (value && value.length) {\n      setSeletedTab(value);\n    }\n\n  };\n\n  const handleCloseDialog = () => {\n    setOpenDialog(false);\n    setTimeout(() => {\n      setSmartLinkId(null);\n      setSmartLinkDetails(null);\n      setLikelyBookings(null);\n      setSelectedBooking(null);\n      setMatched(false);\n      setMatching(false);\n      setSendingStatus(null);\n      setSending(false);\n      setSent(false);\n      clearInterval(interval);\n      setSendJustToPCR(false);\n    }, 100);\n  }\n\n  const handleCloseSeeDetaisDialog = () => {\n    setSeeDetailsDialogOpen(false);\n    setSelectedBooking(false)\n    // setTimeout(() => {\n    //   setSeeDetailsBooking(null);\n    // }, 500);\n  }\n\n  const seeDetailsClicked = (event, row) => {\n    setSeeDetailsBooking(row);\n    setSeeDetailsDialogOpen(true);\n  }\n\n  const smartMatchClicked = (event, id) => {\n    setSmartLinkId(id);\n    setOpenDialog(true);\n    findBestMatches(id);\n  }\n\n  useEffect(() => {\n    if (smartLinkId) {\n      findBestMatches(smartLinkId);\n      // console.log('refrshing....');\n\n    }\n\n\n  }, [state.bookingDialogDataChanged]);\n\n  const findBestMatches = (id) => {\n    BookService.getLinkDetails(id).then(res => {\n      setSmartLinkDetails(res.data);\n      console.log(res.data);\n    }).catch(err => {\n      console.log(err);\n    });\n\n    BookService.findBestMatches(id).then(res => {\n      setLikelyBookings(res.data.matchedBookings);\n    }).catch(err => {\n      console.log(err);\n      setLikelyBookings([]);\n    })\n  }\n\n  const archiveRecord = (event, id) => {\n    if (disableId) {\n      return;\n    }\n    setDisableId(id);\n\n    BookService.archiveBloodReport(id).then(\n      (res) => {\n        setDisableId(null);\n        setRefresh(!refresh);\n      }\n    ).catch((err) => {\n      setDisableId(null);\n    })\n  }\n\n  const unArchiveRecord = (event, id) => {\n    if (disableId) {\n      return;\n    }\n    setDisableId(id);\n\n    BookService.unArchiveBloodReport(id).then(\n      (res) => {\n        setDisableId(null);\n        setRefresh(!refresh);\n      }\n    ).catch((err) => {\n      setDisableId(null);\n    })\n  }\n\n\n  const lastPromise = useRef();\n\n  useEffect(() => {\n\n    var api = BookService.getArchivedBloodReports;\n    // if (selectedTab === 'archived') {\n    //   api = BookService.getArchivedMatchedBloodReports;\n    // }\n\n    setLoading(true)\n\n    setData({ bookings: [], cachedBookings: [], isFetching: true });\n    const currentPromise = api().then((res) => {\n\n      for (var i = 0; i < res.data.result.length; i++) {\n        res.data.result[i] = { ...res.data.result[i], id: i + 1 }\n      }\n\n      return res.data.result;\n    })\n\n    lastPromise.current = currentPromise;\n\n    currentPromise.then(\n      result => {\n        if (currentPromise === lastPromise.current) {\n          setLoading(false)\n          setData({ bookings: result, cachedBookings: [...result], isFetching: false });\n        }\n      },\n      e => {\n        if (currentPromise === lastPromise.current) {\n          setLoading(false)\n          console.log(e);\n          setData({ bookings: data.bookings, cachedBookings: data.cachedBookings, isFetching: false });\n        }\n      });\n  },\n    [refresh, selectedTab, state.bloodReportRefresh]);\n\n\n\n\n\n  useEffect(() => {\n\n    if (filter && filter.trim().length > 0) {\n      var filteredData = data.cachedBookings.filter((element) => {\n\n        return (element.name.toLowerCase().indexOf(filter.toLowerCase()) >= 0)\n          ;\n\n      });\n\n\n      setData({ bookings: filteredData, cachedBookings: data.cachedBookings, isFetching: false });\n    } else {\n      setData({ bookings: [...data.cachedBookings], cachedBookings: data.cachedBookings, isFetching: false });\n    }\n  },\n    [filter]);\n\n\n\n\n\n\n  const refreshClicked = (event) => {\n    setFilter('');\n    setRefresh(!refresh);\n\n  }\n\n  const filterChanged = (event) => {\n    setFilter(event.target.value);\n  }\n\n  const handleSelectionChanged = (newSelection) => {\n    if (newSelection.length > 0) {\n      setSelectedRow(newSelection.rows[0]);\n    }\n  }\n\n  const handleCheckChanged = (event, row) => {\n    if (event.target.checked) {\n      setSelectedBooking(row);\n    }\n    else {\n      setSelectedBooking(null);\n    }\n  }\n\n  const matchRecords = (event) => {\n\n    setMatching(true);\n\n    BookService.getBookingById(selectedBooking._id).then(res => {\n      setSelectedBooking(res.data);\n    });\n\n    BookService.matchRecords(selectedBooking._id, smartLinkId).then(res => {\n\n      if (res.data.status === 'OK') {\n        setMatching(false);\n        setMatched(true);\n      }\n\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  const getProgress = (status) => {\n    console.log(`status : ${status}`);\n\n    if (status === 'downloadFailed')\n      return 10;\n    else if (status === 'downloading')\n      return 30;\n    else if (status === 'downloadSuccess')\n      return 70;\n    else if (status === 'sent')\n      return 100;\n    else\n      return 0;\n\n  }\n\n  useEffect(() => {\n\n    setSendingProgress((prevProgress) => (prevProgress >= 100 ? 100 : getProgress(sendingStatus)));\n\n  }, [sendingStatus]);\n\n  const resendFilesClicked = (event) => {\n    setSending(true);\n    setSendingProgress(0);\n    setSendingStatus('downloadFailed');\n    setSendJustToPCR(true);\n\n\n    BookService.regenerateFiles(smartLinkId).then(res => {\n\n      interval = setInterval(() => {\n\n        // setProgress(sendingCounter);\n\n        // setProgress(getProgress(sendingStatus));\n\n        BookService.getLinkDetails(smartLinkId).then(res => {\n\n          setSendingStatus(res.data.status);\n\n          if (res.data.status === 'sent') {\n            setSending(false);\n            setSent(true);\n            setRefresh(!refresh);\n            clearInterval(interval);\n          }\n        });\n\n      }, 1000);\n\n    }).catch(err => {\n      console.log(err);\n      setSending(false);\n    });\n\n\n  }\n\n  const resendEmailsClicked = (event) => {\n    setSending(true);\n    setSendingProgress(0);\n    setSendingStatus('downloadFailed');\n\n\n    BookService.resendEmails(smartLinkId).then(res => {\n\n      interval = setInterval(() => {\n\n\n\n        // setProgress(sendingCounter);\n\n        // setProgress(getProgress(sendingStatus));\n\n        BookService.getLinkDetails(smartLinkId).then(res => {\n\n          setSendingStatus(res.data.status);\n\n          if (res.data.status === 'sent') {\n            setSending(false);\n            setSent(true);\n            setRefresh(!refresh);\n            clearInterval(interval);\n          }\n        });\n\n      }, 1000);\n\n    }).catch(err => {\n      console.log(err);\n      setSending(false);\n    });\n\n\n\n  }\n\n  const cancelResendEmailsClicked = (event) => {\n    setMatched(false);\n  }\n\n  const downloadLabReport = (id) => {\n    PDFService.downloadPdfLabReport(id).then((res) => {\n      const file = new Blob(\n        [res.data],\n        { type: 'application/pdf' });\n\n      const fileURL = URL.createObjectURL(file);\n      window.open(fileURL, \"_blank\");\n\n\n\n    }).catch((err) => {\n      console.log(err);\n    });\n  }\n\n\n  return (\n    <React.Fragment>\n\n      {loading && (\n        <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\n          <LinearProgress color=\"primary\" />\n        </div>\n      )}\n\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"space-between\"\n        alignItems=\"flex-end\"\n      >\n        <Grid item md={5}>\n          <div style={{ textAlign: \"left\", paddingLeft: \"10px\" }}>\n            <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"center\">\n              <Grid item>\n                <span style={{ paddingRight: \"15px\", color: \"#777\" }}> <ArchiveIcon style={{ fontSize: \"2.2rem\" }} /> </span>\n              </Grid>\n              <Grid item>\n                <span style={{ fontSize: '1.4rem', fontWeight: \"600\", color: \"#555\" }}> Archived Blood Results </span>\n              </Grid>\n              <Grid item>\n                <Tooltip title=\"Refresh\" placement=\"right\">\n                  <IconButton\n                    color=\"primary\"\n                    className={classes.refreshButton}\n                    onClick={refreshClicked}\n                  >\n                    <RefreshIcon />\n                  </IconButton>\n                </Tooltip>\n              </Grid>\n            </Grid>\n          </div>\n        </Grid>\n\n        {/* <Grid item md={3}>\n          <ToggleButtonGroup\n            value={selectedTab}\n            style={{ marginBottom: \"10px\" }}\n            exclusive\n            onChange={handleTabChanged}\n            aria-label=\"text alignment\"\n          >\n            <ToggleButton value=\"unresolved\" aria-label=\"left aligned\">\n              NEW\n            </ToggleButton>\n            <ToggleButton value=\"archived\" aria-label=\"centered\">\n              Archived\n            </ToggleButton>\n          </ToggleButtonGroup>\n        </Grid> */}\n\n        <Grid item md={3}>\n          <TextField\n            variant=\"standard\"\n            value={filter}\n            onChange={filterChanged}\n            margin=\"normal\"\n            size=\"small\"\n            id=\"filter\"\n            label=\"Filter\"\n            name=\"filter\"\n            autoComplete=\"off\"\n          />\n        </Grid>\n      </Grid>\n\n      <div style={{ height: 700, width: \"100%\" }}>\n        <DataGrid\n          rows={data.bookings}\n          columns={columns}\n          autoPageSize\n          onSelectionChange={handleSelectionChanged}\n        />\n      </div>\n\n      <Dialog\n        maxWidth=\"lg\"\n        open={openDialog}\n        onClose={handleCloseDialog}\n        PaperComponent={PaperComponent}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogTitle id=\"draggable-dialog-title\">\n          <Grid\n            container\n            spacing={2}\n            direction=\"row\"\n            justify=\"center\"\n            alignItems=\"center\"\n          >\n            <Grid item>\n              <WbIncandescentIcon\n                style={{ color: \"#2f942e\", fontSize: \"2rem\" }}\n              />\n            </Grid>\n\n            <Grid item>\n              <div\n                style={{\n                  color: \"#2f942e\",\n                  paddingBottom: \"12px\",\n                  fontWeight: \"800\",\n                }}\n              >\n                {\" \"}\n                SMART MATCH{\" \"}\n              </div>\n            </Grid>\n          </Grid>\n\n          <Divider />\n        </DialogTitle>\n        <DialogContent>\n          <div\n            style={{\n              height: \"600px\",\n              // width: \"1200px\",\n            }}\n          >\n            {(!likelyBookings || !smartLinkDetails) && (\n              <React.Fragment>\n                <Grid\n                  container\n                  direction=\"column\"\n                  justify=\"center\"\n                  alignItems=\"center\"\n                  spacing={2}\n                >\n                  <Grid item>\n                    <LoaderSpinner\n                      style={{ marginTop: \"170px\" }}\n                      type=\"Grid\"\n                      color=\"#2f942e\"\n                      height={100}\n                      width={100}\n                      timeout={0} //3 secs\n                    />\n                  </Grid>\n                  <Grid item>\n                    <div\n                      style={{\n                        color: \"#2f942e\",\n                        paddingBottom: \"12px\",\n                        fontWeight: \"800\",\n                      }}\n                    >\n                      {\" \"}\n                      SEARCHING ...{\" \"}\n                    </div>\n                  </Grid>\n                </Grid>\n              </React.Fragment>\n            )}\n\n            {likelyBookings && likelyBookings.length === 0 && (\n              <React.Fragment>\n                <Grid\n                  container\n                  direction=\"column\"\n                  justify=\"center\"\n                  alignItems=\"center\"\n                  spacing={2}\n                >\n                  <Grid item>\n                    <div\n                      style={{\n                        color: \"#2f942e\",\n                        paddingBottom: \"12px\",\n                        fontWeight: \"800\",\n                        marginTop: \"230px\",\n                      }}\n                    >\n                      {\" \"}\n                      SORRY, NO RECORDS FOUND !{\" \"}\n                    </div>\n                  </Grid>\n                </Grid>\n              </React.Fragment>\n            )}\n\n            {likelyBookings && smartLinkDetails && likelyBookings.length > 0 && (\n              <React.Fragment>\n                <Grid\n                  container\n                  direction=\"column\"\n                  justify=\"flex-start\"\n                  alignItems=\"stretch\"\n                  spacing={2}\n                >\n                  <Grid item>\n                    <div\n                      style={{\n                        fontSize: \"1.1rem\",\n                        fontWeight: \"600\",\n                        color: \"#2f942e\",\n                        marginBottom: \"15px\",\n                      }}\n                    >\n                      {\" \"}\n                      LAB RECORD :\n                    </div>\n\n                    <Grid\n                      style={{ paddingLeft: \"20px\", paddingBottom: \"20px\" }}\n                      container\n                      direction=\"row\"\n                      justify=\"flex-start\"\n                      alignItems=\"flex-start\"\n                      spacing={4}\n                    >\n                      <Grid item>\n                        <span className={classes.infoTitle}>Name:</span>\n                        <span className={classes.infoData}>\n                          {smartLinkDetails.name}\n                        </span>\n                      </Grid>\n\n                      <Grid item>\n                        <span className={classes.infoTitle}>D.O.B:</span>\n                        <span className={classes.infoData}>\n                          {FormatDateFromString(smartLinkDetails.birthDate)}\n                        </span>\n                      </Grid>\n\n                      <Grid item>\n                        <span className={classes.infoTitle}>Test Date:</span>\n                        <span className={classes.infoData}>\n                          {FormatDateFromString(smartLinkDetails.testDate)}\n                        </span>\n                      </Grid>\n                    </Grid>\n\n                    <Divider />\n                  </Grid>\n\n                  <Grid item>\n                    <div\n                      style={{\n                        fontSize: \"1.1rem\",\n                        fontWeight: \"600\",\n                        color: \"#2f942e\",\n                        marginBottom: \"15px\",\n                      }}\n                    >\n                      {\" \"}\n                      BEST MATCHES :\n                    </div>\n                  </Grid>\n\n                  <Grid item>\n                    <Table size=\"small\">\n                      <TableHead>\n                        <TableRow>\n                          <TableCell>Select</TableCell>\n                          <TableCell>Match</TableCell>\n                          <TableCell>Forename</TableCell>\n                          <TableCell>Surname</TableCell>\n                          <TableCell>D.O.B</TableCell>\n                          <TableCell>Email</TableCell>\n                          <TableCell>Test Date</TableCell>\n                          <TableCell></TableCell>\n                        </TableRow>\n                      </TableHead>\n                      <TableBody>\n                        {likelyBookings.map((row) => (\n                          <TableRow key={row._id}>\n                            <TableCell>\n                              <Tooltip\n                                title={\n                                  row.birthDate !== smartLinkDetails.birthDate\n                                    ? '\"D.O.B\" DOES NOT MATCH THE LAB REPORT ! PLEASE MAKE SURE \"D.O.B\" OF THE SELECTED BOOKING IS CORRECT !'\n                                    : \"\"\n                                }\n                              >\n                                <FormControlLabel\n                                  control={\n                                    <Checkbox\n                                      checked={\n                                        selectedBooking &&\n                                        selectedBooking._id === row._id\n                                      }\n                                      disabled={\n                                        matched || matching\n                                      }\n                                      onChange={(event) =>\n                                        handleCheckChanged(event, row)\n                                      }\n                                      name=\"checkedA\"\n                                    />\n                                  }\n                                  label=\"\"\n                                />\n                              </Tooltip>\n                            </TableCell>\n                            <TableCell\n                              style={{\n                                fontWeight: \"800\",\n                                color: \"#2f942e\",\n                                fontSize: \"1.1rem\",\n                              }}\n                            >{`${row.likelihood} %`}</TableCell>\n                            <TableCell\n                              style={\n                                row.forenameCapital ===\n                                  smartLinkDetails.forename\n                                  ? { fontWeight: \"800\", color: \"#2f942e\" }\n                                  : { fontWeight: \"800\", color: \"#ff871f\" }\n                              }\n                            >\n                              {row.forenameCapital}\n                            </TableCell>\n                            <TableCell\n                              style={\n                                row.surnameCapital === smartLinkDetails.surname\n                                  ? { fontWeight: \"800\", color: \"#2f942e\" }\n                                  : { fontWeight: \"800\", color: \"#ff871f\" }\n                              }\n                            >\n                              {row.surnameCapital}\n                            </TableCell>\n                            <TableCell\n                              style={\n                                row.birthDate === smartLinkDetails.birthDate\n                                  ? { fontWeight: \"800\", color: \"#2f942e\" }\n                                  : { fontWeight: \"800\", color: \"red\" }\n                              }\n                            >\n                              <Grid\n                                container\n                                direction=\"column\"\n                                justify=\"center\"\n                                alignItems=\"center\"\n                                spacing={1}\n                              >\n                                <Grid item>\n                                  {row.birthDate !==\n                                    smartLinkDetails.birthDate && (\n                                      <span style={{ textAlign: \"center\" }}>\n                                        <ReportProblemIcon />\n                                      </span>\n                                    )}\n                                </Grid>\n                                {FormatDateFromString(row.birthDate)}\n                                <Grid item></Grid>\n                              </Grid>\n                            </TableCell>\n                            <TableCell>{row.email?.toUpperCase()}</TableCell>\n                            <TableCell\n                              style={\n                                dateformat(\n                                  row.samplingTimeStamp,\n                                  \"yyyy-mm-dd\"\n                                ) === smartLinkDetails.testDate\n                                  ? { fontWeight: \"800\", color: \"#2f942e\" }\n                                  : { fontWeight: \"800\", color: \"red\" }\n                              }\n                            >\n                              {FormatDateFromString(dateformat(row.samplingTimeStamp, \"yyyy-mm-dd\"))}\n                            </TableCell>\n                            <TableCell>\n                              <Button\n                                color=\"primary\"\n                                disabled={sending}\n                                onClick={(event) =>\n                                  seeDetailsClicked(event, row)\n                                }\n                              >\n                                See Details\n                              </Button>\n                            </TableCell>\n                          </TableRow>\n                        ))}\n                      </TableBody>\n                    </Table>\n                  </Grid>\n                </Grid>\n\n                <Grid\n                  container\n                  direction=\"column\"\n                  justify=\"center\"\n                  spacing={1}\n                  alignItems=\"center\"\n                >\n\n                  {!matched && (\n                    <React.Fragment>\n                      <Grid item>\n                        <Button\n                          disabled={!selectedBooking || matching}\n                          className={classes.matchButton}\n                          variant=\"contained\"\n                          color=\"primary\"\n                          onClick={matchRecords}\n                        >\n                          GO Match THE Records\n                          </Button>\n                      </Grid>\n\n                      {!selectedBooking && (\n                        <Grid item>\n                          <Alert severity=\"warning\">No Record is Selected ! — Please select a record you think it is a match.</Alert>\n                        </Grid>\n                      )}\n\n                    </React.Fragment>\n                  )}\n\n                  {matched && !sent && !sending && (\n                    <React.Fragment>\n\n                      <Grid item>\n\n                        <Alert style={{ marginTop: \"10px\", paddingLeft: \"50px\", paddingRight: \"50px\" }} severity=\"success\"> Success — The Records are Matched Now !</Alert>\n\n                      </Grid>\n\n                      <Grid item>\n\n                        <div style={{ paddingTop: \"5px\", fontSize: \"1rem\", fontWeight: \"500\", color: \"#555\" }}>\n                          Do you want to Resend the LAB Report {selectedBooking.certificate ? ' and Certificate' : ''}  Now?\n                      </div>\n\n                      </Grid>\n\n                      <Grid item>\n                        <Button\n                          disabled={sending || sent}\n                          className={classes.resendButton}\n                          variant=\"contained\"\n                          color=\"primary\"\n                          onClick={resendEmailsClicked}\n                        >\n                          YES ! RESEND THE EMAILS\n                          </Button>\n                      </Grid>\n\n                      <Grid item>\n                        <Button\n                          disabled={sending || sent}\n                          className={classes.cancelButton}\n                          variant=\"contained\"\n                          color=\"default\"\n                          onClick={cancelResendEmailsClicked}\n                        >\n                          NO ! NOT NOW\n                          </Button>\n                      </Grid>\n\n\n                      <Grid item>\n                        <Button\n                          disabled={sending || sent}\n                          className={classes.resendFilesButton}\n                          variant=\"contained\"\n                          color=\"primary\"\n                          onClick={resendFilesClicked}\n                        >\n                          Just Generate The Files and send to pcrresults@medicalexpressclinic.co.uk\n                          </Button>\n                      </Grid>\n\n                      <Grid item>\n\n                        <Alert style={{ marginTop: \"10px\", paddingLeft: \"50px\", paddingRight: \"50px\" }} severity=\"warning\">\n                          Caution! — The LAB Report and Certificate will be Sent According to the Record you have Selected !\n                          </Alert>\n\n                      </Grid>\n\n\n\n                    </React.Fragment>\n                  )}\n\n                  {matched && (sending || sent) && (\n                    <Grid item>\n\n                      <div style={{ paddingTop: \"50px\", color: \"#2f942e\", fontWeight: \"600\", fontSize: \"1rem\" }}>\n                        {sending && !sent && (\n                          'Sending ...'\n                        )}\n\n                        {sent && !sendJustToPCR && (\n                          <Alert style={{ marginTop: \"10px\", paddingLeft: \"50px\", paddingRight: \"50px\" }} severity=\"success\">\n                            Success! — The LAB Report {selectedBooking.certificate ? ' and Certificate ' : ' '}  Successfully Sent.\n                          </Alert>\n                        )}\n\n                        {sent && sendJustToPCR && (\n                          <Alert style={{ marginTop: \"10px\", paddingLeft: \"50px\", paddingRight: \"50px\" }} severity=\"success\">\n                            Success! — The LAB Report {selectedBooking.certificate ? ' and Certificate ' : ' '}  Successfully Sent Just to pcrresults@medicalexpressclinic.co.uk .\n                          </Alert>\n                        )}\n\n\n\n\n                      </div>\n\n                    </Grid>\n\n                  )}\n\n                </Grid>\n              </React.Fragment>\n            )}\n\n\n            {matched && (sending || sent) && (\n              <React.Fragment>\n\n                <div style={{ marginTop: \"10px\", width: \"50%\", marginLeft: \"27%\" }}>\n\n                  <LinearProgressWithLabel variant=\"determinate\" color=\"primary\" value={sendingProgress} />\n\n                </div>\n\n                <div style={{ paddingTop: \"30px\", color: \"#2f942e\", fontWeight: \"600\", fontSize: \"1rem\", marginLeft: \"45%\" }}>\n                  {sending && !sent && (\n                    'PLEASE WAIT ...'\n                  )}\n\n                </div>\n\n              </React.Fragment>\n            )}\n\n\n          </div>\n\n        </DialogContent>\n      </Dialog>\n\n      <BloodReportDialog\n            booking={selectedBooking}\n            open={seeDetailsDialogOpen}\n            onClose={handleCloseSeeDetaisDialog}\n          />\n\n    </React.Fragment>\n  );\n}","import React, { useEffect, useRef, useState } from 'react';\nimport { DataGrid, ROW_CLICK } from '@material-ui/data-grid';\nimport BookService from './services/BookService';\nimport Typography from '@material-ui/core/Typography';\nimport { Button, Checkbox, Divider, FormControlLabel, Grid, Link, makeStyles, TextField, Tooltip } from '@material-ui/core';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport { IconButton } from '@material-ui/core';\nimport LoaderSpinner from 'react-loader-spinner';\nimport GlobalState from '../GlobalState';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\nimport WbIncandescentIcon from '@material-ui/icons/WbIncandescent';\nimport SearchIcon from '@material-ui/icons/Search';\n\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Draggable from 'react-draggable';\nimport Paper from '@material-ui/core/Paper';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport dateformat from 'dateformat';\nimport ReportProblemIcon from '@material-ui/icons/ReportProblem';\nimport BookingDialog from './BookingDialog';\nimport BloodReportDialog from './BloodReportDialog';\n\nimport Alert from '@material-ui/lab/Alert';\n\nimport PropTypes from 'prop-types';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Box from '@material-ui/core/Box';\n\nimport WarningIcon from '@material-ui/icons/Warning';\n\nimport { FormatDateFromString, RevertFormatDateFromString } from './DateFormatter';\nimport PDFService from './services/PDFService';\n\nimport DoneOutlineIcon from '@material-ui/icons/DoneOutline';\n\nimport SendRoundedIcon from '@material-ui/icons/SendRounded';\n\nimport ArchiveIcon from '@material-ui/icons/Archive';\n\n\nvar interval;\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    marginTop: theme.spacing(0),\n    marginBottom: theme.spacing(1),\n\n  },\n\n  refreshButton: {\n    marginLeft: theme.spacing(2),\n  },\n\n  checkIcon: {\n    color: \"green\"\n  },\n\n  closeIcon: {\n    color: \"red\"\n  },\n\n  RefLink: {\n    cursor: \"pointer\"\n  },\n\n  BookedLabel: {\n    backgroundColor: \"#606060\",\n    color: \"#fff\",\n    paddingRight: \"10px\",\n    paddingLeft: \"10px\"\n  },\n\n  PatientAttendedLabel: {\n    backgroundColor: \"#0066aa\",\n    color: \"#fff\",\n    paddingRight: \"15px\",\n    paddingLeft: \"10px\"\n  },\n\n  SampleTakenLabel: {\n    backgroundColor: \"#0066cc\",\n    color: \"#fff\",\n    paddingRight: \"40px\",\n    paddingLeft: \"10px\"\n  },\n\n  ReportSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"90px\",\n    paddingLeft: \"10px\"\n  },\n\n  ReportCertSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"68px\",\n    paddingLeft: \"10px\"\n  },\n\n  archiveButton: {\n\n  },\n\n  smartMatchButton: {\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\"\n    },\n    textDecoration: \"none !important\",\n    marginRight: \"10px\"\n    // padding: \"10px\"  \n  },\n\n  infoTitle: {\n    fontWeight: \"400\"\n  },\n\n  infoData: {\n    paddingLeft: \"10px\",\n    fontWeight: \"800\"\n  },\n\n  matchButton:\n  {\n    marginTop: \"30px\",\n    marginBottom: \"20px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\"\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\"\n  },\n\n  resendButton:\n  {\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\"\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\"\n  },\n\n  resendFilesButton: {\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n    backgroundColor: \"#3792ad\",\n    \"&:hover\": {\n      background: \"#2f798f\",\n      color: \"#fff\"\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\"\n  },\n\n  cancelButton:\n  {\n    marginBottom: \"10px\",\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"90px\",\n    paddingRight: \"90px\"\n  },\n\n  downloadPDFButton:\n  {\n    marginRight: \"50px\"\n  },\n\n  clinicTitle: {\n    fontWeight: \"600\",\n    textAlign: \"center\",\n    color: theme.palette.primary.main,\n    padding: \"2px 10px\",\n  },\n\n  PCRLabel: {\n    color: \"#4faef7\",\n    fontWeight: \"600\",\n    fontSize: \"0.95rem\",\n  },\n\n  GynaeLabel: {\n    color: \"#e83caf\",\n    fontWeight: \"600\",\n    fontSize: \"0.95rem\",\n  },\n\n  GPLabel: {\n    color: \"#ff4f14\",\n    fontWeight: \"600\",\n    fontSize: \"0.95rem\",\n  },\n\n  STDLabel: {\n    color: \"#d6733a\",\n    fontWeight: \"600\",\n    fontSize: \"0.95rem\",\n  },\n\n  BloodLabel: {\n    color: \"#dc2626\",\n    fontWeight: \"600\",\n    fontSize: \"0.95rem\",\n  },\n\n\n}));\n\nconst BorderLinearProgress = withStyles((theme) => ({\n  root: {\n    height: 10,\n    borderRadius: 5,\n  },\n  colorPrimary: {\n    backgroundColor: \"#cedbce\" //theme.palette.grey[theme.palette.type === 'light' ? 200 : 700],\n  },\n  bar: {\n    borderRadius: 5,\n    backgroundColor: '#2f942e',\n  },\n}))(LinearProgress);\nfunction LinearProgressWithLabel(props) {\n  return (\n    <Box display=\"flex\" alignItems=\"center\">\n      <Box width=\"100%\" mr={1}>\n        <BorderLinearProgress variant=\"determinate\" {...props} />\n      </Box>\n      <Box minWidth={35}>\n        <Typography style={{ fontWeight: \"800\", color: \"#5e855e\" }} variant=\"body2\" color=\"textSecondary\">{`${Math.round(\n          props.value,\n        )}%`}</Typography>\n      </Box>\n    </Box>\n  );\n}\n\nLinearProgressWithLabel.propTypes = {\n  /**\n   * The value of the progress indicator for the determinate and buffer variants.\n   * Value between 0 and 100.\n   */\n  value: PropTypes.number.isRequired,\n};\n\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'}>\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nexport default function SentRecords() {\n\n  const classes = useStyles();\n\n  const getClassforClinic = (clinic) => {\n    switch (clinic) {\n      case \"pcr\":\n        return classes.PCRLabel;\n      case \"gp\":\n        return classes.GPLabel;\n      case \"gynae\":\n        return classes.GynaeLabel;\n      case \"std\":\n        return classes.STDLabel;\n      case \"blood\":\n        return classes.BloodLabel;\n\n\n      default:\n        return classes.clinicTitle;\n    }\n  };\n\n  const [selectedBooking, setSelectedBooking] = React.useState(null);\n  const [seeDetailsDialogOpen, setSeeDetailsDialogOpen] = React.useState(false);\n\n\n  const openDetailsDialog = (id) =>\n  {\n    const booking = data.bookings.find(element => element._id === id);\n    setSelectedBooking(booking);\n    setSeeDetailsDialogOpen(true);\n  }\n\n  \n\n\n  const columns = [\n    {\n      field: 'id', headerName: ' ', width: 100, renderCell: (params) => {\n        return (\n\n          <React.Fragment>\n\n            {params.getValue(\"emailSent\") && (\n              <Tooltip style={{ fontSize: \"20px\" }} title=\"Email has been sent\">\n                <SendRoundedIcon style={{ fontSize: \"20px\", color: \"#009634\" }} />\n              </Tooltip>\n            )\n            }\n            { !params.getValue(\"emailSent\") && (\n              <SendRoundedIcon style={{ fontSize: \"20px\", color: \"#fafafa\" }} />\n            )\n            }\n\n\n\n            <Button\n              color=\"primary\"\n              onClick={event => openDetailsDialog(params.getValue(\"_id\"))}\n            >\n\n              <SearchIcon />\n\n            </Button>\n\n          </React.Fragment>\n\n\n\n        );\n\n      }\n    },\n\n    {\n      field: \"clinic\",\n      headerName: \"Clinic\",\n      align: \"center\",\n      width: 90,\n      renderCell: (params) => {\n        return (\n          <span className={getClassforClinic(params.value)}>\n            {params.value ? params.value.toUpperCase() : \"N/A\"}\n          </span>\n        );\n      },\n    },\n\n\n    {\n      field: 'testDate', headerName: 'Test Date', width: 120, valueFormatter: (params) => {\n        return FormatDateFromString(params.value);\n      }\n    },\n    { field: 'name', headerName: 'Name', width: 150 },\n    {\n      field: 'birthDate', headerName: 'D.O.B', width: 120, valueFormatter: (params) => {\n        return FormatDateFromString(params.value);\n      }\n    },\n    { field: 'email', headerName: 'Email', width: 150 },\n\n    {\n      field: '_id', headerName: 'Action', width: 500, renderCell: (params) => {\n        if (selectedTab === 'unresolved') {\n          return (\n            <React.Fragment>\n\n              {/* <Button\n                    disabled = {params.value === disableId}\n                    type=\"button\"\n                    variant=\"contained\"\n                    color=\"primary\"\n                    startIcon={<WbIncandescentIcon />}\n                    onClick = { event => smartMatchClicked(event,params.value)}\n                    className={classes.smartMatchButton}\n                    >\n                    smart match\n              </Button> */}\n\n\n\n              <Button\n                disabled={params.value === disableId}\n                type=\"button\"\n                color=\"primary\"\n                onClick={event => downloadLabReport(params.value)}\n                className={classes.downloadPDFButton}\n              >\n                view pdf\n              </Button>\n\n              {/* <Button\n                disabled={params.value === disableId}\n                type=\"button\"\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={event => unArchiveRecord(event, params.value)}\n                className={classes.archiveButton}\n              >\n                Restore\n              </Button> */}\n\n\n\n            </React.Fragment>\n\n          );\n        } else {\n          return (\n\n            <React.Fragment>\n\n              {/* <Button\n                        disabled = {params.value === disableId}\n                        type=\"button\"\n                        variant=\"contained\"\n                        color=\"primary\"\n                        startIcon={<WbIncandescentIcon />}\n                        onClick = { event => smartMatchClicked(event,params.value)}\n                        className={classes.smartMatchButton}\n                        >\n                        smart match\n                  </Button> */}\n\n              <Button\n                disabled={params.value === disableId}\n                type=\"button\"\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={event => unArchiveRecord(event, params.value)}\n                className={classes.archiveButton}\n              >\n                Restore\n                  </Button>\n\n              <Button\n                disabled={params.value === disableId}\n                type=\"button\"\n                color=\"primary\"\n                onClick={event => downloadLabReport(params.value)}\n                className={classes.downloadPDFButton}\n              >\n                view pdf\n                  </Button>\n\n            </React.Fragment>\n          );\n        }\n\n      }\n    },\n\n  ];\n\n  const [state, setState] = React.useContext(GlobalState);\n\n  const [data, setData] = React.useState({ bookings: [], cachedBookings: [], isFetching: false });\n\n  const [selectedRow, setSelectedRow] = React.useState(null);\n\n  const [filter, setFilter] = React.useState('');\n\n  const [refresh, setRefresh] = React.useState(false);\n\n  const [disableId, setDisableId] = React.useState(null);\n\n  const [selectedTab, setSeletedTab] = React.useState('unresolved');\n\n  const [openDialog, setOpenDialog] = React.useState(false);\n\n  const [smartLinkId, setSmartLinkId] = React.useState(null);\n\n  const [smartLinkDetails, setSmartLinkDetails] = React.useState(null);\n\n  const [likelyBookings, setLikelyBookings] = React.useState(null);\n\n  const [seeDetailsBooking, setSeeDetailsBooking] = React.useState(null);\n\n  const [matching, setMatching] = React.useState(false);\n\n  const [matched, setMatched] = React.useState(false);\n\n  const [sending, setSending] = React.useState(false);\n  const [sent, setSent] = React.useState(false);\n\n  const [sendJustToPCR, setSendJustToPCR] = React.useState(false);\n\n  const [sendingStatus, setSendingStatus] = React.useState('');\n\n  const [sendingProgress, setSendingProgress] = React.useState(10);\n\n  const [loading, setLoading] = React.useState(false)\n\n\n  const handleTabChanged = (event, value) => {\n    if (value && value.length) {\n      setSeletedTab(value);\n    }\n\n  };\n\n  const handleCloseDialog = () => {\n    setOpenDialog(false);\n    setTimeout(() => {\n      setSmartLinkId(null);\n      setSmartLinkDetails(null);\n      setLikelyBookings(null);\n      setSelectedBooking(null);\n      setMatched(false);\n      setMatching(false);\n      setSendingStatus(null);\n      setSending(false);\n      setSent(false);\n      clearInterval(interval);\n      setSendJustToPCR(false);\n    }, 100);\n  }\n\n  const handleCloseSeeDetaisDialog = () => {\n    setSeeDetailsDialogOpen(false);\n    setSelectedBooking(false)\n    // setTimeout(() => {\n    //   setSeeDetailsBooking(null);\n    // }, 500);\n  }\n\n  const seeDetailsClicked = (event, row) => {\n    setSeeDetailsBooking(row);\n    setSeeDetailsDialogOpen(true);\n  }\n\n  const smartMatchClicked = (event, id) => {\n    setSmartLinkId(id);\n    setOpenDialog(true);\n    findBestMatches(id);\n  }\n\n  useEffect(() => {\n    if (smartLinkId) {\n      findBestMatches(smartLinkId);\n      // console.log('refrshing....');\n\n    }\n\n\n  }, [state.bookingDialogDataChanged]);\n\n  const findBestMatches = (id) => {\n    BookService.getLinkDetails(id).then(res => {\n      setSmartLinkDetails(res.data);\n      console.log(res.data);\n    }).catch(err => {\n      console.log(err);\n    });\n\n    BookService.findBestMatches(id).then(res => {\n      setLikelyBookings(res.data.matchedBookings);\n    }).catch(err => {\n      console.log(err);\n      setLikelyBookings([]);\n    })\n  }\n\n  const archiveRecord = (event, id) => {\n    if (disableId) {\n      return;\n    }\n    setDisableId(id);\n\n    BookService.archiveBloodReport(id).then(\n      (res) => {\n        setDisableId(null);\n        setRefresh(!refresh);\n      }\n    ).catch((err) => {\n      setDisableId(null);\n    })\n  }\n\n  const unArchiveRecord = (event, id) => {\n    if (disableId) {\n      return;\n    }\n    setDisableId(id);\n\n    BookService.unArchiveBloodReport(id).then(\n      (res) => {\n        setDisableId(null);\n        setRefresh(!refresh);\n      }\n    ).catch((err) => {\n      setDisableId(null);\n    })\n  }\n\n\n  const lastPromise = useRef();\n\n  useEffect(() => {\n\n    var api = BookService.getSentBloodReports;\n    // if (selectedTab === 'archived') {\n    //   api = BookService.getArchivedMatchedBloodReports;\n    // }\n\n    setLoading(true)\n\n    setData({ bookings: [], cachedBookings: [], isFetching: true });\n    const currentPromise = api().then((res) => {\n\n      for (var i = 0; i < res.data.result.length; i++) {\n        res.data.result[i] = { ...res.data.result[i], id: i + 1 }\n      }\n\n      return res.data.result;\n    })\n\n    lastPromise.current = currentPromise;\n\n    currentPromise.then(\n      result => {\n        if (currentPromise === lastPromise.current) {\n          setLoading(false)\n          setData({ bookings: result, cachedBookings: [...result], isFetching: false });\n        }\n      },\n      e => {\n        if (currentPromise === lastPromise.current) {\n          setLoading(false)\n          console.log(e);\n          setData({ bookings: data.bookings, cachedBookings: data.cachedBookings, isFetching: false });\n        }\n      });\n  },\n    [refresh, selectedTab, state.bloodReportRefresh]);\n\n\n\n\n\n  useEffect(() => {\n\n    if (filter && filter.trim().length > 0) {\n      var filteredData = data.cachedBookings.filter((element) => {\n\n        return (element.name.toLowerCase().indexOf(filter.toLowerCase()) >= 0)\n          ;\n\n      });\n\n\n      setData({ bookings: filteredData, cachedBookings: data.cachedBookings, isFetching: false });\n    } else {\n      setData({ bookings: [...data.cachedBookings], cachedBookings: data.cachedBookings, isFetching: false });\n    }\n  },\n    [filter]);\n\n\n\n\n\n\n  const refreshClicked = (event) => {\n    setFilter('');\n    setRefresh(!refresh);\n\n  }\n\n  const filterChanged = (event) => {\n    setFilter(event.target.value);\n  }\n\n  const handleSelectionChanged = (newSelection) => {\n    if (newSelection.length > 0) {\n      setSelectedRow(newSelection.rows[0]);\n    }\n  }\n\n  const handleCheckChanged = (event, row) => {\n    if (event.target.checked) {\n      setSelectedBooking(row);\n    }\n    else {\n      setSelectedBooking(null);\n    }\n  }\n\n  const matchRecords = (event) => {\n\n    setMatching(true);\n\n    BookService.getBookingById(selectedBooking._id).then(res => {\n      setSelectedBooking(res.data);\n    });\n\n    BookService.matchRecords(selectedBooking._id, smartLinkId).then(res => {\n\n      if (res.data.status === 'OK') {\n        setMatching(false);\n        setMatched(true);\n      }\n\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  const getProgress = (status) => {\n    console.log(`status : ${status}`);\n\n    if (status === 'downloadFailed')\n      return 10;\n    else if (status === 'downloading')\n      return 30;\n    else if (status === 'downloadSuccess')\n      return 70;\n    else if (status === 'sent')\n      return 100;\n    else\n      return 0;\n\n  }\n\n  useEffect(() => {\n\n    setSendingProgress((prevProgress) => (prevProgress >= 100 ? 100 : getProgress(sendingStatus)));\n\n  }, [sendingStatus]);\n\n  const resendFilesClicked = (event) => {\n    setSending(true);\n    setSendingProgress(0);\n    setSendingStatus('downloadFailed');\n    setSendJustToPCR(true);\n\n\n    BookService.regenerateFiles(smartLinkId).then(res => {\n\n      interval = setInterval(() => {\n\n        // setProgress(sendingCounter);\n\n        // setProgress(getProgress(sendingStatus));\n\n        BookService.getLinkDetails(smartLinkId).then(res => {\n\n          setSendingStatus(res.data.status);\n\n          if (res.data.status === 'sent') {\n            setSending(false);\n            setSent(true);\n            setRefresh(!refresh);\n            clearInterval(interval);\n          }\n        });\n\n      }, 1000);\n\n    }).catch(err => {\n      console.log(err);\n      setSending(false);\n    });\n\n\n  }\n\n  const resendEmailsClicked = (event) => {\n    setSending(true);\n    setSendingProgress(0);\n    setSendingStatus('downloadFailed');\n\n\n    BookService.resendEmails(smartLinkId).then(res => {\n\n      interval = setInterval(() => {\n\n\n\n        // setProgress(sendingCounter);\n\n        // setProgress(getProgress(sendingStatus));\n\n        BookService.getLinkDetails(smartLinkId).then(res => {\n\n          setSendingStatus(res.data.status);\n\n          if (res.data.status === 'sent') {\n            setSending(false);\n            setSent(true);\n            setRefresh(!refresh);\n            clearInterval(interval);\n          }\n        });\n\n      }, 1000);\n\n    }).catch(err => {\n      console.log(err);\n      setSending(false);\n    });\n\n\n\n  }\n\n  const cancelResendEmailsClicked = (event) => {\n    setMatched(false);\n  }\n\n  const downloadLabReport = (id) => {\n    PDFService.downloadPdfLabReport(id).then((res) => {\n      const file = new Blob(\n        [res.data],\n        { type: 'application/pdf' });\n\n      const fileURL = URL.createObjectURL(file);\n      window.open(fileURL, \"_blank\");\n\n\n\n    }).catch((err) => {\n      console.log(err);\n    });\n  }\n\n\n  return (\n    <React.Fragment>\n\n      {loading && (\n        <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\n          <LinearProgress color=\"primary\" />\n        </div>\n      )}\n\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"space-between\"\n        alignItems=\"flex-end\"\n      >\n        <Grid item md={5}>\n          <div style={{ textAlign: \"left\", paddingLeft: \"10px\" }}>\n            <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"center\">\n              <Grid item>\n                <span style={{ paddingRight: \"15px\", color: \"#008c00\" }}> <SendRoundedIcon style={{ fontSize: \"1.8rem\" }} /> </span>\n              </Grid>\n              <Grid item>\n                <span style={{ fontSize: '1.4rem', fontWeight: \"600\", color: \"#555\" }}> Sent Blood Results </span>\n              </Grid>\n              <Grid item>\n                <Tooltip title=\"Refresh\" placement=\"right\">\n                  <IconButton\n                    color=\"primary\"\n                    className={classes.refreshButton}\n                    onClick={refreshClicked}\n                  >\n                    <RefreshIcon />\n                  </IconButton>\n                </Tooltip>\n              </Grid>\n            </Grid>\n          </div>\n        </Grid>\n\n        {/* <Grid item md={3}>\n          <ToggleButtonGroup\n            value={selectedTab}\n            style={{ marginBottom: \"10px\" }}\n            exclusive\n            onChange={handleTabChanged}\n            aria-label=\"text alignment\"\n          >\n            <ToggleButton value=\"unresolved\" aria-label=\"left aligned\">\n              NEW\n            </ToggleButton>\n            <ToggleButton value=\"archived\" aria-label=\"centered\">\n              Archived\n            </ToggleButton>\n          </ToggleButtonGroup>\n        </Grid> */}\n\n        <Grid item md={3}>\n          <TextField\n            variant=\"standard\"\n            value={filter}\n            onChange={filterChanged}\n            margin=\"normal\"\n            size=\"small\"\n            id=\"filter\"\n            label=\"Filter\"\n            name=\"filter\"\n            autoComplete=\"off\"\n          />\n        </Grid>\n      </Grid>\n\n      <div style={{ height: 700, width: \"100%\" }}>\n        <DataGrid\n          rows={data.bookings}\n          columns={columns}\n          autoPageSize\n          onSelectionChange={handleSelectionChanged}\n        />\n      </div>\n\n      <Dialog\n        maxWidth=\"lg\"\n        open={openDialog}\n        onClose={handleCloseDialog}\n        PaperComponent={PaperComponent}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogTitle id=\"draggable-dialog-title\">\n          <Grid\n            container\n            spacing={2}\n            direction=\"row\"\n            justify=\"center\"\n            alignItems=\"center\"\n          >\n            <Grid item>\n              <WbIncandescentIcon\n                style={{ color: \"#2f942e\", fontSize: \"2rem\" }}\n              />\n            </Grid>\n\n            <Grid item>\n              <div\n                style={{\n                  color: \"#2f942e\",\n                  paddingBottom: \"12px\",\n                  fontWeight: \"800\",\n                }}\n              >\n                {\" \"}\n                SMART MATCH{\" \"}\n              </div>\n            </Grid>\n          </Grid>\n\n          <Divider />\n        </DialogTitle>\n        <DialogContent>\n          <div\n            style={{\n              height: \"600px\",\n              // width: \"1200px\",\n            }}\n          >\n            {(!likelyBookings || !smartLinkDetails) && (\n              <React.Fragment>\n                <Grid\n                  container\n                  direction=\"column\"\n                  justify=\"center\"\n                  alignItems=\"center\"\n                  spacing={2}\n                >\n                  <Grid item>\n                    <LoaderSpinner\n                      style={{ marginTop: \"170px\" }}\n                      type=\"Grid\"\n                      color=\"#2f942e\"\n                      height={100}\n                      width={100}\n                      timeout={0} //3 secs\n                    />\n                  </Grid>\n                  <Grid item>\n                    <div\n                      style={{\n                        color: \"#2f942e\",\n                        paddingBottom: \"12px\",\n                        fontWeight: \"800\",\n                      }}\n                    >\n                      {\" \"}\n                      SEARCHING ...{\" \"}\n                    </div>\n                  </Grid>\n                </Grid>\n              </React.Fragment>\n            )}\n\n            {likelyBookings && likelyBookings.length === 0 && (\n              <React.Fragment>\n                <Grid\n                  container\n                  direction=\"column\"\n                  justify=\"center\"\n                  alignItems=\"center\"\n                  spacing={2}\n                >\n                  <Grid item>\n                    <div\n                      style={{\n                        color: \"#2f942e\",\n                        paddingBottom: \"12px\",\n                        fontWeight: \"800\",\n                        marginTop: \"230px\",\n                      }}\n                    >\n                      {\" \"}\n                      SORRY, NO RECORDS FOUND !{\" \"}\n                    </div>\n                  </Grid>\n                </Grid>\n              </React.Fragment>\n            )}\n\n            {likelyBookings && smartLinkDetails && likelyBookings.length > 0 && (\n              <React.Fragment>\n                <Grid\n                  container\n                  direction=\"column\"\n                  justify=\"flex-start\"\n                  alignItems=\"stretch\"\n                  spacing={2}\n                >\n                  <Grid item>\n                    <div\n                      style={{\n                        fontSize: \"1.1rem\",\n                        fontWeight: \"600\",\n                        color: \"#2f942e\",\n                        marginBottom: \"15px\",\n                      }}\n                    >\n                      {\" \"}\n                      LAB RECORD :\n                    </div>\n\n                    <Grid\n                      style={{ paddingLeft: \"20px\", paddingBottom: \"20px\" }}\n                      container\n                      direction=\"row\"\n                      justify=\"flex-start\"\n                      alignItems=\"flex-start\"\n                      spacing={4}\n                    >\n                      <Grid item>\n                        <span className={classes.infoTitle}>Name:</span>\n                        <span className={classes.infoData}>\n                          {smartLinkDetails.name}\n                        </span>\n                      </Grid>\n\n                      <Grid item>\n                        <span className={classes.infoTitle}>D.O.B:</span>\n                        <span className={classes.infoData}>\n                          {FormatDateFromString(smartLinkDetails.birthDate)}\n                        </span>\n                      </Grid>\n\n                      <Grid item>\n                        <span className={classes.infoTitle}>Test Date:</span>\n                        <span className={classes.infoData}>\n                          {FormatDateFromString(smartLinkDetails.testDate)}\n                        </span>\n                      </Grid>\n                    </Grid>\n\n                    <Divider />\n                  </Grid>\n\n                  <Grid item>\n                    <div\n                      style={{\n                        fontSize: \"1.1rem\",\n                        fontWeight: \"600\",\n                        color: \"#2f942e\",\n                        marginBottom: \"15px\",\n                      }}\n                    >\n                      {\" \"}\n                      BEST MATCHES :\n                    </div>\n                  </Grid>\n\n                  <Grid item>\n                    <Table size=\"small\">\n                      <TableHead>\n                        <TableRow>\n                          <TableCell>Select</TableCell>\n                          <TableCell>Match</TableCell>\n                          <TableCell>Forename</TableCell>\n                          <TableCell>Surname</TableCell>\n                          <TableCell>D.O.B</TableCell>\n                          <TableCell>Email</TableCell>\n                          <TableCell>Test Date</TableCell>\n                          <TableCell></TableCell>\n                        </TableRow>\n                      </TableHead>\n                      <TableBody>\n                        {likelyBookings.map((row) => (\n                          <TableRow key={row._id}>\n                            <TableCell>\n                              <Tooltip\n                                title={\n                                  row.birthDate !== smartLinkDetails.birthDate\n                                    ? '\"D.O.B\" DOES NOT MATCH THE LAB REPORT ! PLEASE MAKE SURE \"D.O.B\" OF THE SELECTED BOOKING IS CORRECT !'\n                                    : \"\"\n                                }\n                              >\n                                <FormControlLabel\n                                  control={\n                                    <Checkbox\n                                      checked={\n                                        selectedBooking &&\n                                        selectedBooking._id === row._id\n                                      }\n                                      disabled={\n                                        matched || matching\n                                      }\n                                      onChange={(event) =>\n                                        handleCheckChanged(event, row)\n                                      }\n                                      name=\"checkedA\"\n                                    />\n                                  }\n                                  label=\"\"\n                                />\n                              </Tooltip>\n                            </TableCell>\n                            <TableCell\n                              style={{\n                                fontWeight: \"800\",\n                                color: \"#2f942e\",\n                                fontSize: \"1.1rem\",\n                              }}\n                            >{`${row.likelihood} %`}</TableCell>\n                            <TableCell\n                              style={\n                                row.forenameCapital ===\n                                  smartLinkDetails.forename\n                                  ? { fontWeight: \"800\", color: \"#2f942e\" }\n                                  : { fontWeight: \"800\", color: \"#ff871f\" }\n                              }\n                            >\n                              {row.forenameCapital}\n                            </TableCell>\n                            <TableCell\n                              style={\n                                row.surnameCapital === smartLinkDetails.surname\n                                  ? { fontWeight: \"800\", color: \"#2f942e\" }\n                                  : { fontWeight: \"800\", color: \"#ff871f\" }\n                              }\n                            >\n                              {row.surnameCapital}\n                            </TableCell>\n                            <TableCell\n                              style={\n                                row.birthDate === smartLinkDetails.birthDate\n                                  ? { fontWeight: \"800\", color: \"#2f942e\" }\n                                  : { fontWeight: \"800\", color: \"red\" }\n                              }\n                            >\n                              <Grid\n                                container\n                                direction=\"column\"\n                                justify=\"center\"\n                                alignItems=\"center\"\n                                spacing={1}\n                              >\n                                <Grid item>\n                                  {row.birthDate !==\n                                    smartLinkDetails.birthDate && (\n                                      <span style={{ textAlign: \"center\" }}>\n                                        <ReportProblemIcon />\n                                      </span>\n                                    )}\n                                </Grid>\n                                {FormatDateFromString(row.birthDate)}\n                                <Grid item></Grid>\n                              </Grid>\n                            </TableCell>\n                            <TableCell>{row.email?.toUpperCase()}</TableCell>\n                            <TableCell\n                              style={\n                                dateformat(\n                                  row.samplingTimeStamp,\n                                  \"yyyy-mm-dd\"\n                                ) === smartLinkDetails.testDate\n                                  ? { fontWeight: \"800\", color: \"#2f942e\" }\n                                  : { fontWeight: \"800\", color: \"red\" }\n                              }\n                            >\n                              {FormatDateFromString(dateformat(row.samplingTimeStamp, \"yyyy-mm-dd\"))}\n                            </TableCell>\n                            <TableCell>\n                              <Button\n                                color=\"primary\"\n                                disabled={sending}\n                                onClick={(event) =>\n                                  seeDetailsClicked(event, row)\n                                }\n                              >\n                                See Details\n                              </Button>\n                            </TableCell>\n                          </TableRow>\n                        ))}\n                      </TableBody>\n                    </Table>\n                  </Grid>\n                </Grid>\n\n                <Grid\n                  container\n                  direction=\"column\"\n                  justify=\"center\"\n                  spacing={1}\n                  alignItems=\"center\"\n                >\n\n                  {!matched && (\n                    <React.Fragment>\n                      <Grid item>\n                        <Button\n                          disabled={!selectedBooking || matching}\n                          className={classes.matchButton}\n                          variant=\"contained\"\n                          color=\"primary\"\n                          onClick={matchRecords}\n                        >\n                          GO Match THE Records\n                          </Button>\n                      </Grid>\n\n                      {!selectedBooking && (\n                        <Grid item>\n                          <Alert severity=\"warning\">No Record is Selected ! — Please select a record you think it is a match.</Alert>\n                        </Grid>\n                      )}\n\n                    </React.Fragment>\n                  )}\n\n                  {matched && !sent && !sending && (\n                    <React.Fragment>\n\n                      <Grid item>\n\n                        <Alert style={{ marginTop: \"10px\", paddingLeft: \"50px\", paddingRight: \"50px\" }} severity=\"success\"> Success — The Records are Matched Now !</Alert>\n\n                      </Grid>\n\n                      <Grid item>\n\n                        <div style={{ paddingTop: \"5px\", fontSize: \"1rem\", fontWeight: \"500\", color: \"#555\" }}>\n                          Do you want to Resend the LAB Report {selectedBooking.certificate ? ' and Certificate' : ''}  Now?\n                      </div>\n\n                      </Grid>\n\n                      <Grid item>\n                        <Button\n                          disabled={sending || sent}\n                          className={classes.resendButton}\n                          variant=\"contained\"\n                          color=\"primary\"\n                          onClick={resendEmailsClicked}\n                        >\n                          YES ! RESEND THE EMAILS\n                          </Button>\n                      </Grid>\n\n                      <Grid item>\n                        <Button\n                          disabled={sending || sent}\n                          className={classes.cancelButton}\n                          variant=\"contained\"\n                          color=\"default\"\n                          onClick={cancelResendEmailsClicked}\n                        >\n                          NO ! NOT NOW\n                          </Button>\n                      </Grid>\n\n\n                      <Grid item>\n                        <Button\n                          disabled={sending || sent}\n                          className={classes.resendFilesButton}\n                          variant=\"contained\"\n                          color=\"primary\"\n                          onClick={resendFilesClicked}\n                        >\n                          Just Generate The Files and send to pcrresults@medicalexpressclinic.co.uk\n                          </Button>\n                      </Grid>\n\n                      <Grid item>\n\n                        <Alert style={{ marginTop: \"10px\", paddingLeft: \"50px\", paddingRight: \"50px\" }} severity=\"warning\">\n                          Caution! — The LAB Report and Certificate will be Sent According to the Record you have Selected !\n                          </Alert>\n\n                      </Grid>\n\n\n\n                    </React.Fragment>\n                  )}\n\n                  {matched && (sending || sent) && (\n                    <Grid item>\n\n                      <div style={{ paddingTop: \"50px\", color: \"#2f942e\", fontWeight: \"600\", fontSize: \"1rem\" }}>\n                        {sending && !sent && (\n                          'Sending ...'\n                        )}\n\n                        {sent && !sendJustToPCR && (\n                          <Alert style={{ marginTop: \"10px\", paddingLeft: \"50px\", paddingRight: \"50px\" }} severity=\"success\">\n                            Success! — The LAB Report {selectedBooking.certificate ? ' and Certificate ' : ' '}  Successfully Sent.\n                          </Alert>\n                        )}\n\n                        {sent && sendJustToPCR && (\n                          <Alert style={{ marginTop: \"10px\", paddingLeft: \"50px\", paddingRight: \"50px\" }} severity=\"success\">\n                            Success! — The LAB Report {selectedBooking.certificate ? ' and Certificate ' : ' '}  Successfully Sent Just to pcrresults@medicalexpressclinic.co.uk .\n                          </Alert>\n                        )}\n\n\n\n\n                      </div>\n\n                    </Grid>\n\n                  )}\n\n                </Grid>\n              </React.Fragment>\n            )}\n\n\n            {matched && (sending || sent) && (\n              <React.Fragment>\n\n                <div style={{ marginTop: \"10px\", width: \"50%\", marginLeft: \"27%\" }}>\n\n                  <LinearProgressWithLabel variant=\"determinate\" color=\"primary\" value={sendingProgress} />\n\n                </div>\n\n                <div style={{ paddingTop: \"30px\", color: \"#2f942e\", fontWeight: \"600\", fontSize: \"1rem\", marginLeft: \"45%\" }}>\n                  {sending && !sent && (\n                    'PLEASE WAIT ...'\n                  )}\n\n                </div>\n\n              </React.Fragment>\n            )}\n\n\n          </div>\n\n        </DialogContent>\n      </Dialog>\n\n      <BloodReportDialog\n            booking={selectedBooking}\n            open={seeDetailsDialogOpen}\n            onClose={handleCloseSeeDetaisDialog}\n          />\n\n    </React.Fragment>\n  );\n}","import axios from 'axios';\nimport { authToken, backendAPI } from '../../GlobalPath';\n\nexport default axios.create({\n  baseURL: backendAPI,\n  headers : {\n      'Authorization' : authToken,\n       'Content-Type': 'application/json',\n  }\n});","import API from './api';\nimport axiosRetry from 'axios-retry';\n\nexport default class BookService {\n\n\n   static addNewBooking = (payload) =>\n   {\n      return API.post(`/api/derma/book/addnewbooking`, payload);\n   }\n\n\n   static sendRegFormEmail = (bookingId) =>\n   {\n      return API.post(`/api/derma/book/sendregformemail?id=${bookingId}`);\n   }\n   static payBooking = (bookingId,price, paymentMethod, corporate) =>\n   {\n      return API.post(`/api/derma/book/paybooking?id=${bookingId}&paymentmethod=${paymentMethod}&corporate=${corporate}&price=${price}`);\n   }\n\n   static unPayBooking = (bookingId) =>\n   {\n      return API.post(`/api/derma/book/unpaybooking?id=${bookingId}`);\n   }\n\n   static getShouldRefundsCount = () =>\n   {\n      return API.get(`/api/derma/book/getshouldrefundscount?`);\n   }\n\n   \n\n   static refundBooking = (bookingId) =>\n   {\n      return API.post(`/api/derma/payment/refundpayment`, {bookingId: bookingId});\n   }\n\n   static getBookingsStatsByDateStr = (dateStr) =>\n   {\n      return API.get(`/api/derma/book/getbookingsstatsbydatestr?date=${dateStr}`);\n   }\n\n   static getBookingsCountByDateStr = (dateStr) =>\n   {\n      return API.get(`/api/derma/book/getbookingscountbydatestr?date=${dateStr}`);\n   }\n\n   static getAllBookingsCountAll = () =>\n   {\n      return API.get(`/api/derma/book/getallbookingscountall`);\n   }\n\n   static getBookingsCountByDateStrandTime = (dateStr, time, source) =>\n   {\n      return API.get(`/api/derma/book/getbookingscountbydatestrandtime?date=${dateStr}&time=${time}`, {cancelToken: source.token});\n   }\n\n   static getBookingsByDateStrandTime = (dateStr, time) =>\n   {\n      return API.get(`/api/derma/book/getbookingsbydatestrandtime?date=${dateStr}&time=${time}`);\n   }\n\n\n   static getAllBookingsCountByDateStr = (dateStr) =>\n   {\n      return API.get(`/api/derma/book/getallbookingscountbydatestr?date=${dateStr}`);\n   }\n\n   static getAllBookingsCountByDateStrandTime = (dateStr, time, source) =>\n   {\n      return API.get(`/api/derma/book/getallbookingscountbydatestrandtime?date=${dateStr}&time=${time}`, {cancelToken: source.token});\n   }\n\n   static getAllBookingsByDateStrandTime = (dateStr, time) =>\n   {\n      return API.get(`/api/derma/book/getallbookingsbydatestrandtime?date=${dateStr}&time=${time}`);\n   }\n\n   static changeBackToBookingMade = (id) =>\n   {\n      return API.post(`/api/derma/book/changebacktobookingmade?id=${id}`);\n   }\n\n   static changeToPatientAttended = (id) =>\n   {\n      return API.post(`/api/derma/book/changetopatientattended?id=${id}`);\n   }\n\n   static updateBooking = (payload) =>\n   {\n      return API.post(`/api/derma/book/updatebookappointment`, payload);\n   } \n\n   static updateBookingTime = (payload) =>\n   {\n      return API.post(`/api/derma/book/updatebookappointmenttime`, payload);\n   } \n\n   static deleteBooking = (id) =>\n   {\n      return API.post(`/api/derma/book/deletebookappointment?id=${id}`);\n   } \n\n   static unDeleteBooking = (id) =>\n   {\n      return API.post(`/api/derma/book/undeletebookappointment?id=${id}`);\n   } \n   \n    static getBookingsByRef = (ref) =>\n    {\n       return API.get(`/api/derma/book/getbookingsbyref?ref=${ref}`);\n    }\n\n    static getBookingById = (id) =>\n    {\n       return API.get(`/api/derma/book/getbookingbyid?id=${id}`);\n    }\n\n    static getAllBookings = (limit) =>\n    {\n      if (!limit) limit = 25 \n      return API.get(`/api/derma/book/getallbookings?limit=${limit}`);\n    }\n\n    static getDeletedBookings= (limit) =>\n    {\n      if (!limit) limit = 25 \n       return API.get(`/api/derma/book/getdeletedbookings?limit=${limit}`);\n    }\n\n    static getTodayBookings= () =>\n    {\n       return API.get(`/api/derma/book/gettodaybookings`);\n    }\n\n    static getOldBookings= (limit) =>\n    {\n      if (!limit) limit = 25 \n       return API.get(`/api/derma/book/getoldbookings?limit=${limit}`);\n    }\n\n    static getFutureBookings= (limit) =>\n    {\n      if (!limit) limit = 25 \n       return API.get(`/api/derma/book/getfuturebookings?limit=${limit}`);\n    }\n\n    static getRecentBookings= () =>\n    {\n       return API.get(`/api/derma/book/getrecentbookings`);\n    }\n\n    static getRecentBookingsAll= (limit) =>\n    {\n      if (!limit) limit = 25 \n       return API.get(`/api/derma/book/getrecentbookingsall?limit=${limit}`);\n    }\n}","import API from './api';\n\nexport default class PDFService {\n\n\n    static downloadDermaRegForm = (id) =>\n    {\n       return API.get(`/api/pdf/downloaddermaregform?id=${id}`, {\n        responseType: 'arraybuffer',\n        id: id,\n        headers: {\n            Accept: 'application/pdf',\n        }\n        });\n    }\n\n\n\n}","export const corporates = [\n    'Visa Medical'\n]","import React, { useEffect, useRef, useState } from \"react\";\nimport BookService from \"./services/BookService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {\n  Backdrop,\n  Button,\n  Checkbox,\n  CircularProgress,\n  Divider,\n  FormControlLabel,\n  Grid,\n  InputAdornment,\n  InputLabel,\n  Link,\n  makeStyles,\n  MenuItem,\n  Select,\n  TextField,\n  Tooltip,\n} from \"@material-ui/core\";\nimport GlobalState from \"../GlobalState\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport CreditCardIcon from \"@material-ui/icons/CreditCard\";\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\n\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Draggable from \"react-draggable\";\nimport Paper from \"@material-ui/core/Paper\";\n\nimport Alert from \"@material-ui/lab/Alert\";\n\nimport PropTypes from \"prop-types\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport Box from \"@material-ui/core/Box\";\n\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport { corporates } from \"./Corporates\";\nimport NumberFormat from \"react-number-format\";\n\n\nvar interval;\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    marginTop: theme.spacing(0),\n    marginBottom: theme.spacing(1),\n  },\n\n  refreshButton: {\n    marginLeft: theme.spacing(2),\n  },\n\n  checkIcon: {\n    color: \"green\",\n  },\n\n  closeIcon: {\n    color: \"red\",\n  },\n\n  RefLink: {\n    cursor: \"pointer\",\n  },\n\n  BookedLabel: {\n    backgroundColor: \"#606060\",\n    color: \"#fff\",\n    paddingRight: \"10px\",\n    paddingLeft: \"10px\",\n  },\n\n  PatientAttendedLabel: {\n    backgroundColor: \"#0066aa\",\n    color: \"#fff\",\n    paddingRight: \"15px\",\n    paddingLeft: \"10px\",\n  },\n\n  SampleTakenLabel: {\n    backgroundColor: \"#0066cc\",\n    color: \"#fff\",\n    paddingRight: \"40px\",\n    paddingLeft: \"10px\",\n  },\n\n  ReportSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"90px\",\n    paddingLeft: \"10px\",\n  },\n\n  ReportCertSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"68px\",\n    paddingLeft: \"10px\",\n  },\n\n  archiveButton: {},\n\n  smartMatchButton: {\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    marginRight: \"10px\",\n    // padding: \"10px\"\n  },\n\n  infoTitle: {\n    fontWeight: \"400\",\n  },\n\n  infoData: {\n    paddingLeft: \"10px\",\n    fontWeight: \"800\",\n  },\n\n  matchButton: {\n    marginTop: \"30px\",\n    marginBottom: \"20px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  resendButton: {\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  resendFilesButton: {\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n    backgroundColor: \"#3792ad\",\n    \"&:hover\": {\n      background: \"#2f798f\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  cancelButton: {\n    marginBottom: \"10px\",\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"90px\",\n    paddingRight: \"90px\",\n  },\n\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 5,\n    color: \"#fff\",\n  },\n}));\n\nfunction NumberFormatCustom(props) {\n  const { inputRef, onChange, ...other } = props;\n\n  return (\n    <NumberFormat\n      {...other}\n      getInputRef={inputRef}\n      onValueChange={(values) => {\n        onChange({\n          target: {\n            name: props.name,\n            value: values.value,\n          },\n        });\n      }}\n      thousandSeparator\n      isNumericString\n      prefix=\"\"\n    />\n  );\n}\n\nNumberFormatCustom.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\n\nconst BorderLinearProgress = withStyles((theme) => ({\n  root: {\n    height: 10,\n    borderRadius: 5,\n  },\n  colorPrimary: {\n    backgroundColor: \"#cedbce\", //theme.palette.grey[theme.palette.type === 'light' ? 200 : 700],\n  },\n  bar: {\n    borderRadius: 5,\n    backgroundColor: \"#2f942e\",\n  },\n}))(LinearProgress);\nfunction LinearProgressWithLabel(props) {\n  return (\n    <Box display=\"flex\" alignItems=\"center\">\n      <Box width=\"100%\" mr={1}>\n        <BorderLinearProgress variant=\"determinate\" {...props} />\n      </Box>\n      <Box minWidth={35}>\n        <Typography\n          style={{ fontWeight: \"800\", color: \"#5e855e\" }}\n          variant=\"body2\"\n          color=\"textSecondary\"\n        >{`${Math.round(props.value)}%`}</Typography>\n      </Box>\n    </Box>\n  );\n}\n\nLinearProgressWithLabel.propTypes = {\n  /**\n   * The value of the progress indicator for the determinate and buffer variants.\n   * Value between 0 and 100.\n   */\n  value: PropTypes.number.isRequired,\n};\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable\n      handle=\"#draggable-dialog-title\"\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\n    >\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nexport default function PayDialog(props) {\n  const classes = useStyles();\n\n  const [state, setState] = React.useContext(GlobalState);\n  const [paymentMethod, setPaymentMethod] = useState(\"credit card\");\n  const [corporate, setCorporate] = useState(corporates[0]);\n  const [saving, setSaving] = useState(false);\n\n  const [price, setPrice] = useState(\"\");\n  const [priceError, setPriceError] = useState(false);\n\n  useEffect( () => {\n    if (props.price)\n    {\n      setPrice(`${props.price}`)\n    }else\n    {\n      setPrice('')\n    }\n  }, [props.price, props.open])\n\n\n  const priceChanged = (event) =>\n  {\n    setPrice(event.target.value)\n    setPriceError(false)\n  }\n\n  const paymentMethodChanged = (event) => {\n    setPaymentMethod(event.target.value);\n  };\n\n  const handleClose = () => {\n    if (saving) return;\n\n    props.handleClose();\n    setPaymentMethod(\"credit card\");\n    setPrice('')\n    setCorporate(corporates[0]);\n    setSaving(false);\n  };\n\n  const corporateChanged = (event) => {\n    setCorporate(event.target.value);\n  };\n\n  const payClicked = async () => {\n\n\n    if (!price || price.trim().length === 0 || price === '0')\n    {\n      setPriceError(true)\n      return\n    }\n\n    setSaving(true);\n\n  \n\n    try {\n      await BookService.payBooking(\n        props.booking._id,\n        price,\n        paymentMethod,\n        paymentMethod === \"corporate\" ? corporate : \"\"\n      );\n      setSaving(false);\n      setState((state) => ({\n        ...state,\n        bookingPayChanged: !state.bookingPayChanged ? true : false,\n      }));\n      handleClose();\n    } catch (err) {\n      console.error(err);\n      setSaving(false);\n    }\n  };\n\n  return (\n    <React.Fragment>\n      {props.booking && (\n        <React.Fragment>\n          <Dialog\n            maxWidth=\"xs\"\n            open={props.open}\n            onClose={handleClose}\n            PaperComponent={PaperComponent}\n            aria-labelledby=\"form-dialog-title\"\n          >\n            <DialogTitle id=\"draggable-dialog-title\">\n              <Grid\n                container\n                spacing={2}\n                direction=\"row\"\n                justify=\"center\"\n                alignItems=\"center\"\n              >\n                <Grid item>\n                  <CreditCardIcon\n                    style={{ color: \"#f50057\", fontSize: \"3rem\" }}\n                  />\n                </Grid>\n\n                <Grid item>\n                  <div\n                    style={{\n                      color: \"#f50057\",\n                      paddingBottom: \"10px\",\n                      fontWeight: \"800\",\n                    }}\n                  >\n                    {\" \"}\n                    PAY the CHARGE{\" \"}\n                  </div>\n                </Grid>\n              </Grid>\n\n              <Divider />\n            </DialogTitle>\n            <DialogContent>\n              <div\n                style={{\n                  height: \"300px\",\n                }}\n              >\n                <Grid\n                  container\n                  direction=\"column\"\n                  justify=\"space-between\"\n                  spacing={2}\n                  alignItems=\"flex-start\"\n                >\n                  <Grid item>\n                  <TextField\n                                autoFocus\n                                error={priceError}\n                                label=\"TOTAL Charges\"\n                                value={price}\n                                fullWidth\n                                required\n                                onChange={priceChanged}\n                                name=\"product-price\"\n                                id=\"product-price-id\"\n                                InputProps={{\n                                  inputComponent: NumberFormatCustom,\n                                  startAdornment: (\n                                    <InputAdornment position=\"start\">\n                                      £\n                                    </InputAdornment>\n                                  ),\n                                }}\n                              />\n\n                  </Grid>\n\n                  <Grid item>\n                    <div style={{ fontSize: \"17px\" }}>\n                      {\" \"}\n                      How do you want to pay?{\" \"}\n                    </div>\n                  </Grid>\n\n                  <Grid item>\n                    <FormControl component=\"fieldset\">\n                      <RadioGroup\n                        aria-label=\"paymentMethod\"\n                        name=\"paymentMethod\"\n                        value={paymentMethod}\n                        onChange={paymentMethodChanged}\n                      >\n                        <FormControlLabel\n                          value=\"credit card\"\n                          control={<Radio />}\n                          label=\"Credit Card\"\n                        />\n                        <FormControlLabel\n                          value=\"cash\"\n                          control={<Radio />}\n                          label=\"Cash\"\n                        />\n                        <FormControlLabel\n                          value=\"corporate\"\n                          control={<Radio />}\n                          label=\"Corporate\"\n                        />\n                      </RadioGroup>\n\n                      {paymentMethod === \"corporate\" && (\n                        <FormControl\n                          style={{ marginTop: \"10px\" }}\n                          className={classes.formControl}\n                        >\n                          <Select\n                            labelId=\"select-corporate\"\n                            id=\"select-corporate-id\"\n                            value={corporate}\n                            onChange={corporateChanged}\n                          >\n                            {corporates.map((element) => (\n                              <MenuItem\n                                value={element}\n                              >{`${element}`}</MenuItem>\n                            ))}\n                          </Select>\n                        </FormControl>\n                      )}\n                    </FormControl>\n                  </Grid>\n                </Grid>\n\n                <Grid item></Grid>\n\n                <div\n                  style={{\n                    position: \"absolute\",\n                    bottom: \"20px\",\n                    right: \"20px\",\n                  }}\n                >\n                  <Grid\n                    container\n                    direction=\"row\"\n                    justify=\"flex-end\"\n                    alignItems=\"center\"\n                    spacing={1}\n                  >\n                    <Grid item>\n                      <Button\n                        onClick={handleClose}\n                        style={{ width: \"100px\" }}\n                        disabled={saving}\n                      >\n                        back\n                      </Button>\n                    </Grid>\n                    <Grid item>\n                      <Button\n                        onClick={payClicked}\n                        variant=\"contained\"\n                        color=\"secondary\"\n                        style={{ width: \"100px\" }}\n                        disabled={saving}\n                      >\n                        Pay\n                      </Button>\n                    </Grid>\n                  </Grid>\n                </div>\n              </div>\n\n              <Backdrop className={classes.backdrop} open={saving}>\n                <CircularProgress color=\"inherit\" />\n              </Backdrop>\n            </DialogContent>\n          </Dialog>\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport GlobalState from \"../GlobalState\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {\n  Button,\n  Checkbox,\n  DialogActions,\n  DialogContentText,\n  Divider,\n  FormControlLabel,\n  IconButton,\n  TextField,\n  Tooltip,\n} from \"@material-ui/core\";\nimport PDFService from \"./services/PDFService\";\n\nimport { calculatePrice } from \"./PriceCalculator\";\n\nimport bookingService from \"./services/BookService\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport CloseIcon from \"@material-ui/icons/Close\";\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Draggable from \"react-draggable\";\nimport Slide from \"@material-ui/core/Slide\";\n\nimport Paper from \"@material-ui/core/Paper\";\n\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport BookService from \"./services/BookService\";\n\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport {\n  FormatDateFromString,\n  RevertFormatDateFromString,\n} from \"./DateFormatter\";\nimport PayDialog from \"./PayDialog\";\n\nimport PrintIcon from \"@material-ui/icons/Print\";\nimport UndoIcon from \"@material-ui/icons/Undo\";\n\nimport SendIcon from \"@material-ui/icons/Send\";\n\nimport HistoryIcon from \"@material-ui/icons/History\";\n\nimport FileCopyOutlinedIcon from \"@material-ui/icons/FileCopyOutlined\";\nimport { CalendarColors } from \"../Admin/calendar-admin/colors\";\nimport InvoiceDialog from \"../InvoiceDialog\";\nimport InvoiceService from \"../services/InvoiceService\";\n\nconst useStyles = makeStyles((theme) => ({\n  box: {\n    backgroundColor: \"#373737\",\n    color: \"#fff\",\n    padding: \"1px\",\n    borderRadius: \"4px\",\n    textAlign: \"justify\",\n    paddingRight: \"40px\",\n  },\n\n  boxRed: {\n    backgroundColor: \"#dc2626\",\n    color: \"#fff\",\n    padding: \"1px\",\n    borderRadius: \"4px\",\n    textAlign: \"justify\",\n    paddingRight: \"40px\",\n  },\n\n  boxInfo: {\n    textAlign: \"justify\",\n    backgroundColor: \"#fafafa\",\n    color: \"#333\",\n    padding: \"1px\",\n    borderRadius: \"4px\",\n    paddingRight: \"40px\",\n    border: \"1px solid #eee\",\n  },\n\n  ul: {\n    listStyle: \"none\",\n    padding: \"0\",\n    margin: \"0\",\n  },\n\n  li: {\n    marginBottom: \"15px\",\n  },\n\n  icon: {\n    marginRight: \"8px\",\n  },\n\n  root: {\n    width: \"100%\",\n  },\n\n  lineThrough: {\n    textDecoration: \"line-through\",\n  },\n\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    flexBasis: \"33.33%\",\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n  },\n  secondaryHeading: {\n    fontSize: theme.typography.pxToRem(15),\n  },\n\n  infoDetails: {\n    textAlign: \"left\",\n  },\n\n  infoTitle: {\n    fontWeight: \"800\",\n    marginRight: \"10px\",\n  },\n\n  infoData: {\n    fontWeight: \"400\",\n  },\n\n  title: {\n    textAlign: \"center\",\n    fontWeight: \"600\",\n    marginLeft: \"10px\",\n    marginBottom: \"5px\",\n  },\n\n  Accordion: {\n    backgroundColor: \"#f5f5f5\",\n    color: \"#222\",\n  },\n\n  AccordionDeleted: {\n    backgroundColor: \"#aaa\",\n    color: \"#555\",\n  },\n\n  DownloadForm: {\n    marginTop: \"10px\",\n    marginBottom: \"10px\",\n  },\n\n  infoDataCharges: {\n    fontSize: \"18px\",\n    color: \"green\",\n    fontWeight: \"600\",\n  },\n\n  infoDataChargesHigher: {\n    fontSize: \"18px\",\n    color: \"red\",\n    fontWeight: \"600\",\n  },\n  BookedLabel: {\n    color: \"#606060\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#606060\",\n    width: \"150px\",\n    display: \"inline-block\",\n  },\n\n  PatientAttendedLabel: {\n    color: \"#0066aa\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#0066aa\",\n    width: \"150px\",\n    display: \"inline-block\",\n  },\n\n  SampleTakenLabel: {\n    color: \"#0066cc\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#0066cc\",\n  },\n\n  ReportSentLabel: {\n    color: \"#009900\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#009900\",\n  },\n\n  ReportCertSentLabel: {\n    color: \"#009900\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#009900\",\n  },\n\n  PositiveLabel: {\n    color: \"red\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"red\",\n  },\n\n  EditButton: {\n    marginBottom: \"20px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n  },\n\n  ResendEmailsButton: {\n    // marginBottom : \"20px\",\n    color: \"#2f942e\",\n    borderColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"#fafffa\",\n      borderColor: \"#2f942e\",\n    },\n    textDecoration: \"none !important\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  PayButton: {\n    marginLeft: \"70px\",\n    width: \"300px\",\n  },\n\n  printInvoiceButton: {\n    marginLeft: \"70px\",\n    fontSize: \"0.8rem\",\n    // width: \"300px\",\n  },\n\n  editInvoiceButton: {\n    marginLeft: \"10px\",\n    fontSize: \"0.8rem\",\n  },\n\n  PayLabel: {\n    marginLeft: \"20px\",\n\n    color: \"#2f942e\",\n    fontWeight: \"500\",\n    textAlign: \"center\",\n  },\n\n  RestoreButton: {\n    marginBottom: \"20px\",\n    backgroundColor: \"#eee\",\n    color: \"#333\",\n    \"&:hover\": {\n      background: \"#f1f1f1\",\n      color: \"#111\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n  },\n\n  DeleteButton: {\n    marginBottom: \"20px\",\n    backgroundColor: \"#d90015\",\n    \"&:hover\": {\n      background: \"#b80012\",\n      color: \"#fff\",\n    },\n\n    padding: \"10px\",\n  },\n\n  SaveButton: {\n    marginBottom: \"10px\",\n    padding: \"10px\",\n\n    backgroundColor: \"#d1175e\",\n    \"&:hover\": {\n      background: \"#bd0d50\",\n      color: \"#fff\",\n    },\n  },\n\n  CancelButton: {\n    marginBottom: \"20px\",\n    // padding: \"10px\"\n  },\n\n  TextBox: {\n    padding: \"0px\",\n  },\n\n  checkIcon: {\n    color: \"green\",\n  },\n\n  checkIconSmall: {\n    color: \"green\",\n    paddingTop: \"5px\",\n  },\n\n  closeIcon: {\n    color: \"red\",\n  },\n\n  centeredLabel: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 5,\n    color: \"#fff\",\n  },\n\n  invoiceNumber: {\n    display: \"inline-block\",\n    fontWeight: \"500\",\n    width: \"72px\",\n    fontSize: \"1rem\",\n    color: theme.palette.primary.main,\n  },\n}));\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable\n      handle=\"#alert-dialog-slide-title\"\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\n    >\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nexport default function BookingDialog(props) {\n  const classes = useStyles();\n\n  const [state, setState] = React.useContext(GlobalState);\n\n  const [copied, setCopied] = useState(false);\n\n  const [emailSent, setEmailSent] = React.useState(false);\n  const [emailSentInvoice, setEmailSentInvoice] = React.useState(false);\n\n  const [openResendDialog, setOpenResendDialog] = React.useState(false);\n  const [openPayDialog, setOpenPayDialog] = React.useState(false);\n  const [openRefundDialog, setOpenRefundDialog] = React.useState(false);\n\n  const [openInvoiceDialog, setOpenInvoiceDialog] = React.useState(false);\n\n  const [selectedBooking, setSelectedBooking] = React.useState(null);\n\n  const [editMode, setEditMode] = React.useState({ edit: false, person: null });\n  const [deleteMode, setDeleteMode] = React.useState({\n    delete: false,\n    person: null,\n  });\n  const [restoreMode, setRestoreMode] = React.useState({\n    restore: false,\n    person: null,\n  });\n\n  const [saving, setSaving] = React.useState(false);\n  const [deleting, setDeleting] = React.useState(false);\n  const [restoring, setRestoring] = React.useState(false);\n\n  const [validationError, setValidationError] = React.useState({});\n\n  const [bookingDate, setBookingDate] = React.useState(\"\");\n  const [bookingTime, setBookingTime] = React.useState(\"\");\n\n  const [fullname, setFullname] = React.useState(\"\");\n  const [email, setEmail] = React.useState(\"\");\n  const [tel, setTel] = React.useState(\"\");\n  const [notes, setNotes] = React.useState(\"\");\n  const [service, setService] = React.useState(\"\");\n\n  const [refreshData, setRefreshData] = React.useState(false);\n\n  const [booking, setBooking] = React.useState(null);\n\n  const [recordChanged, setRecordChanged] = React.useState(false);\n\n  const [fieldChanged, setFieldChanged] = React.useState(false);\n\n  const [openUndoPayDialog, setOpenUndoPayDialog] = React.useState(false);\n\n  const [openTimeStampDialog, setOpenTimeStampDialog] = React.useState(false);\n\n  const [invoice, setInvoice] = React.useState(null);\n  const [invoiceLoaded, setInvoiceLoaded] = React.useState(false);\n\n  const fetchInvoice = async () => {\n    try {\n      setInvoiceLoaded(false);\n      const res = await InvoiceService.getInvoiceByBookingId(props.booking._id);\n      setInvoice(res.data.invoice);\n      setInvoiceLoaded(true);\n    } catch (err) {\n      setInvoiceLoaded(true);\n      console.error(err);\n    }\n  };\n\n  React.useEffect(() => {\n    if (props.booking) {\n      fetchInvoice();\n    }\n  }, [props.booking, props.open]);\n\n  const handleCloseTimeStampDialog = () => {\n    setOpenTimeStampDialog(false);\n    setSelectedBooking(null);\n  };\n\n  const handleCloseUndoPayDialog = () => {\n    setOpenUndoPayDialog(false);\n    setSelectedBooking(null);\n  };\n\n  const handleCloseResendDialog = () => {\n    setOpenResendDialog(false);\n    setSelectedBooking(null);\n  };\n\n  const handleClosePayDialog = () => {\n    setOpenPayDialog(false);\n    setSelectedBooking(null);\n  };\n\n  const handleCloseRefundDialog = () => {\n    setOpenRefundDialog(false);\n    setSelectedBooking(null);\n  };\n\n  const handleCloseInvoiceDialog = (refresh) => {\n    setOpenInvoiceDialog(false);\n    setSelectedBooking(null);\n    fetchInvoice();\n  };\n\n  useEffect(() => {\n    if (booking) {\n      const isChanged =\n        bookingDate !== FormatDateFromString(booking.bookingDate) ||\n        bookingTime !== booking.bookingTime ||\n        fullname !== booking.fullname ||\n        email !== booking.email ||\n        tel !== booking.phone ||\n        service !== booking.package ||\n        notes !== booking.notes;\n\n      setRecordChanged(isChanged);\n    }\n  }, [fieldChanged]);\n\n  useEffect(() => {\n    if (!props.open) {\n      setTimeout(() => {\n        setEditMode({ edit: false, person: null });\n        setRecordChanged(false);\n      }, 500);\n    }\n  }, [props.open]);\n\n  const bookingDateChanged = (event) => {\n    setBookingDate(event.target.value);\n    setValidationError({ ...validationError, bookingDateError: false });\n    setFieldChanged(!fieldChanged);\n  };\n\n  const bookingTimeChanged = (event) => {\n    setBookingTime(event.target.value);\n    setValidationError({ ...validationError, bookingTimeError: false });\n    setFieldChanged(!fieldChanged);\n  };\n\n  const fullnameChanged = (event) => {\n    setFullname(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const emailChanged = (event) => {\n    setEmail(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const telChanged = (event) => {\n    setTel(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const serviceChanged = (event) => {\n    setService(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const notesChanged = (event) => {\n    setNotes(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const getStatusLabel = (status) => {\n    if (status === \"booked\") {\n      return <div className={classes.BookedLabel}> Booking Made </div>;\n    } else if (status === \"patient_attended\") {\n      return (\n        <div className={classes.PatientAttendedLabel}> Patient Attended </div>\n      );\n    } else {\n      return \"Unknown\";\n    }\n  };\n\n  const handleEditModeChanged = (edit, person) => {\n    if (edit) {\n      setFullname(person.fullname);\n      setBookingDate(FormatDateFromString(person.bookingDate));\n      setBookingTime(person.bookingTime.toUpperCase());\n      setEmail(person.email);\n      setTel(person.phone);\n      setService(person.package)\n      if (person.notes) {\n        setNotes(person.notes);\n      }\n\n      setEditMode({ edit: edit, person: person });\n    } else if (!edit && !person) {\n      setEditMode({ edit: edit, person: person });\n      setRecordChanged(false);\n    } else if (!edit && person) {\n      const booking = {};\n      const bookingId = person._id;\n      booking.email = email;\n      booking.phone = tel;\n      booking.fullname = fullname;\n      booking.notes = notes;\n      booking.package = service;\n      booking.bookingDate = RevertFormatDateFromString(bookingDate);\n      booking.bookingTime = bookingTime;\n      booking.bookingRef = person.bookingRef;\n\n      if (validateBooking(booking)) {\n        updateBooking({ bookingId: bookingId, person: booking });\n      }\n    }\n  };\n\n  const validateDate = (str) => {\n    var error = false;\n    if (!str || str.length !== 10) {\n      error = true;\n    }\n\n    if (str.charAt(4) !== \"-\" || str.charAt(7) !== \"-\") {\n      error = true;\n    }\n\n    try {\n      const result = /^\\d{4}-\\d{2}-\\d{2}$/.test(str);\n      if (!result) {\n        error = true;\n      }\n\n      const year = parseInt(str.substr(0, 4));\n      const month = parseInt(str.substr(5, 2));\n      const day = parseInt(str.substr(8, 2));\n\n      if (year < 1900) {\n        error = true;\n      }\n\n      if (month < 1 || month > 12) {\n        error = true;\n      }\n\n      if (day > 31) {\n        error = true;\n      }\n    } catch (err) {\n      error = true;\n    }\n\n    return !error;\n  };\n\n  const validateTime = (str) => {\n    var error = false;\n\n    const result = /^\\d{2}:\\d{2} AM$|^\\d{2}:\\d{2} PM$/.test(str);\n    if (!result) {\n      error = true;\n    }\n\n    try {\n      const hour = parseInt(str.substr(0, 2));\n      const minute = parseInt(str.substr(3, 2));\n\n      if (hour < 0 || hour > 12) {\n        error = true;\n      }\n\n      if (minute < 0 || minute > 59) {\n        error = true;\n      }\n    } catch (err) {\n      error = true;\n    }\n\n    return !error;\n  };\n\n  const validateBooking = (booking) => {\n    var error = false;\n\n    if (!validateDate(booking.bookingDate)) {\n      error = true;\n      setValidationError({ ...validationError, bookingDateError: true });\n    }\n\n    if (!validateTime(booking.bookingTime)) {\n      error = true;\n      setValidationError({ ...validationError, bookingTimeError: true });\n    }\n    return !error;\n  };\n\n  const updateBooking = (payload) => {\n    setSaving(true);\n    bookingService\n      .updateBooking(payload)\n      .then((res) => {\n        setSaving(false);\n        setEditMode({ edit: false, person: null });\n        setRefreshData(!refreshData);\n      })\n      .catch((err) => {\n        setSaving(false);\n        setEditMode({ edit: false, person: null });\n        console.log(err);\n      });\n  };\n\n  const deleteBooking = (id) => {\n    setDeleting(true);\n    bookingService\n      .deleteBooking(id)\n      .then((res) => {\n        setDeleting(false);\n        setDeleteMode({ delete: false, person: null });\n        setRefreshData(!refreshData);\n      })\n      .catch((err) => {\n        setDeleting(false);\n        setDeleteMode({ delete: false, person: null });\n        console.log(err);\n      });\n  };\n\n  const restoreBooking = (id) => {\n    setRestoring(true);\n    bookingService\n      .unDeleteBooking(id)\n      .then((res) => {\n        setRestoring(false);\n        setRestoreMode({ restore: false, person: null });\n        setRefreshData(!refreshData);\n      })\n      .catch((err) => {\n        setRestoring(false);\n        setRestoreMode({ restore: false, person: null });\n        console.log(err);\n      });\n  };\n\n  const handleDeleteModeChanged = (del, person) => {\n    if (del) {\n      setDeleteMode({ delete: del, person: person });\n    } else if (!del && !person) {\n      setDeleteMode({ delete: del, person: person });\n    } else if (!del && person) {\n      deleteBooking(person._id);\n    }\n  };\n\n  const handleRestoreModeChanged = (restore, person) => {\n    if (restore) {\n      setRestoreMode({ restore: restore, person: person });\n    } else if (!restore && !person) {\n      setRestoreMode({ restore: restore, person: person });\n    } else if (!restore && person) {\n      restoreBooking(person._id);\n    }\n  };\n\n  const changeBackToBookingMade = (event, id) => {\n    setSaving(true);\n    BookService.changeBackToBookingMade(id)\n      .then((res) => {\n        setSaving(false);\n        setRefreshData(!refreshData);\n      })\n      .catch((err) => {\n        console.log(err);\n        setSaving(false);\n      });\n  };\n\n  const changeToPatientAttended = (event, id) => {\n    setSaving(true);\n    BookService.changeToPatientAttended(id)\n      .then((res) => {\n        setSaving(false);\n        setRefreshData(!refreshData);\n      })\n      .catch((err) => {\n        console.log(err);\n        setSaving(false);\n      });\n  };\n\n  const Pay = () => {\n    setSelectedBooking(booking);\n    setOpenPayDialog(true);\n  };\n\n  const OpenInvoiceDialog = () => {\n    setSelectedBooking(booking);\n    setInvoice(invoice);\n    setOpenInvoiceDialog(true);\n  };\n\n  useEffect(() => {\n    if (props.booking) {\n      BookService.getBookingById(props.booking._id)\n        .then((res) => {\n          setBooking(res.data);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n\n      setState((state) => ({\n        ...state,\n        bookingDialogDataChanged: !state.bookingDialogDataChanged\n          ? true\n          : false,\n      }));\n    }\n  }, [refreshData, state.bookingPayChanged]);\n\n  useEffect(() => {\n    if (props.booking) {\n      setBooking(props.booking);\n    }\n  }, [props.booking]);\n\n  const undoPaymentClicked = async () => {\n    setSaving(true);\n    try {\n      await BookService.unPayBooking(booking._id);\n      setSaving(false);\n      setOpenUndoPayDialog(false);\n      setRefreshData(!refreshData);\n    } catch (err) {\n      console.error(err);\n      setSaving(false);\n      setOpenUndoPayDialog(false);\n    }\n  };\n\n  const refundPaymentClicked = async () => {\n    setSaving(true);\n    try {\n      await BookService.refundBooking(booking._id);\n      setSaving(false);\n      updateShouldRefundsCount();\n      setOpenRefundDialog(false);\n      setRefreshData(!refreshData);\n    } catch (err) {\n      console.error(err);\n      setSaving(false);\n      setOpenRefundDialog(false);\n    }\n  };\n\n  const updateShouldRefundsCount = async () => {\n    try {\n      const res = await BookService.getShouldRefundsCount();\n      if (res && res.data && res.data.status === \"OK\") {\n        setState((state) => ({ ...state, shouldRefunsCount: res.data.count }));\n      }\n    } catch (ex) {\n      console.error(ex);\n    }\n  };\n\n  const downloadRegForm = (id) => {\n    PDFService.downloadDermaRegForm(id)\n      .then((res) => {\n        const file = new Blob([res.data], { type: \"application/pdf\" });\n\n        const fileURL = URL.createObjectURL(file);\n        window.open(fileURL, \"_blank\");\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const downloadInvoice = (id) => {\n    InvoiceService.downloadInvoice(id)\n      .then((res) => {\n        const file = new Blob([res.data], { type: \"application/pdf\" });\n\n        const fileURL = URL.createObjectURL(file);\n        window.open(fileURL, \"_blank\");\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const sendRegForm = (id) => {\n    setSaving(true);\n    setEmailSent(false);\n    BookService.sendRegFormEmail(id)\n      .then((res) => {\n        setSaving(false);\n        if (res.data.status === \"OK\") {\n          setEmailSent(true);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setSaving(false);\n      });\n  };\n\n  const sendInvoiceEmail = (id, _email) => {\n    setSaving(true);\n    setEmailSentInvoice(false);\n    InvoiceService.emailInvoice(id, _email)\n      .then((res) => {\n        setSaving(false);\n        if (res.data.status === \"OK\") {\n          setEmailSentInvoice(true);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setSaving(false);\n      });\n  };\n\n  const onClose = () => {\n    setEmailSent(false);\n    setEmailSentInvoice(false);\n    setInvoice(null);\n    props.onClose();\n  };\n\n  return (\n    <React.Fragment>\n      {booking && (\n        <React.Fragment>\n          <Dialog\n            maxWidth=\"md\"\n            open={props.open}\n            TransitionComponent={Transition}\n            keepMounted\n            onClose={onClose}\n            PaperComponent={PaperComponent}\n            aria-labelledby=\"alert-dialog-slide-title\"\n            aria-describedby=\"alert-dialog-slide-description\"\n          >\n            <DialogTitle\n              id=\"alert-dialog-slide-title\"\n              style={\n                booking.tr ? { backgroundColor: \"#7e0082\", color: \"#fff\" } : {}\n              }\n            >\n              <div style={{ position: \"absolute\", top: \"25x\", left: \"25px\" }}>\n                <Tooltip title=\"COPY EDIT LINK TO CLIPBOARD\">\n                  <IconButton\n                    onClick={() => {\n                      navigator.clipboard.writeText(\n                        `https://londonmedicalclinic.co.uk/medicalexpressclinic/user/edit/derma/${booking._id}`\n                      );\n                      setCopied(true);\n                      setTimeout(() => {\n                        setCopied(false);\n                      }, 1500);\n                    }}\n                    aria-label=\"delete\"\n                    className={classes.margin}\n                    size=\"small\"\n                  >\n                    <FileCopyOutlinedIcon\n                      style={booking.tr ? { color: \"#ddd\" } : {}}\n                      fontSize=\"14px\"\n                    />\n                  </IconButton>\n                </Tooltip>\n\n                <span\n                  hidden={!copied}\n                  style={{ fontSize: \"12px\", transition: \"all 1s ease-in\" }}\n                >\n                  {\" \"}\n                  Copied{\" \"}\n                </span>\n              </div>\n\n              <div\n                style={{\n                  position: \"absolute\",\n                  top: \"25x\",\n                  right: \"60px\",\n                  backgroundColor: CalendarColors.DERMA_COLOR,\n                  color: \"#fff\",\n                  padding: \"0px 5px\",\n                  borderRadius: \"10px\",\n                }}\n              >\n                Dermatology\n              </div>\n\n              {/* {booking.tr && (\n                <div style={{position:\"absolute\",  right: \"15px\"}}>\n                     TR\n                </div>\n\n              )} */}\n\n              <Grid\n                container\n                direction=\"row\"\n                justify=\"center\"\n                spacing={2}\n                alignItems=\"center\"\n              >\n                <Grid item>\n                  <div\n                    style={\n                      booking.deleted\n                        ? {\n                            paddingBottom: \"5px\",\n                            textDecoration: \"line-through\",\n                          }\n                        : {}\n                    }\n                  >\n                    {`${booking.fullname}`}\n                  </div>\n                </Grid>\n\n                {booking.deleted && (\n                  <Grid item>\n                    <Tooltip title=\"This record has been deleted.\">\n                      <DeleteIcon\n                        style={\n                          booking.tr\n                            ? {\n                                padding: 0,\n                                margin: 0,\n                                color: \"#fff\",\n                                fontSize: 25,\n                              }\n                            : {\n                                padding: 0,\n                                margin: 0,\n                                color: \"#333\",\n                                fontSize: 25,\n                              }\n                        }\n                      />\n                    </Tooltip>\n                  </Grid>\n                )}\n              </Grid>\n            </DialogTitle>\n            <DialogContent>\n              <div\n                style={{\n                  // height: \"550px\",\n                  paddingTop: \"0px\",\n                }}\n              >\n                <Grid item xs={12} md={12} key={`panel0`}>\n                  <div className={classes.infoDetails}>\n                    <ul className={classes.ul}>\n                      {/* Restore Functionality ******************************************* */}\n                      <li\n                        hidden={\n                          !(\n                            restoreMode.restore &&\n                            restoreMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <div\n                          style={{\n                            fontWeight: \"500\",\n                            paddingBottom: \"5px\",\n                            paddingLeft: \"5px\",\n                            fontSize: \"16px\",\n                            color: \"#333\",\n                          }}\n                        >\n                          Are you sure you want to restore this record?\n                        </div>\n                      </li>\n\n                      <li\n                        hidden={\n                          !booking.deleted ||\n                          (restoreMode.restore &&\n                            restoreMode.person._id === booking._id)\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"primary\"\n                          onClick={() => {\n                            handleRestoreModeChanged(true, booking);\n                          }}\n                          className={classes.RestoreButton}\n                        >\n                          Restore This Record\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            restoreMode.restore &&\n                            restoreMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"primary\"\n                          disabled={restoring}\n                          onClick={() => {\n                            handleRestoreModeChanged(false, booking);\n                          }}\n                          className={classes.SaveButton}\n                        >\n                          YES, Restore this!\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            restoreMode.restore &&\n                            restoreMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"default\"\n                          disabled={restoring}\n                          onClick={() => {\n                            handleRestoreModeChanged(false, null);\n                          }}\n                          className={classes.CancelButton}\n                        >\n                          Cancel\n                        </Button>\n                      </li>\n\n                      {/*  ******************************************************************* */}\n\n                      {/* Edit Functionality ******************************************* */}\n\n                      <li\n                        hidden={\n                          booking.deleted ||\n                          deleteMode.delete ||\n                          (editMode.edit && editMode.person._id === booking._id)\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"primary\"\n                          onClick={() => {\n                            handleEditModeChanged(true, booking);\n                          }}\n                          className={classes.EditButton}\n                        >\n                          Edit Booking Info\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            editMode.edit && editMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"primary\"\n                          disabled={saving || !recordChanged}\n                          onClick={() => {\n                            handleEditModeChanged(false, booking);\n                          }}\n                          className={classes.SaveButton}\n                        >\n                          Save Changes\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            editMode.edit && editMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"default\"\n                          disabled={saving}\n                          onClick={() => {\n                            handleEditModeChanged(false, null);\n                          }}\n                          className={classes.CancelButton}\n                        >\n                          Cancel\n                        </Button>\n                      </li>\n\n                      {/* ****************************************************************************************** */}\n\n                      {/* Delete Functionality ******************************************* */}\n\n                      <li\n                        hidden={\n                          !(\n                            deleteMode.delete &&\n                            deleteMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <div\n                          style={{\n                            fontWeight: \"600\",\n                            paddingBottom: \"5px\",\n                            paddingLeft: \"5px\",\n                            fontSize: \"16px\",\n                          }}\n                        >\n                          Are you sure you want to delete this record?\n                        </div>\n                      </li>\n\n                      <li\n                        hidden={\n                          props.deleteButtonDisabled ||\n                          booking.deleted ||\n                          editMode.edit ||\n                          (deleteMode.delete &&\n                            deleteMode.person._id === booking._id)\n                        }\n                      >\n                        {booking.OTCCharges > 0 && (\n                          <Tooltip title={\"Paid Records Cannot be Deleted!\"}>\n                            <div>\n                              <Button\n                                disabled={booking.OTCCharges > 0}\n                                type=\"button\"\n                                fullWidth\n                                variant=\"contained\"\n                                color=\"primary\"\n                                onClick={() => {\n                                  handleDeleteModeChanged(true, booking);\n                                }}\n                                className={classes.DeleteButton}\n                              >\n                                Delete This Record\n                              </Button>\n                            </div>\n                          </Tooltip>\n                        )}\n                        {booking.OTCCharges === 0 && (\n                          <Button\n                            disabled={booking.OTCCharges > 0}\n                            type=\"button\"\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={() => {\n                              handleDeleteModeChanged(true, booking);\n                            }}\n                            className={classes.DeleteButton}\n                          >\n                            Delete This Record\n                          </Button>\n                        )}\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            deleteMode.delete &&\n                            deleteMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"primary\"\n                          disabled={deleting}\n                          onClick={() => {\n                            handleDeleteModeChanged(false, booking);\n                          }}\n                          className={classes.SaveButton}\n                        >\n                          YES, Delete this!\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            deleteMode.delete &&\n                            deleteMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"default\"\n                          disabled={deleting}\n                          onClick={() => {\n                            handleDeleteModeChanged(false, null);\n                          }}\n                          className={classes.CancelButton}\n                        >\n                          Cancel\n                        </Button>\n                      </li>\n\n                      {/* ****************************************************************************************** */}\n\n                      <li className={classes.li}>\n                        <Grid container spacing={2}>\n                          <Grid item xs={6}>\n                            <span className={classes.infoTitle}>\n                              BOOKED DATE\n                            </span>\n\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {FormatDateFromString(booking.bookingDate)}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                error={validationError.bookingDateError}\n                                className={classes.TextBox}\n                                value={bookingDate}\n                                onChange={bookingDateChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n                          <Grid item xs={6}>\n                            <span className={classes.infoTitle}>\n                              BOOKED TIME\n                            </span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {booking.bookingTime.toUpperCase()}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                error={validationError.bookingTimeError}\n                                className={classes.TextBox}\n                                value={bookingTime}\n                                onChange={bookingTimeChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n                        </Grid>\n                      </li>\n\n                      <li className={classes.li}>\n                        <Grid container spacing={2}>\n                          <Grid item xs={6}>\n                            <span className={classes.infoTitle}>FULLNAME</span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {booking.fullname}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                className={classes.TextBox}\n                                value={fullname}\n                                onChange={fullnameChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n                          <Grid item xs={6}>\n                            <span className={classes.infoTitle}>EMAIL</span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {booking.email}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                className={classes.TextBox}\n                                value={email}\n                                onChange={emailChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n                        </Grid>\n                      </li>\n                      <li className={classes.li}>\n                        <Grid container spacing={2}>\n                          <Grid item xs={6}>\n                            <span className={classes.infoTitle}>TEL</span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {booking.phone?.toUpperCase()}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                className={classes.TextBox}\n                                value={tel}\n                                onChange={telChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n                          <Grid item xs={6}>\n                            <span className={classes.infoTitle}>NOTES</span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {booking.notes}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                className={classes.TextBox}\n                                value={notes}\n                                onChange={notesChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n                        </Grid>\n                      </li>\n\n                      <li className={classes.li} style={{paddingTop:\"20px\"}}>\n                      <span className={classes.infoTitle}>Service</span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {booking.package?.toUpperCase()}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                className={classes.TextBox}\n                                value={service}\n                                onChange={serviceChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n\n                      </li>\n\n                      <li className={classes.li} style={{ paddingTop: \"20px\" }}>\n                        <span className={classes.infoTitle}>STATUS</span>{\" \"}\n                        {getStatusLabel(booking.status)}\n                        {booking.status === \"patient_attended\" &&\n                          !(\n                            editMode.edit && editMode.person._id === booking._id\n                          ) &&\n                          !booking.deleted && (\n                            <Button\n                              variant=\"outlined\"\n                              color=\"primary\"\n                              disabled={saving}\n                              style={{ width: \"300px\" }}\n                              onClick={(event) =>\n                                changeBackToBookingMade(event, booking._id)\n                              }\n                            >\n                              Change Back To Booking Made\n                            </Button>\n                          )}\n                        {booking.status === \"booked\" &&\n                          !(\n                            editMode.edit && editMode.person._id === booking._id\n                          ) &&\n                          !booking.deleted && (\n                            <Button\n                              variant=\"outlined\"\n                              color=\"default\"\n                              disabled={saving}\n                              style={{ width: \"300px\" }}\n                              onClick={(event) =>\n                                changeToPatientAttended(event, booking._id)\n                              }\n                            >\n                              Change To Patient Attended\n                            </Button>\n                          )}\n                      </li>\n\n                      <li hidden={booking.deleted || editMode.edit}>\n                        <Button\n                          disabled={!booking.formData}\n                          startIcon={<PrintIcon />}\n                          type=\"button\"\n                          fullWidth\n                          variant=\"outlined\"\n                          color=\"primary\"\n                          onClick={() => {\n                            downloadRegForm(booking._id);\n                          }}\n                          className={classes.DownloadForm}\n                        >\n                          Download Registration Form\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          booking.deleted || editMode.edit || booking.formData\n                        }\n                      >\n                        <Button\n                          disabled={!booking.email || booking.email.length < 3}\n                          startIcon={<SendIcon />}\n                          type=\"button\"\n                          fullWidth\n                          variant=\"outlined\"\n                          color=\"primary\"\n                          onClick={() => {\n                            sendRegForm(booking._id);\n                          }}\n                          className={classes.DownloadForm}\n                          style={{ position: \"relative\" }}\n                        >\n                          Send Registration Form Email\n                          {emailSent && (\n                            <div\n                              style={{\n                                position: \"absolute\",\n                                right: \"10px\",\n                                top: \"5px\",\n                                color: \"#05ad19\",\n                              }}\n                            >\n                              Email Sent\n                            </div>\n                          )}\n                        </Button>\n                      </li>\n\n                      <Divider />\n\n                      <li className={classes.li} style={{ marginTop: \"20px\" }}>\n                        <span className={classes.infoTitle}>INVOICE # : </span>{\" \"}\n                        <span style={{ paddingLeft: \"0px\" }}>\n                          {!invoiceLoaded && (\n                            <span className={classes.invoiceNumber}> ... </span>\n                          )}\n                          {invoiceLoaded && invoice && (\n                            <span className={classes.invoiceNumber}>\n                              {\" \"}\n                              {invoice.invoiceNumber}{\" \"}\n                            </span>\n                          )}\n                          {invoiceLoaded && !invoice && (\n                            <span\n                              className={classes.invoiceNumber}\n                              style={{ color: \"red\", fontSize: \"0.9rem\" }}\n                            >\n                              {\" \"}\n                              N/A{\" \"}\n                            </span>\n                          )}\n                        </span>\n                        {!(\n                          editMode.edit && editMode.person._id === booking._id\n                        ) &&\n                          !booking.deleted && (\n                            <React.Fragment>\n                              {invoiceLoaded && !invoice && (\n                                <Button\n                                  variant=\"outlined\"\n                                  color=\"primary\"\n                                  className={classes.PayButton}\n                                  onClick={() => OpenInvoiceDialog()}\n                                >\n                                  Issue Invoice\n                                </Button>\n                              )}\n\n                              {invoiceLoaded && invoice && (\n                                <React.Fragment>\n                                  <Button\n                                    variant=\"outlined\"\n                                    startIcon={<PrintIcon />}\n                                    color=\"primary\"\n                                    className={classes.printInvoiceButton}\n                                    onClick={() => downloadInvoice(invoice._id)}\n                                  >\n                                    Download Invoice\n                                  </Button>\n\n                                  <Button\n                                    variant=\"outlined\"\n                                    color=\"secondary\"\n                                    className={classes.editInvoiceButton}\n                                    onClick={() => OpenInvoiceDialog()}\n                                  >\n                                    Edit Invoice\n                                  </Button>\n\n                                  <Button\n                                    disabled={\n                                      !booking.email || booking.email.length < 3\n                                    }\n                                    startIcon={<SendIcon />}\n                                    type=\"button\"\n                                    variant=\"outlined\"\n                                    color=\"primary\"\n                                    onClick={() => {\n                                      sendInvoiceEmail(\n                                        invoice._id,\n                                        booking.email\n                                      );\n                                    }}\n                                    style={{\n                                      position: \"relative\",\n                                      marginLeft: \"10px\",\n                                      paddingRight: \"130px\",\n                                      fontSize: \"0.8rem\",\n                                    }}\n                                  >\n                                    Send Invoice By Email\n                                    {emailSentInvoice && (\n                                      <div\n                                        style={{\n                                          position: \"absolute\",\n                                          right: \"10px\",\n                                          top: \"5px\",\n                                          color: \"#05ad19\",\n                                        }}\n                                      >\n                                        Email Sent\n                                      </div>\n                                    )}\n                                  </Button>\n                                </React.Fragment>\n                              )}\n                            </React.Fragment>\n                          )}\n                      </li>\n\n                      <li className={classes.li} style={{ marginTop: \"20px\" }}>\n                        <span className={classes.infoTitle}>TOTAL CHARGES</span>{\" \"}\n                        <span\n                          style={{ paddingLeft: \"15px\" }}\n                          className={\n                            !booking.OTCCharges || booking.OTCCharges === 0\n                              ? classes.infoDataChargesHigher\n                              : classes.infoDataCharges\n                          }\n                        >{`£${booking.OTCCharges.toLocaleString(\n                          \"en-GB\"\n                        )}`}</span>\n                        {!(\n                          editMode.edit && editMode.person._id === booking._id\n                        ) &&\n                          !booking.paid &&\n                          !booking.deleted && (\n                            <Button\n                              variant=\"outlined\"\n                              color=\"secondary\"\n                              className={classes.PayButton}\n                              onClick={(event) => Pay()}\n                            >\n                              Pay\n                            </Button>\n                          )}\n                        {!(\n                          editMode.edit && editMode.person._id === booking._id\n                        ) &&\n                          booking.paid && (\n                            <React.Fragment>\n                              <span className={classes.PayLabel}>\n                                {\" \"}\n                                <CheckIcon\n                                  className={classes.checkIconSmall}\n                                />{\" \"}\n                                Paid by {booking.paidBy}\n                                {booking.paidBy === \"corporate\"\n                                  ? ` \"${booking.corporate}\" `\n                                  : \"\"}\n                              </span>\n\n                              <Tooltip title=\"Undo Payment\">\n                                <IconButton\n                                  onClick={() => setOpenUndoPayDialog(true)}\n                                >\n                                  <UndoIcon style={{ color: \"red\" }} />\n                                </IconButton>\n                              </Tooltip>\n                            </React.Fragment>\n                          )}\n                      </li>\n\n                      {/* <li className={classes.li}>\n                        <div\n                          style={{\n                            borderTop: \"1px solid #ddd\",\n                            paddingTop: \"10px\",\n                          }}\n                        >\n                          <span className={classes.infoTitle}>\n                            TOTAL CHARGES\n                          </span>{\" \"}\n                          <span\n                            className={\n                              !booking.OTCCharges || booking.OTCCharges === 0\n                                ? classes.infoDataChargesHigher\n                                : classes.infoDataCharges\n                            }\n                          >{`£${(\n                            booking.deposit + booking.OTCCharges\n                          ).toLocaleString(\"en-GB\")}`}</span>\n                        </div>\n                      </li> */}\n                    </ul>\n                  </div>\n                </Grid>\n              </div>\n              <Backdrop\n                className={classes.backdrop}\n                open={saving || deleting || restoring}\n              >\n                <CircularProgress color=\"inherit\" />\n              </Backdrop>\n            </DialogContent>\n\n            <PayDialog\n              booking={selectedBooking}\n              open={openPayDialog}\n              price={invoice ? invoice.grandTotal : null}\n              handleClose={handleClosePayDialog}\n            />\n\n            <InvoiceDialog\n              booking={selectedBooking}\n              invoice={invoice}\n              open={openInvoiceDialog}\n              handleClose={handleCloseInvoiceDialog}\n            />\n          </Dialog>\n\n          <Dialog\n            open={openUndoPayDialog}\n            onClose={handleCloseUndoPayDialog}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n          >\n            <DialogTitle style={{ color: \"#999\" }} id=\"alert-dialog-title\">\n              {\"Undo Payment\"}\n            </DialogTitle>\n            <DialogContent>\n              <DialogContentText\n                style={{ color: \"#333\", fontWeight: \"400\" }}\n                id=\"alert-dialog-description\"\n              >\n                Are you sure you want to undo payment for this booking?\n              </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={handleCloseUndoPayDialog} color=\"default\">\n                Back\n              </Button>\n              <Button onClick={undoPaymentClicked} color=\"secondary\" autoFocus>\n                Yes, Undo Payment\n              </Button>\n            </DialogActions>\n          </Dialog>\n\n          <Dialog\n            open={openRefundDialog}\n            onClose={handleCloseRefundDialog}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n          >\n            <DialogTitle style={{ color: \"#999\" }} id=\"alert-dialog-title\">\n              {\"Refund Deposit\"}\n            </DialogTitle>\n            <DialogContent>\n              <DialogContentText\n                style={{ color: \"#333\", fontWeight: \"400\" }}\n                id=\"alert-dialog-description\"\n              >\n                Are you sure you want to refund deposit payment for this\n                booking?\n              </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={handleCloseRefundDialog} color=\"default\">\n                Back\n              </Button>\n              <Button\n                onClick={refundPaymentClicked}\n                color=\"secondary\"\n                autoFocus\n              >\n                Yes, Refund Payment\n              </Button>\n            </DialogActions>\n          </Dialog>\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n}\n","import React, {useEffect, useRef, useState} from 'react';\nimport { DataGrid } from '@material-ui/data-grid';\nimport BookService from './services/BookService';\nimport { Button, Checkbox, CircularProgress, Dialog, DialogContent, DialogTitle, Divider, FormControl, FormControlLabel, Grid, Icon, InputLabel, LinearProgress, Link, makeStyles, MenuItem, Paper, Select, SvgIcon, Switch, TextField, Tooltip } from '@material-ui/core';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport { IconButton } from '@material-ui/core';\nimport CheckIcon from '@material-ui/icons/Check';\nimport CloseIcon from '@material-ui/icons/Close';\nimport GlobalState from './../GlobalState';\nimport { getMenuIndex } from './../MenuList';\nimport {FormatDateFromString, FormatDateFromStringShortYear} from './DateFormatter';\n\nimport SearchIcon from '@material-ui/icons/Search';\nimport BookingDialog from './BookingDialog';\n\nimport NewReleasesIcon from '@material-ui/icons/NewReleases';\nimport HistoryIcon from '@material-ui/icons/History';\nimport TimelineIcon from '@material-ui/icons/Timeline';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport AutorenewIcon from '@material-ui/icons/Autorenew';\nimport LiveTvIcon from '@material-ui/icons/LiveTv';\nimport PlaylistAddCheckIcon from '@material-ui/icons/PlaylistAddCheck';\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport HourglassEmptyIcon from '@material-ui/icons/HourglassEmpty';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faFileExcel } from \"@fortawesome/free-solid-svg-icons\";\nimport Draggable from 'react-draggable';\n\nimport * as dateformat from 'dateformat';\n\nimport DateFnsUtils from '@date-io/date-fns';\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardTimePicker,\n  KeyboardDatePicker,\n} from '@material-ui/pickers';\n\nimport BusinessIcon from '@material-ui/icons/Business';\nimport CreditCardIcon from '@material-ui/icons/CreditCard';\nimport LocalAtmIcon from '@material-ui/icons/LocalAtm';\n\n\nimport ReactHTMLTableToExcel from 'react-html-table-to-excel';\nimport PriceCalculator from './PriceCalculator';\nimport { corporates } from './Corporates';\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    marginTop: theme.spacing(0),\n    marginBottom: theme.spacing(1),\n\n  },\n  \n  refreshButton:{\n    marginLeft: theme.spacing(2),\n  },\n\n  checkIcon:{\n    color: \"green\"\n  },\n\n  closeIcon:{\n    color: \"red\"\n  },\n\n  RefLink: {\n    cursor: \"pointer\"\n  },\n\n  BookedLabel:{\n    backgroundColor: \"#606060\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  PatientAttendedLabel:{\n    backgroundColor: \"#0066aa\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  SampleTakenLabel:{\n    backgroundColor: \"#0066cc\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  ReportSentLabel:{\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  ReportCertSentLabel:{\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  PositiveLabel:{\n    backgroundColor: \"red\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  HideNowRows: {\n    position: \"absolute\",\n    top: \"40%\",\n    left: \"40%\",\n    width: \"600px\",\n    height: \"300px\",\n    backgroundColor : \"#fafafa\",\n    color : \"#111\",\n    zIndex: \"1000\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyItems: \"center\"\n  },\n\n  ExportToExcelButton:\n  {\n    // marginBottom : \"20px\",\n    color : \"#2f942e\",\n    borderColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"#fafffa\",\n      borderColor: \"#2f942e\",\n    },\n    textDecoration : \"none !important\", \n   \n  },\n\n  ExportToExcelButtonInline:\n  {\n    // marginBottom : \"20px\",\n    color : \"#2f942e\",\n    borderColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"#fafffa\",\n      borderColor: \"#2f942e\",\n    },\n    textDecoration : \"none !important\", \n    cursor: \"pointer\",\n    padding: \"10px\"\n   \n  },\n\n  table: {\n    width: \"100%\",\n    border: \"1px solid #ddd\",\n    borderCollapse: \"collapse\",\n},\n\nth: {\n    border: \"1px solid #ddd\",\n    borderCollapse: \"collapse\",\n    verticalAlign: \"middle\",\n    fontcolor: \"#555\",\n    fontWeight: \"400\",\n    fontSize: \"15px\",\n    paddingTop: \"5px\",\n    paddingBottom: \"5px\",\n    width: \"14%\",\n    paddingLeft: \"5px\",\n},\n\ntd: {\n    border: \"1px solid #ddd\",\n    borderCollapse: \"collapse\",\n    verticalAlign: \"middle\",\n    paddingLeft: \"5px\",\n},\n\ntopSelect: {\n  margin: theme.spacing(1),\n  minWidth: 80,\n},\n\nnotifyIcon:{\n  width: \"16px\",\n  height: \"16px\",\n  borderRadius: \"50%\",\n  backgroundColor : \"rgb(220, 0, 78)\",\n  marginLeft: \"10px\"\n}\n\n}));\n\nconst getTableTitle = (str) =>{\n\n  if (str === 'today')\n  {\n    return `Today's Bookings`;\n  }else if (str === 'old')\n  {\n    return `Old Bookings`;\n  }else if (str === 'future')\n  {\n    return `Future Bookings`;\n  }else if (str === 'recent')\n  {\n    return `Recent Bookings`;\n  }else if (str === 'live')\n  {\n    return `Live Bookings`;\n  }else if (str === 'completed')\n  {\n    return `Completed Bookings`;\n  }else if (str === 'positive')\n  {\n    return `Positive Results`;\n  }else if (str === 'deleted')\n  {\n    return `Deleted Records`;\n  }else if (str === 'late')\n  {\n    return `40 Hours Late`;\n  }\n  \n  else\n  {\n    return `All Bookings`;\n  }\n\n}\n\nconst getTableIcon = (str) =>{\n\n  if (str === 'today')\n  {\n    return <NewReleasesIcon style={{fontSize:\"2.2rem\"}} />;\n  }else if (str === 'old')\n  {\n    return <HistoryIcon style={{fontSize:\"2.2rem\"}} />;\n  }else if (str === 'future')\n  {\n    return <TimelineIcon style={{fontSize:\"2.2rem\"}} />;\n  }else if (str === 'recent')\n  {\n    return <AutorenewIcon style={{fontSize:\"2.2rem\"}} />;\n  }else if (str === 'live')\n  {\n    return <LiveTvIcon style={{fontSize:\"2.2rem\"}} />;\n  }else if (str === 'completed')\n  {\n    return  <PlaylistAddCheckIcon style={{fontSize:\"2.2rem\"}} />;\n  }else if (str === 'positive')\n  {\n    return <AddCircleOutlineIcon style={{fontSize:\"2.2rem\"}} />\n  }else if (str === 'deleted')\n  {\n    return <DeleteIcon style={{fontSize:\"2.2rem\"}} />;\n  }else if (str === 'late')\n  {\n    return <HourglassEmptyIcon style={{fontSize:\"2.2rem\"}} />;\n  }\n  \n  else\n  {\n    return <DescriptionIcon style={{fontSize:\"2.2rem\"}} />;\n  }\n\n}\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'}>\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nexport default function BookingTable(props) {\n  \n  const classes = useStyles();\n\n  const [topCount, setTopCount] = React.useState(25)\n  const topCountChanged = (event) =>\n  {\n    setTopCount(event.target.value)\n    loadData(event.target.value)\n  }\n  \n\n  const [openDialogExcel, setOpenDialogExcel] = useState(false);\n  const handleCloseDialogExcel = () =>\n  {\n    setCorporate(corporates[0]);\n    setJustCorporate(false);\n    setOpenDialogExcel(false);\n  }\n\n\n  const [fromDate, setFromDate] = React.useState(new Date(new Date().getTime() - 7 * 24 * 60 * 60 * 1000 ));\n  const handleFromDateChange = (date) => {\n    setFromDate(date);\n    setFromDateStr(dateformat(date,'yyyy-mm-dd'));\n  };\n\n  const [untilDate, setUntilDate] = React.useState(new Date(new Date().getTime() - 1 * 24 * 60 * 60 * 1000 ));\n  const handleUntilDateChange = (date) => {\n    setUntilDate(date);\n    seUntilDateStr(dateformat(date,'yyyy-mm-dd'));\n  };\n\n  const [fromDateStr, setFromDateStr] = useState(dateformat(new Date(new Date().getTime() - 7 * 24 * 60 * 60 * 1000 ), 'yyyy-mm-dd'));\n  const [untilDateStr, seUntilDateStr] = useState(dateformat(new Date(new Date().getTime() - 1 * 24 * 60 * 60 * 1000 ), 'yyyy-mm-dd'));\n\n  const [justCorporate, setJustCorporate] = useState(false);\n\n  const[chkDate, setChkDate] = useState(true);\n  const[chkForename, setChkForename] = useState(true);\n  const[chkSurname, setChkSurname] = useState(true);\n  const[chkDOB, setChkDOB] = useState(true);\n  const[chkEmail, setChkEmail] = useState(true);\n  const[chkTel, setChkTel] = useState(true);\n  const[chkCertificate, setChkCertidicate] = useState(true);\n  const[chkAntiBodyTest, setChkAntiBodyTest] = useState(true);\n  const[chkextRef, setChkExtRef] = useState(true);\n  const[chkPrice, setChkPrice] = useState(true);\n\n  const justCorporateChanged = (event) =>\n  {\n    setJustCorporate(event.target.checked);\n  }\n  \n\n  const chkDateChanged = (event) =>\n  {\n    setChkDate(event.target.checked);\n  }\n\n  const chkForenameChanged = (event) =>\n  {\n    setChkForename(event.target.checked);\n  }\n\n  const chkSurnameChanged = (event) =>\n  {\n    setChkSurname(event.target.checked);\n  }\n\n  const chkDOBChanged = (event) =>\n  {\n    setChkDOB(event.target.checked);\n  }\n\n  const chkEmailChanged = (event) =>\n  {\n    setChkEmail(event.target.checked);\n  }\n\n  const chkTelChanged = (event) =>\n  {\n    setChkTel(event.target.checked);\n  }\n\n  const chkCertificateChanged = (event) =>\n  {\n    setChkCertidicate(event.target.checked);\n  }\n\n  const chkAntiBodyTestChanged = (event) =>\n  {\n    setChkAntiBodyTest(event.target.checked);\n  }\n\n  const chkextRefChanged = (event) =>\n  {\n    setChkExtRef(event.target.checked);\n  }\n\n  const chkPriceChanged = (event) =>\n  {\n    setChkPrice(event.target.checked);\n  }\n\n\n\n  var columns = [];\n\n  if (props.date === 'recent')\n  {\n    columns = [\n      // { field: 'id', headerName: '#', width: 70 },\n  \n      {field: '_id', headerName:' ', width: 70, renderCell: (params) =>{\n          return (\n\n           <React.Fragment>\n\n                <Button \n                        color=\"primary\"\n                        onClick = {event => openDetailsDialog(event, params.value)}\n                > \n            \n            <SearchIcon/> \n            \n            </Button>\n\n           </React.Fragment>\n\n          \n  \n          ); \n      \n        }\n      },\n\n      { field: 'paid', headerName: 'Paid', align: 'center' , width: 90, renderCell: (params) => { \n        if (!params.value)\n        {\n           return ( \n              <React.Fragment>                    \n                    <CloseIcon className={classes.closeIcon}/>                        \n              </React.Fragment>\n           );\n        }\n        else\n        {\n           if (params.getValue('paidBy') === 'credit card')\n           {\n             return ( <CreditCardIcon className={classes.checkIcon}/> );\n           }\n           else if (params.getValue('paidBy') === 'cash')\n           {\n             return ( <LocalAtmIcon className={classes.checkIcon}/> );\n           }\n           else if (params.getValue('paidBy') === 'corporate')\n           {\n             return ( <BusinessIcon className={classes.checkIcon}/> );\n           }\n           else\n           {\n             return '';  \n           }\n        }\n  }\n },\n\n\n      { field: 'timeStamp', headerName: 'TimeStamp', width: 200, valueFormatter: (params) => { \n        return formatTimeStamp(params.value);\n        }\n      },\n  \n      { field: 'bookingDate', headerName: 'B Date', width: 110, valueFormatter: (params) => { \n              return FormatDateFromString(params.value);\n          }\n       },\n      { field: 'bookingTimeNormalized', headerName: 'B Time', width: 105 , valueGetter: (params) => {\n        return params.getValue('bookingTime');\n      }},\n      { field: 'status', headerName: 'Status', width: 100, renderCell: (params) =>{\n          if (params.value === 'booked')\n          {\n            return (\n              <span className={classes.BookedLabel}>  BM </span>\n            );\n        \n          }else if (params.value === 'patient_attended')\n          {\n            return (\n              <span  className={classes.PatientAttendedLabel}> PA </span>\n            );\n          }\n          else{\n            return 'Unknown';\n          }\n        }\n      },\n      { field: 'bookingRef', headerName: 'Ref No.', width: 120 , renderCell: (params) =>{\n        return (\n          <Tooltip title=\"Go Find By Ref\" placement=\"right\">\n              <Link className={classes.RefLink}\n              //  onClick={\n              //   () => {\n              //     console.log(params.value);\n  \n              //     setState(state => ({...state, currentMenuIndex: getMenuIndex(`pcr` , `findByRef`)}));\n              //     setState(state => ({...state, ref : params.value}));\n              //     setState(state => ({...state, refError : false})); \n              //     setState(state => ({...state, foundRecords : []}));\n              //     setState(state => ({...state, findRecords : !state.findRecords}));\n              //   }\n              // }\n              \n              >\n                {params.value}\n              </Link>\n          </Tooltip>\n  \n        );\n      }},\n      { field: 'fullname', headerName: 'Fullname', width: 250 },\n      { field: 'email', headerName: 'Email', width: 200 },\n      { field: 'phone', headerName: 'Tel', width: 150 },\n      { field: 'package', headerName: 'Service', width: 200 },\n      { field: 'notes', headerName: 'Notes', width: 500 },\n    \n    ];\n\n  }\n  else\n  {\n    columns = [\n      // { field: 'id', headerName: '#', width: 70 },\n  \n      {field: '_id', headerName:' ', width: 70, renderCell: (params) =>{\n          return (\n            <React.Fragment>\n\n                <Button \n                        color=\"primary\"\n                        onClick = {event => openDetailsDialog(event, params.value)}\n                > \n            \n            <SearchIcon/> \n            \n            </Button>\n\n           </React.Fragment>\n  \n          ); \n      \n        }\n      },\n\n      { field: 'paid', headerName: 'Paid', align: 'center' , width: 90, renderCell: (params) => { \n               if (!params.value)\n               {\n                  return ( \n                    <React.Fragment>\n                                <CloseIcon className={classes.closeIcon}/> \n                                {parseInt(params.getValue('deposit')) > 0 && props.date === 'deleted' && (\n                                      <span className={classes.notifyIcon}>&nbsp;</span>\n                                )}\n\n                               \n                    </React.Fragment>\n                     \n                        \n                  \n                  \n                  );\n               }\n               else\n               {\n                  if (params.getValue('paidBy') === 'credit card')\n                  {\n                    return ( <CreditCardIcon className={classes.checkIcon}/> );\n                  }\n                  else if (params.getValue('paidBy') === 'cash')\n                  {\n                    return ( <LocalAtmIcon className={classes.checkIcon}/> );\n                  }\n                  else if (params.getValue('paidBy') === 'corporate')\n                  {\n                    return ( <BusinessIcon className={classes.checkIcon}/> );\n                  }\n                  else\n                  {\n                    return '';  \n                  }\n               }\n         }\n        },\n        { field: 'bookingDate', headerName: 'B Date', width: 110, valueFormatter: (params) => { \n          return FormatDateFromString(params.value);\n      }\n   },\n  { field: 'bookingTimeNormalized', headerName: 'B Time', width: 105 , valueGetter: (params) => {\n    return params.getValue('bookingTime');\n  }},\n  { field: 'status', headerName: 'Status', width: 100, renderCell: (params) =>{\n      if (params.value === 'booked')\n      {\n        return (\n          <span className={classes.BookedLabel}>  BM </span>\n        );\n    \n      }else if (params.value === 'patient_attended')\n      {\n        return (\n          <span  className={classes.PatientAttendedLabel}> PA </span>\n        );\n      }\n      else{\n        return 'Unknown';\n      }\n    }\n  },\n  { field: 'bookingRef', headerName: 'Ref No.', width: 120 , renderCell: (params) =>{\n    return (\n      <Tooltip title=\"Go Find By Ref\" placement=\"right\">\n          <Link className={classes.RefLink}\n          //  onClick={\n          //   () => {\n          //     console.log(params.value);\n\n          //     setState(state => ({...state, currentMenuIndex: getMenuIndex(`pcr` , `findByRef`)}));\n          //     setState(state => ({...state, ref : params.value}));\n          //     setState(state => ({...state, refError : false})); \n          //     setState(state => ({...state, foundRecords : []}));\n          //     setState(state => ({...state, findRecords : !state.findRecords}));\n          //   }\n          // }\n          \n          >\n            {params.value}\n          </Link>\n      </Tooltip>\n\n    );\n  }},\n  { field: 'fullname', headerName: 'Fullname', width: 250 },\n  { field: 'email', headerName: 'Email', width: 200 },\n  { field: 'phone', headerName: 'Tel', width: 150 },\n  { field: 'package', headerName: 'Service', width: 200 },\n  { field: 'notes', headerName: 'Notes', width: 500 },\n\n    \n    ];\n  \n\n  }\n\n\n\n  const [state, setState] = React.useContext(GlobalState);  \n\n  const [data, setData] = React.useState({bookings: [] , cachedBookings: [], isFetching : true});\n\n  const [selectedRow, setSelectedRow] = React.useState(null);\n\n  const [selectedBooking, setSelectedBooking] = React.useState(null);\n  const [seeDetailsDialogOpen, setSeeDetailsDialogOpen] = React.useState(false);\n\n  const [corporate, setCorporate] = useState(corporates[0]);\n  const corporateChanged = (event) =>\n  {\n    setCorporate(event.target.value);\n  }\n  \n\n  const [filter,setFilter] = React.useState('');\n\n\n  const lastPromise = useRef();\n\n  const formatTimeStamp = (timeStamp) =>\n  {\n    const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\n    const timeStampStr = dateformat(timeStamp, 'yyyy-mm-dd');\n    if (todayStr === timeStampStr)\n    {\n      return dateformat(timeStamp, \"'Today', h:MM:ss TT\");\n    }\n    else\n    {\n       return dateformat(timeStamp, \"mmm dS, h:MM:ss TT\");\n    }\n  }\n\n  const loadData = (top) =>\n  {\n    var api = BookService.getAllBookings;\n    if (props.date === 'today')\n    {\n      api = BookService.getTodayBookings;\n    }else if (props.date === 'old')\n    {\n      api = BookService.getOldBookings;\n    }else if (props.date === 'future')\n    {\n      api = BookService.getFutureBookings;\n    }else if (props.date === 'recent')\n    {\n      api = BookService.getRecentBookingsAll;\n    }\n    else if (props.date === 'deleted')\n    {\n      api = BookService.getDeletedBookings;\n    }\n     \n    setData({bookings: [], cachedBookings: [], isFetching: true});\n   \n    // console.log(props)\n\n    const currentPromise = api(top).then( (res) =>{\n      // console.log(res)\n      for (var i=0; i < res.data.length; i++)\n      {\n        res.data[i] = {...res.data[i], id : i + 1}\n      }  \n      setData({bookings: [...res.data], cachedBookings: [...res.data], isFetching: false});\n      // return res.data;\n    }).catch(err => {\n      console.error(err)\n    })\n\n    // lastPromise.current = currentPromise;\n\n    // currentPromise.then(\n    //   result => {\n    //     if (currentPromise === lastPromise.current) {\n    //       setData({bookings: [...result], cachedBookings: [...result], isFetching: false});\n    //       setPage(1);\n    //     }\n    //   },\n    //   e => {\n    //     if (currentPromise === lastPromise.current) {\n    //         console.error(e);\n    //         setData({bookings: data.bookings, cachedBookings: data.cachedBookings, isFetching: false});\n    //     }\n    //   });\n\n  }\n\n  useEffect( () => {\n            setTopCount(25)\n            loadData(25)\n        },\n        [props.date]);\n\n\n\n\n  useEffect( () => {\n\n        if (filter && filter.trim().length > 0)\n        {\n          var filteredData = data.cachedBookings.filter( (element) => \n\n             (element.fullname.toLowerCase().indexOf(filter.toLowerCase()) >= 0)\n               \n              \n          );\n  \n  \n          setData({bookings: [...filteredData], cachedBookings: data.cachedBookings, isFetching: false});\n        }else\n        {\n          setData({bookings: [...data.cachedBookings], cachedBookings: data.cachedBookings, isFetching: false});\n        }\n      },\n      [filter]);\n\n  \n      useEffect(() => {\n\n       loadData(topCount)\n    \n      }, [state.bookingDialogDataChanged]);    \n\n\n  const handleCloseSeeDetaisDialog = () =>\n  {\n    setSelectedBooking(null);\n    setSeeDetailsDialogOpen(false);\n  }    \n  \n  const openDetailsDialog = (event, id) =>\n  {\n    const booking = data.bookings.find(element => element._id === id);\n    setSelectedBooking(booking);\n    setSeeDetailsDialogOpen(true);\n\n  }\n\n  const refreshClicked = (event) =>{\n    setFilter('');\n    loadData(topCount)\n  }\n\n  const filterChanged = (event) =>{\n    setFilter(event.target.value);\n  }\n\n  const handleSelectionChanged = (newSelection) =>\n  {\n    if (newSelection.length > 0){\n      setSelectedRow(newSelection.rows[0]);\n    }\n    \n  }\n\n  const [page, setPage] = React.useState(1);\n\n  const handleExcelButtonClicked = (event) =>\n  {\n    setOpenDialogExcel(true);\n  }\n\n  const isTopSelectHidden = (date)=>\n  {\n    return date === 'live' || date === 'positive' || date === 'late' || date === 'today'\n  }\n\n\n  return (\n    <React.Fragment>\n      {data.isFetching && (\n        <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\n          <LinearProgress color=\"primary\" />\n        </div>\n      )}\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"space-between\"\n        alignItems=\"flex-end\"\n      >\n        <Grid item md={4}>\n          <div style={{ textAlign: \"left\", paddingLeft: \"10px\" }}>\n            <Grid\n              container\n              direction=\"row\"\n              justify=\"flex-start\"\n              alignItems=\"center\"\n            >\n              <Grid item>\n                <span style={{ paddingRight: \"15px\", color: \"#555\" }}>\n                  {\" \"}\n                  {getTableIcon(props.date)}{\" \"}\n                </span>\n              </Grid>\n              <Grid item>\n                <span\n                  style={{\n                    fontSize: \"1.4rem\",\n                    fontWeight: \"600\",\n                    color: \"#444\",\n                  }}\n                >\n                  {\" \"}\n                  {getTableTitle(props.date)}{\" \"}\n                </span>\n              </Grid>\n              <Grid item>\n                <Tooltip title=\"Refresh\" placement=\"right\">\n                  <IconButton\n                    color=\"primary\"\n                    className={classes.refreshButton}\n                    onClick={refreshClicked}\n                  >\n                    <RefreshIcon />\n                  </IconButton>\n                </Tooltip>\n              </Grid>\n            </Grid>\n          </div>\n        </Grid>\n\n        <Grid item md={3}>\n          {props.date === \"completed\" && state.showCreateExcel && (\n            <div style={{ paddingBottom: \"5px\" }}>\n              <Button\n                className={classes.ExportToExcelButton}\n                variant=\"outlined\"\n                color=\"default\"\n                onClick={handleExcelButtonClicked}\n                startIcon={\n                  <FontAwesomeIcon\n                    style={{ color: \"#009900\" }}\n                    icon={faFileExcel}\n                  />\n                }\n              >\n                export to excel\n              </Button>\n            </div>\n          )}\n        </Grid>\n\n        {data.isFetching && <div className={classes.HideNowRows}></div>}\n\n        <Grid item md={3}>\n          <TextField\n            variant=\"standard\"\n            value={filter}\n            onChange={filterChanged}\n            margin=\"normal\"\n            size=\"small\"\n            id=\"filter\"\n            label=\"Filter\"\n            name=\"filter\"\n            autoComplete=\"off\"\n          />\n        </Grid>\n\n        <Grid item hidden={isTopSelectHidden(props.date)}>\n          <FormControl className={classes.topSelect}>\n            <InputLabel id=\"top-select-label\">Limit</InputLabel>\n            <Select\n              labelId=\"top-select-label\"\n              id=\"top-simple-select\"\n              value={topCount}\n              onChange={topCountChanged}\n            >\n              <MenuItem value={25}>25</MenuItem>\n              <MenuItem value={50}>50</MenuItem>\n              <MenuItem value={100}>100</MenuItem>\n              <MenuItem value={500}>500</MenuItem>\n              <MenuItem value={1000}>1000</MenuItem>\n              <MenuItem value={10000}>ALL</MenuItem>\n            </Select>\n          </FormControl>\n\n          {/* <Button onClick={() => loadData(true)}> Show all records </Button> */}\n        </Grid>\n      </Grid>\n\n      <div style={{ height: 700, width: \"100%\" }}>\n        <DataGrid\n          rows={data.bookings}\n          columns={columns}\n          autoPageSize\n          page={page}\n          onPageChange={(params) => {\n            setPage(params.page);\n          }}\n          onSelectionChange={handleSelectionChanged}\n        />\n      </div>\n\n      <BookingDialog\n        booking={selectedBooking}\n        open={seeDetailsDialogOpen}\n        onClose={handleCloseSeeDetaisDialog}\n      />\n\n      {data.bookings && data.bookings.length > 0 && (\n        <Dialog\n          maxWidth=\"lg\"\n          open={openDialogExcel}\n          onClose={handleCloseDialogExcel}\n          PaperComponent={PaperComponent}\n          aria-labelledby=\"form-dialog-title\"\n        >\n          <DialogTitle id=\"draggable-dialog-title\">\n            <Grid\n              container\n              spacing={2}\n              direction=\"row\"\n              justify=\"center\"\n              alignItems=\"center\"\n            >\n              <Grid item>\n                <FontAwesomeIcon\n                  style={{ color: \"#2f942e\", fontSize: \"2rem\" }}\n                  icon={faFileExcel}\n                />\n              </Grid>\n\n              <Grid item>\n                <div\n                  style={{\n                    color: \"#2f942e\",\n                    paddingBottom: \"5px\",\n                    fontWeight: \"800\",\n                  }}\n                >\n                  {\" \"}\n                  Export to EXCEL{\" \"}\n                </div>\n              </Grid>\n            </Grid>\n\n            <Divider />\n          </DialogTitle>\n          <DialogContent>\n            <div\n              style={{\n                minHeight: \"600px\",\n                maxHeight: \"600px\",\n                minWidth: \"1200px\",\n                maxWidth: \"1200px\",\n              }}\n            >\n              <div>\n                <Grid row container justify=\"center\" spacing={3}>\n                  <Grid item>\n                    <FormControlLabel\n                      control={\n                        <Switch\n                          checked={justCorporate}\n                          onChange={justCorporateChanged}\n                          name=\"justCorporate\"\n                        />\n                      }\n                      label=\"Just Corporate Records\"\n                    />\n                  </Grid>\n\n                  {justCorporate && (\n                    <Grid item>\n                      <FormControl\n                        style={{ marginTop: \"0px\" }}\n                        className={classes.formControl}\n                      >\n                        <Select\n                          labelId=\"select-corporate\"\n                          id=\"select-corporate-id\"\n                          value={corporate}\n                          onChange={corporateChanged}\n                        >\n                          {corporates.map((element) => (\n                            <MenuItem value={element}>{`${element}`}</MenuItem>\n                          ))}\n                        </Select>\n                      </FormControl>\n                    </Grid>\n                  )}\n                </Grid>\n\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                  <Grid row container justify=\"center\" spacing={3}>\n                    <Grid item>\n                      <KeyboardDatePicker\n                        disableToolbar\n                        variant=\"inline\"\n                        format=\"dd/MM/yyyy\"\n                        margin=\"normal\"\n                        id=\"date-picker-from\"\n                        label=\"From\"\n                        value={fromDate}\n                        onChange={handleFromDateChange}\n                        KeyboardButtonProps={{\n                          \"aria-label\": \"change date\",\n                        }}\n                      />\n                    </Grid>\n\n                    <Grid item>\n                      <KeyboardDatePicker\n                        disableToolbar\n                        variant=\"inline\"\n                        format=\"dd/MM/yyyy\"\n                        margin=\"normal\"\n                        id=\"date-picker-until\"\n                        label=\"Until\"\n                        value={untilDate}\n                        onChange={handleUntilDateChange}\n                        KeyboardButtonProps={{\n                          \"aria-label\": \"change date\",\n                        }}\n                      />\n                    </Grid>\n\n                    <Grid item>\n                      <div style={{ paddingTop: \"30px\", marginLeft: \"20px\" }}>\n                        <ReactHTMLTableToExcel\n                          id=\"test-table-xls-button\"\n                          className={classes.ExportToExcelButtonInline}\n                          table=\"table-to-xls\"\n                          filename={`PCR.Report.${fromDateStr}.${untilDateStr}`}\n                          sheet=\"PCR-Report\"\n                          buttonText=\"Download as XLS\"\n                        />\n                      </div>\n                    </Grid>\n                  </Grid>\n                </MuiPickersUtilsProvider>\n              </div>\n\n              <div>\n                <Grid container spacing={3}>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkDate}\n                          onChange={chkDateChanged}\n                          name=\"chkDate\"\n                        />\n                      }\n                      label=\"Date\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkForename}\n                          onChange={chkForenameChanged}\n                          name=\"chkForename\"\n                        />\n                      }\n                      label=\"Forename\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkSurname}\n                          onChange={chkSurnameChanged}\n                          name=\"chkSurname\"\n                        />\n                      }\n                      label=\"Surname\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkDOB}\n                          onChange={chkDOBChanged}\n                          name=\"chkDOB\"\n                        />\n                      }\n                      label=\"D.O.B\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkEmail}\n                          onChange={chkEmailChanged}\n                          name=\"chkEmail\"\n                        />\n                      }\n                      label=\"Email\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkTel}\n                          onChange={chkTelChanged}\n                          name=\"chkTel\"\n                        />\n                      }\n                      label=\"Tel\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkCertificate}\n                          onChange={chkCertificateChanged}\n                          name=\"chkCertificate\"\n                        />\n                      }\n                      label=\"Certificate\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkAntiBodyTest}\n                          onChange={chkAntiBodyTestChanged}\n                          name=\"chkAntiBodyTest\"\n                        />\n                      }\n                      label=\"AntiBodyTest\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkextRef}\n                          onChange={chkextRefChanged}\n                          name=\"chkextRef\"\n                        />\n                      }\n                      label=\"Lab No.\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkPrice}\n                          onChange={chkPriceChanged}\n                          name=\"chkPrice\"\n                        />\n                      }\n                      label=\"Price\"\n                    />\n                  </Grid>\n                </Grid>\n              </div>\n\n              <div style={{ width: \"100%\", paddingTop: \"20px\" }}>\n                <table className={classes.table} id=\"table-to-xls\">\n                  <tr>\n                    {chkDate && <th className={classes.th}>Date</th>}\n                    {chkForename && <th className={classes.th}>Forename</th>}\n                    {chkSurname && <th className={classes.th}>Surename</th>}\n                    {chkDOB && <th className={classes.th}>D.O.B</th>}\n                    {chkEmail && <th className={classes.th}>Email</th>}\n                    {chkTel && <th className={classes.th}>Tel</th>}\n                    {chkCertificate && (\n                      <th className={classes.th}>Certificate</th>\n                    )}\n                    {chkAntiBodyTest && (\n                      <th className={classes.th}>AntiBodyTest</th>\n                    )}\n                    {chkextRef && <th className={classes.th}>Lab No.</th>}\n                    {chkPrice && <th className={classes.th}>Price (£) </th>}\n                  </tr>\n\n                  {data.bookings\n                    .filter((booking) => {\n                      if (!justCorporate) {\n                        return (\n                          booking.bookingDate >= fromDateStr &&\n                          booking.bookingDate <= untilDateStr\n                        );\n                      } else {\n                        return (\n                          booking.bookingDate >= fromDateStr &&\n                          booking.bookingDate <= untilDateStr &&\n                          booking.paid &&\n                          booking.paidBy === \"corporate\" &&\n                          booking.corporate === corporate\n                        );\n                      }\n                    })\n\n                    .map((booking) => (\n                      <tr>\n                        {chkDate && (\n                          <td className={classes.td}>\n                            {FormatDateFromString(booking.bookingDate)}\n                          </td>\n                        )}\n                        {chkForename && (\n                          <td className={classes.td}>\n                            {booking.forenameCapital}\n                          </td>\n                        )}\n                        {chkSurname && (\n                          <td className={classes.td}>\n                            {booking.surnameCapital}\n                          </td>\n                        )}\n                        {chkDOB && (\n                          <th className={classes.th}>\n                            {/* {FormatDateFromString(booking.birthDate)} */}\n                          </th>\n                        )}\n                        {chkEmail && (\n                          <td className={classes.td}>{booking.email}</td>\n                        )}\n                        {chkTel && (\n                          <td className={classes.td}>{booking.phone}</td>\n                        )}\n                        {chkCertificate && (\n                          <td className={classes.td}>\n                            {booking.certificate ? \"YES\" : \"NO\"}\n                          </td>\n                        )}\n                        {chkAntiBodyTest && (\n                          <td className={classes.td}>\n                            {booking.antiBodyTest ? \"YES\" : \"NO\"}\n                          </td>\n                        )}\n                        {chkextRef && (\n                          <td className={classes.td}>{booking.extRef}</td>\n                        )}\n                        {chkPrice && (\n                          <td className={classes.td}>\n                            {PriceCalculator.calculatePrice(booking)}\n                          </td>\n                        )}\n                      </tr>\n                    ))}\n                </table>\n              </div>\n            </div>\n          </DialogContent>\n        </Dialog>\n      )}\n    </React.Fragment>\n  );\n} ","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\n\nexport default function Title(props) {\n  return (\n    <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n      {props.children}\n    </Typography>\n  );\n}\n\nTitle.propTypes = {\n  children: PropTypes.node,\n};","import React, { useEffect } from 'react';\nimport { useTheme } from '@material-ui/core/styles';\nimport { LineChart, Line, XAxis, YAxis, Label, ResponsiveContainer } from 'recharts';\nimport Title from './Title';\nimport dateformat from 'dateformat';\nimport BookService from './services/BookService';\nimport { LinearProgress } from '@material-ui/core';\n\n// Generate Sales Data\nfunction createData(time, amount) {\n  return { time, amount };\n}\n\n\nconst emptyData = [\n  createData('09:00', 0),\n  createData('10:00', 0),\n  createData('11:00', 0),\n  createData('12:00', 0),\n  createData('13:00', 0),\n  createData('14:00', 0),\n  createData('15:00', 0),\n  createData('16:00', 0),\n  createData('17:00', 0),\n  createData('18:00', undefined),\n\n];\n\nconst getCount = (data, str) =>\n{\n  if (!data)\n    return 0;\n\n  var count = 0;\n  for (var i=0; i < data.length; i++)\n  {\n    if (data[i]._id.substr(0,2) === str)\n    {\n      count += data[i].count;\n    }\n  }\n  return count;\n}\n\nexport default function Chart() {\n  const theme = useTheme();\n\n  const [data, setData] = React.useState(emptyData);\n  const [loading, setLoading] = React.useState(false)\n\n  useEffect(() =>\n  {\n    const fetchData = async () =>\n    {\n      const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\n      var result = [];\n      try\n      {\n          setLoading(true)\n          const res = await BookService.getBookingsStatsByDateStr(todayStr);\n          setLoading(false)\n          const data = res.data.result;\n          result.push(createData('09:00', getCount(data,'09')));\n          result.push(createData('10:00', getCount(data,'10')));\n          result.push(createData('11:00', getCount(data,'11')));\n          result.push(createData('12:00', getCount(data,'12')));\n          result.push(createData('13:00', getCount(data,'13')));\n          result.push(createData('14:00', getCount(data,'14')));\n          result.push(createData('15:00', getCount(data,'15')));\n          result.push(createData('16:00', getCount(data,'16')));\n          result.push(createData('17:00', getCount(data,'17')));\n          result.push(createData('18:00', undefined));\n \n           setData(result);\n      }\n      catch(err){\n        setLoading(false)\n        console.error(err);\n      }\n\n    }\n  \n   fetchData();\n\n  }, [] );\n\n  return (\n    <React.Fragment>\n       {loading && (\n        <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\n          <LinearProgress color=\"primary\" />\n        </div>\n      )}\n      <Title>Today</Title>\n      <ResponsiveContainer>\n        <LineChart\n          data={data}\n          margin={{\n            top: 16,\n            right: 16,\n            bottom: 0,\n            left: 24,\n          }}\n        >\n          <XAxis dataKey=\"time\" stroke={theme.palette.text.secondary} />\n          <YAxis stroke={theme.palette.text.secondary}>\n            <Label\n              angle={270}\n              position=\"left\"\n              style={{ textAnchor: 'middle', fill: theme.palette.text.primary }}\n            >\n              Online Bookings\n            </Label>\n          </YAxis>\n          <Line type=\"monotone\" dataKey=\"amount\" stroke={theme.palette.primary.main} dot={false} />\n        </LineChart>\n      </ResponsiveContainer>\n    </React.Fragment>\n  );\n}","import React, { useEffect } from \"react\";\nimport Link from \"@material-ui/core/Link\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Title from \"./Title\";\nimport { Grid, LinearProgress, Tooltip } from \"@material-ui/core\";\nimport * as dateformat from \"dateformat\";\nimport BookService from \"./services/BookService\";\nimport BookingDialog from \"./BookingDialog\";\n\nconst useStyles = makeStyles({\n  depositContext: {\n    flex: 1,\n  },\n\n  bookingBox: {\n    display: \"flex\",\n    margin: \"5px\",\n    padding: \"5px\",\n    maxWidth: \"90px\",\n    minHeight: \"30px\",\n    border: \"1px solid #eee\",\n    fontSize: \"12px\",\n    fontWeight: \"500\",\n    cursor: \"pointer\",\n    backgroundColor: \"#ebedf7\",\n    color: \"#3f51b5\",\n    boxShadow: \"2px 4px #fafafa\",\n    borderRadius: \"5px\",\n    textAlign: \"center\",\n    alignItems: \"center\",\n    justifyItems: \"center\",\n    align: \"center\",\n\n    \"&:hover\": {\n      background: \"#3f51b5\",\n      color: \"#ebedf7\",\n    },\n  },\n});\n\nconst isWeekend = (date) => {\n  return (\n    date.getDay() === 1 ||\n    date.getDay() === 2 ||\n    date.getDay() === 3 ||\n    date.getDay() === 6 ||\n    date.getDay() === 0\n  );\n};\n\nconst isThursday = (date) => {\n  return date.getDay() === 4; /// Thursday\n};\n\nconst isFriday = (date) => {\n  return date.getDay() === 5; /// Friday\n};\n\nconst getCurrentTimeSlot = (now) => {\n \n\n  var min = now.getMinutes();\n  var hour = now.getHours();\n\n  if (isWeekend(now) && (hour >= 14 || hour < 10)) {\n    return null;\n  }\n\n  if (hour >= 18 || hour < 10) {\n    return null;\n  }\n\n  const slotMinStr = min < 30 ? \"00\" : \"30\";\n  const pmStr = hour >= 12 ? \"PM\" : \"AM\";\n\n  if (hour > 12) hour = hour - 12;\n\n  const slotHourStr = `0${hour}`;\n\n  return `${slotHourStr}:${slotMinStr} ${pmStr}`;\n};\n\nconst getCurrentTimeSlotLabel = (timeStr) => {\n  if (!timeStr) {\n    return \"Closed\";\n  }\n\n  let endTimeStr = \"\";\n  switch (timeStr) {\n    case \"10:00 AM\":\n      endTimeStr = \"10:30 AM\";\n      break;\n    case \"10:30 AM\":\n      endTimeStr = \"11:00 AM\";\n      break;\n    case \"11:00 AM\":\n      endTimeStr = \"11:30 AM\";\n      break;\n    case \"11:30 AM\":\n      endTimeStr = \"12:00 PM\";\n      break;\n    case \"12:00 PM\":\n      endTimeStr = \"12:30 PM\";\n      break;\n    case \"12:30 PM\":\n      endTimeStr = \"01:00 PM\";\n      break;\n    case \"01:00 PM\":\n      endTimeStr = \"01:30 PM\";\n      break;\n    case \"01:30 PM\":\n      endTimeStr = \"02:00 PM\";\n      break;\n    case \"02:00 PM\":\n      endTimeStr = \"02:30 PM\";\n      break;\n    case \"02:30 PM\":\n      endTimeStr = \"03:00 PM\";\n      break;\n    case \"03:00 PM\":\n      endTimeStr = \"03:30 PM\";\n      break;\n    case \"03:30 PM\":\n      endTimeStr = \"04:00 PM\";\n      break;\n    case \"04:00 PM\":\n      endTimeStr = \"04:30 PM\";\n      break;\n    case \"04:30 PM\":\n      endTimeStr = \"05:00 PM\";\n      break;\n    case \"05:00 PM\":\n      endTimeStr = \"05:30 PM\";\n      break;\n    case \"05:30 PM\":\n      endTimeStr = \"06:00 PM\";\n      break;\n\n    default:\n      endTimeStr = \"\";\n      break;\n  }\n\n  return `${timeStr} - ${endTimeStr}`;\n};\n\nexport default function CurrentVisits() {\n  const classes = useStyles();\n\n  const [current, setCurrent] = React.useState(new Date());\n  const [bookings, setBookings] = React.useState([]);\n\n  const [selectedBooking, setSelectedBooking] = React.useState(null);\n  const [openDialog, setOpenDialog] = React.useState(false);\n\n  const [loading, setLoading] = React.useState(false);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setCurrent(new Date());\n    }, 30000);\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, []);\n\n  useEffect(() => {\n    const currentTimeSlot = getCurrentTimeSlot(current);\n    if (!currentTimeSlot) return;\n    const todayStr = dateformat(current, \"yyyy-mm-dd\");\n    setLoading(true);\n    BookService.getBookingsByDateStrandTime(todayStr, currentTimeSlot)\n      .then((res) => {\n        setLoading(false);\n        if (res.data.status === \"OK\") {\n          setBookings([...res.data.bookings]);\n        }\n      })\n      .catch((err) => {\n        setLoading(false);\n        console.log(err);\n      });\n  }, [current]);\n\n  const getBookingsBox = (_bookings) => {\n    if (_bookings && _bookings.length > 0) {\n      return (\n        <div className={classes.root}>\n          <Grid\n            container\n            justify=\"flex-start\"\n            alignItems=\"flex-start\"\n            spacing={0}\n          >\n            {_bookings.map((booking) => (\n              <Grid item>\n                <div\n                  className={classes.bookingBox}\n                  onClick={(event) => bookingCliked(event, booking)}\n                >\n                  <span style={{ textAlign: \"center\" }}>\n                    {\" \"}\n                    {`${booking.surnameCapital}`.substring(0, 10)}{\" \"}\n                  </span>\n                </div>\n              </Grid>\n            ))}\n          </Grid>\n        </div>\n      );\n    }\n  };\n\n  const bookingCliked = (event, booking) => {\n    setSelectedBooking(booking);\n    setOpenDialog(true);\n  };\n\n  const handleCloseDialog = () => {\n    setOpenDialog(false);\n  };\n\n  return (\n    <React.Fragment>\n      {loading && (\n        <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\n          <LinearProgress color=\"primary\" />\n        </div>\n      )}\n\n      <Title>Current Visits</Title>\n      <Typography component=\"p\" variant=\"h6\">\n        {getCurrentTimeSlotLabel(getCurrentTimeSlot(current))}\n      </Typography>\n      <Typography color=\"textSecondary\" className={classes.depositContext}>\n        on {dateformat(current, \"dd mmmm, yyyy\")}\n      </Typography>\n\n      {getBookingsBox(bookings)}\n\n      <BookingDialog\n        booking={selectedBooking}\n        open={openDialog}\n        onClose={handleCloseDialog}\n      />\n    </React.Fragment>\n  );\n}\n","import React, { useEffect } from 'react';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Title from './Title';\nimport BookService from './services/BookService';\nimport * as dateformat from 'dateformat';\nimport GlobalState from './../GlobalState';\nimport { getMenuIndex } from './../MenuList';\nimport {FormatDateFromString, FormatDateFromStringShortYear} from './DateFormatter';\nimport { LinearProgress } from '@material-ui/core';\n\n\nconst useStyles = makeStyles((theme) => ({\n  seeMore: {\n    marginTop: theme.spacing(3),\n  },\n}));\n\nexport default function BookingView() {\n  const classes = useStyles();\n  const [state, setState] = React.useContext(GlobalState);  \n\n  const [data, setData] = React.useState({bookings: [] , isFetching : false});\n\n  const [refresh, setRefresh] = React.useState(false);\n\n  const [loading, setLoading] = React.useState(false)\n\n  const seeMoreRecords = (event) => {\n    event.preventDefault();\n    setState(state=>({...state, currentMenuIndex:getMenuIndex('gynae',`recentBookings`)}));\n  }\n\n  const loadData = () => \n  {\n    setData({bookings: data.bookings, isFetching: true});\n    setLoading(true)\n    BookService.getRecentBookings().then( (res) =>{\n      setLoading(false)\n        setData({bookings: res.data, isFetching: false});\n\n    }).catch( (err) => {\n      setLoading(false)\n        console.log(err);\n        setData({bookings: data.bookings, isFetching: false});\n    });\n  }\n\n\n  useEffect( () => {\n          loadData();\n        },\n        [refresh]);   \n\n\n   useEffect( () => {\n     loadData();\n     const interval = setInterval(() => {\n       setRefresh(refresh => !refresh);\n     }, 30000);\n\n     return () =>\n     {\n       clearInterval(interval)\n     }\n     \n   }, []) ;    \n\n   const formatTimeStamp = (timeStamp) =>\n   {\n     const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\n     const timeStampStr = dateformat(timeStamp, 'yyyy-mm-dd');\n     if (todayStr === timeStampStr)\n     {\n       return dateformat(timeStamp, \"'Today', h:MM:ss TT\");\n     }\n     else\n     {\n        return dateformat(timeStamp, \"mmm dS, h:MM:ss TT\");\n     }\n   }\n\n  return (\n    <React.Fragment>\n       {loading && (\n        <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\n          <LinearProgress color=\"primary\" />\n        </div>\n      )}\n      <Title>Recent Bookings</Title>\n      <Table size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell>TimeStamp</TableCell>        \n            <TableCell>Fullname</TableCell>\n            <TableCell>Email</TableCell>\n            <TableCell>Tel</TableCell>\n            <TableCell>Booked Date</TableCell>\n            <TableCell>Booked Time</TableCell> \n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {data.bookings.map((row) => (\n            <TableRow key={row._id}>\n              <TableCell>{formatTimeStamp(row.timeStamp)}</TableCell>\n              <TableCell>{row.fullname}</TableCell>\n              <TableCell>{row.email}</TableCell>\n              <TableCell>{row.phone}</TableCell>\n              <TableCell>{FormatDateFromString(row.bookingDate)}</TableCell>\n              <TableCell>{row.bookingTime}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n      <div className={classes.seeMore}>\n        <Link color=\"primary\" href=\"#\" onClick={seeMoreRecords}>\n          See more records\n        </Link>\n      </div>\n    </React.Fragment>\n  );\n}","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Chart from './Chart';\nimport CurrentVisits from './CurrentVisits';\n\n\n\nimport { Tooltip } from '@material-ui/core';\nimport GlobalState from './../GlobalState';\nimport BookingView from './BookingView';\n\nconst useStyles = makeStyles((theme) => ({\n \n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 240,\n  },\n}));\n\nexport default function DashboardPreview() {\n  const classes = useStyles();\n  const [state, setState] = React.useContext(GlobalState);\n\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n\n  return (\n        <React.Fragment>\n\n<           Grid container spacing={3}>\n                    {/* Chart */}\n                    <Grid item xs={12} md={4} lg={6}>\n                    <Paper className={fixedHeightPaper}>\n                        <Chart />\n                    </Paper>\n                    </Grid>\n                    {/* Current Visits */}\n                    <Grid item xs={12} md={4} lg={6}>\n                    <Paper className={fixedHeightPaper}>\n                        <CurrentVisits />\n                    </Paper>\n                    </Grid>\n                    {/* Recent Bookings */}\n                    <Grid item xs={12}>\n                    <Paper className={classes.paper}>\n                        <BookingView/>\n                    </Paper>\n                    </Grid>\n          </Grid>\n        </React.Fragment>\n  );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport GlobalState from './../GlobalState';\nimport Grid from '@material-ui/core/Grid';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { Button, Checkbox, FormControlLabel, Link, TextField, Tooltip } from '@material-ui/core';\nimport PDFService from './services/PDFService';\n\nimport {calculatePrice} from './PriceCalculator';\n\n\nimport bookingService from './services/BookService';\nimport CheckIcon from '@material-ui/icons/Check';\nimport CloseIcon from '@material-ui/icons/Close';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nimport {FormatDateFromString, RevertFormatDateFromString} from './DateFormatter';\n\nimport PrintIcon from '@material-ui/icons/Print';\n\n\nconst useStyles = makeStyles((theme) => ({\n  box: {\n    backgroundColor : \"#373737\",\n    color: \"#fff\",\n    padding : \"1px\",\n    borderRadius : \"4px\",\n    textAlign: \"justify\",\n    paddingRight: \"40px\"\n  },\n\n  boxRed: {\n    backgroundColor : \"#dc2626\",\n    color: \"#fff\",\n    padding : \"1px\",\n    borderRadius : \"4px\",\n    textAlign: \"justify\",\n    paddingRight: \"40px\"\n  },\n\n  boxInfo: {\n    textAlign: \"justify\",\n    backgroundColor : \"#fafafa\",\n    color: \"#333\",\n    padding : \"1px\",\n    borderRadius : \"4px\",\n    paddingRight: \"40px\",\n    border: \"1px solid #eee\",\n  },\n\n  ul: {\n     listStyle: \"none\",\n     padding: \"0\",\n     margin: \"0\"\n  },\n\n  li: {\n    marginBottom : \"15px\"\n  },\n\n\n  icon: {\n    marginRight : \"8px\"\n  },\n\n  root: {\n    width: '100%',\n  },\n\n  lineThrough:{\n    textDecoration : \"line-through\",\n  },\n\n\n\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    flexBasis: '33.33%',\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n  },\n  secondaryHeading: {\n    fontSize: theme.typography.pxToRem(15),\n  },\n\n  infoDetails:{\n    textAlign: \"left\",\n  },\n\n  infoTitle:{\n    fontWeight: \"800\",\n    marginRight: \"10px\"\n  },\n\n  infoData:{\n    fontWeight: \"400\",\n  },\n\n  title:\n  {\n    // textAlign : \"center\",\n    // fontWeight : \"500\",\n    // margin: \"10px\",\n    // backgroundColor : \"#eee\",\n    // padding : \"10px\",\n    // borderRadius : \"4px\"\n    textAlign: \"center\",\n    fontWeight : \"600\",\n    marginLeft: \"10px\",\n    marginBottom: \"5px\"\n\n  },\n\n  Accordion:{\n    backgroundColor : \"#f5f5f5\",\n    color: \"#222\"\n  },\n\n  AccordionDeleted:{\n    backgroundColor : \"#aaa\",\n    color: \"#555\"\n  },\n\n  DownloadForm:{\n      marginTop: \"10px\",\n      marginBottom : \"10px\"\n  },\n\n  infoDataCharges:{\n    fontSize : \"18px\",\n    color: \"green\",\n    fontWeight : \"600\"\n  },\n\n  infoDataChargesHigher:{\n    fontSize : \"18px\",\n    color: \"red\",\n    fontWeight : \"600\"\n  },\n  BookedLabel:{\n    color: \"#606060\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#606060\"\n  },\n\n  PatientAttendedLabel:{\n    color: \"#0066aa\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#0066aa\"\n  },\n\n  SampleTakenLabel:{\n    color: \"#0066cc\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#0066cc\"\n  },\n\n  ReportSentLabel:{\n    color: \"#009900\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#009900\"\n  },\n\n  ReportCertSentLabel:{\n    color: \"#009900\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#009900\"\n  },\n\n  PositiveLabel:{\n    color: \"red\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"red\"\n  },\n\n\n  EditButton:\n  {\n    marginBottom : \"20px\",\n    backgroundColor : \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\"\n    },\n    textDecoration : \"none !important\",\n    padding: \"10px\",\n    width: \"400px\"   \n  },\n\n  RestoreButton:\n  {\n    marginBottom : \"20px\",\n    backgroundColor : \"#fafafa\",\n    color: \"#555\",\n    \"&:hover\": {\n      background: \"#f1f1f1\",\n      color: \"#111\"\n    },\n    textDecoration : \"none !important\",\n    padding: \"10px\" ,\n    width: \"400px\"    \n  },\n\n\n  DeleteButton:\n  {\n    marginBottom : \"20px\",\n    backgroundColor : \"#d90015\",\n    \"&:hover\": {\n      background: \"#b80012\",\n      color: \"#fff\"\n    },\n\n    padding: \"10px\",\n    width: \"400px\"   \n    \n  },\n\n  SaveButton:\n  {\n    marginBottom : \"10px\",\n    padding: \"10px\",\n\n    backgroundColor : \"#d1175e\",\n    \"&:hover\": {\n      background: \"#bd0d50\",\n      color: \"#fff\",\n      \n    },\n    width: \"400px\"   \n\n  },\n\n  CancelButton:\n  {\n    marginBottom : \"20px\",\n    // padding: \"10px\"\n  },\n\n  TextBox: {\n    \n    padding : \"0px\"\n\n  },\n\n  checkIcon:{\n    color: \"green\",   \n  },\n\n  closeIcon:{\n    color: \"red\"\n  },\n\n  centeredLabel : {\n    display: \"flex\",\n    alignItems: \"center\"\n  }\n\n\n\n\n\n\n}));\n\n\n\n\nexport default function PersonsBox() {\n    const classes = useStyles();\n\n    const [state, setState] = React.useContext(GlobalState);\n\n    const [expanded, setExpanded] = React.useState('panel0');\n\n    const [editMode, setEditMode] = React.useState({edit : false, person : null});\n    const [deleteMode, setDeleteMode] = React.useState({delete : false, person : null});\n    const [restoreMode, setRestoreMode] = React.useState({restore : false, person : null});\n\n    const [saving, setSaving] =  React.useState(false);\n    const [deleting, setDeleting] =  React.useState(false);\n    const [restoring, setRestoring] =  React.useState(false);\n\n    const [validationError, setValidationError] = React.useState({});\n\n\n    const [bookingDate, setBookingDate] = React.useState('');\n    const [bookingTime, setBookingTime] = React.useState('');\n\n    const [fullname, setFullname] = React.useState('');\n    const [email, setEmail] = React.useState('');\n    const [tel, setTel] = React.useState('');\n    const [service, setService] = React.useState('');\n    const [notes, setNotes] = React.useState('');\n\n\n    const bookingDateChanged = (event) =>\n    {\n      setBookingDate(event.target.value);\n      setValidationError({...validationError, bookingDateError : false});\n    }\n\n    const bookingTimeChanged = (event) =>\n    {\n      setBookingTime(event.target.value);\n      setValidationError({...validationError, bookingTimeError : false});\n    }\n\n    const fullnameChanged = (event) =>\n    {\n      setFullname(event.target.value);\n    }\n\n    const emailChanged = (event) =>\n    {\n      setEmail(event.target.value);\n    }\n\n    const telChanged = (event) =>\n    {\n      setTel(event.target.value);\n    }\n\n    const serviceChanged = (event) =>\n    {\n      setService(event.target.value);\n    }\n\n    const notesChanged = (event) =>\n    {\n      setNotes(event.target.value);\n    }\n\n\n    const handleChange = (panel) => (event, isExpanded) => {\n      setExpanded(isExpanded ? panel : false);\n    };\n\n    const getStatusLabel = (status) => {\n      if (status === 'booked')\n      {\n        return (\n          <span className={classes.BookedLabel}> Booking Made </span>\n        );\n    \n      }else if (status === 'patient_attended')\n      {\n        return (\n          <span  className={classes.PatientAttendedLabel}> Patient Attended </span>\n        );\n    \n      }\n      else{\n        return 'Unknown';\n      }\n    }\n\n\n   const handleEditModeChanged = (edit, person) => {\n\n       if (edit)\n       {\n         setFullname(person.fullname);\n         setBookingDate(FormatDateFromString(person.bookingDate));\n         setBookingTime(person.bookingTime);\n         setEmail(person.email);\n         setTel(person.phone);\n         setService(person.package)\n         if (person.notes)\n         {\n          setNotes(person.notes);\n         }\n        \n         setEditMode({edit: edit, person: person});\n\n       }\n       else if (!edit && !person)\n       {\n         setEditMode({edit: edit, person: person});\n       }\n       else if (!edit && person)\n       {\n          const booking = {};\n          const bookingId = person._id;\n          booking.email = email;\n          booking.phone = tel;\n          booking.fullname = fullname;\n          booking.notes = notes;\n          booking.service = service;\n          booking.bookingDate = RevertFormatDateFromString(bookingDate);\n          booking.bookingTime = bookingTime;\n          booking.bookingRef = person.bookingRef;\n\n          if  (validateBooking(booking))\n          {\n            updateBooking({bookingId: bookingId, person: booking});\n          }\n       }\n   }\n\n   const validateDate = (str) =>\n   {\n     var error = false;\n     if (!str || str.length !== 10)\n     {\n       error = true;\n     }\n\n     if (str.charAt(4) !== '-'  || str.charAt(7) !== '-')\n     {\n       error = true;\n     }\n\n     try\n     {\n       \n       const result = /^\\d{4}-\\d{2}-\\d{2}$/.test(str);\n       if (!result)\n       {\n          error = true;\n       }\n\n       const year = parseInt(str.substr(0,4));\n       const month = parseInt(str.substr(5,2));\n       const day = parseInt(str.substr(8,2));\n\n       if (year < 1900)\n       {\n          error = true;\n       }\n\n       if (month < 1 || month > 12)\n       {\n         error = true;\n       }        \n\n       if (day > 31)\n       {\n         error = true;\n       }\n\n     }catch(err)\n     {\n       error = true;\n     }\n\n\n\n     return !error;\n   }\n\n   const validateTime =(str) =>\n   {\n     var error = false;\n\n     const result = /^\\d{2}:\\d{2} AM$|^\\d{2}:\\d{2} PM$/.test(str);\n     if (!result)\n     {\n        error = true;\n     }\n\n     try{\n       const hour = parseInt(str.substr(0,2));\n       const minute = parseInt(str.substr(3,2));\n\n       if (hour < 0 || hour > 12)\n       {\n         error = true;\n       }\n\n       if (minute < 0 || minute > 59)\n       {\n         error = true;\n       }\n\n     }catch(err)\n     {\n       error = true;\n     }\n\n     return !error;\n   }\n\n   const validateBooking = (booking) =>\n   {\n      var error = false;\n\n      if (!validateDate(booking.bookingDate))\n      {\n        error = true;\n        setValidationError({...validationError, bookingDateError : true});\n      }\n\n      if (!validateTime(booking.bookingTime))\n      {\n        error = true;\n        setValidationError({...validationError, bookingTimeError : true});\n      }\n     \n\n      return !error;\n   }\n\n   const updateBooking = (payload) =>\n   {\n       setSaving(true);\n       bookingService.updateBooking(payload).then( (res) => {\n        setSaving(false);\n        setEditMode({edit: false, person: null});\n        setState(state => ({...state, RefreshPersonInfo : !state.RefreshPersonInfo}));\n\n       }).catch ( (err) => {\n         setSaving(false);\n         setEditMode({edit: false, person: null});\n         console.log(err);\n       });\n   }\n\n   const deleteBooking = (id) =>\n   {\n       setDeleting(true);\n       bookingService.deleteBooking(id).then( (res) => {\n        setDeleting(false);\n        setDeleteMode({delete: false, person: null});\n        setState(state => ({...state, RefreshPersonInfo : !state.RefreshPersonInfo}));\n\n       }).catch ( (err) => {\n          setDeleting(false);\n          setDeleteMode({delete: false, person: null});\n         console.log(err);\n       });\n   }\n\n   const restoreBooking = (id) =>\n   {\n       setRestoring(true);\n       bookingService.unDeleteBooking(id).then( (res) => {\n        setRestoring(false);\n        setRestoreMode({restore: false, person: null});\n        setState(state => ({...state, RefreshPersonInfo : !state.RefreshPersonInfo}));\n\n       }).catch ( (err) => {\n        setRestoring(false);\n        setRestoreMode({restore: false, person: null});\n         console.log(err);\n       });\n   }\n\n   const changeBackToBookingMade = (event, id) =>\n   {\n     setSaving(true);\n     bookingService.changeBackToBookingMade(id).then(res => {\n       setSaving(false);\n       setState(state => ({...state, RefreshPersonInfo : !state.RefreshPersonInfo}));\n     }).catch(err => {\n       console.log(err);\n       setSaving(false);\n     })\n   }\n\n\n\n   const handleDeleteModeChanged = (del, person) => {\n\n    if (del)\n    {\n      setDeleteMode({delete: del, person: person});\n    }\n    else if (!del && !person)\n    {\n      setDeleteMode({delete: del, person: person});\n    }\n    else if (!del && person)\n    {\n        deleteBooking(person._id);\n    }\n  }\n\n  const handleRestoreModeChanged = (restore, person) => {\n\n    if (restore)\n    {\n      setRestoreMode({restore: restore, person: person});\n    }\n    else if (!restore && !person)\n    {\n      setRestoreMode({restore: restore, person: person});\n    }\n    else if (!restore && person)\n    {\n        restoreBooking(person._id);\n    }\n  }\n\n  return (\n    <React.Fragment>\n          \n      <Grid container direction=\"column\" spacing={1} justify=\"flex-start\" alignItems=\"center\">\n          <div className={classes.title}> Following Records Found :</div>\n\n          {state.foundRecords.map((person,index) => (\n   \n                <Grid item xs={12} md={12} key={`panel${index}`}>\n                <div className={classes.root}>\n                    <Accordion className={person.deleted ? classes.AccordionDeleted : classes.Accordion} expanded={expanded === `panel${index}`} onChange={handleChange(`panel${index}`)}>\n                    <AccordionSummary className={person.deleted ? classes.lineThrough : ''}\n                        expandIcon={<ExpandMoreIcon />}\n                        aria-controls=\"panel1bh-content\"\n                        id={`panel${index}bh-header`}\n                    >\n                      {person.deleted && (\n                          <Tooltip  title=\"This record has been deleted.\">\n                            <DeleteIcon  style={{padding: 0, margin: 0,  color: \"#fff\", fontSize: 25 }}/>\n                        </Tooltip>\n                      )}\n\n                        <Typography className={classes.heading}> {`#${index+1}`} </Typography>\n                        <Typography className={classes.secondaryHeading}>\n                        {`${person.fullname}`}\n                        </Typography>\n                    </AccordionSummary>\n\n                    <AccordionDetails className={classes.infoDetails}>\n                        \n\n\n                        <ul className={classes.ul}>\n\n                        {/* Restore Functionality ******************************************* */}  \n                        <li hidden={!(restoreMode.restore && restoreMode.person._id  === person._id)}>\n                              <div style={{fontWeight: \"500\", paddingBottom: \"5px\", paddingLeft: \"5px\", fontSize:\"16px\" , color:\"#fff\"}}>\n                                Are you sure you want to restore this record?\n                              </div>\n                            </li>\n\n                            <li hidden={!person.deleted || (restoreMode.restore && restoreMode.person._id === person._id)}>\n                                 <Button\n\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick = {() => {handleRestoreModeChanged(true, person)}}\n                                    className={classes.RestoreButton}\n                                 >\n                                   Restore This Record\n                                </Button>\n                            </li>\n\n                            <li hidden={!(restoreMode.restore && restoreMode.person._id  === person._id)}>\n                                 <Button\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    disabled = {restoring}\n                                    onClick = {() => {handleRestoreModeChanged(false, person)}}\n                                    className={classes.SaveButton}\n                                 >\n                                    YES, Restore this!\n                                </Button>\n                            </li>\n\n                            <li hidden={!(restoreMode.restore && restoreMode.person._id  === person._id)}>\n                                 <Button\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"default\"\n                                    disabled = {restoring}\n                                    onClick = {() => {handleRestoreModeChanged(false, null)}}\n                                    className={classes.CancelButton}\n                                 >\n                                    Cancel\n                                </Button>\n                            </li>\n\n                           {/*  ******************************************************************* */}\n\n                              {/* Edit Functionality ******************************************* */}\n\n                            <li hidden={person.deleted || deleteMode.delete || (editMode.edit && editMode.person._id === person._id)}>\n                                 <Button\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick = {() => {handleEditModeChanged(true, person)}}\n                                    className={classes.EditButton}\n                                 >\n                                    Edit Booking Info\n                                </Button>\n                            </li>\n\n                            <li hidden={!(editMode.edit && editMode.person._id  === person._id)}>\n                                 <Button\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    disabled = {saving}\n                                    onClick = {() => {handleEditModeChanged(false, person)}}\n                                    className={classes.SaveButton}\n                                 >\n                                    Save Changes\n                                </Button>\n                            </li>\n\n                            <li hidden={!(editMode.edit && editMode.person._id === person._id)}>\n                                 <Button\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"default\"\n                                    disabled = {saving}\n                                    onClick = {() => {handleEditModeChanged(false, null)}}\n                                    className={classes.CancelButton}\n                                 >\n                                    Cancel\n                                </Button>\n                            </li>\n                            \n                            {/* ****************************************************************************************** */}\n\n\n                            {/* Delete Functionality ******************************************* */}\n\n                            <li hidden={!(deleteMode.delete && deleteMode.person._id  === person._id)}>\n                              <div style={{fontWeight: \"600\",  paddingBottom: \"5px\", paddingLeft: \"5px\", fontSize:\"16px\"}}>\n                                Are you sure you want to delete this record?\n                              </div>\n                            </li>\n\n                            <li hidden={person.deleted ||  editMode.edit || (deleteMode.delete && deleteMode.person._id === person._id)}>\n                                 <Button\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick = {() => {handleDeleteModeChanged(true, person)}}\n                                    className={classes.DeleteButton}\n                                 >\n                                   Delete This Record\n                                </Button>\n                            </li>\n\n                            <li hidden={!(deleteMode.delete && deleteMode.person._id  === person._id)}>\n                                 <Button\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    disabled = {deleting}\n                                    onClick = {() => {handleDeleteModeChanged(false, person)}}\n                                    className={classes.SaveButton}\n                                 >\n                                    YES, Delete this!\n                                </Button>\n                            </li>\n\n                            <li hidden={!(deleteMode.delete && deleteMode.person._id === person._id)}>\n                                 <Button\n                                    type=\"button\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"default\"\n                                    disabled = {deleting}\n                                    onClick = {() => {handleDeleteModeChanged(false, null)}}\n                                    className={classes.CancelButton}\n                                 >\n                                    Cancel\n                                </Button>\n                            </li>\n                                 \n                            {/* ****************************************************************************************** */}\n\n                            <li className={classes.li}>\n                                <span className={classes.infoTitle}>BOOKED DATE</span> \n                            \n\n                                <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                   {FormatDateFromString(person.bookingDate) }\n                                  </span>  \n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                          <TextField \n                                                      fullWidth\n                                                      error={validationError.bookingDateError}\n                                                      className={classes.TextBox} \n                                                      value={bookingDate}\n                                                      onChange = {bookingDateChanged}\n                                                      inputProps= {{\n                                                          style:{\n                                                            padding: 0\n                                                          }\n                                                        }\n                                                      }\n                                                      > \n                                          </TextField> \n                                        </span> \n\n\n                            </li>\n\n                            <li className={classes.li}>\n                                <span className={classes.infoTitle}>BOOKED TIME</span> \n                                <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.bookingTime}</span>  \n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                          <TextField \n                                                      fullWidth\n                                                      error={validationError.bookingTimeError}\n                                                      className={classes.TextBox} \n                                                      value={bookingTime}\n                                                      onChange = {bookingTimeChanged}\n                                                      inputProps= {{\n                                                          style:{\n                                                            padding: 0\n                                                          }\n                                                        }\n                                                      }\n                                                      > \n                                          </TextField> \n                                        </span> \n\n\n                            </li>\n\n                            <li className={classes.li}>\n                            <span className={classes.infoTitle}>FULLNAME</span> \n                                        <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.fullname}</span>  \n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                        <TextField \n                                                      fullWidth\n                                                      className={classes.TextBox} \n                                                      value={fullname}\n                                                      onChange = {fullnameChanged}\n                                                      inputProps= {{\n                                                          style:{\n                                                            padding: 0\n                                                          }\n                                                        }\n                                                      }\n                                                      > \n                                          </TextField> \n                                        </span> \n                            </li>\n                            <li className={classes.li}>\n                                <span className={classes.infoTitle}>EMAIL</span> \n                                       <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.email}</span>  \n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                        <TextField \n                                                      fullWidth\n                                                      className={classes.TextBox} \n                                                      value={email}\n                                                      onChange = {emailChanged}\n                                                      inputProps= {{\n                                                          style:{\n                                                            padding: 0\n                                                          }\n                                                        }\n                                                      }\n                                                      > \n                                          </TextField> \n                                        </span>   \n                            </li>\n                            <li className={classes.li}>\n                                <span className={classes.infoTitle}>TEL</span>\n                                 <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.phone}</span>  \n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                        <TextField \n                                                      fullWidth\n                                                      className={classes.TextBox} \n                                                      value={tel}\n                                                      onChange = {telChanged}\n                                                      inputProps= {{\n                                                          style:{\n                                                            padding: 0\n                                                          }\n                                                        }\n                                                      }\n                                                      > \n                                          </TextField> \n                                        </span>  \n                            </li>\n                            <li className={classes.li}>\n                                <span className={classes.infoTitle}>SERVICE</span>\n                                 <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.package}</span>  \n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                        <TextField \n                                                      fullWidth\n                                                      className={classes.TextBox} \n                                                      value={service}\n                                                      onChange = {serviceChanged}\n                                                      inputProps= {{\n                                                          style:{\n                                                            padding: 0\n                                                          }\n                                                        }\n                                                      }\n                                                      > \n                                          </TextField> \n                                        </span>  \n                            </li>\n                            <li className={classes.li}>\n                                <span className={classes.infoTitle}>NOTES</span>\n                                 <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.notes}</span>  \n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\n                                        <TextField \n                                                      fullWidth\n                                                      className={classes.TextBox} \n                                                      value={notes}\n                                                      onChange = {notesChanged}\n                                                      inputProps= {{\n                                                          style:{\n                                                            padding: 0\n                                                          }\n                                                        }\n                                                      }\n                                                      > \n                                          </TextField> \n                                        </span>  \n                            </li>\n                            <li className={classes.li}>\n                                <span className={classes.infoTitle}>STATUS</span> \n                                {getStatusLabel(person.status)} \n                            </li>\n      \n\n                        </ul>\n\n                    </AccordionDetails>\n                    </Accordion>\n                </div>\n            </Grid> \n          ))}\n    </Grid>\n    </React.Fragment>\n  );\n}\n","import React, { useEffect } from 'react';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport GlobalState from './../GlobalState';\nimport Alert from '@material-ui/lab/Alert';\nimport PropTypes from 'prop-types';\nimport MaskedInput from 'react-text-mask';\nimport { FormControl, Grid, Input, InputLabel } from '@material-ui/core';\nimport BookService from './services/BookService';\nimport PersonsBox from './PersonsBox';\nimport { width } from '@material-ui/system';\n\n\nconst isBoolean = (param) => typeof(param) === \"boolean\"\n\nconst useFocus = (initialFocus = false, id = \"\") => {\n    const [focus, setFocus] = React.useState(initialFocus)\n    const setFocusWithTrueDefault = (param) => setFocus(isBoolean(param)? param : true)\n    return ([\n        setFocusWithTrueDefault, {\n            autoFocus: focus,\n            key: `${id}${focus}`,\n            onFocus: () => setFocus(true),\n            onBlur: () => setFocus(false),\n        },\n    ])\n}\n\n\nfunction TextMaskCustom(props) {\n    const { inputRef, ...other } = props;\n  \n    return (\n      <MaskedInput\n        {...other}\n        ref={(ref) => {\n          inputRef(ref ? ref.inputElement : null);\n        }}\n        mask={[/\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/]}\n        // placeholderChar={'\\u2000'}\n        showMask\n      />\n    );\n  }\n  \n  TextMaskCustom.propTypes = {\n    inputRef: PropTypes.func.isRequired,\n  };\n\n\n\nconst useStyles = makeStyles((theme) => ({\n\n    root: {\n        width: '100%',\n        '& > * + *': {\n          marginTop: theme.spacing(2),\n        },\n        marginTop: \"20px\"\n      },  \n\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n\n    Find: {\n        width: \"80px\"\n    },\n\n    Clear:{\n        marginRight: \"20px\"\n    },\n\n    title:{\n        marginTop : \"20px\"\n    },\n\n    TextBox:{\n        marginTop: \"30px\",\n        \"& > *\" :\n        {\n            textAlign: \"center\"\n        },\n  \n    },\n\n    TextField:{\n\n    },\n\n    NoRecordsFound:{\n        marginTop: \"20px\",\n        color: \"red\",\n        fontWeight: \"600\",\n        fontSize: \"14px\",\n    },\n\n    PersonsBox:{\n        marginTop : \"20px\",\n        marginBottom: \"50px\",\n    }\n\n}));\n\nexport default function FindByRef() {\n  const classes = useStyles();\n  const [state, setState] = React.useContext(GlobalState);\n  \n  const [setFocus, focusProps] = useFocus(true);\n\n//   useEffect( () =>\n//   {\n//      findRecords();\n//   }, [state.findRecords]);\n\n useEffect ( () => {\n    setState(state => ({...state, foundRecords : []}));\n }, [])\n\n  useEffect( () => {\n    BookService.getBookingsByRef(state.ref).then( (res)=>\n    {\n        if (res.data.length > 0)\n        {\n            setState(state => ({...state, foundRecords : res.data}));\n        }\n    });\n    }, [state.RefreshPersonInfo]);\n\n    const handleChange = (event) =>\n    {\n        setState(state => ({...state, ref : event.target.value}));\n        setState(state => ({...state, refError : false})); \n    }\n\n    const clearField = () =>\n    {\n        setState(state => ({...state, refError : false})); \n        setState(state => ({...state, ref : '___-___-___'}));\n        setState(state => ({...state, foundRecords : []}));\n        setFocus();\n    }\n\n    const findRecords = () =>\n    {\n        if (!state.ref || state.ref.indexOf('_') >= 0)\n        {\n            setState(state => ({...state, refError : true}));  \n            return;\n        }\n\n        setState(state => ({...state, submiting : true}));\n        setState(state => ({...state, foundRecords : []}));\n\n        BookService.getBookingsByRef(state.ref).then( (res)=>\n        {\n            setState(state => ({...state, submiting : false}));\n            if (res.data.length > 0)\n            {\n                setState(state => ({...state, foundRecords : res.data}));\n            }\n            else\n            {\n                setState(state => ({...state, foundRecords : null}));\n            }\n            \n            console.log(res.data);\n\n        }).catch( (err) =>\n        {\n            console.log(err);\n            setState(state => ({...state, submiting : false}));\n        });\n    }\n\n  return (\n    <React.Fragment>\n        <CssBaseline />\n        <div className={classes.title}>\n            <Typography component=\"h6\" variant=\"h6\" align=\"center\">\n                Find Booking Appoinments\n            </Typography>  \n        </div> \n\n        <Grid container direction=\"column\" spacing={1} justify=\"flex-start\"  alignItems=\"center\">\n\n        <Grid item xs={12} md={12}>\n            <FormControl className={classes.TextBox}>\n                <TextField\n                    {...focusProps}\n                    autoFocus \n                    pattern=\"[0-9]*\"\n                    error = {state.refError ? true : false} \n                    value = {state.ref}\n                    className = {classes.TextField}\n                    width = \"50px\"\n                    onChange={handleChange}\n                    label=\"Reference No.\"\n                    helperText=\"Enter Your 9-digits Reference No.\"\n                    name=\"refNo\"\n                    id=\"refNo\"\n                    variant=\"outlined\"\n                    \n                    size=\"medium\"\n                    margin=\"normal\"\n                    fullWidth = {true}\n                    InputProps={{\n                        inputComponent: TextMaskCustom,\n                        style: { textAlign: 'center', fontSize:\"24px\", width: \"210px\", paddingLeft: \"20px\" }\n                    }}\n\n                    onKeyPress= {event => {\n                        if (event.key === 'Enter') {\n                            findRecords();\n                        }\n                      }}\n                />         \n            </FormControl>\n        </Grid>\n\n        <Grid item xs={12} md={12}>\n               \n                <Button\n                    disabled = {state.submiting}\n                    color=\"default\"\n                    onClick = {clearField}\n                    onTouchTap = {clearField}\n                    className={classes.Clear}\n                >\n                    Clear \n                </Button>  \n            \n                <Button\n                    type=\"button\"\n                    disabled = {state.submiting}\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick = {findRecords}\n                    onTouchTap = {findRecords}\n                    className={classes.Find}\n                >\n                    Find \n                </Button>  \n        </Grid>\n\n        <Grid item xs={12} md={12}>\n\n                    \n\n            {state.foundRecords && state.foundRecords.length > 0 && (\n                <React.Fragment>\n\n                    <div className={classes.PersonsBox}>\n                          <PersonsBox/>\n                    </div>\n                    \n\n\n                </React.Fragment>\n            )}   \n\n            {!state.foundRecords && (\n                <React.Fragment>\n\n                <div className={classes.root}>\n                    <Alert severity=\"error\"> <strong>No Records Found !</strong> <br/> Please check you reference number again.</Alert>\n                </div> \n                   \n                </React.Fragment>\n            )}\n\n        </Grid>\n        \n        \n        </Grid>\n        \n    </React.Fragment>\n   \n  );\n}","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport dateformat from 'dateformat';\nimport BookService from '../services/BookService';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport GlobalState from '../../GlobalState';\n\n\nconst useStyles = makeStyles((theme) => ({\n\n    Container: {\n        width: \"100%\",\n        paddingTop: \"70%\",\n        position: \"relative\",\n        backgroundColor: \"#fff\",\n        cursor: \"pointer\"\n    },\n\n    ContainerPast: {\n        width: \"100%\",\n        paddingTop: \"70%\",\n        position: \"relative\",\n        backgroundColor: \"#fafafa\"\n    },\n    \n    DayLabel: {\n        position: \"absolute\",\n        top: \"5px\",\n        right: \"5px\",\n        color: \"#555\",\n        fontSize: \"1rem\"\n    },\n\n    DayLabelToday: {\n        position: \"absolute\",\n        top: \"5px\",\n        right: \"5px\",\n        backgroundColor: \"#1a73e8\",\n        color: \"#fff\",\n        fontSize: \"1rem\",\n        borderRadius: \"50%\",\n        padding: \"5px\",\n        lineHight: \"35px\",\n        minWidth: \"35px\"\n    },\n\n    DayLabelDisabled: {\n        position: \"absolute\",\n        top: \"5px\",\n        right: \"5px\",\n        color: \"#ddd\",\n        fontSize: \"1rem\"\n    },\n\n    BookingCountLabel: {\n        position: \"absolute\",\n        top: \"35%\",\n        left: \"40%\",\n        color: \"#3f51b5\",\n        backgroundColor: \"#ebedf7\",\n        fontSize: \"16px\",\n        fontWeight: \"600\",\n        padding: \"10px\",\n        borderRadius: \"50%\",\n        minWidth: \"40px\",\n        lineHight: \"40px\",\n        cursor: \"pointer\",\n        textAlign: \"center\"\n    },\n\n    BookingCountLabelBusy: {\n        position: \"absolute\",\n        top: \"35%\",\n        left: \"40%\",\n        color: \"#b00000\",\n        backgroundColor: \"#fce6e6\",\n        fontSize: \"16px\",\n        fontWeight: \"600\",\n        padding: \"10px\",\n        borderRadius: \"50%\",\n        minWidth: \"40px\",\n        cursor: \"pointer\",\n        textAlign: \"center\"\n    },\n\n    LoadingProgress: {\n        position: \"absolute\",\n        top: \"40%\",\n        left: \"40%\",\n      },\n\n      BookingCountGauge: {\n        position: \"absolute\",\n        bottom: \"5%\",\n        left: \"8%\",\n        width : \"8%\",\n        height: \"85%\"\n    },\n\n  }));\n\nconst MAX_BOOKING_COUNT = 10;  \n\nconst MonthViewCell = ({key, cellIndex, month, daysInMonth, dayClicked}) => {\n    const classes = useStyles();\n\n    const [state, setState] = React.useContext(GlobalState);\n\n    const [dateStr, setDateStr] = React.useState('');\n\n    const [cellDate, setCellDate] = React.useState(new Date());\n\n    const [bookingsCount, setBookingsCount] = React.useState(-1);\n\n    const [disableDay, setDisableDay] = React.useState(false);\n\n    const [isPast, setIsPast] = React.useState(false);\n\n    useEffect( () => {\n\n        if (cellIndex <= daysInMonth.length)\n        {\n            const date = daysInMonth[cellIndex - 1];\n            const dateStr = dateformat(date, 'yyyy-mm-dd');\n            setDateStr(dateStr);\n            setCellDate(date);\n            setDisableDay(date.getMonth() !== month - 1);\n            const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\n            setIsPast(dateStr < todayStr);\n        }\n        else\n        {\n            const day = cellIndex - daysInMonth.length;\n            const date = new Date((daysInMonth[daysInMonth.length - 1].getTime() + ( day * 86400000)));\n            const dateStr = dateformat(date, 'yyyy-mm-dd');\n            setDateStr(dateStr);\n            setCellDate(date);\n            setDisableDay(true);\n            const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\n            setIsPast(dateStr < todayStr);\n        }\n\n    }, [cellIndex, month, daysInMonth]);\n\n    useEffect ( () => {\n\n        const fecthData = async () =>\n        {\n            if (!dateStr || dateStr.length <= 0)\n            {\n                return;\n            }\n        \n            if (disableDay)\n            {\n                setBookingsCount(-2);\n                return;\n            }\n\n            setBookingsCount(-1);\n\n            var res = state.AdminCalendarCache?.find(record => record.method === 'getBookingsCountByDateStr' && record.query === dateStr)?.res;\n\n            if (!res)\n            {\n                res = await BookService.getAllBookingsCountByDateStr(dateStr);\n                setState(state => ({...state, AdminCalendarCache : [...state.AdminCalendarCache, {method: 'getBookingsCountByDateStr' , query : dateStr, res: res}]}));\n            }\n        \n            if (res.data.count >= 0)\n            {\n                setBookingsCount(res.data.count);\n            }\n\n        }\n\n      fecthData();\n\n    }, [dateStr]);\n\n    const getDayLabel = (_cellIndex , _month , _daysInMonth) =>\n    {\n        var date = null;\n        var disabled = false;\n        var day = -1;\n\n    \n\n        if (_cellIndex <= _daysInMonth.length)\n        {\n            date = _daysInMonth[_cellIndex - 1];\n            day = date.getDate();\n            if (date.getMonth() !== _month - 1)\n            {\n                disabled = true;\n            }\n        }\n        else\n        {\n            const _day = _cellIndex - _daysInMonth.length;\n            const date = new Date((_daysInMonth[_daysInMonth.length - 1].getTime() + ( _day * 86400000)));\n            day = date.getDate();\n            disabled = true;\n        }\n\n        const isToday = dateformat(new Date(),'yyyy-mm-dd') === dateformat(date, 'yyyy-mm-dd');\n\n        return (\n            <span className={(disabled) ? classes.DayLabelDisabled : isToday ? classes.DayLabelToday : classes.DayLabel}>\n                 {day > 0 ? `${day}` : ''}\n             </span>\n        );\n    }\n\n    const getBookingsCountLabel = (_bookingsCount) =>\n    {\n        if (_bookingsCount === -1)\n        {\n            return (\n                <div className={classes.LoadingProgress}>\n                      <CircularProgress disableShrink  />\n                </div>\n            );  \n        }\n        else if (_bookingsCount > 0 )\n        {\n            if (_bookingsCount >= MAX_BOOKING_COUNT / 2)\n            {\n                return (\n                    <div onClick={(event => dayClicked(event,cellDate))} className={classes.BookingCountLabelBusy}>\n                        {_bookingsCount < 10 ?  ` ${_bookingsCount}` : `${_bookingsCount}`}\n                    </div>\n                );\n            }\n            else\n            {\n                return (\n                    <div onClick={(event => dayClicked(event,cellDate))} className={classes.BookingCountLabel}>\n                          {_bookingsCount < 10 ?  ` ${_bookingsCount}` : `${_bookingsCount}`}\n                    </div>\n                );\n            }\n        }\n    }\n\n    const getBookingsCountGauge = (_bookingsCount) =>\n    {\n        if (_bookingsCount > 0)\n        {\n            let percent = (_bookingsCount / MAX_BOOKING_COUNT) * 100;\n            if (percent > 100)\n            {\n                percent = 100;\n            }\n\n            percent = 100 - percent;\n\n            return (\n\n                <div className={classes.BookingCountGauge}>\n                  <div style={{padding:\"0\", margin:\"0\", width:\"100%\", height:\"100%\", backgroundColor: \"#3f51b5\"}} >\n                        <div  style={{padding:\"0\", margin:\"0\", width:\"100%\", height:`${percent}%`, backgroundColor: \"#fafafa\"}} >\n\n                        </div>\n                  </div>\n                </div>\n            );\n        }\n    }\n\n    return (\n        <React.Fragment>\n\n            <div className={classes.Container}  onClick={(event => dayClicked(event,cellDate))} >\n\n              {getDayLabel(cellIndex, month, daysInMonth)}\n\n              {getBookingsCountLabel(bookingsCount)}\n\n              {getBookingsCountGauge(bookingsCount)}\n\n            </div>\n\n        </React.Fragment>\n\n\n    );\n}\n\nMonthViewCell.propTypes = {\n    key: PropTypes.string.isRequired,\n    cellIndex: PropTypes.number.isRequired,\n    month: PropTypes.number.isRequired,\n    daysInMonth: PropTypes.arrayOf(PropTypes.date),\n    dayClicked: PropTypes.func\n  };\n\n \n  \nexport default MonthViewCell;","import calendar from 'node-calendar';\n\n\nexport default class CalendarUtil {\n\n    static getMonthRange = (month , year) =>\n    {\n        return new calendar.Calendar(calendar.SUNDAY).itermonthdates(year, month);\n    } \n\n} ","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport MonthViewCell from './MonthViewCell';\nimport CalendarUtil from './calendar-util';\n\nconst dayLables = ['Sun', 'Mon', 'Tue', 'Wed' , 'Thu', 'Fri', 'Sat'];\nconst days = [1,2,3,4,5,6,7]; \nconst rows = [1,2,3,4,5,6];\n\nconst useStyles = makeStyles((theme) => ({\n\n    table: {\n        width: \"100%\",\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n    },\n\n    th: {\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        verticalAlign: \"middle\",\n        fontcolor: \"#555\",\n        fontWeight: \"400\",\n        fontSize: \"15px\",\n        paddingTop: \"5px\",\n        paddingBottom: \"5px\",\n        width: \"14%\"\n    },\n\n    td: {\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        verticalAlign: \"middle\",\n    }\n\n  }));\n\nconst MonthView = ({month, year, dayClicked}) => {\n    const classes = useStyles();\n\n    const daysInMonth = CalendarUtil.getMonthRange(month,year);\n\n    return (\n        <React.Fragment>\n\n            <table className={classes.table}>\n                <thead>\n                    <tr>\n                        {dayLables.map(label => (\n                            <th key={`th-${label}`} className={classes.th}>\n                                {label}\n                            </th>\n                        ))}\n                    </tr>\n                </thead>\n                <tbody>\n                    {rows.map(row => (\n                        <tr>\n                            {days.map(day => (\n                                <td className={classes.td}>\n                                    <MonthViewCell \n                                        key={`${month}${year}${(row-1) * days.length + day}`} \n                                        cellIndex={(row-1) * days.length + day} \n                                        month={month} \n                                        daysInMonth={daysInMonth}\n                                        dayClicked = {dayClicked}\n                                        />\n                                </td>\n                            ))}\n                        </tr>\n                    ))}            \n                </tbody>\n\n            </table>\n\n      \n        </React.Fragment>\n\n\n    );\n}\n\nMonthView.propTypes = {\n    month: PropTypes.number.isRequired,\n    year: PropTypes.number.isRequired,\n    dayClicked: PropTypes.func\n  };\n\n\nexport default MonthView;","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport dateformat from 'dateformat';\nimport BookService from '../services/BookService';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport GlobalState from '../../GlobalState';\n\nimport axios from 'axios'\n\nconst useStyles = makeStyles((theme) => ({\n\n    Container: {\n        width: \"100%\",\n        paddingTop: \"40%\",\n        position: \"relative\",\n        backgroundColor: \"#fff\",\n        cursor: \"pointer\"\n    },\n\n    ContainerPast: {\n        width: \"100%\",\n        paddingTop: \"40%\",\n        position: \"relative\",\n        backgroundColor: \"#fafafa\",\n        cursor: \"pointer\"\n    },\n    \n    DayLabel: {\n        position: \"absolute\",\n        top: \"5px\",\n        right: \"5px\",\n        color: \"#555\",\n        fontSize: \"1rem\"\n    },\n\n    DayLabelDisabled: {\n        position: \"absolute\",\n        top: \"5px\",\n        right: \"5px\",\n        color: \"#ddd\",\n        fontSize: \"1rem\"\n    },\n\n    BookingCountLabel: {\n        position: \"absolute\",\n        top: \"25%\",\n        left: \"38%\",\n        color: \"#3f51b5\",\n        backgroundColor: \"#ebedf7\",\n        fontSize: \"14px\",\n        fontWeight: \"600\",\n        padding: \"5px\",\n        borderRadius: \"50%\",\n        minWidth: \"30px\",\n        cursor : \"pointer\",\n        textAlign: \"center\"\n    },\n\n    BookingCountLabelBusy: {\n        position: \"absolute\",\n        top: \"25%\",\n        left: \"38%\",\n        color: \"#b00000\",\n        backgroundColor: \"#fce6e6\",\n        fontSize: \"14px\",\n        fontWeight: \"600\",\n        padding: \"5px\",\n        borderRadius: \"50%\",\n        minWidth: \"30px\",\n        cursor : \"pointer\",\n        textAlign: \"center\"\n    },\n\n    LoadingProgress: {\n        position: \"absolute\",\n        top: \"40%\",\n        left: \"40%\",\n      },\n\n      BookingCountGauge: {\n        position: \"absolute\",\n        bottom: \"5%\",\n        left: \"8%\",\n        width : \"85%\",\n        height: \"8%\"\n    },\n\n  }));\n\nconst MAX_BOOKING_COUNT = 1;  \n\nconst WeekViewCell = ({key, date, time, dayClicked}) => {\n    const classes = useStyles();\n\n    const [state, setState] = React.useContext(GlobalState);\n    const [bookingsCount, setBookingsCount] = React.useState(-1);\n    const [isPast, setIsPast] = React.useState(false);\n\n    const [cellDate, setCellDate] = React.useState(new Date());\n\n    useEffect( () => {\n        const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\n        setIsPast(date < todayStr);\n\n        setCellDate(new Date(date));\n\n    }, [date]);\n\n    useEffect ( () => {\n      \n      \n      \n        if (!date || date.length <= 0 || !time || time.length <= 0)\n        {\n            return;\n        }\n        \n        // if (isPast)\n        // {\n        //     setBookingsCount(-2);\n        //     return;\n        // }\n\n        setBookingsCount(-1);\n\n       \n\n        var res = state.AdminCalendarCache?.find(record => record.method === 'getBookingsCountByDateStrandTime' && record.query === `${date}${time}`)?.res;\n        if (res)\n        {\n            if (res.data.count >= 0)\n            {\n                setBookingsCount(res.data.count);\n            }  \n            return;\n        }\n\n        let source = axios.CancelToken.source();\n        BookService.getAllBookingsCountByDateStrandTime(date, time, source).then( res => {\n            if (res.data.count >= 0)\n            {\n                setBookingsCount(res.data.count);\n                setState(state => ({...state, AdminCalendarCache : [...state.AdminCalendarCache, {method: 'getBookingsCountByDateStrandTime' , query : `${date}${time}`, res: res}]}));\n            }  \n        }).catch( err => \n            {\n                //do nothing\n            });\n     \n        return () => {\n           if (source)\n              source.cancel('Cancelling in cleanup');\n        }\n     \n    }, [date, time]);\n\n\n    const getBookingsCountLabel = (_bookingsCount) =>\n    {\n        if (_bookingsCount === -1)\n        {\n            return (\n                <div className={classes.LoadingProgress}>\n                      <CircularProgress disableShrink  />\n                </div>\n            );  \n        }\n        else if (_bookingsCount > 0)\n        {\n            if (_bookingsCount >= MAX_BOOKING_COUNT)\n            {\n                return (\n                    <div onClick={(event => dayClicked(event,cellDate))} className={classes.BookingCountLabelBusy}>\n                          {_bookingsCount < 10 ? ` ${_bookingsCount}` : `${_bookingsCount}` }\n                    </div>\n                );\n            }\n            else\n            {\n                return (\n                    <div onClick={(event => dayClicked(event,cellDate))} className={classes.BookingCountLabel}>\n                        {_bookingsCount < 10 ? ` ${_bookingsCount}` : `${_bookingsCount}` }\n                    </div>\n                );\n            }\n        }\n    }\n\n    const getBookingsCountGauge = (_bookingsCount) =>\n    {\n        if (_bookingsCount > 0 )\n        {\n            let percent = (_bookingsCount / MAX_BOOKING_COUNT) * 100;\n            if (percent > 100)\n            {\n                percent = 100;\n            }\n\n            // percent = 100 - percent;\n\n            return (\n\n                <div className={classes.BookingCountGauge}>\n                  <div style={{padding:\"0\", margin:\"0\", width:\"100%\", height:\"100%\", backgroundColor: \"#f5f5f5\"}} >\n                        <div  style={{padding:\"0\", margin:\"0\", height:\"100%\", width:`${percent}%`, backgroundColor: \"#3f51b5\"}} >\n\n                        </div>\n                  </div>\n                </div>\n            );\n        }\n    }\n\n    return (\n        <React.Fragment>\n\n            <div className={isPast ? classes.ContainerPast : classes.Container} onClick={(event => dayClicked(event,cellDate))} >\n\n              {getBookingsCountLabel(bookingsCount)}\n\n              {getBookingsCountGauge(bookingsCount)}\n\n            </div>\n\n        </React.Fragment>\n\n\n    );\n}\n\nWeekViewCell.propTypes = {\n    key: PropTypes.string.isRequired,\n    date: PropTypes.string.isRequired,\n    time: PropTypes.string.isRequired,\n    dayClicked: PropTypes.func\n  };\n\n \n  \nexport default WeekViewCell;","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport WeekViewCell from './WeekViewCell';\nimport dateformat from 'dateformat';\n\nconst rows = [\n    '10:00 AM',\n    '10:30 AM', \n    '11:00 AM', \n    '11:30 AM', \n    '12:00 PM',\n    '12:30 PM',\n    '01:00 PM',\n    '01:30 PM',\n    '02:00 PM',\n    '02:30 PM',\n    '03:00 PM',\n    '03:30 PM',\n    '04:00 PM',\n    '04:30 PM',\n    '05:00 PM',\n    '05:30 PM',\n];\n\n\n\nconst useStyles = makeStyles((theme) => ({\n\n    table: {\n        width: \"100%\",\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        overflowY: \"auto\"\n    },\n\n    th: {\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        verticalAlign: \"middle\",\n        fontcolor: \"#555\",\n        fontWeight: \"400\",\n        fontSize: \"15px\",\n        paddingTop: \"5px\",\n        paddingBottom: \"5px\",\n        width: \"12%\", \n    },\n\n    td: {\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        verticalAlign: \"middle\",\n        height : \"50px\",\n        width: \"12%\", \n    }\n\n  }));\n\nconst WeekView = ({dates, dayClicked}) => {\n    const classes = useStyles();\n\n    return (\n        <React.Fragment>\n\n        <div style={{overflowY: \"scroll\" , height: \"60px\"}}>\n            <table className={classes.table}>\n                <thead>\n                    <tr>\n                        <th style={{width: \"7%\"}}>\n                        \n                        </th>\n                            {dates.map(date => (\n                                <th className={classes.th}>\n                                    <div style={{paddingBottom: \"5px\", color: \"#aaa\"}}>\n                                         {dateformat(date, 'ddd')}\n                                    </div>\n                                    <div>\n                                        <span style={{color: \"#aaa\"}}>\n                                            {dateformat(date, 'mmm ')}\n                                        </span> \n                                        <span  style={(dateformat(new Date(),'yyyy-mm-dd') === dateformat(date, 'yyyy-mm-dd')) ? { backgroundColor: \"#1a73e8\", color: \"#fff\", borderRadius: \"50%\",  padding: \"5px\",} : {color: \"#333\", fontWeight:\"500\"}}>\n                                             {dateformat(date, ' d')}\n                                        </span>\n                                       \n                                    </div>\n                                </th>\n                        ))}\n                    </tr>\n                </thead>\n             </table>\n\n        </div>\n\n            <div style={{overflowY: \"scroll\" , height: \"70vh\"}}>\n                <table className={classes.table}>   \n                    <tbody>\n                        {rows.map(row => (\n                            <tr>\n                                <td style={{width: \"7%\"}}>\n                                    {row}\n                                </td>\n                                {dates.map(day => (\n                                    <td className={classes.td}>\n                                        <WeekViewCell \n                                                dayClicked = {dayClicked}\n                                                key={`${dateformat(day,'yyyy-mm-dd')}-${row.replace(':','-')}`} \n                                                date={dateformat(day,'yyyy-mm-dd')} \n                                                time={row}/>\n                                    </td>\n                                ))}\n                            </tr>\n                        ))}            \n                    </tbody>\n                </table>\n            </div>                    \n      \n        </React.Fragment>\n\n\n    );\n}\n\nWeekView.propTypes = {\n    dates: PropTypes.arrayOf(PropTypes.any).isRequired,\n    dayClicked: PropTypes.func\n  };\n\n\nexport default WeekView;","import React, { useEffect, useRef, useState } from \"react\";\nimport BookService from \"./services/BookService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {\n  Backdrop,\n  Button,\n  Checkbox,\n  CircularProgress,\n  Divider,\n  FormControlLabel,\n  Grid,\n  InputAdornment,\n  InputLabel,\n  Link,\n  makeStyles,\n  MenuItem,\n  Select,\n  Switch,\n  TextField,\n  Tooltip,\n} from \"@material-ui/core\";\nimport GlobalState from \"../GlobalState\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport CreditCardIcon from \"@material-ui/icons/CreditCard\";\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\n\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Draggable from \"react-draggable\";\nimport Paper from \"@material-ui/core/Paper\";\n\nimport Alert from \"@material-ui/lab/Alert\";\n\nimport PropTypes from \"prop-types\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport Box from \"@material-ui/core/Box\";\n\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport { corporates } from \"./Corporates\";\nimport NumberFormat from \"react-number-format\";\n\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { validate } from \"email-validator\";\nimport DateRangeIcon from \"@material-ui/icons/DateRange\";\nimport { CalendarColors } from \"../Admin/calendar-admin/colors\";\n\nvar interval;\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    marginTop: theme.spacing(0),\n    marginBottom: theme.spacing(1),\n  },\n\n  refreshButton: {\n    marginLeft: theme.spacing(2),\n  },\n\n  checkIcon: {\n    color: \"green\",\n  },\n\n  closeIcon: {\n    color: \"red\",\n  },\n\n  RefLink: {\n    cursor: \"pointer\",\n  },\n\n  BookedLabel: {\n    backgroundColor: \"#606060\",\n    color: \"#fff\",\n    paddingRight: \"10px\",\n    paddingLeft: \"10px\",\n  },\n\n  PatientAttendedLabel: {\n    backgroundColor: \"#0066aa\",\n    color: \"#fff\",\n    paddingRight: \"15px\",\n    paddingLeft: \"10px\",\n  },\n\n  SampleTakenLabel: {\n    backgroundColor: \"#0066cc\",\n    color: \"#fff\",\n    paddingRight: \"40px\",\n    paddingLeft: \"10px\",\n  },\n\n  ReportSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"90px\",\n    paddingLeft: \"10px\",\n  },\n\n  ReportCertSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"68px\",\n    paddingLeft: \"10px\",\n  },\n\n  archiveButton: {},\n\n  smartMatchButton: {\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    marginRight: \"10px\",\n    // padding: \"10px\"\n  },\n\n  infoTitle: {\n    fontWeight: \"400\",\n  },\n\n  infoData: {\n    paddingLeft: \"10px\",\n    fontWeight: \"800\",\n  },\n\n  matchButton: {\n    marginTop: \"30px\",\n    marginBottom: \"20px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  resendButton: {\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  resendFilesButton: {\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n    backgroundColor: \"#3792ad\",\n    \"&:hover\": {\n      background: \"#2f798f\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  cancelButton: {\n    marginBottom: \"10px\",\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"90px\",\n    paddingRight: \"90px\",\n  },\n\n  CalendarIcon: {\n    color: theme.palette.primary.main,\n  },\n\n  DateTimeLabel: {\n    fontWeight: \"500\",\n    color: theme.palette.primary.main,\n  },\n\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 5,\n    color: \"#fff\",\n  },\n\n  PriceLabelPaid:{\n    color: theme.palette.primary.main,\n    fontWeight: \"600\"\n  },\n\n  PriceLabelNotPaid:{\n    color: theme.palette.secondary.main,\n    fontWeight: \"600\"\n  },\n\n\n}));\n\nconst Packages = [\n  {packageName: 'PRIVATE CONSULTATION WITH CONSULTANT DERMATOLOGIST'},\n  {packageName: `FREE CONSULTATION FOR AESTHETIC TREATMENTS\n  BOTOX`},\n  {packageName: `RADIOFREQUNCY`},\n  {packageName: `LASER HAIR`},\n  {packageName: `FILLERS`},\n  {packageName: `MOLE MAPPING / REMOVAL`},\n  {packageName: `DERMABRASION`},\n  {packageName: `PEELS`},\n  {packageName: `WART REMOVAL`},\n]\n\nfunction NumberFormatCustom(props) {\n  const { inputRef, onChange, ...other } = props;\n\n  return (\n    <NumberFormat\n      {...other}\n      getInputRef={inputRef}\n      onValueChange={(values) => {\n        onChange({\n          target: {\n            name: props.name,\n            value: values.value,\n          },\n        });\n      }}\n      thousandSeparator\n      isNumericString\n      prefix=\"\"\n    />\n  );\n}\n\nNumberFormatCustom.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nconst BorderLinearProgress = withStyles((theme) => ({\n  root: {\n    height: 10,\n    borderRadius: 5,\n  },\n  colorPrimary: {\n    backgroundColor: \"#cedbce\", //theme.palette.grey[theme.palette.type === 'light' ? 200 : 700],\n  },\n  bar: {\n    borderRadius: 5,\n    backgroundColor: \"#2f942e\",\n  },\n}))(LinearProgress);\nfunction LinearProgressWithLabel(props) {\n  return (\n    <Box display=\"flex\" alignItems=\"center\">\n      <Box width=\"100%\" mr={1}>\n        <BorderLinearProgress variant=\"determinate\" {...props} />\n      </Box>\n      <Box minWidth={35}>\n        <Typography\n          style={{ fontWeight: \"800\", color: \"#5e855e\" }}\n          variant=\"body2\"\n          color=\"textSecondary\"\n        >{`${Math.round(props.value)}%`}</Typography>\n      </Box>\n    </Box>\n  );\n}\n\nLinearProgressWithLabel.propTypes = {\n  /**\n   * The value of the progress indicator for the determinate and buffer variants.\n   * Value between 0 and 100.\n   */\n  value: PropTypes.number.isRequired,\n};\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable\n      handle=\"#draggable-dialog-title\"\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\n    >\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nexport default function NewBookingDialog(props) {\n  const classes = useStyles();\n\n  const [state, setState] = React.useContext(GlobalState);\n  const [saving, setSaving] = useState(false);\n\n  const [fullname, setFullname] = React.useState(\"\");\n  const [fullnameError, setFullnameError] = React.useState(false);\n\n  const [phone, setPhone] = React.useState(\"\");\n  const [email, setEmail] = React.useState(\"\");\n  const [notes, setNotes] = React.useState(\"\");\n\n  const [service, setService] = React.useState(\"\");\n\n  const serviceChanged = (event) => {\n    setService(event.target.value);\n  };\n\n  \n  const fullnameChanged = (event) => {\n    setFullname(event.target.value);\n    setFullnameError(false);\n  };\n\n  const phoneChanged = (event) => {\n    setPhone(event.target.value);\n  };\n\n  const emailChanged = (event) => {\n    setEmail(event.target.value);\n  };\n\n\n  const notesChanged = (event) => {\n    setNotes(event.target.value);\n  };\n\n  const handleClose = () => {\n    if (saving) return;\n\n    setFullname(\"\");\n    setFullnameError(false);\n    setPhone(\"\");\n    setEmail(\"\");\n    setNotes(\"\");\n    setService(\"\");\n    \n    props.handleClose();\n    setSaving(false);\n  };\n\n  const validateBooking = () => {\n    let error = false;\n    if (!fullname || fullname.trim().length < 1) {\n      setFullnameError(true);\n      error = true;\n    }\n    return !error;\n  };\n\n  const saveClicked = async () => {\n    if (!validateBooking()) {\n      return;\n    }\n\n    setSaving(true);\n\n    try {\n      await BookService.addNewBooking({\n        bookingDate: props.date,\n        bookingTime: props.time,\n        fullname: fullname,\n        phone: phone,\n        email: email,\n        notes: notes,\n        package: service,\n      });\n      setSaving(false);\n      setState((state) => ({\n        ...state,\n        bookingDialogDataChanged: !state.bookingDialogDataChanged\n          ? true\n          : false,\n      }));\n      handleClose();\n    } catch (err) {\n      console.error(err);\n      setSaving(false);\n    }\n  };\n\n  return (\n    <React.Fragment>\n      {props.date && props.time && (\n        <React.Fragment>\n          <Dialog\n            maxWidth=\"sm\"\n            open={props.open}\n            onClose={handleClose}\n            PaperComponent={PaperComponent}\n            aria-labelledby=\"form-dialog-title\"\n          >\n            <DialogTitle id=\"draggable-dialog-title\">\n              <Grid\n                container\n                spacing={2}\n                direction=\"row\"\n                justify=\"center\"\n                alignItems=\"center\"\n              >\n                <Grid item>\n                  <AddIcon style={{ color: \"#f50057\", fontSize: \"3rem\" }} />\n                </Grid>\n\n                <Grid item>\n                  <div\n                    style={{\n                      color: \"#f50057\",\n                      paddingBottom: \"10px\",\n                      fontWeight: \"800\",\n                    }}\n                  >\n                    {\" \"}\n                    ADD New Booking{\" \"}\n                  </div>\n                </Grid>\n              </Grid>\n\n              <div style={{position:\"absolute\", top: \"5px\", right: \"5px\", backgroundColor:CalendarColors.DERMA_COLOR, color:\"#fff\", padding: \"0px 5px\", borderRadius:\"10px\", fontSize:\"1rem\"}}>\n                    Dermatology\n              </div>\n\n\n              <Divider />\n            </DialogTitle>\n            <DialogContent>\n              <div\n                style={{\n                  height: \"450px\",\n                }}\n              >\n                <Grid\n                  container\n                  direction=\"row\"\n                  justify=\"stretch\"\n                  spacing={2}\n                  alignItems=\"center\"\n                >\n                  <Grid item xs={12}>\n                    <Grid\n                      container\n                      direction=\"row\"\n                      justify=\"center\"\n                      alignItems=\"center\"\n                      spacing={1}\n                    >\n                      <Grid item>\n                        <DateRangeIcon className={classes.CalendarIcon} />\n                      </Grid>\n                      <Grid item>\n                        <span className={classes.DateTimeLabel}>\n                          {props.date} , {props.time}\n                        </span>\n                      </Grid>\n                    </Grid>\n                  </Grid>\n\n                  <Grid item xs={12}>\n                    <TextField\n                      fullWidth\n                      autoFocus\n                      error={fullnameError}\n                      label=\"Full Name\"\n                      value={fullname}\n                      required\n                      onChange={fullnameChanged}\n                      name=\"fullname\"\n                      id=\"fullname-id\"\n                      autoComplete=\"none\"\n                    />\n                  </Grid>\n\n                  <Grid item xs={12}>\n                    <TextField\n                      fullWidth\n                      label=\"Telephone\"\n                      value={phone}\n                      onChange={phoneChanged}\n                      name=\"phone\"\n                      id=\"phone-id\"\n                      autoComplete=\"none\"\n                    />\n                  </Grid>\n\n                  <Grid item xs={12}>\n                    <TextField\n                      fullWidth\n                      label=\"Email\"\n                      value={email}\n                      onChange={emailChanged}\n                      name=\"email\"\n                      id=\"email-id\"\n                      autoComplete=\"none\"\n                    />\n                  </Grid>\n\n                  <Grid item xs={12} md={12}>\n                    <FormControl className={classes.formControl} fullWidth>\n                      <InputLabel id=\"service-label-id\">Service</InputLabel>\n                      <Select\n                        fullWidth\n                        labelId=\"service-label-id\"\n                        id=\"service-id\"\n                        value={service}\n                        onChange={serviceChanged}\n                      >\n                        {Packages.map((item) => (\n                          <MenuItem value={item.packageName}>\n                            {item.packageName}\n                          </MenuItem>\n                        ))}\n                      </Select>\n                    </FormControl>\n                  </Grid>\n\n\n\n                  <Grid item xs={12}>\n                    <TextField\n                      fullWidth\n                      label=\"Notes\"\n                      value={notes}\n                      onChange={notesChanged}\n                      name=\"notes\"\n                      id=\"notes-id\"\n                      autoComplete=\"none\"\n                    />\n                  </Grid>\n\n                </Grid>\n\n                <div\n                  style={{\n                    position: \"absolute\",\n                    bottom: \"20px\",\n                    right: \"20px\",\n                  }}\n                >\n                  <Grid\n                    container\n                    direction=\"row\"\n                    justify=\"flex-end\"\n                    alignItems=\"center\"\n                    spacing={1}\n                  >\n                    <Grid item>\n                      <Button\n                        onClick={handleClose}\n                        style={{ width: \"100px\" }}\n                        disabled={saving}\n                      >\n                        back\n                      </Button>\n                    </Grid>\n                    <Grid item>\n                      <Button\n                        onClick={saveClicked}\n                        variant=\"contained\"\n                        color=\"secondary\"\n                        style={{ width: \"100px\" }}\n                        disabled={saving}\n                      >\n                        Save\n                      </Button>\n                    </Grid>\n                  </Grid>\n                </div>\n              </div>\n\n              <Backdrop className={classes.backdrop} open={saving}>\n                <CircularProgress color=\"inherit\" />\n              </Backdrop>\n            </DialogContent>\n          </Dialog>\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport PropTypes from \"prop-types\";\nimport dateformat from \"dateformat\";\nimport BookService from \"../services/BookService\";\n\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport GlobalState from \"../../GlobalState\";\nimport BookingDialog from \"../BookingDialog\";\nimport NewBookingDialog from \"../NewBookingDialog\";\nimport clsx from \"clsx\";\nimport { CalendarColors } from \"../../Admin/calendar-admin/colors\";\n\nconst useStyles = makeStyles((theme) => ({\n  Container: {\n    width: \"100%\",\n    height: \"50px\",\n    position: \"relative\",\n    backgroundColor: \"#fff\",\n    display: \"flex\",\n    alignItems: \"flex-start\",\n    justifyItems: \"flex-start\",\n    paddingLeft: \"10px\",\n  },\n\n  ContainerPast: {\n    width: \"100%\",\n    paddingTop: \"50px\",\n    position: \"relative\",\n    backgroundColor: \"#fafafa\",\n  },\n\n  DayLabel: {\n    position: \"absolute\",\n    top: \"5px\",\n    right: \"5px\",\n    color: \"#555\",\n    fontSize: \"1rem\",\n  },\n\n  DayLabelDisabled: {\n    position: \"absolute\",\n    top: \"5px\",\n    right: \"5px\",\n    color: \"#ddd\",\n    fontSize: \"1rem\",\n  },\n\n  LoadingProgress: {\n    position: \"absolute\",\n    top: \"10%\",\n    left: \"40%\",\n  },\n\n  BookingCountGauge: {\n    position: \"absolute\",\n    bottom: \"5%\",\n    left: \"8%\",\n    width: \"85%\",\n    height: \"8%\",\n  },\n\n  bookingBox: {\n    display: \"flex\",\n    marginRight: \"10px\",\n    marginTop: \"5px\",\n    padding: \"10px\",\n    maxWidth: \"150px\",\n    overflowX: \"hidden\",\n    border: \"1px solid #eee\",\n    fontSize: \"12px\",\n    fontWeight: \"500\",\n    cursor: \"pointer\",\n    backgroundColor: \"#ebedf7\",\n    color: \"#3f51b5\",\n    boxShadow: \"2px 4px #fafafa\",\n\n    \"&:hover\": {\n      background: \"#3f51b5\",\n      color: \"#ebedf7\",\n    },\n  },\n\n  bookingBoxNew: {\n    display: \"flex\",\n    marginRight: \"10px\",\n    marginTop: \"5px\",\n    padding: \"10px\",\n    maxWidth: \"150px\",\n    overflowX: \"hidden\",\n    border: \"1px solid #ddd\",\n    color: \"#ccc\",\n    fontSize: \"12px\",\n    fontWeight: \"500\",\n    cursor: \"pointer\",\n    backgroundColor: \"#fff\",\n\n    boxShadow: \"2px 4px #fafafa\",\n    transition: \"all 0.5s ease\",\n    borderRadius: \"4px\",\n\n    \"&:hover\": {\n      background: \"#fff\",\n      color: theme.palette.secondary.main,\n      borderColor: theme.palette.secondary.main,\n    },\n  },\n\n  bookingBoxSampleTaken: {\n    display: \"flex\",\n    marginRight: \"10px\",\n    marginTop: \"5px\",\n    padding: \"10px\",\n    maxWidth: \"150px\",\n    overflowX: \"hidden\",\n    border: \"1px solid #eee\",\n    fontSize: \"12px\",\n    fontWeight: \"500\",\n    cursor: \"pointer\",\n    backgroundColor: \"#0066cc\",\n    color: \"#eee\",\n    boxShadow: \"2px 4px #fafafa\",\n\n    \"&:hover\": {\n      background: \"#0059b3\",\n      color: \"#fafafa\",\n    },\n  },\n\n  bookingBoxPositive: {\n    display: \"flex\",\n    marginRight: \"10px\",\n    marginTop: \"5px\",\n    padding: \"10px\",\n    maxWidth: \"150px\",\n    overflowX: \"hidden\",\n    border: \"1px solid #eee\",\n    fontSize: \"12px\",\n    fontWeight: \"500\",\n    cursor: \"pointer\",\n    backgroundColor: \"#d40b0b\",\n    color: \"#fff2f2\",\n    boxShadow: \"2px 4px #fafafa\",\n\n    \"&:hover\": {\n      background: \"#bf0000\",\n      color: \"#fff\",\n    },\n  },\n\n  bookingBoxReportSent: {\n    display: \"flex\",\n    marginRight: \"10px\",\n    marginTop: \"5px\",\n    padding: \"10px\",\n    maxWidth: \"150px\",\n    overflowX: \"hidden\",\n    border: \"1px solid #eee\",\n    fontSize: \"12px\",\n    fontWeight: \"500\",\n    cursor: \"pointer\",\n    backgroundColor: \"#009900\",\n    color: \"#eee\",\n    boxShadow: \"2px 4px #fafafa\",\n\n    \"&:hover\": {\n      background: \"#006e00\",\n      color: \"#fafafa\",\n    },\n  },\n\n\n\n}));\n\nconst DayViewCell = ({ key, date, time }) => {\n  const classes = useStyles();\n\n  const [state, setState] = React.useContext(GlobalState);\n  const [bookings, setBookings] = React.useState(null);\n  const [filteredBookings, setFilteredBookings] = React.useState(null);\n  const [selectedBooking, setSelectedBooking] = React.useState(null);\n\n  const [refresh, setRefresh] = React.useState(true);\n\n  const [isPast, setIsPast] = React.useState(false);\n\n  const [openDialog, setOpenDialog] = React.useState(false);\n  const [openDialogAddNew, setOpenDialogAddNew] = React.useState(false);\n\n  useEffect(() => {\n    const todayStr = dateformat(new Date(), \"yyyy-mm-dd\");\n    setIsPast(date < todayStr);\n  }, [date]);\n\n  useEffect(() => {\n    if (bookings) {\n      if (state.dayViewCalFilter && state.dayViewCalFilter.trim().length > 0) {\n        const search = state.dayViewCalFilter.trim().toUpperCase();\n        setFilteredBookings(\n          bookings.filter(\n            (booking) =>\n              booking.fullname.toLowerCase().indexOf(search.toLowerCase()) >= 0\n          )\n        );\n      } else {\n        setFilteredBookings([...bookings]);\n      }\n    }\n  }, [state.dayViewCalFilter, bookings]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      if (!date || date.length <= 0 || !time || time.length <= 0) {\n        return;\n      }\n\n      // if (isPast)\n      // {\n      //     setBookings([]);\n      //     return;\n      // }\n\n      setBookings(null);\n\n      var res = state.AdminCalendarCache?.find(\n        (record) =>\n          record.method === \"getBookingsByDateStrandTime\" &&\n          record.query === `${date}${time}`\n      )?.res;\n      if (!res || openDialog || openDialogAddNew) {\n        res = await BookService.getAllBookingsByDateStrandTime(date, time);\n        setState((state) => ({\n          ...state,\n          AdminCalendarCache: [\n            ...state.AdminCalendarCache,\n            {\n              method: \"getBookingsByDateStrandTime\",\n              query: `${date}${time}`,\n              res: res,\n            },\n          ],\n        }));\n      }\n\n      if (res.data.status === \"OK\") {\n        setBookings(res.data.bookings);\n      }\n    };\n\n    if (openDialog || openDialogAddNew) {\n      setState((state) => ({\n        ...state,\n        AdminCalendarCache: state.AdminCalendarCache.filter(\n          (record) =>\n            !(\n              record.method === \"getBookingsByDateStrandTime\" &&\n              record.query === `${date}${time}`\n            )\n        ),\n      }));\n      setState((state) => ({\n        ...state,\n        AdminCalendarCache: state.AdminCalendarCache.filter(\n          (record) =>\n            !(\n              record.method === \"getBookingsCountByDateStrandTime\" &&\n              record.query === `${date}${time}`\n            )\n        ),\n      }));\n      setState((state) => ({\n        ...state,\n        AdminCalendarCache: state.AdminCalendarCache.filter(\n          (record) =>\n            !(\n              record.method === \"getBookingsCountByDateStr\" &&\n              record.query === date\n            )\n        ),\n      }));\n    }\n\n    fetchData();\n  }, [date, time, state.bookingDialogDataChanged]);\n\n  const bookingCliked = (event, booking) => {\n    setSelectedBooking(booking);\n    setOpenDialog(true);\n  };\n\n  const getBookingClass = (status) => {\n    switch (status) {\n      case \"patient_attended\":\n        return classes.bookingBoxSampleTaken;\n      default:\n        return classes.bookingBox;\n    }\n  };\n\n  const addNewBookingClicked = () => {\n    setOpenDialogAddNew(true);\n  };\n\n\n  const getBookingsBox = (_bookings) => {\n    if (_bookings === null) {\n      return (\n        <div className={classes.LoadingProgress}>\n          <CircularProgress disableShrink />\n        </div>\n      );\n    } else if (_bookings.length >= 0) {\n      return (\n        <React.Fragment>\n          {_bookings.map((booking) => (\n            <div\n              style={booking.tr ? { borderTop: \"5px solid #d00fd6\" } : {}}\n              className={\n                getBookingClass(booking.status)\n                }\n              onClick={(event) => bookingCliked(event, booking)}\n            >\n              {`${booking.fullname}`.substring(0, 15)}\n            </div>\n          ))}\n\n          <div className={classes.bookingBoxNew} onClick={addNewBookingClicked}>\n            {\" \"}\n            + Add New Booking\n          </div>\n        </React.Fragment>\n      );\n    }\n  };\n\n  const handleCloseDialog = () => {\n    setOpenDialog(false);\n  };\n\n  const handleCloseDialogAddNew = () => {\n    setOpenDialogAddNew(false);\n  };\n\n  return (\n    <React.Fragment>\n      <div className={classes.Container}>\n        {getBookingsBox(filteredBookings)}\n      </div>\n\n      <BookingDialog\n        booking={selectedBooking}\n        open={openDialog}\n        onClose={handleCloseDialog}\n      />\n\n      <NewBookingDialog\n        date={date}\n        time={time}\n        open={openDialogAddNew}\n        handleClose={handleCloseDialogAddNew}\n      />\n    </React.Fragment>\n  );\n};\n\nDayViewCell.propTypes = {\n  key: PropTypes.string.isRequired,\n  date: PropTypes.string.isRequired,\n  time: PropTypes.string.isRequired,\n};\n\nexport default DayViewCell;\n","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport DayViewCell from './DayViewCell';\nimport dateformat from 'dateformat';\n\n\n\n\nconst rows = [\n    '10:00 AM',\n    '10:30 AM', \n    '11:00 AM', \n    '11:30 AM', \n    '12:00 PM',\n    '12:30 PM',\n    '01:00 PM',\n    '01:30 PM',\n    '02:00 PM',\n    '02:30 PM',\n    '03:00 PM',\n    '03:30 PM',\n    '04:00 PM',\n    '04:30 PM',\n    '05:00 PM',\n    '05:30 PM',\n];\n\nconst useStyles = makeStyles((theme) => ({\n\n    table: {\n        width: \"100%\",\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        overflowY: \"auto\"\n    },\n\n    th: {\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        verticalAlign: \"middle\",\n        fontcolor: \"#555\",\n        fontWeight: \"400\",\n        fontSize: \"15px\",\n        paddingTop: \"5px\",\n        paddingBottom: \"5px\",\n        width: \"12%\", \n    },\n\n    td: {\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        verticalAlign: \"middle\",\n        height : \"50px\",\n        width: \"84%\", \n    },\n\n    titleLabel: {\n        paddingBottom: \"17px\",\n        paddingTop: \"17px\",\n        color: \"#777\",\n        fontSize: \"16px\"\n    },\n\n    titleLabelToday: {\n        paddingBottom: \"17px\",\n        paddingTop: \"17px\",\n        color: \"#fff\",\n        backgroundColor: \"#1a73e8\",\n        fontSize: \"16px\"\n    },\n\n  }));\n\nconst DayView = ({date}) => {\n    const classes = useStyles();\n\n    return (\n        <React.Fragment>\n\n        <div style={{overflowY: \"scroll\" , height: \"60px\"}}>\n            <table className={classes.table}>\n                <thead>\n                    <tr>\n                        <th style={{width: \"7%\"}}>\n                        \n                        </th>\n                        <th style={{width: \"84%\"}}>\n                                <div className={(dateformat(new Date(),'yyyy-mm-dd') === dateformat(date, 'yyyy-mm-dd')) ? classes.titleLabelToday : classes.titleLabel }>\n                                        {dateformat(date,'dddd')}\n                                </div>                                \n                        </th>\n                    </tr>\n                </thead>\n             </table>\n\n        </div>\n\n            <div style={{overflowY: \"scroll\" , height: \"70vh\"}}>\n                <table className={classes.table}>   \n                    <tbody>\n                        {rows.map(row => (\n                            <tr>\n                                <td style={{width: \"7%\"}}>\n                                    {row}\n                                </td>\n                               \n                                <td className={classes.td}>\n                                     <DayViewCell key={`${dateformat(date,'yyyy-mm-dd')}-${row}`} date={dateformat(date,'yyyy-mm-dd')} time={row}/>  \n                                </td>\n                            \n                            </tr>\n                        ))}            \n                    </tbody>\n                </table>\n            </div>                    \n      \n        </React.Fragment>\n\n\n    );\n}\n\nDayView.propTypes = {\n    date: PropTypes.any.isRequired\n  };\n\n\nexport default DayView;","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MonthView from './MonthView';\nimport { Button, Grid, IconButton, InputAdornment, TextField, Tooltip } from '@material-ui/core';\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\n\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport WeekView from './WeekView';\nimport dateformat from 'dateformat';\nimport DayView from './DayView';\nimport GlobalState from '../../GlobalState';\n\nimport CloseIcon from '@material-ui/icons/Close';\n\n\n\nconst monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n  \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n];\n\nconst useStyles = makeStyles((theme) => ({\n\n    title: {\n        textAlign: \"center\",\n        fontSize: \"24px\",\n        fontColor: \"#333\"\n    },\n\n  }));\n\nexport default function CalendarView() {\n    const classes = useStyles();\n\n    const [state, setState] = React.useContext(GlobalState);\n\n    const [month, setMonth] = React.useState(new Date().getMonth() + 1);\n    const [year, setYear] = React.useState(new Date().getFullYear());\n\n    const [day, setDay] = React.useState(new Date());\n\n    const [firstDayofWeek, setFirstDayofWeek] = React.useState(new Date());\n\n    const [weekDates, setWeekDates] = React.useState([]);\n\n    const [mode, setMode] = React.useState('month');\n    const [selectedTab, setSeletedTab] = React.useState('month');\n\n    const [filter,setFilter] = React.useState('');\n\n    const filterChanged = (event) =>{\n        setFilter(event.target.value);\n        setState(state => ({...state, dayViewCalFilter : event.target.value?.trim()?.toUpperCase()}))\n      }\n\n      const removeFilter = () =>\n      {\n        setFilter('');\n        setState(state => ({...state, dayViewCalFilter : ''}));\n      }\n\n\n    useEffect( () => {\n        const today = new Date();\n        const dayofWeek = today.getDay();\n        const firstdayofweek = new Date(today.getTime() - ( dayofWeek * 86400000));\n        setFirstDayofWeek(firstdayofweek);\n        setState(state => ({...state, AdminCalendarCache : []}));\n\n        return () =>\n        {\n            setState(state => ({...state, AdminCalendarCache : []}));\n            removeFilter();\n        }\n       \n    }, []);\n\n\n    useEffect( () => {\n        const dates = [];\n        for (var i = 0; i < 7 ; i++)\n        {\n            dates.push(new Date(firstDayofWeek.getTime() + ( i * 86400000)));\n        }\n        setWeekDates(dates);\n\n    }, [firstDayofWeek]);\n\n    const handlePrevButton = (event) =>\n    {\n       if (mode === 'month')\n       {\n            if (month === 1)\n            {\n                setYear(year - 1);\n            } \n\n            const newMonth = month === 1 ? 12 : month - 1;\n            setMonth(newMonth);\n\n            const newDay = new Date(year, newMonth - 1 , 1, 0 ,0 ,0 ,0);\n            setDay(newDay);\n\n            const dayofWeek = newDay.getDay();\n            setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\n\n       } \n       else if (mode === 'week')\n       {\n           const newFirstDayofWeek = new Date(firstDayofWeek.getTime() - ( 7 * 86400000));\n           setFirstDayofWeek(newFirstDayofWeek);\n\n           setDay(newFirstDayofWeek);\n           setMonth(newFirstDayofWeek.getMonth() + 1);\n           setYear(newFirstDayofWeek.getFullYear());\n\n       }\n       else if (mode === 'day')\n       {\n           const newDay = new Date(day.getTime() - ( 1 * 86400000));\n           setDay(newDay);\n\n           const dayofWeek = newDay.getDay();\n           setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\n\n           setMonth(newDay.getMonth() + 1);\n           setYear(newDay.getFullYear());\n       }\n    }\n\n    const handleNextButton = (event) =>\n    {\n        if (mode === 'month')\n        {\n            if (month === 12)\n            {\n                setYear(year + 1);\n            } \n       \n            const newMonth = month === 12 ? 1 : month + 1;\n            setMonth(newMonth);\n\n            const newDay = new Date(year, newMonth - 1 , 1, 0 ,0 ,0 ,0);\n            setDay(newDay);\n\n            const dayofWeek = newDay.getDay();\n            setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\n        }\n        else if (mode === 'week')\n        {\n            const newFirstDayofWeek = new Date(firstDayofWeek.getTime() + ( 7 * 86400000));\n            setFirstDayofWeek(newFirstDayofWeek);\n\n            setDay(newFirstDayofWeek);\n            setMonth(newFirstDayofWeek.getMonth() + 1);\n            setYear(newFirstDayofWeek.getFullYear());\n\n        }\n        else if (mode === 'day')\n        {\n            const newDay = new Date(day.getTime() + ( 1 * 86400000));\n            setDay(newDay);\n\n            const dayofWeek = newDay.getDay();\n            setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\n \n            setMonth(newDay.getMonth() + 1);\n            setYear(newDay.getFullYear());\n        }\n    }\n\n    const goToday = (event) => {\n        const newDay = new Date();\n        const dayofWeek = newDay.getDay();\n        setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\n        setDay(newDay);\n        setMonth(newDay.getMonth() + 1);\n        setYear(newDay.getFullYear());\n    }\n\n    const dayClicked = (event, date) =>\n    {\n        const newDay = new Date(date);\n        const dayofWeek = newDay.getDay();\n        setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\n        setDay(newDay);\n        setMonth(newDay.getMonth() + 1);\n        setYear(newDay.getFullYear());\n        setSeletedTab('day');\n        setMode('day');\n    }\n\n    const getContentFromMode = (_mode) => {\n        if (_mode === 'month')\n        {\n            return (\n                <MonthView dayClicked={dayClicked} month={month} year={year}/>    \n            );\n        }    \n        else if (_mode === 'week')\n        {\n            return (\n                    <WeekView dayClicked={dayClicked} dates={weekDates}/>\n            );\n            \n        }\n        else if (_mode === 'day')\n        {\n            return (\n                <DayView date={day}/>\n            );\n        }\n    }\n\n    const getCalendarTitleFromMode = (_mode) => {\n        if (_mode === 'month')\n        {\n            return (\n                <span className={classes.title}> {`${monthNames[month - 1]} ${year}`} </span>   \n            );\n        }    \n        else if (_mode === 'week')\n        {\n            const endOfWeek = new Date(firstDayofWeek.getTime() + ( 6 * 86400000));\n            let endofWeekStr = '';\n            if (endOfWeek.getMonth() === firstDayofWeek.getMonth())\n            {\n                endofWeekStr = dateformat(endOfWeek,'d');\n            }else\n            {\n                endofWeekStr = dateformat(endOfWeek,'mmm d');\n            }\n\n            return (\n                <span className={classes.title}> {`${dateformat(firstDayofWeek,'mmm d')} - ${endofWeekStr}, ${year}`} </span>\n            );\n            \n        }\n        else if (_mode === 'day')\n        {\n            return (\n                <span className={classes.title}> {`${dateformat(day,'mmmm d, yyyy')}`} </span>\n            );\n        }\n    }\n\n\n    const handleTabChanged = (event, value) => {\n        if (value && value.length)\n        {\n          setSeletedTab(value);\n          setMode(value);\n        }\n    };\n\n    const getPrevButtonTitle = (_mode) =>\n    {\n        return `Previuos ${mode}`;\n    }\n\n    const getNextButtonTitle = (_mode) =>\n    {\n        return `Next ${mode}`;\n    }\n\n    return (\n        <React.Fragment>\n\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"space-between\"\n            alignItems=\"center\"\n            style= {{marginBottom: \"10px\", marginTop: \"0px\"}}\n            >  \n\n            <Grid item md={3}>\n                <div  style={{display:\"flex\", alignItems: \"flex-start\", justifyContent: \"flex-start\" , paddingLeft: \"10px\"}}>\n                    <Tooltip title={getPrevButtonTitle(mode)} placement=\"bottom-start\">\n                        <IconButton \n                                color=\"default\" \n                                aria-label=\"prev\"\n                                onClick = {handlePrevButton}\n                                >\n                            <NavigateBeforeIcon style={{fontSize: '2rem'}}/>\n                        </IconButton>\n                    </Tooltip>\n\n                    <Tooltip title={getNextButtonTitle(mode)} placement=\"bottom-end\">\n                        <IconButton \n                                color=\"default\" \n                                aria-label=\"next\"\n                                onClick = {handleNextButton}\n                                >\n                            <NavigateNextIcon style={{fontSize: '2rem'}}/>\n                        </IconButton>\n                    </Tooltip>\n\n                    <Button style={{marginTop: \"11px\", marginLeft: \"10px\"}} onClick={goToday} variant=\"outlined\"> Today </Button>\n                </div>\n\n            </Grid>\n\n            <Grid item md={6}>\n\n                    <Grid\n                        container\n                        direction=\"row\"\n                        justify=\"center\"\n                        alignItems=\"flex-end\"\n                        spacing = {3}\n                        >\n                            <Grid item>\n                                    {getCalendarTitleFromMode(mode)}\n                            </Grid>\n                            {mode === 'day' && (\n                                        <Grid item>\n                                                <TextField\n                                                    variant=\"standard\"\n                                                    style={{marginBottom : \"5px\"}}\n                                                    value={filter}\n                                                    onChange={filterChanged}\n                                                    margin=\"normal\"\n                                                    size=\"small\"\n                                                    id=\"filter\"\n                                                    label=\"Filter\"\n                                                    name=\"filter\"\n                                                    autoComplete=\"off\"\n                                                    InputProps={{\n                                                        endAdornment : \n                                                            <InputAdornment position=\"end\">\n                                                                <Tooltip title=\"Clear\">\n                                                                            <IconButton\n                                                                            aria-label=\"remove filter\"\n                                                                            onClick={() => removeFilter()}\n                                                                            onMouseDown={() => removeFilter()}\n                                                                        >\n                                                                            <CloseIcon/>\n                                                                        </IconButton>\n                                                                </Tooltip>\n                                                            \n                                                            </InputAdornment>\n                                                          \n                                                    }}\n                                                   \n                                                />\n                                        </Grid>\n                            )}\n                           \n                    </Grid>\n                \n            </Grid>\n\n            <Grid item md={3}>\n                <div  style={{display:\"flex\", alignItems: \"flex-end\", justifyContent: \"flex-end\", paddingRight: \"10px\" }}>\n                    <ToggleButtonGroup\n                        value={selectedTab}\n                        exclusive\n                        onChange={handleTabChanged}\n                        aria-label=\"select view mode\"\n                    >\n                        <ToggleButton style={selectedTab === 'month' ? {width: \"80px\", color: \"#3f51b5\", backgroundColor: \"#ebedf7\" } : {width: \"80px\"}} value=\"month\" aria-label=\"month view\">\n                                month\n                        </ToggleButton>\n                        <ToggleButton style={selectedTab === 'week' ? {width: \"80px\", color: \"#3f51b5\", backgroundColor: \"#ebedf7\"} : {width: \"80px\"}}  value=\"week\" aria-label=\"week view\">\n                                week\n                        </ToggleButton>\n                        <ToggleButton style={selectedTab === 'day' ? {width: \"80px\", color: \"#3f51b5\", backgroundColor: \"#ebedf7\"} : {width: \"80px\"}} value=\"day\" aria-label=\"day view\">\n                                day\n                        </ToggleButton>\n                    </ToggleButtonGroup>\n                </div>\n            </Grid>\n\n           </Grid> \n\n             {getContentFromMode(mode)}\n\n        </React.Fragment>\n\n\n    );\n\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\n\nexport default function Title(props) {\n  return (\n    <Typography component=\"h6\" variant=\"h6\" color=\"primary\" gutterBottom>\n      {props.children}\n    </Typography>\n  );\n}\n\nTitle.propTypes = {\n  children: PropTypes.node,\n};","import React, { useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Title from \"./Title\";\nimport PCRBookService from \"./PCR/services/BookService\";\nimport GynaeBookService from \"./Gynae/services/BookService\";\nimport GPBookService from \"./GP/services/BookService\";\nimport STDBookService from \"./STD/services/BookService\";\nimport BloodBookService from \"./Blood/services/BookService\";\nimport DermaBookService from \"./Derma/services/BookService\";\n\n\nimport * as dateformat from \"dateformat\";\nimport { LinearProgress } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n}));\n\nexport default function TodayBookingView() {\n  const classes = useStyles();\n  \n  const [data, setData] = React.useState(null);\n\n  const [refresh, setRefresh] = React.useState(false);\n\n  const [loading, setLoading] = React.useState(false);\n\n\n  const loadData = async () => {\n    setLoading(true);\n\n    const today = dateformat(new Date(), 'yyyy-mm-dd')\n    try{\n      const res1 = await PCRBookService.getAllBookingsCountByDateStr(today)\n      const res2 = await GynaeBookService.getAllBookingsCountByDateStr(today)\n      const res3 = await GPBookService.getAllBookingsCountByDateStr(today)\n      const res4 = await STDBookService.getAllBookingsCountByDateStr(today)\n      const res5 = await BloodBookService.getAllBookingsCountByDateStr(today)\n      const res6 = await DermaBookService.getAllBookingsCountByDateStr(today)\n\n      \n      const pcr =  parseInt(res1.data.count)\n      const gynae = parseInt(res2.data.count)\n      const gp = parseInt(res3.data.count)\n      const std = parseInt(res4.data.count)\n      const blood = parseInt(res5.data.count)\n      const derma = parseInt(res6.data.count)\n\n      const _data = [\n        {clinic: \"PCR\", count: pcr},\n        {clinic: \"Gynae\", count: gynae},\n        {clinic: \"GP\", count: gp},\n        {clinic: \"STD\", count: std},\n        {clinic: \"Blood\", count: blood},\n        {clinic: \"Dermatology\", count: derma},\n\n        {clinic: \"Total\", count: pcr+gynae+gp+std+blood+derma}\n      ]\n      setData(_data)\n\n      setLoading(false);\n    }\n    catch(err)\n    {\n      console.error(err)\n      setLoading(false)\n    }\n  };\n\n  useEffect(() => {\n    loadData();\n  }, [refresh]);\n\n  useEffect(() => {\n    loadData();\n    const interval = setInterval(() => {\n      setRefresh((refresh) => !refresh);\n    }, 30000);\n\n    return () =>\n    {\n      clearInterval(interval)\n    }\n  }, []);\n\n  return (\n    <React.Fragment>\n      {loading && (\n        <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\n          <LinearProgress color=\"primary\" />\n        </div>\n      )}\n      <Title>Today Bookings</Title>\n      {data && (\n        <Table size=\"small\">\n          <TableHead>\n            <TableRow>\n              <TableCell>Clinic</TableCell>\n              <TableCell>Count</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {data.map((row) => (\n              <TableRow key={row._id}>\n                <TableCell>{row.clinic}</TableCell>\n                <TableCell>{row.count}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      )}\n    </React.Fragment>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Title from \"./Title\";\nimport PCRBookService from \"./PCR/services/BookService\";\nimport GynaeBookService from \"./Gynae/services/BookService\";\nimport GPBookService from \"./GP/services/BookService\";\nimport STDBookService from \"./STD/services/BookService\";\nimport BloodBookService from \"./Blood/services/BookService\";\nimport DermaBookService from \"./Derma/services/BookService\";\n\n\n\nimport * as dateformat from \"dateformat\";\nimport { LinearProgress } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  seeMore: {\n    marginTop: theme.spacing(3),\n  },\n}));\n\nexport default function TomorrowBookingView() {\n  const classes = useStyles();\n  const [data, setData] = React.useState(null);\n\n  const [refresh, setRefresh] = React.useState(false);\n\n  const [loading, setLoading] = React.useState(false);\n\n\n\n  const loadData = async () => {\n    setLoading(true);\n    const today = new Date()\n    const tomorrow = new Date(today.getTime() + 24 * 60 * 60 * 1000)\n\n    const tomorrowStr = dateformat(tomorrow, 'yyyy-mm-dd')\n    try{\n      const res1 = await PCRBookService.getAllBookingsCountByDateStr(tomorrowStr)\n      const res2 = await GynaeBookService.getAllBookingsCountByDateStr(tomorrowStr)\n      const res3 = await GPBookService.getAllBookingsCountByDateStr(tomorrowStr)\n      const res4 = await STDBookService.getAllBookingsCountByDateStr(tomorrowStr)\n      const res5 = await BloodBookService.getAllBookingsCountByDateStr(tomorrowStr)\n      const res6 = await DermaBookService.getAllBookingsCountByDateStr(tomorrowStr)\n\n      \n      const pcr =  parseInt(res1.data.count)\n      const gynae = parseInt(res2.data.count)\n      const gp = parseInt(res3.data.count)\n      const std = parseInt(res4.data.count)\n      const blood = parseInt(res5.data.count)\n      const derma = parseInt(res6.data.count)\n\n      const _data = [\n        {clinic: \"PCR\", count: pcr},\n        {clinic: \"Gynae\", count: gynae},\n        {clinic: \"GP\", count: gp},\n        {clinic: \"STD\", count: std},\n        {clinic: \"Blood\", count: blood},\n        {clinic: \"Dermatology\", count: derma},\n\n        {clinic: \"Total\", count: pcr+gynae+gp+std+blood+derma}\n      ]\n\n      setData(_data)\n\n      setLoading(false);\n    }\n    catch(err)\n    {\n      console.error(err)\n      setLoading(false)\n    }\n  };\n\n  useEffect(() => {\n    loadData();\n  }, [refresh]);\n\n  useEffect(() => {\n    loadData();\n    const interval = setInterval(() => {\n      setRefresh((refresh) => !refresh);\n    }, 30000);\n\n    return () =>\n    {\n      clearInterval(interval)\n    }\n  }, []);\n\n  return (\n    <React.Fragment>\n      {loading && (\n        <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\n          <LinearProgress color=\"primary\" />\n        </div>\n      )}\n      <Title>Tomorrow Bookings</Title>\n      {data && (\n        <Table size=\"small\">\n          <TableHead>\n            <TableRow>\n              <TableCell>Clinic</TableCell>\n              <TableCell>Count</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {data.map((row) => (\n              <TableRow key={row._id}>\n                <TableCell>{row.clinic}</TableCell>\n                <TableCell>{row.count}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      )}\n    </React.Fragment>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Title from \"./Title\";\nimport PCRBookService from \"./PCR/services/BookService\";\nimport GynaeBookService from \"./Gynae/services/BookService\";\nimport GPBookService from \"./GP/services/BookService\";\nimport STDBookService from \"./STD/services/BookService\";\nimport BloodBookService from \"./Blood/services/BookService\";\nimport DermaBookService from \"./Derma/services/BookService\";\n\n\n\nimport { LinearProgress } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n}));\n\nexport default function TotalBookingView() {\n  const classes = useStyles();\n\n  const [data, setData] = React.useState(null);\n\n  const [refresh, setRefresh] = React.useState(false);\n\n  const [loading, setLoading] = React.useState(false);\n\n\n  const loadData = async () => {\n    setLoading(true);\n   \n    try{\n      const res1 = await PCRBookService.getAllBookingsCountAll()\n      const res2 = await GynaeBookService.getAllBookingsCountAll()\n      const res3 = await GPBookService.getAllBookingsCountAll()\n      const res4 = await STDBookService.getAllBookingsCountAll()\n      const res5 = await BloodBookService.getAllBookingsCountAll()\n      const res6 = await DermaBookService.getAllBookingsCountAll()\n      \n      const pcr =  parseInt(res1.data.count)\n      const gynae = parseInt(res2.data.count)\n      const gp = parseInt(res3.data.count)\n      const std = parseInt(res4.data.count)\n      const blood = parseInt(res5.data.count)\n      const derma = parseInt(res6.data.count)\n\n      const _data = [\n        {clinic: \"PCR\", count: pcr},\n        {clinic: \"Gynae\", count: gynae},\n        {clinic: \"GP\", count: gp},\n        {clinic: \"STD\", count: std},\n        {clinic: \"Blood\", count: blood},\n        {clinic: \"Dermatology\", count: derma},\n\n        {clinic: \"Total\", count: pcr+gynae+gp+std+blood+derma}\n      ]\n\n      setData(_data)\n\n      setLoading(false);\n    }\n    catch(err)\n    {\n      console.error(err)\n      setLoading(false)\n    }\n  };\n\n  useEffect(() => {\n    loadData();\n  }, [refresh]);\n\n  useEffect(() => {\n    loadData();\n    const interval = setInterval(() => {\n      setRefresh((refresh) => !refresh);\n    }, 30000);\n\n    return () =>\n    {\n      clearInterval(interval)\n    }\n    \n\n  }, []);\n\n  return (\n    <React.Fragment>\n      {loading && (\n        <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\n          <LinearProgress color=\"primary\" />\n        </div>\n      )}\n      <Title>Total Bookings</Title>\n      {data && (\n        <Table size=\"small\">\n          <TableHead>\n            <TableRow>\n              <TableCell>Clinic</TableCell>\n              <TableCell>Count</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {data.map((row) => (\n              <TableRow key={row._id}>\n                <TableCell>{row.clinic}</TableCell>\n                <TableCell>{row.count}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      )}\n    </React.Fragment>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Title from \"./Title\";\nimport PCRBookService from \"./PCR/services/BookService\";\n\nimport GlobalState from \"./GlobalState\";\nimport { Grid, LinearProgress } from \"@material-ui/core\";\n\nimport HourglassEmptyIcon from \"@material-ui/icons/HourglassEmpty\";\nimport { CalendarColors } from \"./Admin/calendar-admin/colors\";\n\nconst useStyles = makeStyles((theme) => ({\n  countLabel: {\n   position: \"absolute\",\n   top: \"65px\",\n   left: \"44%\",\n   fontSize: \"3rem\",\n  },\n\n  countLabelRed: {\n    position: \"absolute\",\n    top: \"65px\",\n    left: \"44%\",\n    fontSize: \"3rem\",\n    color: theme.palette.secondary.main\n   },\n\n   Icon: {\n    fontSize: \"2rem\"\n\n  },\n\n  IconRed: {\n   fontSize: \"2rem\",\n  //  color: theme.palette.secondary.main,\n  },\n\n  TitleRed:{\n    // color: theme.palette.secondary.main,\n  }\n\n\n}));\n\nexport default function LateBookingView() {\n  const classes = useStyles();\n  const [state, setState] = React.useContext(GlobalState);\n\n  const [data, setData] = React.useState(null);\n\n  const [refresh, setRefresh] = React.useState(false);\n\n  const [loading, setLoading] = React.useState(false);\n\n  const loadData = async () => {\n    setLoading(true);\n\n    try {\n      const res = await PCRBookService.getLateBookings();\n\n      setData(res.data.length);\n\n      setLoading(false);\n    } catch (err) {\n      console.error(err);\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    loadData();\n  }, [refresh]);\n\n  useEffect(() => {\n    loadData();\n    const interval = setInterval(() => {\n      setRefresh((refresh) => !refresh);\n    }, 30000);\n\n    return () =>\n    {\n      clearInterval(interval)\n    }\n  }, []);\n\n  return (\n    <React.Fragment>\n      <div style={{ position: \"relative\" }}>\n        {loading && (\n          <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\n            <LinearProgress color=\"primary\" />\n          </div>\n        )}\n        <Title>\n          <Grid\n            container\n            direction=\"row-reverse\"\n            justify=\"space-between\"\n            alignItems=\"center\"\n          >\n            <Grid item>\n              <div style={{ paddingTop: \"5px\" }}>\n                <HourglassEmptyIcon className={data === 0 ? classes.Icon : classes.IconRed } />\n              </div>\n            </Grid>\n            <Grid item style={{ textAlign: \"left\" }}>\n              <span className={data === 0 ? classes.Title : classes.TitleRed}>\n              <span style={{color:CalendarColors.PCR_COLOR}}>PCR</span> 40-Hours Late\n              </span>\n           \n            </Grid>\n          </Grid>\n\n          {data !== null && <div className={data === 0 ? classes.countLabel : classes.countLabelRed }>{data}</div>}\n        </Title>\n      </div>\n    </React.Fragment>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Title from \"./Title\";\nimport PCRBookService from \"./PCR/services/BookService\";\n\nimport GlobalState from \"./GlobalState\";\nimport { Grid, LinearProgress } from \"@material-ui/core\";\n\nimport ReportProblemOutlinedIcon from \"@material-ui/icons/ReportProblemOutlined\";\nimport { CalendarColors } from \"./Admin/calendar-admin/colors\";\n\nconst useStyles = makeStyles((theme) => ({\n  countLabel: {\n    position: \"absolute\",\n    top: \"65px\",\n    left: \"44%\",\n    fontSize: \"3rem\",\n  },\n\n  countLabelRed: {\n    position: \"absolute\",\n    top: \"65px\",\n    left: \"44%\",\n    fontSize: \"3rem\",\n    color: theme.palette.secondary.main,\n  },\n\n  Icon: {\n    fontSize: \"2rem\",\n  },\n\n  IconRed: {\n    fontSize: \"2rem\",\n    // color: theme.palette.secondary.main,\n  },\n\n  TitleRed: {\n    // color: theme.palette.secondary.main,\n  },\n}));\n\nexport default function UnmatchedBookingView() {\n  const classes = useStyles();\n  const [state, setState] = React.useContext(GlobalState);\n\n  const [data, setData] = React.useState(null);\n\n  const [refresh, setRefresh] = React.useState(false);\n\n  const [loading, setLoading] = React.useState(false);\n\n  const loadData = async () => {\n    setLoading(true);\n\n    try {\n      const res = await PCRBookService.getUnmatchedRecords();\n\n      setData(res.data.length);\n\n      setLoading(false);\n    } catch (err) {\n      console.error(err);\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    loadData();\n  }, [refresh]);\n\n  useEffect(() => {\n    loadData();\n    const interval = setInterval(() => {\n      setRefresh((refresh) => !refresh);\n    }, 30000);\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, []);\n\n  return (\n    <React.Fragment>\n      <div style={{ position: \"relative\" }}>\n        {loading && (\n          <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\n            <LinearProgress color=\"primary\" />\n          </div>\n        )}\n        <Title>\n          <Grid\n            container\n            direction=\"row-reverse\"\n            justify=\"space-between\"\n            alignItems=\"center\"\n          >\n            <Grid item>\n              <div style={{ paddingTop: \"5px\" }}>\n                <ReportProblemOutlinedIcon\n                  className={data === 0 ? classes.Icon : classes.IconRed}\n                />\n              </div>\n            </Grid>\n            <Grid item style={{ textAlign: \"left\" }}>\n              <span className={data === 0 ? classes.Title : classes.TitleRed}>\n              <span style={{color:CalendarColors.PCR_COLOR}}>PCR</span> Unmatched Records\n              </span>\n            </Grid>\n          </Grid>\n\n          {data !== null && (\n            <div\n              className={\n                data === 0 ? classes.countLabel : classes.countLabelRed\n              }\n            >\n              {data}\n            </div>\n          )}\n        </Title>\n      </div>\n    </React.Fragment>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Title from \"./Title\";\nimport GynaeBookService from \"./Gynae/services/BookService\";\n\nimport GlobalState from \"./GlobalState\";\nimport { Grid, LinearProgress } from \"@material-ui/core\";\n\nimport ReportProblemOutlinedIcon from \"@material-ui/icons/ReportProblemOutlined\";\nimport { CalendarColors } from \"./Admin/calendar-admin/colors\";\n\nconst useStyles = makeStyles((theme) => ({\n  countLabel: {\n    position: \"absolute\",\n    top: \"65px\",\n    left: \"44%\",\n    fontSize: \"3rem\",\n  },\n\n  countLabelRed: {\n    position: \"absolute\",\n    top: \"65px\",\n    left: \"44%\",\n    fontSize: \"3rem\",\n    color: theme.palette.secondary.main,\n  },\n\n  Icon: {\n    fontSize: \"2rem\",\n  },\n\n  IconRed: {\n    fontSize: \"2rem\",\n    // color: theme.palette.secondary.main,\n  },\n\n  TitleRed: {\n    // color: theme.palette.secondary.main,\n  },\n}));\n\nexport default function ShouldRefundBookingView() {\n  const classes = useStyles();\n  const [state, setState] = React.useContext(GlobalState);\n\n  const [data, setData] = React.useState(null);\n\n  const [refresh, setRefresh] = React.useState(false);\n\n  const [loading, setLoading] = React.useState(false);\n\n  const loadData = async () => {\n    setLoading(true);\n\n    try {\n      const res = await GynaeBookService.getShouldRefundsCount()\n      setData(res.data.count);\n\n      setLoading(false);\n    } catch (err) {\n      console.error(err);\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    loadData();\n  }, [refresh]);\n\n  useEffect(() => {\n    loadData();\n    const interval = setInterval(() => {\n      setRefresh((refresh) => !refresh);\n    }, 30000);\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, []);\n\n  return (\n    <React.Fragment>\n      <div style={{ position: \"relative\" }}>\n        {loading && (\n          <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\n            <LinearProgress color=\"primary\" />\n          </div>\n        )}\n        <Title>\n          <Grid\n            container\n            direction=\"row-reverse\"\n            justify=\"space-between\"\n            alignItems=\"center\"\n          >\n            <Grid item>\n              <div style={{ paddingTop: \"5px\" }}>\n                <ReportProblemOutlinedIcon\n                  className={data === 0 ? classes.Icon : classes.IconRed}\n                />\n              </div>\n            </Grid>\n            <Grid item style={{ textAlign: \"left\" }}>\n              <span className={data === 0 ? classes.Title : classes.TitleRed}>\n                <span style={{color:CalendarColors.GYNAE_COLOR}}>GYNAE</span>  Waiting for Refunds\n              </span>\n            </Grid>\n          </Grid>\n\n          {data !== null && (\n            <div\n              className={\n                data === 0 ? classes.countLabel : classes.countLabelRed\n              }\n            >\n              {data}\n            </div>\n          )}\n        </Title>\n      </div>\n    </React.Fragment>\n  );\n}\n","export const getRole = () => {\n    return sessionStorage.getItem('medexadmin-role')\n}\n\nexport const setRole = (role) => {\n    return sessionStorage.setItem('medexadmin-role', role)\n}\n\nexport const clearRole = (role) => {\n    return sessionStorage.removeItem('medexadmin-role')\n}","import React, { useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Title from \"./Title\";\nimport BloodBookService from \"./Blood/services/BookService\";\n\nimport GlobalState from \"./GlobalState\";\nimport { Grid, LinearProgress } from \"@material-ui/core\";\n\nimport ReportProblemOutlinedIcon from \"@material-ui/icons/ReportProblemOutlined\";\nimport { CalendarColors } from \"./Admin/calendar-admin/colors\";\n\nconst useStyles = makeStyles((theme) => ({\n  countLabel: {\n    position: \"absolute\",\n    top: \"65px\",\n    left: \"44%\",\n    fontSize: \"3rem\",\n  },\n\n  countLabelRed: {\n    position: \"absolute\",\n    top: \"65px\",\n    left: \"44%\",\n    fontSize: \"3rem\",\n    color: theme.palette.secondary.main,\n  },\n\n  Icon: {\n    fontSize: \"2rem\",\n  },\n\n  IconRed: {\n    fontSize: \"2rem\",\n    // color: theme.palette.secondary.main,\n  },\n\n  TitleRed: {\n    // color: theme.palette.secondary.main,\n  },\n}));\n\nexport default function NewBloodResultsBookingView() {\n  const classes = useStyles();\n  const [state, setState] = React.useContext(GlobalState);\n\n  const [data, setData] = React.useState(null);\n\n  const [refresh, setRefresh] = React.useState(false);\n\n  const [loading, setLoading] = React.useState(false);\n\n  const loadData = async () => {\n    setLoading(true);\n\n    try {\n      const res = await BloodBookService.getNewBloodResultsCount();\n\n      setData(res.data.result);\n\n      setLoading(false);\n    } catch (err) {\n      console.error(err);\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    loadData();\n  }, [refresh]);\n\n  useEffect(() => {\n    loadData();\n    const interval = setInterval(() => {\n      setRefresh((refresh) => !refresh);\n    }, 30000);\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, []);\n\n  return (\n    <React.Fragment>\n      <div style={{ position: \"relative\" }}>\n        {loading && (\n          <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\n            <LinearProgress color=\"primary\" />\n          </div>\n        )}\n        <Title>\n          <Grid\n            container\n            direction=\"row-reverse\"\n            justify=\"space-between\"\n            alignItems=\"center\"\n          >\n            <Grid item>\n              <div style={{ paddingTop: \"5px\" }}>\n                <ReportProblemOutlinedIcon\n                  className={data === 0 ? classes.Icon : classes.IconRed}\n                />\n              </div>\n            </Grid>\n            <Grid item style={{ textAlign: \"left\" }}>\n              <span className={data === 0 ? classes.Title : classes.TitleRed}>\n              <span style={{color:CalendarColors.BLOOD_COLOR}}>BLOOD</span> New Results\n              </span>\n            </Grid>\n          </Grid>\n\n          {data !== null && (\n            <div\n              className={\n                data === 0 ? classes.countLabel : classes.countLabelRed\n              }\n            >\n              {data}\n            </div>\n          )}\n        </Title>\n      </div>\n    </React.Fragment>\n  );\n}\n","import React from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { Tooltip } from \"@material-ui/core\";\nimport GlobalState from \"./GlobalState\";\n\nimport TodayBookingView from \"./TodayBookingView\" \nimport TomorrowBookingView from \"./TomorrowBookingView\";\nimport TotalBookingView from \"./TotalBookingView\";\nimport LateBookingView from \"./LateBookingView\";\nimport UnmatchedBookingView from \"./UnmatchedBookingView\";\nimport ShouldRefundBookingView from \"./ShouldRefundBookingView\";\nimport { setRole } from \"./Role\";\nimport { useLocation, useHistory } from \"react-router-dom\";\nimport { getGlobalPath } from \"./GlobalPath\";\nimport { getMenuId, getMenuIndex } from \"./MenuList\";\nimport NewBloodResultsBookingView from \"./NewBloodResultsBookingView\";\n\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\",\n  },\n  fixedHeight: {\n    height: 350,\n  },\n  fixedHeightSmall: {\n    height: 200,\n    cursor:\"pointer\"\n  },\n}));\n\nexport default function DashboardPreview() {\n  const classes = useStyles();\n  const [state, setState] = React.useContext(GlobalState);\n\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n  const fixedHeightPaperSmall = clsx(classes.paper, classes.fixedHeightSmall);\n\n  const history = useHistory();\n\n  const gotoLateBookings = () =>\n  {\n    const role = 'pcr'\n    setRole(role);\n    setState((state) => ({ ...state, role: role }));\n    history.push(getGlobalPath(`/${getMenuId(role, getMenuIndex(role,'latebookings'))}`));\n  }\n\n  const gotoUnmatchedPCR = () =>\n  {\n    const role = 'pcr'\n    setRole(role);\n    setState((state) => ({ ...state, role: role }));\n    history.push(getGlobalPath(`/${getMenuId(role, getMenuIndex(role,'unmatchedRecords'))}`));\n  }\n\n  const gotoBlood = () =>\n  {\n    const role = 'blood'\n    setRole(role);\n    setState((state) => ({ ...state, role: role }));\n    history.push(getGlobalPath(`/${getMenuId(role, getMenuIndex(role,'dashboard'))}`));\n  }\n\n  \n  const gotoRefundGynae = () =>\n  {\n    const role = 'gynae'\n    setRole(role);\n    setState((state) => ({ ...state, role: role }));\n    history.push(getGlobalPath(`/${getMenuId(role, getMenuIndex(role,'deletedBookings'))}`));\n  }\n\n  \n\n  return (\n    <React.Fragment>\n      <Grid container spacing={2}>       \n       \n        <Grid item xs={12} md={6}>\n          <Paper className={fixedHeightPaperSmall} onClick={gotoLateBookings}>\n             <LateBookingView />\n          </Paper>\n        </Grid>\n\n        <Grid item xs={12} md={6}>\n          <Paper className={fixedHeightPaperSmall} onClick={gotoUnmatchedPCR}>\n             <UnmatchedBookingView />\n          </Paper>\n        </Grid>\n\n        <Grid item xs={12} md={6}>\n          <Paper className={fixedHeightPaperSmall} onClick={gotoRefundGynae}>\n             <ShouldRefundBookingView />\n          </Paper>\n        </Grid>\n\n        <Grid item xs={12} md={6}>\n          <Paper className={fixedHeightPaperSmall} onClick={gotoBlood}>\n             <NewBloodResultsBookingView />\n          </Paper>\n        </Grid>\n\n        {/* <Grid item xs={12} md={4}>\n        </Grid>\n        <Grid item xs={12} md={4}>\n        </Grid> */}\n\n\n        <Grid item xs={12} md={4}>\n          <Paper className={fixedHeightPaper}>\n            <TodayBookingView />\n          </Paper>\n        </Grid>\n      \n        <Grid item xs={12} md={4}>\n          <Paper className={fixedHeightPaper}>\n             <TomorrowBookingView />\n          </Paper>\n        </Grid>\n\n        <Grid item xs={12} md={4}>\n          <Paper className={fixedHeightPaper}>\n             <TotalBookingView />\n          </Paper>\n        </Grid>\n\n\n      </Grid>\n    </React.Fragment>\n  );\n}\n","import axios from 'axios';\nimport { authToken, backendAPI } from '../../GlobalPath';\n\nexport default axios.create({\n  baseURL: backendAPI,\n  headers : {\n      'Authorization' : authToken,\n       'Content-Type': 'application/json',\n  }\n});","import API from './api';\nimport axiosRetry from 'axios-retry';\n\nexport default class BookService {\n\n\n   static addNewBooking = (payload) =>\n   {\n      return API.post(`/api/gp/book/addnewbooking`, payload);\n   }\n\n\n   static sendRegFormEmail = (bookingId) =>\n   {\n      return API.post(`/api/gp/book/sendregformemail?id=${bookingId}`);\n   }\n   static payBooking = (bookingId,price, paymentMethod, corporate) =>\n   {\n      return API.post(`/api/gp/book/paybooking?id=${bookingId}&paymentmethod=${paymentMethod}&corporate=${corporate}&price=${price}`);\n   }\n\n   static unPayBooking = (bookingId) =>\n   {\n      return API.post(`/api/gp/book/unpaybooking?id=${bookingId}`);\n   }\n\n   static getShouldRefundsCount = () =>\n   {\n      return API.get(`/api/gp/book/getshouldrefundscount?`);\n   }\n\n   \n\n   static refundBooking = (bookingId) =>\n   {\n      return API.post(`/api/gp/payment/refundpayment`, {bookingId: bookingId});\n   }\n\n   static getBookingsStatsByDateStr = (dateStr) =>\n   {\n      return API.get(`/api/gp/book/getbookingsstatsbydatestr?date=${dateStr}`);\n   }\n\n   static getBookingsCountByDateStr = (dateStr) =>\n   {\n      return API.get(`/api/gp/book/getbookingscountbydatestr?date=${dateStr}`);\n   }\n\n   static getAllBookingsCountAll = () =>\n   {\n      return API.get(`/api/gp/book/getallbookingscountall`);\n   }\n\n   static getBookingsCountByDateStrandTime = (dateStr, time, source) =>\n   {\n      return API.get(`/api/gp/book/getbookingscountbydatestrandtime?date=${dateStr}&time=${time}`, {cancelToken: source.token});\n   }\n\n   static getBookingsByDateStrandTime = (dateStr, time) =>\n   {\n      return API.get(`/api/gp/book/getbookingsbydatestrandtime?date=${dateStr}&time=${time}`);\n   }\n\n\n   static getAllBookingsCountByDateStr = (dateStr) =>\n   {\n      return API.get(`/api/admin/book/getallbookingscountbydatestr?date=${dateStr}`);\n   }\n\n   static getAllBookingsCountByDateStrandTime = (dateStr, time, source) =>\n   {\n      return API.get(`/api/admin/book/getallbookingscountbydatestrandtime?date=${dateStr}&time=${time}`, {cancelToken: source.token});\n   }\n\n   static getAllBookingsByDateStrandTime = (dateStr, time) =>\n   {\n      return API.get(`/api/admin/book/getallbookingsbydatestrandtime?date=${dateStr}&time=${time}`);\n   }\n\n   static changeBackToBookingMade = (id) =>\n   {\n      return API.post(`/api/gp/book/changebacktobookingmade?id=${id}`);\n   }\n\n   static changeToPatientAttended = (id) =>\n   {\n      return API.post(`/api/gp/book/changetopatientattended?id=${id}`);\n   }\n\n   static updateBooking = (payload) =>\n   {\n      return API.post(`/api/gp/book/updatebookappointment`, payload);\n   } \n\n   static updateBookingTime = (payload) =>\n   {\n      return API.post(`/api/gp/book/updatebookappointmenttime`, payload);\n   } \n\n   static deleteBooking = (id) =>\n   {\n      return API.post(`/api/gp/book/deletebookappointment?id=${id}`);\n   } \n\n   static unDeleteBooking = (id) =>\n   {\n      return API.post(`/api/gp/book/undeletebookappointment?id=${id}`);\n   } \n   \n    static getBookingsByRef = (ref) =>\n    {\n       return API.get(`/api/admin/book/getbookingsbyref?ref=${ref}`);\n    }\n\n    static getBookingById = (id) =>\n    {\n       return API.get(`/api/gp/book/getbookingbyid?id=${id}`);\n    }\n\n    static getAllBookings = (limit) =>\n    {\n      if (!limit) limit = 25 \n      return API.get(`/api/admin/book/getallbookings?limit=${limit}`);\n    }\n\n    static searchAllBookings = (filter) =>\n    {\n      return API.post(`/api/admin/book/searchallbookings`,{filter:filter});\n    }\n\n\n    static getDeletedBookings= (limit) =>\n    {\n      if (!limit) limit = 25 \n       return API.get(`/api/admin/book/getdeletedbookings?limit=${limit}`);\n    }\n\n    static getTodayBookings= () =>\n    {\n       return API.get(`/api/admin/book/gettodaybookings`);\n    }\n\n    static getOldBookings= (limit) =>\n    {\n      if (!limit) limit = 25 \n       return API.get(`/api/admin/book/getoldbookings?limit=${limit}`);\n    }\n\n    static getFutureBookings= (limit) =>\n    {\n      if (!limit) limit = 25 \n       return API.get(`/api/admin/book/getfuturebookings?limit=${limit}`);\n    }\n\n    static getRecentBookings= () =>\n    {\n       return API.get(`/api/admin/book/getrecentbookings`);\n    }\n\n    static getRecentBookingsAll= (limit) =>\n    {\n      if (!limit) limit = 25 \n       return API.get(`/api/admin/book/getrecentbookingsall?limit=${limit}`);\n    }\n}","import React, { useEffect } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport GlobalState from \"./../GlobalState\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport PropTypes from \"prop-types\";\nimport MaskedInput from \"react-text-mask\";\nimport { FormControl, Grid, Input, InputLabel } from \"@material-ui/core\";\nimport BookService from \"./services/BookService\";\n\nimport PersonsBoxPCR from \"./../PCR/PersonsBox\";\nimport PersonsBoxGP from \"./../GP/PersonsBox\";\nimport PersonsBoxGynae from \"./../Gynae/PersonsBox\";\nimport PersonsBoxSTD from \"./../STD/PersonsBox\";\nimport PersonsBoxBlood from \"./../Blood/PersonsBox\";\n\nimport { width } from \"@material-ui/system\";\n\nconst isBoolean = (param) => typeof param === \"boolean\";\n\nconst useFocus = (initialFocus = false, id = \"\") => {\n  const [focus, setFocus] = React.useState(initialFocus);\n  const setFocusWithTrueDefault = (param) =>\n    setFocus(isBoolean(param) ? param : true);\n  return [\n    setFocusWithTrueDefault,\n    {\n      autoFocus: focus,\n      key: `${id}${focus}`,\n      onFocus: () => setFocus(true),\n      onBlur: () => setFocus(false),\n    },\n  ];\n};\n\nfunction TextMaskCustom(props) {\n  const { inputRef, ...other } = props;\n\n  return (\n    <MaskedInput\n      {...other}\n      ref={(ref) => {\n        inputRef(ref ? ref.inputElement : null);\n      }}\n      mask={[/\\d/, /\\d/, /\\d/, \"-\", /\\d/, /\\d/, /\\d/, \"-\", /\\d/, /\\d/, /\\d/]}\n      // placeholderChar={'\\u2000'}\n      showMask\n    />\n  );\n}\n\nTextMaskCustom.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    \"& > * + *\": {\n      marginTop: theme.spacing(2),\n    },\n    marginTop: \"20px\",\n  },\n\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n\n  Find: {\n    width: \"80px\",\n  },\n\n  Clear: {\n    marginRight: \"20px\",\n  },\n\n  title: {\n    marginTop: \"20px\",\n  },\n\n  TextBox: {\n    marginTop: \"30px\",\n    \"& > *\": {\n      textAlign: \"center\",\n    },\n  },\n\n  TextField: {},\n\n  NoRecordsFound: {\n    marginTop: \"20px\",\n    color: \"red\",\n    fontWeight: \"600\",\n    fontSize: \"14px\",\n  },\n\n  PersonsBox: {\n    marginTop: \"20px\",\n    marginBottom: \"50px\",\n  },\n\n  boxTitle:{\n      fontWeight: \"500\",\n      color: theme.palette.secondary.main,\n      borderColor: theme.palette.secondary.main,\n      border: \"1px solid\",\n      fontSize: \"1.2rem\",\n      backgroundColor: \"#fff\",\n      width: \"150px\",\n      padding:\"5px\",\n      borderRadius:\"30px\",\n      textAlign:\"center\",\n      marginBottom:\"10px\",\n      boxShadow: \"4px 8px 8px #eee\"\n  }\n}));\n\nexport default function FindByRef() {\n  const classes = useStyles();\n  const [state, setState] = React.useContext(GlobalState);\n\n  const [setFocus, focusProps] = useFocus(true);\n\n  //   useEffect( () =>\n  //   {\n  //      findRecords();\n  //   }, [state.findRecords]);\n\n  useEffect(() => {\n    setState((state) => ({ ...state, foundRecords: [] }));\n  }, []);\n\n  useEffect(() => {\n    BookService.getBookingsByRef(state.ref).then((res) => {\n      if (res.data.length > 0) {\n        setState((state) => ({ ...state, foundRecords: res.data }));\n      }\n    });\n  }, [state.RefreshPersonInfo]);\n\n  const handleChange = (event) => {\n    setState((state) => ({ ...state, ref: event.target.value }));\n    setState((state) => ({ ...state, refError: false }));\n  };\n\n  const clearField = () => {\n    setState((state) => ({ ...state, refError: false }));\n    setState((state) => ({ ...state, ref: \"___-___-___\" }));\n    setState((state) => ({ ...state, foundRecords: [] }));\n    setFocus();\n  };\n\n  const findRecords = () => {\n    if (!state.ref || state.ref.indexOf(\"_\") >= 0) {\n      setState((state) => ({ ...state, refError: true }));\n      return;\n    }\n\n    setState((state) => ({ ...state, submiting: true }));\n    setState((state) => ({ ...state, foundRecords: [] }));\n\n    BookService.getBookingsByRef(state.ref)\n      .then((res) => {\n        setState((state) => ({ ...state, submiting: false }));\n        if (res.data.length > 0) {\n          setState((state) => ({ ...state, foundRecords: res.data }));\n        } else {\n          setState((state) => ({ ...state, foundRecords: null }));\n        }\n\n        console.log(res.data);\n      })\n      .catch((err) => {\n        console.log(err);\n        setState((state) => ({ ...state, submiting: false }));\n      });\n  };\n\n  const getPersonBox = (clinic) => {\n    switch (clinic) {\n      case \"pcr\":\n        return <PersonsBoxPCR />;\n      case \"gp\":\n        return <PersonsBoxGP />;\n      case \"std\":\n        return <PersonsBoxSTD />;\n      case \"gynae\":\n        return <PersonsBoxGynae />;\n        case \"blood\":\n          return <PersonsBoxBlood />;\n  \n      default:\n        return null;\n    }\n  };\n\n  const getBoxTitle = (clinic) => {\n      return (\n          <div className={classes.boxTitle}>\n              {clinic.toUpperCase() + ' Clinic'}\n\n          </div>\n      )\n  }\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <div className={classes.title}>\n        <Typography component=\"h6\" variant=\"h6\" align=\"center\">\n          Find Booking Appoinments\n        </Typography>\n      </div>\n\n      <Grid\n        container\n        direction=\"column\"\n        spacing={1}\n        justify=\"flex-start\"\n        alignItems=\"center\"\n      >\n        <Grid item xs={12} md={12}>\n          <FormControl className={classes.TextBox}>\n            <TextField\n              {...focusProps}\n              autoFocus\n              pattern=\"[0-9]*\"\n              error={state.refError ? true : false}\n              value={state.ref}\n              className={classes.TextField}\n              width=\"50px\"\n              onChange={handleChange}\n              label=\"Reference No.\"\n              helperText=\"Enter Your 9-digits Reference No.\"\n              name=\"refNo\"\n              id=\"refNo\"\n              variant=\"outlined\"\n              size=\"medium\"\n              margin=\"normal\"\n              fullWidth={true}\n              InputProps={{\n                inputComponent: TextMaskCustom,\n                style: {\n                  textAlign: \"center\",\n                  fontSize: \"24px\",\n                  width: \"210px\",\n                  paddingLeft: \"20px\",\n                },\n              }}\n              onKeyPress={(event) => {\n                if (event.key === \"Enter\") {\n                  findRecords();\n                }\n              }}\n            />\n          </FormControl>\n        </Grid>\n\n        <Grid item xs={12} md={12}>\n          <Button\n            disabled={state.submiting}\n            color=\"default\"\n            onClick={clearField}\n            onTouchTap={clearField}\n            className={classes.Clear}\n          >\n            Clear\n          </Button>\n\n          <Button\n            type=\"button\"\n            disabled={state.submiting}\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={findRecords}\n            onTouchTap={findRecords}\n            className={classes.Find}\n          >\n            Find\n          </Button>\n        </Grid>\n\n        <Grid item xs={12} md={12}>\n          {state.foundRecords && state.foundRecords.length > 0 && (\n            <React.Fragment>\n              <div className={classes.PersonsBox}>\n                {getBoxTitle(state.foundRecords[0].clinic)}  \n                {getPersonBox(state.foundRecords[0].clinic)}\n              </div>\n            </React.Fragment>\n          )}\n\n          {!state.foundRecords && (\n            <React.Fragment>\n              <div className={classes.root}>\n                <Alert severity=\"error\">\n                  {\" \"}\n                  <strong>No Records Found !</strong> <br /> Please check you\n                  reference number again.\n                </Alert>\n              </div>\n            </React.Fragment>\n          )}\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport PCRBookingDialog from \"./../PCR/BookingDialog\";\nimport GPBookingDialog from \"./../GP/BookingDialog\";\nimport GynaeBookingDialog from \"./../Gynae/BookingDialog\";\nimport STDBookingDialog from \"./../STD/BookingDialog\";\nimport BloodBookingDialog from \"./../Blood/BookingDialog\";\nimport DermaBookingDialog from \"./../Derma/BookingDialog\";\n\n\nconst useStyles = makeStyles((theme) => ({}));\n\nexport default function BookingDialog(props) {\n  const classes = useStyles();\n\n  if (props.booking) {\n    switch (props.booking.clinic) {\n      case \"pcr\":\n        return (\n          <PCRBookingDialog\n            booking={props.booking}\n            open={props.open}\n            onClose={props.onClose}\n          />\n        );\n      case \"gp\":\n        return (\n          <GPBookingDialog\n            booking={props.booking}\n            open={props.open}\n            onClose={props.onClose}\n          />\n        );\n\n      case \"gynae\":\n        return (\n          <GynaeBookingDialog\n            booking={props.booking}\n            open={props.open}\n            onClose={props.onClose}\n          />\n        );\n\n      case \"std\":\n        return (\n          <STDBookingDialog\n            booking={props.booking}\n            open={props.open}\n            onClose={props.onClose}\n          />\n        );\n\n        case \"blood\":\n          return (\n            <BloodBookingDialog\n              booking={props.booking}\n              open={props.open}\n              onClose={props.onClose}\n            />\n          );\n          case \"derma\":\n          return (\n            <DermaBookingDialog\n              booking={props.booking}\n              open={props.open}\n              onClose={props.onClose}\n            />\n          );\n\n\n      default:\n        return null;\n    }\n  } else {\n    return null;\n  }\n}\n","export const corporates = [\n    'Visa Medical'\n]","import React, { useEffect, useRef, useState } from \"react\";\nimport { DataGrid } from \"@material-ui/data-grid\";\nimport BookService from \"./services/BookService\";\nimport {\n  Button,\n  Checkbox,\n  CircularProgress,\n  Dialog,\n  DialogContent,\n  DialogTitle,\n  Divider,\n  FormControl,\n  FormControlLabel,\n  Grid,\n  Icon,\n  InputLabel,\n  LinearProgress,\n  Link,\n  makeStyles,\n  MenuItem,\n  Paper,\n  Select,\n  SvgIcon,\n  Switch,\n  TextField,\n  Tooltip,\n} from \"@material-ui/core\";\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\nimport { IconButton } from \"@material-ui/core\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport GlobalState from \"./../GlobalState\";\nimport { getMenuIndex } from \"./../MenuList\";\nimport {\n  FormatDateFromString,\n  FormatDateFromStringShortYear,\n} from \"./DateFormatter\";\n\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport BookingDialog from \"./BookingDialog\";\n\nimport NewReleasesIcon from \"@material-ui/icons/NewReleases\";\nimport HistoryIcon from \"@material-ui/icons/History\";\nimport TimelineIcon from \"@material-ui/icons/Timeline\";\nimport DescriptionIcon from \"@material-ui/icons/Description\";\nimport AutorenewIcon from \"@material-ui/icons/Autorenew\";\nimport LiveTvIcon from \"@material-ui/icons/LiveTv\";\nimport PlaylistAddCheckIcon from \"@material-ui/icons/PlaylistAddCheck\";\nimport AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport HourglassEmptyIcon from \"@material-ui/icons/HourglassEmpty\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faFileExcel } from \"@fortawesome/free-solid-svg-icons\";\nimport Draggable from \"react-draggable\";\n\nimport * as dateformat from \"dateformat\";\n\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardTimePicker,\n  KeyboardDatePicker,\n} from \"@material-ui/pickers\";\n\nimport BusinessIcon from \"@material-ui/icons/Business\";\nimport CreditCardIcon from \"@material-ui/icons/CreditCard\";\nimport LocalAtmIcon from \"@material-ui/icons/LocalAtm\";\n\nimport ReactHTMLTableToExcel from \"react-html-table-to-excel\";\nimport PriceCalculator from \"./PriceCalculator\";\nimport { corporates } from \"./Corporates\";\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    marginTop: theme.spacing(0),\n    marginBottom: theme.spacing(1),\n  },\n\n  refreshButton: {\n    marginLeft: theme.spacing(2),\n  },\n\n  checkIcon: {\n    color: \"green\",\n  },\n\n  closeIcon: {\n    color: \"red\",\n  },\n\n  RefLink: {\n    cursor: \"pointer\",\n  },\n\n  BookedLabel: {\n    backgroundColor: \"#606060\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  PatientAttendedLabel: {\n    backgroundColor: \"#0066aa\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  SampleTakenLabel: {\n    backgroundColor: \"#0066cc\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  ReportSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  ReportCertSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  PositiveLabel: {\n    backgroundColor: \"red\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  HideNowRows: {\n    position: \"absolute\",\n    top: \"40%\",\n    left: \"40%\",\n    width: \"600px\",\n    height: \"300px\",\n    backgroundColor: \"#fafafa\",\n    color: \"#111\",\n    zIndex: \"1000\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyItems: \"center\",\n  },\n\n  ExportToExcelButton: {\n    // marginBottom : \"20px\",\n    color: \"#2f942e\",\n    borderColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"#fafffa\",\n      borderColor: \"#2f942e\",\n    },\n    textDecoration: \"none !important\",\n  },\n\n  ExportToExcelButtonInline: {\n    // marginBottom : \"20px\",\n    color: \"#2f942e\",\n    borderColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"#fafffa\",\n      borderColor: \"#2f942e\",\n    },\n    textDecoration: \"none !important\",\n    cursor: \"pointer\",\n    padding: \"10px\",\n  },\n\n  table: {\n    width: \"100%\",\n    border: \"1px solid #ddd\",\n    borderCollapse: \"collapse\",\n  },\n\n  th: {\n    border: \"1px solid #ddd\",\n    borderCollapse: \"collapse\",\n    verticalAlign: \"middle\",\n    fontcolor: \"#555\",\n    fontWeight: \"400\",\n    fontSize: \"15px\",\n    paddingTop: \"5px\",\n    paddingBottom: \"5px\",\n    width: \"14%\",\n    paddingLeft: \"5px\",\n  },\n\n  td: {\n    border: \"1px solid #ddd\",\n    borderCollapse: \"collapse\",\n    verticalAlign: \"middle\",\n    paddingLeft: \"5px\",\n  },\n\n  topSelect: {\n    margin: theme.spacing(1),\n    minWidth: 80,\n  },\n\n  notifyIcon: {\n    width: \"16px\",\n    height: \"16px\",\n    borderRadius: \"50%\",\n    backgroundColor: \"rgb(220, 0, 78)\",\n    marginLeft: \"10px\",\n  },\n\n  clinicTitle: {\n    fontWeight: \"600\",\n    textAlign: \"center\",\n    color: theme.palette.primary.main,\n    padding: \"2px 10px\",\n  },\n\n  PCRLabel: {\n    color: \"#4faef7\",\n    fontWeight: \"600\",\n    fontSize: \"0.95rem\",\n  },\n\n  GynaeLabel: {\n    color: \"#e83caf\",\n    fontWeight: \"600\",\n    fontSize: \"0.95rem\",\n  },\n\n  GPLabel: {\n    color: \"#ff4f14\",\n    fontWeight: \"600\",\n    fontSize: \"0.95rem\",\n  },\n\n  STDLabel: {\n    color: \"#d6733a\",\n    fontWeight: \"600\",\n    fontSize: \"0.95rem\",\n  },\n\n  BloodLabel: {\n    color: \"#dc2626\",\n    fontWeight: \"600\",\n    fontSize: \"0.95rem\",\n  },\n\n  DermaLabel: {\n    color: \"#323e9a\",\n    fontWeight: \"600\",\n    fontSize: \"0.95rem\",\n  },\n\n}));\n\nconst getTableTitle = (str) => {\n  if (str === \"today\") {\n    return `Today's Bookings`;\n  } else if (str === \"old\") {\n    return `Old Bookings`;\n  } else if (str === \"future\") {\n    return `Future Bookings`;\n  } else if (str === \"recent\") {\n    return `Recent Bookings`;\n  } else if (str === \"live\") {\n    return `Live Bookings`;\n  } else if (str === \"completed\") {\n    return `Completed Bookings`;\n  } else if (str === \"positive\") {\n    return `Positive Results`;\n  } else if (str === \"deleted\") {\n    return `Deleted Records`;\n  } else if (str === \"late\") {\n    return `40 Hours Late`;\n  } else {\n    return `All Bookings`;\n  }\n};\n\nconst getTableIcon = (str) => {\n  if (str === \"today\") {\n    return <NewReleasesIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else if (str === \"old\") {\n    return <HistoryIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else if (str === \"future\") {\n    return <TimelineIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else if (str === \"recent\") {\n    return <AutorenewIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else if (str === \"live\") {\n    return <LiveTvIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else if (str === \"completed\") {\n    return <PlaylistAddCheckIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else if (str === \"positive\") {\n    return <AddCircleOutlineIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else if (str === \"deleted\") {\n    return <DeleteIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else if (str === \"late\") {\n    return <HourglassEmptyIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else {\n    return <DescriptionIcon style={{ fontSize: \"2.2rem\" }} />;\n  }\n};\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable\n      handle=\"#draggable-dialog-title\"\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\n    >\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nexport default function BookingTable(props) {\n  const classes = useStyles();\n\n  const getClassforClinic = (clinic) => {\n    switch (clinic) {\n      case \"pcr\":\n        return classes.PCRLabel;\n      case \"gp\":\n        return classes.GPLabel;\n      case \"gynae\":\n        return classes.GynaeLabel;\n      case \"std\":\n        return classes.STDLabel;\n      case \"blood\":\n        return classes.BloodLabel;\n      case \"derma\":\n        return classes.DermaLabel;\n      \n\n      default:\n        return classes.clinicTitle;\n    }\n  };\n\n  const [topCount, setTopCount] = React.useState(25);\n  const topCountChanged = (event) => {\n    setTopCount(event.target.value);\n    loadData(event.target.value);\n  };\n\n  const [openDialogExcel, setOpenDialogExcel] = useState(false);\n  const handleCloseDialogExcel = () => {\n    setCorporate(corporates[0]);\n    setJustCorporate(false);\n    setOpenDialogExcel(false);\n  };\n\n  const [fromDate, setFromDate] = React.useState(\n    new Date(new Date().getTime() - 7 * 24 * 60 * 60 * 1000)\n  );\n  const handleFromDateChange = (date) => {\n    setFromDate(date);\n    setFromDateStr(dateformat(date, \"yyyy-mm-dd\"));\n  };\n\n  const [untilDate, setUntilDate] = React.useState(\n    new Date(new Date().getTime() - 1 * 24 * 60 * 60 * 1000)\n  );\n  const handleUntilDateChange = (date) => {\n    setUntilDate(date);\n    seUntilDateStr(dateformat(date, \"yyyy-mm-dd\"));\n  };\n\n  const [fromDateStr, setFromDateStr] = useState(\n    dateformat(\n      new Date(new Date().getTime() - 7 * 24 * 60 * 60 * 1000),\n      \"yyyy-mm-dd\"\n    )\n  );\n  const [untilDateStr, seUntilDateStr] = useState(\n    dateformat(\n      new Date(new Date().getTime() - 1 * 24 * 60 * 60 * 1000),\n      \"yyyy-mm-dd\"\n    )\n  );\n\n  const [justCorporate, setJustCorporate] = useState(false);\n\n  const [chkDate, setChkDate] = useState(true);\n  const [chkForename, setChkForename] = useState(true);\n  const [chkSurname, setChkSurname] = useState(true);\n  const [chkDOB, setChkDOB] = useState(true);\n  const [chkEmail, setChkEmail] = useState(true);\n  const [chkTel, setChkTel] = useState(true);\n  const [chkCertificate, setChkCertidicate] = useState(true);\n  const [chkAntiBodyTest, setChkAntiBodyTest] = useState(true);\n  const [chkextRef, setChkExtRef] = useState(true);\n  const [chkPrice, setChkPrice] = useState(true);\n\n  const justCorporateChanged = (event) => {\n    setJustCorporate(event.target.checked);\n  };\n\n  const chkDateChanged = (event) => {\n    setChkDate(event.target.checked);\n  };\n\n  const chkForenameChanged = (event) => {\n    setChkForename(event.target.checked);\n  };\n\n  const chkSurnameChanged = (event) => {\n    setChkSurname(event.target.checked);\n  };\n\n  const chkDOBChanged = (event) => {\n    setChkDOB(event.target.checked);\n  };\n\n  const chkEmailChanged = (event) => {\n    setChkEmail(event.target.checked);\n  };\n\n  const chkTelChanged = (event) => {\n    setChkTel(event.target.checked);\n  };\n\n  const chkCertificateChanged = (event) => {\n    setChkCertidicate(event.target.checked);\n  };\n\n  const chkAntiBodyTestChanged = (event) => {\n    setChkAntiBodyTest(event.target.checked);\n  };\n\n  const chkextRefChanged = (event) => {\n    setChkExtRef(event.target.checked);\n  };\n\n  const chkPriceChanged = (event) => {\n    setChkPrice(event.target.checked);\n  };\n\n  var columns = [];\n\n  if (props.date === \"recent\") {\n    columns = [\n      // { field: 'id', headerName: '#', width: 70 },\n\n      {\n        field: \"_id\",\n        headerName: \" \",\n        width: 70,\n        renderCell: (params) => {\n          return (\n            <React.Fragment>\n              <Button\n                color=\"primary\"\n                onClick={(event) => openDetailsDialog(event, params.value)}\n              >\n                <SearchIcon />\n              </Button>\n            </React.Fragment>\n          );\n        },\n      },\n\n      {\n        field: \"clinic\",\n        headerName: \"Clinic\",\n        align: \"center\",\n        width: 90,\n        renderCell: (params) => {\n          return (\n            <span className={getClassforClinic(params.value)}>\n              {params.value ? params.value.toUpperCase() : \"N/A\"}\n            </span>\n          );\n        },\n      },\n\n      {\n        field: \"paid\",\n        headerName: \"Paid\",\n        align: \"center\",\n        width: 90,\n        renderCell: (params) => {\n          if (!params.value) {\n            return (\n              <React.Fragment>\n                <CloseIcon className={classes.closeIcon} />\n              </React.Fragment>\n            );\n          } else {\n            if (params.getValue(\"paidBy\") === \"credit card\") {\n              return <CreditCardIcon className={classes.checkIcon} />;\n            } else if (params.getValue(\"paidBy\") === \"cash\") {\n              return <LocalAtmIcon className={classes.checkIcon} />;\n            } else if (params.getValue(\"paidBy\") === \"corporate\") {\n              return <BusinessIcon className={classes.checkIcon} />;\n            } else {\n              return \"\";\n            }\n          }\n        },\n      },\n\n      {\n        field: \"timeStamp\",\n        headerName: \"TimeStamp\",\n        width: 200,\n        valueFormatter: (params) => {\n          return formatTimeStamp(params.value);\n        },\n      },\n\n      {\n        field: \"bookingDate\",\n        headerName: \"B Date\",\n        width: 110,\n        valueFormatter: (params) => {\n          return FormatDateFromString(params.value);\n        },\n      },\n      {\n        field: \"bookingTimeNormalized\",\n        headerName: \"B Time\",\n        width: 105,\n        valueGetter: (params) => {\n          return params.getValue(\"bookingTime\");\n        },\n      },\n      {\n        field: \"status\",\n        headerName: \"Status\",\n        width: 100,\n        renderCell: (params) => {\n          if (params.value === \"booked\") {\n            return <span className={classes.BookedLabel}> BM </span>;\n          } else if (params.value === \"patient_attended\") {\n            return <span className={classes.PatientAttendedLabel}> PA </span>;\n          } else if (params.value === \"sample_taken\") {\n            return <span className={classes.SampleTakenLabel}> ST </span>;\n          } else if (params.value === \"report_sent\") {\n            return <span className={classes.ReportSentLabel}> RS </span>;\n          } else if (params.value === \"report_cert_sent\") {\n            return <span className={classes.ReportCertSentLabel}> RCS </span>;\n          } else if (params.value === \"positive\") {\n            return <span className={classes.PositiveLabel}> POS </span>;\n          } else {\n            return \"Unknown\";\n          }\n        },\n      },\n      {\n        field: \"bookingRef\",\n        headerName: \"Ref No.\",\n        width: 120,\n        renderCell: (params) => {\n          return (\n            <Tooltip title=\"Go Find By Ref\" placement=\"right\">\n              <Link\n                className={classes.RefLink}\n                //  onClick={\n                //   () => {\n                //     console.log(params.value);\n\n                //     setState(state => ({...state, currentMenuIndex: getMenuIndex(`pcr` , `findByRef`)}));\n                //     setState(state => ({...state, ref : params.value}));\n                //     setState(state => ({...state, refError : false}));\n                //     setState(state => ({...state, foundRecords : []}));\n                //     setState(state => ({...state, findRecords : !state.findRecords}));\n                //   }\n                // }\n              >\n                {params.value}\n              </Link>\n            </Tooltip>\n          );\n        },\n      },\n      { field: \"fullname\", headerName: \"Fullname\", width: 250,   valueGetter: (params) => {\n        if (!params.value || params.value.length === 0)\n        {\n          return `${params.getValue('forename')} ${params.getValue('surname')}`\n\n        }else\n        {\n          return params.value\n        }\n       \n      } },\n      { field: \"email\", headerName: \"Email\", width: 200 },\n      { field: \"phone\", headerName: \"Tel\", width: 150 },\n      { field: \"notes\", headerName: \"Notes\", width: 500 },\n    ];\n  } else {\n    columns = [\n      // { field: 'id', headerName: '#', width: 70 },\n\n      {\n        field: \"_id\",\n        headerName: \" \",\n        width: 70,\n        renderCell: (params) => {\n          return (\n            <React.Fragment>\n              <Button\n                color=\"primary\"\n                onClick={(event) => openDetailsDialog(event, params.value)}\n              >\n                <SearchIcon />\n              </Button>\n            </React.Fragment>\n          );\n        },\n      },\n\n      {\n        field: \"clinic\",\n        headerName: \"Clinic\",\n        align: \"center\",\n        width: 90,\n        renderCell: (params) => {\n          return (\n            <span className={getClassforClinic(params.value)}>\n              {params.value ? params.value.toUpperCase() : \"N/A\"}\n            </span>\n          );\n        },\n      },\n\n      {\n        field: \"paid\",\n        headerName: \"Paid\",\n        align: \"center\",\n        width: 90,\n        renderCell: (params) => {\n          if (!params.value) {\n            return (\n              <React.Fragment>\n                <CloseIcon className={classes.closeIcon} />\n                {parseInt(params.getValue(\"deposit\")) > 0 &&\n                  props.date === \"deleted\" && (\n                    <span className={classes.notifyIcon}>&nbsp;</span>\n                  )}\n              </React.Fragment>\n            );\n          } else {\n            if (params.getValue(\"paidBy\") === \"credit card\") {\n              return <CreditCardIcon className={classes.checkIcon} />;\n            } else if (params.getValue(\"paidBy\") === \"cash\") {\n              return <LocalAtmIcon className={classes.checkIcon} />;\n            } else if (params.getValue(\"paidBy\") === \"corporate\") {\n              return <BusinessIcon className={classes.checkIcon} />;\n            } else {\n              return \"\";\n            }\n          }\n        },\n      },\n      {\n        field: \"bookingDate\",\n        headerName: \"B Date\",\n        width: 110,\n        valueFormatter: (params) => {\n          return FormatDateFromString(params.value);\n        },\n      },\n      {\n        field: \"bookingTimeNormalized\",\n        headerName: \"B Time\",\n        width: 105,\n        valueGetter: (params) => {\n          return params.getValue(\"bookingTime\");\n        },\n      },\n      {\n        field: \"status\",\n        headerName: \"Status\",\n        width: 100,\n        renderCell: (params) => {\n          if (params.value === \"booked\") {\n            return <span className={classes.BookedLabel}> BM </span>;\n          } else if (params.value === \"patient_attended\") {\n            return <span className={classes.PatientAttendedLabel}> PA </span>;\n          } else if (params.value === \"sample_taken\") {\n            return <span className={classes.SampleTakenLabel}> ST </span>;\n          } else if (params.value === \"report_sent\") {\n            return <span className={classes.ReportSentLabel}> RS </span>;\n          } else if (params.value === \"report_cert_sent\") {\n            return <span className={classes.ReportCertSentLabel}> RCS </span>;\n          } else if (params.value === \"positive\") {\n            return <span className={classes.PositiveLabel}> POS </span>;\n          } else {\n            return \"Unknown\";\n          }\n        },\n      },\n      {\n        field: \"bookingRef\",\n        headerName: \"Ref No.\",\n        width: 120,\n        renderCell: (params) => {\n          return (\n            <Tooltip title=\"Go Find By Ref\" placement=\"right\">\n              <Link\n                className={classes.RefLink}\n                //  onClick={\n                //   () => {\n                //     console.log(params.value);\n\n                //     setState(state => ({...state, currentMenuIndex: getMenuIndex(`pcr` , `findByRef`)}));\n                //     setState(state => ({...state, ref : params.value}));\n                //     setState(state => ({...state, refError : false}));\n                //     setState(state => ({...state, foundRecords : []}));\n                //     setState(state => ({...state, findRecords : !state.findRecords}));\n                //   }\n                // }\n              >\n                {params.value}\n              </Link>\n            </Tooltip>\n          );\n        },\n      },\n      { field: \"fullname\", headerName: \"Fullname\", width: 250,   valueGetter: (params) => {\n        if (!params.value || params.value.length === 0)\n        {\n          return `${params.getValue('forename')} ${params.getValue('surname')}`\n\n        }else\n        {\n          return params.value\n        }\n       \n      } },\n      { field: \"email\", headerName: \"Email\", width: 200 },\n      { field: \"phone\", headerName: \"Tel\", width: 150 },\n      { field: \"notes\", headerName: \"Notes\", width: 500 },\n    ];\n  }\n\n  const [state, setState] = React.useContext(GlobalState);\n\n  const [data, setData] = React.useState({\n    bookings: [],\n    cachedBookings: [],\n    isFetching: true,\n  });\n\n  const [selectedRow, setSelectedRow] = React.useState(null);\n\n  const [selectedBooking, setSelectedBooking] = React.useState(null);\n  const [seeDetailsDialogOpen, setSeeDetailsDialogOpen] = React.useState(false);\n\n  const [corporate, setCorporate] = useState(corporates[0]);\n  const corporateChanged = (event) => {\n    setCorporate(event.target.value);\n  };\n\n  const [filter, setFilter] = React.useState(\"\");\n\n  const lastPromise = useRef();\n\n  const formatTimeStamp = (timeStamp) => {\n    const todayStr = dateformat(new Date(), \"yyyy-mm-dd\");\n    const timeStampStr = dateformat(timeStamp, \"yyyy-mm-dd\");\n    if (todayStr === timeStampStr) {\n      return dateformat(timeStamp, \"'Today', h:MM:ss TT\");\n    } else {\n      return dateformat(timeStamp, \"mmm dS, h:MM:ss TT\");\n    }\n  };\n\n  const loadData = (top) => {\n    var api = BookService.getAllBookings;\n    if (props.date === \"today\") {\n      api = BookService.getTodayBookings;\n    } else if (props.date === \"old\") {\n      api = BookService.getOldBookings;\n    } else if (props.date === \"future\") {\n      api = BookService.getFutureBookings;\n    } else if (props.date === \"recent\") {\n      api = BookService.getRecentBookingsAll;\n    } else if (props.date === \"deleted\") {\n      api = BookService.getDeletedBookings;\n    }\n\n    setData({ bookings: [], cachedBookings: [], isFetching: true });\n\n    // console.log(props)\n\n    const currentPromise = api(top)\n      .then((res) => {\n        // console.log(res)\n        for (var i = 0; i < res.data.length; i++) {\n          res.data[i] = { ...res.data[i], id: i + 1 };\n        }\n        setData({\n          bookings: [...res.data],\n          cachedBookings: [...res.data],\n          isFetching: false,\n        });\n        // return res.data;\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n\n    // lastPromise.current = currentPromise;\n\n    // currentPromise.then(\n    //   result => {\n    //     if (currentPromise === lastPromise.current) {\n    //       setData({bookings: [...result], cachedBookings: [...result], isFetching: false});\n    //       setPage(1);\n    //     }\n    //   },\n    //   e => {\n    //     if (currentPromise === lastPromise.current) {\n    //         console.error(e);\n    //         setData({bookings: data.bookings, cachedBookings: data.cachedBookings, isFetching: false});\n    //     }\n    //   });\n  };\n\n  useEffect(() => {\n    setTopCount(25);\n    loadData(25);\n  }, [props.date]);\n\n  useEffect(() => {\n    if (filter && filter.trim().length > 0) {\n      var filteredData = data.cachedBookings.filter(\n        (element) =>\n          element.fullname?.toLowerCase().indexOf(filter.toLowerCase()) >= 0 ||\n          element.forename?.toLowerCase().indexOf(filter.toLowerCase()) >= 0 ||\n          element.surname?.toLowerCase().indexOf(filter.toLowerCase()) >= 0 \n      );\n\n      setData({\n        bookings: [...filteredData],\n        cachedBookings: data.cachedBookings,\n        isFetching: false,\n      });\n    } else {\n      setData({\n        bookings: [...data.cachedBookings],\n        cachedBookings: data.cachedBookings,\n        isFetching: false,\n      });\n    }\n  }, [filter]);\n\n  // useEffect(() => {\n  //   loadData(topCount);\n  // }, [state.bookingDialogDataChanged]);\n\n  const handleCloseSeeDetaisDialog = () => {\n    setSelectedBooking(null);\n    setSeeDetailsDialogOpen(false);\n  };\n\n  const openDetailsDialog = (event, id) => {\n    const booking = data.bookings.find((element) => element._id === id);\n    setSelectedBooking(booking);\n    setSeeDetailsDialogOpen(true);\n  };\n\n  const refreshClicked = (event) => {\n    setFilter(\"\");\n    loadData(topCount);\n  };\n\n  const filterChanged = (event) => {\n    setFilter(event.target.value);\n  };\n\n  const handleSelectionChanged = (newSelection) => {\n    if (newSelection.length > 0) {\n      setSelectedRow(newSelection.rows[0]);\n    }\n  };\n\n  const [page, setPage] = React.useState(1);\n\n  const handleExcelButtonClicked = (event) => {\n    setOpenDialogExcel(true);\n  };\n\n  const isTopSelectHidden = (date) => {\n    return (\n      date === \"live\" ||\n      date === \"positive\" ||\n      date === \"late\" ||\n      date === \"today\"\n    );\n  };\n\n  return (\n    <React.Fragment>\n      {data.isFetching && (\n        <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\n          <LinearProgress color=\"primary\" />\n        </div>\n      )}\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"space-between\"\n        alignItems=\"flex-end\"\n      >\n        <Grid item md={4}>\n          <div style={{ textAlign: \"left\", paddingLeft: \"10px\" }}>\n            <Grid\n              container\n              direction=\"row\"\n              justify=\"flex-start\"\n              alignItems=\"center\"\n            >\n              <Grid item>\n                <span style={{ paddingRight: \"15px\", color: \"#555\" }}>\n                  {\" \"}\n                  {getTableIcon(props.date)}{\" \"}\n                </span>\n              </Grid>\n              <Grid item>\n                <span\n                  style={{\n                    fontSize: \"1.4rem\",\n                    fontWeight: \"600\",\n                    color: \"#444\",\n                  }}\n                >\n                  {\" \"}\n                  {getTableTitle(props.date)}{\" \"}\n                </span>\n              </Grid>\n              <Grid item>\n                <Tooltip title=\"Refresh\" placement=\"right\">\n                  <IconButton\n                    color=\"primary\"\n                    className={classes.refreshButton}\n                    onClick={refreshClicked}\n                  >\n                    <RefreshIcon />\n                  </IconButton>\n                </Tooltip>\n              </Grid>\n            </Grid>\n          </div>\n        </Grid>\n\n        <Grid item md={3}>\n          {props.date === \"completed\" && state.showCreateExcel && (\n            <div style={{ paddingBottom: \"5px\" }}>\n              <Button\n                className={classes.ExportToExcelButton}\n                variant=\"outlined\"\n                color=\"default\"\n                onClick={handleExcelButtonClicked}\n                startIcon={\n                  <FontAwesomeIcon\n                    style={{ color: \"#009900\" }}\n                    icon={faFileExcel}\n                  />\n                }\n              >\n                export to excel\n              </Button>\n            </div>\n          )}\n        </Grid>\n\n        {data.isFetching && <div className={classes.HideNowRows}></div>}\n\n        <Grid item md={3}>\n          <TextField\n            variant=\"standard\"\n            value={filter}\n            onChange={filterChanged}\n            margin=\"normal\"\n            size=\"small\"\n            id=\"filter\"\n            label=\"Filter\"\n            name=\"filter\"\n            autoComplete=\"off\"\n          />\n        </Grid>\n\n        <Grid item hidden={isTopSelectHidden(props.date)}>\n          <FormControl className={classes.topSelect}>\n            <InputLabel id=\"top-select-label\">Limit</InputLabel>\n            <Select\n              labelId=\"top-select-label\"\n              id=\"top-simple-select\"\n              value={topCount}\n              onChange={topCountChanged}\n            >\n              <MenuItem value={25}>25</MenuItem>\n              <MenuItem value={50}>50</MenuItem>\n              <MenuItem value={100}>100</MenuItem>\n              <MenuItem value={500}>500</MenuItem>\n              <MenuItem value={1000}>1000</MenuItem>\n              <MenuItem value={10000}>ALL</MenuItem>\n            </Select>\n          </FormControl>\n\n          {/* <Button onClick={() => loadData(true)}> Show all records </Button> */}\n        </Grid>\n      </Grid>\n\n      <div style={{ height: 700, width: \"100%\" }}>\n        <DataGrid\n          rows={data.bookings}\n          columns={columns}\n          autoPageSize\n          page={page}\n          onPageChange={(params) => {\n            setPage(params.page);\n          }}\n          onSelectionChange={handleSelectionChanged}\n        />\n      </div>\n\n      <BookingDialog\n        booking={selectedBooking}\n        open={seeDetailsDialogOpen}\n        onClose={handleCloseSeeDetaisDialog}\n      />\n\n      {data.bookings && data.bookings.length > 0 && (\n        <Dialog\n          maxWidth=\"lg\"\n          open={openDialogExcel}\n          onClose={handleCloseDialogExcel}\n          PaperComponent={PaperComponent}\n          aria-labelledby=\"form-dialog-title\"\n        >\n          <DialogTitle id=\"draggable-dialog-title\">\n            <Grid\n              container\n              spacing={2}\n              direction=\"row\"\n              justify=\"center\"\n              alignItems=\"center\"\n            >\n              <Grid item>\n                <FontAwesomeIcon\n                  style={{ color: \"#2f942e\", fontSize: \"2rem\" }}\n                  icon={faFileExcel}\n                />\n              </Grid>\n\n              <Grid item>\n                <div\n                  style={{\n                    color: \"#2f942e\",\n                    paddingBottom: \"5px\",\n                    fontWeight: \"800\",\n                  }}\n                >\n                  {\" \"}\n                  Export to EXCEL{\" \"}\n                </div>\n              </Grid>\n            </Grid>\n\n            <Divider />\n          </DialogTitle>\n          <DialogContent>\n            <div\n              style={{\n                minHeight: \"600px\",\n                maxHeight: \"600px\",\n                minWidth: \"1200px\",\n                maxWidth: \"1200px\",\n              }}\n            >\n              <div>\n                <Grid row container justify=\"center\" spacing={3}>\n                  <Grid item>\n                    <FormControlLabel\n                      control={\n                        <Switch\n                          checked={justCorporate}\n                          onChange={justCorporateChanged}\n                          name=\"justCorporate\"\n                        />\n                      }\n                      label=\"Just Corporate Records\"\n                    />\n                  </Grid>\n\n                  {justCorporate && (\n                    <Grid item>\n                      <FormControl\n                        style={{ marginTop: \"0px\" }}\n                        className={classes.formControl}\n                      >\n                        <Select\n                          labelId=\"select-corporate\"\n                          id=\"select-corporate-id\"\n                          value={corporate}\n                          onChange={corporateChanged}\n                        >\n                          {corporates.map((element) => (\n                            <MenuItem value={element}>{`${element}`}</MenuItem>\n                          ))}\n                        </Select>\n                      </FormControl>\n                    </Grid>\n                  )}\n                </Grid>\n\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                  <Grid row container justify=\"center\" spacing={3}>\n                    <Grid item>\n                      <KeyboardDatePicker\n                        disableToolbar\n                        variant=\"inline\"\n                        format=\"dd/MM/yyyy\"\n                        margin=\"normal\"\n                        id=\"date-picker-from\"\n                        label=\"From\"\n                        value={fromDate}\n                        onChange={handleFromDateChange}\n                        KeyboardButtonProps={{\n                          \"aria-label\": \"change date\",\n                        }}\n                      />\n                    </Grid>\n\n                    <Grid item>\n                      <KeyboardDatePicker\n                        disableToolbar\n                        variant=\"inline\"\n                        format=\"dd/MM/yyyy\"\n                        margin=\"normal\"\n                        id=\"date-picker-until\"\n                        label=\"Until\"\n                        value={untilDate}\n                        onChange={handleUntilDateChange}\n                        KeyboardButtonProps={{\n                          \"aria-label\": \"change date\",\n                        }}\n                      />\n                    </Grid>\n\n                    <Grid item>\n                      <div style={{ paddingTop: \"30px\", marginLeft: \"20px\" }}>\n                        <ReactHTMLTableToExcel\n                          id=\"test-table-xls-button\"\n                          className={classes.ExportToExcelButtonInline}\n                          table=\"table-to-xls\"\n                          filename={`PCR.Report.${fromDateStr}.${untilDateStr}`}\n                          sheet=\"PCR-Report\"\n                          buttonText=\"Download as XLS\"\n                        />\n                      </div>\n                    </Grid>\n                  </Grid>\n                </MuiPickersUtilsProvider>\n              </div>\n\n              <div>\n                <Grid container spacing={3}>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkDate}\n                          onChange={chkDateChanged}\n                          name=\"chkDate\"\n                        />\n                      }\n                      label=\"Date\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkForename}\n                          onChange={chkForenameChanged}\n                          name=\"chkForename\"\n                        />\n                      }\n                      label=\"Forename\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkSurname}\n                          onChange={chkSurnameChanged}\n                          name=\"chkSurname\"\n                        />\n                      }\n                      label=\"Surname\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkDOB}\n                          onChange={chkDOBChanged}\n                          name=\"chkDOB\"\n                        />\n                      }\n                      label=\"D.O.B\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkEmail}\n                          onChange={chkEmailChanged}\n                          name=\"chkEmail\"\n                        />\n                      }\n                      label=\"Email\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkTel}\n                          onChange={chkTelChanged}\n                          name=\"chkTel\"\n                        />\n                      }\n                      label=\"Tel\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkCertificate}\n                          onChange={chkCertificateChanged}\n                          name=\"chkCertificate\"\n                        />\n                      }\n                      label=\"Certificate\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkAntiBodyTest}\n                          onChange={chkAntiBodyTestChanged}\n                          name=\"chkAntiBodyTest\"\n                        />\n                      }\n                      label=\"AntiBodyTest\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkextRef}\n                          onChange={chkextRefChanged}\n                          name=\"chkextRef\"\n                        />\n                      }\n                      label=\"Lab No.\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkPrice}\n                          onChange={chkPriceChanged}\n                          name=\"chkPrice\"\n                        />\n                      }\n                      label=\"Price\"\n                    />\n                  </Grid>\n                </Grid>\n              </div>\n\n              <div style={{ width: \"100%\", paddingTop: \"20px\" }}>\n                <table className={classes.table} id=\"table-to-xls\">\n                  <tr>\n                    {chkDate && <th className={classes.th}>Date</th>}\n                    {chkForename && <th className={classes.th}>Forename</th>}\n                    {chkSurname && <th className={classes.th}>Surename</th>}\n                    {chkDOB && <th className={classes.th}>D.O.B</th>}\n                    {chkEmail && <th className={classes.th}>Email</th>}\n                    {chkTel && <th className={classes.th}>Tel</th>}\n                    {chkCertificate && (\n                      <th className={classes.th}>Certificate</th>\n                    )}\n                    {chkAntiBodyTest && (\n                      <th className={classes.th}>AntiBodyTest</th>\n                    )}\n                    {chkextRef && <th className={classes.th}>Lab No.</th>}\n                    {chkPrice && <th className={classes.th}>Price (£) </th>}\n                  </tr>\n\n                  {data.bookings\n                    .filter((booking) => {\n                      if (!justCorporate) {\n                        return (\n                          booking.bookingDate >= fromDateStr &&\n                          booking.bookingDate <= untilDateStr\n                        );\n                      } else {\n                        return (\n                          booking.bookingDate >= fromDateStr &&\n                          booking.bookingDate <= untilDateStr &&\n                          booking.paid &&\n                          booking.paidBy === \"corporate\" &&\n                          booking.corporate === corporate\n                        );\n                      }\n                    })\n\n                    .map((booking) => (\n                      <tr>\n                        {chkDate && (\n                          <td className={classes.td}>\n                            {FormatDateFromString(booking.bookingDate)}\n                          </td>\n                        )}\n                        {chkForename && (\n                          <td className={classes.td}>\n                            {booking.forenameCapital}\n                          </td>\n                        )}\n                        {chkSurname && (\n                          <td className={classes.td}>\n                            {booking.surnameCapital}\n                          </td>\n                        )}\n                        {chkDOB && (\n                          <th className={classes.th}>\n                            {/* {FormatDateFromString(booking.birthDate)} */}\n                          </th>\n                        )}\n                        {chkEmail && (\n                          <td className={classes.td}>{booking.email}</td>\n                        )}\n                        {chkTel && (\n                          <td className={classes.td}>{booking.phone}</td>\n                        )}\n                        {chkCertificate && (\n                          <td className={classes.td}>\n                            {booking.certificate ? \"YES\" : \"NO\"}\n                          </td>\n                        )}\n                        {chkAntiBodyTest && (\n                          <td className={classes.td}>\n                            {booking.antiBodyTest ? \"YES\" : \"NO\"}\n                          </td>\n                        )}\n                        {chkextRef && (\n                          <td className={classes.td}>{booking.extRef}</td>\n                        )}\n                        {chkPrice && (\n                          <td className={classes.td}>\n                            {PriceCalculator.calculatePrice(booking)}\n                          </td>\n                        )}\n                      </tr>\n                    ))}\n                </table>\n              </div>\n            </div>\n          </DialogContent>\n        </Dialog>\n      )}\n    </React.Fragment>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport PropTypes from \"prop-types\";\nimport dateformat from \"dateformat\";\nimport BookService from \"../services/BookService\";\n\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nimport GlobalState from \"../../GlobalState\";\nimport { Grid } from \"@material-ui/core\";\nimport { CalendarColors } from \"./colors\";\n\nconst useStyles = makeStyles((theme) => ({\n  Container: {\n    width: \"100%\",\n    minWidth:\"200px\",\n    paddingTop: \"70%\",\n    position: \"relative\",\n    backgroundColor: \"#fff\",\n    cursor: \"pointer\",\n  },\n\n  ContainerPast: {\n    width: \"100%\",\n    paddingTop: \"70%\",\n    position: \"relative\",\n    backgroundColor: \"#fafafa\",\n  },\n\n  DayLabel: {\n    position: \"absolute\",\n    top: \"5px\",\n    right: \"5px\",\n    color: \"#555\",\n    fontSize: \"1rem\",\n  },\n\n  DayLabelToday: {\n    position: \"absolute\",\n    top: \"5px\",\n    right: \"5px\",\n    backgroundColor: \"#1a73e8\",\n    color: \"#fff\",\n    fontSize: \"1rem\",\n    borderRadius: \"50%\",\n    padding: \"5px\",\n    lineHight: \"35px\",\n    minWidth: \"35px\",\n    textAlign: \"center\",\n  },\n\n  DayLabelDisabled: {\n    position: \"absolute\",\n    top: \"5px\",\n    right: \"5px\",\n    color: \"#ddd\",\n    fontSize: \"1rem\",\n  },\n\n  BookingCountLabel: {\n    position: \"absolute\",\n    top: \"35%\",\n    left: \"40%\",\n    color: \"#3f51b5\",\n    backgroundColor: \"#ebedf7\",\n    fontSize: \"16px\",\n    fontWeight: \"600\",\n    padding: \"10px\",\n    borderRadius: \"50%\",\n    minWidth: \"40px\",\n    lineHight: \"40px\",\n    cursor: \"pointer\",\n    textAlign: \"center\",\n  },\n\n  BookingCountLabelBusy: {\n    position: \"absolute\",\n    top: \"35%\",\n    left: \"40%\",\n    color: \"#b00000\",\n    backgroundColor: \"#fce6e6\",\n    fontSize: \"16px\",\n    fontWeight: \"600\",\n    padding: \"10px\",\n    borderRadius: \"50%\",\n    minWidth: \"40px\",\n    cursor: \"pointer\",\n    textAlign: \"center\",\n  },\n\n  LoadingProgress: {\n    position: \"absolute\",\n    top: \"40%\",\n    left: \"40%\",\n  },\n\n  BookingCountGauge: {\n    position: \"absolute\",\n    bottom: \"5%\",\n    left: \"8%\",\n    width: \"8%\",\n    height: \"85%\",\n  },\n\n  PCRGauge: {\n    position: \"absolute\",\n    bottom: \"-20px\",\n    left: \"0\",\n    width: \"30px\",\n    height: \"120%\",\n  },\n\n  GynaeGauge: {\n    position: \"absolute\",\n    bottom: \"-20px\",\n    left: \"31px\",\n    width: \"20px\",\n    height: \"120%\",\n  },\n\n  GPGauge: {\n    position: \"absolute\",\n    bottom: \"-20px\",\n    left: \"52px\",\n    width: \"20px\",\n    height: \"120%\",\n  },\n\n  STDGauge: {\n    position: \"absolute\",\n    bottom: \"-20px\",\n    left: \"73px\",\n    width: \"20px\",\n    height: \"120%\",\n  },\n\n  BloodGauge: {\n    position: \"absolute\",\n    bottom: \"-20px\",\n    left: \"94px\",\n    width: \"20px\",\n    height: \"120%\",\n  },\n\n  DermaGauge: {\n    position: \"absolute\",\n    bottom: \"-20px\",\n    left: \"115px\",\n    width: \"20px\",\n    height: \"120%\",\n  },\n\n\n  DayLabelContainer: {\n    position: \"absolute\",\n    top: \"15%\",\n    left: \"5px\",\n    width: \"100%\",\n    paddingTop: \"45%\",\n  },\n}));\n\nconst MAX_BOOKING_COUNT_PCR = 50;\nconst MAX_BOOKING_COUNT_GP = 10;\nconst MAX_BOOKING_COUNT_STD = 10;\nconst MAX_BOOKING_COUNT_GYNAE = 10;\nconst MAX_BOOKING_COUNT_BLOOD = 10;\nconst MAX_BOOKING_COUNT_DERMA = 10;\n\n\nconst MonthViewCell = ({ key, cellIndex, month, daysInMonth, dayClicked }) => {\n  const classes = useStyles();\n\n  const [state, setState] = React.useContext(GlobalState);\n\n  const [dateStr, setDateStr] = React.useState(\"\");\n\n  const [cellDate, setCellDate] = React.useState(new Date());\n\n  const [bookingsCount, setBookingsCount] = React.useState(null);\n\n  const [disableDay, setDisableDay] = React.useState(false);\n\n  const [isPast, setIsPast] = React.useState(false);\n\n  useEffect(() => {\n    if (cellIndex <= daysInMonth.length) {\n      const date = daysInMonth[cellIndex - 1];\n      const dateStr = dateformat(date, \"yyyy-mm-dd\");\n      setDateStr(dateStr);\n      setCellDate(date);\n      setDisableDay(date.getMonth() !== month - 1);\n      const todayStr = dateformat(new Date(), \"yyyy-mm-dd\");\n      setIsPast(dateStr < todayStr);\n    } else {\n      const day = cellIndex - daysInMonth.length;\n      const date = new Date(\n        daysInMonth[daysInMonth.length - 1].getTime() + day * 86400000\n      );\n      const dateStr = dateformat(date, \"yyyy-mm-dd\");\n      setDateStr(dateStr);\n      setCellDate(date);\n      setDisableDay(true);\n      const todayStr = dateformat(new Date(), \"yyyy-mm-dd\");\n      setIsPast(dateStr < todayStr);\n    }\n  }, [cellIndex, month, daysInMonth]);\n\n  useEffect(() => {\n    const fecthData = async () => {\n      if (!dateStr || dateStr.length <= 0) {\n        return;\n      }\n\n      if (disableDay) {\n        setBookingsCount(-2);\n        return;\n      }\n\n      setBookingsCount(null);\n\n      var res = state.AdminCalendarCache?.find(\n        (record) =>\n          record.method === \"getBookingsCountByDateStr\" &&\n          record.query === dateStr\n      )?.res;\n\n      if (!res) {\n        res = await BookService.getAllBookingsCountByDateStr(dateStr);\n        setState((state) => ({\n          ...state,\n          AdminCalendarCache: [\n            ...state.AdminCalendarCache,\n            { method: \"getBookingsCountByDateStr\", query: dateStr, res: res },\n          ],\n        }));\n      }\n\n      if (res.data.count) {\n        setBookingsCount(res.data.count);\n      }\n    };\n\n    fecthData();\n  }, [dateStr]);\n\n  const getDayLabel = (_cellIndex, _month, _daysInMonth) => {\n    var date = null;\n    var disabled = false;\n    var day = -1;\n\n    if (_cellIndex <= _daysInMonth.length) {\n      date = _daysInMonth[_cellIndex - 1];\n      day = date.getDate();\n      if (date.getMonth() !== _month - 1) {\n        disabled = true;\n      }\n    } else {\n      const _day = _cellIndex - _daysInMonth.length;\n      const date = new Date(\n        _daysInMonth[_daysInMonth.length - 1].getTime() + _day * 86400000\n      );\n      day = date.getDate();\n      disabled = true;\n    }\n\n    const isToday =\n      dateformat(new Date(), \"yyyy-mm-dd\") === dateformat(date, \"yyyy-mm-dd\");\n\n    return (\n      <span\n        className={\n          disabled\n            ? classes.DayLabelDisabled\n            : isToday\n            ? classes.DayLabelToday\n            : classes.DayLabel\n        }\n      >\n        {day > 0 ? `${day}` : \"\"}\n      </span>\n    );\n  };\n\n  const getClinicBar = (clinic, count) => {\n    return (\n      <React.Fragment>\n        {clinic === \"pcr\" &&\n          state.selectedClinics.findIndex((e) => e === \"PCR\") >= 0 &&\n          getPCRClinicBar(count)}\n        {clinic === \"gynae\" &&\n          state.selectedClinics.findIndex((e) => e === \"GYNAE\") >= 0 &&\n          getGynaeClinicBar(count)}\n        {clinic === \"gp\" &&\n          state.selectedClinics.findIndex((e) => e === \"GP\") >= 0 &&\n          getGPClinicBar(count)}\n        {clinic === \"std\" &&\n          state.selectedClinics.findIndex((e) => e === \"STD\") >= 0 &&\n          getSTDClinicBar(count)}\n        {clinic === \"blood\" &&\n          state.selectedClinics.findIndex((e) => e === \"BLOOD\") >= 0 &&\n          getBloodClinicBar(count)}\n        {clinic === \"derma\" &&\n          state.selectedClinics.findIndex((e) => e === \"DERMA\") >= 0 &&\n          getDermaClinicBar(count)}\n  \n\n      </React.Fragment>\n    );\n  };\n\n  const minHeight = 1;\n  const getPCRClinicBar = (count) => {\n    let width = (count / MAX_BOOKING_COUNT_PCR) * 100 + 5;\n    if (width > 100) width = 100;\n\n    if (width < 20) width = 20;\n\n    if (count === 0) {\n      width = minHeight;\n    }\n\n    const percent = 100 - width;\n\n    return (\n      <div className={classes.PCRGauge}>\n        <div\n          style={{\n            padding: \"0\",\n            margin: \"0\",\n            width: \"100%\",\n            height: \"100%\",\n            backgroundColor: CalendarColors.PCR_COLOR,\n            position: \"relative\",\n          }}\n        >\n          <div\n            style={{\n              position: \"absolute\",\n              bottom: \"0px\",\n              color: \"#fff\",\n              fontWeight: \"500\",\n              fontSize:\"0.8rem\",\n              textAlign: \"center\",\n              width: \"100%\",\n            }}\n          >\n            {count > 0 && count}\n          </div>\n\n          <div\n            style={{\n              padding: \"0\",\n              margin: \"0\",\n              width: \"100%\",\n              height: `${percent}%`,\n              backgroundColor: \"#fafafa\",\n            }}\n          ></div>\n        </div>\n      </div>\n    );\n  };\n\n  const getGynaeClinicBar = (count) => {\n    let width = (count / MAX_BOOKING_COUNT_GYNAE) * 100 + 5;\n    if (width > 100) width = 100;\n\n    if (width < 20) width = 20;\n\n    if (count === 0) {\n      width = minHeight;\n    }\n\n    const percent = 100 - width;\n\n    return (\n      <div className={classes.GynaeGauge}>\n        <div\n          style={{\n            padding: \"0\",\n            margin: \"0\",\n            width: \"100%\",\n            height: \"100%\",\n            backgroundColor: CalendarColors.GYNAE_COLOR,\n            position: \"relative\",\n          }}\n        >\n          <div\n             style={{\n                position: \"absolute\",\n                bottom: \"0px\",\n                color: \"#fff\",\n                fontWeight: \"500\",\n                fontSize:\"0.8rem\",\n                textAlign: \"center\",\n                width: \"100%\",\n              }}\n          >\n            {count > 0 && count}\n          </div>\n\n          <div\n            style={{\n              padding: \"0\",\n              margin: \"0\",\n              width: \"100%\",\n              height: `${percent}%`,\n              backgroundColor: \"#fafafa\",\n            }}\n          ></div>\n        </div>\n      </div>\n    );\n  };\n\n  const getGPClinicBar = (count) => {\n    let width = (count / MAX_BOOKING_COUNT_GP) * 100 + 5;\n    if (width > 100) width = 100;\n\n    if (width < 20) width = 20;\n\n    if (count === 0) {\n      width = minHeight;\n    }\n\n    const percent = 100 - width;\n\n    return (\n      <div className={classes.GPGauge}>\n        <div\n          style={{\n            padding: \"0\",\n            margin: \"0\",\n            width: \"100%\",\n            height: \"100%\",\n            backgroundColor: CalendarColors.GP_COLOR,\n            position: \"relative\",\n          }}\n        >\n          <div\n             style={{\n                position: \"absolute\",\n                bottom: \"0px\",\n                color: \"#fff\",\n                fontWeight: \"500\",\n                fontSize:\"0.8rem\",\n                textAlign: \"center\",\n                width: \"100%\",\n              }}\n          >\n            {count > 0 && count}\n          </div>\n\n          <div\n            style={{\n              padding: \"0\",\n              margin: \"0\",\n              width: \"100%\",\n              height: `${percent}%`,\n              backgroundColor: \"#fafafa\",\n            }}\n          ></div>\n        </div>\n      </div>\n    );\n  };\n\n  const getSTDClinicBar = (count) => {\n    let width = (count / MAX_BOOKING_COUNT_STD) * 100 + 5;\n    if (width > 100) width = 100;\n\n    if (width < 20) width = 20;\n\n    if (count === 0) {\n      width = minHeight;\n    }\n\n    const percent = 100 - width;\n\n    return (\n      <div className={classes.STDGauge}>\n        <div\n          style={{\n            padding: \"0\",\n            margin: \"0\",\n            width: \"100%\",\n            height: \"100%\",\n            backgroundColor: CalendarColors.STD_COLOR,\n            position: \"relative\",\n          }}\n        >\n          <div\n             style={{\n                position: \"absolute\",\n                bottom: \"0px\",\n                color: \"#fff\",\n                fontWeight: \"500\",\n                fontSize:\"0.8rem\",\n                textAlign: \"center\",\n                width: \"100%\",\n              }}\n          >\n            {count > 0 && count}\n          </div>\n\n          <div\n            style={{\n              padding: \"0\",\n              margin: \"0\",\n              width: \"100%\",\n              height: `${percent}%`,\n              backgroundColor: \"#fafafa\",\n            }}\n          ></div>\n        </div>\n      </div>\n    );\n  };\n\n  const getBloodClinicBar = (count) => {\n    let width = (count / MAX_BOOKING_COUNT_BLOOD) * 100 + 5;\n    if (width > 100) width = 100;\n\n    if (width < 20) width = 20;\n\n    if (count === 0) {\n      width = minHeight;\n    }\n\n    const percent = 100 - width;\n\n    return (\n      <div className={classes.BloodGauge}>\n        <div\n          style={{\n            padding: \"0\",\n            margin: \"0\",\n            width: \"100%\",\n            height: \"100%\",\n            backgroundColor: CalendarColors.BLOOD_COLOR,\n            position: \"relative\",\n          }}\n        >\n          <div\n             style={{\n                position: \"absolute\",\n                bottom: \"0px\",\n                color: \"#fff\",\n                fontWeight: \"500\",\n                fontSize:\"0.8rem\",\n                textAlign: \"center\",\n                width: \"100%\",\n              }}\n          >\n            {count > 0 && count}\n          </div>\n\n          <div\n            style={{\n              padding: \"0\",\n              margin: \"0\",\n              width: \"100%\",\n              height: `${percent}%`,\n              backgroundColor: \"#fafafa\",\n            }}\n          ></div>\n        </div>\n      </div>\n    );\n  };\n\n  const getDermaClinicBar = (count) => {\n    let width = (count / MAX_BOOKING_COUNT_DERMA) * 100 + 5;\n    if (width > 100) width = 100;\n\n    if (width < 20) width = 20;\n\n    if (count === 0) {\n      width = minHeight;\n    }\n\n    const percent = 100 - width;\n\n    return (\n      <div className={classes.DermaGauge}>\n        <div\n          style={{\n            padding: \"0\",\n            margin: \"0\",\n            width: \"100%\",\n            height: \"100%\",\n            backgroundColor: CalendarColors.DERMA_COLOR,\n            position: \"relative\",\n          }}\n        >\n          <div\n             style={{\n                position: \"absolute\",\n                bottom: \"0px\",\n                color: \"#fff\",\n                fontWeight: \"500\",\n                fontSize:\"0.8rem\",\n                textAlign: \"center\",\n                width: \"100%\",\n              }}\n          >\n            {count > 0 && count}\n          </div>\n\n          <div\n            style={{\n              padding: \"0\",\n              margin: \"0\",\n              width: \"100%\",\n              height: `${percent}%`,\n              backgroundColor: \"#fafafa\",\n            }}\n          ></div>\n        </div>\n      </div>\n    );\n  };\n\n\n  const getBookingsCountLabel = (_bookingsCount) => {\n    if (!_bookingsCount) {\n      return (\n        <div className={classes.LoadingProgress}>\n          <CircularProgress disableShrink />\n        </div>\n      );\n    } else if (_bookingsCount !== -2) {\n      return (\n        <div className={classes.DayLabelContainer}>\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"flex-start\"\n            alignItems=\"flex-end\"\n            style={{ width: \"100%\", height: \"100%\" }}\n          >\n            {_bookingsCount.map((item) => (\n              <Grid item>{getClinicBar(item.clinic, item.count)}</Grid>\n            ))}\n          </Grid>\n        </div>\n      );\n    }\n  };\n\n  const getBookingsCountGauge = (_bookingsCount) => {\n    if (_bookingsCount > 0) {\n      let percent = (_bookingsCount / MAX_BOOKING_COUNT_PCR) * 100;\n      if (percent > 100) {\n        percent = 100;\n      }\n\n      percent = 100 - percent;\n\n      return (\n        <div className={classes.BookingCountGauge}>\n          <div\n            style={{\n              padding: \"0\",\n              margin: \"0\",\n              width: \"100%\",\n              height: \"100%\",\n              backgroundColor: \"#3f51b5\",\n            }}\n          >\n            <div\n              style={{\n                padding: \"0\",\n                margin: \"0\",\n                width: \"100%\",\n                height: `${percent}%`,\n                backgroundColor: \"#fafafa\",\n              }}\n            ></div>\n          </div>\n        </div>\n      );\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <div\n        className={classes.Container}\n        onClick={(event) => dayClicked(event, cellDate)}\n      >\n        {getDayLabel(cellIndex, month, daysInMonth)}\n\n        {getBookingsCountLabel(bookingsCount)}\n\n        {/* {getBookingsCountGauge(bookingsCount)} */}\n      </div>\n    </React.Fragment>\n  );\n};\n\nMonthViewCell.propTypes = {\n  key: PropTypes.string.isRequired,\n  cellIndex: PropTypes.number.isRequired,\n  month: PropTypes.number.isRequired,\n  daysInMonth: PropTypes.arrayOf(PropTypes.date),\n  dayClicked: PropTypes.func,\n};\n\nexport default MonthViewCell;\n","import calendar from 'node-calendar';\n\n\nexport default class CalendarUtil {\n\n    static getMonthRange = (month , year) =>\n    {\n        return new calendar.Calendar(calendar.SUNDAY).itermonthdates(year, month);\n    } \n\n} ","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport MonthViewCell from './MonthViewCell';\nimport CalendarUtil from './calendar-util';\n\nconst dayLables = ['Sun', 'Mon', 'Tue', 'Wed' , 'Thu', 'Fri', 'Sat'];\nconst days = [1,2,3,4,5,6,7]; \nconst rows = [1,2,3,4,5,6];\n\nconst useStyles = makeStyles((theme) => ({\n\n    table: {\n        width: \"100%\",\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n    },\n\n    th: {\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        verticalAlign: \"middle\",\n        fontcolor: \"#555\",\n        fontWeight: \"400\",\n        fontSize: \"15px\",\n        paddingTop: \"5px\",\n        paddingBottom: \"5px\",\n        width: \"14%\"\n    },\n\n    td: {\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        verticalAlign: \"middle\",\n    }\n\n  }));\n\nconst MonthView = ({month, year, dayClicked}) => {\n    const classes = useStyles();\n\n    const daysInMonth = CalendarUtil.getMonthRange(month,year);\n\n    return (\n        <React.Fragment>\n\n            <table className={classes.table}>\n                <thead>\n                    <tr>\n                        {dayLables.map(label => (\n                            <th key={`th-${label}`} className={classes.th}>\n                                {label}\n                            </th>\n                        ))}\n                    </tr>\n                </thead>\n                <tbody>\n                    {rows.map(row => (\n                        <tr>\n                            {days.map(day => (\n                                <td className={classes.td}>\n                                    <MonthViewCell \n                                        key={`${month}${year}${(row-1) * days.length + day}`} \n                                        cellIndex={(row-1) * days.length + day} \n                                        month={month} \n                                        daysInMonth={daysInMonth}\n                                        dayClicked = {dayClicked}\n                                        />\n                                </td>\n                            ))}\n                        </tr>\n                    ))}            \n                </tbody>\n\n            </table>\n\n      \n        </React.Fragment>\n\n\n    );\n}\n\nMonthView.propTypes = {\n    month: PropTypes.number.isRequired,\n    year: PropTypes.number.isRequired,\n    dayClicked: PropTypes.func\n  };\n\n\nexport default MonthView;","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport dateformat from 'dateformat';\nimport BookService from '../services/BookService';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport GlobalState from '../../GlobalState';\n\nimport axios from 'axios'\n\nimport { Grid } from '@material-ui/core';\nimport { CalendarColors } from './colors';\n\nconst MAX_BOOKING_COUNT_PCR = 10;\nconst MAX_BOOKING_COUNT_GP = 1;\nconst MAX_BOOKING_COUNT_STD = 1;\nconst MAX_BOOKING_COUNT_GYNAE = 1;\nconst MAX_BOOKING_COUNT_BLOOD = 1;\n\nconst useStyles = makeStyles((theme) => ({\n\n    Container: {\n        width: \"100%\",\n        minHeight: \"100px\",\n        paddingTop: \"40%\",\n        position: \"relative\",\n        backgroundColor: \"#fff\",\n        cursor: \"pointer\"\n    },\n\n    ContainerPast: {\n        width: \"100%\",\n        minHeight: \"100px\",\n        paddingTop: \"40%\",\n        position: \"relative\",\n        backgroundColor: \"#fafafa\",\n        cursor: \"pointer\"\n    },\n    \n    DayLabel: {\n        position: \"absolute\",\n        top: \"5px\",\n        right: \"5px\",\n        color: \"#555\",\n        fontSize: \"1rem\"\n    },\n\n    DayLabelDisabled: {\n        position: \"absolute\",\n        top: \"5px\",\n        right: \"5px\",\n        color: \"#ddd\",\n        fontSize: \"1rem\"\n    },\n\n    BookingCountLabel: {\n        position: \"absolute\",\n        top: \"25%\",\n        left: \"38%\",\n        color: \"#3f51b5\",\n        backgroundColor: \"#ebedf7\",\n        fontSize: \"14px\",\n        fontWeight: \"600\",\n        padding: \"5px\",\n        borderRadius: \"50%\",\n        minWidth: \"30px\",\n        cursor : \"pointer\",\n        textAlign: \"center\"\n    },\n\n    BookingCountLabelBusy: {\n        position: \"absolute\",\n        top: \"25%\",\n        left: \"38%\",\n        color: \"#b00000\",\n        backgroundColor: \"#fce6e6\",\n        fontSize: \"14px\",\n        fontWeight: \"600\",\n        padding: \"5px\",\n        borderRadius: \"50%\",\n        minWidth: \"30px\",\n        cursor : \"pointer\",\n        textAlign: \"center\"\n    },\n\n    LoadingProgress: {\n        position: \"absolute\",\n        top: \"40%\",\n        left: \"40%\",\n      },\n\n      BookingCountGauge: {\n        position: \"absolute\",\n        bottom: \"5%\",\n        left: \"8%\",\n        width : \"85%\",\n        height: \"8%\"\n    },\n\n    PCRGauge: {\n        position: \"absolute\",\n        bottom: \"15px\",\n        left: \"0\",\n        width: \"15px\",\n        height: \"90%\",\n      },\n    \n      GynaeGauge: {\n        position: \"absolute\",\n        bottom: \"15px\",\n        left: \"16px\",\n        width: \"15px\",\n        height: \"90%\",\n      },\n    \n      GPGauge: {\n        position: \"absolute\",\n        bottom: \"15px\",\n        left: \"32px\",\n        width: \"15px\",\n        height: \"90%\",\n      },\n    \n      STDGauge: {\n        position: \"absolute\",\n        bottom: \"15px\",\n        left: \"48px\",\n        width: \"15px\",\n        height: \"90%\",\n      },\n      BloodGauge: {\n        position: \"absolute\",\n        bottom: \"15px\",\n        left: \"64px\",\n        width: \"15px\",\n        height: \"90%\",\n      },\n      DermaGauge: {\n        position: \"absolute\",\n        bottom: \"15px\",\n        left: \"80px\",\n        width: \"15px\",\n        height: \"90%\",\n      },\n\n\n    \n\n    DayLabelContainer:{\n        position: \"absolute\",\n        top: \"15%\",\n        left:\"5px\",\n        width:\"100%\",\n        height:\"100%\"   \n    },\n\n  }));\n\nconst MAX_BOOKING_COUNT = 1;  \n\nconst WeekViewCell = ({key, date, time, dayClicked}) => {\n    const classes = useStyles();\n\n    const [state, setState] = React.useContext(GlobalState);\n    const [bookingsCount, setBookingsCount] = React.useState(null);\n    const [isPast, setIsPast] = React.useState(false);\n\n    const [cellDate, setCellDate] = React.useState(new Date());\n\n    useEffect( () => {\n        const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\n        setIsPast(date < todayStr);\n\n        setCellDate(new Date(date));\n\n    }, [date]);\n\n    useEffect ( () => {\n      \n      \n      \n        if (!date || date.length <= 0 || !time || time.length <= 0)\n        {\n            return;\n        }\n        \n        // if (isPast)\n        // {\n        //     setBookingsCount(-2);\n        //     return;\n        // }\n\n        setBookingsCount(null);\n\n       \n\n        var res = state.AdminCalendarCache?.find(record => record.method === 'getBookingsCountByDateStrandTime' && record.query === `${date}${time}`)?.res;\n        if (res)\n        {\n            if (res.data.count)\n            {\n                setBookingsCount(res.data.count);\n            }  \n            return;\n        }\n\n        let source = axios.CancelToken.source();\n        BookService.getAllBookingsCountByDateStrandTime(date, time, source).then( res => {\n            if (res.data.count)\n            {\n                setBookingsCount(res.data.count);\n                setState(state => ({...state, AdminCalendarCache : [...state.AdminCalendarCache, {method: 'getBookingsCountByDateStrandTime' , query : `${date}${time}`, res: res}]}));\n            }  \n        }).catch( err => \n            {\n                //do nothing\n            });\n     \n        return () => {\n           if (source)\n              source.cancel('Cancelling in cleanup');\n        }\n     \n    }, [date, time]);\n\n\n    const minHeight = 1;\n    const getPCRClinicBar = (count) => {\n      let width = (count / MAX_BOOKING_COUNT_PCR) * 100 + 5;\n      if (width > 100) width = 100;\n  \n      if (width < 30) width = 30;\n  \n      if (count === 0) {\n        width = minHeight;\n      }\n  \n      const percent = 100 - width;\n  \n      return (\n        <div className={classes.PCRGauge}>\n          <div\n            style={{\n              padding: \"0\",\n              margin: \"0\",\n              width: \"100%\",\n              height: \"100%\",\n              backgroundColor: CalendarColors.PCR_COLOR,\n              position: \"relative\",\n            }}\n          >\n            <div\n              style={{\n                position: \"absolute\",\n                bottom: \"0px\",\n                color: \"#fff\",\n                fontWeight: \"500\",\n                fontSize:\"0.8rem\",\n                textAlign: \"center\",\n                width: \"100%\",\n              }}\n            >\n              {count > 0 && count}\n            </div>\n  \n            <div\n              style={{\n                padding: \"0\",\n                margin: \"0\",\n                width: \"100%\",\n                height: `${percent}%`,\n                backgroundColor: \"#fafafa\",\n              }}\n            ></div>\n          </div>\n        </div>\n      );\n    };\n  \n    const getGynaeClinicBar = (count) => {\n      let width = (count / MAX_BOOKING_COUNT_GYNAE) * 100 + 5;\n      if (width > 100) width = 100;\n  \n      if (width < 30) width = 30;\n  \n      if (count === 0) {\n        width = minHeight;\n      }\n  \n      const percent = 100 - width;\n  \n      return (\n        <div className={classes.GynaeGauge}>\n          <div\n            style={{\n              padding: \"0\",\n              margin: \"0\",\n              width: \"100%\",\n              height: \"100%\",\n              backgroundColor: CalendarColors.GYNAE_COLOR,\n              position: \"relative\",\n            }}\n          >\n            <div\n               style={{\n                  position: \"absolute\",\n                  bottom: \"0px\",\n                  color: \"#fff\",\n                  fontWeight: \"500\",\n                  fontSize:\"0.8rem\",\n                  textAlign: \"center\",\n                  width: \"100%\",\n                }}\n            >\n              {count > 0 && count}\n            </div>\n  \n            <div\n              style={{\n                padding: \"0\",\n                margin: \"0\",\n                width: \"100%\",\n                height: `${percent}%`,\n                backgroundColor: \"#fafafa\",\n              }}\n            ></div>\n          </div>\n        </div>\n      );\n    };\n  \n    const getGPClinicBar = (count) => {\n      let width = (count / MAX_BOOKING_COUNT_GP) * 100 + 5;\n      if (width > 100) width = 100;\n  \n      if (width < 30) width = 30;\n  \n      if (count === 0) {\n        width = minHeight;\n      }\n  \n      const percent = 100 - width;\n  \n      return (\n        <div className={classes.GPGauge}>\n          <div\n            style={{\n              padding: \"0\",\n              margin: \"0\",\n              width: \"100%\",\n              height: \"100%\",\n              backgroundColor: CalendarColors.GP_COLOR,\n              position: \"relative\",\n            }}\n          >\n            <div\n               style={{\n                  position: \"absolute\",\n                  bottom: \"0px\",\n                  color: \"#fff\",\n                  fontWeight: \"500\",\n                  fontSize:\"0.8rem\",\n                  textAlign: \"center\",\n                  width: \"100%\",\n                }}\n            >\n              {count > 0 && count}\n            </div>\n  \n            <div\n              style={{\n                padding: \"0\",\n                margin: \"0\",\n                width: \"100%\",\n                height: `${percent}%`,\n                backgroundColor: \"#fafafa\",\n              }}\n            ></div>\n          </div>\n        </div>\n      );\n    };\n  \n    const getSTDClinicBar = (count) => {\n      let width = (count / MAX_BOOKING_COUNT_STD) * 100 + 5;\n      if (width > 100) width = 100;\n  \n      if (width < 30) width = 30;\n  \n      if (count === 0) {\n        width = minHeight;\n      }\n  \n      const percent = 100 - width;\n  \n      return (\n        <div className={classes.STDGauge}>\n          <div\n            style={{\n              padding: \"0\",\n              margin: \"0\",\n              width: \"100%\",\n              height: \"100%\",\n              backgroundColor: CalendarColors.STD_COLOR,\n              position: \"relative\",\n            }}\n          >\n            <div\n               style={{\n                  position: \"absolute\",\n                  bottom: \"0px\",\n                  color: \"#fff\",\n                  fontWeight: \"500\",\n                  fontSize:\"0.8rem\",\n                  textAlign: \"center\",\n                  width: \"100%\",\n                }}\n            >\n              {count > 0 && count}\n            </div>\n  \n            <div\n              style={{\n                padding: \"0\",\n                margin: \"0\",\n                width: \"100%\",\n                height: `${percent}%`,\n                backgroundColor: \"#fafafa\",\n              }}\n            ></div>\n          </div>\n        </div>\n      );\n    };\n\n    const getBloodClinicBar = (count) => {\n      let width = (count / MAX_BOOKING_COUNT_BLOOD) * 100 + 5;\n      if (width > 100) width = 100;\n  \n      if (width < 30) width = 30;\n  \n      if (count === 0) {\n        width = minHeight;\n      }\n  \n      const percent = 100 - width;\n  \n      return (\n        <div className={classes.BloodGauge}>\n          <div\n            style={{\n              padding: \"0\",\n              margin: \"0\",\n              width: \"100%\",\n              height: \"100%\",\n              backgroundColor: CalendarColors.BLOOD_COLOR,\n              position: \"relative\",\n            }}\n          >\n            <div\n               style={{\n                  position: \"absolute\",\n                  bottom: \"0px\",\n                  color: \"#fff\",\n                  fontWeight: \"500\",\n                  fontSize:\"0.8rem\",\n                  textAlign: \"center\",\n                  width: \"100%\",\n                }}\n            >\n              {count > 0 && count}\n            </div>\n  \n            <div\n              style={{\n                padding: \"0\",\n                margin: \"0\",\n                width: \"100%\",\n                height: `${percent}%`,\n                backgroundColor: \"#fafafa\",\n              }}\n            ></div>\n          </div>\n        </div>\n      );\n    };\n\n    const getDermaClinicBar = (count) => {\n      let width = (count / MAX_BOOKING_COUNT_GYNAE) * 100 + 5;\n      if (width > 100) width = 100;\n  \n      if (width < 30) width = 30;\n  \n      if (count === 0) {\n        width = minHeight;\n      }\n  \n      const percent = 100 - width;\n  \n      return (\n        <div className={classes.DermaGauge}>\n          <div\n            style={{\n              padding: \"0\",\n              margin: \"0\",\n              width: \"100%\",\n              height: \"100%\",\n              backgroundColor: CalendarColors.DERMA_COLOR,\n              position: \"relative\",\n            }}\n          >\n            <div\n               style={{\n                  position: \"absolute\",\n                  bottom: \"0px\",\n                  color: \"#fff\",\n                  fontWeight: \"500\",\n                  fontSize:\"0.8rem\",\n                  textAlign: \"center\",\n                  width: \"100%\",\n                }}\n            >\n              {count > 0 && count}\n            </div>\n  \n            <div\n              style={{\n                padding: \"0\",\n                margin: \"0\",\n                width: \"100%\",\n                height: `${percent}%`,\n                backgroundColor: \"#fafafa\",\n              }}\n            ></div>\n          </div>\n        </div>\n      );\n    };\n\n\n  \n  \n    const getBookingsCountLabel = (_bookingsCount) => {\n      if (!_bookingsCount) {\n        return (\n          <div className={classes.LoadingProgress}>\n            <CircularProgress disableShrink />\n          </div>\n        );\n      } else if (_bookingsCount !== -2) {\n        return (\n          <div className={classes.DayLabelContainer}>\n            <Grid\n              container\n              direction=\"row\"\n              justify=\"flex-start\"\n              alignItems=\"flex-end\"\n              style={{ width: \"100%\", height: \"100%\" }}\n            >\n              {_bookingsCount.map((item) => (\n                <Grid item>{getClinicBar(item.clinic, item.count)}</Grid>\n              ))}\n            </Grid>\n          </div>\n        );\n      }\n    };\n\n    const getClinicBar = (clinic, count) => {\n        return (\n          <React.Fragment>\n            {clinic === \"pcr\" &&\n              state.selectedClinics.findIndex((e) => e === \"PCR\") >= 0 &&\n              getPCRClinicBar(count)}\n            {clinic === \"gynae\" &&\n              state.selectedClinics.findIndex((e) => e === \"GYNAE\") >= 0 &&\n              getGynaeClinicBar(count)}\n            {clinic === \"gp\" &&\n              state.selectedClinics.findIndex((e) => e === \"GP\") >= 0 &&\n              getGPClinicBar(count)}\n            {clinic === \"std\" &&\n              state.selectedClinics.findIndex((e) => e === \"STD\") >= 0 &&\n              getSTDClinicBar(count)}\n            {clinic === \"blood\" &&\n              state.selectedClinics.findIndex((e) => e === \"BLOOD\") >= 0 &&\n              getBloodClinicBar(count)}\n            {clinic === \"derma\" &&\n              state.selectedClinics.findIndex((e) => e === \"DERMA\") >= 0 &&\n              getDermaClinicBar(count)}\n   \n\n          </React.Fragment>\n        );\n      };\n  \n  \n    const getBookingsCountGauge = (_bookingsCount) =>\n    {\n        if (_bookingsCount > 0 )\n        {\n            let percent = (_bookingsCount / MAX_BOOKING_COUNT) * 100;\n            if (percent > 100)\n            {\n                percent = 100;\n            }\n\n            // percent = 100 - percent;\n\n            return (\n\n                <div className={classes.BookingCountGauge}>\n                  <div style={{padding:\"0\", margin:\"0\", width:\"100%\", height:\"100%\", backgroundColor: \"#f5f5f5\"}} >\n                        <div  style={{padding:\"0\", margin:\"0\", height:\"100%\", width:`${percent}%`, backgroundColor: \"#3f51b5\"}} >\n\n                        </div>\n                  </div>\n                </div>\n            );\n        }\n    }\n\n\n\n\n    return (\n        <React.Fragment>\n\n            <div className={isPast ? classes.ContainerPast : classes.Container} onClick={(event => dayClicked(event,cellDate))} >\n\n              {getBookingsCountLabel(bookingsCount)}\n\n              {/* {getBookingsCountGauge(bookingsCount)} */}\n\n            </div>\n\n        </React.Fragment>\n\n\n    );\n}\n\nWeekViewCell.propTypes = {\n    key: PropTypes.string.isRequired,\n    date: PropTypes.string.isRequired,\n    time: PropTypes.string.isRequired,\n    dayClicked: PropTypes.func\n  };\n\n \n  \nexport default WeekViewCell;","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport WeekViewCell from './WeekViewCell';\nimport dateformat from 'dateformat';\n\nconst rows = [\n    '09:00 AM',\n    '09:15 AM', \n    '09:30 AM', \n    '09:45 AM',\n    '10:00 AM',\n    '10:15 AM',\n    '10:30 AM',\n    '10:45 AM',\n    '11:00 AM',\n    '11:15 AM',\n    '11:30 AM',\n    '11:45 AM',\n    '12:00 PM',\n    '12:15 PM',\n    '12:30 PM',\n    '12:45 PM',\n    '01:00 PM',\n    '01:15 PM',\n    '01:30 PM',\n    '01:45 PM',\n    '02:00 PM',\n    '02:15 PM',\n    '02:30 PM',\n    '02:45 PM',\n    '03:00 PM',\n    '03:15 PM',\n    '03:30 PM',\n    '03:45 PM',\n    '04:00 PM',\n    '04:15 PM',\n    '04:30 PM',\n    '04:45 PM',\n    '05:00 PM',\n    '05:15 PM',\n    '05:30 PM',\n    '05:45 PM',\n];\n\n\n\nconst useStyles = makeStyles((theme) => ({\n\n    table: {\n        width: \"100%\",\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        overflowY: \"auto\"\n    },\n\n    th: {\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        verticalAlign: \"middle\",\n        fontcolor: \"#555\",\n        fontWeight: \"400\",\n        fontSize: \"15px\",\n        paddingTop: \"5px\",\n        paddingBottom: \"5px\",\n        width: \"12%\", \n    },\n\n    td: {\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        verticalAlign: \"middle\",\n        height : \"50px\",\n        width: \"12%\", \n    }\n\n  }));\n\nconst WeekView = ({dates, dayClicked}) => {\n    const classes = useStyles();\n\n    return (\n        <React.Fragment>\n\n        <div style={{overflowY: \"scroll\" , height: \"60px\"}}>\n            <table className={classes.table}>\n                <thead>\n                    <tr>\n                        <th style={{width: \"7%\"}}>\n                        \n                        </th>\n                            {dates.map(date => (\n                                <th className={classes.th}>\n                                    <div style={{paddingBottom: \"5px\", color: \"#aaa\"}}>\n                                         {dateformat(date, 'ddd')}\n                                    </div>\n                                    <div>\n                                        <span style={{color: \"#aaa\"}}>\n                                            {dateformat(date, 'mmm ')}\n                                        </span> \n                                        <span  style={(dateformat(new Date(),'yyyy-mm-dd') === dateformat(date, 'yyyy-mm-dd')) ? { backgroundColor: \"#1a73e8\", color: \"#fff\", borderRadius: \"50%\",  padding: \"5px\",} : {color: \"#333\", fontWeight:\"500\"}}>\n                                             {dateformat(date, ' d')}\n                                        </span>\n                                       \n                                    </div>\n                                </th>\n                        ))}\n                    </tr>\n                </thead>\n             </table>\n\n        </div>\n\n            <div style={{overflowY: \"scroll\" , height: \"70vh\"}}>\n                <table className={classes.table}>   \n                    <tbody>\n                        {rows.map(row => (\n                            <tr>\n                                <td style={{width: \"7%\"}}>\n                                    {row}\n                                </td>\n                                {dates.map(day => (\n                                    <td className={classes.td}>\n                                        <WeekViewCell \n                                                dayClicked = {dayClicked}\n                                                key={`${dateformat(day,'yyyy-mm-dd')}-${row.replace(':','-')}`} \n                                                date={dateformat(day,'yyyy-mm-dd')} \n                                                time={row}/>\n                                    </td>\n                                ))}\n                            </tr>\n                        ))}            \n                    </tbody>\n                </table>\n            </div>                    \n      \n        </React.Fragment>\n\n\n    );\n}\n\nWeekView.propTypes = {\n    dates: PropTypes.arrayOf(PropTypes.any).isRequired,\n    dayClicked: PropTypes.func\n  };\n\n\nexport default WeekView;","import React, { useEffect, useRef, useState } from \"react\";\nimport BookService from \"./services/BookService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {\n  Backdrop,\n  Button,\n  Checkbox,\n  CircularProgress,\n  Divider,\n  FormControlLabel,\n  Grid,\n  InputAdornment,\n  InputLabel,\n  Link,\n  makeStyles,\n  MenuItem,\n  Select,\n  Switch,\n  TextField,\n  Tooltip,\n} from \"@material-ui/core\";\nimport GlobalState from \"../GlobalState\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport CreditCardIcon from \"@material-ui/icons/CreditCard\";\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\n\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Draggable from \"react-draggable\";\nimport Paper from \"@material-ui/core/Paper\";\n\nimport Alert from \"@material-ui/lab/Alert\";\n\nimport PropTypes from \"prop-types\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport Box from \"@material-ui/core/Box\";\n\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport { corporates } from \"./Corporates\";\nimport NumberFormat from \"react-number-format\";\n\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { validate } from \"email-validator\";\nimport DateRangeIcon from \"@material-ui/icons/DateRange\";\nimport { CalendarColors } from \"./calendar-admin/colors\";\n\nvar interval;\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    marginTop: theme.spacing(0),\n    marginBottom: theme.spacing(1),\n  },\n\n  refreshButton: {\n    marginLeft: theme.spacing(2),\n  },\n\n  checkIcon: {\n    color: \"green\",\n  },\n\n  closeIcon: {\n    color: \"red\",\n  },\n\n  RefLink: {\n    cursor: \"pointer\",\n  },\n\n  BookedLabel: {\n    backgroundColor: \"#606060\",\n    color: \"#fff\",\n    paddingRight: \"10px\",\n    paddingLeft: \"10px\",\n  },\n\n  PatientAttendedLabel: {\n    backgroundColor: \"#0066aa\",\n    color: \"#fff\",\n    paddingRight: \"15px\",\n    paddingLeft: \"10px\",\n  },\n\n  SampleTakenLabel: {\n    backgroundColor: \"#0066cc\",\n    color: \"#fff\",\n    paddingRight: \"40px\",\n    paddingLeft: \"10px\",\n  },\n\n  ReportSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"90px\",\n    paddingLeft: \"10px\",\n  },\n\n  ReportCertSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"68px\",\n    paddingLeft: \"10px\",\n  },\n\n  archiveButton: {},\n\n  smartMatchButton: {\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    marginRight: \"10px\",\n    // padding: \"10px\"\n  },\n\n  infoTitle: {\n    fontWeight: \"400\",\n  },\n\n  infoData: {\n    paddingLeft: \"10px\",\n    fontWeight: \"800\",\n  },\n\n  matchButton: {\n    marginTop: \"30px\",\n    marginBottom: \"20px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  resendButton: {\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  resendFilesButton: {\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n    backgroundColor: \"#3792ad\",\n    \"&:hover\": {\n      background: \"#2f798f\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  cancelButton: {\n    marginBottom: \"10px\",\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"90px\",\n    paddingRight: \"90px\",\n  },\n\n  CalendarIcon: {\n    color: theme.palette.primary.main,\n  },\n\n  DateTimeLabel: {\n    fontWeight: \"500\",\n    color: theme.palette.primary.main,\n  },\n\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 5,\n    color: \"#fff\",\n  },\n\n  PriceLabelPaid:{\n    color: theme.palette.primary.main,\n    fontWeight: \"600\"\n  },\n\n  PriceLabelNotPaid:{\n    color: theme.palette.secondary.main,\n    fontWeight: \"600\"\n  },\n\n  BoxDisabled: {\n    width : \"100%\",\n    padding: \"10px\",\n    borderRadius: \"8px\",\n    border: \"1px solid\",\n    fontSize: \"1.2rem\",\n    fontWeight: \"500\",\n    textAlign: \"center\",\n    borderColor: \"#ddd\",\n    cursor: \"not-allowed\",\n    color: \"#ddd\",\n    transition: \"all 0.2s ease\",\n  },\n\n  BoxGynae: {\n    width : \"100%\",\n    padding: \"10px\",\n    borderRadius: \"8px\",\n    border: \"1px solid\",\n    fontSize: \"1.2rem\",\n    fontWeight: \"500\",\n    textAlign: \"center\",\n    cursor: \"pointer\",\n    borderColor: CalendarColors.GYNAE_COLOR,\n    color: CalendarColors.GYNAE_COLOR,\n    transition: \"all 0.2s ease\",\n    \"&:hover\": {\n      backgroundColor: CalendarColors.GYNAE_COLOR,\n      color: \"#fff\"\n    }\n  \n  },\n\n  BoxGP: {\n    width : \"100%\",\n    padding: \"10px\",\n    borderRadius: \"8px\",\n    border: \"1px solid\",\n    fontSize: \"1.2rem\",\n    fontWeight: \"500\",\n    textAlign: \"center\",\n    cursor: \"pointer\",\n    borderColor: CalendarColors.GP_COLOR,\n    color: CalendarColors.GP_COLOR,\n    transition: \"all 0.2s ease\",\n    \"&:hover\": {\n      backgroundColor: CalendarColors.GP_COLOR,\n      color: \"#fff\"\n    }\n  },\n\n  BoxSTD: {\n    width : \"100%\",\n    padding: \"10px\",\n    borderRadius: \"8px\",\n    border: \"1px solid\",\n    fontSize: \"1.2rem\",\n    fontWeight: \"500\",\n    textAlign: \"center\",\n    cursor: \"pointer\",\n    borderColor: CalendarColors.STD_COLOR,\n    color: CalendarColors.STD_COLOR,\n    transition: \"all 0.2s ease\",\n    \"&:hover\": {\n      backgroundColor: CalendarColors.STD_COLOR,\n      color: \"#fff\"\n    }\n  },\n\n  BoxBlood: {\n    width : \"100%\",\n    padding: \"10px\",\n    borderRadius: \"8px\",\n    border: \"1px solid\",\n    fontSize: \"1.2rem\",\n    fontWeight: \"500\",\n    textAlign: \"center\",\n    cursor: \"pointer\",\n    borderColor: CalendarColors.BLOOD_COLOR,\n    color: CalendarColors.BLOOD_COLOR,\n    transition: \"all 0.2s ease\",\n    \"&:hover\": {\n      backgroundColor: CalendarColors.BLOOD_COLOR,\n      color: \"#fff\"\n    }\n  },\n\n  BoxDerma: {\n    width : \"100%\",\n    padding: \"10px\",\n    borderRadius: \"8px\",\n    border: \"1px solid\",\n    fontSize: \"1.2rem\",\n    fontWeight: \"500\",\n    textAlign: \"center\",\n    cursor: \"pointer\",\n    borderColor: CalendarColors.DERMA_COLOR,\n    color: CalendarColors.DERMA_COLOR,\n    transition: \"all 0.2s ease\",\n    \"&:hover\": {\n      backgroundColor: CalendarColors.DERMA_COLOR,\n      color: \"#fff\"\n    }\n  },\n\n\n\n\n\n\n}));\n\nconst Packages = [\n  { packageName: \"Consultation with Consultant Gynaecologist\" },\n  { packageName: `Coil Fitting/Coil Removal` },\n  { packageName: `Well Woman Check` },\n  { packageName: `Sexual Health Screening` },\n  { packageName: `Pre-pregnancy/Fertility check` },\n  { packageName: `Gynaecological Ultrasound` },\n  { packageName: `HPV Vaccination` },\n  { packageName: `Cervical / Pap Smear` },\n  { packageName: `HPV Treatment / Wart Cryo-Therapy` },\n];\n\nfunction NumberFormatCustom(props) {\n  const { inputRef, onChange, ...other } = props;\n\n  return (\n    <NumberFormat\n      {...other}\n      getInputRef={inputRef}\n      onValueChange={(values) => {\n        onChange({\n          target: {\n            name: props.name,\n            value: values.value,\n          },\n        });\n      }}\n      thousandSeparator\n      isNumericString\n      prefix=\"\"\n    />\n  );\n}\n\nNumberFormatCustom.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nconst BorderLinearProgress = withStyles((theme) => ({\n  root: {\n    height: 10,\n    borderRadius: 5,\n  },\n  colorPrimary: {\n    backgroundColor: \"#cedbce\", //theme.palette.grey[theme.palette.type === 'light' ? 200 : 700],\n  },\n  bar: {\n    borderRadius: 5,\n    backgroundColor: \"#2f942e\",\n  },\n}))(LinearProgress);\nfunction LinearProgressWithLabel(props) {\n  return (\n    <Box display=\"flex\" alignItems=\"center\">\n      <Box width=\"100%\" mr={1}>\n        <BorderLinearProgress variant=\"determinate\" {...props} />\n      </Box>\n      <Box minWidth={35}>\n        <Typography\n          style={{ fontWeight: \"800\", color: \"#5e855e\" }}\n          variant=\"body2\"\n          color=\"textSecondary\"\n        >{`${Math.round(props.value)}%`}</Typography>\n      </Box>\n    </Box>\n  );\n}\n\nLinearProgressWithLabel.propTypes = {\n  /**\n   * The value of the progress indicator for the determinate and buffer variants.\n   * Value between 0 and 100.\n   */\n  value: PropTypes.number.isRequired,\n};\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable\n      handle=\"#draggable-dialog-title\"\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\n    >\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nexport default function NewBookingDialog(props) {\n  const classes = useStyles();\n\n  const [state, setState] = React.useContext(GlobalState);\n\n  const handleClose = () => {    \n    props.handleClose();\n  };\n\n\n  const timeDisabled = () =>\n  {\n    return props.time.indexOf(':15') > 0 || props.time.indexOf(':45') > 0 || props.time.indexOf('09') >= 0 \n  }\n\n  const clinicClicked = (clinic) =>\n  {\n    props.clinicClicked(clinic)\n  }\n\n  return (\n    <React.Fragment>\n      {props.date && props.time && (\n        <React.Fragment>\n          <Dialog\n            maxWidth=\"xs\"\n            open={props.open}\n            onClose={handleClose}\n            PaperComponent={PaperComponent}\n            aria-labelledby=\"form-dialog-title\"\n          >\n            <DialogTitle id=\"draggable-dialog-title\">\n              <Grid\n                container\n                spacing={2}\n                direction=\"row\"\n                justify=\"center\"\n                alignItems=\"center\"\n              >\n                <Grid item>\n                  <AddIcon style={{ color: \"#f50057\", fontSize: \"3rem\" }} />\n                </Grid>\n\n                <Grid item>\n                  <div\n                    style={{\n                      color: \"#f50057\",\n                      paddingBottom: \"10px\",\n                      fontWeight: \"800\",\n                    }}\n                  >\n                    {\" \"}\n                    ADD New Booking{\" \"}\n                  </div>\n                </Grid>\n              </Grid>\n\n              <Divider />\n            </DialogTitle>\n            <DialogContent>\n              <div\n                style={{\n                  height: \"420px\",\n                }}\n              >\n                <Grid\n                  container\n                  direction=\"row\"\n                  justify=\"stretch\"\n                  spacing={2}\n                  alignItems=\"center\"\n                >\n                  <Grid item xs={12}>\n                    <Grid\n                      container\n                      direction=\"row\"\n                      justify=\"center\"\n                      alignItems=\"center\"\n                      spacing={1}\n                    >\n                      <Grid item>\n                        <DateRangeIcon className={classes.CalendarIcon} />\n                      </Grid>\n                      <Grid item>\n                        <span className={classes.DateTimeLabel}>\n                          {props.date} , {props.time}\n                        </span>\n                      </Grid>\n                    </Grid>\n                  </Grid>\n\n\n                  <Grid item xs={12}>\n                    <div className={timeDisabled() ? classes.BoxDisabled : classes.BoxGynae} onClick={() => !timeDisabled() ? clinicClicked(\"gynae\") : null}>\n                      GYNAE\n                    </div>\n                  </Grid>\n                  <Grid item xs={12}>\n                    <div className={timeDisabled() ? classes.BoxDisabled : classes.BoxGP}  onClick={() => !timeDisabled() ? clinicClicked(\"gp\") : null}>\n                      GP\n                    </div>\n                  </Grid>\n                  <Grid item xs={12}>\n                    <div className={classes.BoxSTD} onClick={() => clinicClicked(\"std\")}>\n                      STD\n                    </div>\n                  </Grid>\n\n                  <Grid item xs={12}>\n                    <div className={classes.BoxBlood} onClick={() => clinicClicked(\"blood\")}>\n                      BLOOD\n                    </div>\n                  </Grid>\n\n                  <Grid item xs={12}>\n                    <div className={classes.BoxDerma} onClick={() => clinicClicked(\"derma\")}>\n                      DERMATOLOGY\n                    </div>\n                  </Grid>\n\n\n\n                </Grid>\n\n                <div\n                  style={{\n                    position: \"absolute\",\n                    bottom: \"20px\",\n                    right: \"20px\",\n                  }}\n                >\n                  <Grid\n                    container\n                    direction=\"row\"\n                    justify=\"flex-end\"\n                    alignItems=\"center\"\n                    spacing={1}\n                  >\n                    <Grid item>\n                      <Button\n                        onClick={handleClose}\n                        style={{ width: \"100px\" }}\n                      >\n                        close\n                      </Button>\n                    </Grid>\n                   \n                  </Grid>\n                </div>\n              </div>\n\n            </DialogContent>\n          </Dialog>\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport PropTypes from \"prop-types\";\nimport dateformat from \"dateformat\";\nimport BookService from \"../services/BookService\";\n\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport GlobalState from \"../../GlobalState\";\nimport BookingDialog from \"../BookingDialog\";\nimport NewBookingDialog from \"../NewBookingDialog\";\nimport { CalendarColors } from \"./colors\";\nimport clsx from \"clsx\";\n\nimport NewGPDialog from \"../../GP/NewBookingDialog\";\nimport NewGynaeDialog from \"../../Gynae/NewBookingDialog\";\nimport NewSTDDialog from \"../../STD/NewBookingDialog\";\nimport NewBloodDialog from \"../../Blood/NewBookingDialog\";\nimport NewDermaDialog from \"../../Derma/NewBookingDialog\";\n\nconst useStyles = makeStyles((theme) => ({\n  Container: {\n    width: \"100%\",\n    height: \"50px\",\n    position: \"relative\",\n    backgroundColor: \"#fff\",\n    display: \"flex\",\n    alignItems: \"flex-start\",\n    justifyItems: \"flex-start\",\n    paddingLeft: \"10px\",\n  },\n\n  ContainerPast: {\n    width: \"100%\",\n    paddingTop: \"50px\",\n    position: \"relative\",\n    backgroundColor: \"#fafafa\",\n  },\n\n  DayLabel: {\n    position: \"absolute\",\n    top: \"5px\",\n    right: \"5px\",\n    color: \"#555\",\n    fontSize: \"1rem\",\n  },\n\n  DayLabelDisabled: {\n    position: \"absolute\",\n    top: \"5px\",\n    right: \"5px\",\n    color: \"#ddd\",\n    fontSize: \"1rem\",\n  },\n\n  LoadingProgress: {\n    position: \"absolute\",\n    top: \"10%\",\n    left: \"40%\",\n  },\n\n  BookingCountGauge: {\n    position: \"absolute\",\n    bottom: \"5%\",\n    left: \"8%\",\n    width: \"85%\",\n    height: \"8%\",\n  },\n\n  bookingBox: {\n    display: \"flex\",\n    marginRight: \"10px\",\n    marginTop: \"5px\",\n    padding: \"7px\",\n    maxWidth: \"150px\",\n    overflowX: \"hidden\",\n    // border: \"1px solid #eee\",\n    fontSize: \"12px\",\n    fontWeight: \"500\",\n    cursor: \"pointer\",\n    backgroundColor: \"#ebedf7\",\n    color: \"#3f51b5\",\n    boxShadow: \"2px 4px #fafafa\",\n\n    \"&:hover\": {\n      background: \"#3f51b5\",\n      color: \"#ebedf7\",\n    },\n  },\n\n  bookingBoxNew: {\n    display: \"flex\",\n    marginRight: \"10px\",\n    marginTop: \"5px\",\n    padding: \"10px\",\n    maxWidth: \"150px\",\n    overflowX: \"hidden\",\n    border: \"1px solid #ddd\",\n    color: \"#ccc\",\n    fontSize: \"12px\",\n    fontWeight: \"500\",\n    cursor: \"pointer\",\n    backgroundColor: \"#fff\",\n\n    boxShadow: \"2px 4px #fafafa\",\n    transition: \"all 0.5s ease\",\n    borderRadius: \"4px\",\n\n    \"&:hover\": {\n      background: \"#fff\",\n      color: theme.palette.secondary.main,\n      borderColor: theme.palette.secondary.main,\n    },\n  },\n\n  bookingBoxSampleTaken: {\n    display: \"flex\",\n    marginRight: \"10px\",\n    marginTop: \"5px\",\n    padding: \"7px\",\n    maxWidth: \"150px\",\n    overflowX: \"hidden\",\n    fontSize: \"12px\",\n    fontWeight: \"500\",\n    cursor: \"pointer\",\n    backgroundColor: \"#0066cc\",\n    color: \"#eee\",\n    boxShadow: \"2px 4px #fafafa\",\n\n    \"&:hover\": {\n      background: \"#0059b3\",\n      color: \"#fafafa\",\n    },\n  },\n\n  bookingBoxPositive: {\n    display: \"flex\",\n    marginRight: \"10px\",\n    marginTop: \"5px\",\n    padding: \"7px\",\n    maxWidth: \"150px\",\n    overflowX: \"hidden\",\n    fontSize: \"12px\",\n    fontWeight: \"500\",\n    cursor: \"pointer\",\n    backgroundColor: \"#d40b0b\",\n    color: \"#fff2f2\",\n    boxShadow: \"2px 4px #fafafa\",\n\n    \"&:hover\": {\n      background: \"#bf0000\",\n      color: \"#fff\",\n    },\n  },\n\n  bookingBoxReportSent: {\n    display: \"flex\",\n    marginRight: \"10px\",\n    marginTop: \"5px\",\n    padding: \"7px\",\n    maxWidth: \"150px\",\n    overflowX: \"hidden\",\n    fontSize: \"12px\",\n    fontWeight: \"500\",\n    cursor: \"pointer\",\n    backgroundColor: \"#009900\",\n    color: \"#eee\",\n    boxShadow: \"2px 4px #fafafa\",\n\n    \"&:hover\": {\n      background: \"#006e00\",\n      color: \"#fafafa\",\n    },\n  },\n\n  BookingBorderPCR: {\n    border: \"4px solid\",\n    borderColor: CalendarColors.PCR_COLOR,\n  },\n\n  BookingBorderGynae: {\n    border: \"4px solid\",\n    borderColor: CalendarColors.GYNAE_COLOR,\n  },\n\n  BookingBorderGP: {\n    border: \"4px solid\",\n    borderColor: CalendarColors.GP_COLOR,\n  },\n\n  BookingBorderSTD: {\n    border: \"4px solid\",\n    borderColor: CalendarColors.STD_COLOR,\n  },\n  BookingBorderBlood: {\n    border: \"4px solid\",\n    borderColor: CalendarColors.BLOOD_COLOR,\n  },\n\n  BookingBorderDerma: {\n    border: \"4px solid\",\n    borderColor: CalendarColors.DERMA_COLOR,\n  },\n\n\n}));\n\nconst DayViewCell = ({ key, date, time }) => {\n  const classes = useStyles();\n\n  const [state, setState] = React.useContext(GlobalState);\n  const [bookings, setBookings] = React.useState(null);\n  const [filteredBookings, setFilteredBookings] = React.useState(null);\n  const [selectedBooking, setSelectedBooking] = React.useState(null);\n\n  const [refresh, setRefresh] = React.useState(true);\n\n  const [isPast, setIsPast] = React.useState(false);\n\n  const [openDialog, setOpenDialog] = React.useState(false);\n  const [openDialogAddNew, setOpenDialogAddNew] = React.useState(false);\n\n  const [openDialogGP, setOpenDialogGP] = React.useState(false);\n  const [openDialogGynae, setOpenDialogGynae] = React.useState(false);\n  const [openDialogSTD, setOpenDialogSTD] = React.useState(false);\n  const [openDialogBlood, setOpenDialogBlood] = React.useState(false);\n  const [openDialogDerma, setOpenDialogDerma] = React.useState(false);\n\n\n  const handleCloseDialogGP = () => {\n    setOpenDialogGP(false);\n    setOpenDialogAddNew(false)\n  };\n\n  const handleCloseDialogGynae = () => {\n    setOpenDialogGynae(false);\n    setOpenDialogAddNew(false)\n  };\n\n  const handleCloseDialogSTD = () => {\n    setOpenDialogSTD(false);\n    setOpenDialogAddNew(false)\n  };\n\n  const handleCloseDialogBlood = () => {\n    setOpenDialogBlood(false);\n    setOpenDialogAddNew(false)\n  };\n\n  const handleCloseDialogDerma = () => {\n    setOpenDialogDerma(false);\n    setOpenDialogAddNew(false)\n  };\n\n\n  useEffect(() => {\n    const todayStr = dateformat(new Date(), \"yyyy-mm-dd\");\n    setIsPast(date < todayStr);\n  }, [date]);\n\n  useEffect(() => {\n    if (bookings) {\n      if (state.dayViewCalFilter && state.dayViewCalFilter.trim().length > 0) {\n        const search = state.dayViewCalFilter.trim().toUpperCase();\n        setFilteredBookings(\n          bookings.filter(\n            (booking) =>\n              booking.fullname?.toLowerCase().indexOf(search.toLowerCase()) >=\n              0 ||\n              booking.forename?.toLowerCase().indexOf(search.toLowerCase()) >=\n              0 ||\n              booking.surname?.toLowerCase().indexOf(search.toLowerCase()) >= 0\n          )\n        );\n      } else {\n        setFilteredBookings([...bookings]);\n      }\n    }\n  }, [state.dayViewCalFilter, bookings]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      if (!date || date.length <= 0 || !time || time.length <= 0) {\n        return;\n      }\n\n      // if (isPast)\n      // {\n      //     setBookings([]);\n      //     return;\n      // }\n\n      setBookings(null);\n\n      var res = state.AdminCalendarCache?.find(\n        (record) =>\n          record.method === \"getBookingsByDateStrandTime\" &&\n          record.query === `${date}${time}`\n      )?.res;\n      if (!res || openDialog || openDialogAddNew) {\n        res = await BookService.getAllBookingsByDateStrandTime(date, time);\n        setState((state) => ({\n          ...state,\n          AdminCalendarCache: [\n            ...state.AdminCalendarCache,\n            {\n              method: \"getBookingsByDateStrandTime\",\n              query: `${date}${time}`,\n              res: res,\n            },\n          ],\n        }));\n      }\n\n      if (res.data.status === \"OK\") {\n        setBookings(res.data.bookings);\n      }\n    };\n\n    if (openDialog || openDialogAddNew) {\n      setState((state) => ({\n        ...state,\n        AdminCalendarCache: state.AdminCalendarCache.filter(\n          (record) =>\n            !(\n              record.method === \"getBookingsByDateStrandTime\" &&\n              record.query === `${date}${time}`\n            )\n        ),\n      }));\n      setState((state) => ({\n        ...state,\n        AdminCalendarCache: state.AdminCalendarCache.filter(\n          (record) =>\n            !(\n              record.method === \"getBookingsCountByDateStrandTime\" &&\n              record.query === `${date}${time}`\n            )\n        ),\n      }));\n      setState((state) => ({\n        ...state,\n        AdminCalendarCache: state.AdminCalendarCache.filter(\n          (record) =>\n            !(\n              record.method === \"getBookingsCountByDateStr\" &&\n              record.query === date\n            )\n        ),\n      }));\n    }\n\n    fetchData();\n  }, [date, time, state.bookingDialogDataChanged]);\n\n  const bookingCliked = (event, booking) => {\n    setSelectedBooking(booking);\n    setOpenDialog(true);\n  };\n\n  const getBookingClass = (status) => {\n    switch (status) {\n      case \"sample_taken\":\n      case \"patient_attended\":\n        return classes.bookingBoxSampleTaken;\n      case \"positive\":\n        return classes.bookingBoxPositive;\n      case \"report_sent\":\n      case \"report_cert_sent\":\n        return classes.bookingBoxReportSent;\n\n      default:\n        return classes.bookingBox;\n    }\n  };\n\n  const addNewBookingClicked = () => {\n    setOpenDialogAddNew(true);\n  };\n\n  const getBookingBorderClass = (clinic) => {\n    switch (clinic) {\n      case \"pcr\":\n        return classes.BookingBorderPCR;\n      case \"gynae\":\n        return classes.BookingBorderGynae;\n      case \"gp\":\n        return classes.BookingBorderGP;\n      case \"std\":\n        return classes.BookingBorderSTD;\n      case \"blood\":\n        return classes.BookingBorderBlood;\n      case \"derma\":\n        return classes.BookingBorderDerma;\n\n\n      default:\n        return null;\n    }\n  };\n\n  const getBookingsBox = (_bookings) => {\n    if (_bookings === null) {\n      return (\n        <div className={classes.LoadingProgress}>\n          <CircularProgress disableShrink />\n        </div>\n      );\n    } else if (_bookings.length >= 0) {\n      return (\n        <React.Fragment>\n          {_bookings.map(\n            (booking) =>\n              state.selectedClinics.findIndex(\n                (e) => e === booking.clinic.toUpperCase()\n              ) >= 0 && (\n                <div\n                  style={booking.tr ? { borderTop: \"5px solid #d00fd6\" } : {}}\n                  className={clsx(\n                    getBookingClass(booking.status),\n                    getBookingBorderClass(booking.clinic)\n                  )}\n                  onClick={(event) => bookingCliked(event, booking)}\n                >\n                  {`${booking.fullname\n                      ? booking.fullname\n                      : `${booking.forename} ${booking.surname}`\n                    }`.substring(0, 15)}\n                </div>\n              )\n          )}\n\n          <div className={classes.bookingBoxNew} onClick={addNewBookingClicked}>\n            {\" \"}\n            + Add New Booking\n          </div>\n        </React.Fragment>\n      );\n    }\n  };\n\n  const handleCloseDialog = () => {\n    setOpenDialog(false);\n  };\n\n  const handleCloseDialogAddNew = () => {\n    setOpenDialogAddNew(false);\n  };\n\n  const handleClinicClicked = (clinic) => {\n    switch (clinic) {\n      case \"gynae\":\n        setOpenDialogGynae(true);\n        break;\n      case \"gp\":\n        setOpenDialogGP(true);\n        break;\n      case \"std\":\n        setOpenDialogSTD(true);\n        break;\n      case \"blood\":\n        setOpenDialogBlood(true);\n        break;\n      case \"derma\":\n        setOpenDialogDerma(true);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <div className={classes.Container}>\n        {getBookingsBox(filteredBookings)}\n      </div>\n\n      <BookingDialog\n        booking={selectedBooking}\n        open={openDialog}\n        onClose={handleCloseDialog}\n      />\n\n      <NewBookingDialog\n        date={date}\n        time={time}\n        open={openDialogAddNew}\n        handleClose={handleCloseDialogAddNew}\n        clinicClicked={handleClinicClicked}\n      />\n\n      <NewGPDialog\n        date={date}\n        time={time}\n        open={openDialogGP}\n        handleClose={handleCloseDialogGP}\n      />\n\n      <NewSTDDialog\n        date={date}\n        time={time}\n        open={openDialogSTD}\n        handleClose={handleCloseDialogSTD}\n      />\n\n      <NewGynaeDialog\n        date={date}\n        time={time}\n        open={openDialogGynae}\n        handleClose={handleCloseDialogGynae}\n      />\n\n      <NewBloodDialog\n        date={date}\n        time={time}\n        open={openDialogBlood}\n        handleClose={handleCloseDialogBlood}\n      />\n\n      <NewDermaDialog\n        date={date}\n        time={time}\n        open={openDialogDerma}\n        handleClose={handleCloseDialogDerma}\n      />\n\n\n    </React.Fragment>\n  );\n};\n\nDayViewCell.propTypes = {\n  key: PropTypes.string.isRequired,\n  date: PropTypes.string.isRequired,\n  time: PropTypes.string.isRequired,\n};\n\nexport default DayViewCell;\n","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport DayViewCell from './DayViewCell';\nimport dateformat from 'dateformat';\n\n\n\n\nconst rows = [\n    '09:00 AM',\n    '09:15 AM', \n    '09:30 AM', \n    '09:45 AM',\n    '10:00 AM',\n    '10:15 AM',\n    '10:30 AM',\n    '10:45 AM',\n    '11:00 AM',\n    '11:15 AM',\n    '11:30 AM',\n    '11:45 AM',\n    '12:00 PM',\n    '12:15 PM',\n    '12:30 PM',\n    '12:45 PM',\n    '01:00 PM',\n    '01:15 PM',\n    '01:30 PM',\n    '01:45 PM',\n    '02:00 PM',\n    '02:15 PM',\n    '02:30 PM',\n    '02:45 PM',\n    '03:00 PM',\n    '03:15 PM',\n    '03:30 PM',\n    '03:45 PM',\n    '04:00 PM',\n    '04:15 PM',\n    '04:30 PM',\n    '04:45 PM',\n    '05:00 PM',\n    '05:15 PM',\n    '05:30 PM',\n    '05:45 PM',\n];\n\nconst useStyles = makeStyles((theme) => ({\n\n    table: {\n        width: \"100%\",\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        overflowY: \"auto\"\n    },\n\n    th: {\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        verticalAlign: \"middle\",\n        fontcolor: \"#555\",\n        fontWeight: \"400\",\n        fontSize: \"15px\",\n        paddingTop: \"5px\",\n        paddingBottom: \"5px\",\n        width: \"12%\", \n    },\n\n    td: {\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        verticalAlign: \"middle\",\n        height : \"50px\",\n        width: \"84%\", \n    },\n\n    titleLabel: {\n        paddingBottom: \"17px\",\n        paddingTop: \"17px\",\n        color: \"#777\",\n        fontSize: \"16px\"\n    },\n\n    titleLabelToday: {\n        paddingBottom: \"17px\",\n        paddingTop: \"17px\",\n        color: \"#fff\",\n        backgroundColor: \"#1a73e8\",\n        fontSize: \"16px\"\n    },\n\n  }));\n\nconst DayView = ({date}) => {\n    const classes = useStyles();\n\n    return (\n        <React.Fragment>\n\n        <div style={{overflowY: \"scroll\" , height: \"60px\"}}>\n            <table className={classes.table}>\n                <thead>\n                    <tr>\n                        <th style={{width: \"7%\"}}>\n                        \n                        </th>\n                        <th style={{width: \"84%\"}}>\n                                <div className={(dateformat(new Date(),'yyyy-mm-dd') === dateformat(date, 'yyyy-mm-dd')) ? classes.titleLabelToday : classes.titleLabel }>\n                                        {dateformat(date,'dddd')}\n                                </div>                                \n                        </th>\n                    </tr>\n                </thead>\n             </table>\n\n        </div>\n\n            <div style={{overflowY: \"scroll\" , height: \"70vh\"}}>\n                <table className={classes.table}>   \n                    <tbody>\n                        {rows.map(row => (\n                            <tr>\n                                <td style={{width: \"7%\"}}>\n                                    {row}\n                                </td>\n                               \n                                <td className={classes.td}>\n                                     <DayViewCell key={`${dateformat(date,'yyyy-mm-dd')}-${row}`} date={dateformat(date,'yyyy-mm-dd')} time={row}/>  \n                                </td>\n                            \n                            </tr>\n                        ))}            \n                    </tbody>\n                </table>\n            </div>                    \n      \n        </React.Fragment>\n\n\n    );\n}\n\nDayView.propTypes = {\n    date: PropTypes.any.isRequired\n  };\n\n\nexport default DayView;","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MonthView from './MonthView';\nimport { Button, Grid, IconButton, InputAdornment, TextField, Tooltip } from '@material-ui/core';\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\n\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport WeekView from './WeekView';\nimport dateformat from 'dateformat';\nimport DayView from './DayView';\nimport GlobalState from '../../GlobalState';\n\nimport CloseIcon from '@material-ui/icons/Close';\nimport { CalendarColors } from './colors';\n\nconst Clinics = [\n    {clinic: \"PCR\", color: CalendarColors.PCR_COLOR},\n    {clinic: \"GYNAE\", color: CalendarColors.GYNAE_COLOR},\n    {clinic: \"GP\", color: CalendarColors.GP_COLOR},\n    {clinic: \"STD\", color: CalendarColors.STD_COLOR},\n    {clinic: \"BLOOD\", color: CalendarColors.BLOOD_COLOR},\n    {clinic: \"DERMA\", color: CalendarColors.DERMA_COLOR},\n\n]\n\nconst monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n  \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n];\n\nconst useStyles = makeStyles((theme) => ({\n\n    title: {\n        textAlign: \"center\",\n        fontSize: \"24px\",\n        fontColor: \"#333\"\n    },\n\n  }));\n\nexport default function CalendarView() {\n    const classes = useStyles();\n\n    const [state, setState] = React.useContext(GlobalState);\n\n    const [month, setMonth] = React.useState(new Date().getMonth() + 1);\n    const [year, setYear] = React.useState(new Date().getFullYear());\n\n    const [day, setDay] = React.useState(new Date());\n\n    const [firstDayofWeek, setFirstDayofWeek] = React.useState(new Date());\n\n    const [weekDates, setWeekDates] = React.useState([]);\n\n    const [mode, setMode] = React.useState('month');\n    const [selectedTab, setSeletedTab] = React.useState('month');\n\n    const [filter,setFilter] = React.useState('');\n\n    const filterChanged = (event) =>{\n        setFilter(event.target.value);\n        setState(state => ({...state, dayViewCalFilter : event.target.value?.trim()?.toUpperCase()}))\n      }\n\n      const removeFilter = () =>\n      {\n        setFilter('');\n        setState(state => ({...state, dayViewCalFilter : ''}));\n      }\n\n\n    useEffect( () => {\n        const today = new Date();\n        const dayofWeek = today.getDay();\n        const firstdayofweek = new Date(today.getTime() - ( dayofWeek * 86400000));\n        setFirstDayofWeek(firstdayofweek);\n        setState(state => ({...state, AdminCalendarCache : []}));\n        setState(state => ({...state, selectedClinics : [\"PCR\", \"GP\", \"GYNAE\", \"STD\", \"BLOOD\",\"DERMA\"]}));\n\n        return () =>\n        {\n            setState(state => ({...state, AdminCalendarCache : []}));\n            removeFilter();\n        }\n       \n    }, []);\n\n\n    useEffect( () => {\n        const dates = [];\n        for (var i = 0; i < 7 ; i++)\n        {\n            dates.push(new Date(firstDayofWeek.getTime() + ( i * 86400000)));\n        }\n        setWeekDates(dates);\n\n    }, [firstDayofWeek]);\n\n    const handlePrevButton = (event) =>\n    {\n       if (mode === 'month')\n       {\n            if (month === 1)\n            {\n                setYear(year - 1);\n            } \n\n            const newMonth = month === 1 ? 12 : month - 1;\n            setMonth(newMonth);\n\n            const newDay = new Date(year, newMonth - 1 , 1, 0 ,0 ,0 ,0);\n            setDay(newDay);\n\n            const dayofWeek = newDay.getDay();\n            setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\n\n       } \n       else if (mode === 'week')\n       {\n           const newFirstDayofWeek = new Date(firstDayofWeek.getTime() - ( 7 * 86400000));\n           setFirstDayofWeek(newFirstDayofWeek);\n\n           setDay(newFirstDayofWeek);\n           setMonth(newFirstDayofWeek.getMonth() + 1);\n           setYear(newFirstDayofWeek.getFullYear());\n\n       }\n       else if (mode === 'day')\n       {\n           const newDay = new Date(day.getTime() - ( 1 * 86400000));\n           setDay(newDay);\n\n           const dayofWeek = newDay.getDay();\n           setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\n\n           setMonth(newDay.getMonth() + 1);\n           setYear(newDay.getFullYear());\n       }\n    }\n\n    const handleNextButton = (event) =>\n    {\n        if (mode === 'month')\n        {\n            if (month === 12)\n            {\n                setYear(year + 1);\n            } \n       \n            const newMonth = month === 12 ? 1 : month + 1;\n            setMonth(newMonth);\n\n            const newDay = new Date(year, newMonth - 1 , 1, 0 ,0 ,0 ,0);\n            setDay(newDay);\n\n            const dayofWeek = newDay.getDay();\n            setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\n        }\n        else if (mode === 'week')\n        {\n            const newFirstDayofWeek = new Date(firstDayofWeek.getTime() + ( 7 * 86400000));\n            setFirstDayofWeek(newFirstDayofWeek);\n\n            setDay(newFirstDayofWeek);\n            setMonth(newFirstDayofWeek.getMonth() + 1);\n            setYear(newFirstDayofWeek.getFullYear());\n\n        }\n        else if (mode === 'day')\n        {\n            const newDay = new Date(day.getTime() + ( 1 * 86400000));\n            setDay(newDay);\n\n            const dayofWeek = newDay.getDay();\n            setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\n \n            setMonth(newDay.getMonth() + 1);\n            setYear(newDay.getFullYear());\n        }\n    }\n\n    const goToday = (event) => {\n        const newDay = new Date();\n        const dayofWeek = newDay.getDay();\n        setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\n        setDay(newDay);\n        setMonth(newDay.getMonth() + 1);\n        setYear(newDay.getFullYear());\n    }\n\n    const dayClicked = (event, date) =>\n    {\n        const newDay = new Date(date);\n        const dayofWeek = newDay.getDay();\n        setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\n        setDay(newDay);\n        setMonth(newDay.getMonth() + 1);\n        setYear(newDay.getFullYear());\n        setSeletedTab('day');\n        setMode('day');\n    }\n\n    const getContentFromMode = (_mode) => {\n        if (_mode === 'month')\n        {\n            return (\n                <MonthView dayClicked={dayClicked} month={month} year={year}/>    \n            );\n        }    \n        else if (_mode === 'week')\n        {\n            return (\n                    <WeekView dayClicked={dayClicked} dates={weekDates}/>\n            );\n            \n        }\n        else if (_mode === 'day')\n        {\n            return (\n                <DayView date={day}/>\n            );\n        }\n    }\n\n    const getCalendarTitleFromMode = (_mode) => {\n        if (_mode === 'month')\n        {\n            return (\n                <span className={classes.title}> {`${monthNames[month - 1]} ${year}`} </span>   \n            );\n        }    \n        else if (_mode === 'week')\n        {\n            const endOfWeek = new Date(firstDayofWeek.getTime() + ( 6 * 86400000));\n            let endofWeekStr = '';\n            if (endOfWeek.getMonth() === firstDayofWeek.getMonth())\n            {\n                endofWeekStr = dateformat(endOfWeek,'d');\n            }else\n            {\n                endofWeekStr = dateformat(endOfWeek,'mmm d');\n            }\n\n            return (\n                <span className={classes.title}> {`${dateformat(firstDayofWeek,'mmm d')} - ${endofWeekStr}, ${year}`} </span>\n            );\n            \n        }\n        else if (_mode === 'day')\n        {\n            return (\n                <span className={classes.title}> {`${dateformat(day,'mmmm d, yyyy')}`} </span>\n            );\n        }\n    }\n\n\n    const handleTabChanged = (event, value) => {\n        if (value && value.length)\n        {\n          setSeletedTab(value);\n          setMode(value);\n        }\n    };\n\n    const getPrevButtonTitle = (_mode) =>\n    {\n        return `Previuos ${mode}`;\n    }\n\n    const getNextButtonTitle = (_mode) =>\n    {\n        return `Next ${mode}`;\n    }\n\n    const clinicClicked = (clinic) =>\n    {\n        if (state.selectedClinics?.findIndex(e => e === clinic) >= 0 )\n        {\n            setState(state => ({...state, selectedClinics :state.selectedClinics.filter(e => e !== clinic)}));\n        }else\n        {\n            setState(state => ({...state, selectedClinics : [...state.selectedClinics, clinic]}));\n        }\n    }\n\n    const getClinicGuide = () =>\n    {\n        return (\n            <div>\n               <Grid container spacing={1}>\n                   {Clinics.map( item => (\n                       <Grid item>\n                           <div \n                                style={state.selectedClinics?.findIndex(e => e === item.clinic) >= 0 ? {border:`1px solid ${item.color}`, backgroundColor:`${item.color}`, color:\"#fff\" ,fontSize:\"0.95rem\", fontWeight:\"500\", padding:\"5px\", minWidth:\"70px\", textAlign:\"center\", cursor:\"pointer\"}   : {border:`1px solid ${item.color}`, color:`${item.color}`, fontSize:\"0.95rem\", fontWeight:\"500\", padding:\"5px\", minWidth:\"70px\", textAlign:\"center\", cursor:\"pointer\"}}\n                                onClick= {() => clinicClicked(item.clinic)}   \n                                > \n                               {item.clinic}\n                           </div>\n                        </Grid>\n                   ))\n                   }\n               </Grid>\n            </div>\n        )\n    }\n\n    return (\n        <React.Fragment>\n\n            {getClinicGuide()}\n\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"space-between\"\n            alignItems=\"center\"\n            style= {{marginBottom: \"10px\", marginTop: \"0px\"}}\n            >  \n\n            <Grid item md={3}>\n                <div  style={{display:\"flex\", alignItems: \"flex-start\", justifyContent: \"flex-start\" , paddingLeft: \"10px\"}}>\n                    <Tooltip title={getPrevButtonTitle(mode)} placement=\"bottom-start\">\n                        <IconButton \n                                color=\"default\" \n                                aria-label=\"prev\"\n                                onClick = {handlePrevButton}\n                                >\n                            <NavigateBeforeIcon style={{fontSize: '2rem'}}/>\n                        </IconButton>\n                    </Tooltip>\n\n                    <Tooltip title={getNextButtonTitle(mode)} placement=\"bottom-end\">\n                        <IconButton \n                                color=\"default\" \n                                aria-label=\"next\"\n                                onClick = {handleNextButton}\n                                >\n                            <NavigateNextIcon style={{fontSize: '2rem'}}/>\n                        </IconButton>\n                    </Tooltip>\n\n                    <Button style={{marginTop: \"11px\", marginLeft: \"10px\"}} onClick={goToday} variant=\"outlined\"> Today </Button>\n                </div>\n\n            </Grid>\n\n            <Grid item md={6}>\n\n                    <Grid\n                        container\n                        direction=\"row\"\n                        justify=\"center\"\n                        alignItems=\"flex-end\"\n                        spacing = {3}\n                        >\n                            <Grid item>\n                                    {getCalendarTitleFromMode(mode)}\n                            </Grid>\n                            {mode === 'day' && (\n                                        <Grid item>\n                                                <TextField\n                                                    variant=\"standard\"\n                                                    style={{marginBottom : \"5px\"}}\n                                                    value={filter}\n                                                    onChange={filterChanged}\n                                                    margin=\"normal\"\n                                                    size=\"small\"\n                                                    id=\"filter\"\n                                                    label=\"Filter\"\n                                                    name=\"filter\"\n                                                    autoComplete=\"off\"\n                                                    InputProps={{\n                                                        endAdornment : \n                                                            <InputAdornment position=\"end\">\n                                                                <Tooltip title=\"Clear\">\n                                                                            <IconButton\n                                                                            aria-label=\"remove filter\"\n                                                                            onClick={() => removeFilter()}\n                                                                            onMouseDown={() => removeFilter()}\n                                                                        >\n                                                                            <CloseIcon/>\n                                                                        </IconButton>\n                                                                </Tooltip>\n                                                            \n                                                            </InputAdornment>\n                                                          \n                                                    }}\n                                                   \n                                                />\n                                        </Grid>\n                            )}\n                           \n                    </Grid>\n                \n            </Grid>\n\n            <Grid item md={3}>\n                <div  style={{display:\"flex\", alignItems: \"flex-end\", justifyContent: \"flex-end\", paddingRight: \"10px\" }}>\n                    <ToggleButtonGroup\n                        value={selectedTab}\n                        exclusive\n                        onChange={handleTabChanged}\n                        aria-label=\"select view mode\"\n                    >\n                        <ToggleButton style={selectedTab === 'month' ? {width: \"80px\", color: \"#3f51b5\", backgroundColor: \"#ebedf7\" } : {width: \"80px\"}} value=\"month\" aria-label=\"month view\">\n                                month\n                        </ToggleButton>\n                        <ToggleButton style={selectedTab === 'week' ? {width: \"80px\", color: \"#3f51b5\", backgroundColor: \"#ebedf7\"} : {width: \"80px\"}}  value=\"week\" aria-label=\"week view\">\n                                week\n                        </ToggleButton>\n                        <ToggleButton style={selectedTab === 'day' ? {width: \"80px\", color: \"#3f51b5\", backgroundColor: \"#ebedf7\"} : {width: \"80px\"}} value=\"day\" aria-label=\"day view\">\n                                day\n                        </ToggleButton>\n                    </ToggleButtonGroup>\n                </div>\n            </Grid>\n\n           </Grid> \n\n             {getContentFromMode(mode)}\n\n        </React.Fragment>\n\n\n    );\n\n}","import React, { useEffect, useRef, useState } from \"react\";\nimport { DataGrid } from \"@material-ui/data-grid\";\nimport BookService from \"./services/BookService\";\nimport {\n  Button,\n  Checkbox,\n  CircularProgress,\n  Dialog,\n  DialogContent,\n  DialogTitle,\n  Divider,\n  FormControl,\n  FormControlLabel,\n  Grid,\n  Icon,\n  InputLabel,\n  LinearProgress,\n  Link,\n  makeStyles,\n  MenuItem,\n  Paper,\n  Select,\n  SvgIcon,\n  Switch,\n  TextField,\n  Tooltip,\n} from \"@material-ui/core\";\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\nimport { IconButton } from \"@material-ui/core\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport GlobalState from \"../GlobalState\";\nimport { getMenuIndex } from \"../MenuList\";\nimport {\n  FormatDateFromString,\n  FormatDateFromStringShortYear,\n} from \"./DateFormatter\";\n\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport BookingDialog from \"./BookingDialog\";\n\nimport NewReleasesIcon from \"@material-ui/icons/NewReleases\";\nimport HistoryIcon from \"@material-ui/icons/History\";\nimport TimelineIcon from \"@material-ui/icons/Timeline\";\nimport DescriptionIcon from \"@material-ui/icons/Description\";\nimport AutorenewIcon from \"@material-ui/icons/Autorenew\";\nimport LiveTvIcon from \"@material-ui/icons/LiveTv\";\nimport PlaylistAddCheckIcon from \"@material-ui/icons/PlaylistAddCheck\";\nimport AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport HourglassEmptyIcon from \"@material-ui/icons/HourglassEmpty\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faFileExcel } from \"@fortawesome/free-solid-svg-icons\";\nimport Draggable from \"react-draggable\";\n\nimport * as dateformat from \"dateformat\";\n\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardTimePicker,\n  KeyboardDatePicker,\n} from \"@material-ui/pickers\";\n\nimport BusinessIcon from \"@material-ui/icons/Business\";\nimport CreditCardIcon from \"@material-ui/icons/CreditCard\";\nimport LocalAtmIcon from \"@material-ui/icons/LocalAtm\";\n\nimport ReactHTMLTableToExcel from \"react-html-table-to-excel\";\nimport PriceCalculator from \"./PriceCalculator\";\nimport { corporates } from \"./Corporates\";\n\nimport SearchOutlinedIcon from '@material-ui/icons/SearchOutlined';\nimport BloodReportDialog from \"../Blood/BloodReportDialog\";\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    marginTop: theme.spacing(0),\n    marginBottom: theme.spacing(1),\n  },\n\n  refreshButton: {\n    marginLeft: theme.spacing(2),\n  },\n\n  checkIcon: {\n    color: \"green\",\n  },\n\n  closeIcon: {\n    color: \"red\",\n  },\n\n  RefLink: {\n    cursor: \"pointer\",\n  },\n\n  BookedLabel: {\n    backgroundColor: \"#606060\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  PatientAttendedLabel: {\n    backgroundColor: \"#0066aa\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  SampleTakenLabel: {\n    backgroundColor: \"#0066cc\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  ReportSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  ReportCertSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  PositiveLabel: {\n    backgroundColor: \"red\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  HideNowRows: {\n    position: \"absolute\",\n    top: \"40%\",\n    left: \"40%\",\n    width: \"600px\",\n    height: \"300px\",\n    backgroundColor: \"#fafafa\",\n    color: \"#111\",\n    zIndex: \"1000\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyItems: \"center\",\n  },\n\n  ExportToExcelButton: {\n    // marginBottom : \"20px\",\n    color: \"#2f942e\",\n    borderColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"#fafffa\",\n      borderColor: \"#2f942e\",\n    },\n    textDecoration: \"none !important\",\n  },\n\n  ExportToExcelButtonInline: {\n    // marginBottom : \"20px\",\n    color: \"#2f942e\",\n    borderColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"#fafffa\",\n      borderColor: \"#2f942e\",\n    },\n    textDecoration: \"none !important\",\n    cursor: \"pointer\",\n    padding: \"10px\",\n  },\n\n  table: {\n    width: \"100%\",\n    border: \"1px solid #ddd\",\n    borderCollapse: \"collapse\",\n  },\n\n  th: {\n    border: \"1px solid #ddd\",\n    borderCollapse: \"collapse\",\n    verticalAlign: \"middle\",\n    fontcolor: \"#555\",\n    fontWeight: \"400\",\n    fontSize: \"15px\",\n    paddingTop: \"5px\",\n    paddingBottom: \"5px\",\n    width: \"14%\",\n    paddingLeft: \"5px\",\n  },\n\n  td: {\n    border: \"1px solid #ddd\",\n    borderCollapse: \"collapse\",\n    verticalAlign: \"middle\",\n    paddingLeft: \"5px\",\n  },\n\n  topSelect: {\n    margin: theme.spacing(1),\n    minWidth: 80,\n  },\n\n  notifyIcon: {\n    width: \"16px\",\n    height: \"16px\",\n    borderRadius: \"50%\",\n    backgroundColor: \"rgb(220, 0, 78)\",\n    marginLeft: \"10px\",\n  },\n\n  clinicTitle: {\n    fontWeight: \"600\",\n    textAlign: \"center\",\n    color: theme.palette.primary.main,\n    padding: \"2px 10px\",\n  },\n\n  PCRLabel: {\n    color: \"#4faef7\",\n    fontWeight: \"600\",\n    fontSize: \"0.95rem\",\n  },\n\n  GynaeLabel: {\n    color: \"#e83caf\",\n    fontWeight: \"600\",\n    fontSize: \"0.95rem\",\n  },\n\n  GPLabel: {\n    color: \"#ff4f14\",\n    fontWeight: \"600\",\n    fontSize: \"0.95rem\",\n  },\n\n  STDLabel: {\n    color: \"#d6733a\",\n    fontWeight: \"600\",\n    fontSize: \"0.95rem\",\n  },\n\n  BloodLabel: {\n    color: \"#dc2626\",\n    fontWeight: \"600\",\n    fontSize: \"0.95rem\",\n  },\n\n  DefaultLabel: {\n    color: \"#dc2626\",\n    fontWeight: \"600\",\n    fontSize: \"0.95rem\",\n  },\n}));\n\nconst getTableTitle = (str) => {\n  if (str === \"today\") {\n    return `Today's Bookings`;\n  } else if (str === \"old\") {\n    return `Old Bookings`;\n  } else if (str === \"future\") {\n    return `Future Bookings`;\n  } else if (str === \"recent\") {\n    return `Recent Bookings`;\n  } else if (str === \"live\") {\n    return `Live Bookings`;\n  } else if (str === \"completed\") {\n    return `Completed Bookings`;\n  } else if (str === \"positive\") {\n    return `Positive Results`;\n  } else if (str === \"deleted\") {\n    return `Deleted Records`;\n  } else if (str === \"late\") {\n    return `40 Hours Late`;\n  } else {\n    return `All Bookings`;\n  }\n};\n\nconst getTableIcon = (str) => {\n  if (str === \"today\") {\n    return <NewReleasesIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else if (str === \"old\") {\n    return <HistoryIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else if (str === \"future\") {\n    return <TimelineIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else if (str === \"recent\") {\n    return <AutorenewIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else if (str === \"live\") {\n    return <LiveTvIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else if (str === \"completed\") {\n    return <PlaylistAddCheckIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else if (str === \"positive\") {\n    return <AddCircleOutlineIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else if (str === \"deleted\") {\n    return <DeleteIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else if (str === \"late\") {\n    return <HourglassEmptyIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else {\n    return <DescriptionIcon style={{ fontSize: \"2.2rem\" }} />;\n  }\n};\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable\n      handle=\"#draggable-dialog-title\"\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\n    >\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nexport default function SearchBookingTable(props) {\n  const classes = useStyles();\n\n  const getClassforClinic = (clinic) => {\n    switch (clinic) {\n      case \"pcr\":\n        return classes.PCRLabel;\n      case \"gp\":\n        return classes.GPLabel;\n      case \"gynae\":\n        return classes.GynaeLabel;\n      case \"std\":\n        return classes.STDLabel;\n      case \"blood\":\n        return classes.BloodLabel;\n      default:\n        return classes.DefaultLabel;\n    }\n  };\n\n  const [topCount, setTopCount] = React.useState(25);\n  const topCountChanged = (event) => {\n    setTopCount(event.target.value);\n    loadData(event.target.value);\n  };\n\n  const [openDialogExcel, setOpenDialogExcel] = useState(false);\n  const handleCloseDialogExcel = () => {\n    setCorporate(corporates[0]);\n    setJustCorporate(false);\n    setOpenDialogExcel(false);\n  };\n\n  const [fromDate, setFromDate] = React.useState(\n    new Date(new Date().getTime() - 7 * 24 * 60 * 60 * 1000)\n  );\n  const handleFromDateChange = (date) => {\n    setFromDate(date);\n    setFromDateStr(dateformat(date, \"yyyy-mm-dd\"));\n  };\n\n  const [untilDate, setUntilDate] = React.useState(\n    new Date(new Date().getTime() - 1 * 24 * 60 * 60 * 1000)\n  );\n  const handleUntilDateChange = (date) => {\n    setUntilDate(date);\n    seUntilDateStr(dateformat(date, \"yyyy-mm-dd\"));\n  };\n\n  const [fromDateStr, setFromDateStr] = useState(\n    dateformat(\n      new Date(new Date().getTime() - 7 * 24 * 60 * 60 * 1000),\n      \"yyyy-mm-dd\"\n    )\n  );\n  const [untilDateStr, seUntilDateStr] = useState(\n    dateformat(\n      new Date(new Date().getTime() - 1 * 24 * 60 * 60 * 1000),\n      \"yyyy-mm-dd\"\n    )\n  );\n\n  const [justCorporate, setJustCorporate] = useState(false);\n\n  const [chkDate, setChkDate] = useState(true);\n  const [chkForename, setChkForename] = useState(true);\n  const [chkSurname, setChkSurname] = useState(true);\n  const [chkDOB, setChkDOB] = useState(true);\n  const [chkEmail, setChkEmail] = useState(true);\n  const [chkTel, setChkTel] = useState(true);\n  const [chkCertificate, setChkCertidicate] = useState(true);\n  const [chkAntiBodyTest, setChkAntiBodyTest] = useState(true);\n  const [chkextRef, setChkExtRef] = useState(true);\n  const [chkPrice, setChkPrice] = useState(true);\n\n  const justCorporateChanged = (event) => {\n    setJustCorporate(event.target.checked);\n  };\n\n  const chkDateChanged = (event) => {\n    setChkDate(event.target.checked);\n  };\n\n  const chkForenameChanged = (event) => {\n    setChkForename(event.target.checked);\n  };\n\n  const chkSurnameChanged = (event) => {\n    setChkSurname(event.target.checked);\n  };\n\n  const chkDOBChanged = (event) => {\n    setChkDOB(event.target.checked);\n  };\n\n  const chkEmailChanged = (event) => {\n    setChkEmail(event.target.checked);\n  };\n\n  const chkTelChanged = (event) => {\n    setChkTel(event.target.checked);\n  };\n\n  const chkCertificateChanged = (event) => {\n    setChkCertidicate(event.target.checked);\n  };\n\n  const chkAntiBodyTestChanged = (event) => {\n    setChkAntiBodyTest(event.target.checked);\n  };\n\n  const chkextRefChanged = (event) => {\n    setChkExtRef(event.target.checked);\n  };\n\n  const chkPriceChanged = (event) => {\n    setChkPrice(event.target.checked);\n  };\n\n  var columns = [];\n\n  columns = [\n    // { field: 'id', headerName: '#', width: 70 },\n\n    {\n      field: \"_id\",\n      headerName: \" \",\n      width: 70,\n      renderCell: (params) => {\n        return (\n          <React.Fragment>\n            <Button\n              color=\"primary\"\n              onClick={(event) => openDetailsDialog(event, params.value, params.getValue(\"clinic\"))}\n            >\n              <SearchIcon />\n            </Button>\n          </React.Fragment>\n        );\n      },\n    },\n\n    {\n      field: \"clinic\",\n      headerName: \"Type\",\n      align: \"center\",\n      width: 130,\n      renderCell: (params) => {\n        return (\n          <span className={getClassforClinic(params.value)}>\n            {params.value ? params.value.toUpperCase() : \"N/A\"}\n          </span>\n        );\n      },\n    },\n\n    {\n      field: \"fullname\", headerName: \"Fullname\", width: 200, valueGetter: (params) => {\n        if (!params.value || params.value.length === 0) {\n          return `${params.getValue('forename')} ${params.getValue('surname')}`\n\n        } else {\n          return params.value\n        }\n\n      }\n    },\n\n\n    {\n      field: \"bookingDate\",\n      headerName: \"B Date\",\n      width: 110,\n      valueFormatter: (params) => {\n        return FormatDateFromString(params.value);\n      },\n    },\n    {\n      field: \"bookingTimeNormalized\",\n      headerName: \"B Time\",\n      width: 105,\n      valueGetter: (params) => {\n        return params.getValue(\"bookingTime\");\n      },\n    },\n    {\n      field: \"status\",\n      headerName: \"Status\",\n      width: 100,\n      renderCell: (params) => {\n        if (params.value === \"booked\") {\n          return <span className={classes.BookedLabel}> BM </span>;\n        } else if (params.value === \"patient_attended\") {\n          return <span className={classes.PatientAttendedLabel}> PA </span>;\n        } else if (params.value === \"sample_taken\") {\n          return <span className={classes.SampleTakenLabel}> ST </span>;\n        } else if (params.value === \"report_sent\") {\n          return <span className={classes.ReportSentLabel}> RS </span>;\n        } else if (params.value === \"report_cert_sent\") {\n          return <span className={classes.ReportCertSentLabel}> RCS </span>;\n        } else if (params.value === \"positive\") {\n          return <span className={classes.PositiveLabel}> POS </span>;\n        } else {\n          return \"\";\n        }\n      },\n    },\n    {\n      field: \"bookingRef\",\n      headerName: \"Ref No.\",\n      width: 120,\n      renderCell: (params) => {\n        return (\n          <Tooltip title=\"Go Find By Ref\" placement=\"right\">\n            <Link\n              className={classes.RefLink}\n            //  onClick={\n            //   () => {\n            //     console.log(params.value);\n\n            //     setState(state => ({...state, currentMenuIndex: getMenuIndex(`pcr` , `findByRef`)}));\n            //     setState(state => ({...state, ref : params.value}));\n            //     setState(state => ({...state, refError : false}));\n            //     setState(state => ({...state, foundRecords : []}));\n            //     setState(state => ({...state, findRecords : !state.findRecords}));\n            //   }\n            // }\n            >\n              {params.value}\n            </Link>\n          </Tooltip>\n        );\n      },\n    },\n    { field: \"email\", headerName: \"Email\", width: 200 },\n    { field: \"phone\", headerName: \"Tel\", width: 150 },\n    { field: \"notes\", headerName: \"Notes\", width: 500 },\n  ];\n\n\n  const [state, setState] = React.useContext(GlobalState);\n\n  const [data, setData] = React.useState({\n    bookings: [],\n    cachedBookings: [],\n    isFetching: false,\n  });\n\n  const [selectedRow, setSelectedRow] = React.useState(null);\n\n  const [selectedBooking, setSelectedBooking] = React.useState(null);\n  const [seeDetailsDialogOpen, setSeeDetailsDialogOpen] = React.useState(false);\n  const [seeDetailsDialogOpenBloodReport, setSeeDetailsDialogOpenBloodReport] = React.useState(false);\n\n\n  const [corporate, setCorporate] = useState(corporates[0]);\n  const corporateChanged = (event) => {\n    setCorporate(event.target.value);\n  };\n\n  const [filter, setFilter] = React.useState(\"\");\n\n  const lastPromise = useRef();\n\n  const formatTimeStamp = (timeStamp) => {\n    const todayStr = dateformat(new Date(), \"yyyy-mm-dd\");\n    const timeStampStr = dateformat(timeStamp, \"yyyy-mm-dd\");\n    if (todayStr === timeStampStr) {\n      return dateformat(timeStamp, \"'Today', h:MM:ss TT\");\n    } else {\n      return dateformat(timeStamp, \"mmm dS, h:MM:ss TT\");\n    }\n  };\n\n  const loadData = () => {\n    var api = BookService.searchAllBookings;\n\n    setData({ bookings: [], cachedBookings: [], isFetching: true });\n\n    // console.log(props)\n\n    const currentPromise = api(filter)\n      .then((res) => {\n        // console.log(res)\n        for (var i = 0; i < res.data.length; i++) {\n          res.data[i] = { ...res.data[i], id: i + 1 };\n        }\n        setData({\n          bookings: [...res.data],\n          cachedBookings: [...res.data],\n          isFetching: false,\n        });\n        // return res.data;\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n\n    // lastPromise.current = currentPromise;\n\n    // currentPromise.then(\n    //   result => {\n    //     if (currentPromise === lastPromise.current) {\n    //       setData({bookings: [...result], cachedBookings: [...result], isFetching: false});\n    //       setPage(1);\n    //     }\n    //   },\n    //   e => {\n    //     if (currentPromise === lastPromise.current) {\n    //         console.error(e);\n    //         setData({bookings: data.bookings, cachedBookings: data.cachedBookings, isFetching: false});\n    //     }\n    //   });\n\n  };\n\n  const handleCloseSeeDetaisDialog = () => {\n    setSelectedBooking(null);\n    setSeeDetailsDialogOpen(false);\n    setSeeDetailsDialogOpenBloodReport(false);\n  };\n\n  const openDetailsDialog = (event, id, clinic) => {\n    const booking = data.bookings.find((element) => element._id === id);\n    setSelectedBooking(booking);\n    if (clinic === \"Blood Result\") {\n      setSeeDetailsDialogOpenBloodReport(true);\n\n    }\n    else {\n      setSeeDetailsDialogOpen(true);\n\n    }\n\n  };\n\n  const refreshClicked = (event) => {\n    setFilter(\"\");\n    loadData(topCount);\n  };\n\n  const filterChanged = (event) => {\n    setFilter(event.target.value);\n    setFilterError(false)\n  };\n\n  const handleSelectionChanged = (newSelection) => {\n    if (newSelection.length > 0) {\n      setSelectedRow(newSelection.rows[0]);\n    }\n  };\n\n  const [page, setPage] = React.useState(1);\n\n  const handleExcelButtonClicked = (event) => {\n    setOpenDialogExcel(true);\n  };\n\n  const isTopSelectHidden = (date) => {\n    return (\n      date === \"live\" ||\n      date === \"positive\" ||\n      date === \"late\" ||\n      date === \"today\"\n    );\n  };\n\n  const [filterError, setFilterError] = React.useState(false)\n  const doSearch = () => {\n    if (!filter || filter.trim().length < 3) {\n      setFilterError(true)\n      return\n    }\n\n    loadData()\n  }\n\n  return (\n    <React.Fragment>\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"space-between\"\n        alignItems=\"flex-end\"\n      >\n        <Grid item md={4}>\n          <div style={{ textAlign: \"left\", paddingLeft: \"10px\" }}>\n            <Grid\n              container\n              direction=\"row\"\n              justify=\"flex-start\"\n              alignItems=\"center\"\n              spacing={4}\n            >\n              <Grid item>\n                <TextField\n                  error={filterError}\n                  variant=\"standard\"\n                  value={filter}\n                  onChange={filterChanged}\n                  id=\"filter\"\n                  label=\"Patient's Name\"\n                  helperText={`You can search the patients by name ${filterError ? \"- Please Enter at least 3 characters\" : \"\"}`}\n                  name=\"filter\"\n                  autoComplete=\"off\"\n                  style={{ width: \"250px\" }}\n                  onKeyPress={(event) => {\n                    if (event.key === \"Enter\") {\n                      doSearch();\n                    }\n                  }}\n                />\n              </Grid>\n\n              <Grid item>\n                <Button variant=\"contained\" color=\"primary\" onClick={doSearch}>\n                  Search\n                  </Button>\n              </Grid>\n\n              <Grid item>\n                {data.isFetching && (\n                  <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\n                    <CircularProgress color=\"primary\" />\n                  </div>\n                )}\n              </Grid>\n\n            </Grid>\n          </div>\n        </Grid>\n\n        {data.isFetching && <div className={classes.HideNowRows}></div>}\n\n      </Grid>\n\n\n      {data.bookings && data.bookings.length > 0 && (\n        <div style={{ height: 700, width: \"100%\", marginTop: \"20px\" }}>\n          <DataGrid\n            rows={data.bookings}\n            columns={columns}\n            autoPageSize\n            page={page}\n            onPageChange={(params) => {\n              setPage(params.page);\n            }}\n            onSelectionChange={handleSelectionChanged}\n          />\n        </div>\n      )}\n\n      <BookingDialog\n        booking={selectedBooking}\n        open={seeDetailsDialogOpen}\n        onClose={handleCloseSeeDetaisDialog}\n      />\n\n      {data.bookings && data.bookings.length > 0 && (\n        <Dialog\n          maxWidth=\"lg\"\n          open={openDialogExcel}\n          onClose={handleCloseDialogExcel}\n          PaperComponent={PaperComponent}\n          aria-labelledby=\"form-dialog-title\"\n        >\n          <DialogTitle id=\"draggable-dialog-title\">\n            <Grid\n              container\n              spacing={2}\n              direction=\"row\"\n              justify=\"center\"\n              alignItems=\"center\"\n            >\n              <Grid item>\n                <FontAwesomeIcon\n                  style={{ color: \"#2f942e\", fontSize: \"2rem\" }}\n                  icon={faFileExcel}\n                />\n              </Grid>\n\n              <Grid item>\n                <div\n                  style={{\n                    color: \"#2f942e\",\n                    paddingBottom: \"5px\",\n                    fontWeight: \"800\",\n                  }}\n                >\n                  {\" \"}\n                  Export to EXCEL{\" \"}\n                </div>\n              </Grid>\n            </Grid>\n\n            <Divider />\n          </DialogTitle>\n          <DialogContent>\n            <div\n              style={{\n                minHeight: \"600px\",\n                maxHeight: \"600px\",\n                minWidth: \"1200px\",\n                maxWidth: \"1200px\",\n              }}\n            >\n              <div>\n                <Grid row container justify=\"center\" spacing={3}>\n                  <Grid item>\n                    <FormControlLabel\n                      control={\n                        <Switch\n                          checked={justCorporate}\n                          onChange={justCorporateChanged}\n                          name=\"justCorporate\"\n                        />\n                      }\n                      label=\"Just Corporate Records\"\n                    />\n                  </Grid>\n\n                  {justCorporate && (\n                    <Grid item>\n                      <FormControl\n                        style={{ marginTop: \"0px\" }}\n                        className={classes.formControl}\n                      >\n                        <Select\n                          labelId=\"select-corporate\"\n                          id=\"select-corporate-id\"\n                          value={corporate}\n                          onChange={corporateChanged}\n                        >\n                          {corporates.map((element) => (\n                            <MenuItem value={element}>{`${element}`}</MenuItem>\n                          ))}\n                        </Select>\n                      </FormControl>\n                    </Grid>\n                  )}\n                </Grid>\n\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                  <Grid row container justify=\"center\" spacing={3}>\n                    <Grid item>\n                      <KeyboardDatePicker\n                        disableToolbar\n                        variant=\"inline\"\n                        format=\"dd/MM/yyyy\"\n                        margin=\"normal\"\n                        id=\"date-picker-from\"\n                        label=\"From\"\n                        value={fromDate}\n                        onChange={handleFromDateChange}\n                        KeyboardButtonProps={{\n                          \"aria-label\": \"change date\",\n                        }}\n                      />\n                    </Grid>\n\n                    <Grid item>\n                      <KeyboardDatePicker\n                        disableToolbar\n                        variant=\"inline\"\n                        format=\"dd/MM/yyyy\"\n                        margin=\"normal\"\n                        id=\"date-picker-until\"\n                        label=\"Until\"\n                        value={untilDate}\n                        onChange={handleUntilDateChange}\n                        KeyboardButtonProps={{\n                          \"aria-label\": \"change date\",\n                        }}\n                      />\n                    </Grid>\n\n                    <Grid item>\n                      <div style={{ paddingTop: \"30px\", marginLeft: \"20px\" }}>\n                        <ReactHTMLTableToExcel\n                          id=\"test-table-xls-button\"\n                          className={classes.ExportToExcelButtonInline}\n                          table=\"table-to-xls\"\n                          filename={`PCR.Report.${fromDateStr}.${untilDateStr}`}\n                          sheet=\"PCR-Report\"\n                          buttonText=\"Download as XLS\"\n                        />\n                      </div>\n                    </Grid>\n                  </Grid>\n                </MuiPickersUtilsProvider>\n              </div>\n\n              <div>\n                <Grid container spacing={3}>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkDate}\n                          onChange={chkDateChanged}\n                          name=\"chkDate\"\n                        />\n                      }\n                      label=\"Date\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkForename}\n                          onChange={chkForenameChanged}\n                          name=\"chkForename\"\n                        />\n                      }\n                      label=\"Forename\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkSurname}\n                          onChange={chkSurnameChanged}\n                          name=\"chkSurname\"\n                        />\n                      }\n                      label=\"Surname\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkDOB}\n                          onChange={chkDOBChanged}\n                          name=\"chkDOB\"\n                        />\n                      }\n                      label=\"D.O.B\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkEmail}\n                          onChange={chkEmailChanged}\n                          name=\"chkEmail\"\n                        />\n                      }\n                      label=\"Email\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkTel}\n                          onChange={chkTelChanged}\n                          name=\"chkTel\"\n                        />\n                      }\n                      label=\"Tel\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkCertificate}\n                          onChange={chkCertificateChanged}\n                          name=\"chkCertificate\"\n                        />\n                      }\n                      label=\"Certificate\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkAntiBodyTest}\n                          onChange={chkAntiBodyTestChanged}\n                          name=\"chkAntiBodyTest\"\n                        />\n                      }\n                      label=\"AntiBodyTest\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkextRef}\n                          onChange={chkextRefChanged}\n                          name=\"chkextRef\"\n                        />\n                      }\n                      label=\"Lab No.\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkPrice}\n                          onChange={chkPriceChanged}\n                          name=\"chkPrice\"\n                        />\n                      }\n                      label=\"Price\"\n                    />\n                  </Grid>\n                </Grid>\n              </div>\n\n              <div style={{ width: \"100%\", paddingTop: \"20px\" }}>\n                <table className={classes.table} id=\"table-to-xls\">\n                  <tr>\n                    {chkDate && <th className={classes.th}>Date</th>}\n                    {chkForename && <th className={classes.th}>Forename</th>}\n                    {chkSurname && <th className={classes.th}>Surename</th>}\n                    {chkDOB && <th className={classes.th}>D.O.B</th>}\n                    {chkEmail && <th className={classes.th}>Email</th>}\n                    {chkTel && <th className={classes.th}>Tel</th>}\n                    {chkCertificate && (\n                      <th className={classes.th}>Certificate</th>\n                    )}\n                    {chkAntiBodyTest && (\n                      <th className={classes.th}>AntiBodyTest</th>\n                    )}\n                    {chkextRef && <th className={classes.th}>Lab No.</th>}\n                    {chkPrice && <th className={classes.th}>Price (£) </th>}\n                  </tr>\n\n                  {data.bookings\n                    .filter((booking) => {\n                      if (!justCorporate) {\n                        return (\n                          booking.bookingDate >= fromDateStr &&\n                          booking.bookingDate <= untilDateStr\n                        );\n                      } else {\n                        return (\n                          booking.bookingDate >= fromDateStr &&\n                          booking.bookingDate <= untilDateStr &&\n                          booking.paid &&\n                          booking.paidBy === \"corporate\" &&\n                          booking.corporate === corporate\n                        );\n                      }\n                    })\n\n                    .map((booking) => (\n                      <tr>\n                        {chkDate && (\n                          <td className={classes.td}>\n                            {FormatDateFromString(booking.bookingDate)}\n                          </td>\n                        )}\n                        {chkForename && (\n                          <td className={classes.td}>\n                            {booking.forenameCapital}\n                          </td>\n                        )}\n                        {chkSurname && (\n                          <td className={classes.td}>\n                            {booking.surnameCapital}\n                          </td>\n                        )}\n                        {chkDOB && (\n                          <th className={classes.th}>\n                            {/* {FormatDateFromString(booking.birthDate)} */}\n                          </th>\n                        )}\n                        {chkEmail && (\n                          <td className={classes.td}>{booking.email}</td>\n                        )}\n                        {chkTel && (\n                          <td className={classes.td}>{booking.phone}</td>\n                        )}\n                        {chkCertificate && (\n                          <td className={classes.td}>\n                            {booking.certificate ? \"YES\" : \"NO\"}\n                          </td>\n                        )}\n                        {chkAntiBodyTest && (\n                          <td className={classes.td}>\n                            {booking.antiBodyTest ? \"YES\" : \"NO\"}\n                          </td>\n                        )}\n                        {chkextRef && (\n                          <td className={classes.td}>{booking.extRef}</td>\n                        )}\n                        {chkPrice && (\n                          <td className={classes.td}>\n                            {PriceCalculator.calculatePrice(booking)}\n                          </td>\n                        )}\n                      </tr>\n                    ))}\n                </table>\n              </div>\n            </div>\n          </DialogContent>\n        </Dialog>\n\n\n\n\n      )}\n\n      <BloodReportDialog\n        booking={selectedBooking}\n        open={seeDetailsDialogOpenBloodReport}\n        onClose={handleCloseSeeDetaisDialog}\n      />\n    </React.Fragment>\n  );\n}\n","import DashboardIcon from \"@material-ui/icons/Dashboard\";\nimport NewReleasesIcon from \"@material-ui/icons/NewReleases\";\nimport HistoryIcon from \"@material-ui/icons/History\";\nimport TimelineIcon from \"@material-ui/icons/Timeline\";\nimport DescriptionIcon from \"@material-ui/icons/Description\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport AutorenewIcon from \"@material-ui/icons/Autorenew\";\nimport LiveTvIcon from \"@material-ui/icons/LiveTv\";\nimport PlaylistAddCheckIcon from \"@material-ui/icons/PlaylistAddCheck\";\nimport WarningIcon from \"@material-ui/icons/Warning\";\nimport AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport HourglassEmptyIcon from \"@material-ui/icons/HourglassEmpty\";\nimport DateRangeIcon from \"@material-ui/icons/DateRange\";\nimport EventNoteIcon from \"@material-ui/icons/EventNote\";\nimport AirplanemodeActiveIcon from \"@material-ui/icons/AirplanemodeActive\";\nimport ArchiveIcon from '@material-ui/icons/Archive';\n\nimport DoneOutlineIcon from '@material-ui/icons/DoneOutline';\nimport SendRoundedIcon from '@material-ui/icons/SendRounded';\nimport SearchOutlinedIcon from '@material-ui/icons/SearchOutlined';\n\n/// PCR ------------------\nimport FindByRef from \"./PCR/FindByRef\";\nimport BookingTable from \"./PCR/BookingTable\";\nimport DashboardPreview from \"./PCR/DashboardPreview\";\nimport UnmatchedRecords from \"./PCR/UnmatchedRecords\";\n// import CalendarView from \"./PCR/calendar/CalendarView\";\nimport PCRCalendarView from \"./PCR/calendar-admin/CalendarView\";\n//-----------------------\n\n/// Gynae -------------------\nimport GynaeBookingTable from \"./Gynae/BookingTable\";\nimport GynaeDashboardPreview from \"./Gynae/DashboardPreview\";\nimport GynaeFindByRef from \"./Gynae/FindByRef\";\nimport GynaeCalendarView from \"./Gynae/calendar-admin/CalendarView\";\n//----------------------------\n\n/// GP -------------------\nimport GPBookingTable from \"./GP/BookingTable\";\nimport GPDashboardPreview from \"./GP/DashboardPreview\";\nimport GPFindByRef from \"./GP/FindByRef\";\nimport GPCalendarView from \"./GP/calendar-admin/CalendarView\";\n//----------------------------\n\n/// STD -------------------\nimport STDBookingTable from \"./STD/BookingTable\";\nimport STDDashboardPreview from \"./STD/DashboardPreview\";\nimport STDFindByRef from \"./STD/FindByRef\";\nimport STDCalendarView from \"./STD/calendar-admin/CalendarView\";\n//----------------------------\n\n/// Blood -------------------\nimport BloodBookingTable from \"./Blood/BookingTable\";\nimport BloodDashboardPreview from \"./Blood/DashboardPreview\";\nimport BloodFindByRef from \"./Blood/FindByRef\";\nimport BloodCalendarView from \"./Blood/calendar-admin/CalendarView\";\nimport BloodUnmatchedRecords from \"./Blood/UnmatchedRecords\";\nimport BloodMatchedRecords from \"./Blood/MatchedRecords\";\nimport BloodArchivedRecords from \"./Blood/ArchivedRecords\";\nimport SentBloodRecords from \"./Blood/SentRecords\";\n\n//----------------------------\n\n/// Derma -------------------\nimport DermaBookingTable from \"./Derma/BookingTable\";\nimport DermaDashboardPreview from \"./Derma/DashboardPreview\";\nimport DermaFindByRef from \"./Derma/FindByRef\";\nimport DermaCalendarView from \"./Derma/calendar-admin/CalendarView\";\n//----------------------------\n\n\n// Admin ----------------\nimport AdminDashBoardPreview from \"./DashboardPreview\";\nimport AdminFindByRef from \"./Admin/FindByRef\";\nimport AdminBookingTable from \"./Admin/BookingTable\";\nimport AdminCalendarView from \"./Admin/calendar-admin/CalendarView\";\nimport SearchBookingTable from \"./Admin/SearchBookingTable\";\n\n//---------------\n\nexport const MenuList_Admin = [\n  { index: 0, id: `dashboard`, title: `Dashboard`, icon: <DashboardIcon /> },\n  {\n    index: 1,\n    id: `recentBookings`,\n    title: `Recent Bookings`,\n    icon: <AutorenewIcon />,\n  },\n  {\n    index: 2,\n    id: `todayBookings`,\n    title: `Today's Bookings`,\n    icon: <NewReleasesIcon />,\n  },\n  {\n    index: 3,\n    id: `oldBookings`,\n    title: `Old Bookings`,\n    icon: <HistoryIcon />,\n  },\n  {\n    index: 4,\n    id: `futureBookings`,\n    title: `Future Bookings`,\n    icon: <TimelineIcon />,\n  },\n  {\n    index: 5,\n    id: `allBookings`,\n    title: `All Bookings`,\n    icon: <DescriptionIcon />,\n  },\n  {\n    index: 6,\n    id: `deletedBookings`,\n    title: `Deleted Records`,\n    icon: <DeleteIcon />,\n  },\n\n  {\n    index: 7,\n    id: `calendarView`,\n    title: `Calendar View`,\n    icon: <DateRangeIcon />,\n  },\n\n  { index: 8, id: `findByRef`, title: `Find By Ref No`, icon: <SearchIcon /> },\n  { index: 9, id: `searchBooking`, title: `Search By Name`, icon: <SearchOutlinedIcon /> },\n\n];\n\nexport const MenuList_Gynae = [\n  { index: 0, id: `dashboard`, title: `Dashboard`, icon: <DashboardIcon /> },\n  {\n    index: 1,\n    id: `recentBookings`,\n    title: `Recent Bookings`,\n    icon: <AutorenewIcon />,\n  },\n  {\n    index: 2,\n    id: `todayBookings`,\n    title: `Today's Bookings`,\n    icon: <NewReleasesIcon />,\n  },\n  {\n    index: 3,\n    id: `oldBookings`,\n    title: `Old Bookings`,\n    icon: <HistoryIcon />,\n  },\n  {\n    index: 4,\n    id: `futureBookings`,\n    title: `Future Bookings`,\n    icon: <TimelineIcon />,\n  },\n  {\n    index: 5,\n    id: `allBookings`,\n    title: `All Bookings`,\n    icon: <DescriptionIcon />,\n  },\n  {\n    index: 6,\n    id: `deletedBookings`,\n    title: `Deleted Records`,\n    icon: <DeleteIcon />,\n  },\n  {\n    index: 7,\n    id: `calendarView`,\n    title: `Calendar View`,\n    icon: <DateRangeIcon />,\n  },\n  { index: 8, id: `findByRef`, title: `Find By Ref No`, icon: <SearchIcon /> },\n  { index: 9, id: `searchBooking`, title: `Search By Name`, icon: <SearchOutlinedIcon /> },\n\n];\n\nexport const MenuList_GP = [\n  { index: 0, id: `dashboard`, title: `Dashboard`, icon: <DashboardIcon /> },\n  {\n    index: 1,\n    id: `recentBookings`,\n    title: `Recent Bookings`,\n    icon: <AutorenewIcon />,\n  },\n  {\n    index: 2,\n    id: `todayBookings`,\n    title: `Today's Bookings`,\n    icon: <NewReleasesIcon />,\n  },\n  {\n    index: 3,\n    id: `oldBookings`,\n    title: `Old Bookings`,\n    icon: <HistoryIcon />,\n  },\n  {\n    index: 4,\n    id: `futureBookings`,\n    title: `Future Bookings`,\n    icon: <TimelineIcon />,\n  },\n  {\n    index: 5,\n    id: `allBookings`,\n    title: `All Bookings`,\n    icon: <DescriptionIcon />,\n  },\n  {\n    index: 6,\n    id: `deletedBookings`,\n    title: `Deleted Records`,\n    icon: <DeleteIcon />,\n  },\n  {\n    index: 7,\n    id: `calendarView`,\n    title: `Calendar View`,\n    icon: <DateRangeIcon />,\n  },\n  { index: 8, id: `findByRef`, title: `Find By Ref No`, icon: <SearchIcon /> },\n  { index: 9, id: `searchBooking`, title: `Search By Name`, icon: <SearchOutlinedIcon /> },\n\n];\n\nexport const MenuList_STD = [\n  { index: 0, id: `dashboard`, title: `Dashboard`, icon: <DashboardIcon /> },\n  {\n    index: 1,\n    id: `recentBookings`,\n    title: `Recent Bookings`,\n    icon: <AutorenewIcon />,\n  },\n  {\n    index: 2,\n    id: `todayBookings`,\n    title: `Today's Bookings`,\n    icon: <NewReleasesIcon />,\n  },\n  {\n    index: 3,\n    id: `oldBookings`,\n    title: `Old Bookings`,\n    icon: <HistoryIcon />,\n  },\n  {\n    index: 4,\n    id: `futureBookings`,\n    title: `Future Bookings`,\n    icon: <TimelineIcon />,\n  },\n  {\n    index: 5,\n    id: `allBookings`,\n    title: `All Bookings`,\n    icon: <DescriptionIcon />,\n  },\n  {\n    index: 6,\n    id: `deletedBookings`,\n    title: `Deleted Records`,\n    icon: <DeleteIcon />,\n  },\n  {\n    index: 7,\n    id: `calendarView`,\n    title: `Calendar View`,\n    icon: <DateRangeIcon />,\n  },\n  { index: 8, id: `findByRef`, title: `Find By Ref No`, icon: <SearchIcon /> },\n  { index: 9, id: `searchBooking`, title: `Search By Name`, icon: <SearchOutlinedIcon /> },\n\n];\n\nexport const MenuList_Blood = [\n  { index: 0, id: `dashboard`, title: `Dashboard`, icon: <DashboardIcon /> },\n  {\n    index: 1,\n    id: `recentBookings`,\n    title: `Recent Bookings`,\n    icon: <AutorenewIcon />,\n  },\n  {\n    index: 2,\n    id: `todayBookings`,\n    title: `Today's Bookings`,\n    icon: <NewReleasesIcon />,\n  },\n  {\n    index: 3,\n    id: `oldBookings`,\n    title: `Old Bookings`,\n    icon: <HistoryIcon />,\n  },\n  {\n    index: 4,\n    id: `futureBookings`,\n    title: `Future Bookings`,\n    icon: <TimelineIcon />,\n  },\n  {\n    index: 5,\n    id: `allBookings`,\n    title: `All Bookings`,\n    icon: <DescriptionIcon />,\n  },\n  {\n    index: 6,\n    id: `deletedBookings`,\n    title: `Deleted Records`,\n    icon: <DeleteIcon />,\n  },\n  {\n    index: 7,\n    id: `bloodMatchedRecords`,\n    title: `Matched Results`,\n    icon: <DoneOutlineIcon />,\n  },\n  {\n    index: 8,\n    id: `bloodUnatchedRecords`,\n    title: `Unmatched Results`,\n    icon: <WarningIcon />,\n  },\n\n  {\n    index: 9,\n    id: `bloodArchived`,\n    title: `Archived Results`,\n    icon: <ArchiveIcon />,\n  },\n\n  {\n    index: 10,\n    id: `bloodSent`,\n    title: `Sent Results`,\n    icon: <SendRoundedIcon />,\n  },\n\n\n\n  {\n    index: 11,\n    id: `calendarView`,\n    title: `Calendar View`,\n    icon: <DateRangeIcon />,\n  },\n  { index: 12, id: `findByRef`, title: `Find By Ref No`, icon: <SearchIcon /> },\n  { index: 13, id: `searchBooking`, title: `Search By Name`, icon: <SearchOutlinedIcon /> },\n\n];\n\nexport const MenuList_PCR = [\n  { index: 0, id: `dashboard`, title: `Dashboard`, icon: <DashboardIcon /> },\n  {\n    index: 1,\n    id: `recentBookings`,\n    title: `Recent Bookings`,\n    icon: <AutorenewIcon />,\n  },\n  {\n    index: 2,\n    id: `todayBookings`,\n    title: `Today's Bookings`,\n    icon: <NewReleasesIcon />,\n  },\n  {\n    index: 3,\n    id: `liveBookings`,\n    title: `Live Bookings`,\n    icon: <LiveTvIcon />,\n  },\n  { index: 4, id: `oldBookings`, title: `Old Bookings`, icon: <HistoryIcon /> },\n  {\n    index: 5,\n    id: `futureBookings`,\n    title: `Future Bookings`,\n    icon: <TimelineIcon />,\n  },\n  {\n    index: 6,\n    id: `allBookings`,\n    title: `All Bookings`,\n    icon: <DescriptionIcon />,\n  },\n  {\n    index: 7,\n    id: `completedBookings`,\n    title: `Completed Bookings`,\n    icon: <PlaylistAddCheckIcon />,\n  },\n  {\n    index: 8,\n    id: `positiveBookings`,\n    title: `Positive Results`,\n    icon: <AddCircleOutlineIcon />,\n  },\n  {\n    index: 9,\n    id: `latebookings`,\n    title: `40 Hours Late`,\n    icon: <HourglassEmptyIcon />,\n  },\n  {\n    index: 10,\n    id: `deletedBookings`,\n    title: `Deleted Records`,\n    icon: <DeleteIcon />,\n  },\n  {\n    index: 11,\n    id: `trBookings`,\n    title: `TR Bookings`,\n    icon: <AirplanemodeActiveIcon />,\n  },\n  {\n    index: 12,\n    id: `unmatchedRecords`,\n    title: `Unmatched Records`,\n    icon: <WarningIcon />,\n  },\n  {\n    index: 13,\n    id: `calendarView`,\n    title: `Calendar View`,\n    icon: <DateRangeIcon />,\n  },\n  // {\n  //   index: 14,\n  //   id: `adminCalendarView`,\n  //   title: `Admin Calendar`,\n  //   icon: <EventNoteIcon />,\n  // },\n  { index: 15, id: `findByRef`, title: `Find By Ref No`, icon: <SearchIcon /> },\n  { index: 16, id: `searchBooking`, title: `Search By Name`, icon: <SearchOutlinedIcon /> },\n\n];\n\nexport const MenuList_Derma = [\n  { index: 0, id: `dashboard`, title: `Dashboard`, icon: <DashboardIcon /> },\n  {\n    index: 1,\n    id: `recentBookings`,\n    title: `Recent Bookings`,\n    icon: <AutorenewIcon />,\n  },\n  {\n    index: 2,\n    id: `todayBookings`,\n    title: `Today's Bookings`,\n    icon: <NewReleasesIcon />,\n  },\n  {\n    index: 3,\n    id: `oldBookings`,\n    title: `Old Bookings`,\n    icon: <HistoryIcon />,\n  },\n  {\n    index: 4,\n    id: `futureBookings`,\n    title: `Future Bookings`,\n    icon: <TimelineIcon />,\n  },\n  {\n    index: 5,\n    id: `allBookings`,\n    title: `All Bookings`,\n    icon: <DescriptionIcon />,\n  },\n  {\n    index: 6,\n    id: `deletedBookings`,\n    title: `Deleted Records`,\n    icon: <DeleteIcon />,\n  },\n  {\n    index: 7,\n    id: `calendarView`,\n    title: `Calendar View`,\n    icon: <DateRangeIcon />,\n  },\n  { index: 8, id: `findByRef`, title: `Find By Ref No`, icon: <SearchIcon /> },\n  { index: 9, id: `searchBooking`, title: `Search By Name`, icon: <SearchOutlinedIcon /> },\n\n];\n\n\nexport const MenuList_PCRLAB = [\n  {\n    index: 0,\n    id: `liveBookings`,\n    title: `Live Bookings`,\n    icon: <LiveTvIcon />,\n  },\n  {\n    index: 1,\n    id: `latebookings`,\n    title: `40 Hours Late`,\n    icon: <HourglassEmptyIcon />,\n  },\n  {\n    index: 2,\n    id: `calendarView`,\n    title: `Calendar View`,\n    icon: <DateRangeIcon />,\n  },\n];\n\nexport const getMenuContent = (role, index) => {\n  if (role === \"pcr\") {\n    switch (index) {\n      case 0:\n        return <DashboardPreview />;\n      case 1:\n        return <BookingTable date=\"recent\" />;\n      case 2:\n        return <BookingTable date=\"today\" />;\n      case 3:\n        return <BookingTable date=\"live\" />;\n      case 4:\n        return <BookingTable date=\"old\" />;\n      case 5:\n        return <BookingTable date=\"future\" />;\n      case 6:\n        return <BookingTable date=\"all\" />;\n      case 7:\n        return <BookingTable date=\"completed\" />;\n      case 8:\n        return <BookingTable date=\"positive\" />;\n      case 9:\n        return <BookingTable date=\"late\" />;\n      case 10:\n        return <BookingTable date=\"deleted\" />;\n      case 11:\n        return <BookingTable date=\"tr\" />;\n      case 12:\n        return <UnmatchedRecords />;\n      case 13:\n        //   return <CalendarView />;\n        // case 14:\n        return <PCRCalendarView />;\n      case 15:\n        return <FindByRef />;\n      case 16:\n        return <SearchBookingTable />\n\n      default:\n        return `Page Not Found!`;\n    }\n  } else if (role === \"pcrlab\") {\n    switch (index) {\n      case 0:\n        return <BookingTable date=\"live\" />;\n      case 1:\n        return <BookingTable date=\"late\" />;\n      case 2:\n        return <PCRCalendarView />;\n\n      default:\n        return `Page Not Found!`;\n    }\n  } else if (role === \"gynae\") {\n    switch (index) {\n      case 0:\n        return <GynaeDashboardPreview />;\n      case 1:\n        return <GynaeBookingTable date=\"recent\" />;\n      case 2:\n        return <GynaeBookingTable date=\"today\" />;\n      case 3:\n        return <GynaeBookingTable date=\"old\" />;\n      case 4:\n        return <GynaeBookingTable date=\"future\" />;\n      case 5:\n        return <GynaeBookingTable date=\"all\" />;\n      case 6:\n        return <GynaeBookingTable date=\"deleted\" />;\n      case 7:\n        return <GynaeCalendarView />;\n      case 8:\n        return <GynaeFindByRef />;\n      case 9:\n        return <SearchBookingTable />;\n\n      default:\n        return `Page Not Found!`;\n    }\n  } else if (role === \"gp\") {\n    switch (index) {\n      case 0:\n        return <GPDashboardPreview />;\n      case 1:\n        return <GPBookingTable date=\"recent\" />;\n      case 2:\n        return <GPBookingTable date=\"today\" />;\n      case 3:\n        return <GPBookingTable date=\"old\" />;\n      case 4:\n        return <GPBookingTable date=\"future\" />;\n      case 5:\n        return <GPBookingTable date=\"all\" />;\n      case 6:\n        return <GPBookingTable date=\"deleted\" />;\n      case 7:\n        return <GPCalendarView />;\n      case 8:\n        return <GPFindByRef />;\n      case 9:\n        return <SearchBookingTable />;\n\n      default:\n        return `Page Not Found!`;\n    }\n  } else if (role === \"std\") {\n    switch (index) {\n      case 0:\n        return <STDDashboardPreview />;\n      case 1:\n        return <STDBookingTable date=\"recent\" />;\n      case 2:\n        return <STDBookingTable date=\"today\" />;\n      case 3:\n        return <STDBookingTable date=\"old\" />;\n      case 4:\n        return <STDBookingTable date=\"future\" />;\n      case 5:\n        return <STDBookingTable date=\"all\" />;\n      case 6:\n        return <STDBookingTable date=\"deleted\" />;\n      case 7:\n        return <STDCalendarView />;\n      case 8:\n        return <STDFindByRef />;\n      case 9:\n        return <SearchBookingTable />;\n\n      default:\n        return `Page Not Found!`;\n    }\n  } else if (role === \"blood\") {\n    switch (index) {\n      case 0:\n        return <BloodDashboardPreview />;\n      case 1:\n        return <BloodBookingTable date=\"recent\" />;\n      case 2:\n        return <BloodBookingTable date=\"today\" />;\n      case 3:\n        return <BloodBookingTable date=\"old\" />;\n      case 4:\n        return <BloodBookingTable date=\"future\" />;\n      case 5:\n        return <BloodBookingTable date=\"all\" />;\n      case 6:\n        return <BloodBookingTable date=\"deleted\" />;\n      case 7:\n        return <BloodMatchedRecords />;\n\n      case 8:\n        return <BloodUnmatchedRecords />;\n      case 9:\n        return <BloodArchivedRecords />;\n\n      case 10:\n        return <SentBloodRecords />;\n\n      case 11:\n        return <BloodCalendarView />;\n      case 12:\n        return <BloodFindByRef />;\n      case 13:\n        return <SearchBookingTable />;\n\n      default:\n        return `Page Not Found!`;\n    }\n  } else if (role === \"admin\") {\n    switch (index) {\n      case 0:\n        return <AdminDashBoardPreview />;\n      case 1:\n        return <AdminBookingTable date=\"recent\" />;\n      case 2:\n        return <AdminBookingTable date=\"today\" />;\n      case 3:\n        return <AdminBookingTable date=\"old\" />;\n      case 4:\n        return <AdminBookingTable date=\"future\" />;\n      case 5:\n        return <AdminBookingTable date=\"all\" />;\n      case 6:\n        return <AdminBookingTable date=\"deleted\" />;\n      case 7:\n        return <AdminCalendarView />;\n      case 8:\n        return <AdminFindByRef />;\n      case 9:\n        return <SearchBookingTable />;\n\n      default:\n        return `Page Not Found!`;\n    }\n  }\n  else if (role === \"derma\") {\n    switch (index) {\n      case 0:\n        return <DermaDashboardPreview />;\n      case 1:\n        return <DermaBookingTable date=\"recent\" />;\n      case 2:\n        return <DermaBookingTable date=\"today\" />;\n      case 3:\n        return <DermaBookingTable date=\"old\" />;\n      case 4:\n        return <DermaBookingTable date=\"future\" />;\n      case 5:\n        return <DermaBookingTable date=\"all\" />;\n      case 6:\n        return <DermaBookingTable date=\"deleted\" />;\n      case 7:\n        return <DermaCalendarView />;\n      case 8:\n        return <DermaFindByRef />;\n      case 9:\n        return <SearchBookingTable />;\n\n      default:\n        return `Page Not Found!`;\n    }\n  }\n  else {\n    return `Page Not Found!`;\n  }\n};\n\nexport const getMenuRole = (role) => {\n  switch (role) {\n    case \"admin\":\n      return MenuList_Admin;\n    case \"pcr\":\n      return MenuList_PCR;\n    case \"pcrlab\":\n      return MenuList_PCRLAB;\n\n    case \"gynae\":\n      return MenuList_Gynae;\n    case \"gp\":\n      return MenuList_GP;\n    case \"std\":\n      return MenuList_STD;\n    case \"blood\":\n      return MenuList_Blood;\n    case \"derma\":\n      return MenuList_Derma;\n\n\n    default:\n      return [];\n  }\n};\n\nexport const getMenuId = (role, index) => {\n  const MenuList = getMenuRole(role);\n  for (var i = 0; i < MenuList.length; i++) {\n    if (MenuList[i].index === index) {\n      return MenuList[i].id;\n    }\n  }\n\n  return `Page Not Found!`;\n};\n\nexport const getMenuIndex = (role, id) => {\n  const MenuList = getMenuRole(role);\n  for (var i = 0; i < MenuList.length; i++) {\n    if (MenuList[i].id === id) {\n      return MenuList[i].index;\n    }\n  }\n\n  return -1;\n};\n","import React from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Link from \"@material-ui/core/Link\";\nimport Box from \"@material-ui/core/Box\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport GlobalState from \"./GlobalState\";\nimport Alert from \"@material-ui/lab/Alert\";\n\nimport logoImage from \"./images/logo.png\"\n\nimport {\n  Grid,\n  AppBar,\n  Checkbox,\n  FormControl,\n  FormControlLabel,\n  InputAdornment,\n  InputLabel,\n  OutlinedInput,\n  Paper,\n  Backdrop,\n  CircularProgress,\n} from \"@material-ui/core\";\nimport { IconButton, Toolbar } from \"@material-ui/core\";\nimport { Visibility, VisibilityOff } from \"@material-ui/icons\";\nimport clsx from \"clsx\";\nimport Copyright from \"./CopyRight\";\n\nimport { useHistory } from \"react-router-dom\";\nimport UserService from \"./services/UserService\";\nimport { getMenuId } from \"./MenuList\";\n\nimport { useMediaQuery } from 'react-responsive'\nimport { borderRadius } from \"@material-ui/system\";\nimport { setRole } from \"./Role\";\nimport { getGlobalPath } from \"./GlobalPath\";\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    minHeight: \"100vh\",\n  },\n  image: {\n    backgroundImage: \"url(/images/bg.jpg)\",\n    backgroundRepeat: \"no-repeat\",\n    backgroundColor:\n      theme.palette.type === \"light\"\n        ? theme.palette.grey[50]\n        : theme.palette.grey[900],\n    backgroundSize: \"cover\",\n    backgroundPosition: \"center\",\n  },\n  paper: {\n    // margin: theme.spacing(15, 2),\n    padding: theme.spacing(4,4),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    position: \"relative\"\n    // border: `2px solid ${theme.palette.primary.main}`,\n    // borderRadius: \"8px\"\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n    color: \"#f5f5f5\",\n  },\n\n  margin: {\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n  },\n\n  alert: {\n    width: \"100%\",\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n  },\n\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: \"#fff\",\n  },\n\n  pageBg:{\n    paddingTop: theme.spacing(15),\n   \n    background: \"linear-gradient(3deg, rgba(2,0,36,1) 0%, rgba(9,77,121,1) 35%, rgba(0,212,255,1) 100%)\",\n    height: \"100vh\",\n    margin: 0,\n    padding:0,\n  },\n\n  appbarCenter: {\n    position: \"absolute\",\n    // width: \"260px\",\n    top: \"-40px\",\n    right: \"0\",\n    marginLeft: \"-145px\",\n    alignItems: \"center\",\n    justify: \"center\",\n    display: \"flex\",\n    backgroundColor: \"#fff\",\n    padding: \"5px 20px 15px 20px\",\n    borderRadius: \"8px\"\n  },\n\n  logoImage: {\n    width: \"30px\",\n    height: \"30px\",\n    marginLeft: \"0px\",\n  },\n\n  appbarTitle: {\n    color: \"#00a1c5\",\n    fontSize: \"1.2rem\",\n    fontWeight: \"500\",\n    marginRight: \"15px\",\n  },\n\n  adminPanelLabel: {\n    color: theme.palette.primary.main, \n    marginBottom:\"20px\"\n  }\n\n\n\n\n}));\n\nexport default function SignIn() {\n  const classes = useStyles();\n  const [state, setState] = React.useContext(GlobalState);\n  const isMobile = useMediaQuery({ maxWidth: 1224 })\n\n\n  let history = useHistory();\n\n  const [password, setPassword] = React.useState(\"\");\n\n  const [username, setUsername] = React.useState(\"\");\n\n  const [saveChecked, setSaveChecked] = React.useState(false);\n\n  const [showPassword, setShowPassword] = React.useState(false);\n\n  const [error, setError] = React.useState(null);\n  const [submiting, setSubmiting] = React.useState(false);\n\n  const signIn = () => {\n    setSubmiting(true);\n\n    UserService.signIn({\n      username: username,\n      password: password,\n    })\n      .then((res) => {\n        setSubmiting(false);\n        if (res.data.status === \"OK\") {\n          setError(null);\n          const token = res.data.token;\n          if (saveChecked) {\n            localStorage.setItem(\"medexadmin-auth-token\", token);\n          } else {\n            sessionStorage.setItem(\"medexadmin-auth-token\", token);\n          }\n\n          setState((state) => ({ ...state, signedIn: true }));\n          setRole(res.data.roles[0])\n          setState((state) => ({ ...state, currentMenuIndex: 0 }));\n          history.push(getGlobalPath(`/${getMenuId(res.data.roles[0], 0)}`));\n        } else if (res.data.status === \"FAILED\") {\n          setError(res.data.error);\n        } else {\n          setError(\"Sorry, something went wrong, please try again.\");\n        }\n      })\n      .catch((err) => {\n        setSubmiting(false);\n        console.error(err);\n        setError(\"Sorry, something went wrong, please try again.\");\n      });\n  };\n\n  const usernameChanged = (event) => {\n    setUsername(event.target.value);\n    setError(null);\n  };\n\n  const passwordChanged = (event) => {\n    setPassword(event.target.value);\n    setError(null);\n  };\n\n  const handleClickShowPassword = () => {\n    setShowPassword(!showPassword);\n  };\n\n  const handleMouseDownPassword = (event) => {\n    event.preventDefault();\n  };\n\n  const saveCheckedChanged = (event) => {\n    setSaveChecked(event.target.checked);\n  };\n\n  return (\n    <div className={classes.pageBg}>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n\n        <Paper elevation={20}>\n          <div className={classes.paper}>\n            <div className={classes.appbarCenter}>\n              <span className={classes.appbarTitle}>\n                Medical Express Clinic\n              </span>\n\n              <img\n                className={classes.logoImage}\n                src={getGlobalPath(\"/images/logo.png\")}\n                alt=\"logo image\"\n              />\n            </div>\n\n            <Avatar className={classes.avatar}>\n              <LockOutlinedIcon />\n            </Avatar>\n            <Typography\n              component=\"h1\"\n              variant=\"h6\"\n              className={classes.adminPanelLabel}\n            >\n              Admin Panel\n            </Typography>\n\n            {error && (\n              <div className={classes.alert}>\n                <Alert severity=\"error\">\n                  {\" \"}\n                  <div style={{ lineHeight: \"1.5rem\", textAlign: \"justify\" }}>\n                    {error}\n                  </div>\n                </Alert>\n              </div>\n            )}\n\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"username\"\n              label=\"Username\"\n              name=\"email\"\n              autoComplete=\"username\"\n              value={username}\n              onChange={usernameChanged}\n              on\n              autoFocus\n            />\n            <FormControl\n              fullWidth\n              required\n              className={clsx(classes.margin, classes.textField)}\n              variant=\"outlined\"\n              onKeyPress={(event) => {\n                if (event.key === \"Enter\") {\n                  signIn();\n                }\n              }}\n            >\n              <InputLabel htmlFor=\"outlined-adornment-password\">\n                {\" \"}\n                Password{\" \"}\n              </InputLabel>\n              <OutlinedInput\n                id=\"outlined-adornment-password\"\n                name=\"outlined-adornment-password\"\n                type={showPassword ? \"text\" : \"password\"}\n                value={password}\n                onChange={passwordChanged}\n                autoComplete=\"current-password\"\n                endAdornment={\n                  <InputAdornment position=\"end\">\n                    <IconButton\n                      tabindex=\"-1\"\n                      aria-label=\"toggle password visibility\"\n                      onClick={handleClickShowPassword}\n                      onMouseDown={handleMouseDownPassword}\n                    >\n                      {showPassword ? <Visibility /> : <VisibilityOff />}\n                    </IconButton>\n                  </InputAdornment>\n                }\n                labelWidth={100}\n              />\n            </FormControl>\n\n            <FormControlLabel\n              style={{ textAlign: \"left\", width: \"100%\" }}\n              control={\n                <Checkbox\n                  value=\"remember\"\n                  color=\"secondary\"\n                  checked={saveChecked}\n                  onChange={saveCheckedChanged}\n                />\n              }\n              label=\"Remember me\"\n            />\n            <Button\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={signIn}\n              className={classes.submit}\n            >\n              Sign In\n            </Button>\n          </div>\n        </Paper>\n\n        <Backdrop className={classes.backdrop} open={submiting}>\n          <Grid\n            container\n            direction=\"column\"\n            justify=\"center\"\n            alignItems=\"center\"\n            spacing={2}\n          >\n            <Grid item>\n              <CircularProgress color=\"inherit\" />\n            </Grid>\n            <Grid item>\n              <span style={{ textAlign: \"center\", color: \"#fff\" }}>\n                {\" \"}\n                {/* Please wait ...{\" \"} */}\n              </span>\n            </Grid>\n          </Grid>\n        </Backdrop>\n\n        <Box mt={5} style={{ color: \"#eee\" }}>\n          <Copyright />\n        </Box>\n      </Container>\n    </div>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useHistory } from \"react-router-dom\";\n\nimport {\n  Badge,\n  Divider,\n  Grid,\n  IconButton,\n  ListItemIcon,\n  Tooltip,\n} from \"@material-ui/core\";\nimport GlobalState from \"./GlobalState\";\nimport { List, ListItem } from \"@material-ui/core\";\n\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport { getMenuRole, getMenuId } from \"./MenuList\";\nimport { border, borderBottom } from \"@material-ui/system\";\nimport { getGlobalPath } from \"./GlobalPath\";\n\nimport GyaneBookService from \"./Gynae/services/BookService\"\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\",\n  },\n  fixedHeight: {\n    height: 240,\n  },\n\n  icon: {\n    fontSize: \"1rem\",\n    color: \"#777\",\n    cursor: \"pointer\",\n    paddingTop: \"10px\",\n    paddingBottom: \"8px\",\n    borderBottom: \"1px solid #eee\",\n  },\n\n  iconSelected: {\n    color: \"#fff\",\n    backgroundColor:  theme.palette.primary.main,\n    transition: \"all 0.1s ease-in-out\"\n  },\n\n  menuText: {\n    fontSize: \"1rem\",\n    fontWeight: \"500\"\n  },\n\n  Badge:{\n    backgroundColor: \"rgb(220, 0, 78)\",\n    color: \"#fff\",\n    fontWeight: \"600\",\n    textAlign:\"center\",\n    borderRadius: \"50%\",\n    fontSize: \"0.85rem\",\n    lineHeight: \"0.85rem\",\n    padding:\"7px\",\n    marginTop:\"9px\",\n    width:\"28px\"\n\n  }\n}));\n\nexport default function MyMenu() {\n  const classes = useStyles();\n  const [state, setState] = React.useContext(GlobalState);\n\n  const [selectedIndex, setSelectedIndex] = React.useState(0);\n\n  let history = useHistory();\n\n  const updateShouldRefundsCount = async () =>\n  {\n    try{\n      const res = await GyaneBookService.getShouldRefundsCount()\n      if (res && res.data && res.data.status === \"OK\")\n      {\n        setState(state => ({...state, shouldRefunsCount: res.data.count}))\n      }\n    }\n    catch(ex)\n    {\n      console.error(ex)\n    }\n  }\n\n  useEffect(() => {\n    setSelectedIndex(state.currentMenuIndex);\n    updateShouldRefundsCount()\n  }, [state.currentMenuIndex]);\n\n  const handleListItemClick = (event, index) => {\n    setSelectedIndex(index);\n    setState((state) => ({ ...state, currentMenuIndex: index }));\n\n    history.push(getGlobalPath(`/${getMenuId(state.role,index)}`));\n  };\n\n  return (\n    <React.Fragment>\n      <List>\n        {state.role &&\n          getMenuRole(state.role).map(\n            (item) =>\n              !item.hidden && (\n                // <ListItem button selected={selectedIndex === item.index} onClick={(event) => handleListItemClick(event, item.index)}>\n                // <ListItemIcon>\n                //     {item.icon}\n                // </ListItemIcon>\n                // <ListItemText primary={`${item.title}`} />\n                // </ListItem>\n                <React.Fragment key={`${item.id}`}>\n                  <div\n                    key={`${item.id}`}\n                    className={clsx(\n                      classes.icon,\n                      selectedIndex === item.index && classes.iconSelected\n                    )}\n                    onClick={(event) => handleListItemClick(event, item.index)}\n                  >\n                    <Grid\n                      container\n                      direction=\"row\"\n                      justify=\"flex-start\"\n                      alignItems=\"flex-start\"\n                      spacing={3}\n                      style={{paddingLeft:\"15px\"}}\n                    >\n                      <Grid item>{item.icon}</Grid>\n\n                      <Grid item style={{textAlign:\"left\"}}>\n                        <span\n                          className={classes.menuText}\n                        >{`${item.title}`}</span>{\" \"}\n                      </Grid>\n\n                      {state.role === \"gynae\" && item.id === \"deletedBookings\" && state.shouldRefunsCount > 0 && (\n                        <span className={classes.Badge}> {state.shouldRefunsCount} </span>\n                      )}\n\n                    </Grid>\n                  </div>\n                </React.Fragment>\n              )\n          )}\n      </List>\n    </React.Fragment>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Box from \"@material-ui/core/Box\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Container from \"@material-ui/core/Container\";\nimport Link from \"@material-ui/core/Link\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\n\nimport { Avatar, Button, Grid, Tooltip, withStyles } from \"@material-ui/core\";\nimport GlobalState from \"./GlobalState\";\nimport MyMenu from \"./Menu\";\nimport { getMenuContent, getMenuId, getMenuIndex } from \"./MenuList\";\n\nimport { useLocation, useHistory } from \"react-router-dom\";\nimport Copyright from \"./CopyRight\";\nimport { useMediaQuery } from \"react-responsive\";\nimport PersonOutlineIcon from \"@material-ui/icons/PersonOutline\";\nimport AppsIcon from \"@material-ui/icons/Apps\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Menu from \"@material-ui/core/Menu\";\nimport dateformat from \"dateformat\";\nimport { getRole, setRole, clearRole } from \"./Role\";\nimport { getGlobalPath, getMenuIdFromGlobalPath } from \"./GlobalPath\";\n\nconst drawerWidth = 240;\n\nconst StyledMenu = withStyles((theme) => ({\n  paper: {\n    marginTop: \"10px\",\n    // marginRight: \"5px\",\n    width: \"270px\",\n    height: \"240px\",\n    border: `1px solid #ddd`,\n    borderRadius: \"10px\",\n    paddingTop: \"10px\",\n  },\n}))((props) => (\n  <Menu\n    elevation={4}\n    getContentAnchorEl={null}\n    anchorOrigin={{\n      vertical: \"bottom\",\n      horizontal: \"center\",\n    }}\n    transformOrigin={{\n      vertical: \"top\",\n      horizontal: \"center\",\n    }}\n    {...props}\n  />\n));\n\nconst StyledMenuApps = withStyles((theme) => ({\n  paper: {\n    marginTop: \"5px\",\n    // marginRight: \"5px\",\n    width: \"280px\",\n    height: \"340px\",\n    border: `1px solid #ddd`,\n    borderRadius: \"10px\",\n    padding: \"10px\",\n  },\n}))((props) => (\n  <Menu\n    elevation={4}\n    getContentAnchorEl={null}\n    anchorOrigin={{\n      vertical: \"bottom\",\n      horizontal: \"center\",\n    }}\n    transformOrigin={{\n      vertical: \"top\",\n      horizontal: \"center\",\n    }}\n    {...props}\n  />\n));\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    padding: \"0 8px\",\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    // marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: \"none\",\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: \"relative\",\n    whiteSpace: \"nowrap\",\n    overflowX: \"hidden\",\n    width: drawerWidth,\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n\n    [theme.breakpoints.down(\"sm\")]: {\n      opacity: 0.9,\n    },\n  },\n  drawerPaperClose: {\n    overflowX: \"hidden\",\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up(\"sm\")]: {\n      width: theme.spacing(9),\n    },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: \"100vh\",\n    overflow: \"auto\",\n  },\n  container: {\n    paddingTop: theme.spacing(2),\n    paddingBottom: theme.spacing(2),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\",\n  },\n  fixedHeight: {\n    height: 240,\n  },\n\n  appbarTitle: {\n    color: \"#00a1c5\",\n    fontSize: \"1.2rem\",\n    fontWeight: \"500\",\n    marginRight: \"15px\",\n  },\n\n  appbarCenter: {\n    position: \"fixed\",\n    width: \"260px\",\n    top: \"10px\",\n    left: \"50%\",\n    marginLeft: \"-130px\",\n    alignItems: \"center\",\n    justify: \"center\",\n    display: \"flex\",\n  },\n\n  logoImage: {\n    width: \"36px\",\n    height: \"36px\",\n    marginLeft: \"0px\",\n  },\n\n  userAvatar: {\n    backgroundColor: \"#fff\",\n    borderColor: \"#aaa\",\n    border: \"1px solid\",\n    color: \"#aaa\",\n    cursor: \"pointer\",\n  },\n\n  userAvatarSelected: {\n    backgroundColor: \"#fff\",\n    borderColor: theme.palette.primary.main,\n    border: \"1px solid\",\n    color: theme.palette.primary.main,\n    cursor: \"pointer\",\n  },\n\n  userAvatarBig: {\n    backgroundColor: \"#fff\",\n    borderColor: theme.palette.primary.main,\n    border: \"1px solid\",\n    color: theme.palette.primary.main,\n    width: \"60px\",\n    height: \"60px\",\n  },\n\n  appBarText: {\n    color: \"#888\",\n    [theme.breakpoints.down(\"sm\")]: {\n      display: \"none\",\n    },\n  },\n\n  appBarAppsIcon: {\n    // color: \"#888\",\n    cursor: \"pointer\",\n    fontSize: \"1.8rem\",\n  },\n\n  appBarAppsIconSelected: {\n    cursor: \"pointer\",\n    fontSize: \"1.8rem\",\n    color: theme.palette.primary.main,\n  },\n\n  usernameLabel: {\n    fontSize: \"1.2rem\",\n    color: theme.palette.primary.main,\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n  },\n\n  lastLoginLabel: {\n    color: \"#777\",\n    paddingTop: \"5px\",\n  },\n\n  appsLogo: {\n    width: \"70px\",\n    height: \"70px\",\n  },\n\n  appsBox: {\n    cursor: \"pointer\",\n    transition: \"all 0.1s ease-in-out\",\n    padding: \"2px\",\n    borderBottom: `5px solid #fff`,\n    borderRadius: \"5px\",\n    // border: \"2px solid #fff\",\n    \"&:hover\": {\n      //      border: `2px solid ${theme.palette.primary.main}`,\n      //      borderRadius: \"10px\",\n      borderBottom: `5px solid ${theme.palette.primary.main}`,\n      transition: \"all 0.1s ease-in-out\",\n    },\n  },\n\n  appsBoxSelected: {\n    cursor: \"pointer\",\n    transition: \"all 0.1s ease-in-out\",\n    padding: \"2px\",\n    borderBottom: `5px solid${theme.palette.primary.light}`,\n    borderRadius: \"5px\",\n    // border: \"2px solid #fff\",\n    \"&:hover\": {\n      //      border: `2px solid ${theme.palette.primary.main}`,\n      //      borderRadius: \"10px\",\n      borderBottom: `5px solid ${theme.palette.primary.light}`,\n      transition: \"all 0.1s ease-in-out\",\n    },\n  },\n\n  appsAdminLabel: {\n    color: \"#0264d4\",\n    fontWeight: \"600\",\n    fontSize: \"0.95rem\",\n    marginTop: \"-10px\",\n  },\n\n  appsPCRLabel: {\n    color: \"#4faef7\",\n    fontWeight: \"600\",\n    fontSize: \"0.95rem\",\n    marginTop: \"-10px\",\n  },\n\n  appsGynaeLabel: {\n    color: \"#e83caf\",\n    fontWeight: \"600\",\n    fontSize: \"0.95rem\",\n    marginTop: \"-10px\",\n  },\n\n  appsGPLabel: {\n    color: \"#f68529\",\n    fontWeight: \"600\",\n    fontSize: \"0.95rem\",\n    marginTop: \"-10px\",\n  },\n\n  appsSTDLabel: {\n    color: \"#f68529\",\n    fontWeight: \"600\",\n    fontSize: \"0.95rem\",\n    marginTop: \"-10px\",\n  },\n\n  appsBloodLabel: {\n    color: \"#dc2626\",\n    fontWeight: \"600\",\n    fontSize: \"0.95rem\",\n    marginTop: \"-10px\",\n  },\n\n  appsDermaLabel: {\n    color: \"#323e9a\",\n    fontWeight: \"600\",\n    fontSize: \"0.95rem\",\n    marginTop: \"-10px\",\n  },\n\n\n  \n\n  appsInToolbar: {\n    position: \"fixed\",\n    left: \"60px\",\n    top: \"-5px\",\n    height: \"65px\",\n    width: \"200px\",\n    overflow: \"hidden\",\n  },\n}));\n\nexport default function Dashboard() {\n  const classes = useStyles();\n  const [state, setState] = React.useContext(GlobalState);\n  const isMobile = useMediaQuery({ maxWidth: 768 });\n\n  const [open, setOpen] = React.useState(isMobile ? false : true);\n\n  const [currentMenuIndex, setCurrentMenuIndex] = React.useState(0);\n\n  const [anchorUserAvatar, setAnchorUserAvatar] = React.useState(null);\n  const handleUserAvatarClick = (event) => {\n    setAnchorUserAvatar(event.currentTarget);\n  };\n  const handleUserAvatarClose = () => {\n    setAnchorUserAvatar(null);\n  };\n\n  const [anchorApps, setAnchorApps] = React.useState(null);\n  const handleAppsClick = (event) => {\n    setAnchorApps(event.currentTarget);\n  };\n  const handleAppsClose = () => {\n    setAnchorApps(null);\n  };\n\n  const history = useHistory();\n\n  let location = useLocation();\n  React.useEffect(() => {\n    if (!state.role) return;\n    const index = getMenuIndex(\n      state.role,\n      getMenuIdFromGlobalPath(location.pathname)\n    );\n    setState((state) => ({ ...state, currentMenuIndex: index }));\n  }, [location]);\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, []);\n\n  useEffect(() => {\n    setCurrentMenuIndex(state.currentMenuIndex);\n    if (isMobile) {\n      setOpen(false);\n    }\n  }, [state.currentMenuIndex]);\n\n  const handleDrawerOpen = () => {\n    setOpen(!open);\n  };\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n\n  const handleLogout = () => {\n    localStorage.removeItem(\"medexadmin-auth-token\");\n    sessionStorage.removeItem(\"medexadmin-auth-token\");\n    clearRole();\n\n    setState((state) => ({ signedIn: false }));\n    history.replace(\"./login\");\n  };\n\n  const appsClicked = (role) => {\n    setRole(role);\n    setState((state) => ({ ...state, role: role }));\n    history.push(getGlobalPath(`/${getMenuId(role, 0)}`));\n    handleAppsClose();\n  };\n\n  const getAppsLogo = (role) => {\n    switch (role) {\n      case \"admin\":\n        return (\n          <img\n            src={getGlobalPath(\"/images/admin.png\")}\n            className={classes.appsLogo}\n          />\n        );\n      case \"pcr\":\n        return (\n          <img\n            src={getGlobalPath(\"/images/corona.png\")}\n            className={classes.appsLogo}\n          />\n        );\n\n      case \"gynae\":\n        return (\n          <img\n            src={getGlobalPath(\"/images/woman.png\")}\n            className={classes.appsLogo}\n          />\n        );\n\n        case \"gp\":\n        return (\n          <img\n            src={getGlobalPath(\"/images/doctor.png\")}\n            className={classes.appsLogo}\n          />\n        ); \n\n        case \"std\":\n          return (\n            <img\n              src={getGlobalPath(\"/images/std-icon.png\")}\n              className={classes.appsLogo}\n            />\n          ); \n\n          case \"blood\":\n            return (\n              <img\n                src={getGlobalPath(\"/images/blood-logo.png\")}\n                className={classes.appsLogo}\n              />\n            ); \n\n            case \"derma\":\n              return (\n                <img\n                  src={getGlobalPath(\"/images/derma-logo.png\")}\n                  className={classes.appsLogo}\n                />\n              ); \n     \n  \n\n      default:\n        return null;\n    }\n  };\n\n  const getAppsLabel = (role) => {\n    switch (role) {\n      case \"admin\":\n        return <div className={classes.appsAdminLabel}> {\"Admin\"} </div>;\n      case \"pcr\":\n        return <div className={classes.appsPCRLabel}> {\"PCR\"} </div>;\n      case \"gynae\":\n        return <div className={classes.appsGynaeLabel}> {\"Gynae\"} </div>;\n        case \"gp\":\n          return <div className={classes.appsGPLabel}> {\"GP\"} </div>;\n          case \"std\":\n            return <div className={classes.appsSTDLabel}> {\"STD\"} </div>;\n            case \"blood\":\n              return <div className={classes.appsBloodLabel}> {\"Blood\"} </div>;\n              case \"derma\":\n              return <div className={classes.appsDermaLabel}> {\"Dermatology\"} </div>;\n\n  \n      default:\n        return null;\n    }\n  };\n\n  return (\n    <React.Fragment>\n      {state.userId && state.role && (\n        <React.Fragment>\n          <div className={classes.root}>\n            <CssBaseline />\n            <AppBar\n              style={{ backgroundColor: \"#fff\", color: \"#555\", height: \"60px\" }}\n              position=\"absolute\"\n              className={clsx(\n                classes.appBar,\n                false && open && classes.appBarShift\n              )}\n            >\n              <Toolbar className={classes.toolbar}>\n                <IconButton\n                  edge=\"start\"\n                  color=\"inherit\"\n                  aria-label=\"open drawer\"\n                  onClick={handleDrawerOpen}\n                  className={clsx(classes.menuButton)}\n                >\n                  <MenuIcon />\n                </IconButton>\n\n                <div className={classes.appsInToolbar}>\n                  <Grid container direction=\"row\" alignItems=\"center\">\n                    <Grid item>{getAppsLogo(state.role)}</Grid>\n                    <Grid item>\n                      <div style={{ paddingTop: \"8px\" }}>\n                        {getAppsLabel(state.role)}\n                      </div>\n                    </Grid>\n                  </Grid>\n                </div>\n\n                <div className={classes.appbarCenter}>\n                  {!isMobile && (\n                    <React.Fragment>\n                      <span className={classes.appbarTitle}>\n                        Medical Express Clinic\n                      </span>\n\n                      <img\n                        className={classes.logoImage}\n                        src={getGlobalPath(\"/images/logo.png\")}\n                        alt=\"logo image\"\n                      />\n                    </React.Fragment>\n                  )}\n                </div>\n\n                <div\n                  style={{\n                    display: \"flex\",\n                    justifyContent: \"flex-end\",\n                    width: \"100%\",\n                    paddingLeft: \"2%\",\n                  }}\n                >\n                  <Grid\n                    container\n                    spacing={2}\n                    direction=\"row-reverse\"\n                    justify=\"flex-start\"\n                    alignItems=\"center\"\n                  >\n                    <Grid item>\n                      <Avatar\n                        className={\n                          anchorUserAvatar\n                            ? classes.userAvatarSelected\n                            : classes.userAvatar\n                        }\n                        onClick={handleUserAvatarClick}\n                      >\n                        <IconButton>\n                          <PersonOutlineIcon />\n                        </IconButton>\n                      </Avatar>\n                    </Grid>\n\n                    {state.userId?.roles.find((e) => e === \"admin\") && (\n                      <Grid item>\n                        <IconButton onClick={handleAppsClick}>\n                          <AppsIcon\n                            className={\n                              anchorApps\n                                ? classes.appBarAppsIconSelected\n                                : classes.appBarAppsIcon\n                            }\n                          />\n                        </IconButton>\n                      </Grid>\n                    )}\n                  </Grid>\n                </div>\n              </Toolbar>\n            </AppBar>\n\n            <StyledMenu\n              id=\"user-avatar-menu\"\n              anchorEl={anchorUserAvatar}\n              keepMounted\n              open={Boolean(anchorUserAvatar)}\n              onClose={handleUserAvatarClose}\n            >\n              <Grid\n                container\n                direction=\"column\"\n                justify=\"center\"\n                alignItems=\"center\"\n              >\n                <Grid item>\n                  <Avatar className={classes.userAvatarBig}>\n                    <PersonOutlineIcon style={{ fontSize: \"2.5rem\" }} />\n                  </Avatar>\n                </Grid>\n                <Grid item>\n                  <div className={classes.usernameLabel}>\n                    {\" \"}\n                    {state.userId?.username}{\" \"}\n                  </div>\n                </Grid>\n                <Grid item>\n                  <span style={{ color: \"#999\", fontSize: \"0.85rem\" }}>\n                    Logged in at :\n                  </span>\n                </Grid>\n                <Grid item>\n                  <div className={classes.lastLoginLabel}>\n                    {dateformat(state.userId?.lastLoginTimeStamp)}\n                  </div>\n                </Grid>\n\n                <Grid item>\n                  <Button\n                    onClick={handleLogout}\n                    variant=\"outlined\"\n                    color=\"secondary\"\n                    style={{\n                      marginTop: \"30px\",\n                      width: \"150px\",\n                      borderRadius: \"30px\",\n                    }}\n                  >\n                    Logout\n                  </Button>\n                </Grid>\n              </Grid>\n            </StyledMenu>\n\n            <StyledMenuApps\n              id=\"apps-menu\"\n              anchorEl={anchorApps}\n              keepMounted\n              open={Boolean(anchorApps)}\n              onClose={handleAppsClose}\n            >\n              <Grid container spacing={1}>\n                <Grid item>\n                  <Grid\n                    container\n                    direction=\"column\"\n                    justify=\"center\"\n                    alignItems=\"center\"\n                    className={\n                      state.role === \"admin\"\n                        ? classes.appsBoxSelected\n                        : classes.appsBox\n                    }\n                    onClick={() => appsClicked(\"admin\")}\n                  >\n                    <Grid item>{getAppsLogo(\"admin\")}</Grid>\n                    <Grid item>{getAppsLabel(\"admin\")}</Grid>\n                  </Grid>\n                </Grid>\n\n                <Grid item>\n                  <Grid\n                    container\n                    direction=\"column\"\n                    justify=\"center\"\n                    alignItems=\"center\"\n                    className={\n                      state.role === \"pcr\"\n                        ? classes.appsBoxSelected\n                        : classes.appsBox\n                    }\n                    onClick={() => appsClicked(\"pcr\")}\n                  >\n                    <Grid item>{getAppsLogo(\"pcr\")}</Grid>\n                    <Grid item>{getAppsLabel(\"pcr\")}</Grid>\n                  </Grid>\n                </Grid>\n\n                <Grid item>\n                  <Grid\n                    container\n                    direction=\"column\"\n                    justify=\"center\"\n                    alignItems=\"center\"\n                    className={\n                      state.role === \"gynae\"\n                        ? classes.appsBoxSelected\n                        : classes.appsBox\n                    }\n                    onClick={() => appsClicked(\"gynae\")}\n                  >\n                    <Grid item>{getAppsLogo(\"gynae\")}</Grid>\n                    <Grid item>{getAppsLabel(\"gynae\")}</Grid>\n                  </Grid>\n                </Grid>\n\n                <Grid item>\n                  <Grid\n                    container\n                    direction=\"column\"\n                    justify=\"center\"\n                    alignItems=\"center\"\n                    className={\n                      state.role === \"gp\"\n                        ? classes.appsBoxSelected\n                        : classes.appsBox\n                    }\n                    onClick={() => appsClicked(\"gp\")}\n                  >\n                    <Grid item>{getAppsLogo(\"gp\")}</Grid>\n                    <Grid item>{getAppsLabel(\"gp\")}</Grid>\n                  </Grid>\n                </Grid>\n\n                <Grid item>\n                  <Grid\n                    container\n                    direction=\"column\"\n                    justify=\"center\"\n                    alignItems=\"center\"\n                    className={\n                      state.role === \"std\"\n                        ? classes.appsBoxSelected\n                        : classes.appsBox\n                    }\n                    onClick={() => appsClicked(\"std\")}\n                  >\n                    <Grid item>{getAppsLogo(\"std\")}</Grid>\n                    <Grid item>{getAppsLabel(\"std\")}</Grid>\n                  </Grid>\n                </Grid>\n\n                <Grid item>\n                  <Grid\n                    container\n                    direction=\"column\"\n                    justify=\"center\"\n                    alignItems=\"center\"\n                    className={\n                      state.role === \"blood\"\n                        ? classes.appsBoxSelected\n                        : classes.appsBox\n                    }\n                    onClick={() => appsClicked(\"blood\")}\n                  >\n                    <Grid item>{getAppsLogo(\"blood\")}</Grid>\n                    <Grid item>{getAppsLabel(\"blood\")}</Grid>\n                  </Grid>\n                </Grid>\n\n                <Grid item>\n                  <Grid\n                    container\n                    direction=\"column\"\n                    justify=\"center\"\n                    alignItems=\"center\"\n                    className={\n                      state.role === \"derma\"\n                        ? classes.appsBoxSelected\n                        : classes.appsBox\n                    }\n                    onClick={() => appsClicked(\"derma\")}\n                  >\n                    <Grid item>{getAppsLogo(\"derma\")}</Grid>\n                    <Grid item>{getAppsLabel(\"derma\")}</Grid>\n                  </Grid>\n                </Grid>\n\n\n\n              </Grid>\n            </StyledMenuApps>\n\n            <Drawer\n              variant={isMobile ? \"temporary\" : \"persistent\"}\n              classes={{\n                paper: clsx(\n                  classes.drawerPaper,\n                  !open && classes.drawerPaperClose\n                ),\n              }}\n              open={open}\n            >\n              <div className={classes.toolbarIcon}>\n                <React.Fragment>\n                  <img\n                    className={classes.logoImage}\n                    src={getGlobalPath(\"/images/logo.png\")} \n                    alt=\"logo image\"\n                    style={{ marginRight: \"10px\" }}\n                  />\n                  <span className={classes.appbarTitle}>\n                    <span style={{ fontSize: \"0.9rem\" }}>Medical Express</span>\n                  </span>\n                </React.Fragment>\n                <IconButton onClick={handleDrawerClose}>\n                  <ChevronLeftIcon />\n                </IconButton>\n              </div>\n              <Divider />\n\n              <MyMenu />\n            </Drawer>\n\n            <main className={classes.content}>\n              <div className={classes.appBarSpacer} />\n              <Container\n                maxWidth={isMobile ? \"xs\" : \"xl\"}\n                className={classes.container}\n              >\n                {getMenuContent(state.role, currentMenuIndex)}\n              </Container>\n            </main>\n          </div>\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n}\n","import UserService from \"./services/UserService\";\n\nexport async function getUserIdFromToken(token)\n{\n    try{\n       const res  = await UserService.checkToken({token: token})\n       if (res.data.status === 'OK')\n        {\n            return {username: res.data.userId, forename: res.data.forename, surname: res.data.surname, roles:res.data.roles, lastLoginTimeStamp: res.data.lastLoginTimeStamp}\n        }\n       else\n        {\n            return null\n        }\n    }\n    catch(err)\n    {\n        return null\n    }\n  \n}","import React from 'react';\n\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport GlobalState from './GlobalState';\n\n\n\n\nimport SignIn from './SignIn';\nimport Dashboard from './Dashboard';\n\nimport { useLocation, useHistory} from \"react-router-dom\";\nimport { getUserIdFromToken } from './TokenVerifier';\nimport UserService from './services/UserService';\nimport { getMenuId } from './MenuList';\nimport { getRole, setRole } from './Role';\nimport { getGlobalPath } from './GlobalPath';\n\n\nconst useStyles = makeStyles((theme) => ({\n\n    appBar: {\n        position: 'static',\n        backgroundColor: \"#333\",\n        color: \"#fff\",\n        //alignItems: 'center'\n    \n      },\n\n      signOutButton:{\n        color: \"#fff\",\n        marginRight : \"20px\",\n        fontWeight: \"500\"\n      },\n\n      title: {\n        flexGrow : 1\n      }\n\n\n}));\n\nexport default function Navigator() {\n\n    const classes = useStyles();\n    const [state, setState] = React.useContext(GlobalState);\n\n    const [loaded, setLoaded] = React.useState(false)\n\n    let history = useHistory();\n\n    const handleSignOut = () =>\n    {\n      setState(state => ({...state, signedIn: false}));\n\n    }\n\n    let location = useLocation();\n\n    React.useEffect(() => {\n\n      const checkToken = async () =>\n      {\n        const authToken = localStorage.getItem('medexadmin-auth-token') || sessionStorage.getItem('medexadmin-auth-token');\n        UserService.setToken(authToken)\n\n         if (!authToken)\n        {\n          setState(state => ({...state, signedIn: false, signedUp: false, forgotPassword: false}));\n          setLoaded(true)\n          history.push(getGlobalPath('/login'));\n        }\n        else\n        {\n           const userId = await getUserIdFromToken(authToken);\n           if (!userId)\n           {\n              setState(state => ({...state, signedIn: false, signedUp: false, forgotPassword: false}));\n              history.push(getGlobalPath('/login'));\n           }\n           else if (location.pathname === getGlobalPath('/') || location.pathname === getGlobalPath('/#') || location.pathname.startsWith(getGlobalPath('/login')))\n           {\n            if (!getRole())\n            {\n             setRole(userId.roles[0])\n            }\n             setState(state => ({...state, signedIn: true, signedUp: false, forgotPassword: false, userId: userId, role: getRole()}));\n            \n             history.push(getGlobalPath(`/${getMenuId(getRole(),0)}`));\n           }\n           else\n           {\n              if (!getRole())\n              {\n               setRole(userId.roles[0])\n              }\n             setState(state => ({...state, signedIn: true, userId: userId, role: getRole()}));\n           }\n\n           setLoaded(true)\n        }\n      }\n\n      checkToken();\n   \n    }, [location.pathname]);\n\n    const getComponentFromState = () =>\n    {\n\n      if (state.signedIn)\n      {\n        return <Dashboard/>\n      }\n      else\n      {\n          return <SignIn/>    \n      }\n    }\n\n    return (\n        <React.Fragment>\n            <CssBaseline />\n\n            {\n              loaded && (\n                getComponentFromState()\n              )\n            }\n        \n        </React.Fragment>\n    );\n}","import React, { Fragment, Suspense, lazy } from \"react\";\nimport { MuiThemeProvider, CssBaseline } from \"@material-ui/core\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport theme from \"./theme\";\nimport GlobalStyles from \"./GlobalStyles\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport GlobalState from \"./GlobalState\";\nimport Navigator from './Navigator';\n\n\n\n\n// Configure JSS\n\n\nfunction App() {\n  const [state, setState] = React.useState({currentMenuIndex:0});\n\n  return (\n    <GlobalState.Provider value={[state, setState]}>\n      <BrowserRouter>\n        <MuiThemeProvider theme={theme}>\n          <CssBaseline />\n          <GlobalStyles />\n\n       \n\n              <Navigator/>\n\n       \n\n\n        </MuiThemeProvider>\n      </BrowserRouter>\n    </GlobalState.Provider>\n  );\n}\n\nserviceWorker.register();\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <App />,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}