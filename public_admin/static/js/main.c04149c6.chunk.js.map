{"version":3,"sources":["PriceCalculator.js","GlobalState.js","SignIn.js","services/api.js","services/BookService.js","services/PDFService.js","PersonsBox.js","FindByRef.js","BookingTable.js","AdminConsole.js","Title.js","Chart.js","Deposits.js","Orders.js","BookingView.js","DashboardPreview.js","Menu.js","Dashboard.js","Navigator.js","App.js","index.js"],"names":["require","TouchApp","calculatePrice","person","price","certificate","antiBodyTest","module","exports","calculateTotalPrice","persons","totalPrice","i","length","GlobalState","React","createContext","Copyright","Typography","variant","color","align","Link","href","Date","getFullYear","useStyles","makeStyles","theme","root","width","marginTop","spacing","display","flexWrap","margin","marginBottom","paper","flexDirection","alignItems","avatar","backgroundColor","palette","secondary","main","form","submit","RememberMe","textAlign","appBar","position","SignIn","classes","useContext","state","setState","useState","localStorage","getItem","password","setPassword","username","setUsername","saveChecked","setSaveChecked","signIn","toLowerCase","signedIn","setItem","removeItem","signedInError","Fragment","AppBar","className","Toolbar","noWrap","title","Container","component","maxWidth","Avatar","noValidate","TextField","value","onChange","event","target","required","fullWidth","id","label","name","autoComplete","autoFocus","FormControl","clsx","textField","onKeyPress","key","InputLabel","htmlFor","OutlinedInput","type","showPassword","endAdornment","InputAdornment","IconButton","aria-label","onClick","onMouseDown","preventDefault","Visibility","VisibilityOff","labelWidth","FormControlLabel","control","Checkbox","checked","Button","onTouchTap","Alert","severity","Box","mt","axios","create","baseURL","headers","BookService","updateBooking","payload","API","post","getBookingsByRef","ref","get","getAllBookings","getTodayBookings","getOldBookings","getFutureBookings","getRecentBookings","getRecentBookingsAll","PDFService","downloadCovidForm1","responseType","Accept","downloadCovidForm2","downloadPdfResult","downloadPdfCert","box","padding","borderRadius","paddingRight","boxRed","boxInfo","border","ul","listStyle","li","icon","marginRight","heading","fontSize","typography","pxToRem","flexBasis","flexShrink","text","secondaryHeading","infoDetails","infoTitle","fontWeight","infoData","marginLeft","Accordion","DownloadForm","infoDataCharges","infoDataChargesHigher","BookedLabel","paddingLeft","PatientAttendedLabel","SampleTakenLabel","ReportSentLabel","ReportCertSentLabel","EditButton","background","SaveButton","CancelButton","TextBox","checkIcon","closeIcon","centeredLabel","PersonsBox","expanded","setExpanded","edit","editMode","setEditMode","saving","setSaving","validationError","setValidationError","bookingDate","setBookingDate","bookingTime","setBookingTime","gender","setGender","setTitle","forename","setForename","surname","setSurnme","email","setEmail","dob","setDOB","tel","setTel","postCode","setPostCode","address","setAddress","notes","setNotes","passport","setPassport","passport2","setPassport2","setCertificate","setAntiBodyTest","bookingDateChanged","bookingDateError","bookingTimeChanged","bookingTimeError","genderChanged","titleChanged","forenameChanged","surnameChanged","emailChanged","dobChanged","dobError","telChanged","postCodeChanged","addressChanged","notesChanged","passportChanged","passport2Changed","certificateChanged","antiBodyTestChanged","handleEditModeChanged","forenameCapital","surnameCapital","toUpperCase","birthDate","phone","passportNumber","passportNumber2","booking","bookingId","_id","bookingRef","validateBooking","validateDate","str","error","charAt","test","year","parseInt","substr","month","day","err","hour","minute","validateTime","bookingService","then","res","RefreshPersonInfo","catch","console","log","Grid","container","direction","justify","foundRecords","map","index","status","panel","item","xs","md","isExpanded","AccordionSummary","expandIcon","aria-controls","AccordionDetails","hidden","disabled","dateFormat","inputProps","style","formControl","FileSaver","saveAs","Blob","data","isBoolean","param","TextMaskCustom","props","inputRef","other","inputElement","mask","showMask","Find","Clear","NoRecordsFound","FindByRef","initialFocus","focus","setFocus","onFocus","onBlur","useFocus","focusProps","useEffect","findRecords","clearField","refError","indexOf","submiting","CssBaseline","pattern","helperText","size","InputProps","inputComponent","refreshButton","RefLink","cursor","BookingTable","columns","field","headerName","valueGetter","params","getValue","renderCell","Tooltip","placement","currentMenuIndex","valueFormatter","pass2","trim","bookings","cachedBookings","isFetching","setData","setSelectedRow","filter","setFilter","refresh","setRefresh","api","date","forEach","element","filteredData","height","timeout","rows","autoPageSize","onSelectionChange","newSelection","Title","gutterBottom","children","createData","time","amount","undefined","Chart","useTheme","top","right","bottom","left","dataKey","stroke","angle","textAnchor","fill","primary","dot","depositContext","flex","Deposits","dateformat","shipTo","paymentMethod","seeMore","BookingView","Table","TableHead","TableRow","TableCell","TableBody","row","timeStamp","overflow","fixedHeight","DashboardPreview","fixedHeightPaper","lg","Paper","selectedIndex","setSelectedIndex","handleListItemClick","List","ListItem","button","selected","ListItemIcon","ListItemText","toolbar","toolbarIcon","justifyContent","mixins","zIndex","drawer","transition","transitions","easing","sharp","duration","leavingScreen","appBarShift","enteringScreen","menuButton","menuButtonHidden","flexGrow","drawerPaper","whiteSpace","drawerPaperClose","overflowX","breakpoints","up","appBarSpacer","content","paddingTop","paddingBottom","Dashboard","open","setOpen","setCurrentMenuIndex","edge","ExitToAppOutlined","Drawer","Divider","Error","getContentFromMenuIndex","pt","signOutButton","Navigator","App","Provider","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c04149c6.chunk.js","sourcesContent":["const { TouchApp } = require(\"@material-ui/icons\");\r\n\r\n\r\nconst calculatePrice = (person) =>\r\n{\r\n\r\n    var price = 199;\r\n    \r\n    if (person.certificate)\r\n    {\r\n        price += 50;\r\n    }\r\n\r\n    if (person.antiBodyTest)\r\n    {\r\n        price += 99;\r\n    }\r\n\r\n    return price;\r\n\r\n}\r\n\r\nconst calculateTotalPrice = (persons) =>\r\n{\r\n    var totalPrice = 0;\r\n    for (var i = 0 ; i < persons.length ; i++)\r\n    {\r\n        totalPrice += calculatePrice(persons[i]);\r\n    }\r\n\r\n    return totalPrice;\r\n}\r\n\r\nmodule.exports = {\r\n    calculatePrice : calculatePrice,\r\n    calculateTotalPrice : calculateTotalPrice\r\n}","import React from 'react'; \r\nconst GlobalState = React.createContext([{}, () => {}]); \r\nexport default GlobalState;","import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Link from '@material-ui/core/Link';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport GlobalState from './GlobalState';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport { AppBar, Checkbox, FormControl, FormControlLabel, InputAdornment, InputLabel, OutlinedInput } from '@material-ui/core';\r\nimport { IconButton, Toolbar } from '@material-ui/core';\r\nimport { Visibility, VisibilityOff } from '@material-ui/icons';\r\nimport clsx from 'clsx';\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"#\">\r\n        Medical Express Clinic\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n    root: {\r\n        width: '100%',\r\n        '& > * + *': {\r\n          marginTop: theme.spacing(2),\r\n        },\r\n\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n      },  \r\n\r\n      margin: {\r\n        marginTop: theme.spacing(2),\r\n        marginBottom: theme.spacing(2),\r\n      },\r\n\r\n      paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        flexWrap: 'wrap',\r\n    },\r\n\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n\r\n    RememberMe:{\r\n      textAlign: \"left\"\r\n    },\r\n\r\n    appBar: {\r\n      position: 'static',\r\n      // backgroundColor: \"#333\",\r\n      // color: \"#fff\",\r\n      alignItems: 'center'\r\n  \r\n    },\r\n}));\r\n\r\nexport default function SignIn() {\r\n  const classes = useStyles();\r\n  const [state, setState] = React.useContext(GlobalState);\r\n\r\n  const [password, setPassword] = React.useState(\r\n    localStorage.getItem('pcr-admin-password') || ''\r\n  );\r\n\r\n  const [username, setUsername] = React.useState(\r\n    localStorage.getItem('pcr-admin-username') || ''\r\n  );\r\n\r\n  const [saveChecked, setSaveChecked] = React.useState(\r\n    localStorage.getItem('pcr-admin-username') ? true : false\r\n  ); \r\n\r\n\r\n  const signIn = () => {\r\n    if (username && password && username.toLowerCase() === 'admin' && password === 'pcr$321')\r\n    {\r\n        setState(state => ({...state, signedIn : true }));\r\n        if (saveChecked)\r\n        {\r\n           localStorage.setItem('pcr-admin-username', username);\r\n           localStorage.setItem('pcr-admin-password', password);\r\n        }else{\r\n          localStorage.removeItem('pcr-admin-username');\r\n          localStorage.removeItem('pcr-admin-password');\r\n        }\r\n\r\n    }else\r\n    {\r\n        setState(state => ({...state, signedInError : true }));\r\n    }\r\n  }\r\n\r\n  const usernameChanged = (event) =>\r\n  {\r\n      setUsername(event.target.value);\r\n      setState(state => ({...state, signedInError : false }));\r\n  }\r\n\r\n  const passwordChanged = (event) =>\r\n  {\r\n      setPassword(event.target.value);\r\n      setState(state => ({...state, signedInError : false }));\r\n  }\r\n\r\n  const handleClickShowPassword = () => {\r\n    setState(state => ({...state, showPassword : !state.showPassword }));\r\n  };\r\n\r\n  const handleMouseDownPassword = (event) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  const saveCheckedChanged = (event) =>\r\n  {\r\n    setSaveChecked(event.target.checked);\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n        <AppBar position=\"absolute\" color=\"primary\" className={classes.appBar}>\r\n                <Toolbar>\r\n                    <Typography variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\r\n                          PCR Booking Admin Console\r\n                    </Typography>\r\n                </Toolbar>\r\n            </AppBar>\r\n          <Container component=\"main\" maxWidth=\"xs\">\r\n\r\n\r\n\r\n            <div className={classes.paper}>\r\n              <Avatar className={classes.avatar}>\r\n                <LockOutlinedIcon />\r\n              </Avatar>\r\n              <Typography component=\"h1\" variant=\"h5\">\r\n                Sign in\r\n              </Typography>\r\n              <form className={classes.form} noValidate>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  value={username}\r\n                  onChange={usernameChanged}\r\n                  margin=\"normal\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"usrname\"\r\n                  label=\"Username\"\r\n                  name=\"username\"\r\n                  autoComplete=\"username\"\r\n                  autoFocus\r\n                />\r\n\r\n              <FormControl \r\n                              fullWidth \r\n                              required \r\n                              className={clsx(classes.margin, classes.textField)} \r\n                              variant=\"outlined\"\r\n                              onKeyPress= {event => {\r\n                                if (event.key === 'Enter') {\r\n                                  signIn();\r\n                                }\r\n                              }}\r\n                              \r\n                              >\r\n                  <InputLabel htmlFor=\"outlined-adornment-password\">Password</InputLabel>\r\n                  <OutlinedInput\r\n                    id=\"outlined-adornment-password\"\r\n                    name=\"outlined-adornment-password\"\r\n                    type={state.showPassword ? 'text' : 'password'}\r\n                    value={password}\r\n                    onChange={passwordChanged}\r\n                    endAdornment={\r\n                      <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                          aria-label=\"toggle password visibility\"\r\n                          onClick={handleClickShowPassword}\r\n                          onMouseDown={handleMouseDownPassword}\r\n                        >\r\n                          {state.showPassword ? <Visibility /> : <VisibilityOff />}\r\n                        </IconButton>\r\n                      </InputAdornment>\r\n                    }\r\n                    labelWidth={100}\r\n                  />\r\n                </FormControl>\r\n              \r\n              <div align=\"left\">\r\n                  <FormControlLabel className={classes.RememberMe}\r\n                      control={<Checkbox value=\"remember\" color=\"primary\" checked={saveChecked} onChange={saveCheckedChanged}  />}\r\n                      label=\"Save password on this device\"\r\n                    />\r\n              </div>\r\n\r\n\r\n\r\n\r\n                <Button\r\n                  type=\"button\"\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  onClick = {signIn}\r\n                  onTouchTap = {signIn}\r\n                  className={classes.submit}\r\n                >\r\n                  Sign In\r\n                </Button>\r\n\r\n\r\n              </form>\r\n            </div>\r\n\r\n            {state.signedInError && (\r\n                <div className={classes.root}>\r\n                    <Alert fullWidth severity=\"error\">Invalid Username or Password. Please try again.</Alert>\r\n                </div> \r\n            )}\r\n\r\n            <Box mt={8}>\r\n              <Copyright />\r\n            </Box>\r\n          </Container>\r\n\r\n    </React.Fragment>\r\n\r\n    \r\n  );\r\n}","import axios from 'axios';\r\n\r\nexport default axios.create({\r\n  // baseURL: 'http://localhost:9090',\r\n  baseURL: 'https://www.travelpcrtest.com',\r\n  headers : {\r\n      'Authorization' : 'Basic QXp1cmXEaWFtb45kOmh1bnRlcjO='\r\n  }\r\n});","import API from './api';\r\n\r\nexport default class BookService {\r\n\r\n   static updateBooking = (payload) =>\r\n   {\r\n      return API.post(`/api/book/updatebookappointment`, payload);\r\n   } \r\n   \r\n    static getBookingsByRef = (ref) =>\r\n    {\r\n       return API.get(`/api/book/getbookingsbyref?ref=${ref}`);\r\n    }\r\n\r\n    static getAllBookings= () =>\r\n    {\r\n       return API.get(`/api/book/getallbookings`);\r\n    }\r\n\r\n    static getTodayBookings= () =>\r\n    {\r\n       return API.get(`/api/book/gettodaybookings`);\r\n    }\r\n\r\n    static getOldBookings= () =>\r\n    {\r\n       return API.get(`/api/book/getoldbookings`);\r\n    }\r\n\r\n    static getFutureBookings= () =>\r\n    {\r\n       return API.get(`/api/book/getfuturebookings`);\r\n    }\r\n\r\n    static getRecentBookings= () =>\r\n    {\r\n       return API.get(`/api/book/getrecentbookings`);\r\n    }\r\n\r\n    static getRecentBookingsAll= () =>\r\n    {\r\n       return API.get(`/api/book/getrecentbookingsall`);\r\n    }\r\n\r\n}","import API from './api';\r\n\r\nexport default class PDFService {\r\n\r\n    static downloadCovidForm1 = (id) =>\r\n    {\r\n       return API.get(`/api/pdf/downloadcovidform1?id=${id}`, {\r\n        responseType: 'arraybuffer',\r\n        id: id,\r\n        headers: {\r\n            Accept: 'application/pdf',\r\n        }\r\n        });\r\n    }\r\n\r\n    static downloadCovidForm2 = (id) =>\r\n    {\r\n       return API.get(`/api/pdf/downloadcovidform2?id=${id}`, {\r\n        responseType: 'arraybuffer',\r\n        headers: {\r\n            Accept: 'application/pdf',\r\n        }\r\n        });\r\n    }\r\n\r\n    static downloadPdfResult = (id) =>\r\n    {\r\n       return API.get(`/api/pdf/downloadpdfresult?id=${id}`, {\r\n        responseType: 'arraybuffer',\r\n        headers: {\r\n            Accept: 'application/pdf',\r\n        }\r\n        });\r\n    }\r\n\r\n    static downloadPdfCert = (id) =>\r\n    {\r\n       return API.get(`/api/pdf/downloadpdfcert?id=${id}`, {\r\n        responseType: 'arraybuffer',\r\n        headers: {\r\n            Accept: 'application/pdf',\r\n        }\r\n        });\r\n    }\r\n\r\n\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport GlobalState from './GlobalState';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport dateFormat from 'dateformat';\r\nimport { Button, Checkbox, FormControlLabel, Link, TextField } from '@material-ui/core';\r\nimport PDFService from './services/PDFService';\r\n\r\nimport {calculatePrice} from './PriceCalculator';\r\n\r\nimport FileSaver from 'file-saver';\r\n\r\nimport bookingService from './services/BookService';\r\nimport { CheckBox } from '@material-ui/icons';\r\nimport { parse } from 'date-fns';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  box: {\r\n    backgroundColor : \"#373737\",\r\n    color: \"#fff\",\r\n    padding : \"1px\",\r\n    borderRadius : \"4px\",\r\n    textAlign: \"justify\",\r\n    paddingRight: \"40px\"\r\n  },\r\n\r\n  boxRed: {\r\n    backgroundColor : \"#dc2626\",\r\n    color: \"#fff\",\r\n    padding : \"1px\",\r\n    borderRadius : \"4px\",\r\n    textAlign: \"justify\",\r\n    paddingRight: \"40px\"\r\n  },\r\n\r\n  boxInfo: {\r\n    textAlign: \"justify\",\r\n    backgroundColor : \"#fafafa\",\r\n    color: \"#333\",\r\n    padding : \"1px\",\r\n    borderRadius : \"4px\",\r\n    paddingRight: \"40px\",\r\n    border: \"1px solid #eee\",\r\n  },\r\n\r\n  ul: {\r\n     listStyle: \"none\",\r\n     padding: \"0\",\r\n     margin: \"0\"\r\n  },\r\n\r\n  li: {\r\n    marginBottom : \"15px\"\r\n  },\r\n\r\n\r\n  icon: {\r\n    marginRight : \"8px\"\r\n  },\r\n\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    flexBasis: '33.33%',\r\n    flexShrink: 0,\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n\r\n  infoDetails:{\r\n    textAlign: \"left\",\r\n  },\r\n\r\n  infoTitle:{\r\n    fontWeight: \"800\",\r\n    marginRight: \"10px\"\r\n  },\r\n\r\n  infoData:{\r\n    fontWeight: \"400\",\r\n  },\r\n\r\n  title:\r\n  {\r\n    // textAlign : \"center\",\r\n    // fontWeight : \"500\",\r\n    // margin: \"10px\",\r\n    // backgroundColor : \"#eee\",\r\n    // padding : \"10px\",\r\n    // borderRadius : \"4px\"\r\n    textAlign: \"center\",\r\n    fontWeight : \"600\",\r\n    marginLeft: \"10px\",\r\n    marginBottom: \"5px\"\r\n\r\n  },\r\n\r\n  Accordion:{\r\n    backgroundColor : \"#f5f5f5\",\r\n    color: \"#222\"\r\n  },\r\n\r\n  DownloadForm:{\r\n      marginTop: \"10px\",\r\n      marginBottom : \"10px\"\r\n  },\r\n\r\n  infoDataCharges:{\r\n    fontSize : \"18px\",\r\n    color: \"green\",\r\n    fontWeight : \"600\"\r\n  },\r\n\r\n  infoDataChargesHigher:{\r\n    fontSize : \"18px\",\r\n    color: \"red\",\r\n    fontWeight : \"600\"\r\n  },\r\n  BookedLabel:{\r\n    backgroundColor: \"#606060\",\r\n    color: \"#fff\",\r\n    paddingRight: \"10px\",\r\n    paddingLeft: \"10px\"\r\n  },\r\n\r\n  PatientAttendedLabel:{\r\n    backgroundColor: \"#0066aa\",\r\n    color: \"#fff\",\r\n    paddingRight: \"15px\",\r\n    paddingLeft: \"10px\"\r\n  },\r\n\r\n  SampleTakenLabel:{\r\n    backgroundColor: \"#0066cc\",\r\n    color: \"#fff\",\r\n    paddingRight: \"40px\",\r\n    paddingLeft: \"10px\"\r\n  },\r\n\r\n  ReportSentLabel:{\r\n    backgroundColor: \"#009900\",\r\n    color: \"#fff\",\r\n    paddingRight: \"90px\",\r\n    paddingLeft: \"10px\"\r\n  },\r\n\r\n  ReportCertSentLabel:{\r\n    backgroundColor: \"#009900\",\r\n    color: \"#fff\",\r\n    paddingRight: \"68px\",\r\n    paddingLeft: \"10px\"\r\n  },\r\n\r\n  EditButton:\r\n  {\r\n    marginBottom : \"20px\",\r\n    backgroundColor : \"#2f942e\",\r\n    \"&:hover\": {\r\n      background: \"green\",\r\n      color: \"#fff\"\r\n    },\r\n\r\n    padding: \"10px\"\r\n\r\n    \r\n  },\r\n\r\n  SaveButton:\r\n  {\r\n    marginBottom : \"10px\",\r\n    padding: \"10px\",\r\n\r\n    backgroundColor : \"#d1175e\",\r\n    \"&:hover\": {\r\n      background: \"#bd0d50\",\r\n      color: \"#fff\"\r\n    },\r\n\r\n  },\r\n\r\n  CancelButton:\r\n  {\r\n    marginBottom : \"20px\",\r\n    // padding: \"10px\"\r\n  },\r\n\r\n  TextBox: {\r\n    \r\n    padding : \"0px\"\r\n\r\n  },\r\n\r\n  checkIcon:{\r\n    color: \"green\",   \r\n  },\r\n\r\n  closeIcon:{\r\n    color: \"red\"\r\n  },\r\n\r\n  centeredLabel : {\r\n    display: \"flex\",\r\n    alignItems: \"center\"\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n}));\r\n\r\n\r\n\r\n\r\nexport default function PersonsBox() {\r\n    const classes = useStyles();\r\n\r\n    const [state, setState] = React.useContext(GlobalState);\r\n\r\n    const [expanded, setExpanded] = React.useState(false);\r\n\r\n    const [editMode, setEditMode] = React.useState({edit : false, person : null});\r\n\r\n    const [saving, setSaving] =  React.useState(false);\r\n\r\n    const [validationError, setValidationError] = React.useState({});\r\n\r\n\r\n    const [bookingDate, setBookingDate] = React.useState('');\r\n    const [bookingTime, setBookingTime] = React.useState('');\r\n\r\n    const [gender, setGender] = React.useState('');\r\n    const [title, setTitle] = React.useState('');\r\n    const [forename, setForename] = React.useState('');\r\n    const [surname, setSurnme] = React.useState('');\r\n    const [email, setEmail] = React.useState('');\r\n    const [dob, setDOB] = React.useState('');\r\n    const [tel, setTel] = React.useState('');\r\n    const [postCode, setPostCode] = React.useState('');\r\n    const [address, setAddress] = React.useState('');\r\n    const [notes, setNotes] = React.useState('');\r\n    const [passport, setPassport] = React.useState('');\r\n    const [passport2, setPassport2] = React.useState('');\r\n    const [certificate, setCertificate] = React.useState(false);\r\n    const [antiBodyTest, setAntiBodyTest] = React.useState(false);\r\n\r\n\r\n    const bookingDateChanged = (event) =>\r\n    {\r\n      setBookingDate(event.target.value);\r\n      setValidationError({...validationError, bookingDateError : false});\r\n    }\r\n\r\n    const bookingTimeChanged = (event) =>\r\n    {\r\n      setBookingTime(event.target.value);\r\n      setValidationError({...validationError, bookingTimeError : false});\r\n    }\r\n\r\n    const genderChanged = (event) =>\r\n    {\r\n      setGender(event.target.value);\r\n    }\r\n\r\n    const titleChanged = (event) =>\r\n    {\r\n      setTitle(event.target.value);\r\n    }\r\n\r\n    const forenameChanged = (event) =>\r\n    {\r\n      setForename(event.target.value);\r\n    }\r\n\r\n    const surnameChanged = (event) =>\r\n    {\r\n      setSurnme(event.target.value);\r\n    }\r\n\r\n    const emailChanged = (event) =>\r\n    {\r\n      setEmail(event.target.value);\r\n    }\r\n\r\n    const dobChanged = (event) =>\r\n    {\r\n      setDOB(event.target.value);\r\n      setValidationError({...validationError, dobError : false});\r\n    }\r\n\r\n    const telChanged = (event) =>\r\n    {\r\n      setTel(event.target.value);\r\n    }\r\n\r\n    const postCodeChanged = (event) =>\r\n    {\r\n      setPostCode(event.target.value);\r\n    }\r\n\r\n    const addressChanged = (event) =>\r\n    {\r\n      setAddress(event.target.value);\r\n    }\r\n\r\n    const notesChanged = (event) =>\r\n    {\r\n      setNotes(event.target.value);\r\n    }\r\n\r\n    const passportChanged = (event) =>\r\n    {\r\n      setPassport(event.target.value);\r\n    }\r\n\r\n    const passport2Changed = (event) =>\r\n    {\r\n      setPassport2(event.target.value);\r\n    }\r\n\r\n    const certificateChanged = (event) =>\r\n    {\r\n      setCertificate(event.target.checked);\r\n    }\r\n\r\n    const antiBodyTestChanged = (event) =>\r\n    {\r\n      setAntiBodyTest(event.target.checked);\r\n    }\r\n\r\n\r\n    const handleChange = (panel) => (event, isExpanded) => {\r\n      setExpanded(isExpanded ? panel : false);\r\n    };\r\n\r\n    const getStatusLabel = (status) => {\r\n      if (status === 'booked')\r\n      {\r\n        return (\r\n          <span className={classes.BookedLabel}> Booking Made </span>\r\n        );\r\n    \r\n      }else if (status === 'patient_attended')\r\n      {\r\n        return (\r\n          <span  className={classes.PatientAttendedLabel}> Patient Attended </span>\r\n        );\r\n    \r\n      }else if (status === 'sample_taken')\r\n      {\r\n        return (\r\n          <span  className={classes.SampleTakenLabel}> Sample Taken </span>\r\n        );\r\n    \r\n      }else if (status === 'report_sent')\r\n      {\r\n        return (\r\n          <span  className={classes.ReportSentLabel}> Report Sent </span>\r\n        );\r\n    \r\n      }else if (status === 'report_cert_sent')\r\n      {\r\n        return (\r\n          <span  className={classes.ReportCertSentLabel}> {`Rpt & Cert Sent`} </span>\r\n        );\r\n    \r\n      }else{\r\n        return 'Unknown';\r\n      }\r\n    }\r\n\r\n   const downloadForm1 = (id) =>\r\n   {\r\n       PDFService.downloadCovidForm1(id).then( (res) => \r\n       {\r\n            FileSaver.saveAs(\r\n            new Blob([res.data], { type: 'application/pdf' }),\r\n              `pcr-reg-form-${id}.pdf`\r\n          );\r\n\r\n       }).catch( (err) =>\r\n       {\r\n           console.log(err);\r\n       });\r\n   }\r\n\r\n   const downloadForm2 = (id) =>\r\n   {\r\n        PDFService.downloadCovidForm2(id).then( (res) => \r\n        {\r\n            FileSaver.saveAs(\r\n            new Blob([res.data], { type: 'application/pdf' }),\r\n            `pcr-clinic-form-${id}.pdf`\r\n        );\r\n\r\n        }).catch( (err) =>\r\n        {\r\n            console.log(err);\r\n        });\r\n   }\r\n\r\n   const downloadLabResults = (id) =>\r\n   {\r\n        PDFService.downloadPdfResult(id).then( (res) => \r\n        {\r\n            FileSaver.saveAs(\r\n            new Blob([res.data], { type: 'application/pdf' }),\r\n            `lab-result-${id}.pdf`\r\n        );\r\n\r\n        }).catch( (err) =>\r\n        {\r\n            console.log(err);\r\n        });\r\n   }\r\n\r\n   const downloadCertificate = (id) =>\r\n   {\r\n        PDFService.downloadPdfCert(id).then( (res) => \r\n        {\r\n            FileSaver.saveAs(\r\n            new Blob([res.data], { type: 'application/pdf' }),\r\n            `certificate-${id}.pdf`\r\n        );\r\n\r\n        }).catch( (err) =>\r\n        {\r\n            console.log(err);\r\n        });\r\n   }\r\n\r\n   const handleEditModeChanged = (edit, person) => {\r\n\r\n       if (edit)\r\n       {\r\n         setForename(person.forenameCapital);\r\n         setSurnme(person.surnameCapital);\r\n         setBookingDate(person.bookingDate);\r\n         setBookingTime(person.bookingTime.toUpperCase());\r\n         setGender(person.gender.toUpperCase());\r\n         setTitle(person.title.toUpperCase());\r\n         setEmail(person.email.toUpperCase());\r\n         setDOB(person.birthDate);\r\n         setTel(person.phone.toUpperCase());\r\n         setPostCode(person.postCode.toUpperCase());\r\n         setAddress(person.address.toUpperCase());\r\n         if (person.notes)\r\n         {\r\n          setNotes(person.notes.toUpperCase());\r\n         }\r\n        \r\n         if (person.passportNumber)\r\n         {\r\n           setPassport(person.passportNumber.toUpperCase());\r\n         }\r\n        \r\n         if (person.passportNumber2)\r\n         {\r\n           setPassport2(person.passportNumber2.toUpperCase());\r\n         }\r\n        \r\n         setCertificate(person.certificate);\r\n         setAntiBodyTest(person.antiBodyTest);\r\n\r\n         setEditMode({edit: edit, person: person});\r\n\r\n       }\r\n       else if (!edit && !person)\r\n       {\r\n         setEditMode({edit: edit, person: person});\r\n       }\r\n       else if (!edit && person)\r\n       {\r\n          const booking = {};\r\n          const bookingId = person._id;\r\n          booking.certificate = certificate;\r\n          booking.antiBodyTest = antiBodyTest;\r\n          booking.gender = gender;\r\n          booking.title = title;\r\n          booking.birthDate = dob;\r\n          booking.email = email;\r\n          booking.phone = tel;\r\n          booking.postCode = postCode;\r\n          booking.address = address;\r\n          booking.passportNumber = passport;\r\n          booking.passportNumber2 = passport2;\r\n          booking.forename = forename;\r\n          booking.surname = surname;\r\n          booking.notes = notes;\r\n          booking.bookingDate = bookingDate;\r\n          booking.bookingTime = bookingTime;\r\n          booking.bookingRef = person.bookingRef;\r\n\r\n          if  (validateBooking(booking))\r\n          {\r\n            updateBooking({bookingId: bookingId, person: booking});\r\n          }\r\n       }\r\n   }\r\n\r\n   const validateDate = (str) =>\r\n   {\r\n     var error = false;\r\n     if (!str || str.length !== 10)\r\n     {\r\n       error = true;\r\n     }\r\n\r\n     if (str.charAt(4) !== '-'  || str.charAt(7) !== '-')\r\n     {\r\n       error = true;\r\n     }\r\n\r\n     try\r\n     {\r\n       \r\n       const result = /^\\d{4}-\\d{2}-\\d{2}$/.test(str);\r\n       if (!result)\r\n       {\r\n          error = true;\r\n       }\r\n\r\n       const year = parseInt(str.substr(0,4));\r\n       const month = parseInt(str.substr(5,2));\r\n       const day = parseInt(str.substr(8,2));\r\n\r\n       if (year < 2020)\r\n       {\r\n          error = true;\r\n       }\r\n\r\n       if (month < 1 || month > 12)\r\n       {\r\n         error = true;\r\n       }        \r\n\r\n       if (day > 31)\r\n       {\r\n         error = true;\r\n       }\r\n\r\n     }catch(err)\r\n     {\r\n       error = true;\r\n     }\r\n\r\n\r\n\r\n     return !error;\r\n   }\r\n\r\n   const validateTime =(str) =>\r\n   {\r\n     var error = false;\r\n\r\n     const result = /^\\d{2}:\\d{2} AM$|^\\d{2}:\\d{2} PM$/.test(str);\r\n     if (!result)\r\n     {\r\n        error = true;\r\n     }\r\n\r\n     try{\r\n       const hour = parseInt(str.substr(0,2));\r\n       const minute = parseInt(str.substr(3,2));\r\n\r\n       if (hour < 0 || hour > 12)\r\n       {\r\n         error = true;\r\n       }\r\n\r\n       if (minute < 0 || minute > 59)\r\n       {\r\n         error = true;\r\n       }\r\n\r\n     }catch(err)\r\n     {\r\n       error = true;\r\n     }\r\n\r\n     return !error;\r\n   }\r\n\r\n   const validateBooking = (booking) =>\r\n   {\r\n      var error = false;\r\n\r\n      if (!validateDate(booking.bookingDate))\r\n      {\r\n        error = true;\r\n        setValidationError({...validationError, bookingDateError : true});\r\n      }\r\n\r\n      if (!validateDate(booking.birthDate))\r\n      {\r\n        error = true;\r\n        setValidationError({...validationError, dobError : true});\r\n      }\r\n\r\n      if (!validateTime(booking.bookingTime))\r\n      {\r\n        error = true;\r\n        setValidationError({...validationError, bookingTimeError : true});\r\n      }\r\n     \r\n\r\n      return !error;\r\n   }\r\n\r\n   const updateBooking = (payload) =>\r\n   {\r\n       setSaving(true);\r\n       bookingService.updateBooking(payload).then( (res) => {\r\n        setSaving(false);\r\n        setEditMode({edit: false, person: null});\r\n        setState(state => ({...state, RefreshPersonInfo : !state.RefreshPersonInfo}));\r\n\r\n       }).catch ( (err) => {\r\n         setSaving(false);\r\n         setEditMode({edit: false, person: null});\r\n         console.log(err);\r\n       });\r\n   }\r\n\r\n  return (\r\n    <React.Fragment>\r\n          \r\n      <Grid container direction=\"column\" spacing={1} justify=\"flex-start\"  alignItems=\"stretch\">\r\n          <div className={classes.title}> Following Records Found :</div>\r\n\r\n          {state.foundRecords.map((person,index) => (\r\n   \r\n                <Grid item xs={12} md={12} key={`panel${index}`}>\r\n                <div className={classes.root}>\r\n                    <Accordion className={classes.Accordion} expanded={expanded === `panel${index}`} onChange={handleChange(`panel${index}`)}>\r\n                    <AccordionSummary\r\n                        expandIcon={<ExpandMoreIcon />}\r\n                        aria-controls=\"panel1bh-content\"\r\n                        id={`panel${index}bh-header`}\r\n                    >\r\n                        <Typography className={classes.heading}> {`#${index+1}`} </Typography>\r\n                        <Typography className={classes.secondaryHeading}>\r\n                        {`${person.forenameCapital} ${person.surnameCapital}`}\r\n                        </Typography>\r\n                    </AccordionSummary>\r\n                    <AccordionDetails className={classes.infoDetails}>\r\n                        \r\n                        <ul className={classes.ul}>\r\n\r\n                            <li hidden={(editMode.edit && editMode.person._id === person._id)}>\r\n                                 <Button\r\n                                    type=\"button\"\r\n                                    fullWidth\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    onClick = {() => {handleEditModeChanged(true, person)}}\r\n                                    className={classes.EditButton}\r\n                                 >\r\n                                    Edit Booking Info\r\n                                </Button>\r\n                            </li>\r\n\r\n                            <li hidden={!(editMode.edit && editMode.person._id  === person._id)}>\r\n                                 <Button\r\n                                    type=\"button\"\r\n                                    fullWidth\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    disabled = {saving}\r\n                                    onClick = {() => {handleEditModeChanged(false, person)}}\r\n                                    className={classes.SaveButton}\r\n                                 >\r\n                                    Save Changes\r\n                                </Button>\r\n                            </li>\r\n\r\n                            <li hidden={!(editMode.edit && editMode.person._id === person._id)}>\r\n                                 <Button\r\n                                    type=\"button\"\r\n                                    fullWidth\r\n                                    variant=\"contained\"\r\n                                    color=\"default\"\r\n                                    disabled = {saving}\r\n                                    onClick = {() => {handleEditModeChanged(false, null)}}\r\n                                    className={classes.CancelButton}\r\n                                 >\r\n                                    Cancel\r\n                                </Button>\r\n                            </li>\r\n\r\n\r\n                            <li className={classes.li}>\r\n                                <span className={classes.infoTitle}>BOOKED DATE</span> \r\n                            \r\n\r\n                                <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{dateFormat(new Date(person.bookingDate),'dd mmm yyyy').toUpperCase() }</span>  \r\n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\r\n                                          <TextField \r\n                                                      error={validationError.bookingDateError}\r\n                                                      className={classes.TextBox} \r\n                                                      value={bookingDate}\r\n                                                      onChange = {bookingDateChanged}\r\n                                                      inputProps= {{\r\n                                                          style:{\r\n                                                            padding: 0\r\n                                                          }\r\n                                                        }\r\n                                                      }\r\n                                                      > \r\n                                          </TextField> \r\n                                        </span> \r\n\r\n\r\n                            </li>\r\n\r\n                            <li className={classes.li}>\r\n                                <span className={classes.infoTitle}>BOOKED TIME</span> \r\n                                <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.bookingTime.toUpperCase()}</span>  \r\n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\r\n                                          <TextField \r\n                                                       error={validationError.bookingTimeError}\r\n                                                      className={classes.TextBox} \r\n                                                      value={bookingTime}\r\n                                                      onChange = {bookingTimeChanged}\r\n                                                      inputProps= {{\r\n                                                          style:{\r\n                                                            padding: 0\r\n                                                          }\r\n                                                        }\r\n                                                      }\r\n                                                      > \r\n                                          </TextField> \r\n                                        </span> \r\n\r\n\r\n                            </li>\r\n\r\n                            <li className={classes.li}>\r\n                            <span className={classes.infoTitle}>GENDER</span> \r\n                                        <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.gender?.toUpperCase()}</span>  \r\n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\r\n                                          <TextField \r\n                                                      className={classes.TextBox} \r\n                                                      value={gender}\r\n                                                      onChange = {genderChanged}\r\n                                                      inputProps= {{\r\n                                                          style:{\r\n                                                            padding: 0\r\n                                                          }\r\n                                                        }\r\n                                                      }\r\n                                                      > \r\n                                          </TextField> \r\n                                        </span> \r\n                            </li>\r\n                            <li className={classes.li}>\r\n                            <span className={classes.infoTitle}>TITLE</span> \r\n                                       <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.title?.toUpperCase()}</span>  \r\n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\r\n                                          <TextField \r\n                                                      className={classes.TextBox} \r\n                                                      value={title}\r\n                                                      onChange = {titleChanged}\r\n                                                      inputProps= {{\r\n                                                          style:{\r\n                                                            padding: 0\r\n                                                          }\r\n                                                        }\r\n                                                      }\r\n                                                      > \r\n                                          </TextField> \r\n                                        </span> \r\n                             \r\n                            </li>\r\n                            <li className={classes.li}>\r\n                            <span className={classes.infoTitle}>FORENAME</span> \r\n                                        <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.forenameCapital}</span>  \r\n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\r\n                                        <TextField \r\n                                                      className={classes.TextBox} \r\n                                                      value={forename}\r\n                                                      onChange = {forenameChanged}\r\n                                                      inputProps= {{\r\n                                                          style:{\r\n                                                            padding: 0\r\n                                                          }\r\n                                                        }\r\n                                                      }\r\n                                                      > \r\n                                          </TextField> \r\n                                        </span> \r\n                            </li>\r\n                            <li className={classes.li}>\r\n                                <span className={classes.infoTitle}>SURNAME</span>\r\n                                        <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.surnameCapital}</span>  \r\n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\r\n                                        <TextField \r\n                                                      className={classes.TextBox} \r\n                                                      value={surname}\r\n                                                      onChange = {surnameChanged}\r\n                                                      inputProps= {{\r\n                                                          style:{\r\n                                                            padding: 0\r\n                                                          }\r\n                                                        }\r\n                                                      }\r\n                                                      > \r\n                                          </TextField> \r\n                                        </span>   \r\n                            </li>\r\n                            <li className={classes.li}>\r\n                                <span className={classes.infoTitle}>EMAIL</span> \r\n                                       <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.email?.toUpperCase()}</span>  \r\n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\r\n                                        <TextField \r\n                                                      className={classes.TextBox} \r\n                                                      value={email}\r\n                                                      onChange = {emailChanged}\r\n                                                      inputProps= {{\r\n                                                          style:{\r\n                                                            padding: 0\r\n                                                          }\r\n                                                        }\r\n                                                      }\r\n                                                      > \r\n                                          </TextField> \r\n                                        </span>   \r\n                            </li>\r\n                            <li className={classes.li}>\r\n                                <span className={classes.infoTitle}>D.O.B</span>\r\n                                        <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{dateFormat(new Date(person.birthDate),'dd mmm yyyy').toUpperCase() }</span>  \r\n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\r\n                                        <TextField \r\n                                                      error={validationError.dobError} \r\n                                                      className={classes.TextBox} \r\n                                                      value={dob}\r\n                                                      onChange = {dobChanged}\r\n                                                      inputProps= {{\r\n                                                          style:{\r\n                                                            padding: 0\r\n                                                          }\r\n                                                        }\r\n                                                      }\r\n                                                      > \r\n                                          </TextField> \r\n                                        </span>   \r\n                            </li>\r\n                            <li className={classes.li}>\r\n                                <span className={classes.infoTitle}>TEL</span>\r\n                                 <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.phone?.toUpperCase()}</span>  \r\n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\r\n                                        <TextField \r\n                                                      className={classes.TextBox} \r\n                                                      value={tel}\r\n                                                      onChange = {telChanged}\r\n                                                      inputProps= {{\r\n                                                          style:{\r\n                                                            padding: 0\r\n                                                          }\r\n                                                        }\r\n                                                      }\r\n                                                      > \r\n                                          </TextField> \r\n                                        </span>  \r\n                            </li>\r\n                            <li className={classes.li}>\r\n                                <span className={classes.infoTitle}>POST CODE</span> \r\n                                        <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.postCode?.toUpperCase()}</span>  \r\n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\r\n                                        <TextField \r\n                                                      className={classes.TextBox} \r\n                                                      value={postCode}\r\n                                                      onChange = {postCodeChanged}\r\n                                                      inputProps= {{\r\n                                                          style:{\r\n                                                            padding: 0\r\n                                                          }\r\n                                                        }\r\n                                                      }\r\n                                                      > \r\n                                          </TextField> \r\n                                        </span>  \r\n                            </li>\r\n                            <li className={classes.li}>\r\n                                <span className={classes.infoTitle}>ADDRESS</span> \r\n                                        <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.address?.toUpperCase()}</span>  \r\n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\r\n                                        <TextField \r\n                                                      className={classes.TextBox} \r\n                                                      value={address}\r\n                                                      onChange = {addressChanged}\r\n                                                      inputProps= {{\r\n                                                          style:{\r\n                                                            padding: 0\r\n                                                          }\r\n                                                        }\r\n                                                      }\r\n                                                      > \r\n                                          </TextField> \r\n                                        </span>  \r\n                            </li>\r\n                            <li className={classes.li}>\r\n                                <span className={classes.infoTitle}>NOTES</span> \r\n                                        <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.notes?.toUpperCase()}</span>  \r\n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\r\n                                        <TextField \r\n                                                      className={classes.TextBox} \r\n                                                      value={notes}\r\n                                                      onChange = {notesChanged}\r\n                                                      inputProps= {{\r\n                                                          style:{\r\n                                                            padding: 0\r\n                                                          }\r\n                                                        }\r\n                                                      }\r\n                                                      > \r\n                                          </TextField> \r\n                                        </span>   \r\n                            </li>\r\n                            <li className={classes.li}>\r\n                                <span className={classes.infoTitle}>PASSPORT NO.</span>\r\n                                <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.passportNumber?.toUpperCase()}</span>  \r\n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\r\n                                        <TextField \r\n                                                      className={classes.TextBox} \r\n                                                      value={passport}\r\n                                                      onChange = {passportChanged}\r\n                                                      inputProps= {{\r\n                                                          style:{\r\n                                                            padding: 0\r\n                                                          }\r\n                                                        }\r\n                                                      }\r\n                                                      > \r\n                                          </TextField> \r\n                                        </span>  \r\n                            </li>\r\n\r\n                            <li className={classes.li}>\r\n                                <span className={classes.infoTitle}>SECOND PASSPORT NO.</span> \r\n                                        <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.passportNumber2?.toUpperCase()}</span>  \r\n                                        <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\r\n                                        <TextField \r\n                                                      className={classes.TextBox} \r\n                                                      value={passport2}\r\n                                                      onChange = {passport2Changed}\r\n                                                      inputProps= {{\r\n                                                          style:{\r\n                                                            padding: 0\r\n                                                          }\r\n                                                        }\r\n                                                      }\r\n                                                      > \r\n                                          </TextField> \r\n                                        </span>   \r\n                            </li>\r\n\r\n                            <li className={classes.li}>\r\n                                <span className={classes.infoTitle}>REQUEST FOR CERTIFICATE</span> \r\n                                <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.certificate ? ( <CheckIcon className={classes.checkIcon}/> ) :  <CloseIcon className={classes.closeIcon}/> }</span>\r\n                                <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\r\n                                    <FormControlLabel className={classes.formControl} \r\n                                          control={<Checkbox className={classes.formControl}  color=\"secondary\" name=\"certificate\" checked={certificate} onChange={certificateChanged} />}\r\n                                          label=''\r\n                                        />\r\n                                </span>    \r\n                            </li>\r\n                            <li className={classes.li}>\r\n                                <span className={classes.infoTitle}>REQUEST FOR ANTIBODY TEST</span>\r\n                                <span hidden={(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>{person.antiBodyTest ? <CheckIcon className={classes.checkIcon}/> :  <CloseIcon className={classes.closeIcon}/> }</span>  \r\n                                <span hidden={!(editMode.edit && editMode.person._id  === person._id)} className={classes.infoData}>\r\n                                    <FormControlLabel className={classes.formControl} \r\n                                          control={<Checkbox className={classes.formControl}  color=\"secondary\" name=\"certificate\" checked={antiBodyTest} onChange={antiBodyTestChanged} />}\r\n                                          label=''\r\n                                        />\r\n                                </span>   \r\n                            </li>\r\n                            <li className={classes.li}>\r\n                                <span className={classes.infoTitle}>STATUS</span> {getStatusLabel(person.status)} \r\n                            </li>\r\n      \r\n                            <li className={classes.li}>\r\n                                <span className={classes.infoTitle}>TOTAL CHARGES</span> <span className={calculatePrice(person) <= 199 ? classes.infoDataCharges : classes.infoDataChargesHigher}>{`£${calculatePrice(person)}`}</span>  \r\n                            </li>\r\n\r\n                            <li >\r\n                                 <Button\r\n                                    type=\"button\"\r\n                                    fullWidth\r\n                                    variant=\"outlined\"\r\n                                    color=\"primary\"\r\n                                    onClick = {() => {downloadForm1(person._id)}}\r\n                                    // onTouchTap = {() => {downloadForm1(person._id)}}\r\n                                    className={classes.DownloadForm}\r\n                                 >\r\n                                    Download Registration Form\r\n                                </Button>\r\n                            </li>\r\n\r\n                            <li>\r\n                                  <Button\r\n                                    type=\"button\"\r\n                                    fullWidth\r\n                                    variant=\"outlined\"\r\n                                    color=\"primary\"\r\n                                    onClick = {() => {downloadForm2(person._id)}}\r\n                                    // onTouchTap = {() => {downloadForm2(person._id)}}\r\n                                    className={classes.DownloadForm}\r\n                                    >\r\n                                    Download Lab Form\r\n                                 </Button>\r\n                            </li>\r\n\r\n                            <li hidden={person.status !== 'report_sent' && person.status !== 'report_cert_sent' }>\r\n                                 <Button\r\n                                    type=\"button\"\r\n                                    fullWidth\r\n                                    variant=\"outlined\"\r\n                                    color=\"primary\"\r\n                                    onClick = {() => {downloadLabResults(person._id)}}\r\n                                    // onTouchTap = {() => {downloadForm1(person._id)}}\r\n                                    className={classes.DownloadForm}\r\n                                 >\r\n                                    Download Lab Results\r\n                                </Button>\r\n                            </li>\r\n\r\n                            <li hidden={person.status !== 'report_cert_sent'}>\r\n                                 <Button\r\n                                    type=\"button\"\r\n                                    fullWidth\r\n                                    variant=\"outlined\"\r\n                                    color=\"primary\"\r\n                                    onClick = {() => {downloadCertificate(person._id)}}\r\n                                    // onTouchTap = {() => {downloadForm1(person._id)}}\r\n                                    className={classes.DownloadForm}\r\n                                 >\r\n                                    Download Certificate\r\n                                </Button>\r\n                            </li>\r\n\r\n                        </ul>\r\n\r\n                    </AccordionDetails>\r\n                    </Accordion>\r\n                </div>\r\n            </Grid> \r\n          ))}\r\n    </Grid>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Link from '@material-ui/core/Link';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport GlobalState from './GlobalState';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport PropTypes from 'prop-types';\r\nimport MaskedInput from 'react-text-mask';\r\nimport { FormControl, Grid, Input, InputLabel } from '@material-ui/core';\r\nimport BookService from './services/BookService';\r\nimport PersonsBox from './PersonsBox';\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"#\">\r\n        Medical Express Clinic\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\n\r\n\r\nconst isBoolean = (param) => typeof(param) === \"boolean\"\r\n\r\nconst useFocus = (initialFocus = false, id = \"\") => {\r\n    const [focus, setFocus] = React.useState(initialFocus)\r\n    const setFocusWithTrueDefault = (param) => setFocus(isBoolean(param)? param : true)\r\n    return ([\r\n        setFocusWithTrueDefault, {\r\n            autoFocus: focus,\r\n            key: `${id}${focus}`,\r\n            onFocus: () => setFocus(true),\r\n            onBlur: () => setFocus(false),\r\n        },\r\n    ])\r\n}\r\n\r\n\r\nfunction TextMaskCustom(props) {\r\n    const { inputRef, ...other } = props;\r\n  \r\n    return (\r\n      <MaskedInput\r\n        {...other}\r\n        ref={(ref) => {\r\n          inputRef(ref ? ref.inputElement : null);\r\n        }}\r\n        mask={[/\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/]}\r\n        // placeholderChar={'\\u2000'}\r\n        showMask\r\n      />\r\n    );\r\n  }\r\n  \r\n  TextMaskCustom.propTypes = {\r\n    inputRef: PropTypes.func.isRequired,\r\n  };\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n    root: {\r\n        width: '100%',\r\n        '& > * + *': {\r\n          marginTop: theme.spacing(2),\r\n        },\r\n        marginTop: \"20px\"\r\n      },  \r\n\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n\r\n    Find: {\r\n        width: \"80px\"\r\n    },\r\n\r\n    Clear:{\r\n        marginRight: \"20px\"\r\n    },\r\n\r\n    title:{\r\n        marginTop : \"20px\"\r\n    },\r\n\r\n    TextBox:{\r\n        marginTop: \"30px\",\r\n        \"& > *\" :\r\n        {\r\n            textAlign: \"center\"\r\n        },\r\n  \r\n    },\r\n\r\n    TextField:{\r\n\r\n    },\r\n\r\n    NoRecordsFound:{\r\n        marginTop: \"20px\",\r\n        color: \"red\",\r\n        fontWeight: \"600\",\r\n        fontSize: \"14px\",\r\n    },\r\n\r\n    PersonsBox:{\r\n        marginTop : \"20px\",\r\n        marginBottom: \"50px\"\r\n    }\r\n\r\n}));\r\n\r\nexport default function FindByRef() {\r\n  const classes = useStyles();\r\n  const [state, setState] = React.useContext(GlobalState);\r\n  \r\n  const [setFocus, focusProps] = useFocus(true);\r\n\r\n  useEffect( () =>\r\n  {\r\n     findRecords();\r\n  }, [state.findRecords]);\r\n\r\n\r\n  useEffect( () => {\r\n    BookService.getBookingsByRef(state.ref).then( (res)=>\r\n    {\r\n        if (res.data.length > 0)\r\n        {\r\n            setState(state => ({...state, foundRecords : res.data}));\r\n        }\r\n    });\r\n    }, [state.RefreshPersonInfo]);\r\n\r\n    const handleChange = (event) =>\r\n    {\r\n        setState(state => ({...state, ref : event.target.value}));\r\n        setState(state => ({...state, refError : false})); \r\n    }\r\n\r\n    const clearField = () =>\r\n    {\r\n        setState(state => ({...state, refError : false})); \r\n        setState(state => ({...state, ref : '___-___-___'}));\r\n        setState(state => ({...state, foundRecords : []}));\r\n        setFocus();\r\n    }\r\n\r\n    const findRecords = () =>\r\n    {\r\n        if (!state.ref || state.ref.indexOf('_') >= 0)\r\n        {\r\n            setState(state => ({...state, refError : true}));  \r\n            return;\r\n        }\r\n\r\n        setState(state => ({...state, submiting : true}));\r\n        setState(state => ({...state, foundRecords : []}));\r\n\r\n        BookService.getBookingsByRef(state.ref).then( (res)=>\r\n        {\r\n            setState(state => ({...state, submiting : false}));\r\n            if (res.data.length > 0)\r\n            {\r\n                setState(state => ({...state, foundRecords : res.data}));\r\n            }\r\n            else\r\n            {\r\n                setState(state => ({...state, foundRecords : null}));\r\n            }\r\n            \r\n            console.log(res.data);\r\n\r\n        }).catch( (err) =>\r\n        {\r\n            console.log(err);\r\n            setState(state => ({...state, submiting : false}));\r\n        });\r\n    }\r\n\r\n  return (\r\n    <React.Fragment>\r\n        <CssBaseline />\r\n        <div className={classes.title}>\r\n            <Typography component=\"h6\" variant=\"h6\" align=\"center\">\r\n                Find Booking Appoinments\r\n            </Typography>  \r\n        </div> \r\n\r\n        <Grid container direction=\"column\" spacing={1} justify=\"flex-start\"  alignItems=\"center\">\r\n\r\n        <Grid item xs={12} md={12}>\r\n            <FormControl className={classes.TextBox}>\r\n                <TextField\r\n                    {...focusProps}\r\n                    //autoFocus \r\n                    pattern=\"[0-9]*\"\r\n                    error = {state.refError ? true : false} \r\n                    value = {state.ref}\r\n                    className = {classes.TextField}\r\n                    width = \"50px\"\r\n                    onChange={handleChange}\r\n                    label=\"Reference No.\"\r\n                    helperText=\"Enter Your 9-digits Reference No.\"\r\n                    name=\"refNo\"\r\n                    id=\"refNo\"\r\n                    variant=\"outlined\"\r\n                    \r\n                    size=\"medium\"\r\n                    margin=\"normal\"\r\n                    fullWidth = {true}\r\n                    InputProps={{\r\n                        inputComponent: TextMaskCustom,\r\n                        style: { textAlign: 'center', fontSize:\"24px\", width: \"210px\", paddingLeft: \"20px\" }\r\n                    }}\r\n\r\n                    onKeyPress= {event => {\r\n                        if (event.key === 'Enter') {\r\n                            findRecords();\r\n                        }\r\n                      }}\r\n                />         \r\n            </FormControl>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} md={12}>\r\n               \r\n                <Button\r\n                    disabled = {state.submiting}\r\n                    color=\"default\"\r\n                    onClick = {clearField}\r\n                    onTouchTap = {clearField}\r\n                    className={classes.Clear}\r\n                >\r\n                    Clear \r\n                </Button>  \r\n            \r\n                <Button\r\n                    type=\"button\"\r\n                    disabled = {state.submiting}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick = {findRecords}\r\n                    onTouchTap = {findRecords}\r\n                    className={classes.Find}\r\n                >\r\n                    Find \r\n                </Button>  \r\n        </Grid>\r\n\r\n        <Grid item xs={12} md={12}>\r\n\r\n                    \r\n\r\n            {state.foundRecords && state.foundRecords.length > 0 && (\r\n                <React.Fragment>\r\n\r\n                    <div className={classes.PersonsBox}>\r\n                          <PersonsBox/>\r\n                    </div>\r\n                    \r\n\r\n\r\n                </React.Fragment>\r\n            )}   \r\n\r\n            {!state.foundRecords && (\r\n                <React.Fragment>\r\n\r\n                <div className={classes.root}>\r\n                    <Alert severity=\"error\"> <strong>No Records Found !</strong> <br/> Please check you reference number again.</Alert>\r\n                </div> \r\n                   \r\n                </React.Fragment>\r\n            )}\r\n\r\n        </Grid>\r\n        \r\n        \r\n        </Grid>\r\n        \r\n    </React.Fragment>\r\n   \r\n  );\r\n}","import React, {useEffect, useState} from 'react';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport BookService from './services/BookService';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Grid, Link, makeStyles, TextField, Tooltip } from '@material-ui/core';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport { IconButton } from '@material-ui/core';\r\nimport LoaderSpinner from 'react-loader-spinner';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { green, red } from '@material-ui/core/colors';\r\nimport GlobalState from './GlobalState';\r\nimport { Report } from '@material-ui/icons';\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  title: {\r\n    marginTop: theme.spacing(0),\r\n    marginBottom: theme.spacing(1),\r\n\r\n  },\r\n  \r\n  refreshButton:{\r\n    marginLeft: theme.spacing(2),\r\n  },\r\n\r\n  checkIcon:{\r\n    color: \"green\"\r\n  },\r\n\r\n  closeIcon:{\r\n    color: \"red\"\r\n  },\r\n\r\n  RefLink: {\r\n    cursor: \"pointer\"\r\n  },\r\n\r\n  BookedLabel:{\r\n    backgroundColor: \"#606060\",\r\n    color: \"#fff\",\r\n    paddingRight: \"10px\",\r\n    paddingLeft: \"10px\"\r\n  },\r\n\r\n  PatientAttendedLabel:{\r\n    backgroundColor: \"#0066aa\",\r\n    color: \"#fff\",\r\n    paddingRight: \"15px\",\r\n    paddingLeft: \"10px\"\r\n  },\r\n\r\n  SampleTakenLabel:{\r\n    backgroundColor: \"#0066cc\",\r\n    color: \"#fff\",\r\n    paddingRight: \"40px\",\r\n    paddingLeft: \"10px\"\r\n  },\r\n\r\n  ReportSentLabel:{\r\n    backgroundColor: \"#009900\",\r\n    color: \"#fff\",\r\n    paddingRight: \"90px\",\r\n    paddingLeft: \"10px\"\r\n  },\r\n\r\n  ReportCertSentLabel:{\r\n    backgroundColor: \"#009900\",\r\n    color: \"#fff\",\r\n    paddingRight: \"68px\",\r\n    paddingLeft: \"10px\"\r\n  }\r\n  \r\n}));\r\n\r\nconst getTableTitle = (str) =>{\r\n\r\n  if (str === 'today')\r\n  {\r\n    return `Today's Bookings`;\r\n  }else if (str === 'old')\r\n  {\r\n    return `Old Bookings`;\r\n  }else if (str === 'future')\r\n  {\r\n    return `Future Bookings`;\r\n  }else if (str === 'recent')\r\n  {\r\n    return `Recent Bookings`;\r\n  }else\r\n  {\r\n    return `All Bookings`;\r\n  }\r\n\r\n\r\n}\r\n\r\nexport default function BookingTable(props) {\r\n  \r\n  const classes = useStyles();\r\n\r\n  const columns = [\r\n    { field: 'id', headerName: '#', width: 50 },\r\n\r\n    { field: 'bookingDate', headerName: 'Booked Date', width: 120 },\r\n    { field: 'bookingTimeNormalized', headerName: 'Booked Time', width: 120 , valueGetter: (params) => {\r\n      return params.getValue('bookingTime');\r\n\r\n    }},\r\n    { field: 'status', headerName: 'Status', width: 200, renderCell: (params) =>{\r\n        if (params.value === 'booked')\r\n        {\r\n          return (\r\n            <span className={classes.BookedLabel}> Booking Made </span>\r\n          );\r\n      \r\n        }else if (params.value === 'patient_attended')\r\n        {\r\n          return (\r\n            <span  className={classes.PatientAttendedLabel}> Patient Attended </span>\r\n          );\r\n\r\n        }else if (params.value === 'sample_taken')\r\n        {\r\n          return (\r\n            <span  className={classes.SampleTakenLabel}> Sample Taken </span>\r\n          );\r\n\r\n        }else if (params.value === 'report_sent')\r\n        {\r\n          return (\r\n            <span  className={classes.ReportSentLabel}> Report Sent </span>\r\n          );\r\n\r\n        }else if (params.value === 'report_cert_sent')\r\n        {\r\n          return (\r\n            <span  className={classes.ReportCertSentLabel}> {`Rpt & Cert Sent`} </span>\r\n          );\r\n\r\n        }else{\r\n          return 'Unknown';\r\n        }\r\n      }\r\n    },\r\n    { field: 'bookingRef', headerName: 'Ref No.', width: 120 , renderCell: (params) =>{\r\n      return (\r\n        <Tooltip title=\"Go Find By Ref\" placement=\"right\">\r\n            <Link className={classes.RefLink} onClick={\r\n              () => {\r\n                // console.log(params.value);\r\n\r\n                setState(state => ({...state, currentMenuIndex: 5}));\r\n                setState(state => ({...state, ref : params.value}));\r\n                setState(state => ({...state, refError : false})); \r\n                setState(state => ({...state, foundRecords : []}));\r\n                setState(state => ({...state, findRecords : !state.findRecords}));\r\n              }\r\n            }>\r\n              {params.value}\r\n            </Link>\r\n        </Tooltip>\r\n\r\n      );\r\n    }},\r\n    { field: 'forenameCapital', headerName: 'Forename', width: 150 },\r\n    { field: 'surnameCapital', headerName: 'Surname', width: 150 },\r\n    { field: 'birthDate', headerName: 'D.O.B', width: 120 },\r\n    { field: 'email', headerName: 'email', width: 300 , valueFormatter : (params) => {\r\n      return params.value.toUpperCase();\r\n    }},\r\n    { field: 'phone', headerName: 'Tel', width: 150 },\r\n    { field: 'passportNumber', headerName: 'Passport No.', width: 250,  valueGetter: (params) => {\r\n      const pass2 = params.getValue('passportNumber2');\r\n      if (pass2 && pass2.length > 0 && pass2.trim().length > 0)\r\n      {\r\n        return `${params.getValue('passportNumber')?.toUpperCase()} - ${params.getValue('passportNumber2')?.toUpperCase()}`\r\n      }\r\n      else\r\n      {\r\n        return params.getValue('passportNumber')?.toUpperCase();\r\n      }\r\n   \r\n\r\n    }},\r\n    { field: 'certificate', headerName: 'Certificate', width: 120,  renderCell: (params) => {\r\n        return params.value ? (\r\n          <CheckIcon className={classes.checkIcon}/>\r\n        ) :\r\n        (\r\n        <  CloseIcon className={classes.closeIcon}/> \r\n        );\r\n    } },\r\n    { field: 'antiBodyTest', headerName: 'Antibody Test', width: 120,  renderCell: (params) => {\r\n      return params.value ? (\r\n        <CheckIcon className={classes.checkIcon}/>\r\n      ) :\r\n      (\r\n      <  CloseIcon className={classes.closeIcon}/> \r\n      );\r\n  } },\r\n    { field: 'postCode', headerName: 'Post Code', width: 150, valueFormatter : (params) => {\r\n      return params.value.toUpperCase();\r\n    } },\r\n    { field: 'address', headerName: 'Address', width: 500, valueFormatter : (params) => {\r\n      return params.value.toUpperCase();\r\n    } },\r\n    { field: 'notes', headerName: 'Notes', width: 500 },\r\n  \r\n  ];\r\n\r\n\r\n\r\n\r\n  const [state, setState] = React.useContext(GlobalState);  \r\n\r\n  const [data, setData] = React.useState({bookings: [] , cachedBookings: [], isFetching : false});\r\n\r\n  const [selectedRow, setSelectedRow] = React.useState(null);\r\n\r\n  const [filter,setFilter] = React.useState('');\r\n\r\n  const [refresh, setRefresh] = React.useState(false);\r\n\r\n  var api = BookService.getAllBookings;\r\n\r\n  if (props.date === 'today')\r\n  {\r\n    api = BookService.getTodayBookings;\r\n  }else if (props.date === 'old')\r\n  {\r\n    api = BookService.getOldBookings;\r\n  }else if (props.date === 'future')\r\n  {\r\n    api = BookService.getFutureBookings;\r\n  }else if (props.date === 'recent')\r\n  {\r\n    api = BookService.getRecentBookingsAll;\r\n  }\r\n\r\n\r\n  useEffect( () => {\r\n\r\n            setData({bookings: [], cachedBookings: [], isFetching: true});\r\n            api().then( (res) =>{\r\n                res.data.forEach((element, index) => {\r\n                    res.data[index] = {...element, id : index + 1}\r\n                });\r\n                setData({bookings: res.data, cachedBookings: [...res.data], isFetching: false});\r\n\r\n            }).catch( (err) => {\r\n                console.log(err);\r\n                setData({bookings: data.bookings, cachedBookings: data.cachedBookings, isFetching: false});\r\n            });\r\n        },\r\n        [props.date, refresh]);\r\n\r\n  useEffect( () => {\r\n\r\n        if (filter && filter.trim().length > 0)\r\n        {\r\n          var filteredData = data.bookings.filter( (element) => {\r\n\r\n            return (element.forename.toLowerCase().indexOf(filter.toLowerCase()) >= 0) ||\r\n                   (element.surname.toLowerCase().indexOf(filter.toLowerCase()) >= 0) ||\r\n                   (element.email.toLowerCase().indexOf(filter.toLowerCase()) >= 0)\r\n            \r\n            ;\r\n  \r\n          });\r\n  \r\n  \r\n          setData({bookings: filteredData, cachedBookings: data.cachedBookings, isFetching: false});\r\n        }else\r\n        {\r\n          setData({bookings: [...data.cachedBookings], cachedBookings: data.cachedBookings, isFetching: false});\r\n        }\r\n      },\r\n      [filter]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n  const refreshClicked = (event) =>{\r\n    setFilter('');\r\n    setRefresh(!refresh);\r\n\r\n  }\r\n\r\n  const filterChanged = (event) =>{\r\n    setFilter(event.target.value);\r\n  }\r\n\r\n  const handleSelectionChanged = (newSelection) =>\r\n  {\r\n    if (newSelection.length > 0){\r\n      setSelectedRow(newSelection.rows[0]);\r\n    }\r\n    \r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Grid container direction=\"row\" justify=\"space-between\" alignItems=\"flex-end\">\r\n        <Grid item md={3}>\r\n          <Typography\r\n            variant=\"h6\"\r\n            color=\"inherit\"\r\n            noWrap\r\n            className={classes.title}\r\n          >\r\n            {getTableTitle(props.date)}\r\n\r\n            <Tooltip title=\"Refresh\" placement=\"right\">\r\n              <IconButton\r\n                color=\"primary\"\r\n                className={classes.refreshButton}\r\n                onClick={refreshClicked}\r\n              >\r\n                <RefreshIcon />\r\n              </IconButton>\r\n            </Tooltip>\r\n\r\n          </Typography>\r\n        </Grid>\r\n\r\n        <Grid item md={3}>\r\n\r\n    {data.isFetching && (\r\n\r\n        <LoaderSpinner\r\n        type=\"ThreeDots\"\r\n        color=\"#3f51b5\"\r\n        height={50}\r\n        width={50}\r\n        timeout={0} //3 secs\r\n\r\n     />\r\n\r\n\r\n    )}\r\n\r\n\r\n        </Grid>\r\n\r\n\r\n        <Grid item md={3}>\r\n          <TextField\r\n            variant=\"standard\"\r\n            value={filter}\r\n            onChange={filterChanged}\r\n            margin=\"normal\"\r\n            size=\"small\"\r\n            id=\"filter\"\r\n            label=\"Filter\"\r\n            name=\"filter\"\r\n            autoComplete=\"off\"\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <div style={{ height: 700, width: \"100%\" }}>\r\n        <DataGrid rows={data.bookings} \r\n                  columns={columns} \r\n                  autoPageSize\r\n                  onSelectionChange = {handleSelectionChanged}\r\n                  />\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}","import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Link from '@material-ui/core/Link';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport GlobalState from './GlobalState';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport FindByRef from './FindByRef';\r\nimport BookingView from './BookingTable'\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"#\">\r\n        Medical Express Clinic\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n    root: {\r\n        width: '100%',\r\n        '& > * + *': {\r\n          marginTop: theme.spacing(2),\r\n        },\r\n      },  \r\n\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nexport default function AdminConsole() {\r\n  const classes = useStyles();\r\n  const [state, setState] = React.useContext(GlobalState);\r\n\r\n  return (\r\n    <React.Fragment>\r\n        <CssBaseline />\r\n\r\n        {/* <FindByRef/> */}\r\n\r\n          <BookingView/>       \r\n\r\n    </React.Fragment>\r\n\r\n   \r\n  );\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nexport default function Title(props) {\r\n  return (\r\n    <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nTitle.propTypes = {\r\n  children: PropTypes.node,\r\n};","import React from 'react';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport { LineChart, Line, XAxis, YAxis, Label, ResponsiveContainer } from 'recharts';\r\nimport Title from './Title';\r\n\r\n// Generate Sales Data\r\nfunction createData(time, amount) {\r\n  return { time, amount };\r\n}\r\n\r\nconst data = [\r\n  createData('00:00', 0),\r\n  createData('03:00', 3),\r\n  createData('06:00', 6),\r\n  createData('09:00', 8),\r\n  createData('12:00', 15),\r\n  createData('15:00', 20),\r\n  createData('18:00', 24),\r\n  createData('21:00', 24),\r\n  createData('24:00', undefined),\r\n];\r\n\r\nexport default function Chart() {\r\n  const theme = useTheme();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Title>Today</Title>\r\n      <ResponsiveContainer>\r\n        <LineChart\r\n          data={data}\r\n          margin={{\r\n            top: 16,\r\n            right: 16,\r\n            bottom: 0,\r\n            left: 24,\r\n          }}\r\n        >\r\n          <XAxis dataKey=\"time\" stroke={theme.palette.text.secondary} />\r\n          <YAxis stroke={theme.palette.text.secondary}>\r\n            <Label\r\n              angle={270}\r\n              position=\"left\"\r\n              style={{ textAnchor: 'middle', fill: theme.palette.text.primary }}\r\n            >\r\n              Online Bookings\r\n            </Label>\r\n          </YAxis>\r\n          <Line type=\"monotone\" dataKey=\"amount\" stroke={theme.palette.primary.main} dot={false} />\r\n        </LineChart>\r\n      </ResponsiveContainer>\r\n    </React.Fragment>\r\n  );\r\n}","import React from 'react';\r\nimport Link from '@material-ui/core/Link';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Title from './Title';\r\nimport { Tooltip } from '@material-ui/core';\r\nimport * as dateformat from 'dateformat';\r\n\r\n\r\nfunction preventDefault(event) {\r\n  event.preventDefault();\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n  depositContext: {\r\n    flex: 1,\r\n  },\r\n});\r\n\r\nexport default function Deposits() {\r\n  const classes = useStyles();\r\n  return (\r\n    <React.Fragment>\r\n\r\n      <Title>Current Visits</Title>\r\n      <Typography component=\"p\" variant=\"h6\">\r\n        9:00 AM - 9:15 AM\r\n      </Typography>\r\n      <Typography color=\"textSecondary\" className={classes.depositContext}>\r\n        on {dateformat(new Date(), 'dd mmmm, yyyy') } \r\n      </Typography>\r\n      <div>\r\n        <Link color=\"primary\" href=\"#\" onClick={preventDefault}>\r\n          \r\n                  View Visitors\r\n          \r\n        </Link>\r\n      </div>\r\n\r\n    </React.Fragment>\r\n  );\r\n}","import React from 'react';\r\nimport Link from '@material-ui/core/Link';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Title from './Title';\r\n\r\n// Generate Order Data\r\nfunction createData(id, date, name, shipTo, paymentMethod, amount) {\r\n  return { id, date, name, shipTo, paymentMethod, amount };\r\n}\r\n\r\nconst rows = [\r\n  createData(0, '16 Mar, 2019', 'Elvis Presley', 'Tupelo, MS', 'VISA ⠀•••• 3719', 312.44),\r\n  createData(1, '16 Mar, 2019', 'Paul McCartney', 'London, UK', 'VISA ⠀•••• 2574', 866.99),\r\n  createData(2, '16 Mar, 2019', 'Tom Scholz', 'Boston, MA', 'MC ⠀•••• 1253', 100.81),\r\n  createData(3, '16 Mar, 2019', 'Michael Jackson', 'Gary, IN', 'AMEX ⠀•••• 2000', 654.39),\r\n  createData(4, '15 Mar, 2019', 'Bruce Springsteen', 'Long Branch, NJ', 'VISA ⠀•••• 5919', 212.79),\r\n];\r\n\r\nfunction preventDefault(event) {\r\n  event.preventDefault();\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  seeMore: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nexport default function Orders() {\r\n  const classes = useStyles();\r\n  return (\r\n    <React.Fragment>\r\n      <Title>Recent Orders</Title>\r\n      <Table size=\"small\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Date</TableCell>\r\n            <TableCell>Name</TableCell>\r\n            <TableCell>Ship To</TableCell>\r\n            <TableCell>Payment Method</TableCell>\r\n            <TableCell align=\"right\">Sale Amount</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows.map((row) => (\r\n            <TableRow key={row.id}>\r\n              <TableCell>{row.date}</TableCell>\r\n              <TableCell>{row.name}</TableCell>\r\n              <TableCell>{row.shipTo}</TableCell>\r\n              <TableCell>{row.paymentMethod}</TableCell>\r\n              <TableCell align=\"right\">{row.amount}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n      <div className={classes.seeMore}>\r\n        <Link color=\"primary\" href=\"#\" onClick={preventDefault}>\r\n          See more orders\r\n        </Link>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}","import React, { useEffect } from 'react';\r\nimport Link from '@material-ui/core/Link';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Title from './Title';\r\nimport BookService from './services/BookService';\r\nimport * as dateformat from 'dateformat';\r\nimport GlobalState from './GlobalState';\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  seeMore: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nexport default function BookingView() {\r\n  const classes = useStyles();\r\n  const [state, setState] = React.useContext(GlobalState);  \r\n\r\n  const [data, setData] = React.useState({bookings: [] , isFetching : false});\r\n\r\n  const seeMoreRecords = (event) => {\r\n    event.preventDefault();\r\n    setState(state=>({...state, currentMenuIndex:100}));\r\n  }\r\n\r\n\r\n  useEffect( () => {\r\n\r\n            setData({bookings: data.bookings, isFetching: true});\r\n            BookService.getRecentBookings().then( (res) =>{\r\n                setData({bookings: res.data, isFetching: false});\r\n\r\n            }).catch( (err) => {\r\n                console.log(err);\r\n                setData({bookings: data.bookings, isFetching: false});\r\n            });\r\n        },\r\n        []);   \r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Title>Recent Bookings</Title>\r\n      <Table size=\"small\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>TimeStamp</TableCell>        \r\n            <TableCell>Name</TableCell>\r\n            <TableCell>Surname</TableCell>\r\n            <TableCell>Email</TableCell>\r\n            <TableCell>D.O.B</TableCell>\r\n            <TableCell>Booked Date</TableCell>\r\n            <TableCell>Booked Time</TableCell> \r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {data.bookings.map((row) => (\r\n            <TableRow key={row._id}>\r\n              <TableCell>{dateformat(row.timeStamp, \"mmm dS, h:MM:ss TT\")}</TableCell>\r\n              <TableCell>{row.forename}</TableCell>\r\n              <TableCell>{row.surname}</TableCell>\r\n              <TableCell>{row.email}</TableCell>\r\n              <TableCell>{row.birthDate}</TableCell>\r\n              <TableCell>{row.bookingDate}</TableCell>\r\n              <TableCell>{row.bookingTime}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n      <div className={classes.seeMore}>\r\n        <Link color=\"primary\" href=\"#\" onClick={seeMoreRecords}>\r\n          See more records\r\n        </Link>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Chart from './Chart';\r\nimport Deposits from './Deposits';\r\nimport Orders from './Orders';\r\n\r\n\r\nimport { Tooltip } from '@material-ui/core';\r\nimport GlobalState from './GlobalState';\r\nimport BookingView from './BookingView';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n \r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    overflow: 'auto',\r\n    flexDirection: 'column',\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n}));\r\n\r\nexport default function DashboardPreview() {\r\n  const classes = useStyles();\r\n  const [state, setState] = React.useContext(GlobalState);\r\n\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n\r\n  return (\r\n        <React.Fragment>\r\n\r\n<           Grid container spacing={3}>\r\n                    {/* Chart */}\r\n                    <Grid item xs={12} md={8} lg={9}>\r\n                    <Paper className={fixedHeightPaper}>\r\n                        <Chart />\r\n                    </Paper>\r\n                    </Grid>\r\n                    {/* Recent Deposits */}\r\n                    <Grid item xs={12} md={4} lg={3}>\r\n                    <Paper className={fixedHeightPaper}>\r\n                        <Deposits />\r\n                    </Paper>\r\n                    </Grid>\r\n                    {/* Recent Orders */}\r\n                    <Grid item xs={12}>\r\n                    <Paper className={classes.paper}>\r\n                        <BookingView/>\r\n                    </Paper>\r\n                    </Grid>\r\n          </Grid>\r\n        </React.Fragment>\r\n  );\r\n}","import React, { useEffect } from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\nimport { ListItemIcon, Tooltip } from '@material-ui/core';\r\nimport GlobalState from './GlobalState';\r\nimport { List, ListItem } from '@material-ui/core';\r\n\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\n\r\nimport NewReleasesIcon from '@material-ui/icons/NewReleases';\r\nimport HistoryIcon from '@material-ui/icons/History';\r\nimport TimelineIcon from '@material-ui/icons/Timeline';\r\nimport DescriptionIcon from '@material-ui/icons/Description';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n \r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    overflow: 'auto',\r\n    flexDirection: 'column',\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n}));\r\n\r\nexport default function DashboardPreview() {\r\n  const classes = useStyles();\r\n  const [state, setState] = React.useContext(GlobalState);\r\n\r\n  const [selectedIndex, setSelectedIndex] = React.useState(0);\r\n\r\n  useEffect(() => {\r\n    setSelectedIndex(state.currentMenuIndex);\r\n  }, [state.currentMenuIndex]);\r\n\r\n  const handleListItemClick = (event, index) => {\r\n    setSelectedIndex(index);\r\n    setState(state => ({...state, currentMenuIndex: index}))\r\n  };\r\n\r\n  return (\r\n        <React.Fragment>\r\n\r\n            <List>\r\n                    <ListItem button selected={selectedIndex === 0} onClick={(event) => handleListItemClick(event, 0)}>\r\n                    <ListItemIcon>\r\n                        <DashboardIcon />\r\n                    </ListItemIcon>\r\n                    <ListItemText primary=\"Dashboard\" />\r\n                    </ListItem>\r\n                    <ListItem button selected={selectedIndex === 1} onClick={(event) => handleListItemClick(event, 1)}>\r\n                    <ListItemIcon>\r\n                        <NewReleasesIcon />\r\n                    </ListItemIcon>\r\n                    <ListItemText primary=\"Today's Bookings\" />\r\n                    </ListItem>\r\n                    <ListItem button selected={selectedIndex === 2} onClick={(event) => handleListItemClick(event, 2)}>\r\n                    <ListItemIcon>\r\n                        <HistoryIcon />\r\n                    </ListItemIcon>\r\n                    <ListItemText primary=\"Old Bookings\" />\r\n                    </ListItem>\r\n                    <ListItem button selected={selectedIndex === 3} onClick={(event) => handleListItemClick(event, 3)}>\r\n                    <ListItemIcon>\r\n                        <TimelineIcon />\r\n                    </ListItemIcon>\r\n                    <ListItemText primary=\"Future Bookings\" />\r\n                    </ListItem>\r\n                    <ListItem button selected={selectedIndex === 4} onClick={(event) => handleListItemClick(event, 4)}>\r\n                    <ListItemIcon>\r\n                        <DescriptionIcon />\r\n                    </ListItemIcon>\r\n                    <ListItemText primary=\"All Bookings\" />\r\n                    </ListItem>\r\n\r\n                    <ListItem button selected={selectedIndex === 5} onClick={(event) => handleListItemClick(event, 5)}>\r\n                    <ListItemIcon>\r\n                        <SearchIcon />\r\n                    </ListItemIcon>\r\n                    <ListItemText primary=\"Find By Ref No.\" />\r\n                    </ListItem>\r\n            </List>\r\n\r\n        </React.Fragment>\r\n  );\r\n}","import React, { useEffect } from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Box from '@material-ui/core/Box';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Link from '@material-ui/core/Link';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\n\r\nimport { ExitToAppOutlined } from '@material-ui/icons';\r\n\r\n\r\nimport { Tooltip } from '@material-ui/core';\r\nimport GlobalState from './GlobalState';\r\nimport DashboardPreview from './DashboardPreview';\r\nimport Menu from './Menu';\r\nimport FindByRef from './FindByRef';\r\nimport BookingTable from './BookingTable';\r\n\r\nfunction Copyright() {\r\n    return (\r\n      <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n        {'Copyright © '}\r\n        <Link color=\"inherit\" href=\"#\">\r\n          Medical Express Clinic\r\n        </Link>{' '}\r\n        {new Date().getFullYear()}\r\n        {'.'}\r\n      </Typography>\r\n    );\r\n  }\r\n  \r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: '0 8px',\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: 'none',\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: 'relative',\r\n    whiteSpace: 'nowrap',\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: 'hidden',\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: '100vh',\r\n    overflow: 'auto',\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    overflow: 'auto',\r\n    flexDirection: 'column',\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n}));\r\n\r\nexport default function Dashboard() {\r\n  const classes = useStyles();\r\n  const [state, setState] = React.useContext(GlobalState);\r\n  const [open, setOpen] = React.useState(true);\r\n\r\n  const [currentMenuIndex, setCurrentMenuIndex] = React.useState(0);\r\n\r\n  useEffect( () => {\r\n      setCurrentMenuIndex(state.currentMenuIndex);\r\n  },[state.currentMenuIndex]);\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n\r\n  const handleLogout = () =>\r\n  {\r\n    setState(state => ({...state, signedIn: false}));\r\n  }\r\n\r\n  const getContentFromMenuIndex = (index) =>\r\n  {\r\n    switch (index) {\r\n      case 0:\r\n        return <DashboardPreview />;\r\n      case 1:\r\n        return <BookingTable date=\"today\"/>;\r\n      case 2:\r\n        return <BookingTable date=\"old\"/>;\r\n      case 3:\r\n        return <BookingTable date=\"future\"/>;\r\n      case 4:\r\n          return <BookingTable date=\"all\"/>;\r\n      case 5:\r\n            return <FindByRef/>;\r\n      case 100:\r\n            return <BookingTable date=\"recent\"/>;;      \r\n      default:\r\n        throw new Error('Unknown MenuItem');\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\r\n        <Toolbar className={classes.toolbar}>\r\n          <IconButton\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\r\n               PCR Booking Admin Console\r\n          </Typography>\r\n\r\n        {state.signedIn && (\r\n            <IconButton onClick={handleLogout} color=\"inherit\">\r\n                 <Tooltip title=\"Logout\">\r\n                      <ExitToAppOutlined/>\r\n                  </Tooltip>\r\n          </IconButton>\r\n        )}\r\n        </Toolbar>\r\n      </AppBar>\r\n     \r\n      <Drawer\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n        }}\r\n        open={open}\r\n      >\r\n        <div className={classes.toolbarIcon}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            <ChevronLeftIcon />\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n\r\n        <Menu/>\r\n\r\n\r\n      </Drawer>\r\n\r\n\r\n      <main className={classes.content}>\r\n        <div className={classes.appBarSpacer} />\r\n        <Container maxWidth=\"lg\" className={classes.container}>\r\n\r\n          {getContentFromMenuIndex(currentMenuIndex)}\r\n\r\n          <Box pt={4}>\r\n            <Copyright />\r\n          </Box>\r\n        </Container>\r\n      </main>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\n\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\n\r\nimport Link from '@material-ui/core/Link';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport GlobalState from './GlobalState';\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\n\r\n\r\nimport SignIn from './SignIn';\r\nimport AdminConsole from './AdminConsole';\r\nimport {BrowserView, MobileView} from 'react-device-detect';\r\nimport Dashboard from './Dashboard';\r\n\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"#\">\r\n        Medical Express Clinic\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n    appBar: {\r\n        position: 'static',\r\n        backgroundColor: \"#333\",\r\n        color: \"#fff\",\r\n        //alignItems: 'center'\r\n    \r\n      },\r\n\r\n      signOutButton:{\r\n        color: \"#fff\",\r\n        marginRight : \"20px\",\r\n        fontWeight: \"500\"\r\n      },\r\n\r\n      title: {\r\n        flexGrow : 1\r\n      }\r\n\r\n\r\n}));\r\n\r\nexport default function Navigator() {\r\n\r\n    const classes = useStyles();\r\n    const [state, setState] = React.useContext(GlobalState);\r\n\r\n    const handleSignOut = () =>\r\n    {\r\n      setState(state => ({...state, signedIn: false}));\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <CssBaseline />\r\n\r\n                {!state.signedIn && (\r\n                    <SignIn/> \r\n                )}\r\n\r\n                { state.signedIn && (\r\n                   <Dashboard/>\r\n                )}      \r\n        \r\n        </React.Fragment>\r\n    );\r\n}","import './App.css';\nimport GlobalState from './GlobalState'; \nimport React from 'react';\nimport Navigator from './Navigator';\nimport Dashboard from './Dashboard';\n\n\nfunction App() {\n  const [state, setState] = React.useState({foundRecords: [], currentMenuIndex: 0});\n  return (\n    <GlobalState.Provider value={[state, setState]}>\n      <div className=\"App\">\n        <Navigator/>\n        {/* <Dashboard/> */}\n      </div>\n    </GlobalState.Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}