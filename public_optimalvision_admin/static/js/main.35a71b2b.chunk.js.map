{"version":3,"sources":["OV/PriceCalculator.js","theme.js","GlobalStyles.js","serviceWorker.js","GlobalState.js","images/optimal-vision-logo.png","GlobalPath.js","services/api.js","services/UserService.js","OV/services/api.js","OV/services/BookService.js","OV/services/PDFService.js","OV/Corporates.js","OV/PayDialog.js","Admin/calendar-admin/colors.js","services/InvoiceService.js","InvoiceDialog.js","OV/BookingDialog.js","OV/BookingTable.js","OV/calendar-admin/colors.js","OV/calendar-admin/MonthViewCell.js","OV/calendar-admin/calendar-util.js","OV/calendar-admin/MonthView.js","OV/calendar-admin/WeekViewCell.js","OV/calendar-admin/WeekView.js","OV/NewBookingDialog.js","OV/DateField.js","OV/services/PatientService.js","OV/services/EmailTemplateService.js","OV/services/SMSTemplateService.js","OV/PatientDialog.js","OV/NewOVBookingDialog.js","OV/DateDialog.js","OV/ChooseClinicDialog.js","OV/EditOVBookingDialog.js","OV/calendar-admin/DayViewCell.js","OV/calendar-admin/DayView.js","OV/calendar-admin/CalendarView.js","OV/PatientsTable.js","OV/EmailTemplateDialog.js","OV/EmailTemplatesTable.js","OV/SMSTemplateDialog.js","OV/SMSTemplatesTable.js","MenuList.js","Role.js","SignIn.js","Menu.js","Dashboard.js","TokenVerifier.js","Navigator.js","App.js","index.js","OV/DateFormatter.js"],"names":["calculatePrice","person","price","tr","certificate","antiBodyTest","module","exports","calculateTotalPrice","persons","totalPrice","i","length","darkBlack","borderColor","theme","createMuiTheme","palette","primary","main","light","contrastText","secondary","common","black","warning","dark","tonalOffset","background","default","spacing","breakpoints","values","xl","lg","md","sm","xs","border","borderWidth","overrides","MuiExpansionPanel","root","position","MuiTableCell","paddingLeft","paddingRight","borderBottom","MuiDivider","backgroundColor","height","MuiPrivateNotchedOutline","MuiListItem","divider","MuiDialog","paper","width","maxWidth","marginLeft","marginRight","MuiTooltip","tooltip","fontSize","MuiExpansionPanelDetails","enGB","responsiveFontSizes","withStyles","outline","color","white","paddingTop","paddingBottom","down","up","display","flexWrap","marginTop","marginBottom","withTheme","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","GlobalState","React","createContext","authToken","backendAPI","getGlobalPath","path","axios","create","baseURL","headers","UserService","setToken","token","signIn","payload","API","post","checkToken","BookService","addNewBooking","sendRegFormEmail","bookingId","payBooking","paymentMethod","corporate","unPayBooking","getShouldRefundsCount","get","refundBooking","getBookingsStatsByDateStr","dateStr","getBookingsCountByDateStr","getAllBookingsCountAll","getBookingsCountByDateStrandTime","time","source","cancelToken","getBookingsByDateStrandTime","getAllBookingsCountByDateStr","getAllBookingsCountByDateStrandTime","getAllBookingsByDateStrandTime","changeBackToBookingMade","id","changeToPatientAttended","updateBooking","updateBookingTime","deleteBooking","unDeleteBooking","moveToTraceFolderBooking","undoMoveToTraceFolderBooking","getBookingsByRef","ref","getBookingById","getAllBookings","limit","getTraceFolderBookings","getDeletedBookings","getTodayBookings","getOldBookings","getFutureBookings","getRecentBookings","getRecentBookingsAll","PDFService","downloadGPRegForm","responseType","Accept","corporates","makeStyles","title","refreshButton","checkIcon","closeIcon","RefLink","cursor","BookedLabel","PatientAttendedLabel","SampleTakenLabel","ReportSentLabel","ReportCertSentLabel","archiveButton","smartMatchButton","textDecoration","infoTitle","fontWeight","infoData","matchButton","padding","resendButton","resendFilesButton","cancelButton","backdrop","zIndex","drawer","borderRadius","colorPrimary","bar","LinearProgress","InvoiceService","createInvoice","updateInvoice","invoiceNumber","deleteinvoice","getInvoiceByBookingId","getInvoiceByInvoiceNumber","getCodeDetails","code","getAllCodes","downloadInvoice","emailInvoice","email","useStyles","box","textAlign","boxRed","boxInfo","ul","listStyle","margin","li","icon","lineThrough","heading","typography","pxToRem","flexBasis","flexShrink","text","secondaryHeading","infoDetails","Accordion","AccordionDeleted","DownloadForm","infoDataCharges","infoDataChargesHigher","borderLeft","PositiveLabel","EditButton","ResendEmailsButton","PayButton","printInvoiceButton","editInvoiceButton","PayLabel","RestoreButton","UndoTraceButton","DeleteButton","MoveToTraceButton","SaveButton","CancelButton","TextBox","checkIconSmall","centeredLabel","alignItems","dialogTitle","question","answer","Transition","forwardRef","props","Slide","direction","PaperComponent","handle","cancel","Paper","BookingDialog","classes","useContext","setState","useState","setEmailSent","setEmailSentInvoice","edit","editMode","delete","deleteMode","setDeleteMode","restore","restoreMode","setRestoreMode","trace","traceMode","setTraceMode","untrace","unTraceMode","setUnTraceMode","saving","setSaving","notesSaved","setNotesSaved","deleting","setDeleting","restoring","setRestoring","validationError","setValidationError","bookingDate","setBookingDate","bookingTime","setBookingTime","fullname","setFullname","setEmail","tel","setTel","notes","setNotes","refreshData","setRefreshData","booking","setBooking","fieldChanged","setFieldChanged","setInvoice","useEffect","open","fullnameChanged","event","target","value","handleDeleteModeChanged","del","_id","bookingService","res","err","handleRestoreModeChanged","handleTraceModeChanged","handleUnTraceModeChanged","data","bookingDialogDataChanged","bookingPayChanged","openQDialg","setOpenQDialog","fixQuestion","str","result","replace","trim","endsWith","saveNotes","a","Fragment","Dialog","TransitionComponent","keepMounted","onClose","aria-labelledby","aria-describedby","DialogTitle","className","style","deleted","traceFolder","questions","right","top","Grid","container","justify","item","Tooltip","DialogContent","hidden","FormatDateFromString","TextField","fullWidth","bookingDateError","onChange","inputProps","bookingTimeError","Divider","phone","toUpperCase","faceToFaceConsultation","telephoneConsultation","name","label","multiline","rows","variant","autoComplete","Alert","severity","Button","onClick","justifyContent","type","disabled","deleteButtonDisabled","OTCCharges","Backdrop","CircularProgress","JSON","parse","map","DialogActions","HideNowRows","left","justifyItems","ExportToExcelButton","ExportToExcelButtonInline","table","borderCollapse","th","verticalAlign","fontcolor","td","topSelect","minWidth","notifyIcon","getTableTitle","BookingTable","topCount","setTopCount","openDialogExcel","setOpenDialogExcel","Date","getTime","fromDate","setFromDate","untilDate","setUntilDate","dateformat","fromDateStr","setFromDateStr","untilDateStr","seUntilDateStr","justCorporate","setJustCorporate","chkDate","setChkDate","chkForename","setChkForename","chkSurname","setChkSurname","chkDOB","setChkDOB","chkEmail","setChkEmail","chkTel","setChkTel","chkCertificate","setChkCertidicate","chkAntiBodyTest","setChkAntiBodyTest","chkextRef","setChkExtRef","chkPrice","setChkPrice","columns","date","field","headerName","renderCell","params","IconButton","openDetailsDialog","getValue","valueFormatter","formatTimeStamp","valueGetter","bookings","cachedBookings","isFetching","setData","setSelectedRow","selectedBooking","setSelectedBooking","seeDetailsDialogOpen","setSeeDetailsDialogOpen","setCorporate","filter","setFilter","useRef","timeStamp","todayStr","timeStampStr","loadData","api","filteredData","element","toLowerCase","indexOf","find","page","setPage","placement","showCreateExcel","startIcon","faFileExcel","size","FormControl","InputLabel","Select","labelId","MenuItem","autoPageSize","onPageChange","onSelectionChange","newSelection","minHeight","maxHeight","row","FormControlLabel","control","Switch","checked","formControl","utils","DateFnsUtils","disableToolbar","format","KeyboardButtonProps","filename","sheet","buttonText","Checkbox","paid","paidBy","forenameCapital","surnameCapital","extRef","PriceCalculator","CalendarColors","Container","ContainerPast","DayLabel","DayLabelToday","lineHight","DayLabelDisabled","BookingCountLabel","BookingCountLabelBusy","LoadingProgress","BookingCountGauge","bottom","PCRGauge","GynaeGauge","GPGauge","STDGauge","BloodGauge","DayLabelContainer","MonthViewCell","key","cellIndex","month","daysInMonth","dayClicked","setDateStr","cellDate","setCellDate","bookingsCount","setBookingsCount","disableDay","setDisableDay","setIsPast","getMonth","day","AdminCalendarCache","record","method","query","count","fecthData","_bookingsCount","getVCClinicBar","percent","getF2FClinicBar","getLaserClinicBar","getCataractClinicBar","getPostOPClinicBar","_cellIndex","_month","_daysInMonth","getDate","_day","isToday","getDayLabel","clinic","selectedClinics","findIndex","e","disableShrink","CalendarUtil","getMonthRange","year","calendar","Calendar","SUNDAY","itermonthdates","dayLables","days","MonthView","WeekViewCell","isPast","CancelToken","getClinicBar","overflowY","WeekView","dates","CalendarIcon","DateTimeLabel","PriceLabelPaid","PriceLabelNotPaid","BoxDisabled","transition","BoxVC","BoxF2F","BoxLaser","BoxCataract","BoxPostOP","BoxOptometry","BoxGynae","BoxGP","BoxSTD","NewBookingDialog","handleClose","clinicClicked","DateField","loadingBox","dateChanged","todayButton","children","setDay","setMonth","setYear","dayArray","setDayArray","monthArray","setMonthArray","yearArray","setYearArray","updateDate","dd","mm","yyyy","dayStr","monthStr","resetDate","d","parseInt","substr","m","y","months","years","push","getFullYear","today","index","PatientService","registerNewPatient","updatePatient","deletePatient","unDeletePatient","getPatientById","getPatientByPatientId","patientID","getAllPatients","getDeletedPatients","TemplateService","getEmailPreview","templateId","patientId","sendManualEmail","sendTo","registerNewTemplate","updateTemplate","deleteTemplate","getTemplateById","getTemplateBytemplateId","templateID","getAllTemplates","getSMSPreview","sendManualSMS","TabPanel","other","role","a11yProps","appBar","flex","flexGrow","tabs","borderRight","titleCenter","eyeText","multilineColor","lineHeight","PatientDialog","formData","patient","setPatient","emailSent","emailSending","setEmailSending","smsSent","setSMSSent","smsSending","setSMSSending","patientIDError","setPatientIDError","nameError","setNameError","surnameError","setSurnameError","birthDateError","setBirthDateError","patientRepeated","setPatientRepeated","setValue","history","setHistory","backupFormData","setBackUpFormData","openDeleteDialog","setOpenDeleteDialog","selectedTemplateID","setSelectedTemplateID","selectedTemplate","setSelectedTemplate","emailTemplates","setEmailTemplates","selectedSMSTemplateID","setSelectedSMSTemplateID","selectedSMSTemplate","setSelectedSMSTemplate","smsTemplates","setSMSTemplates","handleCloseDeleteDialog","createPreview","_template","html","content","subject","newSubject","createSMSPreview","SMSTemplateService","rawText","_history","forEach","setSelectedVersion","surname","reverse","loadEmailTemplates","loadSMSTemplates","saveClicked","validatePatient","stringify","status","patientDialogDataChanged","deleteClicked","birthDate","formatDate","dateFormat","selectedVersion","sendEmail","sendSMS","mobileTel","fullScreen","AppBar","Toolbar","edge","aria-label","Typography","saveButtonText","Tabs","orientation","newValue","indicatorColor","textColor","Tab","required","helperText","gender","postCode","address","homeTel","occupation","gpname","kincontact","prevsighttest","cc","prevmedicalhistory","prevocularhistory","familyhistory","medications","grafth","allergies","placeholder","contactlenswearer","hobbies","vdu","othernotes","driver","notesfromconsultation","recommendation","template","handleSelectedTemplateChanged","elevation","dangerouslySetInnerHTML","__html","handleSelectedSMSTemplateChanged","InputProps","input","DialogContentText","createFilterOptions","NewOVBookingDialog","fullnameError","setFullnameError","patientRecord","setPatientRecord","patientList","setPatientList","setPhone","setPatientID","prescriptionLeft","setPrescriptionLeft","prescriptionRight","setPrescriptionRight","setBirthDate","loadPatiens","validateBooking","patientDialogOpen","setPatientDialogOpen","newName","setNewName","newSurname","setNewSurname","getColorFromClinic","Autocomplete","setTimeout","_nameArray","split","inputValue","filterOptions","options","filtered","matchSorter","keys","getOptionLabel","option","selectOnFocus","clearOnBlur","handleHomeEndKeys","renderOption","freeSolo","renderInput","onBlur","autoFocus","timeControl","times","DateDialog","setDate","setTime","dateError","setDateError","handleOK","ChooseBookingDialog","SearchIcon","EditOVBookingDialog","openClinicDialog","setOpenClinicDialog","setClinic","openDateDialog","setOpenDateDialog","selectedPatient","setSelectedPatient","loadPatient","patiant","saveAsClicked","_clinic","bookingBox","overflowX","boxShadow","bookingBoxNew","bookingBoxVC","bookingBoxF2F","bookingBoxLaser","bookingBoxCataract","bookingBoxPostOP","bookingBoxOptometry","bookingBoxHidden","bookingBoxPositive","bookingBoxReportSent","BookingBorderPCR","BookingBorderGynae","BookingBorderGP","BookingBorderSTD","BookingBorderBlood","DayViewCell","setBookings","filteredBookings","setFilteredBookings","openDialog","setOpenDialog","openDialogAddNew","setOpenDialogAddNew","openDialogOV","setOpenDialogOV","dayViewCalFilter","search","fetchData","_bookings","getBookingClass","addNewBookingClicked","borderTop","clsx","bookingCliked","substring","titleLabel","titleLabelToday","DayView","Clinics","monthNames","fontColor","CalendarView","firstDayofWeek","setFirstDayofWeek","weekDates","setWeekDates","mode","setMode","selectedTab","setSeletedTab","removeFilter","dayofWeek","getDay","firstdayofweek","_mode","newDay","newMonth","newFirstDayofWeek","endOfWeek","endofWeekStr","getCalendarTitleFromMode","endAdornment","InputAdornment","onMouseDown","ToggleButtonGroup","exclusive","ToggleButton","PatientsTable","setPatientDialogTitle","setPatientDialogSaveButtonText","patientDialogTitle","patientDialogSaveButtonText","EmailTemplateDialog","settemplate","templateIDError","settemplateIDError","subjectError","setSubjectError","templateRepeated","settemplateRepeated","variable","setVariable","variableErrors","setVariableErrors","EditorState","createEmpty","editorState","setEditorState","parameters","contentBlock","htmlToDraft","contentState","ContentState","createFromBlockArray","contentBlocks","_editorState","createWithContent","htmlToText","settemplatenameuser","settemplatenameusererror","validatetemplate","templateService","templateDialogDataChanged","templatenameuser","templatenameusererror","ValidateVariable","keyword","prev","keywordError","builtinValue","builtinValueError","wrapperClassName","editorClassName","onEditorStateChange","draftToHtml","convertToRaw","getCurrentContent","defaultValue","_variable","_keyword","sendWhenBookedCalendar","templateAttendedLabel","EmailTemplatesTable","setSelectedtemplate","settemplateDialogTitle","settemplateDialogSaveButtonText","settemplateDialogOpen","selectedtemplate","templateDialogOpen","templateDialogTitle","templateDialogSaveButtonText","createSMSButton","SMSTemplateDialog","rawTextError","setRawTextError","SMSTemplatesTable","MenuList_OV_Admin","getMenuContent","getMenuRole","getMenuId","MenuList","getRole","sessionStorage","getItem","setRole","setItem","image","backgroundImage","backgroundRepeat","grey","backgroundSize","backgroundPosition","flexDirection","avatar","form","submit","alert","pageBg","appbarCenter","logoImage","appbarTitle","adminPanelLabel","SignIn","useMediaQuery","useHistory","password","setPassword","username","setUsername","saveChecked","setSaveChecked","showPassword","setShowPassword","setError","submiting","setSubmiting","localStorage","signedIn","roles","currentMenuIndex","component","CssBaseline","src","alt","Avatar","on","textField","onKeyPress","htmlFor","OutlinedInput","tabindex","preventDefault","Visibility","VisibilityOff","labelWidth","Box","mt","overflow","fixedHeight","iconSelected","menuText","Badge","MyMenu","selectedIndex","setSelectedIndex","updateShouldRefundsCount","List","StyledMenu","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","StyledMenuApps","toolbar","toolbarIcon","mixins","transitions","easing","sharp","duration","leavingScreen","appBarShift","enteringScreen","menuButton","menuButtonHidden","drawerPaper","whiteSpace","opacity","drawerPaperClose","appBarSpacer","logoImageMenu","userAvatar","userAvatarSelected","userAvatarBig","appBarText","appBarAppsIcon","appBarAppsIconSelected","usernameLabel","lastLoginLabel","appsLogo","appsBox","appsBoxSelected","appsAdminLabel","appsPCRLabel","appsGynaeLabel","appsGPLabel","appsSTDLabel","appsInToolbar","Dashboard","isMobile","setOpen","setCurrentMenuIndex","anchorUserAvatar","setAnchorUserAvatar","anchorApps","setAnchorApps","handleAppsClose","useLocation","getMenuIndex","globalPath","getMenuIdFromGlobalPath","pathname","scrollTo","appsClicked","getAppsLogo","getAppsLabel","userId","currentTarget","anchorEl","removeItem","Drawer","getUserIdFromToken","forename","lastLoginTimeStamp","signOutButton","Navigator","loaded","setLoaded","signedUp","forgotPassword","startsWith","URL","process","href","origin","addEventListener","fetch","response","contentType","ready","unregister","reload","checkValidServiceWorker","App","Provider","GlobalStyles","ReactDOM","render","document","getElementById","FormatDateFromStringShortYear","RevertFormatDateFromString","FormatDateFromStringWithSlash"],"mappings":"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","file":"static/js/main.35a71b2b.chunk.js","sourcesContent":["\nconst calculatePrice = (person) =>\n{\n\n    var price = 199;\n\n    if (person.tr)\n    {\n        price = 250;\n    }\n    \n    if (person.certificate)\n    {\n        price += 50;\n    }\n\n    if (person.antiBodyTest)\n    {\n        price += (99 + 50);\n    }\n\n    return price;\n\n}\n\nconst calculateTotalPrice = (persons) =>\n{\n    var totalPrice = 0;\n    for (var i = 0 ; i < persons.length ; i++)\n    {\n        totalPrice += calculatePrice(persons[i]);\n    }\n\n    return totalPrice;\n}\n\nmodule.exports = {\n    calculatePrice : calculatePrice,\n    calculateTotalPrice : calculateTotalPrice\n}","import { createMuiTheme, responsiveFontSizes } from \"@material-ui/core\";\nimport { enGB } from '@material-ui/core/locale';\n\n\nconst black = \"#212121\";\nconst darkBlack = \"rgb(36, 40, 44)\";\nconst background = \"#f9f9f9\";\n\nconst warningLight = \"rgba(253, 200, 69, .3)\";\nconst warningMain = \"rgba(253, 200, 69, .5)\";\nconst warningDark = \"rgba(253, 200, 69, .7)\";\n\n// border\nconst borderWidth = 2;\nconst borderColor = \"rgba(0, 0, 0, 0.13)\";\n\n// breakpoints\nconst xl = 1920;\nconst lg = 1280;\nconst md = 960;\nconst sm = 600;\nconst xs = 0;\n\n// spacing\nconst spacing = 8;\n\nconst theme = createMuiTheme({\n\n  palette: {\n\n    primary: { main: \"#03b5f2\",\n               light: \"#86d5f0\",\n               contrastText:\"#fff\"\n              //  dark: \"#0288D1\",\n              //  light: \"#B3E5FC\"\n\n      },\n    secondary: { main: \"#005eab\", contrastText:\"#fff\" },\n    common: {\n      black,\n      darkBlack\n    },\n    warning: {\n      light: warningLight,\n      main: warningMain,\n      dark: warningDark\n    },\n    // Used to shift a color's luminance by approximately\n    // two indexes within its tonal palette.\n    // E.g., shift from Red 500 to Red 300 or Red 700.\n    tonalOffset: 0.2,\n    background: {\n      default: background\n    },\n    spacing\n  },\n  breakpoints: {\n    // Define custom breakpoint values.\n    // These will apply to Material-UI components that use responsive\n    // breakpoints, such as `Grid` and `Hidden`. You can also use the\n    // theme breakpoint functions `up`, `down`, and `between` to create\n    // media queries for these breakpoints\n    values: {\n      xl,\n      lg,\n      md,\n      sm,\n      xs\n    }\n  },\n  border: {\n    borderColor: borderColor,\n    borderWidth: borderWidth\n  },\n  overrides: {\n    MuiExpansionPanel: {\n      root: {\n        position: \"static\"\n      }\n    },\n    MuiTableCell: {\n      root: {\n        paddingLeft: spacing * 2,\n        paddingRight: spacing * 2,\n        borderBottom: `${borderWidth}px solid ${borderColor}`,\n        [`@media (max-width:  ${sm}px)`]: {\n          paddingLeft: spacing,\n          paddingRight: spacing\n        }\n      }\n    },\n    MuiDivider: {\n      root: {\n        backgroundColor: borderColor,\n        height: borderWidth\n      }\n    },\n    MuiPrivateNotchedOutline: {\n      root: {\n        borderWidth: borderWidth\n      }\n    },\n    MuiListItem: {\n      divider: {\n        borderBottom: `${borderWidth}px solid ${borderColor}`\n      }\n    },\n    MuiDialog: {\n      paper: {\n        width: \"100%\",\n        maxWidth: 430,\n        marginLeft: spacing,\n        marginRight: spacing\n      }\n    },\n    MuiTooltip: {\n      tooltip: {\n        backgroundColor: darkBlack,\n        fontSize: \"0.7rem\"\n      }\n    },\n    MuiExpansionPanelDetails: {\n      root: {\n        [`@media (max-width:  ${sm}px)`]: {\n          paddingLeft: spacing,\n          paddingRight: spacing\n        }\n      }\n    }\n  },\n \n}, enGB);\n\nexport default responsiveFontSizes(theme);\n","import { withStyles } from \"@material-ui/core\";\n\nconst styles = theme => ({\n  \"@global\": {\n    /**\n     * Disable the focus outline, which is default on some browsers like\n     * chrome when focusing elements\n     */\n    \"*:focus\": {\n      outline: 0\n    },\n    \".text-white\": {\n      color: theme.palette.common.white\n    },\n    \".listItemLeftPadding\": {\n      paddingTop: `${theme.spacing(1.75)}px !important`,\n      paddingBottom: `${theme.spacing(1.75)}px !important`,\n      paddingLeft: `${theme.spacing(4)}px !important`,\n      [theme.breakpoints.down(\"sm\")]: {\n        paddingLeft: `${theme.spacing(4)}px !important`\n      },\n      \"@media (max-width:  420px)\": {\n        paddingLeft: `${theme.spacing(1)}px !important`\n      }\n    },\n    \".container\": {\n      width: \"100%\",\n      paddingRight: theme.spacing(4),\n      paddingLeft: theme.spacing(4),\n      marginRight: \"auto\",\n      marginLeft: \"auto\",\n      [theme.breakpoints.up(\"sm\")]: {\n        maxWidth: 540\n      },\n      [theme.breakpoints.up(\"md\")]: {\n        maxWidth: 720\n      },\n      [theme.breakpoints.up(\"lg\")]: {\n        maxWidth: 1170\n      }\n    },\n    \".row\": {\n      display: \"flex\",\n      flexWrap: \"wrap\",\n      marginRight: -theme.spacing(2),\n      marginLeft: -theme.spacing(2)\n    },\n    \".container-fluid\": {\n      width: \"100%\",\n      paddingRight: theme.spacing(2),\n      paddingLeft: theme.spacing(2),\n      marginRight: \"auto\",\n      marginLeft: \"auto\",\n      maxWidth: 1370\n    },\n    \".lg-mg-top\": {\n      marginTop: `${theme.spacing(20)}px !important`,\n      [theme.breakpoints.down(\"md\")]: {\n        marginTop: `${theme.spacing(18)}px !important`\n      },\n      [theme.breakpoints.down(\"sm\")]: {\n        marginTop: `${theme.spacing(16)}px !important`\n      },\n      [theme.breakpoints.down(\"xs\")]: {\n        marginTop: `${theme.spacing(14)}px !important`\n      }\n    },\n    \".lg-mg-bottom\": {\n      marginBottom: `${theme.spacing(20)}px !important`,\n      [theme.breakpoints.down(\"md\")]: {\n        marginBottom: `${theme.spacing(18)}px !important`\n      },\n      [theme.breakpoints.down(\"sm\")]: {\n        marginBottom: `${theme.spacing(16)}px !important`\n      },\n      [theme.breakpoints.down(\"xs\")]: {\n        marginBottom: `${theme.spacing(14)}px !important`\n      }\n    },\n    \".lg-p-top\": {\n      paddingTop: `${theme.spacing(20)}px !important`,\n      [theme.breakpoints.down(\"md\")]: {\n        paddingTop: `${theme.spacing(18)}px !important`\n      },\n      [theme.breakpoints.down(\"sm\")]: {\n        paddingTop: `${theme.spacing(16)}px !important`\n      },\n      [theme.breakpoints.down(\"xs\")]: {\n        paddingTop: `${theme.spacing(14)}px !important`\n      }\n    }\n  }\n});\n\nfunction globalStyles() {\n  return null;\n}\n\nexport default withStyles(styles, { withTheme: true })(globalStyles);\n","/* eslint-disable */\n\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit http://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See http://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'; \nconst GlobalState = React.createContext([{}, () => {}]); \nexport default GlobalState;","export default __webpack_public_path__ + \"static/media/optimal-vision-logo.ba03ccd6.png\";","\n\nexport const authToken = 'Basic QXp1cmXEaWFtb45kOmh1bnRlcjO='\n\nexport const backendAPI = 'https://www.travelpcrtest.com/'\n// export const backendAPI = 'http://localhost:9090/'\n\nexport function getGlobalPath(path){\n    return '/optimalvision/admin' + path\n    // return path\n}\n\nexport function getMenuIdFromGlobalPath(globalPath){\n    try{\n       \n        var split = globalPath.split('/')\n        if (split && split.length > 0)\n        {\n            return split[split.length - 1].length > 0 ?  split[split.length - 1] :  split[split.length - 2]\n        }\n        else\n        {\n            return ''\n        }\n    }\n    catch(err)\n    {\n        return ''\n    }\n}","import axios from 'axios';\nimport { authToken, backendAPI } from '../GlobalPath';\n\nexport default axios.create({\n  baseURL: backendAPI,\n\n  headers : {\n      'Authorization' : authToken\n  }\n});","import API from './api';\n\nexport default class UserService{\n\n    static setToken = (token) =>\n    {\n        this.token = token\n    }\n  \n    static signIn = (payload) =>\n    {\n        return  API.post('/api/optimalvision/user/signin', payload)\n    }\n\n    static checkToken = (payload) =>\n    {\n        return  API.post('/api/optimalvision/user/checktoken', payload)\n    }\n\n}\n","import axios from 'axios';\nimport { authToken, backendAPI } from '../../GlobalPath';\n\nexport default axios.create({\n  baseURL: backendAPI,\n  headers : {\n      'Authorization' : authToken,\n       'Content-Type': 'application/json',\n  }\n});","import API from './api';\nimport axiosRetry from 'axios-retry';\n\nexport default class BookService {\n\n\n   static addNewBooking = (payload) =>\n   {\n      return API.post(`/api/optimalvision/book/bookappointment`, payload);\n   }\n\n\n   static sendRegFormEmail = (bookingId) =>\n   {\n      return API.post(`/api/optimalvision/book/sendregformemail?id=${bookingId}`);\n   }\n   static payBooking = (bookingId,price, paymentMethod, corporate) =>\n   {\n      return API.post(`/api/optimalvision/book/paybooking?id=${bookingId}&paymentmethod=${paymentMethod}&corporate=${corporate}&price=${price}`);\n   }\n\n   static unPayBooking = (bookingId) =>\n   {\n      return API.post(`/api/optimalvision/book/unpaybooking?id=${bookingId}`);\n   }\n\n   static getShouldRefundsCount = () =>\n   {\n      return API.get(`/api/optimalvision/book/getshouldrefundscount?`);\n   }\n\n   \n\n   static refundBooking = (bookingId) =>\n   {\n      return API.post(`/api/optimalvision/payment/refundpayment`, {bookingId: bookingId});\n   }\n\n   static getBookingsStatsByDateStr = (dateStr) =>\n   {\n      return API.get(`/api/optimalvision/book/getbookingsstatsbydatestr?date=${dateStr}`);\n   }\n\n   static getBookingsCountByDateStr = (dateStr) =>\n   {\n      return API.get(`/api/optimalvision/book/getbookingscountbydatestr?date=${dateStr}`);\n   }\n\n   static getAllBookingsCountAll = () =>\n   {\n      return API.get(`/api/optimalvision/book/getallbookingscountall`);\n   }\n\n   static getBookingsCountByDateStrandTime = (dateStr, time, source) =>\n   {\n      return API.get(`/api/optimalvision/book/getbookingscountbydatestrandtime?date=${dateStr}&time=${time}`, {cancelToken: source.token});\n   }\n\n   static getBookingsByDateStrandTime = (dateStr, time) =>\n   {\n      return API.get(`/api/optimalvision/book/getbookingsbydatestrandtime?date=${dateStr}&time=${time}`);\n   }\n\n\n   static getAllBookingsCountByDateStr = (dateStr) =>\n   {\n      return API.get(`/api/optimalvision/book/getallbookingscountbydatestr?date=${dateStr}`);\n   }\n\n   static getAllBookingsCountByDateStrandTime = (dateStr, time, source) =>\n   {\n      return API.get(`/api/optimalvision/book/getallbookingscountbydatestrandtime?date=${dateStr}&time=${time}`, {cancelToken: source.token});\n   }\n\n   static getAllBookingsByDateStrandTime = (dateStr, time) =>\n   {\n      return API.get(`/api/optimalvision/book/getallbookingsbydatestrandtime?date=${dateStr}&time=${time}`);\n   }\n\n   static changeBackToBookingMade = (id) =>\n   {\n      return API.post(`/api/optimalvision/book/changebacktobookingmade?id=${id}`);\n   }\n\n   static changeToPatientAttended = (id) =>\n   {\n      return API.post(`/api/optimalvision/book/changetopatientattended?id=${id}`);\n   }\n\n   static updateBooking = (payload) =>\n   {\n      return API.post(`/api/optimalvision/book/updatebookappointment`, payload);\n   } \n\n   static updateBookingTime = (payload) =>\n   {\n      return API.post(`/api/optimalvision/book/updatebookappointmenttime`, payload);\n   } \n\n   static deleteBooking = (id) =>\n   {\n      return API.post(`/api/optimalvision/book/deletebookappointment?id=${id}`);\n   } \n\n   static unDeleteBooking = (id) =>\n   {\n      return API.post(`/api/optimalvision/book/undeletebookappointment?id=${id}`);\n   } \n\n   static moveToTraceFolderBooking = (id) =>\n   {\n      return API.post(`/api/optimalvision/book/movetotracebookappointment?id=${id}`);\n   } \n\n   static undoMoveToTraceFolderBooking = (id) =>\n   {\n      return API.post(`/api/optimalvision/book/undomovetotracebookappointment?id=${id}`);\n   } \n   \n    static getBookingsByRef = (ref) =>\n    {\n       return API.get(`/api/optimalvision/book/getbookingsbyref?ref=${ref}`);\n    }\n\n    static getBookingById = (id) =>\n    {\n       return API.get(`/api/optimalvision/book/getbookingbyid?id=${id}`);\n    }\n\n    static getAllBookings = (limit) =>\n    {\n      if (!limit) limit = 25 \n      return API.get(`/api/optimalvision/book/getallbookings?limit=${limit}`);\n    }\n\n    static getTraceFolderBookings = (limit) =>\n    {\n      if (!limit) limit = 25 \n      return API.get(`/api/optimalvision/book/gettracefolderdbookings?limit=${limit}`);\n    }\n\n\n    static getDeletedBookings= (limit) =>\n    {\n      if (!limit) limit = 25 \n       return API.get(`/api/optimalvision/book/getdeletedbookings?limit=${limit}`);\n    }\n\n    static getTraceFolderBookings= (limit) =>\n    {\n      if (!limit) limit = 25 \n       return API.get(`/api/optimalvision/book/gettracefolderbookings?limit=${limit}`);\n    }\n\n\n    static getTodayBookings= () =>\n    {\n       return API.get(`/api/optimalvision/book/gettodaybookings`);\n    }\n\n    static getOldBookings= (limit) =>\n    {\n      if (!limit) limit = 25 \n       return API.get(`/api/optimalvision/book/getoldbookings?limit=${limit}`);\n    }\n\n    static getFutureBookings= (limit) =>\n    {\n      if (!limit) limit = 25 \n       return API.get(`/api/optimalvision/book/getfuturebookings?limit=${limit}`);\n    }\n\n    static getRecentBookings= () =>\n    {\n       return API.get(`/api/optimalvision/book/getrecentbookings`);\n    }\n\n    static getRecentBookingsAll= (limit) =>\n    {\n      if (!limit) limit = 25 \n       return API.get(`/api/optimalvision/book/getrecentbookingsall?limit=${limit}`);\n    }\n}","import API from './api';\n\nexport default class PDFService {\n\n\n    static downloadGPRegForm = (id) =>\n    {\n       return API.get(`/api/pdf/downloadgpregform?id=${id}`, {\n        responseType: 'arraybuffer',\n        id: id,\n        headers: {\n            Accept: 'application/pdf',\n        }\n        });\n    }\n\n\n\n}","export const corporates = [\n    'Visa Medical'\n]","import React, { useEffect, useRef, useState } from \"react\";\nimport BookService from \"./services/BookService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {\n  Backdrop,\n  Button,\n  Checkbox,\n  CircularProgress,\n  Divider,\n  FormControlLabel,\n  Grid,\n  InputAdornment,\n  InputLabel,\n  Link,\n  makeStyles,\n  MenuItem,\n  Select,\n  TextField,\n  Tooltip,\n} from \"@material-ui/core\";\nimport GlobalState from \"../GlobalState\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport CreditCardIcon from \"@material-ui/icons/CreditCard\";\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\n\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Draggable from \"react-draggable\";\nimport Paper from \"@material-ui/core/Paper\";\n\nimport Alert from \"@material-ui/lab/Alert\";\n\nimport PropTypes from \"prop-types\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport Box from \"@material-ui/core/Box\";\n\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport { corporates } from \"./Corporates\";\nimport NumberFormat from \"react-number-format\";\n\n\nvar interval;\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    marginTop: theme.spacing(0),\n    marginBottom: theme.spacing(1),\n  },\n\n  refreshButton: {\n    marginLeft: theme.spacing(2),\n  },\n\n  checkIcon: {\n    color: \"green\",\n  },\n\n  closeIcon: {\n    color: \"red\",\n  },\n\n  RefLink: {\n    cursor: \"pointer\",\n  },\n\n  BookedLabel: {\n    backgroundColor: \"#606060\",\n    color: \"#fff\",\n    paddingRight: \"10px\",\n    paddingLeft: \"10px\",\n  },\n\n  PatientAttendedLabel: {\n    backgroundColor: \"#0066aa\",\n    color: \"#fff\",\n    paddingRight: \"15px\",\n    paddingLeft: \"10px\",\n  },\n\n  SampleTakenLabel: {\n    backgroundColor: \"#0066cc\",\n    color: \"#fff\",\n    paddingRight: \"40px\",\n    paddingLeft: \"10px\",\n  },\n\n  ReportSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"90px\",\n    paddingLeft: \"10px\",\n  },\n\n  ReportCertSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"68px\",\n    paddingLeft: \"10px\",\n  },\n\n  archiveButton: {},\n\n  smartMatchButton: {\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    marginRight: \"10px\",\n    // padding: \"10px\"\n  },\n\n  infoTitle: {\n    fontWeight: \"400\",\n  },\n\n  infoData: {\n    paddingLeft: \"10px\",\n    fontWeight: \"800\",\n  },\n\n  matchButton: {\n    marginTop: \"30px\",\n    marginBottom: \"20px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  resendButton: {\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  resendFilesButton: {\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n    backgroundColor: \"#3792ad\",\n    \"&:hover\": {\n      background: \"#2f798f\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  cancelButton: {\n    marginBottom: \"10px\",\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"90px\",\n    paddingRight: \"90px\",\n  },\n\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 5,\n    color: \"#fff\",\n  },\n}));\n\nfunction NumberFormatCustom(props) {\n  const { inputRef, onChange, ...other } = props;\n\n  return (\n    <NumberFormat\n      {...other}\n      getInputRef={inputRef}\n      onValueChange={(values) => {\n        onChange({\n          target: {\n            name: props.name,\n            value: values.value,\n          },\n        });\n      }}\n      thousandSeparator\n      isNumericString\n      prefix=\"\"\n    />\n  );\n}\n\nNumberFormatCustom.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\n\nconst BorderLinearProgress = withStyles((theme) => ({\n  root: {\n    height: 10,\n    borderRadius: 5,\n  },\n  colorPrimary: {\n    backgroundColor: \"#cedbce\", //theme.palette.grey[theme.palette.type === 'light' ? 200 : 700],\n  },\n  bar: {\n    borderRadius: 5,\n    backgroundColor: \"#2f942e\",\n  },\n}))(LinearProgress);\nfunction LinearProgressWithLabel(props) {\n  return (\n    <Box display=\"flex\" alignItems=\"center\">\n      <Box width=\"100%\" mr={1}>\n        <BorderLinearProgress variant=\"determinate\" {...props} />\n      </Box>\n      <Box minWidth={35}>\n        <Typography\n          style={{ fontWeight: \"800\", color: \"#5e855e\" }}\n          variant=\"body2\"\n          color=\"textSecondary\"\n        >{`${Math.round(props.value)}%`}</Typography>\n      </Box>\n    </Box>\n  );\n}\n\nLinearProgressWithLabel.propTypes = {\n  /**\n   * The value of the progress indicator for the determinate and buffer variants.\n   * Value between 0 and 100.\n   */\n  value: PropTypes.number.isRequired,\n};\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable\n      handle=\"#draggable-dialog-title\"\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\n    >\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nexport default function PayDialog(props) {\n  const classes = useStyles();\n\n  const [state, setState] = React.useContext(GlobalState);\n  const [paymentMethod, setPaymentMethod] = useState(\"credit card\");\n  const [corporate, setCorporate] = useState(corporates[0]);\n  const [saving, setSaving] = useState(false);\n\n  const [price, setPrice] = useState(\"\");\n  const [priceError, setPriceError] = useState(false);\n\n  useEffect( () => {\n    if (props.price)\n    {\n      setPrice(`${props.price}`)\n    }else\n    {\n      setPrice('')\n    }\n  }, [props.price, props.open])\n\n\n  const priceChanged = (event) =>\n  {\n    setPrice(event.target.value)\n    setPriceError(false)\n  }\n\n  const paymentMethodChanged = (event) => {\n    setPaymentMethod(event.target.value);\n  };\n\n  const handleClose = () => {\n    if (saving) return;\n\n    props.handleClose();\n    setPaymentMethod(\"credit card\");\n    setPrice('')\n    setCorporate(corporates[0]);\n    setSaving(false);\n  };\n\n  const corporateChanged = (event) => {\n    setCorporate(event.target.value);\n  };\n\n  const payClicked = async () => {\n\n\n    if (!price || price.trim().length === 0 || price === '0')\n    {\n      setPriceError(true)\n      return\n    }\n\n    setSaving(true);\n\n  \n\n    try {\n      await BookService.payBooking(\n        props.booking._id,\n        price,\n        paymentMethod,\n        paymentMethod === \"corporate\" ? corporate : \"\"\n      );\n      setSaving(false);\n      setState((state) => ({\n        ...state,\n        bookingPayChanged: !state.bookingPayChanged ? true : false,\n      }));\n      handleClose();\n    } catch (err) {\n      console.error(err);\n      setSaving(false);\n    }\n  };\n\n  return (\n    <React.Fragment>\n      {props.booking && (\n        <React.Fragment>\n          <Dialog\n            maxWidth=\"xs\"\n            open={props.open}\n            onClose={handleClose}\n            PaperComponent={PaperComponent}\n            aria-labelledby=\"form-dialog-title\"\n          >\n            <DialogTitle id=\"draggable-dialog-title\">\n              <Grid\n                container\n                spacing={2}\n                direction=\"row\"\n                justify=\"center\"\n                alignItems=\"center\"\n              >\n                <Grid item>\n                  <CreditCardIcon\n                    style={{ color: \"#f50057\", fontSize: \"3rem\" }}\n                  />\n                </Grid>\n\n                <Grid item>\n                  <div\n                    style={{\n                      color: \"#f50057\",\n                      paddingBottom: \"10px\",\n                      fontWeight: \"800\",\n                    }}\n                  >\n                    {\" \"}\n                    PAY the CHARGE{\" \"}\n                  </div>\n                </Grid>\n              </Grid>\n\n              <Divider />\n            </DialogTitle>\n            <DialogContent>\n              <div\n                style={{\n                  height: \"300px\",\n                }}\n              >\n                <Grid\n                  container\n                  direction=\"column\"\n                  justify=\"space-between\"\n                  spacing={2}\n                  alignItems=\"flex-start\"\n                >\n                  <Grid item>\n                  <TextField\n                                autoFocus\n                                error={priceError}\n                                label=\"TOTAL Charges\"\n                                value={price}\n                                fullWidth\n                                required\n                                onChange={priceChanged}\n                                name=\"product-price\"\n                                id=\"product-price-id\"\n                                InputProps={{\n                                  inputComponent: NumberFormatCustom,\n                                  startAdornment: (\n                                    <InputAdornment position=\"start\">\n                                      £\n                                    </InputAdornment>\n                                  ),\n                                }}\n                              />\n\n                  </Grid>\n\n                  <Grid item>\n                    <div style={{ fontSize: \"17px\" }}>\n                      {\" \"}\n                      How do you want to pay?{\" \"}\n                    </div>\n                  </Grid>\n\n                  <Grid item>\n                    <FormControl component=\"fieldset\">\n                      <RadioGroup\n                        aria-label=\"paymentMethod\"\n                        name=\"paymentMethod\"\n                        value={paymentMethod}\n                        onChange={paymentMethodChanged}\n                      >\n                        <FormControlLabel\n                          value=\"credit card\"\n                          control={<Radio />}\n                          label=\"Credit Card\"\n                        />\n                        <FormControlLabel\n                          value=\"cash\"\n                          control={<Radio />}\n                          label=\"Cash\"\n                        />\n                        <FormControlLabel\n                          value=\"corporate\"\n                          control={<Radio />}\n                          label=\"Corporate\"\n                        />\n                      </RadioGroup>\n\n                      {paymentMethod === \"corporate\" && (\n                        <FormControl\n                          style={{ marginTop: \"10px\" }}\n                          className={classes.formControl}\n                        >\n                          <Select\n                            labelId=\"select-corporate\"\n                            id=\"select-corporate-id\"\n                            value={corporate}\n                            onChange={corporateChanged}\n                          >\n                            {corporates.map((element) => (\n                              <MenuItem\n                                value={element}\n                              >{`${element}`}</MenuItem>\n                            ))}\n                          </Select>\n                        </FormControl>\n                      )}\n                    </FormControl>\n                  </Grid>\n                </Grid>\n\n                <Grid item></Grid>\n\n                <div\n                  style={{\n                    position: \"absolute\",\n                    bottom: \"20px\",\n                    right: \"20px\",\n                  }}\n                >\n                  <Grid\n                    container\n                    direction=\"row\"\n                    justify=\"flex-end\"\n                    alignItems=\"center\"\n                    spacing={1}\n                  >\n                    <Grid item>\n                      <Button\n                        onClick={handleClose}\n                        style={{ width: \"100px\" }}\n                        disabled={saving}\n                      >\n                        back\n                      </Button>\n                    </Grid>\n                    <Grid item>\n                      <Button\n                        onClick={payClicked}\n                        variant=\"contained\"\n                        color=\"secondary\"\n                        style={{ width: \"100px\" }}\n                        disabled={saving}\n                      >\n                        Pay\n                      </Button>\n                    </Grid>\n                  </Grid>\n                </div>\n              </div>\n\n              <Backdrop className={classes.backdrop} open={saving}>\n                <CircularProgress color=\"inherit\" />\n              </Backdrop>\n            </DialogContent>\n          </Dialog>\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n}\n","\n\nexport const CalendarColors = {\n    PCR_COLOR : \"#4faef7\",\n    GYNAE_COLOR : \"#e83caf\",\n    GP_COLOR :  \"#ff4f14\",\n    STD_COLOR : \"#d6733a\"\n}\n","import API from './api';\n\nexport default class InvoiceService{\n\n    static createInvoice = (payload) =>\n    {\n        return  API.post('/api/medex/invoice/createinvoice', payload)\n    }\n\n    static updateInvoice = (invoiceNumber, payload) =>\n    {\n        return  API.post(`/api/medex/invoice/updateinvoice?invoiceNumber=${invoiceNumber}`, payload)\n    }\n\n    static deleteinvoice = (invoiceNumber) =>\n    {\n        return  API.post(`/api/medex/invoice/deleteinvoice?invoiceNumber=${invoiceNumber}`)\n    }\n\n    static getInvoiceByBookingId = (bookingId) =>\n    {\n        return  API.get(`/api/medex/invoice/getinvoicebybookingid?bookingId=${bookingId}`)\n    }\n\n    static getInvoiceByInvoiceNumber = (invoiceNumber) =>\n    {\n        return  API.get(`/api/medex/invoice/getinvoicebyinvoicenumber?invoiceNumber=${invoiceNumber}`)\n    }\n\n    static getCodeDetails = (code) =>\n    {\n        return  API.post(`/api/medex/invoice/getcodedetails`, {code: code})\n    }\n\n    static getAllCodes = () =>\n    {\n        return API.get(`/api/medex/invoice/getallcodes`)\n    }\n\n    static downloadInvoice = (id) =>\n    {\n       return API.get(`/api/pdf/downloadinvoice?id=${id}`, {\n        responseType: 'arraybuffer',\n        id: id,\n        headers: {\n            Accept: 'application/pdf',\n        }\n        });\n    }\n\n    static emailInvoice = (id, email) =>\n    {\n       return API.post(`/api/pdf/emailinvoice?id=${id}&email=${email}`);\n    }\n\n}\n","import React, { useEffect, useRef, useState } from \"react\";\nimport InvoiceService from \"./services/InvoiceService\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\n\nimport {\n  Backdrop,\n  Button,\n  Checkbox,\n  CircularProgress,\n  DialogActions,\n  Divider,\n  FormControlLabel,\n  Grid,\n  IconButton,\n  InputAdornment,\n  InputLabel,\n  Link,\n  makeStyles,\n  MenuItem,\n  Select,\n  TextField,\n  Tooltip,\n} from \"@material-ui/core\";\nimport GlobalState from \"./GlobalState\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport CreditCardIcon from \"@material-ui/icons/CreditCard\";\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\n\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Draggable from \"react-draggable\";\nimport Paper from \"@material-ui/core/Paper\";\n\nimport Alert from \"@material-ui/lab/Alert\";\n\nimport PropTypes from \"prop-types\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport Box from \"@material-ui/core/Box\";\n\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport NumberFormat from \"react-number-format\";\n\nimport ReceiptIcon from \"@material-ui/icons/Receipt\";\n\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    marginTop: theme.spacing(0),\n    marginBottom: theme.spacing(1),\n  },\n\n  refreshButton: {\n    marginLeft: theme.spacing(2),\n  },\n\n  checkIcon: {\n    color: \"green\",\n  },\n\n  closeIcon: {\n    color: \"red\",\n  },\n\n  RefLink: {\n    cursor: \"pointer\",\n  },\n\n  BookedLabel: {\n    backgroundColor: \"#606060\",\n    color: \"#fff\",\n    paddingRight: \"10px\",\n    paddingLeft: \"10px\",\n  },\n\n  PatientAttendedLabel: {\n    backgroundColor: \"#0066aa\",\n    color: \"#fff\",\n    paddingRight: \"15px\",\n    paddingLeft: \"10px\",\n  },\n\n  SampleTakenLabel: {\n    backgroundColor: \"#0066cc\",\n    color: \"#fff\",\n    paddingRight: \"40px\",\n    paddingLeft: \"10px\",\n  },\n\n  ReportSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"90px\",\n    paddingLeft: \"10px\",\n  },\n\n  ReportCertSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"68px\",\n    paddingLeft: \"10px\",\n  },\n\n  archiveButton: {},\n\n  smartMatchButton: {\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    marginRight: \"10px\",\n    // padding: \"10px\"\n  },\n\n  infoTitle: {\n    fontWeight: \"400\",\n  },\n\n  infoData: {\n    paddingLeft: \"10px\",\n    fontWeight: \"800\",\n  },\n\n  matchButton: {\n    marginTop: \"30px\",\n    marginBottom: \"20px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  resendButton: {\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  resendFilesButton: {\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n    backgroundColor: \"#3792ad\",\n    \"&:hover\": {\n      background: \"#2f798f\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  cancelButton: {\n    marginBottom: \"10px\",\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"90px\",\n    paddingRight: \"90px\",\n  },\n\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 5,\n    color: \"#fff\",\n  },\n}));\n\nfunction NumberFormatCustom(props) {\n  const { inputRef, onChange, ...other } = props;\n\n  return (\n    <NumberFormat\n      {...other}\n      getInputRef={inputRef}\n      onValueChange={(values) => {\n        onChange({\n          target: {\n            name: props.name,\n            value: values.value,\n          },\n        });\n      }}\n      thousandSeparator\n      isNumericString\n      prefix=\"\"\n    />\n  );\n}\n\nNumberFormatCustom.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nconst BorderLinearProgress = withStyles((theme) => ({\n  root: {\n    height: 10,\n    borderRadius: 5,\n  },\n  colorPrimary: {\n    backgroundColor: \"#cedbce\", //theme.palette.grey[theme.palette.type === 'light' ? 200 : 700],\n  },\n  bar: {\n    borderRadius: 5,\n    backgroundColor: \"#2f942e\",\n  },\n}))(LinearProgress);\nfunction LinearProgressWithLabel(props) {\n  return (\n    <Box display=\"flex\" alignItems=\"center\">\n      <Box width=\"100%\" mr={1}>\n        <BorderLinearProgress variant=\"determinate\" {...props} />\n      </Box>\n      <Box minWidth={35}>\n        <Typography\n          style={{ fontWeight: \"800\", color: \"#5e855e\" }}\n          variant=\"body2\"\n          color=\"textSecondary\"\n        >{`${Math.round(props.value)}%`}</Typography>\n      </Box>\n    </Box>\n  );\n}\n\nLinearProgressWithLabel.propTypes = {\n  /**\n   * The value of the progress indicator for the determinate and buffer variants.\n   * Value between 0 and 100.\n   */\n  value: PropTypes.number.isRequired,\n};\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable\n      handle=\"#draggable-dialog-title\"\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\n    >\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nexport default function InvoiceDialog(props) {\n  const classes = useStyles();\n\n  const [state, setState] = React.useContext(GlobalState);\n  const [saving, setSaving] = useState(false);\n\n  const defaultCode = null; //{code:\"\",description:\"\",price:\"0\"}\n\n  const [code, setCode] = useState(defaultCode);\n  const [codeError, setCodeError] = useState(false);\n\n  const [description, setDescription] = useState(\"\");\n  const [descriptionError, setDescriptionError] = useState(false);\n\n  const [notes, setNotes] = useState(\"\");\n  const notesChanged = (event) => {\n    setNotes(event.target.value);\n  };\n\n  const [items, setItems] = React.useState([]);\n\n  const [price, setPrice] = useState(\"\");\n  const [priceError, setPriceError] = useState(false);\n\n  const [title, setTitle] = React.useState(\"INVOICE ISSUANCE\");\n\n  const [allCodes, setAllCodes] = React.useState([]);\n\n  useEffect(() => {\n    if (props.invoice) {\n      setItems(props.invoice.items);\n      setNotes(props.invoice.notes || \"\");\n      setTitle(\"EDIT INVOICE\");\n    } else {\n      setTitle(\"INVOICE ISSUANCE\");\n    }\n\n    fetchAllCodes();\n\n    return () => {\n      setItems([]);\n    };\n  }, [props.invoice]);\n\n  useEffect(() => {\n    if (!props.invoice && props.defaultCodes) {\n      setItems(props.defaultCodes)\n    }\n\n    return () => {\n      setItems([]);\n    };\n  }, [props.defaultCodes]);\n\n\n\n  const fetchAllCodes = async () => {\n    try {\n      const res = await InvoiceService.getAllCodes();\n      setAllCodes(res.data.result);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const priceChanged = (event) => {\n    setPrice(event.target.value);\n    setPriceError(false);\n  };\n\n  const codeChanged = (event) => {\n    setCode(event.target.value?.toUpperCase());\n    setCodeError(false);\n  };\n\n  const descriptionChanged = (event) => {\n    setDescription(event.target.value);\n    setDescriptionError(false);\n  };\n\n  const handleClose = (refresh) => {\n    if (saving) return;\n\n    setPrice(\"\");\n    setCode(defaultCode);\n    setDescription(\"\");\n    setPriceError(false);\n    setCodeError(false);\n    setDescriptionError(false);\n    setItems([]);\n    setNotes(\"\");\n    setSaving(false);\n\n    props.handleClose(refresh);\n  };\n\n  const codeLeft = () => {\n    fetchCodeDetails();\n  };\n\n  const fetchCodeDetails = async () => {\n    try {\n      setDescription(\"...\");\n      const res = await InvoiceService.getCodeDetails(code);\n      if (res.data.status === \"OK\") {\n        const result = res.data.result;\n        if (result.length === 0) {\n          setCodeError(true);\n          setDescription(\"\");\n          setPrice(\"\");\n        } else if (result.length >= 1) {\n          setDescription(result[0].description);\n          setPrice(result[0].price);\n          setDescriptionError(false);\n          setPriceError(false);\n        }\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const addItemClicked = () => {\n    if (!validateItem()) {\n      return;\n    }\n\n    setItems([\n      ...items,\n      { code: code.code, description: code.description, price: code.price },\n    ]);\n    setCode(defaultCode);\n  };\n\n  const addItemClicked2 = () => {\n    if (!validateItem2()) {\n      return;\n    }\n\n    setItems([...items, { code: \"\", description: description, price: price }]);\n    setDescription(\"\");\n    setPrice(\"\");\n  };\n\n  const validateItem = () => {\n    let error = false;\n    if (!code) return false;\n\n    if (!code.description || code.description.length === 0) {\n      error = true;\n    }\n    if (!code.price || code.price.length === 0) {\n      error = true;\n    }\n\n    return !error;\n  };\n\n  const validateItem2 = () => {\n    let error = false;\n    if (!description || description.length === 0) {\n      setDescriptionError(true);\n      error = true;\n    }\n    if (!price || price.length === 0) {\n      setPriceError(true);\n      error = true;\n    }\n\n    return !error;\n  };\n\n  const removeItem = (index) => {\n    let temp = [...items];\n    temp.splice(index, 1);\n    setItems(temp);\n  };\n\n  const getGrandTotal = (_items) => {\n    let total = 0;\n    _items.forEach((element) => {\n      total += parseFloat(element.price);\n    });\n\n    return total;\n  };\n\n  const saveClikced = async () => {\n    if (items.length === 0 && !props.invoice) {\n      return;\n    }\n\n    try {\n      setSaving(true);\n      let name = \"\";\n      let postCode = \"\";\n      let address = \"\";\n\n      if (props.booking.formData) {\n        const formData = JSON.parse(props.booking.formData)\n        name = `${formData.title} ${formData.forename} ${formData.surname}`;\n        postCode = formData.postCode;\n        address = formData.address;\n      } else if (props.booking.forename && props.booking.surname) {\n        name = `${props.booking.forename} ${props.booking.surname}`;\n        postCode = props.booking.postCode;\n        address = props.booking.address;\n      } else if (props.booking.fullname) {\n        name = `${props.booking.fullname}`;\n      }\n\n      const invoice = {\n        name: name,\n        date: new Date(),\n        dateAttended: new Date(props.booking.bookingDate),\n        items: items,\n        grandTotal: getGrandTotal(items),\n        bookingId: props.booking._id,\n        postCode: postCode,\n        address: address,\n        notes: notes,\n      };\n      if (!props.invoice) {\n        await InvoiceService.createInvoice(invoice);\n      } else if (items.length > 0) {\n        await InvoiceService.updateInvoice(\n          props.invoice.invoiceNumber,\n          invoice\n        );\n      } else {\n        await InvoiceService.deleteinvoice(props.invoice.invoiceNumber);\n      }\n\n      setSaving(false);\n      handleClose(true);\n    } catch (err) {\n      console.error(err);\n      setSaving(false);\n    }\n  };\n\n  return (\n    <React.Fragment>\n      {props.booking && (\n        <React.Fragment>\n          <Dialog\n            maxWidth=\"md\"\n            open={props.open}\n            onClose={() => handleClose(false)}\n            PaperComponent={PaperComponent}\n            aria-labelledby=\"form-dialog-title\"\n          >\n            <DialogTitle id=\"draggable-dialog-title\">\n              <Grid\n                container\n                spacing={2}\n                direction=\"row\"\n                justify=\"center\"\n                alignItems=\"center\"\n              >\n                <Grid item>\n                  <ReceiptIcon style={{ color: \"#1cb2c9\", fontSize: \"3rem\" }} />\n                </Grid>\n\n                <Grid item>\n                  <div\n                    style={{\n                      color: \"#1cb2c9\",\n                      paddingBottom: \"10px\",\n                      fontWeight: \"800\",\n                    }}\n                  >\n                    {`${title}`}\n                  </div>\n                </Grid>\n              </Grid>\n\n              <Divider />\n            </DialogTitle>\n            <DialogContent>\n              <div\n                style={{\n                  height: \"700px\",\n                  width: \"100%\",\n                }}\n              >\n                <Grid\n                  container\n                  direction=\"column\"\n                  justify=\"flex-start\"\n                  spacing={1}\n                  alignItems=\"flex-start\"\n                >\n                  <Grid item style={{ width: \"100%\" }}>\n                    <Grid container direction=\"row\" spacing={5}>\n                      <Grid item xs={10}>\n                        <Autocomplete\n                          id=\"code-auto-complete\"\n                          value={code}\n                          onChange={(event, newValue) => {\n                            setCode(newValue);\n                          }}\n                          options={allCodes}\n                          getOptionLabel={(option) =>\n                            `.${option.code} -- ${\n                              option.description\n                            } -- ${parseFloat(\n                              option.price\n                            ).toLocaleString(\"en-GB\", {\n                              style: \"currency\",\n                              currency: \"GBP\",\n                            })}`\n                          }\n                          style={{ width: \"750px\" }}\n                          renderInput={(params) => (\n                            <TextField\n                              {...params}\n                              label=\"System Codes\"\n                              helperText=\"Standard codes already defined in the system\"\n                            />\n                          )}\n                        />\n                      </Grid>\n\n                      <Grid item xs={2}>\n                        <Button\n                          onClick={addItemClicked}\n                          variant=\"outlined\"\n                          color=\"primary\"\n                          style={{ marginTop: \"15px\" }}\n                          disabled={saving}\n                        >\n                          + Add\n                        </Button>\n                      </Grid>\n                    </Grid>\n                  </Grid>\n\n                  <Grid item style={{ width: \"100%\", marginTop: \"20px\" }}>\n                    <Grid container direction=\"row\" spacing={5}>\n                      <Grid item xs={8}>\n                        <TextField\n                          error={descriptionError}\n                          value={description}\n                          onChange={descriptionChanged}\n                          fullWidth\n                          label=\"Description (Custom)\"\n                          name=\"desc\"\n                          helperText=\"You can enter any description you want to be placed on the invoice\"\n                          id=\"desc-id\"\n                        />\n                      </Grid>\n\n                      <Grid item xs={2}>\n                        <TextField\n                          error={priceError}\n                          value={price}\n                          onChange={priceChanged}\n                          fullWidth\n                          label=\"Price\"\n                          name=\"price\"\n                          id=\"price-id\"\n                          InputProps={{\n                            inputComponent: NumberFormatCustom,\n                            startAdornment: (\n                              <InputAdornment position=\"start\">\n                                £\n                              </InputAdornment>\n                            ),\n                          }}\n                        />\n                      </Grid>\n\n                      <Grid item xs={2}>\n                        <Button\n                          onClick={addItemClicked2}\n                          variant=\"outlined\"\n                          color=\"primary\"\n                          style={{ marginTop: \"12px\" }}\n                          disabled={saving}\n                        >\n                          + Add\n                        </Button>\n                      </Grid>\n                    </Grid>\n                  </Grid>\n\n                  <div\n                    style={{\n                      backgroundColor: \"#fff\",\n                      color: \"#1cb2c9\",\n                      fontWeight: \"500\",\n                      fontSize: \"0.95rem\",\n                      padding: \"5px 8px\",\n                      marginBottom: \"-15px\",\n                      marginLeft: \"10px\",\n                      zIndex: \"99\",\n                      marginTop: \"30px\",\n                    }}\n                  >\n                    Invoice Items\n                  </div>\n\n                  <div\n                    style={{\n                      width: \"100%\",\n                      height: \"300px\",\n                      overflowY: \"scroll\",\n                      border: \"1px solid #ddd\",\n                      borderRadius: \"4px\",\n                      padding: \"25px\",\n                      position: \"relative\",\n                    }}\n                  >\n                    <Grid item>\n                      <Grid\n                        container\n                        direction=\"column\"\n                        justify=\"flex-start\"\n                        spacing={2}\n                        alignItems=\"flex-start\"\n                      >\n                        <Grid item style={{ width: \"100%\", fontWeight: \"500\" }}>\n                          <Grid container direction=\"row\" spacing={4}>\n                            <Grid item xs={2}>\n                              Code\n                            </Grid>\n                            <Grid item xs={5}>\n                              Description\n                            </Grid>\n                            <Grid item xs={2}>\n                              Price\n                            </Grid>\n                            <Grid item xs={3}></Grid>\n                          </Grid>\n                        </Grid>\n                        {items.map((item, index) => (\n                          <Grid item style={{ width: \"100%\" }}>\n                            <Grid container direction=\"row\" spacing={4}>\n                              <Grid item xs={2}>\n                                {item.code}\n                              </Grid>\n                              <Grid item xs={5}>\n                                {item.description}\n                              </Grid>\n                              <Grid item xs={2}>\n                                {parseFloat(item.price).toLocaleString(\n                                  \"en-GB\",\n                                  { style: \"currency\", currency: \"GBP\" }\n                                )}\n                              </Grid>\n                              <Grid item xs={3}>\n                                <Tooltip title=\"Remove Item\">\n                                  <IconButton\n                                    style={{ marginTop: \"-15px\" }}\n                                    onClick={() => removeItem(index)}\n                                  >\n                                    <DeleteIcon color=\"primary\" />\n                                  </IconButton>\n                                </Tooltip>\n                              </Grid>\n                            </Grid>\n                          </Grid>\n                        ))}\n                      </Grid>\n                    </Grid>\n                  </div>\n\n                  <Grid item style={{ marginTop: \"10px\", width:\"100%\", display:\"flex\", justifyContent:\"flex-end\", paddingRight:\"30px\" }}>\n                    <span style={{ fontWeight: \"500\", color: \"#777\" }}>\n                      Grand Total :{\" \"}\n                    </span>{\" \"}\n                    <span\n                      style={{\n                        fontWeight: \"500\",\n                        color: \"#1cb2c9\",\n                        marginLeft: \"10px\",\n                        fontSize: \"1rem\",\n                      }}\n                    >\n                      {\" \"}\n                      {getGrandTotal(items).toLocaleString(\"en-GB\", {\n                        style: \"currency\",\n                        currency: \"GBP\",\n                      })}{\" \"}\n                    </span>\n                  </Grid>\n\n                  <Grid item style={{ marginTop: \"10px\", width: \"100%\" }}>\n                    <TextField\n                      value={notes}\n                      onChange={notesChanged}\n                      multiline\n                      rows={2}\n                      helperText=\"* notes will be printed on the invoice (optional)\"\n                      label=\"Notes\"\n                      fullWidth\n                      variant=\"outlined\"\n                      placeholder=\"enter any addional notes you want to be printed on the invoice...\"\n                    ></TextField>\n                  </Grid>\n                </Grid>\n              </div>\n\n              <Backdrop className={classes.backdrop} open={saving}>\n                <CircularProgress color=\"inherit\" />\n              </Backdrop>\n            </DialogContent>\n            <DialogActions>\n              <Grid\n                container\n                direction=\"row\"\n                justify=\"flex-end\"\n                alignItems=\"center\"\n                spacing={1}\n              >\n                <Grid item>\n                  <Button\n                    onClick={() => handleClose(false)}\n                    style={{ width: \"100px\" }}\n                    disabled={saving}\n                  >\n                    back\n                  </Button>\n                </Grid>\n                <Grid item>\n                  <Button\n                    onClick={saveClikced}\n                    variant=\"contained\"\n                    color=   {props.invoice ? 'secondary' : 'primary'}\n                    // style={{ width: \"100px\" }}\n                    disabled={saving}\n                  >\n                    {props.invoice ? 'Save Changes' : 'Issue Invoice'}\n                  </Button>\n                </Grid>\n              </Grid>\n            </DialogActions>\n          </Dialog>\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport GlobalState from \"../GlobalState\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {\n  Button,\n  Checkbox,\n  DialogActions,\n  DialogContentText,\n  Divider,\n  FormControlLabel,\n  IconButton,\n  TextField,\n  Tooltip,\n} from \"@material-ui/core\";\nimport PDFService from \"./services/PDFService\";\n\nimport { calculatePrice } from \"./PriceCalculator\";\n\nimport bookingService from \"./services/BookService\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport CloseIcon from \"@material-ui/icons/Close\";\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Draggable from \"react-draggable\";\nimport Slide from \"@material-ui/core/Slide\";\n\nimport Paper from \"@material-ui/core/Paper\";\n\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport BookService from \"./services/BookService\";\n\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport {\n  FormatDateFromString,\n  RevertFormatDateFromString,\n} from \"./DateFormatter\";\nimport PayDialog from \"./PayDialog\";\n\nimport PrintIcon from \"@material-ui/icons/Print\";\nimport UndoIcon from \"@material-ui/icons/Undo\";\n\nimport SendIcon from \"@material-ui/icons/Send\";\n\nimport HistoryIcon from \"@material-ui/icons/History\";\n\nimport FileCopyOutlinedIcon from \"@material-ui/icons/FileCopyOutlined\";\nimport { CalendarColors } from \"../Admin/calendar-admin/colors\";\nimport InvoiceDialog from \"../InvoiceDialog\";\nimport InvoiceService from \"../services/InvoiceService\";\nimport CallIcon from '@material-ui/icons/Call';\nimport Alert from \"@material-ui/lab/Alert\";\n\nconst useStyles = makeStyles((theme) => ({\n  box: {\n    backgroundColor: \"#373737\",\n    color: \"#fff\",\n    padding: \"1px\",\n    borderRadius: \"4px\",\n    textAlign: \"justify\",\n    paddingRight: \"40px\",\n  },\n\n  boxRed: {\n    backgroundColor: \"#dc2626\",\n    color: \"#fff\",\n    padding: \"1px\",\n    borderRadius: \"4px\",\n    textAlign: \"justify\",\n    paddingRight: \"40px\",\n  },\n\n  boxInfo: {\n    textAlign: \"justify\",\n    backgroundColor: \"#fafafa\",\n    color: \"#333\",\n    padding: \"1px\",\n    borderRadius: \"4px\",\n    paddingRight: \"40px\",\n    border: \"1px solid #eee\",\n  },\n\n  ul: {\n    listStyle: \"none\",\n    padding: \"0\",\n    margin: \"0\",\n  },\n\n  li: {\n    marginBottom: \"15px\",\n  },\n\n  icon: {\n    marginRight: \"8px\",\n  },\n\n  root: {\n    width: \"100%\",\n  },\n\n  lineThrough: {\n    textDecoration: \"line-through\",\n  },\n\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    flexBasis: \"33.33%\",\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n  },\n  secondaryHeading: {\n    fontSize: theme.typography.pxToRem(15),\n  },\n\n  infoDetails: {\n    textAlign: \"left\",\n  },\n\n  infoTitle: {\n    fontWeight: \"800\",\n    marginRight: \"10px\",\n    color: theme.palette.secondary.main,\n    fontSize: \"0.9rem\",\n  },\n\n  infoData: {\n    fontWeight: \"500\",\n    fontSize: \"1rem\",\n  },\n\n  title: {\n    textAlign: \"center\",\n    fontWeight: \"600\",\n    marginLeft: \"10px\",\n    marginBottom: \"5px\",\n  },\n\n  Accordion: {\n    backgroundColor: \"#f5f5f5\",\n    color: \"#222\",\n  },\n\n  AccordionDeleted: {\n    backgroundColor: \"#aaa\",\n    color: \"#555\",\n  },\n\n  DownloadForm: {\n    marginTop: \"10px\",\n    marginBottom: \"10px\",\n  },\n\n  infoDataCharges: {\n    fontSize: \"18px\",\n    color: \"green\",\n    fontWeight: \"600\",\n  },\n\n  infoDataChargesHigher: {\n    fontSize: \"18px\",\n    color: \"red\",\n    fontWeight: \"600\",\n  },\n  BookedLabel: {\n    color: \"#606060\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#606060\",\n    width: \"150px\",\n    display: \"inline-block\",\n  },\n\n  PatientAttendedLabel: {\n    color: \"#0066aa\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#0066aa\",\n    width: \"150px\",\n    display: \"inline-block\",\n  },\n\n  SampleTakenLabel: {\n    color: \"#0066cc\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#0066cc\",\n  },\n\n  ReportSentLabel: {\n    color: \"#009900\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#009900\",\n  },\n\n  ReportCertSentLabel: {\n    color: \"#009900\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#009900\",\n  },\n\n  PositiveLabel: {\n    color: \"red\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"red\",\n  },\n\n  EditButton: {\n    marginBottom: \"20px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n  },\n\n  ResendEmailsButton: {\n    // marginBottom : \"20px\",\n    color: \"#2f942e\",\n    borderColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"#fafffa\",\n      borderColor: \"#2f942e\",\n    },\n    textDecoration: \"none !important\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  PayButton: {\n    marginLeft: \"70px\",\n    width: \"300px\",\n  },\n\n  printInvoiceButton: {\n    marginLeft: \"70px\",\n    fontSize: \"0.8rem\",\n    // width: \"300px\",\n  },\n\n  editInvoiceButton: {\n    marginLeft: \"10px\",\n    fontSize: \"0.8rem\",\n  },\n\n  PayLabel: {\n    marginLeft: \"20px\",\n\n    color: \"#2f942e\",\n    fontWeight: \"500\",\n    textAlign: \"center\",\n  },\n\n  RestoreButton: {\n    marginBottom: \"20px\",\n    backgroundColor: \"#eee\",\n    color: \"#333\",\n    \"&:hover\": {\n      background: \"#f1f1f1\",\n      color: \"#111\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n  },\n\n  UndoTraceButton: {\n    marginBottom: \"20px\",\n    backgroundColor: \"#266900\",\n    color: \"#fff\",\n    \"&:hover\": {\n      background: \"#319400\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n  },\n\n\n  DeleteButton: {\n    marginBottom: \"20px\",\n    backgroundColor: \"#b80012\", \n    color: \"#fff\",\n    \"&:hover\": {\n      background: \"#d90015\",\n      color: \"#fff\",\n    },\n\n    padding: \"10px\",\n  },\n\n  MoveToTraceButton: {\n    marginBottom: \"20px\",\n    backgroundColor: \"#de3800\", \n    color: \"#fff\",\n    \"&:hover\": {\n      background: \"#f73e00\",\n      color: \"#fff\",\n    },\n\n    padding: \"10px\",\n  },\n\n\n  SaveButton: {\n    marginBottom: \"10px\",\n    padding: \"10px\",\n    color: \"#fff\",\n\n    backgroundColor:  \"#bd0d50\",\n    \"&:hover\": {\n      background: \"#d1175e\",\n      color: \"#fff\",\n    },\n  },\n\n  CancelButton: {\n    marginBottom: \"20px\",\n    // padding: \"10px\"\n  },\n\n  TextBox: {\n    padding: \"0px\",\n  },\n\n  checkIcon: {\n    color: \"green\",\n  },\n\n  checkIconSmall: {\n    color: \"green\",\n    paddingTop: \"5px\",\n  },\n\n  closeIcon: {\n    color: \"red\",\n  },\n\n  centeredLabel: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 5,\n    color: \"#fff\",\n  },\n\n  invoiceNumber: {\n    display: \"inline-block\",\n    fontWeight: \"500\",\n    width: \"72px\",\n    fontSize: \"1rem\",\n    color: theme.palette.primary.main,\n  },\n\n  dialogTitle: {\n    backgroundColor: theme.palette.secondary.main,\n    color: \"#fff\",\n  },\n\n  question:{\n    fontSize:\"1.3rem\",\n    fontWeight: \"400\",\n    color: theme.palette.secondary.main,\n    marginTop:\"30px\"\n  },\n\n  answer:{\n    fontSize:\"1.3rem\",\n    fontWeight: \"500\",\n    color: theme.palette.primary.main,\n  },\n\n\n\n}));\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable\n      handle=\"#alert-dialog-slide-title\"\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\n    >\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nexport default function BookingDialog(props) {\n  const classes = useStyles();\n\n  const [state, setState] = React.useContext(GlobalState);\n\n  const [copied, setCopied] = useState(false);\n\n  const [emailSent, setEmailSent] = React.useState(false);\n  const [emailSentInvoice, setEmailSentInvoice] = React.useState(false);\n\n  const [openResendDialog, setOpenResendDialog] = React.useState(false);\n  const [openPayDialog, setOpenPayDialog] = React.useState(false);\n  const [openRefundDialog, setOpenRefundDialog] = React.useState(false);\n\n  const [openInvoiceDialog, setOpenInvoiceDialog] = React.useState(false);\n\n  const [selectedBooking, setSelectedBooking] = React.useState(null);\n\n  const [editMode, setEditMode] = React.useState({ edit: false, person: null });\n  const [deleteMode, setDeleteMode] = React.useState({\n    delete: false,\n    person: null,\n  });\n  const [restoreMode, setRestoreMode] = React.useState({\n    restore: false,\n    person: null,\n  });\n\n  const [traceMode, setTraceMode] = React.useState({\n    trace: false,\n    person: null,\n  });\n  const [unTraceMode, setUnTraceMode] = React.useState({\n    untrace: false,\n    person: null,\n  });\n\n\n  const [saving, setSaving] = React.useState(false);\n  const [notesSaved, setNotesSaved] = React.useState(false);\n\n  const [deleting, setDeleting] = React.useState(false);\n  const [restoring, setRestoring] = React.useState(false);\n\n  const [validationError, setValidationError] = React.useState({});\n\n  const [bookingDate, setBookingDate] = React.useState(\"\");\n  const [bookingTime, setBookingTime] = React.useState(\"\");\n\n  const [fullname, setFullname] = React.useState(\"\");\n  const [email, setEmail] = React.useState(\"\");\n  const [tel, setTel] = React.useState(\"\");\n  const [notes, setNotes] = React.useState(\"\");\n  const [service, setService] = React.useState(\"\");\n\n  const [refreshData, setRefreshData] = React.useState(false);\n\n  const [booking, setBooking] = React.useState(null);\n\n  const [recordChanged, setRecordChanged] = React.useState(false);\n\n  const [fieldChanged, setFieldChanged] = React.useState(false);\n\n  const [openUndoPayDialog, setOpenUndoPayDialog] = React.useState(false);\n\n  const [openTimeStampDialog, setOpenTimeStampDialog] = React.useState(false);\n\n  const [invoice, setInvoice] = React.useState(null);\n  const [invoiceLoaded, setInvoiceLoaded] = React.useState(false);\n\n  useEffect(() => {\n    if (props.open && props.booking) {\n      setNotes(props.booking.notes || '')\n    }\n  }, [props.open, props.booking]);\n\n  const bookingDateChanged = (event) => {\n    setBookingDate(event.target.value);\n    setValidationError({ ...validationError, bookingDateError: false });\n    setFieldChanged(!fieldChanged);\n  };\n\n  const bookingTimeChanged = (event) => {\n    setBookingTime(event.target.value);\n    setValidationError({ ...validationError, bookingTimeError: false });\n    setFieldChanged(!fieldChanged);\n  };\n\n  const fullnameChanged = (event) => {\n    setFullname(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const emailChanged = (event) => {\n    setEmail(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const telChanged = (event) => {\n    setTel(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const serviceChanged = (event) => {\n    setService(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const notesChanged = (event) => {\n    setNotes(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const getStatusLabel = (status) => {\n    if (status === \"booked\") {\n      return <div className={classes.BookedLabel}> Booking Made </div>;\n    } else if (status === \"patient_attended\") {\n      return (\n        <div className={classes.PatientAttendedLabel}> Patient Attended </div>\n      );\n    } else {\n      return \"Unknown\";\n    }\n  };\n\n  const handleEditModeChanged = (edit, person) => {\n    if (edit) {\n      setFullname(person.fullname);\n      setBookingDate(FormatDateFromString(person.bookingDate));\n      setBookingTime(person.bookingTime.toUpperCase());\n      setEmail(person.email);\n      setTel(person.phone);\n      if (person.notes) {\n        setNotes(person.notes);\n      }\n\n      setEditMode({ edit: edit, person: person });\n    } else if (!edit && !person) {\n      setEditMode({ edit: edit, person: person });\n      setRecordChanged(false);\n    } else if (!edit && person) {\n      const booking = {};\n      const bookingId = person._id;\n      booking.email = email;\n      booking.phone = tel;\n      booking.fullname = fullname;\n      booking.notes = notes;\n      booking.service = service;\n      booking.bookingDate = RevertFormatDateFromString(bookingDate);\n      booking.bookingTime = bookingTime;\n      booking.bookingRef = person.bookingRef;\n\n      if (validateBooking(booking)) {\n        updateBooking({ bookingId: bookingId, person: booking });\n      }\n    }\n  };\n\n  const validateDate = (str) => {\n    var error = false;\n    if (!str || str.length !== 10) {\n      error = true;\n    }\n\n    if (str.charAt(4) !== \"-\" || str.charAt(7) !== \"-\") {\n      error = true;\n    }\n\n    try {\n      const result = /^\\d{4}-\\d{2}-\\d{2}$/.test(str);\n      if (!result) {\n        error = true;\n      }\n\n      const year = parseInt(str.substr(0, 4));\n      const month = parseInt(str.substr(5, 2));\n      const day = parseInt(str.substr(8, 2));\n\n      if (year < 1900) {\n        error = true;\n      }\n\n      if (month < 1 || month > 12) {\n        error = true;\n      }\n\n      if (day > 31) {\n        error = true;\n      }\n    } catch (err) {\n      error = true;\n    }\n\n    return !error;\n  };\n\n  const validateTime = (str) => {\n    var error = false;\n\n    const result = /^\\d{2}:\\d{2} AM$|^\\d{2}:\\d{2} PM$/.test(str);\n    if (!result) {\n      error = true;\n    }\n\n    try {\n      const hour = parseInt(str.substr(0, 2));\n      const minute = parseInt(str.substr(3, 2));\n\n      if (hour < 0 || hour > 12) {\n        error = true;\n      }\n\n      if (minute < 0 || minute > 59) {\n        error = true;\n      }\n    } catch (err) {\n      error = true;\n    }\n\n    return !error;\n  };\n\n  const validateBooking = (booking) => {\n    var error = false;\n\n    if (!validateDate(booking.bookingDate)) {\n      error = true;\n      setValidationError({ ...validationError, bookingDateError: true });\n    }\n\n    if (!validateTime(booking.bookingTime)) {\n      error = true;\n      setValidationError({ ...validationError, bookingTimeError: true });\n    }\n    return !error;\n  };\n\n  const updateBooking = (payload) => {\n    setSaving(true);\n    bookingService\n      .updateBooking(payload)\n      .then((res) => {\n        setSaving(false);\n        setEditMode({ edit: false, person: null });\n        setRefreshData(!refreshData);\n      })\n      .catch((err) => {\n        setSaving(false);\n        setEditMode({ edit: false, person: null });\n        console.log(err);\n      });\n  };\n\n  const deleteBooking = (id) => {\n    setDeleting(true);\n    bookingService\n      .deleteBooking(id)\n      .then((res) => {\n        setDeleting(false);\n        setDeleteMode({ delete: false, person: null });\n        setRefreshData(!refreshData);\n      })\n      .catch((err) => {\n        setDeleting(false);\n        setDeleteMode({ delete: false, person: null });\n        console.log(err);\n      });\n  };\n\n  const restoreBooking = (id) => {\n    setRestoring(true);\n    bookingService\n      .unDeleteBooking(id)\n      .then((res) => {\n        setRestoring(false);\n        setRestoreMode({ restore: false, person: null });\n        setRefreshData(!refreshData);\n      })\n      .catch((err) => {\n        setRestoring(false);\n        setRestoreMode({ restore: false, person: null });\n        console.log(err);\n      });\n  };\n\n  const handleDeleteModeChanged = (del, person) => {\n    if (del) {\n      setDeleteMode({ delete: del, person: person });\n    } else if (!del && !person) {\n      setDeleteMode({ delete: del, person: person });\n    } else if (!del && person) {\n      deleteBooking(person._id);\n    }\n  };\n\n  const handleRestoreModeChanged = (restore, person) => {\n    if (restore) {\n      setRestoreMode({ restore: restore, person: person });\n    } else if (!restore && !person) {\n      setRestoreMode({ restore: restore, person: person });\n    } else if (!restore && person) {\n      restoreBooking(person._id);\n    }\n  };\n\n\n\n  const traceBooking = (id) => {\n    setDeleting(true);\n    bookingService\n      .moveToTraceFolderBooking(id)\n      .then((res) => {\n        setDeleting(false);\n        setTraceMode({ trace: false, person: null });\n        setRefreshData(!refreshData);\n      })\n      .catch((err) => {\n        setDeleting(false);\n        setTraceMode({ trace: false, person: null });\n        console.log(err);\n      });\n  };\n\n  const unTraceBooking = (id) => {\n    setRestoring(true);\n    bookingService\n      .undoMoveToTraceFolderBooking(id)\n      .then((res) => {\n        setRestoring(false);\n        setUnTraceMode({ untrace: false, person: null });\n        setRefreshData(!refreshData);\n      })\n      .catch((err) => {\n        setRestoring(false);\n        setUnTraceMode({ untrace: false, person: null });\n        console.log(err);\n      });\n  };\n\n  const handleTraceModeChanged = (del, person) => {\n    if (del) {\n      setTraceMode({ trace: del, person: person });\n    } else if (!del && !person) {\n      setTraceMode({ trace: del, person: person });\n    } else if (!del && person) {\n      traceBooking(person._id);\n    }\n  };\n\n  const handleUnTraceModeChanged = (restore, person) => {\n    if (restore) {\n      setUnTraceMode({ untrace: restore, person: person });\n    } else if (!restore && !person) {\n      setUnTraceMode({ untrace: restore, person: person });\n    } else if (!restore && person) {\n      unTraceBooking(person._id);\n    }\n  };\n\n\n  const changeBackToBookingMade = (event, id) => {\n    setSaving(true);\n    BookService.changeBackToBookingMade(id)\n      .then((res) => {\n        setSaving(false);\n        setRefreshData(!refreshData);\n      })\n      .catch((err) => {\n        console.log(err);\n        setSaving(false);\n      });\n  };\n\n  const changeToPatientAttended = (event, id) => {\n    setSaving(true);\n    BookService.changeToPatientAttended(id)\n      .then((res) => {\n        setSaving(false);\n        setRefreshData(!refreshData);\n      })\n      .catch((err) => {\n        console.log(err);\n        setSaving(false);\n      });\n  };\n\n  const Pay = () => {\n    setSelectedBooking(booking);\n    setOpenPayDialog(true);\n  };\n\n  const OpenInvoiceDialog = () => {\n    setSelectedBooking(booking);\n    setInvoice(invoice);\n    setOpenInvoiceDialog(true);\n  };\n\n  useEffect(() => {\n    if (props.booking) {\n      BookService.getBookingById(props.booking._id)\n        .then((res) => {\n          setBooking(res.data);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n\n      setState((state) => ({\n        ...state,\n        bookingDialogDataChanged: !state.bookingDialogDataChanged\n          ? true\n          : false,\n      }));\n    }\n  }, [refreshData, state.bookingPayChanged]);\n\n  useEffect(() => {\n    if (props.booking) {\n      setBooking(props.booking);\n    }\n  }, [props.booking]);\n\n  const undoPaymentClicked = async () => {\n    setSaving(true);\n    try {\n      await BookService.unPayBooking(booking._id);\n      setSaving(false);\n      setOpenUndoPayDialog(false);\n      setRefreshData(!refreshData);\n    } catch (err) {\n      console.error(err);\n      setSaving(false);\n      setOpenUndoPayDialog(false);\n    }\n  };\n\n  const refundPaymentClicked = async () => {\n    setSaving(true);\n    try {\n      await BookService.refundBooking(booking._id);\n      setSaving(false);\n      updateShouldRefundsCount();\n      setOpenRefundDialog(false);\n      setRefreshData(!refreshData);\n    } catch (err) {\n      console.error(err);\n      setSaving(false);\n      setOpenRefundDialog(false);\n    }\n  };\n\n  const updateShouldRefundsCount = async () => {\n    try {\n      const res = await BookService.getShouldRefundsCount();\n      if (res && res.data && res.data.status === \"OK\") {\n        setState((state) => ({ ...state, shouldRefunsCount: res.data.count }));\n      }\n    } catch (ex) {\n      console.error(ex);\n    }\n  };\n\n  const downloadRegForm = (id) => {\n    PDFService.downloadGPRegForm(id)\n      .then((res) => {\n        const file = new Blob([res.data], { type: \"application/pdf\" });\n\n        const fileURL = URL.createObjectURL(file);\n        window.open(fileURL, \"_blank\");\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const downloadInvoice = (id) => {\n    InvoiceService.downloadInvoice(id)\n      .then((res) => {\n        const file = new Blob([res.data], { type: \"application/pdf\" });\n\n        const fileURL = URL.createObjectURL(file);\n        window.open(fileURL, \"_blank\");\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const sendRegForm = (id) => {\n    setSaving(true);\n    setEmailSent(false);\n    BookService.sendRegFormEmail(id)\n      .then((res) => {\n        setSaving(false);\n        if (res.data.status === \"OK\") {\n          setEmailSent(true);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setSaving(false);\n      });\n  };\n\n  const sendInvoiceEmail = (id, _email) => {\n    setSaving(true);\n    setEmailSentInvoice(false);\n    InvoiceService.emailInvoice(id, _email)\n      .then((res) => {\n        setSaving(false);\n        if (res.data.status === \"OK\") {\n          setEmailSentInvoice(true);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setSaving(false);\n      });\n  };\n\n  const onClose = () => {\n    setEmailSent(false);\n    setEmailSentInvoice(false);\n    setInvoice(null);\n    setSaving(false)\n    setNotesSaved(false)\n    props.onClose();\n  };\n\n  const [openQDialg, setOpenQDialog] = React.useState(false)\n  const handleQDialgClose = () =>\n  {\n    setOpenQDialog(false)\n  }\n\n  const fixQuestion = (str) =>\n  {\n    let result = str.replace('*', '')\n    if (!result.trim().endsWith('?'))\n    {\n      result += '?'\n    }\n    return result\n  }\n\n  const saveNotes = async () =>\n  {\n    try{\n      setSaving(true)\n      setNotesSaved(false)\n      await BookService.updateBooking({bookingId: props.booking._id, notes: notes})\n      setState(state => ({...state, bookingDialogDataChanged : !state.bookingDialogDataChanged}))\n      setNotesSaved(true)\n      setSaving(false)\n\n    }catch(err)\n    {\n      console.log(err)\n      setSaving(false)\n    }\n  }\n\n  return (\n    <React.Fragment>\n      {booking && (\n        <React.Fragment>\n          <Dialog\n            maxWidth=\"md\"\n            open={props.open}\n            TransitionComponent={Transition}\n            keepMounted\n            onClose={onClose}\n            PaperComponent={PaperComponent}\n            aria-labelledby=\"alert-dialog-slide-title\"\n            aria-describedby=\"alert-dialog-slide-description\"\n          >\n            <DialogTitle\n              id=\"alert-dialog-slide-title\"\n              className={classes.dialogTitle}\n              style={!booking.deleted && booking.traceFolder ? {backgroundColor:\"#de3800\", position:\"relative\"} : {position:\"relative\"}}\n            >\n              {booking.questions && (\n                 <div style={{position:\"absolute\", right:\"10px\", top:\"12px\", backgroundColor:\"#069c00\", fontSize:\"0.85rem\", padding:\"8px\", borderRadius:\"10px\"}}>\n                   Self-Test\n                 </div>\n              )}\n\n\n              <Grid\n                container\n                direction=\"row\"\n                justify=\"center\"\n                spacing={2}\n                alignItems=\"center\"\n              >\n                <Grid item>\n                  <div\n                    style={\n                      booking.deleted\n                        ? {\n                            paddingBottom: \"5px\",\n                            textDecoration: \"line-through\",\n                          }\n                        : (\n                          booking.traceFolder ? {\n                            paddingBottom: \"5px\",\n\n                          } : {\n\n                          }\n                        )\n                    }\n                  >\n                    {`${booking.fullname}`}\n                  </div>\n                </Grid>\n\n                {booking.deleted && (\n                  <Grid item>\n                    <Tooltip title=\"This record has been deleted.\">\n                      <DeleteIcon\n                        style={{\n                          padding: 0,\n                          margin: 0,\n                          color: \"#fff\",\n                          fontSize: 25,\n                        }}\n                      />\n                    </Tooltip>\n                  </Grid>\n                )}\n\n                {!booking.deleted && booking.traceFolder && (\n                  <Grid item>\n                    <Tooltip title=\"This record is in the TRACE folder.\">\n                      <CallIcon\n                        style={{\n                          padding: 0,\n                          margin: 0,\n                          color: \"#fff\",\n                          fontSize: \"2rem\",\n                        }}\n                      />\n                    </Tooltip>\n                  </Grid>\n                )}\n\n              </Grid>\n            </DialogTitle>\n            <DialogContent>\n              <div\n                style={{\n                  // height: \"550px\",\n                  paddingTop: \"0px\",\n                }}\n              >\n                <Grid item xs={12} key={`panel0`}>\n                  <div className={classes.infoDetails}>\n                    <ul className={classes.ul}>\n                      <li className={classes.li} style={{ marginTop: \"20px\" }}>\n                        <Grid container spacing={2}>\n                          <Grid item xs={12} md={6}>\n                            <span className={classes.infoTitle}>\n                              BOOKED DATE :\n                            </span>\n\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {FormatDateFromString(booking.bookingDate)}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                error={validationError.bookingDateError}\n                                className={classes.TextBox}\n                                value={bookingDate}\n                                onChange={bookingDateChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n                          <Grid item xs={12} md={6}>\n                            <span className={classes.infoTitle}>\n                              BOOKED TIME :\n                            </span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {booking.bookingTime}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                error={validationError.bookingTimeError}\n                                className={classes.TextBox}\n                                value={bookingTime}\n                                onChange={bookingTimeChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n                        </Grid>\n                      </li>\n\n                      <Divider />\n\n                      <li className={classes.li} style={{ marginTop: \"20px\" }}>\n                        <Grid container spacing={2}>\n                          <Grid item xs={12}>\n                            <span className={classes.infoTitle}>\n                              FULLNAME :{\" \"}\n                            </span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {booking.fullname}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                className={classes.TextBox}\n                                value={fullname}\n                                onChange={fullnameChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n                          <Grid item xs={12} md={6}>\n                            <span className={classes.infoTitle}>EMAIL : </span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {booking.email}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                className={classes.TextBox}\n                                value={email}\n                                onChange={emailChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n                          <Grid item xs={12} md={6}>\n                            <span className={classes.infoTitle}>TEL : </span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {booking.phone?.toUpperCase()}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                className={classes.TextBox}\n                                value={tel}\n                                onChange={telChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n                        </Grid>\n                      </li>\n\n                      <Divider />\n\n                      <li className={classes.li} style={{ marginTop: \"20px\" }}>\n                        <Grid container spacing={2}>\n                          <Grid item xs={12}>\n                            <span className={classes.infoTitle}>\n                              Consultation :{\" \"}\n                            </span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {booking.faceToFaceConsultation && (\n                                <span> Face to Face </span>\n                              )}\n                              {((booking.faceToFaceConsultation &&\n                                booking.telephoneConsultation) ||\n                                (!booking.faceToFaceConsultation &&\n                                  !booking.telephoneConsultation)) && (\n                                <span\n                                  style={{\n                                    paddingLeft: \"5px\",\n                                    paddingRight: \"5px\",\n                                  }}\n                                >\n                                  {\" \"}\n                                  -{\" \"}\n                                </span>\n                              )}\n                              {booking.telephoneConsultation && (\n                                <span> Telephone </span>\n                              )}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                className={classes.TextBox}\n                                value={fullname}\n                                onChange={fullnameChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n                        </Grid>\n                      </li>\n\n                      <Divider />\n\n                      <li className={classes.li} style={{ marginTop: \"20px\" }}>\n                        <Grid container spacing={2}>\n                          <Grid item xs={12}>\n                            <TextField\n                                name=\"notesfromconsultation\"\n                                id=\"notesfromconsultation\"\n                                label=\"Notes From Consultation\"\n                                fullWidth\n                                multiline\n                                rows={5}\n                                variant=\"outlined\"\n                                autoComplete=\"none\"\n                                value={notes || ''}\n                                onChange={(event) => {\n                                    setNotes(event.target.value)\n                                }}\n                            />\n\n                          </Grid>\n                          {notesSaved && (\n                            <Grid item xs={12}>\n                              <Alert severity=\"success\">Notes Saved Successfully!</Alert>\n                            </Grid>                          \n                          )}\n                          <Grid item xs={12}>\n                            <Button onClick={saveNotes} fullWidth variant=\"contained\" color=\"secondary\">\n                                Save Notes\n                            </Button>\n                          </Grid>\n\n                        </Grid>\n                      </li>\n\n                      <Divider />\n\n                      {booking.questions && (\n                        <React.Fragment>\n                          <div style={{display:\"flex\", justifyContent:\"center\"}}>\n                          <Button fullWidth variant=\"contained\" color=\"primary\" style={{color:\"#fff\",margin:\"10px\"}} onClick={() => setOpenQDialog(true)}>\n                             Show questionnaire\n                          </Button>\n                          </div>\n                          <Divider />\n                        </React.Fragment>\n                      )}\n\n                   \n\n                      \n                      <div style={{marginTop:\"20px\"}}>\n\n                      </div>\n\n                      {/* Restore Functionality ******************************************* */}\n                      <li\n                        hidden={\n                          !(\n                            restoreMode.restore &&\n                            restoreMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <div\n                          style={{\n                            fontWeight: \"500\",\n                            paddingBottom: \"10px\",\n                            paddingLeft: \"5px\",\n                            fontSize: \"16px\",\n                            color: \"#333\",\n                          }}\n                        >\n                          Are you sure you want to restore this record?\n                        </div>\n                      </li>\n\n                      <li\n                        hidden={\n                          !booking.deleted ||\n                          (restoreMode.restore &&\n                            restoreMode.person._id === booking._id)\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"primary\"\n                          onClick={() => {\n                            handleRestoreModeChanged(true, booking);\n                          }}\n                          className={classes.RestoreButton}\n                        >\n                          Restore This Record\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            restoreMode.restore &&\n                            restoreMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"primary\"\n                          disabled={restoring}\n                          onClick={() => {\n                            handleRestoreModeChanged(false, booking);\n                          }}\n                          className={classes.SaveButton}\n                        >\n                          YES, Restore this!\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            restoreMode.restore &&\n                            restoreMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"default\"\n                          disabled={restoring}\n                          onClick={() => {\n                            handleRestoreModeChanged(false, null);\n                          }}\n                          className={classes.CancelButton}\n                        >\n                          Cancel\n                        </Button>\n                      </li>\n\n                      {/*  ******************************************************************* */}\n\n                      {/* Delete Functionality ******************************************* */}\n\n                      <li\n                        hidden={\n                          !(\n                            deleteMode.delete &&\n                            deleteMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <div\n                          style={{\n                            fontWeight: \"600\",\n                            paddingBottom: \"10px\",\n                            paddingLeft: \"5px\",\n                            fontSize: \"16px\",\n                          }}\n                        >\n                          Are you sure you want to archive this record?\n                        </div>\n                      </li>\n\n                      <li\n                        hidden={\n                          props.deleteButtonDisabled ||\n                          unTraceMode.untrace ||\n                          traceMode.trace ||\n                          booking.deleted ||\n                          editMode.edit ||\n                          (deleteMode.delete &&\n                            deleteMode.person._id === booking._id)\n                        }\n                      >\n                        {booking.OTCCharges > 0 && (\n                          <Tooltip title={\"Paid Records Cannot be Deleted!\"}>\n                            <div>\n                              <Button\n                                disabled={booking.OTCCharges > 0}\n                                type=\"button\"\n                                fullWidth\n                                variant=\"contained\"\n                                color=\"primary\"\n                                onClick={() => {\n                                  handleDeleteModeChanged(true, booking);\n                                }}\n                                className={classes.DeleteButton}\n                              >\n                                Archive This Record\n                              </Button>\n                            </div>\n                          </Tooltip>\n                        )}\n                        {\n                          <Button\n                            disabled={booking.OTCCharges > 0}\n                            type=\"button\"\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={() => {\n                              handleDeleteModeChanged(true, booking);\n                            }}\n                            className={classes.DeleteButton}\n                          >\n                            Archive This Record\n                          </Button>\n                        }\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            deleteMode.delete &&\n                            deleteMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"primary\"\n                          disabled={deleting}\n                          onClick={() => {\n                            handleDeleteModeChanged(false, booking);\n                          }}\n                          className={classes.SaveButton}\n                        >\n                          YES, Archive this!\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            deleteMode.delete &&\n                            deleteMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"default\"\n                          disabled={deleting}\n                          onClick={() => {\n                            handleDeleteModeChanged(false, null);\n                          }}\n                          className={classes.CancelButton}\n                        >\n                          Cancel\n                        </Button>\n                      </li>\n\n                      {/* ****************************************************************************************** */}\n\n\n\n                      {/* UnTrace Functionality ******************************************* */}\n                      <li\n                        hidden={\n                          !(\n                            unTraceMode.untrace &&\n                            unTraceMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <div\n                          style={{\n                            fontWeight: \"500\",\n                            paddingBottom: \"10px\",\n                            paddingLeft: \"5px\",\n                            fontSize: \"16px\",\n                            color: \"#333\",\n                          }}\n                        >\n                          Are you sure you want to take this record out of TRACE folder?\n                        </div>\n                      </li>\n\n                      <li\n                        hidden={\n                          deleteMode.delete ||\n                          !booking.traceFolder ||\n                          booking.deleted ||\n                          (unTraceMode.untrace &&\n                            unTraceMode.person._id === booking._id)\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"primary\"\n                          onClick={() => {\n                            handleUnTraceModeChanged(true, booking);\n                          }}\n                          className={classes.UndoTraceButton}\n                        >\n                          Take This out of Trace Folder\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            unTraceMode.untrace &&\n                            unTraceMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"primary\"\n                          disabled={restoring}\n                          onClick={() => {\n                            handleUnTraceModeChanged(false, booking);\n                          }}\n                          className={classes.SaveButton}\n                        >\n                          YES, Take this record out of TRACE Folder!\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            unTraceMode.untrace &&\n                            unTraceMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"default\"\n                          disabled={restoring}\n                          onClick={() => {\n                            handleUnTraceModeChanged(false, null);\n                          }}\n                          className={classes.CancelButton}\n                        >\n                          Cancel\n                        </Button>\n                      </li>\n\n                      {/*  ******************************************************************* */}\n\n                      {/* Move To Trace Folder Functionality ******************************************* */}\n\n                      <li\n                        hidden={\n                          !(\n                            traceMode.trace &&\n                            traceMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <div\n                          style={{\n                            fontWeight: \"600\",\n                            paddingBottom: \"10px\",\n                            paddingLeft: \"5px\",\n                            fontSize: \"16px\",\n                          }}\n                        >\n                          Are you sure you want to move this record to TRACE folder?\n                        </div>\n                      </li>\n\n                      <li\n                        hidden={\n                          booking.deleted ||\n                          booking.traceFolder || \n                          deleteMode.delete ||\n                          editMode.edit ||\n                          (traceMode.trace &&\n                            traceMode.person._id === booking._id)\n                        }\n                      >\n                        {\n                          <Button\n                            type=\"button\"\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={() => {\n                              handleTraceModeChanged(true, booking);\n                            }}\n                            className={classes.MoveToTraceButton}\n                          >\n                            Move To Trace Folder\n                          </Button>\n                        }\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            traceMode.trace &&\n                            traceMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"primary\"\n                          disabled={deleting}\n                          onClick={() => {\n                            handleTraceModeChanged(false, booking);\n                          }}\n                          className={classes.SaveButton}\n                        >\n                          YES, Move To TRACE Folder!\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            traceMode.trace &&\n                            traceMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"default\"\n                          disabled={deleting}\n                          onClick={() => {\n                            handleTraceModeChanged(false, null);\n                          }}\n                          className={classes.CancelButton}\n                        >\n                          Cancel\n                        </Button>\n                      </li>\n\n                      {/* ****************************************************************************************** */}\n\n\n                    </ul>\n                  </div>\n                </Grid>\n              </div>\n              <Backdrop\n                className={classes.backdrop}\n                open={saving || deleting || restoring}\n              >\n                <CircularProgress color=\"inherit\" />\n              </Backdrop>\n            </DialogContent>\n          </Dialog>\n\n          <Dialog\n            open={openQDialg}\n            onClose={handleQDialgClose}\n            maxWidth=\"sm\"\n          >\n            <DialogContent>\n                      {booking.questions && JSON.parse(booking.questions).map(item => (\n                        <div >\n                          <div className={classes.question}>\n                            {fixQuestion(item.question)}\n                          </div>\n                          <div className={classes.answer}>\n                            {item.answer}\n                          </div>\n                        </div>\n                      ))}\n            </DialogContent>\n\n            <DialogActions>\n              <Button onClick={() => setOpenQDialog(false)}>\n                Close\n              </Button>\n            </DialogActions>\n\n          </Dialog>\n\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n}\n","import React, {useEffect, useRef, useState} from 'react';\nimport { DataGrid } from '@material-ui/data-grid';\nimport BookService from './services/BookService';\nimport { Button, Checkbox, CircularProgress, Dialog, DialogContent, DialogTitle, Divider, FormControl, FormControlLabel, Grid, Icon, InputLabel, LinearProgress, Link, makeStyles, MenuItem, Paper, Select, SvgIcon, Switch, TextField, Tooltip } from '@material-ui/core';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport { IconButton } from '@material-ui/core';\nimport CheckIcon from '@material-ui/icons/Check';\nimport CloseIcon from '@material-ui/icons/Close';\nimport GlobalState from '../GlobalState';\nimport { getMenuIndex } from '../MenuList';\nimport {FormatDateFromString, FormatDateFromStringShortYear} from './DateFormatter';\n\nimport SearchIcon from '@material-ui/icons/Search';\nimport BookingDialog from './BookingDialog';\n\nimport NewReleasesIcon from '@material-ui/icons/NewReleases';\nimport HistoryIcon from '@material-ui/icons/History';\nimport TimelineIcon from '@material-ui/icons/Timeline';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport AutorenewIcon from '@material-ui/icons/Autorenew';\nimport LiveTvIcon from '@material-ui/icons/LiveTv';\nimport PlaylistAddCheckIcon from '@material-ui/icons/PlaylistAddCheck';\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport HourglassEmptyIcon from '@material-ui/icons/HourglassEmpty';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faFileExcel } from \"@fortawesome/free-solid-svg-icons\";\nimport Draggable from 'react-draggable';\n\nimport * as dateformat from 'dateformat';\n\nimport DateFnsUtils from '@date-io/date-fns';\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardTimePicker,\n  KeyboardDatePicker,\n} from '@material-ui/pickers';\n\nimport BusinessIcon from '@material-ui/icons/Business';\nimport CreditCardIcon from '@material-ui/icons/CreditCard';\nimport LocalAtmIcon from '@material-ui/icons/LocalAtm';\n\n\nimport ReactHTMLTableToExcel from 'react-html-table-to-excel';\nimport PriceCalculator from './PriceCalculator';\nimport { corporates } from './Corporates';\n\nimport CallIcon from '@material-ui/icons/Call';\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    marginTop: theme.spacing(0),\n    marginBottom: theme.spacing(1),\n\n  },\n  \n  refreshButton:{\n    marginLeft: theme.spacing(2),\n  },\n\n  checkIcon:{\n    color: \"green\"\n  },\n\n  closeIcon:{\n    color: \"red\"\n  },\n\n  RefLink: {\n    cursor: \"pointer\"\n  },\n\n  BookedLabel:{\n    backgroundColor: \"#606060\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  PatientAttendedLabel:{\n    backgroundColor: \"#0066aa\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  SampleTakenLabel:{\n    backgroundColor: \"#0066cc\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  ReportSentLabel:{\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  ReportCertSentLabel:{\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  PositiveLabel:{\n    backgroundColor: \"red\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  HideNowRows: {\n    position: \"absolute\",\n    top: \"40%\",\n    left: \"40%\",\n    width: \"600px\",\n    height: \"300px\",\n    backgroundColor : \"#fafafa\",\n    color : \"#111\",\n    zIndex: \"1000\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyItems: \"center\"\n  },\n\n  ExportToExcelButton:\n  {\n    // marginBottom : \"20px\",\n    color : \"#2f942e\",\n    borderColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"#fafffa\",\n      borderColor: \"#2f942e\",\n    },\n    textDecoration : \"none !important\", \n   \n  },\n\n  ExportToExcelButtonInline:\n  {\n    // marginBottom : \"20px\",\n    color : \"#2f942e\",\n    borderColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"#fafffa\",\n      borderColor: \"#2f942e\",\n    },\n    textDecoration : \"none !important\", \n    cursor: \"pointer\",\n    padding: \"10px\"\n   \n  },\n\n  table: {\n    width: \"100%\",\n    border: \"1px solid #ddd\",\n    borderCollapse: \"collapse\",\n},\n\nth: {\n    border: \"1px solid #ddd\",\n    borderCollapse: \"collapse\",\n    verticalAlign: \"middle\",\n    fontcolor: \"#555\",\n    fontWeight: \"400\",\n    fontSize: \"15px\",\n    paddingTop: \"5px\",\n    paddingBottom: \"5px\",\n    width: \"14%\",\n    paddingLeft: \"5px\",\n},\n\ntd: {\n    border: \"1px solid #ddd\",\n    borderCollapse: \"collapse\",\n    verticalAlign: \"middle\",\n    paddingLeft: \"5px\",\n},\n\ntopSelect: {\n  margin: theme.spacing(1),\n  minWidth: 80,\n},\n\nnotifyIcon:{\n  width: \"16px\",\n  height: \"16px\",\n  borderRadius: \"50%\",\n  backgroundColor : \"rgb(220, 0, 78)\",\n  marginLeft: \"10px\"\n}\n\n}));\n\nconst getTableTitle = (str) =>{\n\n  if (str === 'today')\n  {\n    return `Today's Bookings`;\n  }else if (str === 'old')\n  {\n    return `Old Bookings`;\n  }else if (str === 'future')\n  {\n    return `Future Bookings`;\n  }else if (str === 'recent')\n  {\n    return `Recent Bookings`;\n  }else if (str === 'live')\n  {\n    return `Live Bookings`;\n  }else if (str === 'completed')\n  {\n    return `Completed Bookings`;\n  }else if (str === 'positive')\n  {\n    return `Positive Results`;\n  }else if (str === 'trace')\n  {\n    return `Patients to Trace`;\n  }else if (str === 'deleted')\n  {\n    return `Archived Records`;\n  }else if (str === 'late')\n  {\n    return `40 Hours Late`;\n  }\n  \n  else\n  {\n    return `All Bookings`;\n  }\n\n}\n\nconst getTableIcon = (str) =>{\n\n  if (str === 'today')\n  {\n    return <NewReleasesIcon style={{fontSize:\"2.2rem\"}} />;\n  }else if (str === 'old')\n  {\n    return <HistoryIcon style={{fontSize:\"2.2rem\"}} />;\n  }else if (str === 'future')\n  {\n    return <TimelineIcon style={{fontSize:\"2.2rem\"}} />;\n  }else if (str === 'recent')\n  {\n    return <AutorenewIcon style={{fontSize:\"2.2rem\"}} />;\n  }else if (str === 'live')\n  {\n    return <LiveTvIcon style={{fontSize:\"2.2rem\"}} />;\n  }else if (str === 'completed')\n  {\n    return  <PlaylistAddCheckIcon style={{fontSize:\"2.2rem\"}} />;\n  }else if (str === 'positive')\n  {\n    return <AddCircleOutlineIcon style={{fontSize:\"2.2rem\"}} />\n  }else if (str === 'trace')\n  {\n    return <CallIcon style={{fontSize:\"2.2rem\"}} />;\n  }else if (str === 'deleted')\n  {\n    return <DeleteIcon style={{fontSize:\"2.2rem\"}} />;\n  }else if (str === 'late')\n  {\n    return <HourglassEmptyIcon style={{fontSize:\"2.2rem\"}} />;\n  }\n  \n  else\n  {\n    return <DescriptionIcon style={{fontSize:\"2.2rem\"}} />;\n  }\n\n}\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'}>\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nexport default function BookingTable(props) {\n  \n  const classes = useStyles();\n\n  const [topCount, setTopCount] = React.useState(25)\n  const topCountChanged = (event) =>\n  {\n    setTopCount(event.target.value)\n    loadData(event.target.value)\n  }\n  \n\n  const [openDialogExcel, setOpenDialogExcel] = useState(false);\n  const handleCloseDialogExcel = () =>\n  {\n    setCorporate(corporates[0]);\n    setJustCorporate(false);\n    setOpenDialogExcel(false);\n  }\n\n\n  const [fromDate, setFromDate] = React.useState(new Date(new Date().getTime() - 7 * 24 * 60 * 60 * 1000 ));\n  const handleFromDateChange = (date) => {\n    setFromDate(date);\n    setFromDateStr(dateformat(date,'yyyy-mm-dd'));\n  };\n\n  const [untilDate, setUntilDate] = React.useState(new Date(new Date().getTime() - 1 * 24 * 60 * 60 * 1000 ));\n  const handleUntilDateChange = (date) => {\n    setUntilDate(date);\n    seUntilDateStr(dateformat(date,'yyyy-mm-dd'));\n  };\n\n  const [fromDateStr, setFromDateStr] = useState(dateformat(new Date(new Date().getTime() - 7 * 24 * 60 * 60 * 1000 ), 'yyyy-mm-dd'));\n  const [untilDateStr, seUntilDateStr] = useState(dateformat(new Date(new Date().getTime() - 1 * 24 * 60 * 60 * 1000 ), 'yyyy-mm-dd'));\n\n  const [justCorporate, setJustCorporate] = useState(false);\n\n  const[chkDate, setChkDate] = useState(true);\n  const[chkForename, setChkForename] = useState(true);\n  const[chkSurname, setChkSurname] = useState(true);\n  const[chkDOB, setChkDOB] = useState(true);\n  const[chkEmail, setChkEmail] = useState(true);\n  const[chkTel, setChkTel] = useState(true);\n  const[chkCertificate, setChkCertidicate] = useState(true);\n  const[chkAntiBodyTest, setChkAntiBodyTest] = useState(true);\n  const[chkextRef, setChkExtRef] = useState(true);\n  const[chkPrice, setChkPrice] = useState(true);\n\n  const justCorporateChanged = (event) =>\n  {\n    setJustCorporate(event.target.checked);\n  }\n  \n\n  const chkDateChanged = (event) =>\n  {\n    setChkDate(event.target.checked);\n  }\n\n  const chkForenameChanged = (event) =>\n  {\n    setChkForename(event.target.checked);\n  }\n\n  const chkSurnameChanged = (event) =>\n  {\n    setChkSurname(event.target.checked);\n  }\n\n  const chkDOBChanged = (event) =>\n  {\n    setChkDOB(event.target.checked);\n  }\n\n  const chkEmailChanged = (event) =>\n  {\n    setChkEmail(event.target.checked);\n  }\n\n  const chkTelChanged = (event) =>\n  {\n    setChkTel(event.target.checked);\n  }\n\n  const chkCertificateChanged = (event) =>\n  {\n    setChkCertidicate(event.target.checked);\n  }\n\n  const chkAntiBodyTestChanged = (event) =>\n  {\n    setChkAntiBodyTest(event.target.checked);\n  }\n\n  const chkextRefChanged = (event) =>\n  {\n    setChkExtRef(event.target.checked);\n  }\n\n  const chkPriceChanged = (event) =>\n  {\n    setChkPrice(event.target.checked);\n  }\n\n\n\n  var columns = [];\n\n  if (props.date === 'recent')\n  {\n    columns = [\n      // { field: 'id', headerName: '#', width: 70 },\n\n      {\n        field: \"_id\",\n        headerName: \" \",\n        width: 120,\n        renderCell: (params) => {\n          return (\n            <React.Fragment>\n              <IconButton\n                color=\"primary\"\n                onClick={(event) => openDetailsDialog(event, params.value)}\n              >\n                <SearchIcon />\n              </IconButton>\n\n              <span\n                style={{\n                  color: \"#058700\",\n                  fontWeight: \"500\",\n                  fontSize: \"0.8rem\",\n                }}\n              >\n                {params.getValue(\"questions\") && \"Self-Test\"}\n              </span>\n            </React.Fragment>\n          );\n        },\n      },\n\n      {\n        field: \"timeStamp\",\n        headerName: \"TimeStamp\",\n        width: 200,\n        valueFormatter: (params) => {\n          return formatTimeStamp(params.value);\n        },\n      },\n\n      {\n        field: \"bookingDate\",\n        headerName: \"B Date\",\n        width: 110,\n        valueFormatter: (params) => {\n          return FormatDateFromString(params.value);\n        },\n      },\n      {\n        field: \"bookingTimeNormalized\",\n        headerName: \"B Time\",\n        width: 200,\n        valueGetter: (params) => {\n          return params.getValue(\"bookingTime\");\n        },\n      },\n      { field: \"fullname\", headerName: \"Fullname\", width: 250 },\n      { field: \"email\", headerName: \"Email\", width: 200 },\n      { field: \"phone\", headerName: \"Telephone\", width: 150 },\n      {\n        field: \"faceToFaceConsultation\",\n        headerName: \"Consultation\",\n        width: 250,\n        renderCell: (params) => {\n          return (\n            <React.Fragment>\n              {params.getValue(\"faceToFaceConsultation\") && (\n                <span> Face to Face </span>\n              )}\n              {params.getValue(\"faceToFaceConsultation\") && (\n                <span style={{ paddingLeft: \"5px\", paddingRight: \"5px\" }}>\n                  {\" \"}\n                  -{\" \"}\n                </span>\n              )}\n              {params.getValue(\"telephoneConsultation\") && (\n                <span> Telephone </span>\n              )}\n            </React.Fragment>\n          );\n        },\n      },\n    ];\n\n  }\n  else\n  {\n    columns = [\n      // { field: 'id', headerName: '#', width: 70 },\n  \n      {\n        field: \"_id\",\n        headerName: \" \",\n        width: 120,\n        renderCell: (params) => {\n          return (\n            <React.Fragment>\n              <IconButton\n                color=\"primary\"\n                onClick={(event) => openDetailsDialog(event, params.value)}\n              >\n                <SearchIcon />\n              </IconButton>\n\n              <span\n                style={{\n                  color: \"#058700\",\n                  fontWeight: \"500\",\n                  fontSize: \"0.8rem\",\n                }}\n              >\n                {params.getValue(\"questions\") && \"Self-Test\"}\n              </span>\n            </React.Fragment>\n          );\n        },\n      },\n\n\n\n\n  \n      { field: 'bookingDate', headerName: 'B Date', width: 110, valueFormatter: (params) => { \n              return FormatDateFromString(params.value);\n          }\n       },\n      { field: 'bookingTimeNormalized', headerName: 'B Time', width: 200 , valueGetter: (params) => {\n        return params.getValue('bookingTime');\n      }},\n      { field: 'fullname', headerName: 'Fullname', width: 250 },\n      { field: 'email', headerName: 'Email', width: 200 },\n      { field: 'phone', headerName: 'Telephone', width: 150 },\n      { field: 'faceToFaceConsultation', headerName: 'Consultation', width: 250 , renderCell: (params) => {\n        return (\n          <React.Fragment>\n              {params.getValue('faceToFaceConsultation') && <span> Face to Face </span>}\n              {params.getValue('faceToFaceConsultation') && <span style={{paddingLeft:\"5px\", paddingRight:\"5px\"}}> - </span>}\n              {params.getValue('telephoneConsultation') && <span> Telephone </span>}\n          </React.Fragment>\n        )\n      }},\n    \n    ];\n  \n\n  }\n\n\n\n  const [state, setState] = React.useContext(GlobalState);  \n\n  const [data, setData] = React.useState({bookings: [] , cachedBookings: [], isFetching : true});\n\n  const [selectedRow, setSelectedRow] = React.useState(null);\n\n  const [selectedBooking, setSelectedBooking] = React.useState(null);\n  const [seeDetailsDialogOpen, setSeeDetailsDialogOpen] = React.useState(false);\n\n  const [corporate, setCorporate] = useState(corporates[0]);\n  const corporateChanged = (event) =>\n  {\n    setCorporate(event.target.value);\n  }\n  \n\n  const [filter,setFilter] = React.useState('');\n\n\n  const lastPromise = useRef();\n\n  const formatTimeStamp = (timeStamp) =>\n  {\n    const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\n    const timeStampStr = dateformat(timeStamp, 'yyyy-mm-dd');\n    if (todayStr === timeStampStr)\n    {\n      return dateformat(timeStamp, \"'Today', h:MM:ss TT\");\n    }\n    else\n    {\n       return dateformat(timeStamp, \"mmm dS, h:MM:ss TT\");\n    }\n  }\n\n  const loadData = (top) =>\n  {\n    var api = BookService.getAllBookings;\n    if (props.date === 'today')\n    {\n      api = BookService.getTodayBookings;\n    }else if (props.date === 'old')\n    {\n      api = BookService.getOldBookings;\n    }else if (props.date === 'future')\n    {\n      api = BookService.getFutureBookings;\n    }else if (props.date === 'recent')\n    {\n      api = BookService.getRecentBookingsAll;\n    }\n    else if (props.date === 'deleted')\n    {\n      api = BookService.getDeletedBookings;\n    }\n    else if (props.date === 'trace')\n    {\n      api = BookService.getTraceFolderBookings;\n    }\n\n     \n    setData({bookings: [], cachedBookings: [], isFetching: true});\n   \n    // console.log(props)\n\n    const currentPromise = api(top).then( (res) =>{\n      // console.log(res)\n      for (var i=0; i < res.data.length; i++)\n      {\n        res.data[i] = {...res.data[i], id : i + 1}\n      }  \n      setData({bookings: [...res.data], cachedBookings: [...res.data], isFetching: false});\n      // return res.data;\n    }).catch(err => {\n      console.error(err)\n    })\n\n    // lastPromise.current = currentPromise;\n\n    // currentPromise.then(\n    //   result => {\n    //     if (currentPromise === lastPromise.current) {\n    //       setData({bookings: [...result], cachedBookings: [...result], isFetching: false});\n    //       setPage(1);\n    //     }\n    //   },\n    //   e => {\n    //     if (currentPromise === lastPromise.current) {\n    //         console.error(e);\n    //         setData({bookings: data.bookings, cachedBookings: data.cachedBookings, isFetching: false});\n    //     }\n    //   });\n\n  }\n\n  useEffect( () => {\n            setTopCount(25)\n            loadData(25)\n        },\n        [props.date]);\n\n\n\n\n  useEffect( () => {\n\n        if (filter && filter.trim().length > 0)\n        {\n          var filteredData = data.cachedBookings.filter( (element) => \n\n             (element.fullname?.toLowerCase().indexOf(filter.toLowerCase()) >= 0)\n              \n          );\n  \n  \n          setData({bookings: [...filteredData], cachedBookings: data.cachedBookings, isFetching: false});\n        }else\n        {\n          setData({bookings: [...data.cachedBookings], cachedBookings: data.cachedBookings, isFetching: false});\n        }\n      },\n      [filter]);\n\n  \n      useEffect(() => {\n\n       loadData(topCount)\n    \n      }, [state.bookingDialogDataChanged]);    \n\n\n  const handleCloseSeeDetaisDialog = () =>\n  {\n    setSelectedBooking(null);\n    setSeeDetailsDialogOpen(false);\n  }    \n  \n  const openDetailsDialog = (event, id) =>\n  {\n    const booking = data.bookings.find(element => element._id === id);\n    setSelectedBooking(booking);\n    setSeeDetailsDialogOpen(true);\n\n  }\n\n  const refreshClicked = (event) =>{\n    setFilter('');\n    loadData(topCount)\n  }\n\n  const filterChanged = (event) =>{\n    setFilter(event.target.value);\n  }\n\n  const handleSelectionChanged = (newSelection) =>\n  {\n    if (newSelection.length > 0){\n      setSelectedRow(newSelection.rows[0]);\n    }\n    \n  }\n\n  const [page, setPage] = React.useState(1);\n\n  const handleExcelButtonClicked = (event) =>\n  {\n    setOpenDialogExcel(true);\n  }\n\n  const isTopSelectHidden = (date)=>\n  {\n    return date === 'live' || date === 'positive' || date === 'late' || date === 'today'\n  }\n\n\n  return (\n    <React.Fragment>\n      {data.isFetching && (\n        <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\n          <LinearProgress color=\"primary\" />\n        </div>\n      )}\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"space-between\"\n        alignItems=\"flex-end\"\n      >\n        <Grid item md={4}>\n          <div style={{ textAlign: \"left\", paddingLeft: \"10px\" }}>\n            <Grid\n              container\n              direction=\"row\"\n              justify=\"flex-start\"\n              alignItems=\"center\"\n            >\n              <Grid item>\n                <span style={{ paddingRight: \"15px\", color: \"#555\" }}>\n                  {\" \"}\n                  {getTableIcon(props.date)}{\" \"}\n                </span>\n              </Grid>\n              <Grid item>\n                <span\n                  style={{\n                    fontSize: \"1.4rem\",\n                    fontWeight: \"600\",\n                    color: \"#444\",\n                  }}\n                >\n                  {\" \"}\n                  {getTableTitle(props.date)}{\" \"}\n                </span>\n              </Grid>\n              <Grid item>\n                <Tooltip title=\"Refresh\" placement=\"right\">\n                  <IconButton\n                    color=\"primary\"\n                    className={classes.refreshButton}\n                    onClick={refreshClicked}\n                  >\n                    <RefreshIcon />\n                  </IconButton>\n                </Tooltip>\n              </Grid>\n            </Grid>\n          </div>\n        </Grid>\n\n        <Grid item md={3}>\n          {props.date === \"completed\" && state.showCreateExcel && (\n            <div style={{ paddingBottom: \"5px\" }}>\n              <Button\n                className={classes.ExportToExcelButton}\n                variant=\"outlined\"\n                color=\"default\"\n                onClick={handleExcelButtonClicked}\n                startIcon={\n                  <FontAwesomeIcon\n                    style={{ color: \"#009900\" }}\n                    icon={faFileExcel}\n                  />\n                }\n              >\n                export to excel\n              </Button>\n            </div>\n          )}\n        </Grid>\n\n        {data.isFetching && <div className={classes.HideNowRows}></div>}\n\n        <Grid item md={3}>\n          <TextField\n            variant=\"standard\"\n            value={filter}\n            onChange={filterChanged}\n            margin=\"normal\"\n            size=\"small\"\n            id=\"filter\"\n            label=\"Filter\"\n            name=\"filter\"\n            autoComplete=\"off\"\n          />\n        </Grid>\n\n        <Grid item hidden={isTopSelectHidden(props.date)}>\n          <FormControl className={classes.topSelect}>\n            <InputLabel id=\"top-select-label\">Limit</InputLabel>\n            <Select\n              labelId=\"top-select-label\"\n              id=\"top-simple-select\"\n              value={topCount}\n              onChange={topCountChanged}\n            >\n              <MenuItem value={25}>25</MenuItem>\n              <MenuItem value={50}>50</MenuItem>\n              <MenuItem value={100}>100</MenuItem>\n              <MenuItem value={500}>500</MenuItem>\n              <MenuItem value={1000}>1000</MenuItem>\n              <MenuItem value={10000}>ALL</MenuItem>\n            </Select>\n          </FormControl>\n\n          {/* <Button onClick={() => loadData(true)}> Show all records </Button> */}\n        </Grid>\n      </Grid>\n\n      <div style={{ height: 700, width: \"100%\" }}>\n        <DataGrid\n          rows={data.bookings}\n          columns={columns}\n          autoPageSize\n          page={page}\n          onPageChange={(params) => {\n            setPage(params.page);\n          }}\n          onSelectionChange={handleSelectionChanged}\n        />\n      </div>\n\n\n      <BookingDialog\n        booking={selectedBooking}\n        open={seeDetailsDialogOpen && selectedBooking && selectedBooking.fullname}\n        onClose={handleCloseSeeDetaisDialog}\n      />\n\n      {data.bookings && data.bookings.length > 0 && (\n        <Dialog\n          maxWidth=\"lg\"\n          open={openDialogExcel}\n          onClose={handleCloseDialogExcel}\n          PaperComponent={PaperComponent}\n          aria-labelledby=\"form-dialog-title\"\n        >\n          <DialogTitle id=\"draggable-dialog-title\">\n            <Grid\n              container\n              spacing={2}\n              direction=\"row\"\n              justify=\"center\"\n              alignItems=\"center\"\n            >\n              <Grid item>\n                <FontAwesomeIcon\n                  style={{ color: \"#2f942e\", fontSize: \"2rem\" }}\n                  icon={faFileExcel}\n                />\n              </Grid>\n\n              <Grid item>\n                <div\n                  style={{\n                    color: \"#2f942e\",\n                    paddingBottom: \"5px\",\n                    fontWeight: \"800\",\n                  }}\n                >\n                  {\" \"}\n                  Export to EXCEL{\" \"}\n                </div>\n              </Grid>\n            </Grid>\n\n            <Divider />\n          </DialogTitle>\n          <DialogContent>\n            <div\n              style={{\n                minHeight: \"600px\",\n                maxHeight: \"600px\",\n                minWidth: \"1200px\",\n                maxWidth: \"1200px\",\n              }}\n            >\n              <div>\n                <Grid row container justify=\"center\" spacing={3}>\n                  <Grid item>\n                    <FormControlLabel\n                      control={\n                        <Switch\n                          checked={justCorporate}\n                          onChange={justCorporateChanged}\n                          name=\"justCorporate\"\n                        />\n                      }\n                      label=\"Just Corporate Records\"\n                    />\n                  </Grid>\n\n                  {justCorporate && (\n                    <Grid item>\n                      <FormControl\n                        style={{ marginTop: \"0px\" }}\n                        className={classes.formControl}\n                      >\n                        <Select\n                          labelId=\"select-corporate\"\n                          id=\"select-corporate-id\"\n                          value={corporate}\n                          onChange={corporateChanged}\n                        >\n                          {corporates.map((element) => (\n                            <MenuItem value={element}>{`${element}`}</MenuItem>\n                          ))}\n                        </Select>\n                      </FormControl>\n                    </Grid>\n                  )}\n                </Grid>\n\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                  <Grid row container justify=\"center\" spacing={3}>\n                    <Grid item>\n                      <KeyboardDatePicker\n                        disableToolbar\n                        variant=\"inline\"\n                        format=\"dd/MM/yyyy\"\n                        margin=\"normal\"\n                        id=\"date-picker-from\"\n                        label=\"From\"\n                        value={fromDate}\n                        onChange={handleFromDateChange}\n                        KeyboardButtonProps={{\n                          \"aria-label\": \"change date\",\n                        }}\n                      />\n                    </Grid>\n\n                    <Grid item>\n                      <KeyboardDatePicker\n                        disableToolbar\n                        variant=\"inline\"\n                        format=\"dd/MM/yyyy\"\n                        margin=\"normal\"\n                        id=\"date-picker-until\"\n                        label=\"Until\"\n                        value={untilDate}\n                        onChange={handleUntilDateChange}\n                        KeyboardButtonProps={{\n                          \"aria-label\": \"change date\",\n                        }}\n                      />\n                    </Grid>\n\n                    <Grid item>\n                      <div style={{ paddingTop: \"30px\", marginLeft: \"20px\" }}>\n                        <ReactHTMLTableToExcel\n                          id=\"test-table-xls-button\"\n                          className={classes.ExportToExcelButtonInline}\n                          table=\"table-to-xls\"\n                          filename={`PCR.Report.${fromDateStr}.${untilDateStr}`}\n                          sheet=\"PCR-Report\"\n                          buttonText=\"Download as XLS\"\n                        />\n                      </div>\n                    </Grid>\n                  </Grid>\n                </MuiPickersUtilsProvider>\n              </div>\n\n              <div>\n                <Grid container spacing={3}>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkDate}\n                          onChange={chkDateChanged}\n                          name=\"chkDate\"\n                        />\n                      }\n                      label=\"Date\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkForename}\n                          onChange={chkForenameChanged}\n                          name=\"chkForename\"\n                        />\n                      }\n                      label=\"Forename\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkSurname}\n                          onChange={chkSurnameChanged}\n                          name=\"chkSurname\"\n                        />\n                      }\n                      label=\"Surname\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkDOB}\n                          onChange={chkDOBChanged}\n                          name=\"chkDOB\"\n                        />\n                      }\n                      label=\"D.O.B\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkEmail}\n                          onChange={chkEmailChanged}\n                          name=\"chkEmail\"\n                        />\n                      }\n                      label=\"Email\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkTel}\n                          onChange={chkTelChanged}\n                          name=\"chkTel\"\n                        />\n                      }\n                      label=\"Tel\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkCertificate}\n                          onChange={chkCertificateChanged}\n                          name=\"chkCertificate\"\n                        />\n                      }\n                      label=\"Certificate\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkAntiBodyTest}\n                          onChange={chkAntiBodyTestChanged}\n                          name=\"chkAntiBodyTest\"\n                        />\n                      }\n                      label=\"AntiBodyTest\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkextRef}\n                          onChange={chkextRefChanged}\n                          name=\"chkextRef\"\n                        />\n                      }\n                      label=\"Lab No.\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkPrice}\n                          onChange={chkPriceChanged}\n                          name=\"chkPrice\"\n                        />\n                      }\n                      label=\"Price\"\n                    />\n                  </Grid>\n                </Grid>\n              </div>\n\n              <div style={{ width: \"100%\", paddingTop: \"20px\" }}>\n                <table className={classes.table} id=\"table-to-xls\">\n                  <tr>\n                    {chkDate && <th className={classes.th}>Date</th>}\n                    {chkForename && <th className={classes.th}>Forename</th>}\n                    {chkSurname && <th className={classes.th}>Surename</th>}\n                    {chkDOB && <th className={classes.th}>D.O.B</th>}\n                    {chkEmail && <th className={classes.th}>Email</th>}\n                    {chkTel && <th className={classes.th}>Tel</th>}\n                    {chkCertificate && (\n                      <th className={classes.th}>Certificate</th>\n                    )}\n                    {chkAntiBodyTest && (\n                      <th className={classes.th}>AntiBodyTest</th>\n                    )}\n                    {chkextRef && <th className={classes.th}>Lab No.</th>}\n                    {chkPrice && <th className={classes.th}>Price (£) </th>}\n                  </tr>\n\n                  {data.bookings\n                    .filter((booking) => {\n                      if (!justCorporate) {\n                        return (\n                          booking.bookingDate >= fromDateStr &&\n                          booking.bookingDate <= untilDateStr\n                        );\n                      } else {\n                        return (\n                          booking.bookingDate >= fromDateStr &&\n                          booking.bookingDate <= untilDateStr &&\n                          booking.paid &&\n                          booking.paidBy === \"corporate\" &&\n                          booking.corporate === corporate\n                        );\n                      }\n                    })\n\n                    .map((booking) => (\n                      <tr>\n                        {chkDate && (\n                          <td className={classes.td}>\n                            {FormatDateFromString(booking.bookingDate)}\n                          </td>\n                        )}\n                        {chkForename && (\n                          <td className={classes.td}>\n                            {booking.forenameCapital}\n                          </td>\n                        )}\n                        {chkSurname && (\n                          <td className={classes.td}>\n                            {booking.surnameCapital}\n                          </td>\n                        )}\n                        {chkDOB && (\n                          <th className={classes.th}>\n                            {/* {FormatDateFromString(booking.birthDate)} */}\n                          </th>\n                        )}\n                        {chkEmail && (\n                          <td className={classes.td}>{booking.email}</td>\n                        )}\n                        {chkTel && (\n                          <td className={classes.td}>{booking.phone}</td>\n                        )}\n                        {chkCertificate && (\n                          <td className={classes.td}>\n                            {booking.certificate ? \"YES\" : \"NO\"}\n                          </td>\n                        )}\n                        {chkAntiBodyTest && (\n                          <td className={classes.td}>\n                            {booking.antiBodyTest ? \"YES\" : \"NO\"}\n                          </td>\n                        )}\n                        {chkextRef && (\n                          <td className={classes.td}>{booking.extRef}</td>\n                        )}\n                        {chkPrice && (\n                          <td className={classes.td}>\n                            {PriceCalculator.calculatePrice(booking)}\n                          </td>\n                        )}\n                      </tr>\n                    ))}\n                </table>\n              </div>\n            </div>\n          </DialogContent>\n        </Dialog>\n      )}\n    </React.Fragment>\n  );\n} ","\n\nexport const CalendarColors = {\n    PCR_COLOR : \"#4faef7\",\n    GYNAE_COLOR : \"#e83caf\",\n    GP_COLOR :  \"#ff4f14\",\n    STD_COLOR : \"#d6733a\",\n    BLOOD_COLOR: \"#dc2626\",\n\n    VC_COLOR : \"#0c7acf\",\n    F2F_COLOR : \"#8600d4\",\n    LASER_COLOR :  \"#d1005e\",\n    CATARACT_COLOR : \"#00919e\",\n    POSTOP_COLOR: \"#9e6c00\",\n    OPOTOMETRY_COLOR: \"#007d0c\"\n\n\n}\n","import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport PropTypes from \"prop-types\";\nimport dateformat from \"dateformat\";\nimport BookService from \"../services/BookService\";\n\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nimport GlobalState from \"../../GlobalState\";\nimport { Grid } from \"@material-ui/core\";\nimport { CalendarColors } from \"./colors\";\n\nconst useStyles = makeStyles((theme) => ({\n  Container: {\n    width: \"100%\",\n    minWidth:\"200px\",\n    paddingTop: \"70%\",\n    position: \"relative\",\n    backgroundColor: \"#fff\",\n    cursor: \"pointer\",\n  },\n\n  ContainerPast: {\n    width: \"100%\",\n    paddingTop: \"70%\",\n    position: \"relative\",\n    backgroundColor: \"#fafafa\",\n  },\n\n  DayLabel: {\n    position: \"absolute\",\n    top: \"5px\",\n    right: \"5px\",\n    color: \"#555\",\n    fontSize: \"1rem\",\n  },\n\n  DayLabelToday: {\n    position: \"absolute\",\n    top: \"5px\",\n    right: \"5px\",\n    backgroundColor: \"#1a73e8\",\n    color: \"#fff\",\n    fontSize: \"1rem\",\n    borderRadius: \"50%\",\n    padding: \"5px\",\n    lineHight: \"35px\",\n    minWidth: \"35px\",\n    textAlign: \"center\",\n  },\n\n  DayLabelDisabled: {\n    position: \"absolute\",\n    top: \"5px\",\n    right: \"5px\",\n    color: \"#ddd\",\n    fontSize: \"1rem\",\n  },\n\n  BookingCountLabel: {\n    position: \"absolute\",\n    top: \"35%\",\n    left: \"40%\",\n    color: \"#3f51b5\",\n    backgroundColor: \"#ebedf7\",\n    fontSize: \"16px\",\n    fontWeight: \"600\",\n    padding: \"10px\",\n    borderRadius: \"50%\",\n    minWidth: \"40px\",\n    lineHight: \"40px\",\n    cursor: \"pointer\",\n    textAlign: \"center\",\n  },\n\n  BookingCountLabelBusy: {\n    position: \"absolute\",\n    top: \"35%\",\n    left: \"40%\",\n    color: \"#b00000\",\n    backgroundColor: \"#fce6e6\",\n    fontSize: \"16px\",\n    fontWeight: \"600\",\n    padding: \"10px\",\n    borderRadius: \"50%\",\n    minWidth: \"40px\",\n    cursor: \"pointer\",\n    textAlign: \"center\",\n  },\n\n  LoadingProgress: {\n    position: \"absolute\",\n    top: \"40%\",\n    left: \"40%\",\n  },\n\n  BookingCountGauge: {\n    position: \"absolute\",\n    bottom: \"5%\",\n    left: \"8%\",\n    width: \"8%\",\n    height: \"85%\",\n  },\n\n  PCRGauge: {\n    position: \"absolute\",\n    bottom: \"-20px\",\n    left: \"0\",\n    width: \"30px\",\n    height: \"120%\",\n  },\n\n  GynaeGauge: {\n    position: \"absolute\",\n    bottom: \"-20px\",\n    left: \"31px\",\n    width: \"20px\",\n    height: \"120%\",\n  },\n\n  GPGauge: {\n    position: \"absolute\",\n    bottom: \"-20px\",\n    left: \"52px\",\n    width: \"20px\",\n    height: \"120%\",\n  },\n\n  STDGauge: {\n    position: \"absolute\",\n    bottom: \"-20px\",\n    left: \"73px\",\n    width: \"20px\",\n    height: \"120%\",\n  },\n\n  BloodGauge: {\n    position: \"absolute\",\n    bottom: \"-20px\",\n    left: \"94px\",\n    width: \"20px\",\n    height: \"120%\",\n  },\n\n  DayLabelContainer: {\n    position: \"absolute\",\n    top: \"15%\",\n    left: \"5px\",\n    width: \"100%\",\n    paddingTop: \"45%\",\n  },\n}));\n\nconst MAX_BOOKING_COUNT_PCR = 50;\nconst MAX_BOOKING_COUNT_GP = 10;\nconst MAX_BOOKING_COUNT_STD = 10;\nconst MAX_BOOKING_COUNT_GYNAE = 10;\nconst MAX_BOOKING_COUNT_BLOOD = 10;\n\nconst MAX_BOOKING_COUNT = 10;\n\n\n\nconst MonthViewCell = ({ key, cellIndex, month, daysInMonth, dayClicked }) => {\n  const classes = useStyles();\n\n  const [state, setState] = React.useContext(GlobalState);\n\n  const [dateStr, setDateStr] = React.useState(\"\");\n\n  const [cellDate, setCellDate] = React.useState(new Date());\n\n  const [bookingsCount, setBookingsCount] = React.useState(null);\n\n  const [disableDay, setDisableDay] = React.useState(false);\n\n  const [isPast, setIsPast] = React.useState(false);\n\n  useEffect(() => {\n    if (cellIndex <= daysInMonth.length) {\n      const date = daysInMonth[cellIndex - 1];\n      const dateStr = dateformat(date, \"yyyy-mm-dd\");\n      setDateStr(dateStr);\n      setCellDate(date);\n      setDisableDay(date.getMonth() !== month - 1);\n      const todayStr = dateformat(new Date(), \"yyyy-mm-dd\");\n      setIsPast(dateStr < todayStr);\n    } else {\n      const day = cellIndex - daysInMonth.length;\n      const date = new Date(\n        daysInMonth[daysInMonth.length - 1].getTime() + day * 86400000\n      );\n      const dateStr = dateformat(date, \"yyyy-mm-dd\");\n      setDateStr(dateStr);\n      setCellDate(date);\n      setDisableDay(true);\n      const todayStr = dateformat(new Date(), \"yyyy-mm-dd\");\n      setIsPast(dateStr < todayStr);\n    }\n  }, [cellIndex, month, daysInMonth]);\n\n  useEffect(() => {\n    const fecthData = async () => {\n      if (!dateStr || dateStr.length <= 0) {\n        return;\n      }\n\n      if (disableDay) {\n        setBookingsCount(-2);\n        return;\n      }\n\n      setBookingsCount(null);\n\n      var res = state.AdminCalendarCache?.find(\n        (record) =>\n          record.method === \"getBookingsCountByDateStr\" &&\n          record.query === dateStr\n      )?.res;\n\n      if (!res) {\n        res = await BookService.getAllBookingsCountByDateStr(dateStr);\n        setState((state) => ({\n          ...state,\n          AdminCalendarCache: [\n            ...state.AdminCalendarCache,\n            { method: \"getBookingsCountByDateStr\", query: dateStr, res: res },\n          ],\n        }));\n      }\n\n      if (res.data.count) {\n        setBookingsCount(res.data.count);\n      }\n    };\n\n    fecthData();\n  }, [dateStr]);\n\n  const getDayLabel = (_cellIndex, _month, _daysInMonth) => {\n    var date = null;\n    var disabled = false;\n    var day = -1;\n\n    if (_cellIndex <= _daysInMonth.length) {\n      date = _daysInMonth[_cellIndex - 1];\n      day = date.getDate();\n      if (date.getMonth() !== _month - 1) {\n        disabled = true;\n      }\n    } else {\n      const _day = _cellIndex - _daysInMonth.length;\n      const date = new Date(\n        _daysInMonth[_daysInMonth.length - 1].getTime() + _day * 86400000\n      );\n      day = date.getDate();\n      disabled = true;\n    }\n\n    const isToday =\n      dateformat(new Date(), \"yyyy-mm-dd\") === dateformat(date, \"yyyy-mm-dd\");\n\n    return (\n      <span\n        className={\n          disabled\n            ? classes.DayLabelDisabled\n            : isToday\n            ? classes.DayLabelToday\n            : classes.DayLabel\n        }\n      >\n        {day > 0 ? `${day}` : \"\"}\n      </span>\n    );\n  };\n\n  const getClinicBar = (clinic, count) => {\n    return (\n      <React.Fragment>\n        {clinic === \"Virtual Consultation\" &&\n          state.selectedClinics.findIndex((e) => e === \"Virtual Consultation\") >= 0 &&\n          getVCClinicBar(count)}\n        {clinic === \"F2F Clinic\" &&\n          state.selectedClinics.findIndex((e) => e === \"F2F Clinic\") >= 0 &&\n          getF2FClinicBar(count)}\n        {clinic === \"Laser Theatre\" &&\n          state.selectedClinics.findIndex((e) => e === \"Laser Theatre\") >= 0 &&\n          getLaserClinicBar(count)}\n        {clinic === \"Lens Theatre\" &&\n          state.selectedClinics.findIndex((e) => e === \"Lens Theatre\") >= 0 &&\n          getCataractClinicBar(count)}\n                 {clinic === \"Post OP\" &&\n          state.selectedClinics.findIndex((e) => e === \"Post OP\") >= 0 &&\n          getPostOPClinicBar(count)}\n \n      </React.Fragment>\n    );\n  };\n\n  const minHeight = 1;\n  const getVCClinicBar = (count) => {\n    let width = (count / MAX_BOOKING_COUNT) * 100 + 5;\n    if (width > 100) width = 100;\n\n    if (width < 20) width = 20;\n\n    if (count === 0) {\n      width = minHeight;\n    }\n\n    const percent = 100 - width;\n\n    return (\n      <div className={classes.PCRGauge}>\n        <div\n          style={{\n            padding: \"0\",\n            margin: \"0\",\n            width: \"100%\",\n            height: \"100%\",\n            backgroundColor: CalendarColors.VC_COLOR,\n            position: \"relative\",\n          }}\n        >\n          <div\n            style={{\n              position: \"absolute\",\n              bottom: \"0px\",\n              color: \"#fff\",\n              fontWeight: \"500\",\n              fontSize:\"0.8rem\",\n              textAlign: \"center\",\n              width: \"100%\",\n            }}\n          >\n            {count > 0 && count}\n          </div>\n\n          <div\n            style={{\n              padding: \"0\",\n              margin: \"0\",\n              width: \"100%\",\n              height: `${percent}%`,\n              backgroundColor: \"#fafafa\",\n            }}\n          ></div>\n        </div>\n      </div>\n    );\n  };\n\n  const getF2FClinicBar = (count) => {\n    let width = (count / MAX_BOOKING_COUNT) * 100 + 5;\n    if (width > 100) width = 100;\n\n    if (width < 20) width = 20;\n\n    if (count === 0) {\n      width = minHeight;\n    }\n\n    const percent = 100 - width;\n\n    return (\n      <div className={classes.GynaeGauge}>\n        <div\n          style={{\n            padding: \"0\",\n            margin: \"0\",\n            width: \"100%\",\n            height: \"100%\",\n            backgroundColor: CalendarColors.F2F_COLOR,\n            position: \"relative\",\n          }}\n        >\n          <div\n             style={{\n                position: \"absolute\",\n                bottom: \"0px\",\n                color: \"#fff\",\n                fontWeight: \"500\",\n                fontSize:\"0.8rem\",\n                textAlign: \"center\",\n                width: \"100%\",\n              }}\n          >\n            {count > 0 && count}\n          </div>\n\n          <div\n            style={{\n              padding: \"0\",\n              margin: \"0\",\n              width: \"100%\",\n              height: `${percent}%`,\n              backgroundColor: \"#fafafa\",\n            }}\n          ></div>\n        </div>\n      </div>\n    );\n  };\n\n  const getLaserClinicBar = (count) => {\n    let width = (count / MAX_BOOKING_COUNT) * 100 + 5;\n    if (width > 100) width = 100;\n\n    if (width < 20) width = 20;\n\n    if (count === 0) {\n      width = minHeight;\n    }\n\n    const percent = 100 - width;\n\n    return (\n      <div className={classes.GPGauge}>\n        <div\n          style={{\n            padding: \"0\",\n            margin: \"0\",\n            width: \"100%\",\n            height: \"100%\",\n            backgroundColor: CalendarColors.LASER_COLOR,\n            position: \"relative\",\n          }}\n        >\n          <div\n             style={{\n                position: \"absolute\",\n                bottom: \"0px\",\n                color: \"#fff\",\n                fontWeight: \"500\",\n                fontSize:\"0.8rem\",\n                textAlign: \"center\",\n                width: \"100%\",\n              }}\n          >\n            {count > 0 && count}\n          </div>\n\n          <div\n            style={{\n              padding: \"0\",\n              margin: \"0\",\n              width: \"100%\",\n              height: `${percent}%`,\n              backgroundColor: \"#fafafa\",\n            }}\n          ></div>\n        </div>\n      </div>\n    );\n  };\n\n  const getCataractClinicBar = (count) => {\n    let width = (count / MAX_BOOKING_COUNT) * 100 + 5;\n    if (width > 100) width = 100;\n\n    if (width < 20) width = 20;\n\n    if (count === 0) {\n      width = minHeight;\n    }\n\n    const percent = 100 - width;\n\n    return (\n      <div className={classes.STDGauge}>\n        <div\n          style={{\n            padding: \"0\",\n            margin: \"0\",\n            width: \"100%\",\n            height: \"100%\",\n            backgroundColor: CalendarColors.CATARACT_COLOR,\n            position: \"relative\",\n          }}\n        >\n          <div\n             style={{\n                position: \"absolute\",\n                bottom: \"0px\",\n                color: \"#fff\",\n                fontWeight: \"500\",\n                fontSize:\"0.8rem\",\n                textAlign: \"center\",\n                width: \"100%\",\n              }}\n          >\n            {count > 0 && count}\n          </div>\n\n          <div\n            style={{\n              padding: \"0\",\n              margin: \"0\",\n              width: \"100%\",\n              height: `${percent}%`,\n              backgroundColor: \"#fafafa\",\n            }}\n          ></div>\n        </div>\n      </div>\n    );\n  };\n\n  const getPostOPClinicBar = (count) => {\n    let width = (count / MAX_BOOKING_COUNT) * 100 + 5;\n    if (width > 100) width = 100;\n\n    if (width < 20) width = 20;\n\n    if (count === 0) {\n      width = minHeight;\n    }\n\n    const percent = 100 - width;\n\n    return (\n      <div className={classes.BloodGauge}>\n        <div\n          style={{\n            padding: \"0\",\n            margin: \"0\",\n            width: \"100%\",\n            height: \"100%\",\n            backgroundColor: CalendarColors.POSTOP_COLOR,\n            position: \"relative\",\n          }}\n        >\n          <div\n             style={{\n                position: \"absolute\",\n                bottom: \"0px\",\n                color: \"#fff\",\n                fontWeight: \"500\",\n                fontSize:\"0.8rem\",\n                textAlign: \"center\",\n                width: \"100%\",\n              }}\n          >\n            {count > 0 && count}\n          </div>\n\n          <div\n            style={{\n              padding: \"0\",\n              margin: \"0\",\n              width: \"100%\",\n              height: `${percent}%`,\n              backgroundColor: \"#fafafa\",\n            }}\n          ></div>\n        </div>\n      </div>\n    );\n  };\n\n\n\n  const getBookingsCountLabel = (_bookingsCount) => {\n    if (!_bookingsCount) {\n      return (\n        <div className={classes.LoadingProgress}>\n          <CircularProgress disableShrink />\n        </div>\n      );\n    } else if (_bookingsCount !== -2) {\n      return (\n        <div className={classes.DayLabelContainer}>\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"flex-start\"\n            alignItems=\"flex-end\"\n            style={{ width: \"100%\", height: \"100%\" }}\n          >\n            {_bookingsCount.map((item) => (\n              <Grid item>{getClinicBar(item.clinic, item.count)}</Grid>\n            ))}\n          </Grid>\n        </div>\n      );\n    }\n  };\n\n  const getBookingsCountGauge = (_bookingsCount) => {\n    if (_bookingsCount > 0) {\n      let percent = (_bookingsCount / MAX_BOOKING_COUNT_PCR) * 100;\n      if (percent > 100) {\n        percent = 100;\n      }\n\n      percent = 100 - percent;\n\n      return (\n        <div className={classes.BookingCountGauge}>\n          <div\n            style={{\n              padding: \"0\",\n              margin: \"0\",\n              width: \"100%\",\n              height: \"100%\",\n              backgroundColor: \"#3f51b5\",\n            }}\n          >\n            <div\n              style={{\n                padding: \"0\",\n                margin: \"0\",\n                width: \"100%\",\n                height: `${percent}%`,\n                backgroundColor: \"#fafafa\",\n              }}\n            ></div>\n          </div>\n        </div>\n      );\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <div\n        className={classes.Container}\n        onClick={(event) => dayClicked(event, cellDate)}\n      >\n        {getDayLabel(cellIndex, month, daysInMonth)}\n\n        {getBookingsCountLabel(bookingsCount)}\n\n        {/* {getBookingsCountGauge(bookingsCount)} */}\n      </div>\n    </React.Fragment>\n  );\n};\n\nMonthViewCell.propTypes = {\n  key: PropTypes.string.isRequired,\n  cellIndex: PropTypes.number.isRequired,\n  month: PropTypes.number.isRequired,\n  daysInMonth: PropTypes.arrayOf(PropTypes.date),\n  dayClicked: PropTypes.func,\n};\n\nexport default MonthViewCell;\n","import calendar from 'node-calendar';\n\n\nexport default class CalendarUtil {\n\n    static getMonthRange = (month , year) =>\n    {\n        return new calendar.Calendar(calendar.SUNDAY).itermonthdates(year, month);\n    } \n\n} ","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport MonthViewCell from './MonthViewCell';\nimport CalendarUtil from './calendar-util';\n\nconst dayLables = ['Sun', 'Mon', 'Tue', 'Wed' , 'Thu', 'Fri', 'Sat'];\nconst days = [1,2,3,4,5,6,7]; \nconst rows = [1,2,3,4,5,6];\n\nconst useStyles = makeStyles((theme) => ({\n\n    table: {\n        width: \"100%\",\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n    },\n\n    th: {\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        verticalAlign: \"middle\",\n        fontcolor: \"#555\",\n        fontWeight: \"400\",\n        fontSize: \"15px\",\n        paddingTop: \"5px\",\n        paddingBottom: \"5px\",\n        width: \"14%\"\n    },\n\n    td: {\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        verticalAlign: \"middle\",\n    }\n\n  }));\n\nconst MonthView = ({month, year, dayClicked}) => {\n    const classes = useStyles();\n\n    const daysInMonth = CalendarUtil.getMonthRange(month,year);\n\n    return (\n        <React.Fragment>\n\n            <table className={classes.table}>\n                <thead>\n                    <tr>\n                        {dayLables.map(label => (\n                            <th key={`th-${label}`} className={classes.th}>\n                                {label}\n                            </th>\n                        ))}\n                    </tr>\n                </thead>\n                <tbody>\n                    {rows.map(row => (\n                        <tr>\n                            {days.map(day => (\n                                <td className={classes.td}>\n                                    <MonthViewCell \n                                        key={`${month}${year}${(row-1) * days.length + day}`} \n                                        cellIndex={(row-1) * days.length + day} \n                                        month={month} \n                                        daysInMonth={daysInMonth}\n                                        dayClicked = {dayClicked}\n                                        />\n                                </td>\n                            ))}\n                        </tr>\n                    ))}            \n                </tbody>\n\n            </table>\n\n      \n        </React.Fragment>\n\n\n    );\n}\n\nMonthView.propTypes = {\n    month: PropTypes.number.isRequired,\n    year: PropTypes.number.isRequired,\n    dayClicked: PropTypes.func\n  };\n\n\nexport default MonthView;","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport dateformat from 'dateformat';\nimport BookService from '../services/BookService';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport GlobalState from '../../GlobalState';\n\nimport axios from 'axios'\n\nimport { Grid } from '@material-ui/core';\nimport { CalendarColors } from './colors';\n\nconst MAX_BOOKING_COUNT_PCR = 10;\nconst MAX_BOOKING_COUNT_GP = 1;\nconst MAX_BOOKING_COUNT_STD = 1;\nconst MAX_BOOKING_COUNT_GYNAE = 1;\nconst MAX_BOOKING_COUNT_BLOOD = 1;\n\n\n\nconst useStyles = makeStyles((theme) => ({\n\n    Container: {\n        width: \"100%\",\n        minHeight: \"100px\",\n        paddingTop: \"40%\",\n        position: \"relative\",\n        backgroundColor: \"#fff\",\n        cursor: \"pointer\"\n    },\n\n    ContainerPast: {\n        width: \"100%\",\n        minHeight: \"100px\",\n        paddingTop: \"40%\",\n        position: \"relative\",\n        backgroundColor: \"#fafafa\",\n        cursor: \"pointer\"\n    },\n    \n    DayLabel: {\n        position: \"absolute\",\n        top: \"5px\",\n        right: \"5px\",\n        color: \"#555\",\n        fontSize: \"1rem\"\n    },\n\n    DayLabelDisabled: {\n        position: \"absolute\",\n        top: \"5px\",\n        right: \"5px\",\n        color: \"#ddd\",\n        fontSize: \"1rem\"\n    },\n\n    BookingCountLabel: {\n        position: \"absolute\",\n        top: \"25%\",\n        left: \"38%\",\n        color: \"#3f51b5\",\n        backgroundColor: \"#ebedf7\",\n        fontSize: \"14px\",\n        fontWeight: \"600\",\n        padding: \"5px\",\n        borderRadius: \"50%\",\n        minWidth: \"30px\",\n        cursor : \"pointer\",\n        textAlign: \"center\"\n    },\n\n    BookingCountLabelBusy: {\n        position: \"absolute\",\n        top: \"25%\",\n        left: \"38%\",\n        color: \"#b00000\",\n        backgroundColor: \"#fce6e6\",\n        fontSize: \"14px\",\n        fontWeight: \"600\",\n        padding: \"5px\",\n        borderRadius: \"50%\",\n        minWidth: \"30px\",\n        cursor : \"pointer\",\n        textAlign: \"center\"\n    },\n\n    LoadingProgress: {\n        position: \"absolute\",\n        top: \"40%\",\n        left: \"40%\",\n      },\n\n      BookingCountGauge: {\n        position: \"absolute\",\n        bottom: \"5%\",\n        left: \"8%\",\n        width : \"85%\",\n        height: \"8%\"\n    },\n\n    PCRGauge: {\n        position: \"absolute\",\n        bottom: \"15px\",\n        left: \"0\",\n        width: \"20px\",\n        height: \"90%\",\n      },\n    \n      GynaeGauge: {\n        position: \"absolute\",\n        bottom: \"15px\",\n        left: \"21px\",\n        width: \"20px\",\n        height: \"90%\",\n      },\n    \n      GPGauge: {\n        position: \"absolute\",\n        bottom: \"15px\",\n        left: \"42px\",\n        width: \"20px\",\n        height: \"90%\",\n      },\n    \n      STDGauge: {\n        position: \"absolute\",\n        bottom: \"15px\",\n        left: \"63px\",\n        width: \"20px\",\n        height: \"90%\",\n      },\n      BloodGauge: {\n        position: \"absolute\",\n        bottom: \"15px\",\n        left: \"84px\",\n        width: \"20px\",\n        height: \"90%\",\n      },\n\n    \n\n    DayLabelContainer:{\n        position: \"absolute\",\n        top: \"15%\",\n        left:\"5px\",\n        width:\"100%\",\n        height:\"100%\"   \n    },\n\n  }));\n\nconst MAX_BOOKING_COUNT = 1;  \n\nconst WeekViewCell = ({key, date, time, dayClicked}) => {\n    const classes = useStyles();\n\n    const [state, setState] = React.useContext(GlobalState);\n    const [bookingsCount, setBookingsCount] = React.useState(null);\n    const [isPast, setIsPast] = React.useState(false);\n\n    const [cellDate, setCellDate] = React.useState(new Date());\n\n    useEffect( () => {\n        const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\n        setIsPast(date < todayStr);\n\n        setCellDate(new Date(date));\n\n    }, [date]);\n\n    useEffect ( () => {\n      \n      \n      \n        if (!date || date.length <= 0 || !time || time.length <= 0)\n        {\n            return;\n        }\n        \n        // if (isPast)\n        // {\n        //     setBookingsCount(-2);\n        //     return;\n        // }\n\n        setBookingsCount(null);\n\n       \n\n        var res = state.AdminCalendarCache?.find(record => record.method === 'getBookingsCountByDateStrandTime' && record.query === `${date}${time}`)?.res;\n        if (res)\n        {\n            if (res.data.count)\n            {\n                setBookingsCount(res.data.count);\n            }  \n            return;\n        }\n\n        let source = axios.CancelToken.source();\n        BookService.getAllBookingsCountByDateStrandTime(date, time, source).then( res => {\n            if (res.data.count)\n            {\n                setBookingsCount(res.data.count);\n                setState(state => ({...state, AdminCalendarCache : [...state.AdminCalendarCache, {method: 'getBookingsCountByDateStrandTime' , query : `${date}${time}`, res: res}]}));\n            }  \n        }).catch( err => \n            {\n                //do nothing\n            });\n     \n        return () => {\n           if (source)\n              source.cancel('Cancelling in cleanup');\n        }\n     \n    }, [date, time]);\n\n\n    const minHeight = 1;\n    const getVCClinicBar = (count) => {\n      let width = (count / MAX_BOOKING_COUNT) * 100 + 5;\n      if (width > 100) width = 100;\n  \n      if (width < 30) width = 30;\n  \n      if (count === 0) {\n        width = minHeight;\n      }\n  \n      const percent = 100 - width;\n  \n      return (\n        <div className={classes.PCRGauge}>\n          <div\n            style={{\n              padding: \"0\",\n              margin: \"0\",\n              width: \"100%\",\n              height: \"100%\",\n              backgroundColor: CalendarColors.VC_COLOR,\n              position: \"relative\",\n            }}\n          >\n            <div\n              style={{\n                position: \"absolute\",\n                bottom: \"0px\",\n                color: \"#fff\",\n                fontWeight: \"500\",\n                fontSize:\"0.8rem\",\n                textAlign: \"center\",\n                width: \"100%\",\n              }}\n            >\n              {count > 0 && count}\n            </div>\n  \n            <div\n              style={{\n                padding: \"0\",\n                margin: \"0\",\n                width: \"100%\",\n                height: `${percent}%`,\n                backgroundColor: \"#fafafa\",\n              }}\n            ></div>\n          </div>\n        </div>\n      );\n    };\n  \n    const getF2FClinicBar = (count) => {\n      let width = (count / MAX_BOOKING_COUNT) * 100 + 5;\n      if (width > 100) width = 100;\n  \n      if (width < 30) width = 30;\n  \n      if (count === 0) {\n        width = minHeight;\n      }\n  \n      const percent = 100 - width;\n  \n      return (\n        <div className={classes.GynaeGauge}>\n          <div\n            style={{\n              padding: \"0\",\n              margin: \"0\",\n              width: \"100%\",\n              height: \"100%\",\n              backgroundColor: CalendarColors.F2F_COLOR,\n              position: \"relative\",\n            }}\n          >\n            <div\n               style={{\n                  position: \"absolute\",\n                  bottom: \"0px\",\n                  color: \"#fff\",\n                  fontWeight: \"500\",\n                  fontSize:\"0.8rem\",\n                  textAlign: \"center\",\n                  width: \"100%\",\n                }}\n            >\n              {count > 0 && count}\n            </div>\n  \n            <div\n              style={{\n                padding: \"0\",\n                margin: \"0\",\n                width: \"100%\",\n                height: `${percent}%`,\n                backgroundColor: \"#fafafa\",\n              }}\n            ></div>\n          </div>\n        </div>\n      );\n    };\n  \n    const getLaserClinicBar = (count) => {\n      let width = (count / MAX_BOOKING_COUNT) * 100 + 5;\n      if (width > 100) width = 100;\n  \n      if (width < 30) width = 30;\n  \n      if (count === 0) {\n        width = minHeight;\n      }\n  \n      const percent = 100 - width;\n  \n      return (\n        <div className={classes.GPGauge}>\n          <div\n            style={{\n              padding: \"0\",\n              margin: \"0\",\n              width: \"100%\",\n              height: \"100%\",\n              backgroundColor: CalendarColors.LASER_COLOR,\n              position: \"relative\",\n            }}\n          >\n            <div\n               style={{\n                  position: \"absolute\",\n                  bottom: \"0px\",\n                  color: \"#fff\",\n                  fontWeight: \"500\",\n                  fontSize:\"0.8rem\",\n                  textAlign: \"center\",\n                  width: \"100%\",\n                }}\n            >\n              {count > 0 && count}\n            </div>\n  \n            <div\n              style={{\n                padding: \"0\",\n                margin: \"0\",\n                width: \"100%\",\n                height: `${percent}%`,\n                backgroundColor: \"#fafafa\",\n              }}\n            ></div>\n          </div>\n        </div>\n      );\n    };\n  \n    const getCataractClinicBar = (count) => {\n      let width = (count / MAX_BOOKING_COUNT) * 100 + 5;\n      if (width > 100) width = 100;\n  \n      if (width < 30) width = 30;\n  \n      if (count === 0) {\n        width = minHeight;\n      }\n  \n      const percent = 100 - width;\n  \n      return (\n        <div className={classes.STDGauge}>\n          <div\n            style={{\n              padding: \"0\",\n              margin: \"0\",\n              width: \"100%\",\n              height: \"100%\",\n              backgroundColor: CalendarColors.CATARACT_COLOR,\n              position: \"relative\",\n            }}\n          >\n            <div\n               style={{\n                  position: \"absolute\",\n                  bottom: \"0px\",\n                  color: \"#fff\",\n                  fontWeight: \"500\",\n                  fontSize:\"0.8rem\",\n                  textAlign: \"center\",\n                  width: \"100%\",\n                }}\n            >\n              {count > 0 && count}\n            </div>\n  \n            <div\n              style={{\n                padding: \"0\",\n                margin: \"0\",\n                width: \"100%\",\n                height: `${percent}%`,\n                backgroundColor: \"#fafafa\",\n              }}\n            ></div>\n          </div>\n        </div>\n      );\n    };\n\n    const getPostOPClinicBar = (count) => {\n      let width = (count / MAX_BOOKING_COUNT) * 100 + 5;\n      if (width > 100) width = 100;\n  \n      if (width < 30) width = 30;\n  \n      if (count === 0) {\n        width = minHeight;\n      }\n  \n      const percent = 100 - width;\n  \n      return (\n        <div className={classes.BloodGauge}>\n          <div\n            style={{\n              padding: \"0\",\n              margin: \"0\",\n              width: \"100%\",\n              height: \"100%\",\n              backgroundColor: CalendarColors.POSTOP_COLOR,\n              position: \"relative\",\n            }}\n          >\n            <div\n               style={{\n                  position: \"absolute\",\n                  bottom: \"0px\",\n                  color: \"#fff\",\n                  fontWeight: \"500\",\n                  fontSize:\"0.8rem\",\n                  textAlign: \"center\",\n                  width: \"100%\",\n                }}\n            >\n              {count > 0 && count}\n            </div>\n  \n            <div\n              style={{\n                padding: \"0\",\n                margin: \"0\",\n                width: \"100%\",\n                height: `${percent}%`,\n                backgroundColor: \"#fafafa\",\n              }}\n            ></div>\n          </div>\n        </div>\n      );\n    };\n\n\n  \n  \n    const getBookingsCountLabel = (_bookingsCount) => {\n      if (!_bookingsCount) {\n        return (\n          <div className={classes.LoadingProgress}>\n            <CircularProgress disableShrink />\n          </div>\n        );\n      } else if (_bookingsCount !== -2) {\n        return (\n          <div className={classes.DayLabelContainer}>\n            <Grid\n              container\n              direction=\"row\"\n              justify=\"flex-start\"\n              alignItems=\"flex-end\"\n              style={{ width: \"100%\", height: \"100%\" }}\n            >\n              {_bookingsCount.map((item) => (\n                <Grid item>{getClinicBar(item.clinic, item.count)}</Grid>\n              ))}\n            </Grid>\n          </div>\n        );\n      }\n    };\n\n    const getClinicBar = (clinic, count) => {\n      return (\n        <React.Fragment>\n          {clinic === \"Virtual Consultation\" &&\n            state.selectedClinics.findIndex((e) => e === \"Virtual Consultation\") >= 0 &&\n            getVCClinicBar(count)}\n          {clinic === \"F2F Clinic\" &&\n            state.selectedClinics.findIndex((e) => e === \"F2F Clinic\") >= 0 &&\n            getF2FClinicBar(count)}\n          {clinic === \"Laser Theatre\" &&\n            state.selectedClinics.findIndex((e) => e === \"Laser Theatre\") >= 0 &&\n            getLaserClinicBar(count)}\n          {clinic === \"Cataract Theatre\" &&\n            state.selectedClinics.findIndex((e) => e === \"Cataract Theatre\") >= 0 &&\n            getCataractClinicBar(count)}\n                      {clinic === \"Post OP\" &&\n            state.selectedClinics.findIndex((e) => e === \"Post OP\") >= 0 &&\n            getPostOPClinicBar(count)}\n\n        </React.Fragment>\n      );\n    };\n    \n    const getBookingsCountGauge = (_bookingsCount) =>\n    {\n        if (_bookingsCount > 0 )\n        {\n            let percent = (_bookingsCount / MAX_BOOKING_COUNT) * 100;\n            if (percent > 100)\n            {\n                percent = 100;\n            }\n\n            // percent = 100 - percent;\n\n            return (\n\n                <div className={classes.BookingCountGauge}>\n                  <div style={{padding:\"0\", margin:\"0\", width:\"100%\", height:\"100%\", backgroundColor: \"#f5f5f5\"}} >\n                        <div  style={{padding:\"0\", margin:\"0\", height:\"100%\", width:`${percent}%`, backgroundColor: \"#3f51b5\"}} >\n\n                        </div>\n                  </div>\n                </div>\n            );\n        }\n    }\n\n\n\n\n    return (\n        <React.Fragment>\n\n            <div className={isPast ? classes.ContainerPast : classes.Container} onClick={(event => dayClicked(event,cellDate))} >\n\n              {getBookingsCountLabel(bookingsCount)}\n\n              {/* {getBookingsCountGauge(bookingsCount)} */}\n\n            </div>\n\n        </React.Fragment>\n\n\n    );\n}\n\nWeekViewCell.propTypes = {\n    key: PropTypes.string.isRequired,\n    date: PropTypes.string.isRequired,\n    time: PropTypes.string.isRequired,\n    dayClicked: PropTypes.func\n  };\n\n \n  \nexport default WeekViewCell;","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport WeekViewCell from './WeekViewCell';\nimport dateformat from 'dateformat';\n\nconst rows = [\n    '08:00 AM',\n    '08:15 AM',\n    '08:30 AM', \n    '08:45 AM',\n    '09:00 AM',\n    '09:15 AM', \n    '09:30 AM',\n    '09:45 AM',\n    '10:00 AM',\n    '10:15 AM',\n    '10:30 AM',\n    '10:45 AM',\n    '11:00 AM',\n    '11:15 AM',\n    '11:30 AM',\n    '11:45 AM',\n    '12:00 PM',\n    '12:15 PM',\n    '12:30 PM',\n    '12:45 PM',\n    '01:00 PM',\n    '01:15 PM',\n    '01:30 PM',\n    '01:45 PM',\n    '02:00 PM',\n    '02:15 PM',\n    '02:30 PM',\n    '02:45 PM',\n    '03:00 PM',\n    '03:15 PM',\n    '03:30 PM',\n    '03:45 PM',\n    '04:00 PM',\n    '04:15 PM',\n    '04:30 PM',\n    '04:45 PM',\n    '05:00 PM',\n    '05:15 PM',\n    '05:30 PM',\n    '05:45 PM',\n    '06:00 PM',\n    '06:15 PM',\n    '06:30 PM',\n    '06:45 PM',\n    '07:00 PM',\n    '07:15 PM',\n    '07:30 PM',\n    '07:45 PM'\n];\n\n\n\nconst useStyles = makeStyles((theme) => ({\n\n    table: {\n        width: \"100%\",\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        overflowY: \"auto\"\n    },\n\n    th: {\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        verticalAlign: \"middle\",\n        fontcolor: \"#555\",\n        fontWeight: \"400\",\n        fontSize: \"15px\",\n        paddingTop: \"5px\",\n        paddingBottom: \"5px\",\n        width: \"12%\", \n    },\n\n    td: {\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        verticalAlign: \"middle\",\n        height : \"50px\",\n        width: \"12%\", \n    }\n\n  }));\n\nconst WeekView = ({dates, dayClicked}) => {\n    const classes = useStyles();\n\n    return (\n        <React.Fragment>\n\n        <div style={{overflowY: \"scroll\" , height: \"60px\"}}>\n            <table className={classes.table}>\n                <thead>\n                    <tr>\n                        <th style={{width: \"7%\"}}>\n                        \n                        </th>\n                            {dates.map(date => (\n                                <th className={classes.th}>\n                                    <div style={{paddingBottom: \"5px\", color: \"#aaa\"}}>\n                                         {dateformat(date, 'ddd')}\n                                    </div>\n                                    <div>\n                                        <span style={{color: \"#aaa\"}}>\n                                            {dateformat(date, 'mmm ')}\n                                        </span> \n                                        <span  style={(dateformat(new Date(),'yyyy-mm-dd') === dateformat(date, 'yyyy-mm-dd')) ? { backgroundColor: \"#1a73e8\", color: \"#fff\", borderRadius: \"50%\",  padding: \"5px\",} : {color: \"#333\", fontWeight:\"500\"}}>\n                                             {dateformat(date, ' d')}\n                                        </span>\n                                       \n                                    </div>\n                                </th>\n                        ))}\n                    </tr>\n                </thead>\n             </table>\n\n        </div>\n\n            <div style={{overflowY: \"scroll\" , height: \"70vh\"}}>\n                <table className={classes.table}>   \n                    <tbody>\n                        {rows.map(row => (\n                            <tr>\n                                <td style={{width: \"7%\"}}>\n                                    {row}\n                                </td>\n                                {dates.map(day => (\n                                    <td className={classes.td}>\n                                        <WeekViewCell \n                                                dayClicked = {dayClicked}\n                                                key={`${dateformat(day,'yyyy-mm-dd')}-${row.replace(':','-')}`} \n                                                date={dateformat(day,'yyyy-mm-dd')} \n                                                time={row}/>\n                                    </td>\n                                ))}\n                            </tr>\n                        ))}            \n                    </tbody>\n                </table>\n            </div>                    \n      \n        </React.Fragment>\n\n\n    );\n}\n\nWeekView.propTypes = {\n    dates: PropTypes.arrayOf(PropTypes.any).isRequired,\n    dayClicked: PropTypes.func\n  };\n\n\nexport default WeekView;","import React, { useEffect, useRef, useState } from \"react\";\nimport BookService from \"./services/BookService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {\n  Backdrop,\n  Button,\n  Checkbox,\n  CircularProgress,\n  Divider,\n  FormControlLabel,\n  Grid,\n  InputAdornment,\n  InputLabel,\n  Link,\n  makeStyles,\n  MenuItem,\n  Select,\n  Switch,\n  TextField,\n  Tooltip,\n} from \"@material-ui/core\";\nimport GlobalState from \"../GlobalState\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport CreditCardIcon from \"@material-ui/icons/CreditCard\";\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\n\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Draggable from \"react-draggable\";\nimport Paper from \"@material-ui/core/Paper\";\n\nimport Alert from \"@material-ui/lab/Alert\";\n\nimport PropTypes from \"prop-types\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport Box from \"@material-ui/core/Box\";\n\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport { corporates } from \"./Corporates\";\nimport NumberFormat from \"react-number-format\";\n\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { validate } from \"email-validator\";\nimport DateRangeIcon from \"@material-ui/icons/DateRange\";\nimport { CalendarColors } from \"./calendar-admin/colors\";\n\nvar interval;\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    marginTop: theme.spacing(0),\n    marginBottom: theme.spacing(1),\n  },\n\n  refreshButton: {\n    marginLeft: theme.spacing(2),\n  },\n\n  checkIcon: {\n    color: \"green\",\n  },\n\n  closeIcon: {\n    color: \"red\",\n  },\n\n  RefLink: {\n    cursor: \"pointer\",\n  },\n\n  BookedLabel: {\n    backgroundColor: \"#606060\",\n    color: \"#fff\",\n    paddingRight: \"10px\",\n    paddingLeft: \"10px\",\n  },\n\n  PatientAttendedLabel: {\n    backgroundColor: \"#0066aa\",\n    color: \"#fff\",\n    paddingRight: \"15px\",\n    paddingLeft: \"10px\",\n  },\n\n  SampleTakenLabel: {\n    backgroundColor: \"#0066cc\",\n    color: \"#fff\",\n    paddingRight: \"40px\",\n    paddingLeft: \"10px\",\n  },\n\n  ReportSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"90px\",\n    paddingLeft: \"10px\",\n  },\n\n  ReportCertSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"68px\",\n    paddingLeft: \"10px\",\n  },\n\n  archiveButton: {},\n\n  smartMatchButton: {\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    marginRight: \"10px\",\n    // padding: \"10px\"\n  },\n\n  infoTitle: {\n    fontWeight: \"400\",\n  },\n\n  infoData: {\n    paddingLeft: \"10px\",\n    fontWeight: \"800\",\n  },\n\n  matchButton: {\n    marginTop: \"30px\",\n    marginBottom: \"20px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  resendButton: {\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  resendFilesButton: {\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n    backgroundColor: \"#3792ad\",\n    \"&:hover\": {\n      background: \"#2f798f\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  cancelButton: {\n    marginBottom: \"10px\",\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"90px\",\n    paddingRight: \"90px\",\n  },\n\n  CalendarIcon: {\n    color: theme.palette.primary.main,\n  },\n\n  DateTimeLabel: {\n    fontWeight: \"600\",\n    fontSize: \"1.2rem\",\n    color: theme.palette.primary.main,\n  },\n\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 5,\n    color: \"#fff\",\n  },\n\n  PriceLabelPaid:{\n    color: theme.palette.primary.main,\n    fontWeight: \"600\"\n  },\n\n  PriceLabelNotPaid:{\n    color: theme.palette.secondary.main,\n    fontWeight: \"600\"\n  },\n\n  BoxDisabled: {\n    width : \"100%\",\n    padding: \"10px\",\n    borderRadius: \"8px\",\n    border: \"1px solid\",\n    fontSize: \"1.2rem\",\n    fontWeight: \"500\",\n    textAlign: \"center\",\n    borderColor: \"#ddd\",\n    cursor: \"not-allowed\",\n    color: \"#ddd\",\n    transition: \"all 0.2s ease\",\n  },\n\n  BoxVC: {\n    width : \"100%\",\n    padding: \"10px\",\n    borderRadius: \"8px\",\n    border: \"1px solid\",\n    fontSize: \"1.2rem\",\n    fontWeight: \"500\",\n    textAlign: \"center\",\n    cursor: \"pointer\",\n    borderColor: CalendarColors.VC_COLOR,\n    color: CalendarColors.VC_COLOR,\n    transition: \"all 0.2s ease\",\n    \"&:hover\": {\n      backgroundColor: CalendarColors.VC_COLOR,\n      color: \"#fff\"\n    }\n  \n  },\n\n  BoxF2F: {\n    width : \"100%\",\n    padding: \"10px\",\n    borderRadius: \"8px\",\n    border: \"1px solid\",\n    fontSize: \"1.2rem\",\n    fontWeight: \"500\",\n    textAlign: \"center\",\n    cursor: \"pointer\",\n    borderColor: CalendarColors.F2F_COLOR,\n    color: CalendarColors.F2F_COLOR,\n    transition: \"all 0.2s ease\",\n    \"&:hover\": {\n      backgroundColor: CalendarColors.F2F_COLOR,\n      color: \"#fff\"\n    }\n  \n  },\n\n  BoxLaser: {\n    width : \"100%\",\n    padding: \"10px\",\n    borderRadius: \"8px\",\n    border: \"1px solid\",\n    fontSize: \"1.2rem\",\n    fontWeight: \"500\",\n    textAlign: \"center\",\n    cursor: \"pointer\",\n    borderColor: CalendarColors.LASER_COLOR,\n    color: CalendarColors.LASER_COLOR,\n    transition: \"all 0.2s ease\",\n    \"&:hover\": {\n      backgroundColor: CalendarColors.LASER_COLOR,\n      color: \"#fff\"\n    }\n  \n  },\n\n  BoxCataract: {\n    width : \"100%\",\n    padding: \"10px\",\n    borderRadius: \"8px\",\n    border: \"1px solid\",\n    fontSize: \"1.2rem\",\n    fontWeight: \"500\",\n    textAlign: \"center\",\n    cursor: \"pointer\",\n    borderColor: CalendarColors.CATARACT_COLOR,\n    color: CalendarColors.CATARACT_COLOR,\n    transition: \"all 0.2s ease\",\n    \"&:hover\": {\n      backgroundColor: CalendarColors.CATARACT_COLOR,\n      color: \"#fff\"\n    }\n  \n  },\n\n  BoxPostOP: {\n    width : \"100%\",\n    padding: \"10px\",\n    borderRadius: \"8px\",\n    border: \"1px solid\",\n    fontSize: \"1.2rem\",\n    fontWeight: \"500\",\n    textAlign: \"center\",\n    cursor: \"pointer\",\n    borderColor: CalendarColors.POSTOP_COLOR,\n    color: CalendarColors.POSTOP_COLOR,\n    transition: \"all 0.2s ease\",\n    \"&:hover\": {\n      backgroundColor: CalendarColors.POSTOP_COLOR,\n      color: \"#fff\"\n    }\n  \n  },\n\n  BoxOptometry: {\n    width : \"100%\",\n    padding: \"10px\",\n    borderRadius: \"8px\",\n    border: \"1px solid\",\n    fontSize: \"1.2rem\",\n    fontWeight: \"500\",\n    textAlign: \"center\",\n    cursor: \"pointer\",\n    borderColor: CalendarColors.OPOTOMETRY_COLOR,\n    color: CalendarColors.OPOTOMETRY_COLOR,\n    transition: \"all 0.2s ease\",\n    \"&:hover\": {\n      backgroundColor: CalendarColors.OPOTOMETRY_COLOR,\n      color: \"#fff\"\n    }\n  \n  },\n\n\n\n\n\n\n\n\n\n\n  BoxGynae: {\n    width : \"100%\",\n    padding: \"10px\",\n    borderRadius: \"8px\",\n    border: \"1px solid\",\n    fontSize: \"1.2rem\",\n    fontWeight: \"500\",\n    textAlign: \"center\",\n    cursor: \"pointer\",\n    borderColor: CalendarColors.GYNAE_COLOR,\n    color: CalendarColors.GYNAE_COLOR,\n    transition: \"all 0.2s ease\",\n    \"&:hover\": {\n      backgroundColor: CalendarColors.GYNAE_COLOR,\n      color: \"#fff\"\n    }\n  \n  },\n\n  BoxGP: {\n    width : \"100%\",\n    padding: \"10px\",\n    borderRadius: \"8px\",\n    border: \"1px solid\",\n    fontSize: \"1.2rem\",\n    fontWeight: \"500\",\n    textAlign: \"center\",\n    cursor: \"pointer\",\n    borderColor: CalendarColors.GP_COLOR,\n    color: CalendarColors.GP_COLOR,\n    transition: \"all 0.2s ease\",\n    \"&:hover\": {\n      backgroundColor: CalendarColors.GP_COLOR,\n      color: \"#fff\"\n    }\n  },\n\n  BoxSTD: {\n    width : \"100%\",\n    padding: \"10px\",\n    borderRadius: \"8px\",\n    border: \"1px solid\",\n    fontSize: \"1.2rem\",\n    fontWeight: \"500\",\n    textAlign: \"center\",\n    cursor: \"pointer\",\n    borderColor: CalendarColors.STD_COLOR,\n    color: CalendarColors.STD_COLOR,\n    transition: \"all 0.2s ease\",\n    \"&:hover\": {\n      backgroundColor: CalendarColors.STD_COLOR,\n      color: \"#fff\"\n    }\n  },\n\n\n\n}));\n\nconst Packages = [\n  { packageName: \"Consultation with Consultant Gynaecologist\" },\n  { packageName: `Coil Fitting/Coil Removal` },\n  { packageName: `Well Woman Check` },\n  { packageName: `Sexual Health Screening` },\n  { packageName: `Pre-pregnancy/Fertility check` },\n  { packageName: `Gynaecological Ultrasound` },\n  { packageName: `HPV Vaccination` },\n  { packageName: `Cervical / Pap Smear` },\n  { packageName: `HPV Treatment / Wart Cryo-Therapy` },\n];\n\nfunction NumberFormatCustom(props) {\n  const { inputRef, onChange, ...other } = props;\n\n  return (\n    <NumberFormat\n      {...other}\n      getInputRef={inputRef}\n      onValueChange={(values) => {\n        onChange({\n          target: {\n            name: props.name,\n            value: values.value,\n          },\n        });\n      }}\n      thousandSeparator\n      isNumericString\n      prefix=\"\"\n    />\n  );\n}\n\nNumberFormatCustom.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nconst BorderLinearProgress = withStyles((theme) => ({\n  root: {\n    height: 10,\n    borderRadius: 5,\n  },\n  colorPrimary: {\n    backgroundColor: \"#cedbce\", //theme.palette.grey[theme.palette.type === 'light' ? 200 : 700],\n  },\n  bar: {\n    borderRadius: 5,\n    backgroundColor: \"#2f942e\",\n  },\n}))(LinearProgress);\nfunction LinearProgressWithLabel(props) {\n  return (\n    <Box display=\"flex\" alignItems=\"center\">\n      <Box width=\"100%\" mr={1}>\n        <BorderLinearProgress variant=\"determinate\" {...props} />\n      </Box>\n      <Box minWidth={35}>\n        <Typography\n          style={{ fontWeight: \"800\", color: \"#5e855e\" }}\n          variant=\"body2\"\n          color=\"textSecondary\"\n        >{`${Math.round(props.value)}%`}</Typography>\n      </Box>\n    </Box>\n  );\n}\n\nLinearProgressWithLabel.propTypes = {\n  /**\n   * The value of the progress indicator for the determinate and buffer variants.\n   * Value between 0 and 100.\n   */\n  value: PropTypes.number.isRequired,\n};\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable\n      handle=\"#draggable-dialog-title\"\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\n    >\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nexport default function NewBookingDialog(props) {\n  const classes = useStyles();\n\n  const [state, setState] = React.useContext(GlobalState);\n\n  const handleClose = () => {    \n    props.handleClose();\n  };\n\n\n  const timeDisabled = () =>\n  {\n    return props.time.indexOf(':15') > 0 || props.time.indexOf(':45') > 0 || props.time.indexOf('09') >= 0 \n  }\n\n  const clinicClicked = (clinic) =>\n  {\n    props.clinicClicked(clinic)\n  }\n\n  return (\n    <React.Fragment>\n      {props.date && props.time && (\n        <React.Fragment>\n          <Dialog\n            maxWidth=\"xs\"\n            open={props.open}\n            onClose={handleClose}\n            PaperComponent={PaperComponent}\n            aria-labelledby=\"form-dialog-title\"\n          >\n            <DialogTitle id=\"draggable-dialog-title\">\n              <Grid\n                container\n                spacing={1}\n                direction=\"row\"\n                justify=\"center\"\n                alignItems=\"center\"\n              >\n                <Grid item>\n                  <AddIcon style={{ color: \"#f50057\", fontSize: \"3rem\" }} />\n                </Grid>\n\n                <Grid item>\n                  <div\n                    style={{\n                      color: \"#f50057\",\n                      paddingBottom: \"10px\",\n                      fontWeight: \"800\",\n                    }}\n                  >\n                    {\" \"}\n                    ADD New Booking{\" \"}\n                  </div>\n                </Grid>\n              </Grid>\n\n              <Divider />\n            </DialogTitle>\n            <DialogContent>\n              <div\n                style={{\n                  height: \"480px\",\n                }}\n              >\n                <Grid\n                  container\n                  direction=\"row\"\n                  justify=\"stretch\"\n                  spacing={2}\n                  alignItems=\"center\"\n                >\n                  <Grid item xs={12}>\n                    <Grid\n                      container\n                      direction=\"row\"\n                      justify=\"center\"\n                      alignItems=\"center\"\n                      spacing={0}\n                    >\n                      <Grid item>\n                        <DateRangeIcon className={classes.CalendarIcon} />\n                      </Grid>\n                      <Grid item>\n                        <span className={classes.DateTimeLabel}>\n                          {props.date} , {props.time}\n                        </span>\n                      </Grid>\n                    </Grid>\n                  </Grid>\n\n\n                  <Grid item xs={12} style={{marginTop:\"0px\"}}>\n                    <div className={classes.BoxVC} onClick={() => clinicClicked(\"Virtual Consultation\")}>\n                      Virtual Consultation\n                    </div>\n                  </Grid>\n                  <Grid item xs={12}>\n                    <div className={classes.BoxF2F} onClick={() => clinicClicked(\"F2F Clinic\")}>\n                      F2F Clinic\n                    </div>\n                  </Grid>\n                  <Grid item xs={12}>\n                    <div className={classes.BoxLaser} onClick={() => clinicClicked(\"Laser Theatre\")}>\n                      Laser Theatre\n                    </div>\n                  </Grid>\n                  <Grid item xs={12}>\n                    <div className={classes.BoxCataract} onClick={() => clinicClicked(\"Lens Theatre\")}>\n                      Lens Theatre\n                    </div>\n                  </Grid>\n                  <Grid item xs={12}>\n                    <div className={classes.BoxPostOP} onClick={() => clinicClicked(\"Post OP\")}>\n                      Post OP\n                    </div>\n                  </Grid>\n                  <Grid item xs={12}>\n                    <div className={classes.BoxOptometry} onClick={() => clinicClicked(\"Optometry\")}>\n                      Optometry\n                    </div>\n                  </Grid>\n\n\n                </Grid>\n\n                <div\n                  style={{\n                    position: \"absolute\",\n                    bottom: \"0px\",\n                    right: \"5px\",\n                  }}\n                >\n                  <Grid\n                    container\n                    direction=\"row\"\n                    justify=\"flex-end\"\n                    alignItems=\"center\"\n                    spacing={1}\n                  >\n                    <Grid item>\n                      <Button\n                        onClick={handleClose}\n                        style={{ width: \"100px\" }}\n                      >\n                        close\n                      </Button>\n                    </Grid>\n                   \n                  </Grid>\n                </div>\n              </div>\n\n            </DialogContent>\n          </Dialog>\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n}\n","import PropTypes from 'prop-types';\n\n\nimport React, { useEffect } from 'react';\nimport Typography from '@material-ui/core/Typography';\n\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\n\n\nimport dateformat from 'dateformat';\nimport { FormControl, IconButton, InputLabel, Select, Tooltip } from '@material-ui/core';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport CloseIcon from '@material-ui/icons/Close';\nimport TodayIcon from '@material-ui/icons/Today';\n\n\nconst useStyles = makeStyles((theme) => ({\n\n    loadingBox: {\n\n    }\n\n}));\n\n\nconst DateField = ({ title, value, dateChanged, error, todayButton, children }) => {\n\n    const [day, setDay] = React.useState('');\n    const [month, setMonth] = React.useState('');\n    const [year, setYear] = React.useState('');\n\n    const [dayArray, setDayArray] = React.useState([]);\n    const [monthArray, setMonthArray] = React.useState([]);\n    const [yearArray, setYearArray] = React.useState([]);\n\n    const updateDate = (dd, mm, yyyy) => {\n        let dayStr = `${dd}`;\n        let monthStr = `${mm + 1}`;\n\n\n        if (dayStr.length === 1) {\n            dayStr = `0${dayStr}`;\n        }\n\n        if (monthStr.length === 1) {\n            monthStr = `0${monthStr}`;\n        }\n\n        dateChanged(`${yyyy}-${monthStr}-${dayStr}`);\n\n\n    }\n\n    const handleDayChanged = (event) => {\n        setDay(event.target.value);\n        updateDate(event.target.value, month, year);\n    };\n\n    const handleMonthChanged = (event) => {\n        setMonth(event.target.value);\n        updateDate(day, event.target.value, year);\n    };\n\n    const handleYearChanged = (event) => {\n        setYear(event.target.value);\n        updateDate(day, month, event.target.value);\n    };\n\n    const resetDate = () => {\n        setDay(\"\")\n        setYear(\"\")\n        setMonth(\"\")\n        dateChanged(\"\")\n    }\n\n    const todayDate = () => {\n        const today = new Date()\n        updateDate(today.getDate(), today.getMonth(), today.getFullYear())\n    }\n\n\n    useEffect(() => {\n        if (value && value.length === 10) {\n            const d = parseInt(value.substr(8, 2));\n            const m = parseInt(value.substr(5, 2));\n            const y = parseInt(value.substr(0, 4));\n\n            setDay(d);\n            setMonth(m - 1);\n            setYear(y);\n        }else if (!value)\n        {\n            resetDate()\n        }\n\n\n    }, [value]);\n\n    useEffect(() => {\n\n        const days = [];\n        const months = [];\n        const years = [];\n\n\n        for (var i = 1; i <= 31; i++) {\n            days.push(i);\n        }\n\n        for (i = 0; i < 12; i++) {\n            months.push(dateformat(new Date(2020, i, 5), 'mmmm'));\n        }\n\n        for (i = 1900; i <= new Date().getFullYear() + 1; i++) {\n            years.push(i);\n        }\n\n\n        setDayArray(days);\n        setMonthArray(months);\n        setYearArray(years);\n\n    }, [])\n\n    return (\n\n        <React.Fragment>\n\n\n            <div style={{ position: \"relative\", border: `1px solid ${error ? 'red' : '#ddd'}`, borderRadius: \"10px\", padding: \"20px\", paddingBottom: \"20px\", marginTop: \"20px\" }}>\n\n                <div style={{ position: \"absolute\", top: \"-15px\", left: \"15px\", backgroundColor: \"#fff\", color: `${error ? 'red' : '#555'}`, padding: \"5px\", paddingLeft: \"10px\", paddingRight: \"10px\" }}>\n                    {title}\n                </div>\n\n                <div style={{ position: \"absolute\", top: \"-25px\", right: \"10px\", backgroundColor: \"#fff\", color: `${error ? 'red' : '#555'}`, padding: \"5px\", paddingLeft: \"10px\", paddingRight: \"10px\" }}>\n                    <Tooltip title=\"Clear Date\">\n                        <IconButton onClick={resetDate}>\n                            <CloseIcon />\n                        </IconButton>\n                    </Tooltip>\n                </div>\n\n                {todayButton && (\n                    <div style={{ position: \"absolute\", top: \"-25px\", right: \"70px\", backgroundColor: \"#fff\", color: `${error ? 'red' : '#555'}`, padding: \"5px\", paddingLeft: \"10px\", paddingRight: \"10px\" }}>\n                        <Tooltip title=\"Today\">\n                            <IconButton onClick={todayDate}>\n                                <TodayIcon />\n                            </IconButton>\n                        </Tooltip>\n                    </div>\n\n                )}\n\n\n\n\n\n                <Grid\n                    container\n                    direction=\"row\"\n                    justify=\"flex-start\"\n                    alignItems=\"flex-start\"\n                    spacing={2}\n                >\n\n\n                    <Grid item xs={12} sm={4}>\n                        <FormControl fullWidth>\n                            <InputLabel id=\"day-label\">Day</InputLabel>\n                            <Select\n\n                                labelId=\"day-label\"\n                                id=\"day-select\"\n                                value={day}\n                                onChange={handleDayChanged}\n                            >\n                                {\n                                    dayArray.map(item => (\n                                        <MenuItem value={item}>{item}</MenuItem>\n                                    )\n                                    )}\n                            </Select>\n                        </FormControl>\n\n\n                    </Grid>\n\n                    <Grid item xs={12} sm={4}>\n                        <FormControl fullWidth>\n                            <InputLabel id=\"month-label\">Month</InputLabel>\n                            <Select\n                                labelId=\"month-label\"\n                                id=\"month-select\"\n                                value={month}\n                                onChange={handleMonthChanged}\n                            >\n                                {\n                                    monthArray.map((item, index) => (\n                                        <MenuItem value={index}>{item}</MenuItem>\n                                    )\n                                    )}\n                            </Select>\n                        </FormControl>\n\n\n                    </Grid>\n\n                    <Grid item xs={12} sm={4}>\n                        <FormControl fullWidth>\n                            <InputLabel id=\"day-label\">Year</InputLabel>\n                            <Select\n                                labelId=\"year-label\"\n                                id=\"year-select\"\n                                value={year}\n                                onChange={handleYearChanged}\n                            >\n                                {\n                                    yearArray.map(item => (\n                                        <MenuItem value={item}>{item}</MenuItem>\n                                    )\n                                    )}\n                            </Select>\n                        </FormControl>\n                    </Grid>\n                </Grid>\n\n                <div>\n                    {children}\n                </div>\n\n            </div>\n\n\n        </React.Fragment>\n    );\n}\n\n\nDateField.propTypes = {\n    title: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired,\n    dateChanged: PropTypes.func.isRequired,\n    error: PropTypes.bool\n};\n\nexport default DateField;\n\n\n\n\n","import API from './api';\nimport axiosRetry from 'axios-retry';\n\nexport default class PatientService {\n\n\n   static registerNewPatient = (payload) =>\n   {\n      return API.post(`/api/optimalvision/patient/registernewpatient`, payload);\n   }\n\n   static updatePatient = (payload) =>\n   {\n      return API.post(`/api/optimalvision/patient/updatepatient`, payload);\n   } \n\n   static deletePatient = (id) =>\n   {\n      return API.post(`/api/optimalvision/patient/deletepatient?id=${id}`);\n   } \n\n   static unDeletePatient = (id) =>\n   {\n      return API.post(`/api/optimalvision/patient/undeletepatient?id=${id}`);\n   } \n   \n    static getPatientById = (id) =>\n    {\n       return API.get(`/api/optimalvision/patient/getpatientbyid?id=${id}`);\n    }\n\n    static getPatientByPatientId = (patientID) =>\n    {\n       return API.get(`/api/optimalvision/patient/getpatientbypatientid?patientID=${patientID}`);\n    }\n\n    static getAllPatients = () =>\n    {\n      return API.get(`/api/optimalvision/patient/getallpatients`);\n    }\n\n    static getDeletedPatients= (limit) =>\n    {\n      if (!limit) limit = 25 \n       return API.get(`/api/optimalvision/patiant/getdeletedpatients`);\n    }\n\n}","import API from './api';\nimport axiosRetry from 'axios-retry';\n\nexport default class TemplateService {\n\n   static getEmailPreview = (templateId, bookingId, patientId) =>\n   {\n      return API.post(`/api/optimalvision/emailtemplate/getemailpreview`, {templateId,bookingId,patientId});\n   }\n\n   static sendManualEmail = (templateId, sendTo, bookingId, patientId) =>\n   {\n      return API.post(`/api/optimalvision/emailtemplate/sendmanualemail`, {templateId,sendTo,bookingId,patientId});\n   }\n\n   static registerNewTemplate = (payload) =>\n   {\n      return API.post(`/api/optimalvision/emailtemplate/registernewtemplate`, payload);\n   }\n\n   static updateTemplate = (payload) =>\n   {\n      return API.post(`/api/optimalvision/emailtemplate/updatetemplate`, payload);\n   } \n\n   static deleteTemplate = (id) =>\n   {\n      return API.post(`/api/optimalvision/emailtemplate/deletetemplate?id=${id}`);\n   } \n\n    static getTemplateById = (id) =>\n    {\n       return API.get(`/api/optimalvision/emailtemplate/gettemplatebyid?id=${id}`);\n    }\n\n    static getTemplateBytemplateId = (templateID) =>\n    {\n       return API.get(`/api/optimalvision/emailtemplate/gettemplatebytemplateid?templateID=${templateID}`);\n    }\n\n    static getAllTemplates = () =>\n    {\n      return API.get(`/api/optimalvision/emailtemplate/getalltemplates`);\n    }\n}","import API from './api';\nimport axiosRetry from 'axios-retry';\n\nexport default class TemplateService {\n\n   static getSMSPreview = (templateId, bookingId, patientId) =>\n   {\n      return API.post(`/api/optimalvision/smstemplate/getsmspreview`, {templateId,bookingId,patientId});\n   }\n\n   static sendManualSMS = (templateId, sendTo, bookingId, patientId) =>\n   {\n      return API.post(`/api/optimalvision/smstemplate/sendmanualsms`, {templateId,sendTo,bookingId,patientId});\n   }\n\n   static registerNewTemplate = (payload) =>\n   {\n      return API.post(`/api/optimalvision/smstemplate/registernewtemplate`, payload);\n   }\n\n   static updateTemplate = (payload) =>\n   {\n      return API.post(`/api/optimalvision/smstemplate/updatetemplate`, payload);\n   } \n\n   static deleteTemplate = (id) =>\n   {\n      return API.post(`/api/optimalvision/smstemplate/deletetemplate?id=${id}`);\n   } \n\n    static getTemplateById = (id) =>\n    {\n       return API.get(`/api/optimalvision/smstemplate/gettemplatebyid?id=${id}`);\n    }\n\n    static getTemplateBytemplateId = (templateID) =>\n    {\n       return API.get(`/api/optimalvision/smstemplate/gettemplatebytemplateid?templateID=${templateID}`);\n    }\n\n    static getAllTemplates = () =>\n    {\n      return API.get(`/api/optimalvision/smstemplate/getalltemplates`);\n    }\n}","import React, { useEffect, useRef, useState } from \"react\";\nimport BookService from \"./services/BookService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {\n    AppBar,\n    Backdrop,\n    Button,\n    Checkbox,\n    CircularProgress,\n    DialogActions,\n    DialogContentText,\n    Divider,\n    FormControlLabel,\n    Grid,\n    IconButton,\n    InputAdornment,\n    InputLabel,\n    Link,\n    makeStyles,\n    MenuItem,\n    Select,\n    TextField,\n    Toolbar,\n    Tooltip,\n} from \"@material-ui/core\";\nimport GlobalState from \"./../GlobalState\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\n\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Draggable from \"react-draggable\";\nimport Paper from \"@material-ui/core/Paper\";\n\nimport Alert from \"@material-ui/lab/Alert\";\n\nimport PropTypes from \"prop-types\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport Box from \"@material-ui/core/Box\";\n\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport NumberFormat from \"react-number-format\";\n\nimport AccessAlarmsIcon from '@material-ui/icons/AccessAlarms';\nimport DateField from \"./DateField\";\n\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\nimport CloseIcon from '@material-ui/icons/Close';\nimport Slide from '@material-ui/core/Slide';\nimport PatientService from \"./services/PatientService\";\nimport dateFormat from \"dateformat\";\n\nimport SaveIcon from '@material-ui/icons/Save';\nimport TemplateService from \"./services/EmailTemplateService\";\nimport SMSTemplateService from \"./services/SMSTemplateService\";\n\n// import createDOMPurify from 'dompurify'\n// import { JSDOM } from 'jsdom'\n\nimport SendIcon from '@material-ui/icons/Send';\nimport CheckIcon from '@material-ui/icons/Check';\n\n// const window = (new JSDOM('')).window\n// const DOMPurify = createDOMPurify(window)\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`vertical-tabpanel-${index}`}\n            aria-labelledby={`vertical-tab-${index}`}\n            {...other}\n            style={{ width: \"100%\" }}\n        >\n            {value === index && (\n                <div style={{ padding: \"20px\", width: \"100%\" }}>\n                    {children}\n                </div>\n            )}\n        </div>\n    );\n}\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n    return {\n        id: `vertical-tab-${index}`,\n        'aria-controls': `vertical-tabpanel-${index}`,\n    };\n}\n\nconst useStyles = makeStyles((theme) => ({\n    appBar: {\n        position: 'relative',\n    },\n    title: {\n        marginLeft: theme.spacing(2),\n        flex: 1,\n    },\n\n    root: {\n        paddingTop: \"8px\",\n        flexGrow: 1,\n        backgroundColor: theme.palette.background.paper,\n        display: 'flex',\n        height: 224,\n    },\n    tabs: {\n        borderRight: `1px solid ${theme.palette.divider}`,\n    },\n\n    backdrop: {\n        zIndex: theme.zIndex.drawer + 5,\n        color: \"#fff\",\n    },\n\n    titleCenter: {\n        width: \"100%\",\n        textAlign: \"center\",\n        fontSize: \"1.1rem\",\n        color: theme.palette.primary.main,\n        fontWeight: \"500\",\n        borderBottom: `2px dashed ${theme.palette.primary.main}`\n    },\n\n    eyeText: {\n        width: \"100%\",\n        textAlign: \"left\",\n        fontSize: \"1.1rem\",\n        color: theme.palette.primary.main,\n        fontWeight: \"500\",\n        paddingTop: \"15px\"\n    },\n\n    multilineColor:{\n        color:'#333',\n        lineHeight: \"1.5rem\"\n    }\n\n}));\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport default function PatientDialog(props) {\n    const classes = useStyles();\n\n    const [state, setState] = React.useContext(GlobalState);\n\n    const [patient, setPatient] = React.useState({ formData: {} })\n    const [saving, setSaving] = React.useState(false);\n\n    const [emailSent, setEmailSent] = React.useState(false)\n    const [emailSending, setEmailSending] = React.useState(false)\n\n    const [smsSent, setSMSSent] = React.useState(false)\n    const [smsSending, setSMSSending] = React.useState(false)\n\n\n    const [patientIDError, setPatientIDError] = React.useState(false)\n    const [nameError, setNameError] = React.useState(false)\n    const [surnameError, setSurnameError] = React.useState(false)\n    const [birthDateError, setBirthDateError] = React.useState(false)\n\n    const [patientRepeated, setPatientRepeated] = React.useState(false)\n\n\n    const [value, setValue] = React.useState(0);\n\n    const [history, setHistory] = React.useState([]);\n    const [backupFormData, setBackUpFormData] = React.useState(null);\n\n    const [openDeleteDialog, setOpenDeleteDialog] = React.useState(false)\n\n    const [selectedTemplateID, setSelectedTemplateID] = React.useState(null)\n    const [selectedTemplate, setSelectedTemplate] = React.useState(null)  \n    const [emailTemplates, setEmailTemplates] = React.useState([])\n\n    const [selectedSMSTemplateID, setSelectedSMSTemplateID] = React.useState(null)\n    const [selectedSMSTemplate, setSelectedSMSTemplate] = React.useState(null)  \n    const [smsTemplates, setSMSTemplates] = React.useState([])\n\n\n    const handleCloseDeleteDialog = () => {\n        setOpenDeleteDialog(false)\n    }\n\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    const createPreview = async (_template) => {\n        try{\n            const res = await TemplateService.getEmailPreview(_template.templateID, null, patient.patientID)\n            if (res && res.data && res.data.result){\n                setSelectedTemplate({..._template, html: res.data.result.content, subject: res.data.result.newSubject})\n            }\n\n        }catch(err)\n        {\n            console.error(err)\n        }\n    }\n\n    const createSMSPreview = async (_template) => {\n        try{\n            const res = await SMSTemplateService.getSMSPreview(_template.templateID, null, patient.patientID)\n            if (res && res.data && res.data.result){\n                setSelectedSMSTemplate({..._template, rawText: res.data.result.content})\n            }\n\n        }catch(err)\n        {\n            console.error(err)\n        }\n    }\n\n\n    useEffect(() => {\n        if (props.open) {\n            const _history = []\n\n            if (props.patient) {\n                setPatient({ ...props.patient, formData: props.patient.formData ? JSON.parse(props.patient.formData) : {} })\n                setBackUpFormData(props.patient.formData ? JSON.parse(props.patient.formData) : {})\n                if (props.patient.history) {\n                    props.patient.history.forEach(record => {\n                        _history.push(JSON.parse(record))\n                    });\n                    setSelectedVersion(0)\n                }\n            }\n            else {\n                setPatient({ formData: {},  name : props.name || '', surname: props.surname || ''})\n            }\n\n            setHistory(_history.reverse())\n            loadEmailTemplates()\n            loadSMSTemplates()\n\n        }\n    }, [props.patient, props.open])\n\n    const loadEmailTemplates = async () => {\n        try{\n            const res = await TemplateService.getAllTemplates()\n            if (res){\n                setEmailTemplates(res.data)\n            }\n\n        }catch(err)\n        {\n            console.error(err)\n        }\n    }\n\n    const loadSMSTemplates = async () => {\n        try{\n            const res = await SMSTemplateService.getAllTemplates()\n            if (res){\n                setSMSTemplates(res.data)\n            }\n\n        }catch(err)\n        {\n            console.error(err)\n        }\n    }\n\n\n    const handleClose = () => {\n        props.handleClose();\n        setValue(0)\n        setPatient({ formData: {} })\n        setPatientIDError(false)\n        setNameError(false)\n        setSurnameError(false)\n        setPatientRepeated(false)\n        setSelectedTemplate(null) \n        setSelectedTemplateID(null)\n        setSelectedSMSTemplate(null)\n        setSelectedSMSTemplateID(null)\n        setSMSSent(false)\n        setEmailSent(false)\n        setSMSSending(false)\n        setEmailSending(false)\n    };\n\n    const saveClicked = async () => {\n\n        if (!validatePatient()) {\n            setValue(0)\n            return\n        }\n\n        try {\n            setPatientRepeated(false)\n            setSaving(true)\n            patient.formData = JSON.stringify(patient.formData)\n            if (props.patient) {\n                const res = await PatientService.updatePatient({ id: patient._id, patient: patient })\n                setSaving(false)\n                if (res.data.status === \"OK\") {\n                    setState(state => ({ ...state, patientDialogDataChanged: !state.patientDialogDataChanged }))\n                    handleClose();\n                }\n            } else {\n                const res = await PatientService.registerNewPatient({ patient: patient })\n                setSaving(false)\n                if (res.data.status === \"OK\") {\n                    setState(state => ({ ...state, patientDialogDataChanged: !state.patientDialogDataChanged }))\n                    handleClose();\n                } else if (res.data.status === \"FAILED\" && res.data.error === \"Repeated Patient!\") {\n                    setPatientIDError(true)\n                    setPatientRepeated(true)\n                    setValue(0)\n\n                }\n            }\n        }\n        catch (err) {\n            setSaving(false)\n            console.error(err)\n        }\n    }\n\n    const deleteClicked = async () => {\n\n        setOpenDeleteDialog(false)\n\n        setSaving(true)\n        try {\n            await PatientService.deletePatient(props.patient._id)\n            setSaving(false)\n            setState((state) => ({\n                ...state,\n                patientDialogDataChanged: !state.patientDialogDataChanged\n                    ? true\n                    : false,\n            }));\n            handleClose();\n        }\n        catch (err) {\n            console.error(err)\n            setSaving(false)\n        }\n    }\n\n\n\n    const validatePatient = () => {\n        var error = false\n        if (!patient.patientID || patient.patientID.trim().length === 0) {\n            error = true\n            setPatientIDError(true)\n        }\n        if (!patient.name || patient.name.trim().length === 0) {\n            error = true\n            setNameError(true)\n        }\n\n        if (!patient.surname || patient.surname.trim().length === 0) {\n            error = true\n            setSurnameError(true)\n        }\n\n        if (patient.birthDate && patient.birthDate.length !== 10) {\n            setBirthDateError(true)\n            error = true\n        }\n\n        return !error\n\n    }\n\n    const formatDate = (date) => {\n        return dateFormat(date, \"dd-mm-yyyy , HH:MM:ss\")\n    }\n\n    const [selectedVersion, setSelectedVersion] = React.useState(0)\n\n    const showHistoryComboBox = () => {\n        return (\n            <React.Fragment>\n                <div style={{ marginTop: \"-10px\" }}>\n                    <span style={{ color: \"#fff\", fontWeight: \"500\", fontSize: \"1rem\", marginRight: \"10px\" }}>\n                        Version :\n                    </span>\n                    <Select\n                        label=\"Version\"\n                        labelId=\"version-label\"\n                        id=\"version-label\"\n                        style={{ color: \"#fff\", padding: \"0px 10px\" }}\n                        value={selectedVersion}\n                        onChange={(event) => {\n                            setSelectedVersion(event.target.value)\n                            if (event.target.value === 0) {\n                                setPatient({ ...patient, formData: backupFormData })\n                            } else {\n                                setPatient({ ...patient, formData: history[event.target.value - 1] })\n                            }\n\n                        }}\n\n                    >\n                        <MenuItem value={0}>{`${formatDate(patient.formData.timeStamp)} ( Current )`}</MenuItem>\n\n                        {history.map((item, index) => (\n                            <MenuItem value={index + 1}>{`${formatDate(item.timeStamp)} ( History )`}</MenuItem>\n                        ))\n                        }\n                    </Select>\n\n                </div>\n            </React.Fragment>\n        )\n    }\n\n    const handleSelectedTemplateChanged = (value) =>\n    {\n        setSelectedTemplateID(value)\n        const template = emailTemplates.find(e => e.templateID === value)\n        setSelectedTemplate(template)\n        createPreview(template) \n        setEmailSent(false)\n    }\n\n    const handleSelectedSMSTemplateChanged = (value) =>\n    {\n        setSelectedSMSTemplateID(value)\n        const template = smsTemplates.find(e => e.templateID === value)\n        setSelectedSMSTemplate(template)\n        createSMSPreview(template) \n        setSMSSent(false)\n    }\n\n\n    const sendEmail = async () => {\n        try{\n            setEmailSending(true)\n            setSaving(true)\n\n            await TemplateService.sendManualEmail(selectedTemplate.templateID, patient.email, null, patient.patientID)\n\n\n            setEmailSending(false)\n            setEmailSent(true)\n            setSaving(false)\n\n        }catch(err)\n        {\n            console.error(err)\n            setEmailSending(false)\n            setSaving(false)\n        }\n\n    }\n\n    const sendSMS = async () => {\n        try{\n            setSMSSending(true)\n            setSaving(true)\n\n            await SMSTemplateService.sendManualSMS(selectedSMSTemplate.templateID, patient.mobileTel, null, patient.patientID)\n\n            setSMSSending(false)\n            setSMSSent(true)\n            setSaving(false)\n\n        }catch(err)\n        {\n            console.error(err)\n            setSMSSending(false)\n            setSaving(false)\n        }\n\n    }\n\n\n\n    return (\n        <React.Fragment>\n            <React.Fragment>\n                <Dialog fullScreen open={props.open} onClose={handleClose} TransitionComponent={Transition}>\n                    <AppBar className={classes.appBar} style={(selectedVersion > 0 && history && history.length > 0) ? { backgroundColor: \"#777\" } : {}} color=\"secondary\">\n                        <Toolbar>\n                            <IconButton edge=\"start\" color=\"inherit\" onClick={handleClose} aria-label=\"close\">\n                                <CloseIcon />\n                            </IconButton>\n                            <Typography variant=\"h6\" className={classes.title}>\n                                {props.title}\n                            </Typography>\n\n\n                            <Button startIcon={<SaveIcon />} variant=\"contained\" color=\"primary\" onClick={saveClicked} disabled={selectedVersion > 0 && history && history.length > 0}>\n                                {props.saveButtonText}\n                            </Button>\n                        </Toolbar>\n\n                        <Grid container direction=\"column\" alignItems=\"center\" justify=\"center\">\n\n                            {history && history.length > 0 && (\n                                <Grid item>\n                                    {showHistoryComboBox()}\n                                </Grid>\n                            )}\n                        </Grid>\n\n                    </AppBar>\n\n                    <div className={classes.root}>\n                        <Tabs\n                            orientation=\"vertical\"\n                            variant=\"scrollable\"\n                            value={value}\n                            onChange={handleChange}\n                            aria-label=\"Vertical tabs example\"\n                            indicatorColor=\"secondary\"\n                            textColor=\"secondary\"\n                            className={classes.tabs}\n                        >\n                            <Tab label=\"Personal Details\" {...a11yProps(0)} />\n                            <Tab label={`History & Symptoms`} {...a11yProps(1)} />\n                            <Tab label={`Notes From Consultation`} {...a11yProps(2)} />\n                            <Tab label=\"Recommendation\" {...a11yProps(3)} />\n                            {props.patient && (\n                                <Tab label=\"Send Emails (Manually)\" {...a11yProps(4)} />\n                            )}\n                            {props.patient && (\n                                <Tab label=\"Send SMS (Manually)\" {...a11yProps(5)} />\n                            )}\n\n                        </Tabs>\n                        <TabPanel value={value} index={0}>\n                            <Grid container spacing={4}>\n                                <Grid item xs={12} sm={6} md={4}>\n                                    <TextField\n                                        disabled={props.patient}\n                                        name=\"patientid\"\n                                        id=\"patientid\"\n                                        label=\"Patient ID\"\n                                        fullWidth\n                                        required\n                                        helperText={patientRepeated ? 'This PatientID is already assigned to another patient' : ''}\n                                        error={patientIDError}\n                                        value={patient.patientID || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, patientID: event.target.value })\n                                            setPatientIDError(false)\n                                        }}\n                                        autoComplete=\"none\"\n                                        variant=\"outlined\"\n                                    />\n                                </Grid>\n                                <Grid item xs={12} sm={6} md={4}>\n                                    <TextField\n                                        name=\"firstname\"\n                                        id=\"firstname\"\n                                        label=\"First Name\"\n                                        fullWidth\n                                        required\n                                        error={nameError}\n                                        value={patient.name || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, name: event.target.value })\n                                            setNameError(false)\n                                        }}\n                                        autoComplete=\"none\"\n                                        variant=\"outlined\"\n                                    />\n                                </Grid>\n                                <Grid item xs={12} sm={6} md={4}>\n                                    <TextField\n                                        name=\"surname\"\n                                        id=\"surname\"\n                                        label=\"Surname\"\n                                        fullWidth\n                                        required\n                                        error={surnameError}\n                                        value={patient.surname || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, surname: event.target.value })\n                                            setSurnameError(false)\n                                        }}\n                                        autoComplete=\"none\"\n                                        variant=\"outlined\"\n                                    />\n                                </Grid>\n                                <Grid item xs={12} sm={6} md={4}>\n                                    <FormControl fullWidth variant=\"outlined\" >\n                                        <InputLabel id=\"gender-label\">Gender</InputLabel>\n                                        <Select\n                                            label=\"Gender\"\n                                            labelId=\"gender-label\"\n                                            id=\"gender-label\"\n                                            fullWidth\n                                            style={{ height: \"90px\" }}\n                                            value={patient.gender || ''}\n                                            onChange={(event) => {\n                                                setPatient({ ...patient, gender: event.target.value })\n                                            }}\n\n                                        >\n                                            <MenuItem value={\"Male\"}>Male</MenuItem>\n                                            <MenuItem value={\"Female\"}>Female</MenuItem>\n                                        </Select>\n                                    </FormControl>\n                                </Grid>\n                                <Grid item xs={12} sm={6} md={8} style={{ marginTop: \"-20px\" }} >\n                                    <DateField\n                                        error={birthDateError}\n                                        value={patient.birthDate || ''}\n                                        title=\"DOB\"\n                                        dateChanged={(value) => {\n                                            setPatient({ ...patient, birthDate: value })\n                                            setBirthDateError(false)\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} sm={6} md={4}>\n                                    <TextField\n                                        name=\"postcode\"\n                                        id=\"postcode\"\n                                        label=\"Postcode\"\n                                        fullWidth\n                                        autoComplete=\"none\"\n                                        value={patient.postCode || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, postCode: event.target.value })\n                                        }}\n                                        variant=\"outlined\"\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} sm={6} md={8}>\n                                    <TextField\n                                        name=\"address\"\n                                        id=\"address\"\n                                        label=\"Address\"\n                                        fullWidth\n                                        autoComplete=\"none\"\n                                        value={patient.address || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, address: event.target.value })\n                                        }}\n\n                                        variant=\"outlined\"\n\n                                    />\n                                </Grid>\n\n                                <Grid item xs={12} sm={6} md={4}>\n                                    <TextField\n                                        name=\"hometel\"\n                                        id=\"hometel\"\n                                        label=\"Home Tel\"\n                                        fullWidth\n                                        autoComplete=\"none\"\n                                        value={patient.homeTel || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, homeTel: event.target.value })\n                                        }}\n                                        variant=\"outlined\"\n\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} sm={6} md={4}>\n                                    <TextField\n                                        name=\"mobiletel\"\n                                        id=\"mobiletel\"\n                                        label=\"Mobile Tel\"\n                                        fullWidth\n                                        autoComplete=\"none\"\n                                        value={patient.mobileTel || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, mobileTel: event.target.value })\n                                        }}\n\n                                        variant=\"outlined\"\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} sm={6} md={4}>\n                                    <TextField\n                                        name=\"email\"\n                                        id=\"email\"\n                                        label=\"Email\"\n                                        fullWidth\n                                        autoComplete=\"none\"\n                                        value={patient.email || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, email: event.target.value })\n                                        }}\n                                        variant=\"outlined\"\n\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} sm={6}>\n                                    <TextField\n                                        name=\"occupation\"\n                                        id=\"occupation\"\n                                        label=\"Occupation\"\n                                        fullWidth\n                                        autoComplete=\"none\"\n                                        value={patient.formData.occupation || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, occupation: event.target.value } })\n                                        }}\n\n                                        variant=\"outlined\"\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} sm={6}>\n                                    <TextField\n                                        name=\"gpname\"\n                                        id=\"gpname\"\n                                        label={`GP Name & Address`}\n                                        fullWidth\n                                        autoComplete=\"none\"\n                                        value={patient.formData.gpname || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, gpname: event.target.value } })\n                                        }}\n\n                                        variant=\"outlined\"\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} sm={6}>\n                                    <TextField\n                                        name=\"kincontact\"\n                                        id=\"kincontact\"\n                                        label=\"Next of Kin Contact\"\n                                        fullWidth\n                                        autoComplete=\"none\"\n                                        value={patient.formData.kincontact || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, kincontact: event.target.value } })\n                                        }}\n                                        variant=\"outlined\"\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} sm={6}>\n                                    <TextField\n                                        name=\"prevsighttest\"\n                                        id=\"prevsignttest\"\n                                        label=\"Previous Sight Test\"\n                                        fullWidth\n                                        autoComplete=\"none\"\n                                        value={patient.formData.prevsighttest || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, prevsighttest: event.target.value } })\n                                        }}\n                                        variant=\"outlined\"\n\n                                    />\n                                </Grid>\n\n                                {props.patient && (\n                                    <Grid item xs={12} style={{ marginTop: \"20px\" }}>\n                                        <Button\n                                            onClick={() => setOpenDeleteDialog(true)}\n                                            variant=\"contained\"\n                                            fullWidth\n                                            color=\"primary\"\n                                            // style={{ width: \"100px\" }}\n                                            style={{ backgroundColor: \"#c70000\", color: \"#fff\" }}\n                                            disabled={saving}\n                                        >\n                                            Delete This Patient\n                                  </Button>\n                                    </Grid>\n\n\n                                )}\n                            </Grid>\n                        </TabPanel>\n                        <TabPanel value={value} index={1}>\n                            <Grid container spacing={2}>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"cc\"\n                                        id=\"cc\"\n                                        label=\"C.C\"\n                                        fullWidth\n                                        multiline\n                                        rows={3}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.cc || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, cc: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"prevmedicalhistory\"\n                                        id=\"prevmedicalhistory\"\n                                        label=\"Previous Medical History\"\n                                        fullWidth\n                                        multiline\n                                        rows={3}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.prevmedicalhistory || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, prevmedicalhistory: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"prevocularhistory\"\n                                        id=\"prevocularhistory\"\n                                        label=\"Previous Ocular History\"\n                                        fullWidth\n                                        multiline\n                                        rows={3}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.prevocularhistory || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, prevocularhistory: event.target.value } })\n                                        }}\n\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"familyhistory\"\n                                        id=\"familyhistory\"\n                                        label=\"Family History\"\n                                        fullWidth\n                                        multiline\n                                        rows={3}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.familyhistory || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, familyhistory: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"medications\"\n                                        id=\"medications\"\n                                        label=\"Medications\"\n                                        fullWidth\n                                        multiline\n                                        rows={3}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.medications || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, medications: event.target.value } })\n                                        }}\n\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"grafth\"\n                                        id=\"grafth\"\n                                        label=\"Graft H\"\n                                        fullWidth\n                                        multiline\n                                        rows={3}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.grafth || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, grafth: event.target.value } })\n                                        }}\n\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"allergies\"\n                                        id=\"allregies\"\n                                        label=\"Allergies\"\n                                        fullWidth\n                                        multiline\n                                        rows={3}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.allergies || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, allergies: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"contactlenswearer\"\n                                        id=\"contactlenswearer\"\n                                        label=\"Contact Lens Wearer\"\n                                        fullWidth\n                                        multiline\n                                        rows={3}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        placeholder={` Yes/No \\n Soft/RGP/EW`}\n                                        value={patient.formData.contactlenswearer || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, contactlenswearer: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"hobbies\"\n                                        id=\"hobbies\"\n                                        label=\"Lifestyle / Hobbies\"\n                                        fullWidth\n                                        multiline\n                                        rows={3}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.hobbies || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, hobbies: event.target.value } })\n                                        }}\n\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"vdu\"\n                                        id=\"vdu\"\n                                        label=\"VDU\"\n                                        fullWidth\n                                        multiline\n                                        rows={3}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.vdu || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, vdu: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"othernotes\"\n                                        id=\"othernotes\"\n                                        label=\"Other Notes\"\n                                        fullWidth\n                                        multiline\n                                        rows={10}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.othernotes || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, othernotes: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"driver\"\n                                        id=\"driver\"\n                                        label=\"Driver\"\n                                        fullWidth\n                                        multiline\n                                        rows={3}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.driver || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, driver: event.target.value } })\n                                        }}\n\n\n                                    />\n                                </Grid>\n                            </Grid>\n                        </TabPanel>\n                        <TabPanel value={value} index={2}>\n                            <Grid container spacing={2}>\n                                <Grid item xs={12}>\n                                    <TextField\n                                        name=\"notesfromconsultation\"\n                                        id=\"notesfromconsultation\"\n                                        label=\"Notes From Consultation\"\n                                        fullWidth\n                                        multiline\n                                        rows={25}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.notesfromconsultation || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, notesfromconsultation: event.target.value } })\n                                        }}\n                                    />\n\n                                </Grid>\n                            </Grid>\n                        </TabPanel>\n\n\n                        <TabPanel value={value} index={3}>\n                            <Grid container spacing={2}>\n                                <Grid item xs={12}>\n                                    <TextField\n                                        name=\"recommendation\"\n                                        id=\"recommendation\"\n                                        label=\"Recommendation\"\n                                        fullWidth\n                                        multiline\n                                        rows={25}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.recommendation || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, recommendation: event.target.value } })\n                                        }}\n                                    />\n\n                                </Grid>\n                            </Grid>\n                        </TabPanel>\n                        \n                        {props.patient && (\n                            <TabPanel value={value} index={4}>\n                                <Grid container spacing={2} direction=\"column\">\n                                    <Grid item>\n                                        <div style={{fontSize:\"1.2rem\", color:\"#777\", fontWeight:\"500\", marginBottom:\"0px\"}}>\n                                            Here you can manually send emails (from templates) to the patients:\n                                        </div>   \n                                    </Grid>\n                                    <Grid item style={{marginBottom:\"10px\"}}>\n                                      <Alert severity=\"info\">Emails will be sent to  <span style={{fontWeight:\"500\"}}>\"{patient.email}\"</span></Alert>\n                                    </Grid>\n                                    <Grid item xs={6}>\n                                    <FormControl fullWidth variant=\"outlined\" className={classes.formControl}>\n                                        <InputLabel id=\"template-label-id\">Choose Your Template</InputLabel>\n                                            <Select\n                                                fullWidth\n                                                label=\"Choose Your Template\"\n                                                labelId=\"template-label-id\"\n                                                id=\"template-label\"\n                                                value={selectedTemplateID}\n                                                onChange={(event) => {\n                                                    handleSelectedTemplateChanged(event.target.value)\n                                                }}\n                                            >\n\n                                                {emailTemplates.map((item, index) => (\n                                                    <MenuItem value={item.templateID}>{`${item.templateID}`}</MenuItem>\n                                                ))\n                                                }\n\n                                            </Select>\n                                        </FormControl>\n                                    </Grid>\n                                    <Grid item>\n                                        {selectedTemplate && (\n                                            <React.Fragment>\n                                                <div style={{fontWeight:\"500\", color:\"#777\", fontSize:\"1rem\", width:\"100%\", padding:\"5px\"}}>\n                                                    Email Preview :\n                                                </div>\n                                                <Paper elevation={4} style={{padding:\"20px\",marginBottom:\"1px\", backgroundColor:\"#0083ba\"}}>\n                                                    <div style={{fontSize:\"1rem\", fontWeight:\"500\", color:\"#fff\", position:\"relative\"}}>\n                                                         To: {patient.email}\n                                                        <div style={{position:\"absolute\", right:\"5px\", top:\"-5px\"}}>\n                                                            {!emailSent && (\n                                                                <Button disabled={emailSending || (!patient.email || patient.email.length < 3)} onClick={sendEmail} startIcon={<SendIcon/>} variant=\"contained\" color=\"primary\">\n                                                                     Send Email\n                                                                 </Button>\n                                                            )}\n                                                            {emailSent && (\n                                                                <div style={{fontWeight:\"500\", fontSize:\"1rem\", color:\"#fff\"}}>\n                                                                    <Grid container spacing={1} alignItems=\"center\">\n                                                                        <Grid item>\n                                                                             Email Sent Successfully \n                                                                        </Grid>\n                                                                        <Grid item>\n                                                                            <CheckIcon/>\n                                                                        </Grid>\n                                                                    </Grid>\n                                                                    \n                                                                 </div>\n                                                            )}\n                                                        </div>\n                                                    </div>   \n                                                </Paper>\n                                                <Paper elevation={4} style={{padding:\"10px\",marginBottom:\"1px\", backgroundColor:\"#e6f8ff\"}}>\n                                                    <div style={{fontSize:\"1rem\", fontWeight:\"500\", color:\"#006b94\", position:\"relative\"}}>\n                                                         <span>Subject:</span> {selectedTemplate.subject}\n                                                    </div>\n                                                 </Paper>        \n\n                                                <Paper elevation={4} style={{padding:\"20px\"}}>\n                                                    <div \n                                                        // dangerouslySetInnerHTML={{ __html: DOMPurify.sanitize(selectedTemplate.html) }}\n                                                        dangerouslySetInnerHTML={{ __html: selectedTemplate.html}}\n                                                    >\n                                                    </div>\n                                                </Paper>\n                                            </React.Fragment>\n                                        )}\n                                    </Grid>\n\n                                </Grid>\n                             </TabPanel>                        \n                        )}\n\n                        {props.patient && (\n                            <TabPanel value={value} index={5}>\n                                <Grid container spacing={2} direction=\"column\">\n                                    <Grid item>\n                                        <div style={{fontSize:\"1.2rem\", color:\"#777\", fontWeight:\"500\", marginBottom:\"0px\"}}>\n                                            Here you can manually send sms (from templates) to the patients:\n                                        </div>   \n                                    </Grid>\n                                    <Grid item style={{marginBottom:\"10px\"}}>\n                                      <Alert severity=\"info\">SMS will be sent to <span style={{fontWeight:\"500\"}}>\"{patient.mobileTel}\"</span></Alert>\n                                    </Grid>\n                                    <Grid item xs={6}>\n                                    <FormControl fullWidth variant=\"outlined\" className={classes.formControl}>\n                                        <InputLabel id=\"template-label-id\">Choose Your Template</InputLabel>\n                                            <Select\n                                                fullWidth\n                                                label=\"Choose Your Template\"\n                                                labelId=\"template-label-id\"\n                                                id=\"template-label\"\n                                                value={selectedSMSTemplateID}\n                                                onChange={(event) => {\n                                                    handleSelectedSMSTemplateChanged(event.target.value)\n                                                }}\n                                            >\n\n                                                {smsTemplates.map((item, index) => (\n                                                    <MenuItem value={item.templateID}>{`${item.templateID}`}</MenuItem>\n                                                ))\n                                                }\n\n                                            </Select>\n                                        </FormControl>\n                                    </Grid>\n                                    <Grid item>\n                                        {selectedSMSTemplate && (\n                                            <React.Fragment>\n                                                <div style={{fontWeight:\"500\", color:\"#777\", fontSize:\"1rem\", width:\"100%\", padding:\"5px\"}}>\n                                                    SMS Preview :\n                                                </div>\n                                                <Paper elevation={4} style={{padding:\"20px\",marginBottom:\"1px\", backgroundColor:\"#0083ba\"}}>\n                                                    <div style={{fontSize:\"1rem\", fontWeight:\"500\", color:\"#fff\", position:\"relative\"}}>\n                                                        To:  {patient.mobileTel}\n                                                        <div style={{position:\"absolute\", right:\"5px\", top:\"-5px\"}}>\n                                                            {!smsSent && (\n                                                                <Button disabled={smsSending || (!patient.mobileTel || patient.mobileTel.length < 3)} onClick={sendSMS} startIcon={<SendIcon/>} variant=\"contained\" color=\"primary\">\n                                                                     Send SMS\n                                                                 </Button>\n                                                            )}\n                                                            {smsSent && (\n                                                                <div style={{fontWeight:\"500\", fontSize:\"1rem\", color:\"#fff\"}}>\n                                                                    <Grid container spacing={1} alignItems=\"center\">\n                                                                        <Grid item>\n                                                                             SMS Sent Successfully \n                                                                        </Grid>\n                                                                        <Grid item>\n                                                                            <CheckIcon/>\n                                                                        </Grid>\n                                                                    </Grid>\n                                                                    \n                                                                 </div>\n                                                            )}\n                                                        </div>\n                                                    </div>   \n                                                </Paper>\n                                                <Paper elevation={4} style={{padding:\"20px\"}}>\n                                                    <div> \n                                                        <TextField\n                                                            name=\"smspreview\"\n                                                            id=\"smspreview\"\n                                                            disabled={true}\n                                                            fullWidth\n                                                            multiline={true}\n                                                            rows={20}\n                                                            value= {selectedSMSTemplate.rawText}\n                                                            InputProps={{\n                                                                classes: {\n                                                                    input: classes.multilineColor\n                                                                }\n                                                            }}\n                                                        />\n\n                                                       \n                                                    </div>\n                                                </Paper>\n                                            </React.Fragment>\n                                        )}\n                                    </Grid>\n\n                                </Grid>\n                             </TabPanel>                        \n                        )}\n\n\n\n                    </div>\n\n                    <Backdrop\n                        className={classes.backdrop}\n                        open={saving}\n                    >\n                        <CircularProgress color=\"inherit\" />\n                    </Backdrop>\n\n\n                    <Dialog\n                        open={openDeleteDialog}\n                        onClose={handleCloseDeleteDialog}\n                        aria-labelledby=\"alert-dialog-title\"\n                        aria-describedby=\"alert-dialog-description\"\n                    >\n                        <DialogTitle style={{ color: \"#d10202\", fontWeight: \"600\" }} id=\"alert-dialog-title\">\n                            {\"Delete Patient\"}\n                        </DialogTitle>\n                        <DialogContent>\n                            <DialogContentText\n                                style={{ color: \"#000\", fontWeight: \"500\" }}\n                                id=\"alert-dialog-description\"\n                            >\n                                Are you sure you want to delete this patient?\n                            </DialogContentText>\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={handleCloseDeleteDialog} color=\"default\">\n                                Back\n                                 </Button>\n                            <Button onClick={deleteClicked} variant=\"contained\" style={{ backgroundColor: \"#d10202\", color: \"#fff\" }}>\n                                Yes, Delete this patient\n                                 </Button>\n                        </DialogActions>\n                    </Dialog>\n\n\n\n                </Dialog>\n            </React.Fragment>\n        </React.Fragment>\n    );\n}\n","import React, { useEffect, useRef, useState } from \"react\";\nimport BookService from \"./services/BookService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {\n    Backdrop,\n    Button,\n    Checkbox,\n    CircularProgress,\n    DialogActions,\n    Divider,\n    FormControlLabel,\n    Grid,\n    InputAdornment,\n    InputLabel,\n    Link,\n    makeStyles,\n    MenuItem,\n    Select,\n    Switch,\n    TextField,\n    Tooltip,\n} from \"@material-ui/core\";\nimport GlobalState from \"../GlobalState\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport CreditCardIcon from \"@material-ui/icons/CreditCard\";\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\n\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Draggable from \"react-draggable\";\nimport Paper from \"@material-ui/core/Paper\";\n\nimport Alert from \"@material-ui/lab/Alert\";\n\nimport PropTypes from \"prop-types\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport Box from \"@material-ui/core/Box\";\n\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport { corporates } from \"./Corporates\";\nimport NumberFormat from \"react-number-format\";\n\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { validate } from \"email-validator\";\nimport DateRangeIcon from \"@material-ui/icons/DateRange\";\nimport { CalendarColors } from \"./calendar-admin/colors\";\nimport DateField from \"./DateField\";\n\nimport Autocomplete, { createFilterOptions } from '@material-ui/lab/Autocomplete';\nimport PatientService from \"./services/PatientService\";\n\nimport {matchSorter} from 'match-sorter'\nimport PatientDialog from \"./PatientDialog\";\n\n\nconst filter = createFilterOptions();\n\nvar interval;\n\nconst useStyles = makeStyles((theme) => ({\n    title: {\n        marginTop: theme.spacing(0),\n        marginBottom: theme.spacing(1),\n    },\n\n    refreshButton: {\n        marginLeft: theme.spacing(2),\n    },\n\n    checkIcon: {\n        color: \"green\",\n    },\n\n    closeIcon: {\n        color: \"red\",\n    },\n\n    RefLink: {\n        cursor: \"pointer\",\n    },\n\n    BookedLabel: {\n        backgroundColor: \"#606060\",\n        color: \"#fff\",\n        paddingRight: \"10px\",\n        paddingLeft: \"10px\",\n    },\n\n    PatientAttendedLabel: {\n        backgroundColor: \"#0066aa\",\n        color: \"#fff\",\n        paddingRight: \"15px\",\n        paddingLeft: \"10px\",\n    },\n\n    SampleTakenLabel: {\n        backgroundColor: \"#0066cc\",\n        color: \"#fff\",\n        paddingRight: \"40px\",\n        paddingLeft: \"10px\",\n    },\n\n    ReportSentLabel: {\n        backgroundColor: \"#009900\",\n        color: \"#fff\",\n        paddingRight: \"90px\",\n        paddingLeft: \"10px\",\n    },\n\n    ReportCertSentLabel: {\n        backgroundColor: \"#009900\",\n        color: \"#fff\",\n        paddingRight: \"68px\",\n        paddingLeft: \"10px\",\n    },\n\n    archiveButton: {},\n\n    smartMatchButton: {\n        backgroundColor: \"#2f942e\",\n        \"&:hover\": {\n            background: \"green\",\n            color: \"#fff\",\n        },\n        textDecoration: \"none !important\",\n        marginRight: \"10px\",\n        // padding: \"10px\"\n    },\n\n    infoTitle: {\n        fontWeight: \"400\",\n    },\n\n    infoData: {\n        paddingLeft: \"10px\",\n        fontWeight: \"800\",\n    },\n\n    matchButton: {\n        marginTop: \"30px\",\n        marginBottom: \"20px\",\n        backgroundColor: \"#2f942e\",\n        \"&:hover\": {\n            background: \"green\",\n            color: \"#fff\",\n        },\n        textDecoration: \"none !important\",\n        padding: \"10px\",\n        paddingLeft: \"50px\",\n        paddingRight: \"50px\",\n    },\n\n    resendButton: {\n        marginTop: \"5px\",\n        marginBottom: \"5px\",\n        backgroundColor: \"#2f942e\",\n        \"&:hover\": {\n            background: \"green\",\n            color: \"#fff\",\n        },\n        textDecoration: \"none !important\",\n        padding: \"10px\",\n        paddingLeft: \"50px\",\n        paddingRight: \"50px\",\n    },\n\n    resendFilesButton: {\n        marginTop: \"5px\",\n        marginBottom: \"5px\",\n        backgroundColor: \"#3792ad\",\n        \"&:hover\": {\n            background: \"#2f798f\",\n            color: \"#fff\",\n        },\n        textDecoration: \"none !important\",\n        padding: \"10px\",\n        paddingLeft: \"50px\",\n        paddingRight: \"50px\",\n    },\n\n    cancelButton: {\n        marginBottom: \"10px\",\n        textDecoration: \"none !important\",\n        padding: \"10px\",\n        paddingLeft: \"90px\",\n        paddingRight: \"90px\",\n    },\n\n    CalendarIcon: {\n        color: theme.palette.primary.main,\n    },\n\n    DateTimeLabel: {\n        fontWeight: \"600\",\n        fontSize: \"1.2rem\",\n        color: theme.palette.primary.main,\n    },\n\n    backdrop: {\n        zIndex: theme.zIndex.drawer + 5,\n        color: \"#fff\",\n    },\n\n    PriceLabelPaid: {\n        color: theme.palette.primary.main,\n        fontWeight: \"600\"\n    },\n\n    PriceLabelNotPaid: {\n        color: theme.palette.secondary.main,\n        fontWeight: \"600\"\n    },\n\n\n}));\n\nconst Packages = [\n    { packageName: \"Consultation with Consultant Gynaecologist\" },\n    { packageName: `Coil Fitting/Coil Removal` },\n    { packageName: `Well Woman Check` },\n    { packageName: `Sexual Health Screening` },\n    { packageName: `Pre-pregnancy/Fertility check` },\n    { packageName: `Gynaecological Ultrasound` },\n    { packageName: `HPV Vaccination` },\n    { packageName: `Cervical / Pap Smear` },\n    { packageName: `HPV Treatment / Wart Cryo-Therapy` },\n];\n\nfunction NumberFormatCustom(props) {\n    const { inputRef, onChange, ...other } = props;\n\n    return (\n        <NumberFormat\n            {...other}\n            getInputRef={inputRef}\n            onValueChange={(values) => {\n                onChange({\n                    target: {\n                        name: props.name,\n                        value: values.value,\n                    },\n                });\n            }}\n            thousandSeparator\n            isNumericString\n            prefix=\"\"\n        />\n    );\n}\n\nNumberFormatCustom.propTypes = {\n    inputRef: PropTypes.func.isRequired,\n    name: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired,\n};\n\nconst BorderLinearProgress = withStyles((theme) => ({\n    root: {\n        height: 10,\n        borderRadius: 5,\n    },\n    colorPrimary: {\n        backgroundColor: \"#cedbce\", //theme.palette.grey[theme.palette.type === 'light' ? 200 : 700],\n    },\n    bar: {\n        borderRadius: 5,\n        backgroundColor: \"#2f942e\",\n    },\n}))(LinearProgress);\nfunction LinearProgressWithLabel(props) {\n    return (\n        <Box display=\"flex\" alignItems=\"center\">\n            <Box width=\"100%\" mr={1}>\n                <BorderLinearProgress variant=\"determinate\" {...props} />\n            </Box>\n            <Box minWidth={35}>\n                <Typography\n                    style={{ fontWeight: \"800\", color: \"#5e855e\" }}\n                    variant=\"body2\"\n                    color=\"textSecondary\"\n                >{`${Math.round(props.value)}%`}</Typography>\n            </Box>\n        </Box>\n    );\n}\n\nLinearProgressWithLabel.propTypes = {\n    /**\n     * The value of the progress indicator for the determinate and buffer variants.\n     * Value between 0 and 100.\n     */\n    value: PropTypes.number.isRequired,\n};\n\nfunction PaperComponent(props) {\n    return (\n        <Draggable\n            handle=\"#draggable-dialog-title\"\n            cancel={'[class*=\"MuiDialogContent-root\"]'}\n        >\n            <Paper {...props} />\n        </Draggable>\n    );\n}\n\nexport default function NewOVBookingDialog(props) {\n    const classes = useStyles();\n\n    const [state, setState] = React.useContext(GlobalState);\n    const [saving, setSaving] = useState(false);\n\n    const [fullname, setFullname] = React.useState(\"\");\n    const [fullnameError, setFullnameError] = React.useState(false);\n\n    const [patientRecord, setPatientRecord] = React.useState(null)\n    const [patientList, setPatientList] = React.useState([])\n\n\n    const [phone, setPhone] = React.useState(\"\");\n    const [email, setEmail] = React.useState(\"\");\n    const [notes, setNotes] = React.useState(\"\");\n\n    const [patientID, setPatientID] = React.useState(\"\");\n    const [prescriptionLeft, setPrescriptionLeft] = React.useState(\"\");\n    const [prescriptionRight, setPrescriptionRight] = React.useState(\"\");\n\n\n    const [birthDate, setBirthDate] = React.useState(\"\");\n    const [birthDateError, setBirthDateError] = React.useState(false);\n\n\n    const birthDateChanged = (dateStr) => {\n        setBirthDate(dateStr);\n    }\n\n\n\n\n    const fullnameChanged = (event) => {\n        setFullname(event.target.value);\n        setFullnameError(false);\n    };\n\n    const phoneChanged = (event) => {\n        setPhone(event.target.value);\n    };\n\n    const emailChanged = (event) => {\n        setEmail(event.target.value);\n    };\n\n\n    const notesChanged = (event) => {\n        setNotes(event.target.value);\n    };\n\n    const patientIDChanged = (event) => {\n        setPatientID(event.target.value);\n    };\n\n    const prescriptionLeftChanged = (event) => {\n        setPrescriptionLeft(event.target.value);\n    };\n\n    const prescriptionRightChanged = (event) => {\n        setPrescriptionRight(event.target.value);\n    };\n\n    useEffect(() => {\n        if (props.open)\n        {\n            loadPatiens()\n        }\n\n    }, [props.open, state.patientDialogDataChanged])\n\n    const loadPatiens = async() =>\n    {\n        try{\n            const res = await PatientService.getAllPatients()\n            setPatientList(res.data)\n        }catch(err)\n        {\n            console.error(err)\n        }\n    }\n\n    const handleClose = () => {\n        if (saving) return;\n\n        setFullname(\"\");\n        setFullnameError(false);\n        setBirthDateError(false)\n        setPhone(\"\");\n        setEmail(\"\");\n        setNotes(\"\");\n        setBirthDate(\"\")\n        setPatientID(\"\")\n        setPrescriptionLeft(\"\")\n        setPrescriptionRight(\"\")\n        setPatientRecord(null)\n\n        props.handleClose();\n        setSaving(false);\n    };\n\n    const validateBooking = () => {\n        let error = false;\n        if (!fullname || fullname.trim().length < 1) {\n            setFullnameError(true);\n            error = true;\n        }\n\n        if (birthDate && birthDate.length >= 1 && birthDate.length < 10) {\n            setBirthDateError(true);\n            error = true;\n        }\n\n        return !error;\n    };\n\n    const saveClicked = async () => {\n        if (!validateBooking()) {\n            return;\n        }\n\n        setSaving(true);\n\n        try {\n            await BookService.addNewBooking({\n                bookingDate: props.date,\n                bookingTime: props.time,\n                fullname: fullname,\n                phone: phone,\n                email: email,\n                birthDate: birthDate,\n                notes: notes,\n                clinic: props.clinic,\n                patientID: patientID,\n                prescriptionLeft: prescriptionLeft,\n                prescriptionRight: prescriptionRight\n            });\n            setSaving(false);\n            setState((state) => ({\n                ...state,\n                bookingDialogDataChanged: !state.bookingDialogDataChanged\n                    ? true\n                    : false,\n            }));\n            handleClose();\n        } catch (err) {\n            console.error(err);\n            setSaving(false);\n        }\n    };\n\n    const getColorFromClinic = (clinic) => {\n        switch (clinic) {\n            case \"Virtual Consultation\":\n                return CalendarColors.VC_COLOR\n            case \"F2F Clinic\":\n                return CalendarColors.F2F_COLOR\n            case \"Laser Theatre\":\n                return CalendarColors.LASER_COLOR\n            case \"Lens Theatre\":\n                return CalendarColors.CATARACT_COLOR\n            case \"Post OP\":\n                return CalendarColors.POSTOP_COLOR\n            case \"Optometry\":\n                return CalendarColors.OPOTOMETRY_COLOR\n\n            default:\n                return \"#777\"\n\n        }\n    }\n\n    const filterOptions = (options, { inputValue }) => {\n\n        if (inputValue && inputValue.length >= 1)\n        {\n        //   setNoOptionsText(\"\")\n          return matchSorter(options, inputValue, {keys: ['fullname']});\n        }\n        else\n        {\n        //   setNoOptionsText(\"Please enter at least 3 characters\")\n          return matchSorter(options, '$$$$', {keys: ['fullname']});\n        }\n      }\n\n      const [patientDialogOpen, setPatientDialogOpen] = React.useState(false)\n      const handleClosePatientDialog = () =>\n      {\n          setPatientDialogOpen(false)\n          setNewName('')\n          setNewSurname('')\n      }\n\n      const [newName, setNewName] = React.useState('')\n      const [newSurname, setNewSurname] = React.useState('')\n\n      useEffect ( () => {\n          if (patientRecord)\n          {\n              setFullname(patientRecord.fullname || '')\n              setPatientID(patientRecord.patientID || '')\n              setEmail(patientRecord.email || '')\n              setPhone(patientRecord.mobileTel || patientRecord.homeTel || '')\n              setBirthDate(patientRecord.birthDate || null)\n          }else\n          {\n            setFullname('')\n            setPatientID('')\n            setEmail('')\n            setPhone('')\n            setBirthDate(null)\n        }\n\n      }, [patientRecord])\n    \n\n    return (\n        <React.Fragment>\n            {props.date && props.time && (\n                <React.Fragment>\n                    <Dialog\n                        maxWidth=\"md\"\n                        open={props.open}\n                        onClose={handleClose}\n                        PaperComponent={PaperComponent}\n                        aria-labelledby=\"form-dialog-title\"\n                    >\n                        <DialogTitle id=\"draggable-dialog-title\">\n\n                            <div style={{ position: \"absolute\", left: \"0px\", top: \"0px\", width: \"100%\", backgroundColor: getColorFromClinic(props.clinic), color: \"#fff\", padding: \"15px 5px\", textAlign: \"center\", fontSize: \"1.5rem\" }}>\n                                <Grid container direction=\"row\"\n                                    justify=\"center\"\n                                    alignItems=\"center\"\n                                    spacing={1}\n                                >\n                                    <Grid item>\n                                        <AddIcon style={{ fontSize: \"2.5rem\" }} />\n                                    </Grid>\n                                    <Grid item style={{ marginTop: \"-12px\" }}>\n                                        {props.clinic}\n\n                                    </Grid>\n                                </Grid>\n                            </div>\n\n\n                        </DialogTitle>\n                        <DialogContent>\n                            <div\n                                style={{\n                                    paddingTop: \"50px\",\n                                    paddingBottom: \"20px\"\n                                }}\n                            >\n                                <Grid\n                                    container\n                                    direction=\"row\"\n                                    justify=\"stretch\"\n                                    spacing={2}\n                                    alignItems=\"center\"\n                                >\n                                    <Grid item xs={12} style={{ marginTop: \"10px\" }}>\n                                        <Grid\n                                            container\n                                            direction=\"row\"\n                                            justify=\"center\"\n                                            alignItems=\"center\"\n                                            spacing={1}\n                                        >\n                                            <Grid item>\n                                                <DateRangeIcon className={classes.CalendarIcon} />\n                                            </Grid>\n                                            <Grid item>\n                                                <span className={classes.DateTimeLabel}>\n                                                    {props.date} , {props.time}\n                                                </span>\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n\n                                    <Grid item xs={12} md={6}>\n                                        {/* <TextField\n                                            fullWidth\n                                            autoFocus\n                                            error={fullnameError}\n                                            label=\"Full Name\"\n                                            value={fullname}\n                                            required\n                                            onChange={fullnameChanged}\n                                            name=\"fullname\"\n                                            id=\"fullname-id\"\n                                            autoComplete=\"none\"\n                                        /> */}\n\n                                        <Autocomplete\n                                            fullWidth\n                                            autoComplete=\"none\"\n                                            value={patientRecord}\n                                            onChange={(event, newValue) => {\n                                                if (typeof newValue === 'string') {\n                                                    // timeout to avoid instant validation of the dialog's form.\n                                                    setTimeout(() => {\n                                                        const _nameArray = newValue.split(\" \")\n                                                        console.log(_nameArray)\n                                                        if (_nameArray.length >= 1)\n                                                        {\n                                                            setNewName(_nameArray[0])\n                                                        }\n                                                        if (_nameArray.length >=2 )\n                                                        {\n                                                            setNewSurname(_nameArray[1])\n                                                        }\n                                                        setPatientDialogOpen(true)\n                                                        // toggleOpen(true);\n                                                        // setDialogValue({\n                                                        //     title: newValue,\n                                                        //     year: '',\n                                                        // });\n                                                    });\n                                                } else if (newValue && newValue.inputValue) {\n                                                    const _nameArray = newValue.inputValue.split(\" \")\n                                                    console.log(_nameArray)\n\n                                                    if (_nameArray.length >= 1)\n                                                    {\n                                                        setNewName(_nameArray[0])\n                                                    }\n                                                    if (_nameArray.length >= 2 )\n                                                    {\n                                                        setNewSurname(_nameArray[1])\n                                                    }\n\n                                                    setPatientDialogOpen(true)\n                                                    // toggleOpen(true);\n                                                    // setDialogValue({\n                                                    //     title: newValue.inputValue,\n                                                    //     year: '',\n                                                    // });\n                                                } else {\n                                                    setPatientRecord(newValue);\n                                                }\n                                            }}\n                                            filterOptions={(options, params) => {\n                                                // const filtered = filter(options, params);\n                                                const filtered = filterOptions(options,params)\n\n                                                if (params.inputValue !== '') {\n                                                    filtered.push({\n                                                        inputValue: params.inputValue,\n                                                        fullname: `Add \"${params.inputValue}\"`,\n                                                    });\n                                                }\n\n                                                return filtered;\n                                            }}\n                                            id=\"fullname\"\n                                            options={patientList}\n                                            getOptionLabel={(option) => {\n                                                // e.g value selected with enter, right from the input\n                                                if (typeof option === 'string') {\n                                                    return option;\n                                                }\n                                                if (option.inputValue) {\n                                                    return option.inputValue;\n                                                }\n                                                return option.fullname;\n                                            }}\n                                            selectOnFocus\n                                            clearOnBlur\n                                            handleHomeEndKeys\n                                            renderOption={(option) => option.fullname}\n                                            // style={{ width: 300 }}\n                                            freeSolo\n                                            renderInput={(params) => (\n                                                <TextField {...params} onBlur={(event) => {setPatientRecord({...patientRecord, fullname:event.target.value})}} autoComplete=\"none\" autoFocus error={fullnameError} fullWidth label=\"Full Name\" required />\n                                            )}\n                                        />\n                                    </Grid>\n\n                                    <Grid item xs={12} md={6}>\n                                        <TextField\n                                            fullWidth\n                                            label=\"Patient ID\"\n                                            value={patientID}\n                                            onChange={patientIDChanged}\n                                            name=\"patientid\"\n                                            id=\"patientid-id\"\n                                            autoComplete=\"none\"\n                                        />\n                                    </Grid>\n\n\n                                    <Grid item xs={12} md={6}>\n                                        <TextField\n                                            fullWidth\n                                            label=\"Telephone\"\n                                            value={phone}\n                                            onChange={phoneChanged}\n                                            name=\"phone\"\n                                            id=\"phone-id\"\n                                            autoComplete=\"none\"\n                                        />\n                                    </Grid>\n\n                                    <Grid item xs={12} md={6}>\n                                        <TextField\n                                            fullWidth\n                                            label=\"Email\"\n                                            value={email}\n                                            onChange={emailChanged}\n                                            name=\"email\"\n                                            id=\"email-id\"\n                                            autoComplete=\"none\"\n                                        />\n                                    </Grid>\n\n                                    <Grid item xs={12}>\n                                        <DateField\n                                            error={birthDateError}\n                                            title=\"Date of Birth\"\n                                            value={birthDate}\n                                            dateChanged={birthDateChanged}\n                                        >\n\n                                        </DateField>\n                                    </Grid>\n\n                                    <Grid item xs={12} md={6}>\n                                        <TextField\n                                            fullWidth\n                                            label=\"Prescription (LEFT)\"\n                                            value={prescriptionLeft}\n                                            onChange={prescriptionLeftChanged}\n                                            name=\"pleft\"\n                                            id=\"pleft-id\"\n                                            autoComplete=\"none\"\n                                        />\n                                    </Grid>\n\n                                    <Grid item xs={12} md={6}>\n                                        <TextField\n                                            fullWidth\n                                            label=\"Prescription (RIGHT)\"\n                                            value={prescriptionRight}\n                                            onChange={prescriptionRightChanged}\n                                            name=\"pright\"\n                                            id=\"pright-id\"\n                                            autoComplete=\"none\"\n                                        />\n                                    </Grid>\n\n                                    <Grid item xs={12}>\n                                        <TextField\n                                            fullWidth\n                                            label=\"Notes\"\n                                            value={notes}\n                                            onChange={notesChanged}\n                                            name=\"notes\"\n                                            id=\"notes-id\"\n                                            autoComplete=\"none\"\n                                        />\n                                    </Grid>\n                                </Grid>\n\n                                <div\n                                    style={{\n                                        position: \"absolute\",\n                                        bottom: \"20px\",\n                                        right: \"20px\",\n                                    }}\n                                >\n                                </div>\n                            </div>\n\n                            <Backdrop className={classes.backdrop} open={saving}>\n                                <CircularProgress color=\"inherit\" />\n                            </Backdrop>\n                        </DialogContent>\n\n                        <DialogActions>\n                            <Grid\n                                container\n                                direction=\"row\"\n                                justify=\"flex-end\"\n                                alignItems=\"center\"\n                                spacing={1}\n                            >\n                                <Grid item>\n                                    <Button\n                                        onClick={handleClose}\n                                        style={{ width: \"100px\" }}\n                                        disabled={saving}\n                                    >\n                                        back\n                      </Button>\n                                </Grid>\n                                <Grid item>\n                                    <Button\n                                        onClick={saveClicked}\n                                        variant=\"contained\"\n                                        color=\"secondary\"\n                                        // style={{ width: \"100px\" }}\n                                        disabled={saving}\n                                    >\n                                        Book Appointment\n                      </Button>\n                                </Grid>\n                            </Grid>\n\n                        </DialogActions>\n\n\n                        <PatientDialog\n                            patient={null}\n                            open={patientDialogOpen}\n                            handleClose={handleClosePatientDialog}\n                            title={\"Add New Patient\"}\n                            saveButtonText={\"Save\"}\n                            name={newName}\n                            surname={newSurname}\n                        />\n\n\n                    </Dialog>\n                </React.Fragment>\n            )}\n        </React.Fragment>\n    );\n}\n","import React, { useEffect, useRef, useState } from \"react\";\nimport BookService from \"./services/BookService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {\n    Backdrop,\n    Button,\n    Checkbox,\n    CircularProgress,\n    DialogActions,\n    Divider,\n    FormControlLabel,\n    Grid,\n    InputAdornment,\n    InputLabel,\n    Link,\n    makeStyles,\n    MenuItem,\n    Select,\n    TextField,\n    Tooltip,\n} from \"@material-ui/core\";\nimport GlobalState from \"./../GlobalState\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport CreditCardIcon from \"@material-ui/icons/CreditCard\";\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\n\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Draggable from \"react-draggable\";\nimport Paper from \"@material-ui/core/Paper\";\n\nimport Alert from \"@material-ui/lab/Alert\";\n\nimport PropTypes from \"prop-types\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport Box from \"@material-ui/core/Box\";\n\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport { corporates } from \"./Corporates\";\nimport NumberFormat from \"react-number-format\";\n\nimport AccessAlarmsIcon from '@material-ui/icons/AccessAlarms';\nimport DateField from \"./DateField\";\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    title: {\n        marginTop: theme.spacing(0),\n        marginBottom: theme.spacing(1),\n    },\n\n    refreshButton: {\n        marginLeft: theme.spacing(2),\n    },\n\n    checkIcon: {\n        color: \"green\",\n    },\n\n    closeIcon: {\n        color: \"red\",\n    },\n\n    RefLink: {\n        cursor: \"pointer\",\n    },\n\n    BookedLabel: {\n        backgroundColor: \"#606060\",\n        color: \"#fff\",\n        paddingRight: \"10px\",\n        paddingLeft: \"10px\",\n    },\n\n    PatientAttendedLabel: {\n        backgroundColor: \"#0066aa\",\n        color: \"#fff\",\n        paddingRight: \"15px\",\n        paddingLeft: \"10px\",\n    },\n\n    SampleTakenLabel: {\n        backgroundColor: \"#0066cc\",\n        color: \"#fff\",\n        paddingRight: \"40px\",\n        paddingLeft: \"10px\",\n    },\n\n    ReportSentLabel: {\n        backgroundColor: \"#009900\",\n        color: \"#fff\",\n        paddingRight: \"90px\",\n        paddingLeft: \"10px\",\n    },\n\n    ReportCertSentLabel: {\n        backgroundColor: \"#009900\",\n        color: \"#fff\",\n        paddingRight: \"68px\",\n        paddingLeft: \"10px\",\n    },\n\n    archiveButton: {},\n\n    smartMatchButton: {\n        backgroundColor: \"#2f942e\",\n        \"&:hover\": {\n            background: \"green\",\n            color: \"#fff\",\n        },\n        textDecoration: \"none !important\",\n        marginRight: \"10px\",\n        // padding: \"10px\"\n    },\n\n    infoTitle: {\n        fontWeight: \"400\",\n    },\n\n    infoData: {\n        paddingLeft: \"10px\",\n        fontWeight: \"800\",\n    },\n\n    matchButton: {\n        marginTop: \"30px\",\n        marginBottom: \"20px\",\n        backgroundColor: \"#2f942e\",\n        \"&:hover\": {\n            background: \"green\",\n            color: \"#fff\",\n        },\n        textDecoration: \"none !important\",\n        padding: \"10px\",\n        paddingLeft: \"50px\",\n        paddingRight: \"50px\",\n    },\n\n    resendButton: {\n        marginTop: \"5px\",\n        marginBottom: \"5px\",\n        backgroundColor: \"#2f942e\",\n        \"&:hover\": {\n            background: \"green\",\n            color: \"#fff\",\n        },\n        textDecoration: \"none !important\",\n        padding: \"10px\",\n        paddingLeft: \"50px\",\n        paddingRight: \"50px\",\n    },\n\n    resendFilesButton: {\n        marginTop: \"5px\",\n        marginBottom: \"5px\",\n        backgroundColor: \"#3792ad\",\n        \"&:hover\": {\n            background: \"#2f798f\",\n            color: \"#fff\",\n        },\n        textDecoration: \"none !important\",\n        padding: \"10px\",\n        paddingLeft: \"50px\",\n        paddingRight: \"50px\",\n    },\n\n    cancelButton: {\n        marginBottom: \"10px\",\n        textDecoration: \"none !important\",\n        padding: \"10px\",\n        paddingLeft: \"90px\",\n        paddingRight: \"90px\",\n    },\n\n    backdrop: {\n        zIndex: theme.zIndex.drawer + 5,\n        color: \"#fff\",\n    },\n\n    timeControl: {\n        marginTop: \"20px\",\n    }\n}));\n\n\nfunction PaperComponent(props) {\n    return (\n        <Draggable\n            handle=\"#draggable-dialog-title\"\n            cancel={'[class*=\"MuiDialogContent-root\"]'}\n        >\n            <Paper {...props} />\n        </Draggable>\n    );\n}\n\nconst times = [\n    '08:00 AM',\n    '08:15 AM',\n    '08:30 AM', \n    '08:45 AM',\n    '09:00 AM',\n    '09:15 AM', \n    '09:30 AM',\n    '09:45 AM',\n    '10:00 AM',\n    '10:15 AM',\n    '10:30 AM',\n    '10:45 AM',\n    '11:00 AM',\n    '11:15 AM',\n    '11:30 AM',\n    '11:45 AM',\n    '12:00 PM',\n    '12:15 PM',\n    '12:30 PM',\n    '12:45 PM',\n    '01:00 PM',\n    '01:15 PM',\n    '01:30 PM',\n    '01:45 PM',\n    '02:00 PM',\n    '02:15 PM',\n    '02:30 PM',\n    '02:45 PM',\n    '03:00 PM',\n    '03:15 PM',\n    '03:30 PM',\n    '03:45 PM',\n    '04:00 PM',\n    '04:15 PM',\n    '04:30 PM',\n    '04:45 PM',\n    '05:00 PM',\n    '05:15 PM',\n    '05:30 PM',\n    '05:45 PM',\n    '06:00 PM',\n    '06:15 PM',\n    '06:30 PM',\n    '06:45 PM',\n    '07:00 PM',\n    '07:15 PM',\n    '07:30 PM',\n    '07:45 PM'\n];\n\nexport default function DateDialog(props) {\n    const classes = useStyles();\n\n    const [state, setState] = React.useContext(GlobalState);\n\n    const [date, setDate] = React.useState(\"\")\n    const [time, setTime] = React.useState(\"\")\n\n    const [dateError, setDateError] = React.useState(false)\n\n\n    const dateChanged = (value) => {\n        setDate(value)\n        setDateError(false)\n    }\n\n    const timeChanged = (event) => {\n        setTime(event.target.value)\n    }\n\n    useEffect(() => {\n        setDate(props.date)\n        setTime(props.time)\n\n    }, [props.date, props.time, props.open])\n\n\n\n    const handleClose = () => {\n\n        setDateError(false)\n        props.handleClose();\n    };\n\n    const okClicked = () => {\n        if (!date || date.length < 10) {\n            setDateError(true)\n            return\n        }\n\n        props.handleOK(date, time)\n    }\n\n\n    return (\n        <React.Fragment>\n            <React.Fragment>\n                <Dialog\n                    maxWidth=\"sm\"\n                    open={props.open}\n                    onClose={handleClose}\n                    PaperComponent={PaperComponent}\n                    aria-labelledby=\"form-dialog-title\"\n                >\n                    <DialogTitle id=\"draggable-dialog-title\">\n                        <Grid\n                            container\n                            spacing={2}\n                            direction=\"row\"\n                            justify=\"center\"\n                            alignItems=\"center\"\n                        >\n                            <Grid item>\n                                <AccessAlarmsIcon\n                                    style={{ color: \"#03b5f2\", fontSize: \"3rem\" }}\n                                />\n                            </Grid>\n\n                            <Grid item>\n                                <div\n                                    style={{\n                                        color: \"#03b5f2\",\n                                        paddingBottom: \"10px\",\n                                        fontWeight: \"800\",\n                                    }}\n                                >\n                                    {\" \"}\n                    Change Date and Time{\" \"}\n                                </div>\n                            </Grid>\n                        </Grid>\n\n                        <Divider />\n                    </DialogTitle>\n                    <DialogContent>\n                        <Grid container spacing={1}>\n\n                            <Grid item xs={8}>\n                                <DateField\n                                    error={dateError}\n                                    title=\"Appointment Date\"\n                                    value={date}\n                                    dateChanged={dateChanged}\n                                >\n\n                                </DateField>\n                            </Grid>\n\n                            <Grid item xs={4}>\n                                <div style={{ position: \"relative\", border: `1px solid ${'#ddd'}`, borderRadius: \"10px\", padding: \"20px\", paddingBottom: \"20px\", marginTop: \"20px\" }}>\n\n                                    <div style={{ position: \"absolute\", top: \"-15px\", left: \"15px\", backgroundColor: \"#fff\", color: `${'#555'}`, padding: \"5px\", paddingLeft: \"10px\", paddingRight: \"10px\" }}>\n                                        Appointment Time\n                                    </div>\n\n\n\n                                    <Grid\n                                        container\n                                        direction=\"row\"\n                                        justify=\"flex-start\"\n                                        alignItems=\"flex-start\"\n                                        spacing={2}\n                                    >\n\n\n                                        <Grid item xs={12}>\n                                            <FormControl fullWidth>\n                                                <InputLabel id=\"time-label\">Time</InputLabel>\n                                                <Select\n\n                                                    labelId=\"time-label\"\n                                                    id=\"time-select\"\n                                                    value={time}\n                                                    onChange={timeChanged}\n                                                >\n                                                    {times.map(item => (\n\n                                                        <MenuItem value={item}>{item}</MenuItem>\n\n                                                    ))}\n                                                </Select>\n                                            </FormControl>\n\n\n                                        </Grid>\n\n\n                                    </Grid>\n\n                                </div>\n\n\n                                {/* <FormControl className={classes.timeControl}>\n                                    <InputLabel id=\"demo-simple-select-label\"> Time</InputLabel>\n                                    <Select\n                                        labelId=\"demo-simple-select-label\"\n                                        id=\"demo-simple-select\"\n                                        value={time}\n                                        onChange={timeChanged}\n                                    >\n                                        {times.map(item => (\n\n                                            <MenuItem value={item}>{item}</MenuItem>\n\n                                        ))}\n                                    </Select>\n                                </FormControl> */}\n\n                            </Grid>\n\n\n                        </Grid>\n\n                    </DialogContent>\n\n                    <DialogActions>\n                        <Button onClick={handleClose}>\n                            cancel\n                    </Button>\n                        <Button color=\"primary\" onClick={okClicked} variant=\"contained\" style={{ width: \"100px\" }}>\n                            OK\n                    </Button>\n                    </DialogActions>\n                </Dialog>\n            </React.Fragment>\n        </React.Fragment>\n    );\n}\n","import React, { useEffect, useRef, useState } from \"react\";\nimport BookService from \"./services/BookService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {\n  Backdrop,\n  Button,\n  Checkbox,\n  CircularProgress,\n  Divider,\n  FormControlLabel,\n  Grid,\n  InputAdornment,\n  InputLabel,\n  Link,\n  makeStyles,\n  MenuItem,\n  Select,\n  Switch,\n  TextField,\n  Tooltip,\n} from \"@material-ui/core\";\nimport GlobalState from \"../GlobalState\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport CreditCardIcon from \"@material-ui/icons/CreditCard\";\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\n\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Draggable from \"react-draggable\";\nimport Paper from \"@material-ui/core/Paper\";\n\nimport Alert from \"@material-ui/lab/Alert\";\n\nimport PropTypes from \"prop-types\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport Box from \"@material-ui/core/Box\";\n\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport { corporates } from \"./Corporates\";\nimport NumberFormat from \"react-number-format\";\n\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { validate } from \"email-validator\";\nimport DateRangeIcon from \"@material-ui/icons/DateRange\";\nimport { CalendarColors } from \"./calendar-admin/colors\";\n\nvar interval;\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    marginTop: theme.spacing(0),\n    marginBottom: theme.spacing(1),\n  },\n\n  refreshButton: {\n    marginLeft: theme.spacing(2),\n  },\n\n  checkIcon: {\n    color: \"green\",\n  },\n\n  closeIcon: {\n    color: \"red\",\n  },\n\n  RefLink: {\n    cursor: \"pointer\",\n  },\n\n  BookedLabel: {\n    backgroundColor: \"#606060\",\n    color: \"#fff\",\n    paddingRight: \"10px\",\n    paddingLeft: \"10px\",\n  },\n\n  PatientAttendedLabel: {\n    backgroundColor: \"#0066aa\",\n    color: \"#fff\",\n    paddingRight: \"15px\",\n    paddingLeft: \"10px\",\n  },\n\n  SampleTakenLabel: {\n    backgroundColor: \"#0066cc\",\n    color: \"#fff\",\n    paddingRight: \"40px\",\n    paddingLeft: \"10px\",\n  },\n\n  ReportSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"90px\",\n    paddingLeft: \"10px\",\n  },\n\n  ReportCertSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"68px\",\n    paddingLeft: \"10px\",\n  },\n\n  archiveButton: {},\n\n  smartMatchButton: {\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    marginRight: \"10px\",\n    // padding: \"10px\"\n  },\n\n  infoTitle: {\n    fontWeight: \"400\",\n  },\n\n  infoData: {\n    paddingLeft: \"10px\",\n    fontWeight: \"800\",\n  },\n\n  matchButton: {\n    marginTop: \"30px\",\n    marginBottom: \"20px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  resendButton: {\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  resendFilesButton: {\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n    backgroundColor: \"#3792ad\",\n    \"&:hover\": {\n      background: \"#2f798f\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  cancelButton: {\n    marginBottom: \"10px\",\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"90px\",\n    paddingRight: \"90px\",\n  },\n\n  CalendarIcon: {\n    color: theme.palette.primary.main,\n  },\n\n  DateTimeLabel: {\n    fontWeight: \"600\",\n    fontSize: \"1.2rem\",\n    color: theme.palette.primary.main,\n  },\n\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 5,\n    color: \"#fff\",\n  },\n\n  PriceLabelPaid:{\n    color: theme.palette.primary.main,\n    fontWeight: \"600\"\n  },\n\n  PriceLabelNotPaid:{\n    color: theme.palette.secondary.main,\n    fontWeight: \"600\"\n  },\n\n  BoxDisabled: {\n    width : \"100%\",\n    padding: \"10px\",\n    borderRadius: \"8px\",\n    border: \"1px solid\",\n    fontSize: \"1.2rem\",\n    fontWeight: \"500\",\n    textAlign: \"center\",\n    borderColor: \"#ddd\",\n    cursor: \"not-allowed\",\n    color: \"#ddd\",\n    transition: \"all 0.2s ease\",\n  },\n\n  BoxVC: {\n    width : \"100%\",\n    padding: \"10px\",\n    borderRadius: \"8px\",\n    border: \"1px solid\",\n    fontSize: \"1.2rem\",\n    fontWeight: \"500\",\n    textAlign: \"center\",\n    cursor: \"pointer\",\n    borderColor: CalendarColors.VC_COLOR,\n    color: CalendarColors.VC_COLOR,\n    transition: \"all 0.2s ease\",\n    \"&:hover\": {\n      backgroundColor: CalendarColors.VC_COLOR,\n      color: \"#fff\"\n    }\n  \n  },\n\n  BoxF2F: {\n    width : \"100%\",\n    padding: \"10px\",\n    borderRadius: \"8px\",\n    border: \"1px solid\",\n    fontSize: \"1.2rem\",\n    fontWeight: \"500\",\n    textAlign: \"center\",\n    cursor: \"pointer\",\n    borderColor: CalendarColors.F2F_COLOR,\n    color: CalendarColors.F2F_COLOR,\n    transition: \"all 0.2s ease\",\n    \"&:hover\": {\n      backgroundColor: CalendarColors.F2F_COLOR,\n      color: \"#fff\"\n    }\n  \n  },\n\n  BoxLaser: {\n    width : \"100%\",\n    padding: \"10px\",\n    borderRadius: \"8px\",\n    border: \"1px solid\",\n    fontSize: \"1.2rem\",\n    fontWeight: \"500\",\n    textAlign: \"center\",\n    cursor: \"pointer\",\n    borderColor: CalendarColors.LASER_COLOR,\n    color: CalendarColors.LASER_COLOR,\n    transition: \"all 0.2s ease\",\n    \"&:hover\": {\n      backgroundColor: CalendarColors.LASER_COLOR,\n      color: \"#fff\"\n    }\n  \n  },\n\n  BoxCataract: {\n    width : \"100%\",\n    padding: \"10px\",\n    borderRadius: \"8px\",\n    border: \"1px solid\",\n    fontSize: \"1.2rem\",\n    fontWeight: \"500\",\n    textAlign: \"center\",\n    cursor: \"pointer\",\n    borderColor: CalendarColors.CATARACT_COLOR,\n    color: CalendarColors.CATARACT_COLOR,\n    transition: \"all 0.2s ease\",\n    \"&:hover\": {\n      backgroundColor: CalendarColors.CATARACT_COLOR,\n      color: \"#fff\"\n    }\n  \n  },\n\n  BoxPostOP: {\n    width : \"100%\",\n    padding: \"10px\",\n    borderRadius: \"8px\",\n    border: \"1px solid\",\n    fontSize: \"1.2rem\",\n    fontWeight: \"500\",\n    textAlign: \"center\",\n    cursor: \"pointer\",\n    borderColor: CalendarColors.POSTOP_COLOR,\n    color: CalendarColors.POSTOP_COLOR,\n    transition: \"all 0.2s ease\",\n    \"&:hover\": {\n      backgroundColor: CalendarColors.POSTOP_COLOR,\n      color: \"#fff\"\n    }\n  \n  },\n\n  BoxOptometry: {\n    width : \"100%\",\n    padding: \"10px\",\n    borderRadius: \"8px\",\n    border: \"1px solid\",\n    fontSize: \"1.2rem\",\n    fontWeight: \"500\",\n    textAlign: \"center\",\n    cursor: \"pointer\",\n    borderColor: CalendarColors.OPOTOMETRY_COLOR,\n    color: CalendarColors.OPOTOMETRY_COLOR,\n    transition: \"all 0.2s ease\",\n    \"&:hover\": {\n      backgroundColor: CalendarColors.OPOTOMETRY_COLOR,\n      color: \"#fff\"\n    }\n  \n  },\n\n\n\n\n\n\n\n\n\n\n  BoxGynae: {\n    width : \"100%\",\n    padding: \"10px\",\n    borderRadius: \"8px\",\n    border: \"1px solid\",\n    fontSize: \"1.2rem\",\n    fontWeight: \"500\",\n    textAlign: \"center\",\n    cursor: \"pointer\",\n    borderColor: CalendarColors.GYNAE_COLOR,\n    color: CalendarColors.GYNAE_COLOR,\n    transition: \"all 0.2s ease\",\n    \"&:hover\": {\n      backgroundColor: CalendarColors.GYNAE_COLOR,\n      color: \"#fff\"\n    }\n  \n  },\n\n  BoxGP: {\n    width : \"100%\",\n    padding: \"10px\",\n    borderRadius: \"8px\",\n    border: \"1px solid\",\n    fontSize: \"1.2rem\",\n    fontWeight: \"500\",\n    textAlign: \"center\",\n    cursor: \"pointer\",\n    borderColor: CalendarColors.GP_COLOR,\n    color: CalendarColors.GP_COLOR,\n    transition: \"all 0.2s ease\",\n    \"&:hover\": {\n      backgroundColor: CalendarColors.GP_COLOR,\n      color: \"#fff\"\n    }\n  },\n\n  BoxSTD: {\n    width : \"100%\",\n    padding: \"10px\",\n    borderRadius: \"8px\",\n    border: \"1px solid\",\n    fontSize: \"1.2rem\",\n    fontWeight: \"500\",\n    textAlign: \"center\",\n    cursor: \"pointer\",\n    borderColor: CalendarColors.STD_COLOR,\n    color: CalendarColors.STD_COLOR,\n    transition: \"all 0.2s ease\",\n    \"&:hover\": {\n      backgroundColor: CalendarColors.STD_COLOR,\n      color: \"#fff\"\n    }\n  },\n\n\n\n}));\n\nconst Packages = [\n  { packageName: \"Consultation with Consultant Gynaecologist\" },\n  { packageName: `Coil Fitting/Coil Removal` },\n  { packageName: `Well Woman Check` },\n  { packageName: `Sexual Health Screening` },\n  { packageName: `Pre-pregnancy/Fertility check` },\n  { packageName: `Gynaecological Ultrasound` },\n  { packageName: `HPV Vaccination` },\n  { packageName: `Cervical / Pap Smear` },\n  { packageName: `HPV Treatment / Wart Cryo-Therapy` },\n];\n\nfunction NumberFormatCustom(props) {\n  const { inputRef, onChange, ...other } = props;\n\n  return (\n    <NumberFormat\n      {...other}\n      getInputRef={inputRef}\n      onValueChange={(values) => {\n        onChange({\n          target: {\n            name: props.name,\n            value: values.value,\n          },\n        });\n      }}\n      thousandSeparator\n      isNumericString\n      prefix=\"\"\n    />\n  );\n}\n\nNumberFormatCustom.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nconst BorderLinearProgress = withStyles((theme) => ({\n  root: {\n    height: 10,\n    borderRadius: 5,\n  },\n  colorPrimary: {\n    backgroundColor: \"#cedbce\", //theme.palette.grey[theme.palette.type === 'light' ? 200 : 700],\n  },\n  bar: {\n    borderRadius: 5,\n    backgroundColor: \"#2f942e\",\n  },\n}))(LinearProgress);\nfunction LinearProgressWithLabel(props) {\n  return (\n    <Box display=\"flex\" alignItems=\"center\">\n      <Box width=\"100%\" mr={1}>\n        <BorderLinearProgress variant=\"determinate\" {...props} />\n      </Box>\n      <Box minWidth={35}>\n        <Typography\n          style={{ fontWeight: \"800\", color: \"#5e855e\" }}\n          variant=\"body2\"\n          color=\"textSecondary\"\n        >{`${Math.round(props.value)}%`}</Typography>\n      </Box>\n    </Box>\n  );\n}\n\nLinearProgressWithLabel.propTypes = {\n  /**\n   * The value of the progress indicator for the determinate and buffer variants.\n   * Value between 0 and 100.\n   */\n  value: PropTypes.number.isRequired,\n};\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable\n      handle=\"#draggable-dialog-title\"\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\n    >\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nexport default function ChooseBookingDialog(props) {\n  const classes = useStyles();\n\n  const [state, setState] = React.useContext(GlobalState);\n\n  const handleClose = () => {    \n    props.handleClose();\n  };\n\n\n  const timeDisabled = () =>\n  {\n    return props.time.indexOf(':15') > 0 || props.time.indexOf(':45') > 0 || props.time.indexOf('09') >= 0 \n  }\n\n  const clinicClicked = (clinic) =>\n  {\n    props.clinicClicked(clinic)\n  }\n\n  return (\n    <React.Fragment>\n        <React.Fragment>\n          <Dialog\n            maxWidth=\"xs\"\n            open={props.open}\n            onClose={handleClose}\n            PaperComponent={PaperComponent}\n            aria-labelledby=\"form-dialog-title\"\n          >\n            <DialogTitle id=\"draggable-dialog-title\">\n              <Grid\n                container\n                spacing={2}\n                direction=\"row\"\n                justify=\"center\"\n                alignItems=\"center\"\n              >\n                {/* <Grid item>\n                  <AddIcon style={{ color: \"#f50057\", fontSize: \"3rem\" }} />\n                </Grid> */}\n\n                <Grid item>\n                  <div\n                    style={{\n                      color: \"#f50057\",\n                      paddingBottom: \"10px\",\n                      fontWeight: \"800\",\n                    }}\n                  >\n                    {\" \"}\n                    Change Clinic{\" \"}\n                  </div>\n                </Grid>\n              </Grid>\n\n              <Divider />\n            </DialogTitle>\n            <DialogContent>\n              <div\n                style={{\n                  height: \"420px\",\n                }}\n              >\n                <Grid\n                  container\n                  direction=\"row\"\n                  justify=\"stretch\"\n                  spacing={2}\n                  alignItems=\"center\"\n                >\n\n\n                  <Grid item xs={12} style={{marginTop:\"0px\"}}>\n                    <div className={classes.BoxVC} onClick={() => clinicClicked(\"Virtual Consultation\")}>\n                      Virtual Consultation\n                    </div>\n                  </Grid>\n                  <Grid item xs={12}>\n                    <div className={classes.BoxF2F} onClick={() => clinicClicked(\"F2F Clinic\")}>\n                      F2F Clinic\n                    </div>\n                  </Grid>\n                  <Grid item xs={12}>\n                    <div className={classes.BoxLaser} onClick={() => clinicClicked(\"Laser Theatre\")}>\n                      Laser Theatre\n                    </div>\n                  </Grid>\n                  <Grid item xs={12}>\n                    <div className={classes.BoxCataract} onClick={() => clinicClicked(\"Lens Theatre\")}>\n                      Lens Theatre\n                    </div>\n                  </Grid>\n                  <Grid item xs={12}>\n                    <div className={classes.BoxPostOP} onClick={() => clinicClicked(\"Post OP\")}>\n                      Post OP\n                    </div>\n                  </Grid>\n                  <Grid item xs={12}>\n                    <div className={classes.BoxOptometry} onClick={() => clinicClicked(\"Optometry\")}>\n                      Optometry\n                    </div>\n                  </Grid>\n\n\n                </Grid>\n\n                <div\n                  style={{\n                    position: \"absolute\",\n                    bottom: \"0px\",\n                    right: \"5px\",\n                  }}\n                >\n                  <Grid\n                    container\n                    direction=\"row\"\n                    justify=\"flex-end\"\n                    alignItems=\"center\"\n                    spacing={1}\n                  >\n                    <Grid item>\n                      <Button\n                        onClick={handleClose}\n                        style={{ width: \"100px\" }}\n                      >\n                        close\n                      </Button>\n                    </Grid>\n                   \n                  </Grid>\n                </div>\n              </div>\n\n            </DialogContent>\n          </Dialog>\n        </React.Fragment>\n    </React.Fragment>\n  );\n}\n","import React, { useEffect, useRef, useState } from \"react\";\nimport BookService from \"./services/BookService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {\n    Backdrop,\n    Button,\n    Checkbox,\n    CircularProgress,\n    DialogActions,\n    DialogContentText,\n    Divider,\n    FormControlLabel,\n    Grid,\n    IconButton,\n    InputAdornment,\n    InputLabel,\n    Link,\n    makeStyles,\n    MenuItem,\n    Select,\n    Switch,\n    TextField,\n    Tooltip,\n} from \"@material-ui/core\";\nimport GlobalState from \"../GlobalState\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport CreditCardIcon from \"@material-ui/icons/CreditCard\";\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\n\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Draggable from \"react-draggable\";\nimport Paper from \"@material-ui/core/Paper\";\n\nimport Alert from \"@material-ui/lab/Alert\";\n\nimport PropTypes from \"prop-types\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport Box from \"@material-ui/core/Box\";\n\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport { corporates } from \"./Corporates\";\nimport NumberFormat from \"react-number-format\";\n\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { validate } from \"email-validator\";\nimport DateRangeIcon from \"@material-ui/icons/DateRange\";\nimport { CalendarColors } from \"./calendar-admin/colors\";\nimport DateField from \"./DateField\";\n\nimport EditIcon from '@material-ui/icons/Edit';\nimport DateDialog from \"./DateDialog\";\nimport ChooseClinicDialog from \"./ChooseClinicDialog\"\nimport PatientDialog from \"./PatientDialog\";\nimport PatientService from \"./services/PatientService\";\nimport SearchIcon from '@material-ui/icons/Search';\n\n\nvar interval;\n\nconst useStyles = makeStyles((theme) => ({\n    title: {\n        marginTop: theme.spacing(0),\n        marginBottom: theme.spacing(1),\n    },\n\n    refreshButton: {\n        marginLeft: theme.spacing(2),\n    },\n\n    checkIcon: {\n        color: \"green\",\n    },\n\n    closeIcon: {\n        color: \"red\",\n    },\n\n    RefLink: {\n        cursor: \"pointer\",\n    },\n\n    BookedLabel: {\n        backgroundColor: \"#606060\",\n        color: \"#fff\",\n        paddingRight: \"10px\",\n        paddingLeft: \"10px\",\n    },\n\n    PatientAttendedLabel: {\n        backgroundColor: \"#0066aa\",\n        color: \"#fff\",\n        paddingRight: \"15px\",\n        paddingLeft: \"10px\",\n    },\n\n    SampleTakenLabel: {\n        backgroundColor: \"#0066cc\",\n        color: \"#fff\",\n        paddingRight: \"40px\",\n        paddingLeft: \"10px\",\n    },\n\n    ReportSentLabel: {\n        backgroundColor: \"#009900\",\n        color: \"#fff\",\n        paddingRight: \"90px\",\n        paddingLeft: \"10px\",\n    },\n\n    ReportCertSentLabel: {\n        backgroundColor: \"#009900\",\n        color: \"#fff\",\n        paddingRight: \"68px\",\n        paddingLeft: \"10px\",\n    },\n\n    archiveButton: {},\n\n    smartMatchButton: {\n        backgroundColor: \"#2f942e\",\n        \"&:hover\": {\n            background: \"green\",\n            color: \"#fff\",\n        },\n        textDecoration: \"none !important\",\n        marginRight: \"10px\",\n        // padding: \"10px\"\n    },\n\n    infoTitle: {\n        fontWeight: \"400\",\n    },\n\n    infoData: {\n        paddingLeft: \"10px\",\n        fontWeight: \"800\",\n    },\n\n    matchButton: {\n        marginTop: \"30px\",\n        marginBottom: \"20px\",\n        backgroundColor: \"#2f942e\",\n        \"&:hover\": {\n            background: \"green\",\n            color: \"#fff\",\n        },\n        textDecoration: \"none !important\",\n        padding: \"10px\",\n        paddingLeft: \"50px\",\n        paddingRight: \"50px\",\n    },\n\n    resendButton: {\n        marginTop: \"5px\",\n        marginBottom: \"5px\",\n        backgroundColor: \"#2f942e\",\n        \"&:hover\": {\n            background: \"green\",\n            color: \"#fff\",\n        },\n        textDecoration: \"none !important\",\n        padding: \"10px\",\n        paddingLeft: \"50px\",\n        paddingRight: \"50px\",\n    },\n\n    resendFilesButton: {\n        marginTop: \"5px\",\n        marginBottom: \"5px\",\n        backgroundColor: \"#3792ad\",\n        \"&:hover\": {\n            background: \"#2f798f\",\n            color: \"#fff\",\n        },\n        textDecoration: \"none !important\",\n        padding: \"10px\",\n        paddingLeft: \"50px\",\n        paddingRight: \"50px\",\n    },\n\n    cancelButton: {\n        marginBottom: \"10px\",\n        textDecoration: \"none !important\",\n        padding: \"10px\",\n        paddingLeft: \"90px\",\n        paddingRight: \"90px\",\n    },\n\n    CalendarIcon: {\n        color: theme.palette.primary.main,\n    },\n\n    DateTimeLabel: {\n        fontWeight: \"600\",\n        fontSize: \"1.2rem\",\n        color: theme.palette.primary.main,\n    },\n\n    backdrop: {\n        zIndex: theme.zIndex.drawer + 5,\n        color: \"#fff\",\n    },\n\n    PriceLabelPaid: {\n        color: theme.palette.primary.main,\n        fontWeight: \"600\"\n    },\n\n    PriceLabelNotPaid: {\n        color: theme.palette.secondary.main,\n        fontWeight: \"600\"\n    },\n\n    SearchIcon:{\n        fontSize: \"2rem\",\n        color: theme.palette.primary.main,\n    }\n\n\n}));\n\nconst Packages = [\n    { packageName: \"Consultation with Consultant Gynaecologist\" },\n    { packageName: `Coil Fitting/Coil Removal` },\n    { packageName: `Well Woman Check` },\n    { packageName: `Sexual Health Screening` },\n    { packageName: `Pre-pregnancy/Fertility check` },\n    { packageName: `Gynaecological Ultrasound` },\n    { packageName: `HPV Vaccination` },\n    { packageName: `Cervical / Pap Smear` },\n    { packageName: `HPV Treatment / Wart Cryo-Therapy` },\n];\n\nfunction NumberFormatCustom(props) {\n    const { inputRef, onChange, ...other } = props;\n\n    return (\n        <NumberFormat\n            {...other}\n            getInputRef={inputRef}\n            onValueChange={(values) => {\n                onChange({\n                    target: {\n                        name: props.name,\n                        value: values.value,\n                    },\n                });\n            }}\n            thousandSeparator\n            isNumericString\n            prefix=\"\"\n        />\n    );\n}\n\nNumberFormatCustom.propTypes = {\n    inputRef: PropTypes.func.isRequired,\n    name: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired,\n};\n\nconst BorderLinearProgress = withStyles((theme) => ({\n    root: {\n        height: 10,\n        borderRadius: 5,\n    },\n    colorPrimary: {\n        backgroundColor: \"#cedbce\", //theme.palette.grey[theme.palette.type === 'light' ? 200 : 700],\n    },\n    bar: {\n        borderRadius: 5,\n        backgroundColor: \"#2f942e\",\n    },\n}))(LinearProgress);\nfunction LinearProgressWithLabel(props) {\n    return (\n        <Box display=\"flex\" alignItems=\"center\">\n            <Box width=\"100%\" mr={1}>\n                <BorderLinearProgress variant=\"determinate\" {...props} />\n            </Box>\n            <Box minWidth={35}>\n                <Typography\n                    style={{ fontWeight: \"800\", color: \"#5e855e\" }}\n                    variant=\"body2\"\n                    color=\"textSecondary\"\n                >{`${Math.round(props.value)}%`}</Typography>\n            </Box>\n        </Box>\n    );\n}\n\nLinearProgressWithLabel.propTypes = {\n    /**\n     * The value of the progress indicator for the determinate and buffer variants.\n     * Value between 0 and 100.\n     */\n    value: PropTypes.number.isRequired,\n};\n\nfunction PaperComponent(props) {\n    return (\n        <Draggable\n            handle=\"#draggable-dialog-title\"\n            cancel={'[class*=\"MuiDialogContent-root\"]'}\n        >\n            <Paper {...props} />\n        </Draggable>\n    );\n}\n\nexport default function EditOVBookingDialog(props) {\n    const classes = useStyles();\n\n    const [state, setState] = React.useContext(GlobalState);\n    const [saving, setSaving] = useState(false);\n\n    const [openClinicDialog, setOpenClinicDialog] = React.useState(false)\n\n    const [clinic, setClinic] = React.useState(\"\")\n\n    const [fullname, setFullname] = React.useState(\"\");\n    const [fullnameError, setFullnameError] = React.useState(false);\n\n    const [phone, setPhone] = React.useState(\"\");\n    const [email, setEmail] = React.useState(\"\");\n    const [notes, setNotes] = React.useState(\"\");\n\n    const [patientID, setPatientID] = React.useState(\"\");\n    const [prescriptionLeft, setPrescriptionLeft] = React.useState(\"\");\n    const [prescriptionRight, setPrescriptionRight] = React.useState(\"\");\n\n\n    const [birthDate, setBirthDate] = React.useState(\"\");\n    const [birthDateError, setBirthDateError] = React.useState(false);\n\n    const [openDeleteDialog, setOpenDeleteDialog] = React.useState(false)\n\n    const [openDateDialog, setOpenDateDialog] = React.useState(false)\n\n    const [date, setDate] = React.useState(\"\")\n    const [time, setTime] = React.useState(\"\")\n\n    const [selectedPatient, setSelectedPatient] = React.useState(null)\n    const [patientDialogOpen, setPatientDialogOpen] = React.useState(false)\n\n    const handleClosePatientDialog = () => {\n      setPatientDialogOpen(false)\n    }\n  \n\n    const patientIDChanged = (event) => {\n        setPatientID(event.target.value);\n    };\n\n    const prescriptionLeftChanged = (event) => {\n        setPrescriptionLeft(event.target.value);\n    };\n\n    const prescriptionRightChanged = (event) => {\n        setPrescriptionRight(event.target.value);\n    };\n\n\n    const handleCloseDeleteDialog = () => {\n        setOpenDeleteDialog(false)\n    }\n\n    const handleSaveDateDialog = (date, time) => {\n        setDate(date)\n        setTime(time)\n        setOpenDateDialog(false)\n    }\n\n    const handleCloseDateDialog = () => {\n        setOpenDateDialog(false)\n    }\n\n\n    React.useEffect(() => {\n        if (props.booking && props.open) {\n            setFullname(props.booking.fullname)\n            setPhone(props.booking.phone)\n            setEmail(props.booking.email)\n            setBirthDate(props.booking.birthDate)\n            setNotes(props.booking.notes)\n            setDate(props.date)\n            setTime(props.time)\n            setPatientID(props.booking.patientID)\n            setPrescriptionLeft(props.booking.prescriptionLeft)\n            setPrescriptionRight(props.booking.prescriptionRight)\n\n            setClinic(props.clinic)\n\n            loadPatient()\n\n        }\n\n    }, [props.open, props.booking])\n\n    const loadPatient = async () =>\n    {\n        try{\n            setSelectedPatient(null)\n            if (props.booking.patientID && props.booking.patientID.length > 0)\n            {\n                const res = await PatientService.getPatientByPatientId(props.booking.patientID)\n                if (res && res.data)\n                {\n                    const patiant = res.data\n                    setSelectedPatient(patiant)\n                }\n            }\n        }\n        catch(err)\n        {\n            console.error(err)\n        }\n    }\n\n\n    const birthDateChanged = (dateStr) => {\n        setBirthDate(dateStr);\n    }\n\n\n\n\n    const fullnameChanged = (event) => {\n        setFullname(event.target.value);\n        setFullnameError(false);\n    };\n\n    const phoneChanged = (event) => {\n        setPhone(event.target.value);\n    };\n\n    const emailChanged = (event) => {\n        setEmail(event.target.value);\n    };\n\n\n    const notesChanged = (event) => {\n        setNotes(event.target.value);\n    };\n\n    const handleClose = () => {\n        if (saving) return;\n\n        setFullname(\"\");\n        setFullnameError(false);\n        setBirthDateError(false)\n        setPhone(\"\");\n        setEmail(\"\");\n        setNotes(\"\");\n        setBirthDate(\"\")\n        setPatientID(\"\")\n        setPrescriptionLeft(\"\")\n        setPrescriptionRight(\"\")\n        setClinic(\"\")\n        setSelectedPatient(null)\n\n\n        props.handleClose();\n        setSaving(false);\n    };\n\n    const validateBooking = () => {\n        let error = false;\n        if (!fullname || fullname.trim().length < 1) {\n            setFullnameError(true);\n            error = true;\n        }\n\n        if (birthDate && birthDate.length >= 1 && birthDate.length < 10) {\n            setBirthDateError(true);\n            error = true;\n        }\n\n        return !error;\n    };\n\n    const deleteClicked = async () => {\n\n        setOpenDeleteDialog(false)\n\n        setSaving(true)\n        try {\n            await BookService.deleteBooking(props.booking._id)\n            setSaving(false)\n            setState((state) => ({\n                ...state,\n                bookingDialogDataChanged: !state.bookingDialogDataChanged\n                    ? true\n                    : false,\n            }));\n            handleClose();\n        }\n        catch (err) {\n            console.error(err)\n            setSaving(false)\n        }\n    }\n\n    const saveClicked = async () => {\n        if (!validateBooking()) {\n            return;\n        }\n\n        setSaving(true);\n\n        try {\n            await BookService.updateBooking({\n                bookingId: props.booking._id,\n                bookingDate: date,\n                bookingTime: time,\n                fullname: fullname,\n                phone: phone,\n                email: email,\n                birthDate: birthDate,\n                notes: notes,\n                clinic: clinic,\n                patientID: patientID,\n                prescriptionLeft: prescriptionLeft,\n                prescriptionRight: prescriptionRight,\n            });\n            setSaving(false);\n            setState((state) => ({\n                ...state,\n                bookingDialogDataChanged: !state.bookingDialogDataChanged\n                    ? true\n                    : false,\n            }));\n            handleClose();\n        } catch (err) {\n            console.error(err);\n            setSaving(false);\n        }\n    };\n\n    const saveAsClicked = async () => {\n        if (!validateBooking()) {\n            return;\n        }\n\n        setSaving(true);\n\n        try {\n            await BookService.addNewBooking({\n                bookingDate: date,\n                bookingTime: time,\n                fullname: fullname,\n                phone: phone,\n                email: email,\n                birthDate: birthDate,\n                notes: notes,\n                clinic: clinic,\n                patientID: patientID,\n                prescriptionLeft: prescriptionLeft,\n                prescriptionRight: prescriptionRight,\n            });\n            setSaving(false);\n            setState((state) => ({\n                ...state,\n                bookingDialogDataChanged: !state.bookingDialogDataChanged\n                    ? true\n                    : false,\n            }));\n            handleClose();\n        } catch (err) {\n            console.error(err);\n            setSaving(false);\n        }\n    };\n\n\n    const getColorFromClinic = (clinic) => {\n        switch (clinic) {\n            case \"Virtual Consultation\":\n                return CalendarColors.VC_COLOR\n            case \"F2F Clinic\":\n                return CalendarColors.F2F_COLOR\n            case \"Laser Theatre\":\n                return CalendarColors.LASER_COLOR\n            case \"Lens Theatre\":\n                return CalendarColors.CATARACT_COLOR\n            case \"Post OP\":\n                return CalendarColors.POSTOP_COLOR\n            case \"Optometry\":\n                return CalendarColors.OPOTOMETRY_COLOR\n    \n    \n            default:\n                return \"#777\"\n\n        }\n    }\n\n    const handleClinicClicked = (_clinic) =>\n    {\n        setClinic(_clinic)\n        setOpenClinicDialog(false)\n    }\n\n    const handleCloseClinicDialog = () =>\n    {\n        setOpenClinicDialog(false)\n    }\n    \n    const editClinicClicked = () =>\n    {\n        setOpenClinicDialog(true)\n    }\n\n    \n\n\n    return (\n        <React.Fragment>\n            {props.date && props.time && (\n                <React.Fragment>\n                    <Dialog\n                        maxWidth=\"md\"\n                        open={props.open}\n                        onClose={handleClose}\n                        PaperComponent={PaperComponent}\n                        aria-labelledby=\"form-dialog-title\"\n                    >\n                        <DialogTitle id=\"draggable-dialog-title\">\n\n                            <div style={{ position: \"absolute\", left: \"0px\", top: \"0px\", width: \"100%\", backgroundColor: getColorFromClinic(clinic), color: \"#fff\", padding: \"15px 5px\", textAlign: \"center\", fontSize: \"1.5rem\" }}>\n                                <Grid container direction=\"row\"\n                                    justify=\"center\"\n                                    alignItems=\"center\"\n                                    spacing={1}\n                                >\n                                    <Grid item>\n                                        <Tooltip title=\"Change Clinic\">\n                                            <EditIcon style={{ fontSize: \"2rem\", cursor:\"pointer\" }} onClick={editClinicClicked} />\n                                        </Tooltip>\n                                    </Grid>\n                                    <Grid item style={{ marginTop: \"-10px\" }}>\n                                        {clinic}\n                                    </Grid>\n                                </Grid>\n                            </div>\n\n\n                        </DialogTitle>\n                        <DialogContent>\n                            <div\n                                style={{\n                                    paddingTop: \"50px\",\n                                    paddingBottom: \"20px\"\n                                }}\n                            >\n                                <Grid\n                                    container\n                                    direction=\"row\"\n                                    justify=\"stretch\"\n                                    spacing={2}\n                                    alignItems=\"center\"\n                                >\n                                    <Grid item xs={12} style={{ marginTop: \"10px\" }}>\n                                        <Grid\n                                            container\n                                            direction=\"row\"\n                                            justify=\"center\"\n                                            alignItems=\"center\"\n                                            spacing={1}\n                                            style={{ cursor: \"pointer\" }} onClick={() => setOpenDateDialog(true)}\n                                        >\n                                            <Grid item>\n                                                <DateRangeIcon className={classes.CalendarIcon} />\n                                            </Grid>\n                                            <Grid item>\n                                                <span className={classes.DateTimeLabel}>\n                                                    {date} , {time}\n                                                </span>\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n\n                                    <Grid item xs={12} md={6}>\n                                        <TextField\n                                            fullWidth\n                                            autoFocus\n                                            error={fullnameError}\n                                            label=\"Full Name\"\n                                            value={fullname}\n                                            required\n                                            onChange={fullnameChanged}\n                                            name=\"fullname\"\n                                            id=\"fullname-id\"\n                                            autoComplete=\"none\"\n                                        />\n                                    </Grid>\n\n                                    <Grid item xs={12} md={6}>\n                                        <Grid container alignItems=\"center\">\n                                            <Grid item xs={10}>\n                                                <TextField\n                                                    fullWidth\n                                                    label=\"Patient ID\"\n                                                    value={patientID}\n                                                    onChange={patientIDChanged}\n                                                    name=\"patientid\"\n                                                    id=\"patientid-id\"\n                                                    autoComplete=\"none\"\n                                                />\n                                            </Grid>\n                                            <Grid item xs={2}>\n                                                {selectedPatient && (\n                                                    <Tooltip title=\"Show Patient Detail\">\n                                                        <IconButton onClick={() => { setPatientDialogOpen(true) }}>\n                                                            <SearchIcon className={classes.SearchIcon} />\n                                                        </IconButton>\n                                                    </Tooltip>\n                                                )}\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n\n\n                                    <Grid item xs={12} md={6}>\n                                        <TextField\n                                            fullWidth\n                                            label=\"Telephone\"\n                                            value={phone}\n                                            onChange={phoneChanged}\n                                            name=\"phone\"\n                                            id=\"phone-id\"\n                                            autoComplete=\"none\"\n                                        />\n                                    </Grid>\n\n                                    <Grid item xs={12} md={6}>\n                                        <TextField\n                                            fullWidth\n                                            label=\"Email\"\n                                            value={email}\n                                            onChange={emailChanged}\n                                            name=\"email\"\n                                            id=\"email-id\"\n                                            autoComplete=\"none\"\n                                        />\n                                    </Grid>\n\n                                    <Grid item xs={12}>\n                                        <DateField\n                                            error={birthDateError}\n                                            title=\"Date of Birth\"\n                                            value={birthDate}\n                                            dateChanged={birthDateChanged}\n                                        >\n\n                                        </DateField>\n                                    </Grid>\n\n                                    <Grid item xs={12} md={6}>\n                                        <TextField\n                                            fullWidth\n                                            label=\"Prescription (LEFT)\"\n                                            value={prescriptionLeft}\n                                            onChange={prescriptionLeftChanged}\n                                            name=\"pleft\"\n                                            id=\"pleft-id\"\n                                            autoComplete=\"none\"\n                                        />\n                                    </Grid>\n\n                                    <Grid item xs={12} md={6}>\n                                        <TextField\n                                            fullWidth\n                                            label=\"Prescription (RIGHT)\"\n                                            value={prescriptionRight}\n                                            onChange={prescriptionRightChanged}\n                                            name=\"pright\"\n                                            id=\"pright-id\"\n                                            autoComplete=\"none\"\n                                        />\n                                    </Grid>\n\n                                    <Grid item xs={12}>\n                                        <TextField\n                                            fullWidth\n                                            label=\"Notes\"\n                                            value={notes}\n                                            onChange={notesChanged}\n                                            name=\"notes\"\n                                            id=\"notes-id\"\n                                            autoComplete=\"none\"\n                                        />\n                                    </Grid>\n\n                                    <Grid item xs={12} style={{marginTop:\"20px\"}}>\n                                    <Button\n                                        onClick={() => setOpenDeleteDialog(true)}\n                                        variant=\"contained\"\n                                        fullWidth\n                                        color=\"primary\"\n                                        // style={{ width: \"100px\" }}\n                                        style={{ backgroundColor: \"#c70000\", color: \"#fff\" }}\n                                        disabled={saving}\n                                    >\n                                        Delete Appointment\n                                      </Button>\n                                </Grid>\n\n\n                                </Grid>\n\n                                <div\n                                    style={{\n                                        position: \"absolute\",\n                                        bottom: \"20px\",\n                                        right: \"20px\",\n                                    }}\n                                >\n                                </div>\n                            </div>\n\n                            <Backdrop className={classes.backdrop} open={saving}>\n                                <CircularProgress color=\"inherit\" />\n                            </Backdrop>\n                        </DialogContent>\n\n                        <DialogActions>\n                            <Grid\n                                container\n                                direction=\"row\"\n                                justify=\"flex-end\"\n                                alignItems=\"center\"\n                                spacing={2}\n                            >\n\n                                <Grid item>\n                                    <Button\n                                        onClick={handleClose}\n                                        style={{ width: \"100px\" }}\n                                        disabled={saving}\n                                    >\n                                        back\n                                     </Button>\n                                </Grid>\n                                <Grid item>\n                                    <Button\n                                        onClick={saveClicked}\n                                        variant=\"contained\"\n                                        color=\"primary\"\n                                        // style={{ width: \"100px\" }}\n                                        style={{ backgroundColor: \"#ff7200\", color: \"#fff\" }}\n                                        disabled={saving}\n                                    >\n                                        Save Changes\n                                      </Button>\n                                </Grid>\n\n                                <Grid item xs={12}>\n                                    <div style={{width:\"100%\", display:\"flex\", justifyContent:\"center\"}}>\n                                    <Button\n                                        onClick={saveAsClicked}\n                                        variant=\"contained\"\n                                        color=\"secondary\"\n                                        style={{ width: \"400px\" }}\n                                        // style={{ backgroundColor: \"#ff7200\", color: \"#fff\" }}\n                                        disabled={saving}\n                                    >\n                                        Save As a new booking\n                                      </Button>\n\n                                    </div>\n                                </Grid>\n\n\n                                {/* <div style={{position:\"absolute\", left:\"10px\", bottom:\"5px\"}}> */}\n                                {/* </div> */}\n\n\n                            </Grid>\n\n                        </DialogActions>\n\n                        <Dialog\n                            open={openDeleteDialog}\n                            onClose={handleCloseDeleteDialog}\n                            aria-labelledby=\"alert-dialog-title\"\n                            aria-describedby=\"alert-dialog-description\"\n                        >\n                            <DialogTitle style={{ color: \"#d10202\", fontWeight: \"600\" }} id=\"alert-dialog-title\">\n                                {\"Delete Appointment\"}\n                            </DialogTitle>\n                            <DialogContent>\n                                <DialogContentText\n                                    style={{ color: \"#000\", fontWeight: \"500\" }}\n                                    id=\"alert-dialog-description\"\n                                >\n                                    Are you sure you want to delete this appointment?\n                            </DialogContentText>\n                            </DialogContent>\n                            <DialogActions>\n                                <Button onClick={handleCloseDeleteDialog} color=\"default\">\n                                    Back\n                                 </Button>\n                                <Button onClick={deleteClicked} variant=\"contained\" style={{ backgroundColor: \"#d10202\", color: \"#fff\" }}>\n                                    Yes, Delete this appointment\n                                 </Button>\n                            </DialogActions>\n                        </Dialog>\n\n                    </Dialog>\n\n                    <DateDialog\n                        open={openDateDialog}\n                        handleClose={handleCloseDateDialog}\n                        handleOK={handleSaveDateDialog}\n                        date={date}\n                        time={time}>\n\n                    </DateDialog>\n\n                </React.Fragment>\n            )}\n\n            <ChooseClinicDialog\n                    open={openClinicDialog}\n                    handleClose={handleCloseClinicDialog}\n                    clinicClicked={handleClinicClicked}\n            />\n\n            {selectedPatient && (\n                <PatientDialog\n                    patient={selectedPatient}\n                    open={patientDialogOpen}\n                    handleClose={handleClosePatientDialog}\n                    title={`${selectedPatient.name?.toUpperCase()} ${selectedPatient.surname?.toUpperCase()}`}\n                    saveButtonText={\"Save Changes\"}\n                />\n            )}\n\n            \n            \n        </React.Fragment>\n    );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport PropTypes from \"prop-types\";\nimport dateformat from \"dateformat\";\nimport BookService from \"../services/BookService\";\n\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport GlobalState from \"../../GlobalState\";\nimport BookingDialog from \"../BookingDialog\";\nimport NewBookingDialog from \"../NewBookingDialog\";\nimport { CalendarColors } from \"./colors\";\nimport clsx from \"clsx\";\n\nimport NewOVDialog from \"../NewOVBookingDialog\";\nimport EditOVBookingDialog from \"../EditOVBookingDialog\";\n\nconst useStyles = makeStyles((theme) => ({\n  Container: {\n    width: \"100%\",\n    height: \"50px\",\n    position: \"relative\",\n    backgroundColor: \"#fff\",\n    display: \"flex\",\n    alignItems: \"flex-start\",\n    justifyItems: \"flex-start\",\n    paddingLeft: \"10px\",\n  },\n\n  ContainerPast: {\n    width: \"100%\",\n    paddingTop: \"50px\",\n    position: \"relative\",\n    backgroundColor: \"#fafafa\",\n  },\n\n  DayLabel: {\n    position: \"absolute\",\n    top: \"5px\",\n    right: \"5px\",\n    color: \"#555\",\n    fontSize: \"1rem\",\n  },\n\n  DayLabelDisabled: {\n    position: \"absolute\",\n    top: \"5px\",\n    right: \"5px\",\n    color: \"#ddd\",\n    fontSize: \"1rem\",\n  },\n\n  LoadingProgress: {\n    position: \"absolute\",\n    top: \"10%\",\n    left: \"40%\",\n  },\n\n  BookingCountGauge: {\n    position: \"absolute\",\n    bottom: \"5%\",\n    left: \"8%\",\n    width: \"85%\",\n    height: \"8%\",\n  },\n\n  bookingBox: {\n    display: \"flex\",\n    marginRight: \"10px\",\n    marginTop: \"5px\",\n    padding: \"7px\",\n    maxWidth: \"150px\",\n    overflowX: \"hidden\",\n    // border: \"1px solid #eee\",\n    fontSize: \"12px\",\n    fontWeight: \"500\",\n    cursor: \"pointer\",\n    backgroundColor: \"#ebedf7\",\n    color: \"#3f51b5\",\n    boxShadow: \"2px 4px #fafafa\",\n\n    \"&:hover\": {\n      background: \"#3f51b5\",\n      color: \"#ebedf7\",\n    },\n  },\n\n  bookingBoxNew: {\n    display: \"flex\",\n    marginRight: \"10px\",\n    marginTop: \"5px\",\n    padding: \"6px 10px\",\n    maxWidth: \"150px\",\n    overflowX: \"hidden\",\n    border: \"1px solid #ddd\",\n    color: \"#ccc\",\n    fontSize: \"12px\",\n    fontWeight: \"500\",\n    cursor: \"pointer\",\n    backgroundColor: \"#fff\",\n\n    boxShadow: \"2px 4px #fafafa\",\n    transition: \"all 0.5s ease\",\n    borderRadius: \"4px\",\n\n    \"&:hover\": {\n      background: \"#fff\",\n      color: theme.palette.secondary.main,\n      borderColor: theme.palette.secondary.main,\n    },\n  },\n\n  bookingBoxVC: {\n    display: \"flex\",\n    marginRight: \"10px\",\n    marginTop: \"5px\",\n    padding: \"7px\",\n    maxWidth: \"200px\",\n    overflowX: \"hidden\",\n    fontSize: \"12px\",\n    fontWeight: \"500\",\n    cursor: \"pointer\",\n    backgroundColor: CalendarColors.VC_COLOR,\n    color: \"#eee\",\n    boxShadow: \"2px 4px #fafafa\",\n\n    \"&:hover\": {\n      // background: \"#0059b3\",\n      color: \"#fafafa\",\n    },\n  },\n  bookingBoxF2F: {\n    display: \"flex\",\n    marginRight: \"10px\",\n    marginTop: \"5px\",\n    padding: \"7px\",\n    maxWidth: \"200px\",\n    overflowX: \"hidden\",\n    fontSize: \"12px\",\n    fontWeight: \"500\",\n    cursor: \"pointer\",\n    backgroundColor: CalendarColors.F2F_COLOR,\n    color: \"#eee\",\n    boxShadow: \"2px 4px #fafafa\",\n\n    \"&:hover\": {\n      // background: \"#0059b3\",\n      color: \"#fafafa\",\n    },\n  },\n  bookingBoxLaser: {\n    display: \"flex\",\n    marginRight: \"10px\",\n    marginTop: \"5px\",\n    padding: \"7px\",\n    maxWidth: \"200px\",\n    overflowX: \"hidden\",\n    fontSize: \"12px\",\n    fontWeight: \"500\",\n    cursor: \"pointer\",\n    backgroundColor: CalendarColors.LASER_COLOR,\n    color: \"#eee\",\n    boxShadow: \"2px 4px #fafafa\",\n\n    \"&:hover\": {\n      // background: \"#0059b3\",\n      color: \"#fafafa\",\n    },\n  },\n\n  bookingBoxCataract: {\n    display: \"flex\",\n    marginRight: \"10px\",\n    marginTop: \"5px\",\n    padding: \"7px\",\n    maxWidth: \"200px\",\n    overflowX: \"hidden\",\n    fontSize: \"12px\",\n    fontWeight: \"500\",\n    cursor: \"pointer\",\n    backgroundColor: CalendarColors.CATARACT_COLOR,\n    color: \"#eee\",\n    boxShadow: \"2px 4px #fafafa\",\n\n    \"&:hover\": {\n      // background: \"#0059b3\",\n      color: \"#fafafa\",\n    },\n  },\n\n  bookingBoxPostOP: {\n    display: \"flex\",\n    marginRight: \"10px\",\n    marginTop: \"5px\",\n    padding: \"7px\",\n    maxWidth: \"200px\",\n    overflowX: \"hidden\",\n    fontSize: \"12px\",\n    fontWeight: \"500\",\n    cursor: \"pointer\",\n    backgroundColor: CalendarColors.POSTOP_COLOR,\n    color: \"#eee\",\n    boxShadow: \"2px 4px #fafafa\",\n\n    \"&:hover\": {\n      // background: \"#0059b3\",\n      color: \"#fafafa\",\n    },\n  },\n\n  bookingBoxOptometry: {\n    display: \"flex\",\n    marginRight: \"10px\",\n    marginTop: \"5px\",\n    padding: \"7px\",\n    maxWidth: \"200px\",\n    overflowX: \"hidden\",\n    fontSize: \"12px\",\n    fontWeight: \"500\",\n    cursor: \"pointer\",\n    backgroundColor: CalendarColors.OPOTOMETRY_COLOR,\n    color: \"#eee\",\n    boxShadow: \"2px 4px #fafafa\",\n\n    \"&:hover\": {\n      // background: \"#0059b3\",\n      color: \"#fafafa\",\n    },\n  },\n\n\n\n  bookingBoxHidden: {\n    display: \"none\",\n    marginRight: \"10px\",\n    marginTop: \"5px\",\n    padding: \"7px\",\n    maxWidth: \"150px\",\n    overflowX: \"hidden\",\n    fontSize: \"12px\",\n    fontWeight: \"500\",\n    cursor: \"pointer\",\n    backgroundColor: \"#fff\",\n    color: \"#fff\",\n    boxShadow: \"2px 4px #fafafa\",\n\n    \"&:hover\": {\n      // background: \"#0059b3\",\n      color: \"#fafafa\",\n    },\n  },\n\n\n\n\n\n\n\n  bookingBoxPositive: {\n    display: \"flex\",\n    marginRight: \"10px\",\n    marginTop: \"5px\",\n    padding: \"7px\",\n    maxWidth: \"150px\",\n    overflowX: \"hidden\",\n    fontSize: \"12px\",\n    fontWeight: \"500\",\n    cursor: \"pointer\",\n    backgroundColor: \"#d40b0b\",\n    color: \"#fff2f2\",\n    boxShadow: \"2px 4px #fafafa\",\n\n    \"&:hover\": {\n      background: \"#bf0000\",\n      color: \"#fff\",\n    },\n  },\n\n  bookingBoxReportSent: {\n    display: \"flex\",\n    marginRight: \"10px\",\n    marginTop: \"5px\",\n    padding: \"7px\",\n    maxWidth: \"150px\",\n    overflowX: \"hidden\",\n    fontSize: \"12px\",\n    fontWeight: \"500\",\n    cursor: \"pointer\",\n    backgroundColor: \"#009900\",\n    color: \"#eee\",\n    boxShadow: \"2px 4px #fafafa\",\n\n    \"&:hover\": {\n      background: \"#006e00\",\n      color: \"#fafafa\",\n    },\n  },\n\n  BookingBorderPCR: {\n    border: \"4px solid\",\n    borderColor: CalendarColors.PCR_COLOR,\n  },\n\n  BookingBorderGynae: {\n    border: \"4px solid\",\n    borderColor: CalendarColors.GYNAE_COLOR,\n  },\n\n  BookingBorderGP: {\n    border: \"4px solid\",\n    borderColor: CalendarColors.GP_COLOR,\n  },\n\n  BookingBorderSTD: {\n    border: \"4px solid\",\n    borderColor: CalendarColors.STD_COLOR,\n  },\n  BookingBorderBlood: {\n    border: \"4px solid\",\n    borderColor: CalendarColors.BLOOD_COLOR,\n  },\n\n}));\n\nconst DayViewCell = ({ key, date, time }) => {\n  const classes = useStyles();\n\n  const [state, setState] = React.useContext(GlobalState);\n  const [bookings, setBookings] = React.useState(null);\n  const [filteredBookings, setFilteredBookings] = React.useState(null);\n  const [selectedBooking, setSelectedBooking] = React.useState(null);\n\n  const [refresh, setRefresh] = React.useState(true);\n\n  const [isPast, setIsPast] = React.useState(false);\n\n  const [openDialog, setOpenDialog] = React.useState(false);\n  const [openDialogAddNew, setOpenDialogAddNew] = React.useState(false);\n\n  const [openDialogOV, setOpenDialogOV] = React.useState(false);\n\n  const [clinic, setClinic] = React.useState('');\n\n\n  const handleCloseDialogOV = () => {\n    setOpenDialogOV(false);\n    setOpenDialogAddNew(false)\n  };\n\n  useEffect(() => {\n    const todayStr = dateformat(new Date(), \"yyyy-mm-dd\");\n    setIsPast(date < todayStr);\n  }, [date]);\n\n  useEffect(() => {\n    if (bookings) {\n      if (state.dayViewCalFilter && state.dayViewCalFilter.trim().length > 0) {\n        const search = state.dayViewCalFilter.trim().toUpperCase();\n        setFilteredBookings(\n          bookings.filter(\n            (booking) =>\n              booking.fullname?.toLowerCase().indexOf(search.toLowerCase()) >= 0 \n          )\n        );\n      } else {\n        setFilteredBookings([...bookings]);\n      }\n    }\n  }, [state.dayViewCalFilter, bookings]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      if (!date || date.length <= 0 || !time || time.length <= 0) {\n        return;\n      }\n\n      // if (isPast)\n      // {\n      //     setBookings([]);\n      //     return;\n      // }\n\n      setBookings(null);\n\n      var res = state.AdminCalendarCache?.find(\n        (record) =>\n          record.method === \"getBookingsByDateStrandTime\" &&\n          record.query === `${date}${time}`\n      )?.res;\n      if (!res || openDialog || openDialogAddNew || true) {\n        res = await BookService.getAllBookingsByDateStrandTime(date, time);\n        setState((state) => ({\n          ...state,\n          AdminCalendarCache: [\n            ...state.AdminCalendarCache,\n            {\n              method: \"getBookingsByDateStrandTime\",\n              query: `${date}${time}`,\n              res: res,\n            },\n          ],\n        }));\n      }\n\n      if (res.data.status === \"OK\") {\n        setBookings(res.data.bookings);\n      }\n    };\n\n    if (openDialog || openDialogAddNew) {\n      setState((state) => ({\n        ...state,\n        AdminCalendarCache: state.AdminCalendarCache.filter(\n          (record) =>\n            !(\n              record.method === \"getBookingsByDateStrandTime\" &&\n              record.query === `${date}${time}`\n            )\n        ),\n      }));\n      setState((state) => ({\n        ...state,\n        AdminCalendarCache: state.AdminCalendarCache.filter(\n          (record) =>\n            !(\n              record.method === \"getBookingsCountByDateStrandTime\" &&\n              record.query === `${date}${time}`\n            )\n        ),\n      }));\n      setState((state) => ({\n        ...state,\n        AdminCalendarCache: state.AdminCalendarCache.filter(\n          (record) =>\n            !(\n              record.method === \"getBookingsCountByDateStr\" &&\n              record.query === date\n            )\n        ),\n      }));\n    }\n\n    fetchData();\n  }, [date, time, state.bookingDialogDataChanged]);\n\n  const bookingCliked = (event, booking) => {\n    setSelectedBooking(booking);\n    setOpenDialog(true);\n  };\n\n  const getBookingClass = (clinic) => {\n    switch (clinic) {\n      case \"Virtual Consultation\":\n        return classes.bookingBoxVC;\n      case \"F2F Clinic\":\n        return classes.bookingBoxF2F;\n      case \"Laser Theatre\":\n        return classes.bookingBoxLaser;\n      case \"Lens Theatre\":\n        return classes.bookingBoxCataract;\n        case \"Post OP\":\n          return classes.bookingBoxPostOP;\n          case \"Optometry\":\n            return classes.bookingBoxOptometry;\n      \n  \n      default:\n        return classes.bookingBoxHidden;\n    }\n  };\n\n  const addNewBookingClicked = () => {\n    setOpenDialogAddNew(true);\n  };\n\n  const getBookingBorderClass = (clinic) => {\n    switch (clinic) {\n      case \"pcr\":\n        return classes.BookingBorderPCR;\n      case \"gynae\":\n        return classes.BookingBorderGynae;\n      case \"gp\":\n        return classes.BookingBorderGP;\n      case \"std\":\n        return classes.BookingBorderSTD;\n        case \"blood\":\n          return classes.BookingBorderBlood;\n    \n      default:\n        return null;\n    }\n  };\n\n  const getBookingsBox = (_bookings) => {\n    if (_bookings === null) {\n      return (\n        <div className={classes.LoadingProgress}>\n          <CircularProgress disableShrink />\n        </div>\n      );\n    } else if (_bookings.length >= 0) {\n      return (\n        <React.Fragment>\n          {_bookings.map(\n            (booking) =>\n              state.selectedClinics.findIndex(\n                (e) => e === booking.clinic\n              ) >= 0 && (\n                <div\n                  style={booking.tr ? { borderTop: \"5px solid #d00fd6\" } : {}}\n                  className={clsx(\n                    getBookingClass(booking.clinic),\n                    // getBookingBorderClass(booking.clinic)\n                  )}\n                  onClick={(event) => bookingCliked(event, booking)}\n                >\n                  {`${\n                    booking.fullname\n                  }`.substring(0, 30)}\n                </div>\n              )\n          )}\n\n          <div className={classes.bookingBoxNew} onClick={addNewBookingClicked}>\n            {\" \"}\n            + Add New Booking\n          </div>\n        </React.Fragment>\n      );\n    }\n  };\n\n  const handleCloseDialog = () => {\n    setOpenDialog(false);\n  };\n\n  const handleCloseDialogAddNew = () => {\n    setOpenDialogAddNew(false);\n  };\n\n  const handleClinicClicked = (clinic) => {\n\n    setClinic(clinic)\n    setOpenDialogOV(true)\n\n  };\n\n  return (\n    <React.Fragment>\n      <div className={classes.Container}>\n        {getBookingsBox(filteredBookings)}\n      </div>\n\n      <EditOVBookingDialog\n        booking={selectedBooking}\n        open={openDialog}\n        date={date}\n        time={time}\n        clinic={selectedBooking?.clinic}\n        handleClose={handleCloseDialog}\n      />\n\n      <NewBookingDialog\n        date={date}\n        time={time}\n        open={openDialogAddNew}\n        handleClose={handleCloseDialogAddNew}\n        clinicClicked={handleClinicClicked}\n      />\n\n      <NewOVDialog\n        date={date}\n        time={time}\n        open={openDialogOV}\n        clinic={clinic}\n        handleClose={handleCloseDialogOV}\n      />\n\n    </React.Fragment>\n  );\n};\n\nDayViewCell.propTypes = {\n  key: PropTypes.string.isRequired,\n  date: PropTypes.string.isRequired,\n  time: PropTypes.string.isRequired,\n};\n\nexport default DayViewCell;\n","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport DayViewCell from './DayViewCell';\nimport dateformat from 'dateformat';\n\n\n\n\nconst rows = [\n    '08:00 AM',\n    '08:15 AM',\n    '08:30 AM', \n    '08:45 AM',\n    '09:00 AM',\n    '09:15 AM', \n    '09:30 AM',\n    '09:45 AM',\n    '10:00 AM',\n    '10:15 AM',\n    '10:30 AM',\n    '10:45 AM',\n    '11:00 AM',\n    '11:15 AM',\n    '11:30 AM',\n    '11:45 AM',\n    '12:00 PM',\n    '12:15 PM',\n    '12:30 PM',\n    '12:45 PM',\n    '01:00 PM',\n    '01:15 PM',\n    '01:30 PM',\n    '01:45 PM',\n    '02:00 PM',\n    '02:15 PM',\n    '02:30 PM',\n    '02:45 PM',\n    '03:00 PM',\n    '03:15 PM',\n    '03:30 PM',\n    '03:45 PM',\n    '04:00 PM',\n    '04:15 PM',\n    '04:30 PM',\n    '04:45 PM',\n    '05:00 PM',\n    '05:15 PM',\n    '05:30 PM',\n    '05:45 PM',\n    '06:00 PM',\n    '06:15 PM',\n    '06:30 PM',\n    '06:45 PM',\n    '07:00 PM',\n    '07:15 PM',\n    '07:30 PM',\n    '07:45 PM'\n];\n\nconst useStyles = makeStyles((theme) => ({\n\n    table: {\n        width: \"100%\",\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        overflowY: \"auto\"\n    },\n\n    th: {\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        verticalAlign: \"middle\",\n        fontcolor: \"#555\",\n        fontWeight: \"400\",\n        fontSize: \"15px\",\n        paddingTop: \"5px\",\n        paddingBottom: \"5px\",\n        width: \"12%\", \n    },\n\n    td: {\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        verticalAlign: \"middle\",\n        height : \"50px\",\n        width: \"84%\", \n    },\n\n    titleLabel: {\n        paddingBottom: \"17px\",\n        paddingTop: \"17px\",\n        color: \"#777\",\n        fontSize: \"16px\"\n    },\n\n    titleLabelToday: {\n        paddingBottom: \"17px\",\n        paddingTop: \"17px\",\n        color: \"#fff\",\n        backgroundColor: \"#1a73e8\",\n        fontSize: \"16px\"\n    },\n\n  }));\n\nconst DayView = ({date}) => {\n    const classes = useStyles();\n\n    return (\n        <React.Fragment>\n\n        <div style={{overflowY: \"scroll\" , height: \"60px\"}}>\n            <table className={classes.table}>\n                <thead>\n                    <tr>\n                        <th style={{width: \"7%\"}}>\n                        \n                        </th>\n                        <th style={{width: \"84%\"}}>\n                                <div className={(dateformat(new Date(),'yyyy-mm-dd') === dateformat(date, 'yyyy-mm-dd')) ? classes.titleLabelToday : classes.titleLabel }>\n                                        {dateformat(date,'dddd')}\n                                </div>                                \n                        </th>\n                    </tr>\n                </thead>\n             </table>\n\n        </div>\n\n            <div style={{overflowY: \"scroll\" , height: \"70vh\"}}>\n                <table className={classes.table}>   \n                    <tbody>\n                        {rows.map(row => (\n                            <tr>\n                                <td style={{width: \"7%\"}}>\n                                    {row}\n                                </td>\n                               \n                                <td className={classes.td}>\n                                     <DayViewCell key={`${dateformat(date,'yyyy-mm-dd')}-${row}`} date={dateformat(date,'yyyy-mm-dd')} time={row}/>  \n                                </td>\n                            \n                            </tr>\n                        ))}            \n                    </tbody>\n                </table>\n            </div>                    \n      \n        </React.Fragment>\n\n\n    );\n}\n\nDayView.propTypes = {\n    date: PropTypes.any.isRequired\n  };\n\n\nexport default DayView;","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MonthView from './MonthView';\nimport { Button, Grid, IconButton, InputAdornment, TextField, Tooltip } from '@material-ui/core';\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\n\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport WeekView from './WeekView';\nimport dateformat from 'dateformat';\nimport DayView from './DayView';\nimport GlobalState from '../../GlobalState';\n\nimport CloseIcon from '@material-ui/icons/Close';\nimport { CalendarColors } from './colors';\n\nconst Clinics = [\n    {clinic: \"Virtual Consultation\", color: CalendarColors.VC_COLOR},\n    {clinic: \"F2F Clinic\", color: CalendarColors.F2F_COLOR},\n    {clinic: \"Laser Theatre\", color: CalendarColors.LASER_COLOR},\n    {clinic: \"Lens Theatre\", color: CalendarColors.CATARACT_COLOR},\n    {clinic: \"Post OP\", color: CalendarColors.POSTOP_COLOR},\n    {clinic: \"Optometry\", color: CalendarColors.OPOTOMETRY_COLOR},\n]\n\nconst monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n  \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n];\n\nconst useStyles = makeStyles((theme) => ({\n\n    title: {\n        textAlign: \"center\",\n        fontSize: \"24px\",\n        fontColor: \"#333\"\n    },\n\n  }));\n\nexport default function CalendarView() {\n    const classes = useStyles();\n\n    const [state, setState] = React.useContext(GlobalState);\n\n    const [month, setMonth] = React.useState(new Date().getMonth() + 1);\n    const [year, setYear] = React.useState(new Date().getFullYear());\n\n    const [day, setDay] = React.useState(new Date());\n\n    const [firstDayofWeek, setFirstDayofWeek] = React.useState(new Date());\n\n    const [weekDates, setWeekDates] = React.useState([]);\n\n    const [mode, setMode] = React.useState('month');\n    const [selectedTab, setSeletedTab] = React.useState('month');\n\n    const [filter,setFilter] = React.useState('');\n\n    const filterChanged = (event) =>{\n        setFilter(event.target.value);\n        setState(state => ({...state, dayViewCalFilter : event.target.value?.trim()?.toUpperCase()}))\n      }\n\n      const removeFilter = () =>\n      {\n        setFilter('');\n        setState(state => ({...state, dayViewCalFilter : ''}));\n      }\n\n\n    useEffect( () => {\n        const today = new Date();\n        const dayofWeek = today.getDay();\n        const firstdayofweek = new Date(today.getTime() - ( dayofWeek * 86400000));\n        setFirstDayofWeek(firstdayofweek);\n        setState(state => ({...state, AdminCalendarCache : []}));\n        setState(state => ({...state, selectedClinics : Clinics.map(item => item.clinic) }));\n\n        return () =>\n        {\n            setState(state => ({...state, AdminCalendarCache : []}));\n            removeFilter();\n        }\n       \n    }, []);\n\n\n    useEffect( () => {\n        const dates = [];\n        for (var i = 0; i < 7 ; i++)\n        {\n            dates.push(new Date(firstDayofWeek.getTime() + ( i * 86400000)));\n        }\n        setWeekDates(dates);\n\n    }, [firstDayofWeek]);\n\n    const handlePrevButton = (event) =>\n    {\n       if (mode === 'month')\n       {\n            if (month === 1)\n            {\n                setYear(year - 1);\n            } \n\n            const newMonth = month === 1 ? 12 : month - 1;\n            setMonth(newMonth);\n\n            const newDay = new Date(year, newMonth - 1 , 1, 0 ,0 ,0 ,0);\n            setDay(newDay);\n\n            const dayofWeek = newDay.getDay();\n            setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\n\n       } \n       else if (mode === 'week')\n       {\n           const newFirstDayofWeek = new Date(firstDayofWeek.getTime() - ( 7 * 86400000));\n           setFirstDayofWeek(newFirstDayofWeek);\n\n           setDay(newFirstDayofWeek);\n           setMonth(newFirstDayofWeek.getMonth() + 1);\n           setYear(newFirstDayofWeek.getFullYear());\n\n       }\n       else if (mode === 'day')\n       {\n           const newDay = new Date(day.getTime() - ( 1 * 86400000));\n           setDay(newDay);\n\n           const dayofWeek = newDay.getDay();\n           setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\n\n           setMonth(newDay.getMonth() + 1);\n           setYear(newDay.getFullYear());\n       }\n    }\n\n    const handleNextButton = (event) =>\n    {\n        if (mode === 'month')\n        {\n            if (month === 12)\n            {\n                setYear(year + 1);\n            } \n       \n            const newMonth = month === 12 ? 1 : month + 1;\n            setMonth(newMonth);\n\n            const newDay = new Date(year, newMonth - 1 , 1, 0 ,0 ,0 ,0);\n            setDay(newDay);\n\n            const dayofWeek = newDay.getDay();\n            setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\n        }\n        else if (mode === 'week')\n        {\n            const newFirstDayofWeek = new Date(firstDayofWeek.getTime() + ( 7 * 86400000));\n            setFirstDayofWeek(newFirstDayofWeek);\n\n            setDay(newFirstDayofWeek);\n            setMonth(newFirstDayofWeek.getMonth() + 1);\n            setYear(newFirstDayofWeek.getFullYear());\n\n        }\n        else if (mode === 'day')\n        {\n            const newDay = new Date(day.getTime() + ( 1 * 86400000));\n            setDay(newDay);\n\n            const dayofWeek = newDay.getDay();\n            setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\n \n            setMonth(newDay.getMonth() + 1);\n            setYear(newDay.getFullYear());\n        }\n    }\n\n    const goToday = (event) => {\n        const newDay = new Date();\n        const dayofWeek = newDay.getDay();\n        setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\n        setDay(newDay);\n        setMonth(newDay.getMonth() + 1);\n        setYear(newDay.getFullYear());\n    }\n\n    const dayClicked = (event, date) =>\n    {\n        const newDay = new Date(date);\n        const dayofWeek = newDay.getDay();\n        setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\n        setDay(newDay);\n        setMonth(newDay.getMonth() + 1);\n        setYear(newDay.getFullYear());\n        setSeletedTab('day');\n        setMode('day');\n    }\n\n    const getContentFromMode = (_mode) => {\n        if (_mode === 'month')\n        {\n            return (\n                <MonthView dayClicked={dayClicked} month={month} year={year}/>    \n            );\n        }    \n        else if (_mode === 'week')\n        {\n            return (\n                    <WeekView dayClicked={dayClicked} dates={weekDates}/>\n            );\n            \n        }\n        else if (_mode === 'day')\n        {\n            return (\n                <DayView date={day}/>\n            );\n        }\n    }\n\n    const getCalendarTitleFromMode = (_mode) => {\n        if (_mode === 'month')\n        {\n            return (\n                <span className={classes.title}> {`${monthNames[month - 1]} ${year}`} </span>   \n            );\n        }    \n        else if (_mode === 'week')\n        {\n            const endOfWeek = new Date(firstDayofWeek.getTime() + ( 6 * 86400000));\n            let endofWeekStr = '';\n            if (endOfWeek.getMonth() === firstDayofWeek.getMonth())\n            {\n                endofWeekStr = dateformat(endOfWeek,'d');\n            }else\n            {\n                endofWeekStr = dateformat(endOfWeek,'mmm d');\n            }\n\n            return (\n                <span className={classes.title}> {`${dateformat(firstDayofWeek,'mmm d')} - ${endofWeekStr}, ${year}`} </span>\n            );\n            \n        }\n        else if (_mode === 'day')\n        {\n            return (\n                <span className={classes.title}> {`${dateformat(day,'mmmm d, yyyy')}`} </span>\n            );\n        }\n    }\n\n\n    const handleTabChanged = (event, value) => {\n        if (value && value.length)\n        {\n          setSeletedTab(value);\n          setMode(value);\n        }\n    };\n\n    const getPrevButtonTitle = (_mode) =>\n    {\n        return `Previuos ${mode}`;\n    }\n\n    const getNextButtonTitle = (_mode) =>\n    {\n        return `Next ${mode}`;\n    }\n\n    const clinicClicked = (clinic) =>\n    {\n        if (state.selectedClinics?.findIndex(e => e === clinic) >= 0 )\n        {\n            setState(state => ({...state, selectedClinics :state.selectedClinics.filter(e => e !== clinic)}));\n        }else\n        {\n            setState(state => ({...state, selectedClinics : [...state.selectedClinics, clinic]}));\n        }\n    }\n\n    const getClinicGuide = () =>\n    {\n        return (\n            <div style={{marginBottom:\"10px\"}}>\n               <Grid container spacing={1}>\n                   {Clinics.map( item => (\n                       <Grid item>\n                           <div \n                                style={state.selectedClinics?.findIndex(e => e === item.clinic) >= 0 ? {border:`1px solid ${item.color}`, backgroundColor:`${item.color}`, color:\"#fff\" ,fontSize:\"0.85rem\", fontWeight:\"500\", padding:\"5px\", width:\"150px\" , textAlign:\"center\", cursor:\"pointer\", borderRadius:\"4px\"}   : {border:`1px solid ${item.color}`, color:`${item.color}`, fontSize:\"0.85rem\", fontWeight:\"500\", padding:\"5px\", width:\"150px\", textAlign:\"center\", cursor:\"pointer\", borderRadius:\"4px\"}}\n                                onClick= {() => clinicClicked(item.clinic)}   \n                                > \n                               {item.clinic}\n                           </div>\n                        </Grid>\n                   ))\n                   }\n               </Grid>\n            </div>\n        )\n    }\n\n    return (\n        <React.Fragment>\n\n            {getClinicGuide()}\n\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"space-between\"\n            alignItems=\"center\"\n            style= {{marginBottom: \"10px\", marginTop: \"0px\"}}\n            >  \n\n            <Grid item md={3}>\n                <div  style={{display:\"flex\", alignItems: \"flex-start\", justifyContent: \"flex-start\" , paddingLeft: \"10px\"}}>\n                    <Tooltip title={getPrevButtonTitle(mode)} placement=\"bottom-start\">\n                        <IconButton \n                                color=\"default\" \n                                aria-label=\"prev\"\n                                onClick = {handlePrevButton}\n                                >\n                            <NavigateBeforeIcon style={{fontSize: '2rem'}}/>\n                        </IconButton>\n                    </Tooltip>\n\n                    <Tooltip title={getNextButtonTitle(mode)} placement=\"bottom-end\">\n                        <IconButton \n                                color=\"default\" \n                                aria-label=\"next\"\n                                onClick = {handleNextButton}\n                                >\n                            <NavigateNextIcon style={{fontSize: '2rem'}}/>\n                        </IconButton>\n                    </Tooltip>\n\n                    <Button style={{marginTop: \"11px\", marginLeft: \"10px\"}} onClick={goToday} variant=\"outlined\"> Today </Button>\n                </div>\n\n            </Grid>\n\n            <Grid item md={6}>\n\n                    <Grid\n                        container\n                        direction=\"row\"\n                        justify=\"center\"\n                        alignItems=\"flex-end\"\n                        spacing = {3}\n                        >\n                            <Grid item>\n                                    {getCalendarTitleFromMode(mode)}\n                            </Grid>\n                            {mode === 'day' && (\n                                        <Grid item>\n                                                <TextField\n                                                    variant=\"standard\"\n                                                    style={{marginBottom : \"5px\"}}\n                                                    value={filter}\n                                                    onChange={filterChanged}\n                                                    margin=\"normal\"\n                                                    size=\"small\"\n                                                    id=\"filter\"\n                                                    label=\"Filter\"\n                                                    name=\"filter\"\n                                                    autoComplete=\"off\"\n                                                    InputProps={{\n                                                        endAdornment : \n                                                            <InputAdornment position=\"end\">\n                                                                <Tooltip title=\"Clear\">\n                                                                            <IconButton\n                                                                            aria-label=\"remove filter\"\n                                                                            onClick={() => removeFilter()}\n                                                                            onMouseDown={() => removeFilter()}\n                                                                        >\n                                                                            <CloseIcon/>\n                                                                        </IconButton>\n                                                                </Tooltip>\n                                                            \n                                                            </InputAdornment>\n                                                          \n                                                    }}\n                                                   \n                                                />\n                                        </Grid>\n                            )}\n                           \n                    </Grid>\n                \n            </Grid>\n\n            <Grid item md={3}>\n                <div  style={{display:\"flex\", alignItems: \"flex-end\", justifyContent: \"flex-end\", paddingRight: \"10px\" }}>\n                    <ToggleButtonGroup\n                        value={selectedTab}\n                        exclusive\n                        onChange={handleTabChanged}\n                        aria-label=\"select view mode\"\n                    >\n                        <ToggleButton style={selectedTab === 'month' ? {width: \"80px\", color: \"#3f51b5\", backgroundColor: \"#ebedf7\" } : {width: \"80px\"}} value=\"month\" aria-label=\"month view\">\n                                month\n                        </ToggleButton>\n                        <ToggleButton style={selectedTab === 'week' ? {width: \"80px\", color: \"#3f51b5\", backgroundColor: \"#ebedf7\"} : {width: \"80px\"}}  value=\"week\" aria-label=\"week view\">\n                                week\n                        </ToggleButton>\n                        <ToggleButton style={selectedTab === 'day' ? {width: \"80px\", color: \"#3f51b5\", backgroundColor: \"#ebedf7\"} : {width: \"80px\"}} value=\"day\" aria-label=\"day view\">\n                                day\n                        </ToggleButton>\n                    </ToggleButtonGroup>\n                </div>\n            </Grid>\n\n           </Grid> \n\n             {getContentFromMode(mode)}\n\n        </React.Fragment>\n\n\n    );\n\n}","import React, { useEffect, useRef, useState } from 'react';\nimport { DataGrid } from '@material-ui/data-grid';\nimport { Button, Checkbox, CircularProgress, Dialog, DialogContent, DialogTitle, Divider, FormControl, FormControlLabel, Grid, Icon, InputLabel, LinearProgress, Link, makeStyles, MenuItem, Paper, Select, SvgIcon, Switch, TextField, Tooltip } from '@material-ui/core';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport { IconButton } from '@material-ui/core';\nimport CheckIcon from '@material-ui/icons/Check';\nimport CloseIcon from '@material-ui/icons/Close';\nimport GlobalState from '../GlobalState';\nimport { getMenuIndex } from '../MenuList';\nimport { FormatDateFromString, FormatDateFromStringShortYear } from './DateFormatter';\nimport AccessibilityIcon from '@material-ui/icons/Accessibility';\n\nimport SearchIcon from '@material-ui/icons/Search';\nimport BookingDialog from './BookingDialog';\nimport AddIcon from '@material-ui/icons/Add';\n\nimport NewReleasesIcon from '@material-ui/icons/NewReleases';\nimport HistoryIcon from '@material-ui/icons/History';\nimport TimelineIcon from '@material-ui/icons/Timeline';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport AutorenewIcon from '@material-ui/icons/Autorenew';\nimport LiveTvIcon from '@material-ui/icons/LiveTv';\nimport PlaylistAddCheckIcon from '@material-ui/icons/PlaylistAddCheck';\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport HourglassEmptyIcon from '@material-ui/icons/HourglassEmpty';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faFileExcel } from \"@fortawesome/free-solid-svg-icons\";\nimport Draggable from 'react-draggable';\n\nimport * as dateformat from 'dateformat';\n\nimport DateFnsUtils from '@date-io/date-fns';\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardTimePicker,\n  KeyboardDatePicker,\n} from '@material-ui/pickers';\n\nimport BusinessIcon from '@material-ui/icons/Business';\nimport CreditCardIcon from '@material-ui/icons/CreditCard';\nimport LocalAtmIcon from '@material-ui/icons/LocalAtm';\n\n\nimport ReactHTMLTableToExcel from 'react-html-table-to-excel';\nimport PriceCalculator from './PriceCalculator';\nimport { corporates } from './Corporates';\nimport PatientService from './services/PatientService';\nimport PatientDialog from './PatientDialog';\nimport { set } from 'date-fns/esm';\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    marginTop: theme.spacing(0),\n    marginBottom: theme.spacing(1),\n\n  },\n\n  refreshButton: {\n    marginLeft: theme.spacing(2),\n  },\n\n  checkIcon: {\n    color: \"green\"\n  },\n\n  closeIcon: {\n    color: \"red\"\n  },\n\n  RefLink: {\n    cursor: \"pointer\"\n  },\n\n  BookedLabel: {\n    backgroundColor: \"#606060\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  PatientAttendedLabel: {\n    backgroundColor: \"#0066aa\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  SampleTakenLabel: {\n    backgroundColor: \"#0066cc\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  ReportSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  ReportCertSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  PositiveLabel: {\n    backgroundColor: \"red\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  HideNowRows: {\n    position: \"absolute\",\n    top: \"40%\",\n    left: \"40%\",\n    width: \"600px\",\n    height: \"300px\",\n    backgroundColor: \"#fafafa\",\n    color: \"#111\",\n    zIndex: \"1000\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyItems: \"center\"\n  },\n\n  ExportToExcelButton:\n  {\n    // marginBottom : \"20px\",\n    color: \"#2f942e\",\n    borderColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"#fafffa\",\n      borderColor: \"#2f942e\",\n    },\n    textDecoration: \"none !important\",\n\n  },\n\n  ExportToExcelButtonInline:\n  {\n    // marginBottom : \"20px\",\n    color: \"#2f942e\",\n    borderColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"#fafffa\",\n      borderColor: \"#2f942e\",\n    },\n    textDecoration: \"none !important\",\n    cursor: \"pointer\",\n    padding: \"10px\"\n\n  },\n\n  table: {\n    width: \"100%\",\n    border: \"1px solid #ddd\",\n    borderCollapse: \"collapse\",\n  },\n\n  th: {\n    border: \"1px solid #ddd\",\n    borderCollapse: \"collapse\",\n    verticalAlign: \"middle\",\n    fontcolor: \"#555\",\n    fontWeight: \"400\",\n    fontSize: \"15px\",\n    paddingTop: \"5px\",\n    paddingBottom: \"5px\",\n    width: \"14%\",\n    paddingLeft: \"5px\",\n  },\n\n  td: {\n    border: \"1px solid #ddd\",\n    borderCollapse: \"collapse\",\n    verticalAlign: \"middle\",\n    paddingLeft: \"5px\",\n  },\n\n  topSelect: {\n    margin: theme.spacing(1),\n    minWidth: 80,\n  },\n\n  notifyIcon: {\n    width: \"16px\",\n    height: \"16px\",\n    borderRadius: \"50%\",\n    backgroundColor: \"rgb(220, 0, 78)\",\n    marginLeft: \"10px\"\n  }\n\n}));\n\nconst getTableTitle = (str) => {\n\n  if (str === 'today') {\n    return `Today's Bookings`;\n  } else if (str === 'old') {\n    return `Old Bookings`;\n  } else if (str === 'future') {\n    return `Future Bookings`;\n  } else if (str === 'recent') {\n    return `Recent Bookings`;\n  } else if (str === 'live') {\n    return `Live Bookings`;\n  } else if (str === 'completed') {\n    return `Completed Bookings`;\n  } else if (str === 'positive') {\n    return `Positive Results`;\n  } else if (str === 'deleted') {\n    return `Archived Records`;\n  } else if (str === 'late') {\n    return `40 Hours Late`;\n  }\n\n  else {\n    return `Patients`;\n  }\n\n}\n\nconst getTableIcon = (str) => {\n\n  if (str === 'today') {\n    return <NewReleasesIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else if (str === 'old') {\n    return <HistoryIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else if (str === 'future') {\n    return <TimelineIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else if (str === 'recent') {\n    return <AutorenewIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else if (str === 'live') {\n    return <LiveTvIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else if (str === 'completed') {\n    return <PlaylistAddCheckIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else if (str === 'positive') {\n    return <AddCircleOutlineIcon style={{ fontSize: \"2.2rem\" }} />\n  } else if (str === 'deleted') {\n    return <DeleteIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else if (str === 'late') {\n    return <HourglassEmptyIcon style={{ fontSize: \"2.2rem\" }} />;\n  }\n\n  else {\n    return <AccessibilityIcon style={{ fontSize: \"2.2rem\" }} />;\n  }\n\n}\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'}>\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nexport default function PatientsTable(props) {\n\n  const classes = useStyles();\n\n\n\n  var columns = [\n    {\n      field: \"_id\",\n      headerName: \"Patient ID\",\n      width: 150,\n      renderCell: (params) => {\n        return (\n          <React.Fragment>\n            <IconButton\n              color=\"primary\"\n              onClick={(event) => openDetailsDialog(event, params.value)}\n            >\n              <SearchIcon />\n            </IconButton>\n\n            <span\n              style={{\n                color: \"#333\",\n                fontWeight: \"600\",\n                fontSize: \"0.8rem\",\n              }}\n            >\n              {params.getValue(\"patientID\")}\n            </span>\n          </React.Fragment>\n        );\n      },\n    },\n    { field: 'name', headerName: 'Name', width: 150 },\n    { field: 'surname', headerName: 'Surname', width: 150 },\n    {\n      field: 'birthDate', headerName: 'DOB', width: 150, valueFormatter: (params) => {\n        return FormatDateFromString(params.value);\n      },\n    },\n    { field: 'email', headerName: 'Email', width: 200 },\n    { field: 'homeTel', headerName: 'Home Tel', width: 150 },\n    { field: 'mobileTel', headerName: 'Mobile Tel', width: 150 },\n    { field: 'postCode', headerName: 'Postcode', width: 300 },\n    { field: 'address', headerName: 'Address', width: 300 },\n\n  ];\n\n\n  const [state, setState] = React.useContext(GlobalState);\n\n  const [data, setData] = React.useState({ bookings: [], cachedBookings: [], isFetching: true });\n\n  const [selectedRow, setSelectedRow] = React.useState(null);\n\n  const [selectedBooking, setSelectedBooking] = React.useState(null);\n  const [seeDetailsDialogOpen, setSeeDetailsDialogOpen] = React.useState(false);\n\n  const [corporate, setCorporate] = useState(corporates[0]);\n  const corporateChanged = (event) => {\n    setCorporate(event.target.value);\n  }\n\n\n  const [filter, setFilter] = React.useState('');\n\n\n  const lastPromise = useRef();\n\n  const formatTimeStamp = (timeStamp) => {\n    const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\n    const timeStampStr = dateformat(timeStamp, 'yyyy-mm-dd');\n    if (todayStr === timeStampStr) {\n      return dateformat(timeStamp, \"'Today', h:MM:ss TT\");\n    }\n    else {\n      return dateformat(timeStamp, \"mmm dS, h:MM:ss TT\");\n    }\n  }\n\n  const loadData = () => {\n    var api = PatientService.getAllPatients;\n\n    if (props.date === 'deleted') {\n      api = PatientService.getDeletedPatients;\n    }\n\n    setData({ bookings: [], cachedBookings: [], isFetching: true });\n\n    // console.log(props)\n\n    const currentPromise = api().then((res) => {\n      // console.log(res)\n      for (var i = 0; i < res.data.length; i++) {\n        res.data[i] = { ...res.data[i], id: i + 1 }\n      }\n      setData({ bookings: [...res.data], cachedBookings: [...res.data], isFetching: false });\n      // return res.data;\n    }).catch(err => {\n      console.error(err)\n    })\n\n    // lastPromise.current = currentPromise;\n\n    // currentPromise.then(\n    //   result => {\n    //     if (currentPromise === lastPromise.current) {\n    //       setData({bookings: [...result], cachedBookings: [...result], isFetching: false});\n    //       setPage(1);\n    //     }\n    //   },\n    //   e => {\n    //     if (currentPromise === lastPromise.current) {\n    //         console.error(e);\n    //         setData({bookings: data.bookings, cachedBookings: data.cachedBookings, isFetching: false});\n    //     }\n    //   });\n\n  }\n\n  useEffect(() => {\n    loadData()\n  },\n    [props.date]);\n\n\n\n\n  useEffect(() => {\n\n    if (filter && filter.trim().length > 0) {\n      var filteredData = data.cachedBookings.filter((element) =>\n\n        (element.name?.toLowerCase().indexOf(filter.toLowerCase()) >= 0) ||\n        (element.surname?.toLowerCase().indexOf(filter.toLowerCase()) >= 0) ||\n        ((element.name + ' ' + element.surname)?.toLowerCase().indexOf(filter.toLowerCase()) >= 0)\n\n\n\n      );\n\n\n      setData({ bookings: [...filteredData], cachedBookings: data.cachedBookings, isFetching: false });\n    } else {\n      setData({ bookings: [...data.cachedBookings], cachedBookings: data.cachedBookings, isFetching: false });\n    }\n  },\n    [filter]);\n\n\n  useEffect(() => {\n\n    loadData()\n\n  }, [state.patientDialogDataChanged]);\n\n\n  const handleCloseSeeDetaisDialog = () => {\n    setSelectedBooking(null);\n    setSeeDetailsDialogOpen(false);\n  }\n\n  const openDetailsDialog = (event, id) => {\n    const patient = data.bookings.find(element => element._id === id);\n    if (patient) {\n      setSelectedPatient(patient);\n      setPatientDialogTitle(`${patient.name.toUpperCase()} ${patient.surname.toUpperCase()}`)\n      setPatientDialogSaveButtonText(\"Save Changes\")\n      setPatientDialogOpen(true)\n    }\n  }\n\n  const refreshClicked = (event) => {\n    setFilter('');\n    loadData()\n  }\n\n  const filterChanged = (event) => {\n    setFilter(event.target.value);\n  }\n\n  const handleSelectionChanged = (newSelection) => {\n    if (newSelection.length > 0) {\n      setSelectedRow(newSelection.rows[0]);\n    }\n\n  }\n\n  const [page, setPage] = React.useState(1);\n\n\n  const registerNewPatientClicked = () => {\n    setSelectedPatient(null)\n    setPatientDialogTitle('Register New Patient')\n    setPatientDialogSaveButtonText(\"Save\")\n    setPatientDialogOpen(true)\n  }\n\n  const [selectedPatient, setSelectedPatient] = React.useState(null)\n  const [patientDialogOpen, setPatientDialogOpen] = React.useState(false)\n  const [patientDialogTitle, setPatientDialogTitle] = React.useState('')\n  const [patientDialogSaveButtonText, setPatientDialogSaveButtonText] = React.useState('')\n\n\n  const handleClosePatientDialog = () => {\n    setPatientDialogOpen(false)\n  }\n\n\n  return (\n    <React.Fragment>\n      {data.isFetching && (\n        <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\n          <LinearProgress color=\"primary\" />\n        </div>\n      )}\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"space-between\"\n        alignItems=\"flex-end\"\n      >\n        <Grid item md={4}>\n          <div style={{ textAlign: \"left\", paddingLeft: \"10px\" }}>\n            <Grid\n              container\n              direction=\"row\"\n              justify=\"flex-start\"\n              alignItems=\"center\"\n            >\n              <Grid item>\n                <span style={{ paddingRight: \"15px\", color: \"#555\" }}>\n                  {\" \"}\n                  {getTableIcon(props.date)}{\" \"}\n                </span>\n              </Grid>\n              <Grid item>\n                <span\n                  style={{\n                    fontSize: \"1.4rem\",\n                    fontWeight: \"600\",\n                    color: \"#444\",\n                  }}\n                >\n                  {\" \"}\n                  {getTableTitle(props.date)}{\" \"}\n                </span>\n              </Grid>\n              <Grid item>\n                <Tooltip title=\"Refresh\" placement=\"right\">\n                  <IconButton\n                    color=\"primary\"\n                    className={classes.refreshButton}\n                    onClick={refreshClicked}\n                  >\n                    <RefreshIcon />\n                  </IconButton>\n                </Tooltip>\n              </Grid>\n            </Grid>\n          </div>\n        </Grid>\n\n        <Grid item md={3}>\n          <div style={{ paddingBottom: \"10px\" }}>\n            <Button\n              // className={classes.ExportToExcelButton}\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={registerNewPatientClicked}\n              startIcon={\n                <AddIcon />\n              }\n            >\n              Register new Patient\n              </Button>\n          </div>\n        </Grid>\n\n        {data.isFetching && <div className={classes.HideNowRows}></div>}\n\n        <Grid item md={3}>\n          <TextField\n            variant=\"standard\"\n            value={filter}\n            onChange={filterChanged}\n            margin=\"normal\"\n            size=\"small\"\n            id=\"filter\"\n            label=\"Filter\"\n            name=\"filter\"\n            autoComplete=\"off\"\n          />\n        </Grid>\n\n      </Grid>\n\n      <div style={{ height: 700, width: \"100%\" }}>\n        <DataGrid\n          rows={data.bookings}\n          columns={columns}\n          autoPageSize\n          page={page}\n          onPageChange={(params) => {\n            setPage(params.page);\n          }}\n          onSelectionChange={handleSelectionChanged}\n        />\n      </div>\n\n\n      <BookingDialog\n        booking={selectedBooking}\n        open={seeDetailsDialogOpen && selectedBooking && selectedBooking.fullname}\n        onClose={handleCloseSeeDetaisDialog}\n      />\n\n      <PatientDialog\n        patient={selectedPatient}\n        open={patientDialogOpen}\n        handleClose={handleClosePatientDialog}\n        title={patientDialogTitle}\n        saveButtonText={patientDialogSaveButtonText}\n      />\n\n    </React.Fragment>\n  );\n}","import React, { useEffect, useRef, useState } from \"react\";\nimport BookService from \"./services/BookService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {\n    AppBar,\n    Backdrop,\n    Button,\n    Checkbox,\n    CircularProgress,\n    DialogActions,\n    DialogContentText,\n    Divider,\n    FormControlLabel,\n    Grid,\n    IconButton,\n    InputAdornment,\n    InputLabel,\n    Link,\n    makeStyles,\n    MenuItem,\n    Select,\n    Switch,\n    TextField,\n    Toolbar,\n    Tooltip,\n} from \"@material-ui/core\";\nimport GlobalState from \"./../GlobalState\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\n\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Draggable from \"react-draggable\";\nimport Paper from \"@material-ui/core/Paper\";\n\nimport Alert from \"@material-ui/lab/Alert\";\n\nimport PropTypes from \"prop-types\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport Box from \"@material-ui/core/Box\";\n\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport NumberFormat from \"react-number-format\";\n\nimport AccessAlarmsIcon from '@material-ui/icons/AccessAlarms';\nimport DateField from \"./DateField\";\n\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\nimport CloseIcon from '@material-ui/icons/Close';\nimport Slide from '@material-ui/core/Slide';\nimport templateService from \"./services/EmailTemplateService\";\nimport dateFormat from \"dateformat\";\n\nimport SaveIcon from '@material-ui/icons/Save';\n\n\nimport { EditorState, convertToRaw, convertFromHTML, ContentState } from 'draft-js';\nimport { Editor } from 'react-draft-wysiwyg';\nimport draftToHtml from 'draftjs-to-html';\nimport htmlToDraft from 'html-to-draftjs';\nimport { htmlToText } from 'html-to-text';\nimport { stateFromHTML } from 'draft-js-import-html';\nimport \"./react-draft-wysiwyg.css\";\nimport TemplateService from \"./services/EmailTemplateService\";\n\nimport AddIcon from '@material-ui/icons/Add';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`vertical-tabpanel-${index}`}\n            aria-labelledby={`vertical-tab-${index}`}\n            {...other}\n            style={{ width: \"100%\" }}\n        >\n            {value === index && (\n                <div style={{ padding: \"20px\", width: \"100%\" }}>\n                    {children}\n                </div>\n            )}\n        </div>\n    );\n}\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n    return {\n        id: `vertical-tab-${index}`,\n        'aria-controls': `vertical-tabpanel-${index}`,\n    };\n}\n\nconst useStyles = makeStyles((theme) => ({\n    appBar: {\n        position: 'relative',\n    },\n    title: {\n        marginLeft: theme.spacing(2),\n        flex: 1,\n    },\n\n    root: {\n        paddingTop: \"8px\",\n        flexGrow: 1,\n        backgroundColor: theme.palette.background.paper,\n        display: 'flex',\n        height: 224,\n    },\n    tabs: {\n        borderRight: `1px solid ${theme.palette.divider}`,\n    },\n\n    backdrop: {\n        zIndex: theme.zIndex.drawer + 5,\n        color: \"#fff\",\n    },\n\n    titleCenter: {\n        width: \"100%\",\n        textAlign: \"center\",\n        fontSize: \"1.1rem\",\n        color: theme.palette.primary.main,\n        fontWeight: \"500\",\n        borderBottom: `2px dashed ${theme.palette.primary.main}`\n    },\n\n    eyeText: {\n        width: \"100%\",\n        textAlign: \"left\",\n        fontSize: \"1.1rem\",\n        color: theme.palette.primary.main,\n        fontWeight: \"500\",\n        paddingTop: \"15px\"\n    }\n\n}));\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport default function EmailTemplateDialog(props) {\n    const classes = useStyles();\n\n    const [state, setState] = React.useContext(GlobalState);\n\n    const [template, settemplate] = React.useState({ formData: {} })\n    const [saving, setSaving] = React.useState(false);\n\n\n    const [templateIDError, settemplateIDError] = React.useState(false)\n    const [subjectError, setSubjectError] = React.useState(false)\n\n    const [nameError, setNameError] = React.useState(false)\n    const [surnameError, setSurnameError] = React.useState(false)\n    const [birthDateError, setBirthDateError] = React.useState(false)\n\n    const [templateRepeated, settemplateRepeated] = React.useState(false)\n\n\n    const [value, setValue] = React.useState(0);\n\n    const [history, setHistory] = React.useState([]);\n    const [backupFormData, setBackUpFormData] = React.useState(null);\n\n    const [openDeleteDialog, setOpenDeleteDialog] = React.useState(false)\n\n    const [variable, setVariable] = React.useState({})\n    const [variableErrors, setVariableErrors] = React.useState({})\n\n\n    // const [editorState, setEditorState] = React.useState(EditorState.createWithContent(stateFromHTML(`<p>...</p>`)))\n    const [editorState, setEditorState] = React.useState(EditorState.createEmpty())\n\n    const onEditorStateChange = (_editorState) => {\n        setEditorState(_editorState)\n        const html = draftToHtml(convertToRaw(editorState.getCurrentContent()))\n        settemplate({\n            ...template,\n            html: html,\n            rawText: htmlToText(html),\n        })\n    }\n\n\n    const handleCloseDeleteDialog = () => {\n        setOpenDeleteDialog(false)\n    }\n\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    useEffect(() => {\n        if (props.open) {\n\n            if (props.template) {\n                let parameters = []\n                try{\n                    parameters = JSON.parse(props.template.parameters)\n                }\n                catch(err){}\n\n                settemplate({ ...props.template, parameters: parameters})\n                const html = props.template.html\n                const contentBlock = htmlToDraft(html);\n                if (contentBlock) {\n                    const contentState = ContentState.createFromBlockArray(\n                        contentBlock.contentBlocks\n                    );\n                    const _editorState = EditorState.createWithContent(contentState);\n                    setEditorState(_editorState)\n                }\n            }\n            else {\n                const html = '<p style=\"font-size:16px\">Please delete this and write your <strong>Text</strong> here ... 😀</p>';\n                const contentBlock = htmlToDraft(html);\n                if (contentBlock) {\n                    const contentState = ContentState.createFromBlockArray(\n                        contentBlock.contentBlocks\n                    );\n                    const _editorState = EditorState.createWithContent(contentState);\n                    setEditorState(_editorState)\n                    settemplate({\n                        ...template,\n                        parameters: [],\n                        html: html,\n                        rawText: htmlToText(html),\n                    })\n                }\n            }\n        }\n    }, [props.template, props.open])\n\n\n\n    const handleClose = () => {\n        props.handleClose();\n        setValue(0)\n        settemplate({})\n        settemplateIDError(false)\n        setNameError(false)\n        setSurnameError(false)\n        settemplateRepeated(false)\n        settemplatenameuser('')\n        settemplatenameusererror(false)\n        setVariable({})\n        setVariableErrors({})\n        setSubjectError(false)\n    };\n\n    const saveClicked = async () => {\n\n        if (!validatetemplate()) {\n            setValue(0)\n            return\n        }\n\n        try {\n            settemplateRepeated(false)\n            setSaving(true)\n            const parameters = JSON.stringify(template.parameters)\n            if (props.template) {\n                const res = await templateService.updateTemplate({ id: template._id, template: {...template, parameters: parameters} })\n                setSaving(false)\n                if (res.data.status === \"OK\") {\n                    setState(state => ({ ...state, templateDialogDataChanged: !state.templateDialogDataChanged }))\n                    handleClose();\n                }\n            } else {\n                const res = await templateService.registerNewTemplate({ template: {...template, parameters: parameters}  })\n                setSaving(false)\n                if (res.data.status === \"OK\") {\n                    setState(state => ({ ...state, templateDialogDataChanged: !state.templateDialogDataChanged }))\n                    handleClose();\n                } else if (res.data.status === \"FAILED\" && res.data.error === \"Repeated template!\") {\n                    settemplateIDError(true)\n                    settemplateRepeated(true)\n                    setValue(0)\n                }\n            }\n        }\n        catch (err) {\n            setSaving(false)\n            console.error(err)\n        }\n    }\n\n    const deleteClicked = async () => {\n\n        if (templatenameuser !== props.template.templateID) {\n            settemplatenameusererror(true)\n            return\n        }\n\n        setOpenDeleteDialog(false)\n\n        setSaving(true)\n        try {\n            await templateService.deleteTemplate(props.template._id)\n            setSaving(false)\n            setState((state) => ({\n                ...state,\n                templateDialogDataChanged: !state.templateDialogDataChanged\n                    ? true\n                    : false,\n            }));\n            handleClose();\n        }\n        catch (err) {\n            console.error(err)\n            setSaving(false)\n        }\n    }\n\n\n\n    const validatetemplate = () => {\n\n        var error = false\n        if (!template.templateID || template.templateID.trim().length === 0) {\n            error = true\n            settemplateIDError(true)\n        }\n\n        if (!template.html || template.html.length === 0) {\n            error = true\n            setNameError(true)\n        }\n\n        if (!template.rawText || template.rawText.length === 0) {\n            error = true\n            setNameError(true)\n        }\n\n        if (!template.subject || template.subject.length === 0) {\n            error = true\n            setSubjectError(true)\n        }\n\n        return !error\n    }\n\n    const formatDate = (date) => {\n        return dateFormat(date, \"dd-mm-yyyy , HH:MM:ss\")\n    }\n\n    const [selectedVersion, setSelectedVersion] = React.useState(0)\n\n    const [templatenameuser, settemplatenameuser] = React.useState('')\n    const [templatenameusererror, settemplatenameusererror] = React.useState(false)\n\n    const addVariableCliced = () => {\n        setVariableErrors({})\n        if (!ValidateVariable()) {\n            return\n        }\n\n        const _variable = {\n            keyword: variable.keyword,\n            builtinValue: variable.builtinValue,\n            defaultValue: variable.defaultValue\n        }\n\n        settemplate({ ...template, parameters: [...template.parameters, _variable] })\n        setVariable({})\n    }\n\n    const ValidateVariable = () => {\n        var error = false\n        if (!variable.keyword) {\n            setVariableErrors((prev) => prev = { ...prev, keywordError: true })\n            error = true\n        }\n\n        if (variable.keyword)\n        {\n            if (template.parameters.find(e => e.keyword === variable.keyword))\n            {\n                setVariableErrors((prev) => prev = { ...prev, keywordError: true })\n                error = true\n            }\n        }\n\n\n        if (!variable.builtinValue) {\n            setVariableErrors((prev) => prev = { ...prev, builtinValueError: true })\n            error = true\n        }\n\n\n        return !error\n    }\n\n    const deleteParameter = (_keyword) =>\n    {\n        settemplate({...template, parameters: template.parameters.filter(e => e.keyword !== _keyword)})\n    }\n\n    return (\n        <React.Fragment>\n            <React.Fragment>\n                <Dialog fullScreen open={props.open} onClose={handleClose} TransitionComponent={Transition}>\n                    <AppBar className={classes.appBar} style={(selectedVersion > 0 && history && history.length > 0) ? { backgroundColor: \"#777\" } : {}} color=\"primary\">\n                        <Toolbar>\n                            <IconButton edge=\"start\" color=\"inherit\" onClick={handleClose} aria-label=\"close\">\n                                <CloseIcon />\n                            </IconButton>\n                            <Typography variant=\"h6\" className={classes.title}>\n                                {props.title}\n                            </Typography>\n\n\n                            <Button startIcon={<SaveIcon />} variant=\"contained\" color=\"secondary\" onClick={saveClicked} disabled={selectedVersion > 0 && history && history.length > 0}>\n                                {props.saveButtonText}\n                            </Button>\n                        </Toolbar>\n\n\n                    </AppBar>\n\n                    <div className={classes.root}>\n                        <Tabs\n                            orientation=\"vertical\"\n                            variant=\"scrollable\"\n                            value={value}\n                            onChange={handleChange}\n                            aria-label=\"Vertical tabs example\"\n                            indicatorColor=\"secondary\"\n                            textColor=\"secondary\"\n                            className={classes.tabs}\n                        >\n                            <Tab label=\"Email Text\" {...a11yProps(0)} />\n                            <Tab label={`Parameters`} {...a11yProps(1)} />\n                            <Tab label={`Settings`} {...a11yProps(2)} />\n\n                        </Tabs>\n                        <TabPanel value={value} index={0}>\n                            <Grid container spacing={1}>\n                                <Grid item xs={12}>\n                                    <Grid container spacing={2} alignItems=\"center\">\n                                        <Grid item xs={8}>\n                                            <TextField\n                                                // disabled={props.template}\n                                                name=\"templatename\"\n                                                id=\"templatename\"\n                                                label=\"Template Name\"\n                                                fullWidth\n                                                required\n                                                helperText={templateRepeated ? '* This Name is already assigned to another template! Please choose a different name.' : '* Please give a unique name to each templete.'}\n                                                error={templateIDError}\n                                                value={template.templateID || ''}\n                                                onChange={(event) => {\n                                                    settemplate({ ...template, templateID: event.target.value })\n                                                    settemplateIDError(false)\n                                                }}\n                                                autoComplete=\"none\"\n                                                variant=\"outlined\"\n                                            />\n\n                                        </Grid>\n                                        {props.template && (\n                                            <Grid item xs={4}>\n                                                <Button onClick={() => setOpenDeleteDialog(true)} variant=\"contained\" style={{ backgroundColor: \"#d10202\", color: \"#fff\", marginBottom: \"5px\" }}>\n                                                    Delete This Template\n                                                </Button>\n                                            </Grid>\n                                        )}\n\n                                    </Grid>\n\n                                </Grid>\n                                <Grid item xs={12}>\n                                <TextField\n                                        name=\"subject\"\n                                        id=\"subject\"\n                                        label=\"Email Subject\"\n                                        fullWidth\n                                        required\n                                        error={subjectError}\n                                        value={template.subject || ''}\n                                        onChange={(event) => {\n                                            settemplate({ ...template, subject: event.target.value })\n                                            setSubjectError(false)\n                                        }}\n                                        autoComplete=\"none\"\n                                        variant=\"outlined\"\n                                    />\n\n                                </Grid>\n                                <Grid item xs={12}>\n                                    <Editor\n                                        autoFocus\n                                        editorState={editorState}\n                                        wrapperClassName=\"demo-wrapper\"\n                                        editorClassName=\"demo-editor\"\n                                        onEditorStateChange={onEditorStateChange}\n                                    />\n                                </Grid>\n                            </Grid>\n                        </TabPanel>\n                        <TabPanel value={value} index={1}>\n                            <Grid container direction=\"column\" spacing={2}>\n                                <Grid item>\n                                    <Grid container direction=\"row\" spacing={1} alignItems=\"bottom\">\n                                        <Grid item xs={3}>\n                                            <TextField\n                                                name=\"keyword\"\n                                                id=\"keyword\"\n                                                label=\"Keyword\"\n                                                fullWidth\n                                                required\n                                                error={variableErrors.keywordError}\n                                                helperText={'This is the TEXT within your email that you want to be replaced by a value'}\n                                                autoComplete=\"none\"\n                                                variant=\"outlined\"\n                                                value={variable.keyword || ''}\n                                                onChange={(event) => setVariable({ ...variable, keyword: event.target.value })}\n                                            />\n                                        </Grid>\n                                        <Grid item xs={3}>\n                                            <FormControl\n                                                error={variableErrors.builtinValueError}\n                                                fullWidth required variant=\"outlined\" className={classes.formControl}>\n                                                <InputLabel id=\"builtinvalueid\"> Value</InputLabel>\n                                                <Select\n                                                    labelId=\"builtinvalueid\"\n                                                    id=\"builtinvalue\"\n                                                    value={variable.builtinValue || null}\n                                                    onChange={(event) => setVariable({ ...variable, builtinValue: event.target.value })}\n                                                    label=\"Built-in Value\"\n                                                >\n                                                    <MenuItem value={'Patient Name'}>Patient Name</MenuItem>\n                                                    <MenuItem value={'Patient Surname'}>Patient Surname</MenuItem>\n                                                    <MenuItem value={'Patient Fullname'}>Patient Fullname</MenuItem>\n                                                    <MenuItem value={'Today Date'}>Today Date</MenuItem>\n                                                    <MenuItem value={'Appointment DateTime'}>Appointment DateTime</MenuItem>\n                                                </Select>\n                                            </FormControl>\n                                        </Grid>\n                                        <Grid item xs={3}>\n                                            <TextField\n                                                name=\"defaultvalue\"\n                                                id=\"defaultvalue\"\n                                                label=\"Default Value\"\n                                                fullWidth\n                                                autoComplete=\"none\"\n                                                helperText={'* This value is used if the variable is empty.'}\n                                                variant=\"outlined\"\n                                                value={variable.defaultValue || ''}\n                                                onChange={(event) => setVariable({ ...variable, defaultValue: event.target.value })}\n\n                                            />\n                                        </Grid>\n                                        <Grid item xs={3}>\n                                            <Button onClick={addVariableCliced} startIcon={<AddIcon />} variant=\"contained\" color=\"primary\" fullWidth style={{ height: \"55px\" }}>\n                                                Add Variable\n                                            </Button>\n                                        </Grid>\n                                    </Grid>\n                                    </Grid>\n\n                                    <Grid item style={{marginTop:\"20px\", fontWeight:\"500\", height:\"20px\"}}>\n                                         <Divider/>\n                                         <Grid container direction=\"row\" spacing={1} alignItems=\"center\">\n                                                <Grid item xs={3}>\n                                                    {\"Keyword\"}\n                                                </Grid>\n                                                <Grid item xs={3}>\n                                                    {\"Value\"}\n                                                </Grid>\n                                                <Grid item xs={3}>\n                                                    {\"Default Value\"}\n                                                </Grid>\n                                                <Grid item xs={3}>\n                                                </Grid>\n                                            </Grid>\n                                            <Divider/>\n                                      </Grid>      \n\n                                    {(!template.parameters || template.parameters.length === 0) && (\n                                        <Grid item>\n                                            <div style={{width:\"80%\", textAlign:\"center\", color:\"#777\", marginTop:\"50px\", fontSize:\"1rem\"}}>\n                                                 No Parameters Defined\n                                            </div>                                           \n                                        </Grid>    \n                                    )}\n\n                                    {template.parameters && template.parameters.length > 0 && template.parameters.map((item => (\n                                        <Grid item style={{marginTop:\"10px\", fontWeight:\"500\", height:\"30px\"}}>\n                                            <Grid container direction=\"row\" spacing={1} alignItems=\"center\">\n                                                <Grid item xs={3}>\n                                                    {item.keyword}\n                                                </Grid>\n                                                <Grid item xs={3}>\n                                                    {item.builtinValue}\n                                                </Grid>\n                                                <Grid item xs={3}>\n                                                    {item.defaultValue}\n                                                </Grid>\n                                                <Grid item xs={3}>\n                                                    <Tooltip title=\"Delete Parameter\">\n                                                        <IconButton onClick={() => deleteParameter(item.keyword)}>\n                                                            <DeleteIcon color=\"primary\" />\n                                                        </IconButton>\n                                                    </Tooltip>\n                                                </Grid>\n                                            </Grid>\n                                        </Grid>\n                                    )))}\n                            </Grid>\n                        </TabPanel>\n                        <TabPanel value={value} index={2}>\n                             <div style={{fontSize:\"1.2rem\", color:\"#777\", fontWeight:\"500\", marginBottom:\"50px\"}}>\n                                 Here you can set which emails (and when) should be sent to the patients automatically by the system :\n                             </div>   \n                             <Paper elevation={3}>\n                            <Grid container direction=\"column\" spacing={2} style={{minHeight:\"300px\", padding:\"10px 15px\"}}>\n                                <Grid item>\n                                    <FormControlLabel\n                                        control={\n                                        <Switch\n                                            checked={template.sendWhenBookedCalendar}\n                                            onChange={(e) => {settemplate({...template,sendWhenBookedCalendar : e.target.checked})}}\n                                            name=\"check-whenbooked\"\n                                            color=\"primary\"\n                                        />\n                                        }\n                                          label={<span style={template.sendWhenBookedCalendar ? {fontWeight:\"500\",color:\"#333\" } : {color:\"#777\"}}>\n                                                Automatically send this email to the patients when an appointment is booked on the calendar.\n                                                </span> \n                                            }\n                                    />\n                                </Grid>\n                            </Grid>\n                            </Paper>\n\n                        </TabPanel>\n\n\n                    </div>\n\n                    <Backdrop\n                        className={classes.backdrop}\n                        open={saving}\n                    >\n                        <CircularProgress color=\"inherit\" />\n                    </Backdrop>\n\n\n                    <Dialog\n                        open={openDeleteDialog}\n                        onClose={handleCloseDeleteDialog}\n                        aria-labelledby=\"alert-dialog-title\"\n                        aria-describedby=\"alert-dialog-description\"\n                    >\n                        <DialogTitle style={{ color: \"#d10202\", fontWeight: \"600\" }} id=\"alert-dialog-title\">\n                            {\"Delete template\"}\n                        </DialogTitle>\n                        <DialogContent>\n                            <DialogContentText\n                                style={{ color: \"#000\", fontWeight: \"500\" }}\n                                id=\"alert-dialog-description\"\n                            >\n                                <Grid container spacing={4}>\n                                    <Grid item xs={12}>\n                                        Are you sure you want to delete this template?\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <TextField\n                                            autoFocus\n                                            name=\"templatenameuser\"\n                                            id=\"templatenameuser\"\n                                            label=\"Template Name\"\n                                            placeholder=\"Please Retype The Template Name\"\n                                            fullWidth\n                                            required\n                                            error={templatenameusererror}\n                                            helperText={`* Please retype the template name you want to be deleted.`}\n                                            value={templatenameuser}\n                                            onChange={(event) => {\n                                                settemplatenameuser(event.target.value)\n                                            }}\n                                            autoComplete=\"none\"\n                                            variant=\"outlined\"\n                                        />\n                                    </Grid>\n                                </Grid>\n                            </DialogContentText>\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={handleCloseDeleteDialog} color=\"default\">\n                                Back\n                                 </Button>\n                            <Button onClick={deleteClicked} variant=\"contained\" style={{ backgroundColor: \"#d10202\", color: \"#fff\" }}>\n                                Yes, Delete this template\n                                 </Button>\n                        </DialogActions>\n                    </Dialog>\n\n\n\n                </Dialog>\n            </React.Fragment>\n        </React.Fragment>\n    );\n}\n","import React, { useEffect, useRef, useState } from 'react';\nimport { DataGrid } from '@material-ui/data-grid';\nimport { Button, Checkbox, CircularProgress, Dialog, DialogContent, DialogTitle, Divider, FormControl, FormControlLabel, Grid, Icon, InputLabel, LinearProgress, Link, makeStyles, MenuItem, Paper, Select, SvgIcon, Switch, TextField, Tooltip } from '@material-ui/core';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport { IconButton } from '@material-ui/core';\nimport CheckIcon from '@material-ui/icons/Check';\nimport CloseIcon from '@material-ui/icons/Close';\nimport GlobalState from '../GlobalState';\nimport { getMenuIndex } from '../MenuList';\nimport { FormatDateFromString, FormatDateFromStringShortYear } from './DateFormatter';\nimport AccessibilityIcon from '@material-ui/icons/Accessibility';\n\nimport SearchIcon from '@material-ui/icons/Search';\nimport BookingDialog from './BookingDialog';\nimport AddIcon from '@material-ui/icons/Add';\n\nimport NewReleasesIcon from '@material-ui/icons/NewReleases';\nimport HistoryIcon from '@material-ui/icons/History';\nimport TimelineIcon from '@material-ui/icons/Timeline';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport AutorenewIcon from '@material-ui/icons/Autorenew';\nimport LiveTvIcon from '@material-ui/icons/LiveTv';\nimport PlaylistAddCheckIcon from '@material-ui/icons/PlaylistAddCheck';\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport HourglassEmptyIcon from '@material-ui/icons/HourglassEmpty';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faFileExcel } from \"@fortawesome/free-solid-svg-icons\";\nimport Draggable from 'react-draggable';\n\nimport * as dateformat from 'dateformat';\n\nimport DraftsIcon from '@material-ui/icons/Drafts';\n\nimport DateFnsUtils from '@date-io/date-fns';\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardTimePicker,\n  KeyboardDatePicker,\n} from '@material-ui/pickers';\n\nimport BusinessIcon from '@material-ui/icons/Business';\nimport CreditCardIcon from '@material-ui/icons/CreditCard';\nimport LocalAtmIcon from '@material-ui/icons/LocalAtm';\n\n\nimport ReactHTMLTableToExcel from 'react-html-table-to-excel';\nimport PriceCalculator from './PriceCalculator';\nimport { corporates } from './Corporates';\nimport templateService from './services/EmailTemplateService';\nimport EmailTemplateDialog from './EmailTemplateDialog';\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    marginTop: theme.spacing(0),\n    marginBottom: theme.spacing(1),\n\n  },\n\n  refreshButton: {\n    marginLeft: theme.spacing(2),\n  },\n\n  checkIcon: {\n    color: \"green\"\n  },\n\n  closeIcon: {\n    color: \"red\"\n  },\n\n  RefLink: {\n    cursor: \"pointer\"\n  },\n\n  BookedLabel: {\n    backgroundColor: \"#606060\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  templateAttendedLabel: {\n    backgroundColor: \"#0066aa\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  SampleTakenLabel: {\n    backgroundColor: \"#0066cc\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  ReportSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  ReportCertSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  PositiveLabel: {\n    backgroundColor: \"red\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  HideNowRows: {\n    position: \"absolute\",\n    top: \"40%\",\n    left: \"40%\",\n    width: \"600px\",\n    height: \"300px\",\n    backgroundColor: \"#fafafa\",\n    color: \"#111\",\n    zIndex: \"1000\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyItems: \"center\"\n  },\n\n  ExportToExcelButton:\n  {\n    // marginBottom : \"20px\",\n    color: \"#2f942e\",\n    borderColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"#fafffa\",\n      borderColor: \"#2f942e\",\n    },\n    textDecoration: \"none !important\",\n\n  },\n\n  ExportToExcelButtonInline:\n  {\n    // marginBottom : \"20px\",\n    color: \"#2f942e\",\n    borderColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"#fafffa\",\n      borderColor: \"#2f942e\",\n    },\n    textDecoration: \"none !important\",\n    cursor: \"pointer\",\n    padding: \"10px\"\n\n  },\n\n  table: {\n    width: \"100%\",\n    border: \"1px solid #ddd\",\n    borderCollapse: \"collapse\",\n  },\n\n  th: {\n    border: \"1px solid #ddd\",\n    borderCollapse: \"collapse\",\n    verticalAlign: \"middle\",\n    fontcolor: \"#555\",\n    fontWeight: \"400\",\n    fontSize: \"15px\",\n    paddingTop: \"5px\",\n    paddingBottom: \"5px\",\n    width: \"14%\",\n    paddingLeft: \"5px\",\n  },\n\n  td: {\n    border: \"1px solid #ddd\",\n    borderCollapse: \"collapse\",\n    verticalAlign: \"middle\",\n    paddingLeft: \"5px\",\n  },\n\n  topSelect: {\n    margin: theme.spacing(1),\n    minWidth: 80,\n  },\n\n  notifyIcon: {\n    width: \"16px\",\n    height: \"16px\",\n    borderRadius: \"50%\",\n    backgroundColor: \"rgb(220, 0, 78)\",\n    marginLeft: \"10px\"\n  }\n\n}));\n\nconst getTableTitle = (str) => {\n\n  if (str === 'today') {\n    return `Today's Bookings`;\n  } else if (str === 'old') {\n    return `Old Bookings`;\n  } else if (str === 'future') {\n    return `Future Bookings`;\n  } else if (str === 'recent') {\n    return `Recent Bookings`;\n  } else if (str === 'live') {\n    return `Live Bookings`;\n  } else if (str === 'completed') {\n    return `Completed Bookings`;\n  } else if (str === 'positive') {\n    return `Positive Results`;\n  } else if (str === 'deleted') {\n    return `Archived Records`;\n  } else if (str === 'late') {\n    return `40 Hours Late`;\n  }\n\n  else {\n    return `Email Templates`;\n  }\n\n}\n\nconst getTableIcon = (str) => {\n\n  if (str === 'today') {\n    return <NewReleasesIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else if (str === 'old') {\n    return <HistoryIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else if (str === 'future') {\n    return <TimelineIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else if (str === 'recent') {\n    return <AutorenewIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else if (str === 'live') {\n    return <LiveTvIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else if (str === 'completed') {\n    return <PlaylistAddCheckIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else if (str === 'positive') {\n    return <AddCircleOutlineIcon style={{ fontSize: \"2.2rem\" }} />\n  } else if (str === 'deleted') {\n    return <DeleteIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else if (str === 'late') {\n    return <HourglassEmptyIcon style={{ fontSize: \"2.2rem\" }} />;\n  }\n\n  else {\n    return <DraftsIcon style={{ fontSize: \"2.2rem\" }} />;\n  }\n\n}\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'}>\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nexport default function EmailTemplatesTable(props) {\n\n  const classes = useStyles();\n\n\n\n  var columns = [\n    {\n      field: \"_id\",\n      headerName: \" \",\n      width: 70,\n      renderCell: (params) => {\n        return (\n          <React.Fragment>\n            <IconButton\n              color=\"primary\"\n              onClick={(event) => openDetailsDialog(event, params.value)}\n            >\n              <SearchIcon />\n            </IconButton>\n          </React.Fragment>\n        );\n      },\n    },\n    { field: 'templateID', headerName: 'Template Name', width: 200 },\n    { field: 'subject', headerName: 'Subject', width: 400 },\n    { field: 'rawText', headerName: 'Email Body', width: 700 },\n  ];\n\n\n  const [state, setState] = React.useContext(GlobalState);\n\n  const [data, setData] = React.useState({ bookings: [], cachedBookings: [], isFetching: true });\n\n  const [selectedRow, setSelectedRow] = React.useState(null);\n\n  const [selectedBooking, setSelectedBooking] = React.useState(null);\n  const [seeDetailsDialogOpen, setSeeDetailsDialogOpen] = React.useState(false);\n\n  const [corporate, setCorporate] = useState(corporates[0]);\n  const corporateChanged = (event) => {\n    setCorporate(event.target.value);\n  }\n\n\n  const [filter, setFilter] = React.useState('');\n\n\n  const lastPromise = useRef();\n\n  const formatTimeStamp = (timeStamp) => {\n    const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\n    const timeStampStr = dateformat(timeStamp, 'yyyy-mm-dd');\n    if (todayStr === timeStampStr) {\n      return dateformat(timeStamp, \"'Today', h:MM:ss TT\");\n    }\n    else {\n      return dateformat(timeStamp, \"mmm dS, h:MM:ss TT\");\n    }\n  }\n\n  const loadData = () => {\n    var api = templateService.getAllTemplates;\n\n    setData({ bookings: [], cachedBookings: [], isFetching: true });\n\n    // console.log(props)\n\n    const currentPromise = api().then((res) => {\n      // console.log(res)\n      for (var i = 0; i < res.data.length; i++) {\n        res.data[i] = { ...res.data[i], id: i + 1 }\n      }\n      setData({ bookings: [...res.data], cachedBookings: [...res.data], isFetching: false });\n      // return res.data;\n    }).catch(err => {\n      console.error(err)\n    })\n\n    // lastPromise.current = currentPromise;\n\n    // currentPromise.then(\n    //   result => {\n    //     if (currentPromise === lastPromise.current) {\n    //       setData({bookings: [...result], cachedBookings: [...result], isFetching: false});\n    //       setPage(1);\n    //     }\n    //   },\n    //   e => {\n    //     if (currentPromise === lastPromise.current) {\n    //         console.error(e);\n    //         setData({bookings: data.bookings, cachedBookings: data.cachedBookings, isFetching: false});\n    //     }\n    //   });\n\n  }\n\n  useEffect(() => {\n    loadData()\n  },\n    [props.date]);\n\n\n\n\n  useEffect(() => {\n\n    if (filter && filter.trim().length > 0) {\n      var filteredData = data.cachedBookings.filter((element) =>\n\n        (element.name?.toLowerCase().indexOf(filter.toLowerCase()) >= 0) ||\n        (element.surname?.toLowerCase().indexOf(filter.toLowerCase()) >= 0) ||\n        ((element.name + ' ' + element.surname)?.toLowerCase().indexOf(filter.toLowerCase()) >= 0)\n\n\n\n      );\n\n\n      setData({ bookings: [...filteredData], cachedBookings: data.cachedBookings, isFetching: false });\n    } else {\n      setData({ bookings: [...data.cachedBookings], cachedBookings: data.cachedBookings, isFetching: false });\n    }\n  },\n    [filter]);\n\n\n  useEffect(() => {\n\n    loadData()\n\n  }, [state.templateDialogDataChanged]);\n\n\n  const handleCloseSeeDetaisDialog = () => {\n    setSelectedBooking(null);\n    setSeeDetailsDialogOpen(false);\n  }\n\n  const openDetailsDialog = (event, id) => {\n    const template = data.bookings.find(element => element._id === id);\n    if (template) {\n      setSelectedtemplate(template);\n      settemplateDialogTitle(`${template.templateID.toUpperCase()}`)\n      settemplateDialogSaveButtonText(\"Save Changes\")\n      settemplateDialogOpen(true)\n    }\n  }\n\n  const refreshClicked = (event) => {\n    setFilter('');\n    loadData()\n  }\n\n  const filterChanged = (event) => {\n    setFilter(event.target.value);\n  }\n\n  const handleSelectionChanged = (newSelection) => {\n    if (newSelection.length > 0) {\n      setSelectedRow(newSelection.rows[0]);\n    }\n\n  }\n\n  const [page, setPage] = React.useState(1);\n\n\n  const registerNewtemplateClicked = () => {\n    setSelectedtemplate(null)\n    settemplateDialogTitle('Create New Email Template')\n    settemplateDialogSaveButtonText(\"Save\")\n    settemplateDialogOpen(true)\n  }\n\n  const [selectedtemplate, setSelectedtemplate] = React.useState(null)\n  const [templateDialogOpen, settemplateDialogOpen] = React.useState(false)\n  const [templateDialogTitle, settemplateDialogTitle] = React.useState('')\n  const [templateDialogSaveButtonText, settemplateDialogSaveButtonText] = React.useState('')\n\n\n  const handleClosetemplateDialog = () => {\n    settemplateDialogOpen(false)\n  }\n\n\n  return (\n    <React.Fragment>\n      {data.isFetching && (\n        <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\n          <LinearProgress color=\"primary\" />\n        </div>\n      )}\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"space-between\"\n        alignItems=\"flex-end\"\n      >\n        <Grid item md={4}>\n          <div style={{ textAlign: \"left\", paddingLeft: \"10px\" }}>\n            <Grid\n              container\n              direction=\"row\"\n              justify=\"flex-start\"\n              alignItems=\"center\"\n            >\n              <Grid item>\n                <span style={{ paddingRight: \"15px\", color: \"#555\" }}>\n                  {\" \"}\n                  {getTableIcon(props.date)}{\" \"}\n                </span>\n              </Grid>\n              <Grid item>\n                <span\n                  style={{\n                    fontSize: \"1.4rem\",\n                    fontWeight: \"600\",\n                    color: \"#444\",\n                  }}\n                >\n                  {\" \"}\n                  {getTableTitle(props.date)}{\" \"}\n                </span>\n              </Grid>\n              <Grid item>\n                <Tooltip title=\"Refresh\" placement=\"right\">\n                  <IconButton\n                    color=\"primary\"\n                    className={classes.refreshButton}\n                    onClick={refreshClicked}\n                  >\n                    <RefreshIcon />\n                  </IconButton>\n                </Tooltip>\n              </Grid>\n            </Grid>\n          </div>\n        </Grid>\n\n        <Grid item md={6}>\n          <div style={{ paddingBottom: \"10px\" }}>\n            <Button\n              // className={classes.ExportToExcelButton}\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={registerNewtemplateClicked}\n              startIcon={\n                <AddIcon />\n              }\n            >\n              Create New Email Template\n              </Button>\n          </div>\n        </Grid>\n\n        {data.isFetching && <div className={classes.HideNowRows}></div>}\n\n        {/* <Grid item md={3}>\n          <TextField\n            variant=\"standard\"\n            value={filter}\n            onChange={filterChanged}\n            margin=\"normal\"\n            size=\"small\"\n            id=\"filter\"\n            label=\"Filter\"\n            name=\"filter\"\n            autoComplete=\"off\"\n          />\n        </Grid> */}\n\n      </Grid>\n\n      <div style={{ height: 700, width: \"100%\" }}>\n        <DataGrid\n          rows={data.bookings}\n          columns={columns}\n          autoPageSize\n          page={page}\n          onPageChange={(params) => {\n            setPage(params.page);\n          }}\n          onSelectionChange={handleSelectionChanged}\n        />\n      </div>\n\n\n      <BookingDialog\n        booking={selectedBooking}\n        open={seeDetailsDialogOpen && selectedBooking && selectedBooking.fullname}\n        onClose={handleCloseSeeDetaisDialog}\n      />\n\n      <EmailTemplateDialog\n        template={selectedtemplate}\n        open={templateDialogOpen}\n        handleClose={handleClosetemplateDialog}\n        title={templateDialogTitle}\n        saveButtonText={templateDialogSaveButtonText}\n      />\n\n    </React.Fragment>\n  );\n}","import React, { useEffect, useRef, useState } from \"react\";\nimport BookService from \"./services/BookService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {\n    AppBar,\n    Backdrop,\n    Button,\n    Checkbox,\n    CircularProgress,\n    DialogActions,\n    DialogContentText,\n    Divider,\n    FormControlLabel,\n    Grid,\n    IconButton,\n    InputAdornment,\n    InputLabel,\n    Link,\n    makeStyles,\n    MenuItem,\n    Select,\n    Switch,\n    TextField,\n    Toolbar,\n    Tooltip,\n} from \"@material-ui/core\";\nimport GlobalState from \"./../GlobalState\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\n\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Draggable from \"react-draggable\";\nimport Paper from \"@material-ui/core/Paper\";\n\nimport Alert from \"@material-ui/lab/Alert\";\n\nimport PropTypes from \"prop-types\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport Box from \"@material-ui/core/Box\";\n\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport NumberFormat from \"react-number-format\";\n\nimport AccessAlarmsIcon from '@material-ui/icons/AccessAlarms';\nimport DateField from \"./DateField\";\n\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\nimport CloseIcon from '@material-ui/icons/Close';\nimport Slide from '@material-ui/core/Slide';\nimport templateService from \"./services/SMSTemplateService\";\nimport dateFormat from \"dateformat\";\n\nimport SaveIcon from '@material-ui/icons/Save';\n\n\nimport { EditorState, convertToRaw, convertFromHTML, ContentState } from 'draft-js';\nimport { Editor } from 'react-draft-wysiwyg';\nimport draftToHtml from 'draftjs-to-html';\nimport htmlToDraft from 'html-to-draftjs';\nimport { htmlToText } from 'html-to-text';\nimport { stateFromHTML } from 'draft-js-import-html';\nimport \"./react-draft-wysiwyg.css\";\nimport TemplateService from \"./services/SMSTemplateService\";\n\nimport AddIcon from '@material-ui/icons/Add';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`vertical-tabpanel-${index}`}\n            aria-labelledby={`vertical-tab-${index}`}\n            {...other}\n            style={{ width: \"100%\" }}\n        >\n            {value === index && (\n                <div style={{ padding: \"20px\", width: \"100%\" }}>\n                    {children}\n                </div>\n            )}\n        </div>\n    );\n}\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n    return {\n        id: `vertical-tab-${index}`,\n        'aria-controls': `vertical-tabpanel-${index}`,\n    };\n}\n\nconst useStyles = makeStyles((theme) => ({\n    appBar: {\n        position: 'relative',\n        backgroundColor: \"#009e28\"\n    },\n    title: {\n        marginLeft: theme.spacing(2),\n        flex: 1,\n    },\n\n    root: {\n        paddingTop: \"8px\",\n        flexGrow: 1,\n        backgroundColor: theme.palette.background.paper,\n        display: 'flex',\n        height: 224,\n    },\n    tabs: {\n        borderRight: `1px solid ${theme.palette.divider}`,\n    },\n\n    backdrop: {\n        zIndex: theme.zIndex.drawer + 5,\n        color: \"#fff\",\n    },\n\n    titleCenter: {\n        width: \"100%\",\n        textAlign: \"center\",\n        fontSize: \"1.1rem\",\n        color: theme.palette.primary.main,\n        fontWeight: \"500\",\n        borderBottom: `2px dashed ${theme.palette.primary.main}`\n    },\n\n    eyeText: {\n        width: \"100%\",\n        textAlign: \"left\",\n        fontSize: \"1.1rem\",\n        color: theme.palette.primary.main,\n        fontWeight: \"500\",\n        paddingTop: \"15px\"\n    },\n\n    createSMSButton : {\n        backgroundColor : \"#009e28\",\n        color: \"#fff\",\n        \"&:hover\" : {\n          backgroundColor: \"#00751e\"\n        }\n      },\n    \n\n\n}));\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport default function SMSTemplateDialog(props) {\n    const classes = useStyles();\n\n    const [state, setState] = React.useContext(GlobalState);\n\n    const [template, settemplate] = React.useState({ formData: {} })\n    const [saving, setSaving] = React.useState(false);\n\n\n    const [templateIDError, settemplateIDError] = React.useState(false)\n    const [rawTextError, setRawTextError] = React.useState(false)\n\n    const [subjectError, setSubjectError] = React.useState(false)\n\n    const [nameError, setNameError] = React.useState(false)\n    const [surnameError, setSurnameError] = React.useState(false)\n    const [birthDateError, setBirthDateError] = React.useState(false)\n\n    const [templateRepeated, settemplateRepeated] = React.useState(false)\n\n\n    const [value, setValue] = React.useState(0);\n\n    const [history, setHistory] = React.useState([]);\n    const [backupFormData, setBackUpFormData] = React.useState(null);\n\n    const [openDeleteDialog, setOpenDeleteDialog] = React.useState(false)\n\n    const [variable, setVariable] = React.useState({})\n    const [variableErrors, setVariableErrors] = React.useState({})\n\n\n    // const [editorState, setEditorState] = React.useState(EditorState.createWithContent(stateFromHTML(`<p>...</p>`)))\n    const [editorState, setEditorState] = React.useState(EditorState.createEmpty())\n\n    const onEditorStateChange = (_editorState) => {\n        setEditorState(_editorState)\n        const html = draftToHtml(convertToRaw(editorState.getCurrentContent()))\n        settemplate({\n            ...template,\n            html: html,\n            rawText: htmlToText(html),\n        })\n    }\n\n\n    const handleCloseDeleteDialog = () => {\n        setOpenDeleteDialog(false)\n    }\n\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    useEffect(() => {\n        if (props.open) {\n\n            if (props.template) {\n                let parameters = []\n                try{\n                    parameters = JSON.parse(props.template.parameters)\n                }\n                catch(err){}\n\n                settemplate({ ...props.template, parameters: parameters})\n            }\n            else {\n                settemplate({parameters: []})\n            }\n        }\n    }, [props.template, props.open])\n\n\n\n    const handleClose = () => {\n        props.handleClose();\n        setValue(0)\n        settemplate({})\n        settemplateIDError(false)\n        setNameError(false)\n        setSurnameError(false)\n        settemplateRepeated(false)\n        settemplatenameuser('')\n        settemplatenameusererror(false)\n        setVariable({})\n        setVariableErrors({})\n        setSubjectError(false)\n        setRawTextError(false)\n    };\n\n    const saveClicked = async () => {\n\n        if (!validatetemplate()) {\n            setValue(0)\n            return\n        }\n\n        try {\n            settemplateRepeated(false)\n            setSaving(true)\n            const parameters = JSON.stringify(template.parameters)\n            if (props.template) {\n                const res = await templateService.updateTemplate({ id: template._id, template: {...template, parameters: parameters} })\n                setSaving(false)\n                if (res.data.status === \"OK\") {\n                    setState(state => ({ ...state, templateDialogDataChanged: !state.templateDialogDataChanged }))\n                    handleClose();\n                }\n            } else {\n                const res = await templateService.registerNewTemplate({ template: {...template, parameters: parameters}  })\n                setSaving(false)\n                if (res.data.status === \"OK\") {\n                    setState(state => ({ ...state, templateDialogDataChanged: !state.templateDialogDataChanged }))\n                    handleClose();\n                } else if (res.data.status === \"FAILED\" && res.data.error === \"Repeated template!\") {\n                    settemplateIDError(true)\n                    settemplateRepeated(true)\n                    setValue(0)\n                }\n            }\n        }\n        catch (err) {\n            setSaving(false)\n            console.error(err)\n        }\n    }\n\n    const deleteClicked = async () => {\n\n        if (templatenameuser !== props.template.templateID) {\n            settemplatenameusererror(true)\n            return\n        }\n\n        setOpenDeleteDialog(false)\n\n        setSaving(true)\n        try {\n            await templateService.deleteTemplate(props.template._id)\n            setSaving(false)\n            setState((state) => ({\n                ...state,\n                templateDialogDataChanged: !state.templateDialogDataChanged\n                    ? true\n                    : false,\n            }));\n            handleClose();\n        }\n        catch (err) {\n            console.error(err)\n            setSaving(false)\n        }\n    }\n\n\n\n    const validatetemplate = () => {\n\n        var error = false\n        if (!template.templateID || template.templateID.trim().length === 0) {\n            error = true\n            settemplateIDError(true)\n        }\n\n        if (!template.rawText || template.rawText.length === 0) {\n            error = true\n            setRawTextError(true)\n        }\n\n        return !error\n    }\n\n    const formatDate = (date) => {\n        return dateFormat(date, \"dd-mm-yyyy , HH:MM:ss\")\n    }\n\n    const [selectedVersion, setSelectedVersion] = React.useState(0)\n\n    const [templatenameuser, settemplatenameuser] = React.useState('')\n    const [templatenameusererror, settemplatenameusererror] = React.useState(false)\n\n    const addVariableCliced = () => {\n        setVariableErrors({})\n        if (!ValidateVariable()) {\n            return\n        }\n\n        const _variable = {\n            keyword: variable.keyword,\n            builtinValue: variable.builtinValue,\n            defaultValue: variable.defaultValue\n        }\n\n        settemplate({ ...template, parameters: [...template.parameters, _variable] })\n        setVariable({})\n    }\n\n    const ValidateVariable = () => {\n        var error = false\n        if (!variable.keyword) {\n            setVariableErrors((prev) => prev = { ...prev, keywordError: true })\n            error = true\n        }\n\n        if (variable.keyword)\n        {\n            if (template.parameters.find(e => e.keyword === variable.keyword))\n            {\n                setVariableErrors((prev) => prev = { ...prev, keywordError: true })\n                error = true\n            }\n        }\n\n\n        if (!variable.builtinValue) {\n            setVariableErrors((prev) => prev = { ...prev, builtinValueError: true })\n            error = true\n        }\n\n\n        return !error\n    }\n\n    const deleteParameter = (_keyword) =>\n    {\n        settemplate({...template, parameters: template.parameters.filter(e => e.keyword !== _keyword)})\n    }\n\n    return (\n        <React.Fragment>\n            <React.Fragment>\n                <Dialog fullScreen open={props.open} onClose={handleClose} TransitionComponent={Transition}>\n                    <AppBar className={classes.appBar} style={(selectedVersion > 0 && history && history.length > 0) ? { backgroundColor: \"#777\" } : {}} color=\"primary\">\n                        <Toolbar>\n                            <IconButton edge=\"start\" color=\"inherit\" onClick={handleClose} aria-label=\"close\">\n                                <CloseIcon />\n                            </IconButton>\n                            <Typography variant=\"h6\" className={classes.title}>\n                                {props.title}\n                            </Typography>\n\n\n                            <Button startIcon={<SaveIcon />} variant=\"contained\" onClick={saveClicked} disabled={selectedVersion > 0 && history && history.length > 0}>\n                                {props.saveButtonText}\n                            </Button>\n                        </Toolbar>\n\n\n                    </AppBar>\n\n                    <div className={classes.root}>\n                        <Tabs\n                            orientation=\"vertical\"\n                            variant=\"scrollable\"\n                            value={value}\n                            onChange={handleChange}\n                            aria-label=\"Vertical tabs example\"\n                            indicatorColor=\"secondary\"\n                            textColor=\"secondary\"\n                            className={classes.tabs}\n                        >\n                            <Tab label=\"Email Text\" {...a11yProps(0)} />\n                            <Tab label={`Parameters`} {...a11yProps(1)} />\n                            <Tab label={`Settings`} {...a11yProps(2)} />\n\n                        </Tabs>\n                        <TabPanel value={value} index={0}>\n                            <Grid container spacing={4}>\n                                <Grid item xs={12}>\n                                    <Grid container spacing={2} alignItems=\"center\">\n                                        <Grid item xs={8}>\n                                            <TextField\n                                                // disabled={props.template}\n                                                name=\"templatename\"\n                                                id=\"templatename\"\n                                                label=\"Template Name\"\n                                                fullWidth\n                                                required\n                                                helperText={templateRepeated ? '* This Name is already assigned to another template! Please choose a different name.' : '* Please give a unique name to each templete.'}\n                                                error={templateIDError}\n                                                value={template.templateID || ''}\n                                                onChange={(event) => {\n                                                    settemplate({ ...template, templateID: event.target.value })\n                                                    settemplateIDError(false)\n                                                }}\n                                                autoComplete=\"none\"\n                                                variant=\"outlined\"\n                                            />\n\n                                        </Grid>\n                                        {props.template && (\n                                            <Grid item xs={4}>\n                                                <Button onClick={() => setOpenDeleteDialog(true)} variant=\"contained\" style={{ backgroundColor: \"#d10202\", color: \"#fff\", marginBottom: \"5px\" }}>\n                                                    Delete This Template\n                                                </Button>\n                                            </Grid>\n                                        )}\n\n                                    </Grid>\n\n                                </Grid>\n                                <Grid item xs={12}>\n                                        <TextField\n                                                autoFocus\n                                                name=\"rawtext\"\n                                                id=\"rawtext\"\n                                                label=\"SMS Body\"\n                                                fullWidth\n                                                multiline={true}\n                                                rows={20}\n                                                required\n                                                error={rawTextError}\n                                                value={template.rawText || ''}\n                                                onChange={(event) => {\n                                                    settemplate({ ...template, rawText: event.target.value })\n                                                    setRawTextError(false)\n                                                }}\n                                                autoComplete=\"none\"\n                                                variant=\"outlined\"\n                                            />\n\n                                </Grid>\n                            </Grid>\n                        </TabPanel>\n                        <TabPanel value={value} index={1}>\n                            <Grid container direction=\"column\" spacing={2}>\n                                <Grid item>\n                                    <Grid container direction=\"row\" spacing={1} alignItems=\"bottom\">\n                                        <Grid item xs={3}>\n                                            <TextField\n                                                name=\"keyword\"\n                                                id=\"keyword\"\n                                                label=\"Keyword\"\n                                                fullWidth\n                                                required\n                                                error={variableErrors.keywordError}\n                                                helperText={'This is the TEXT within your SMS that you want to be replaced by a value'}\n                                                autoComplete=\"none\"\n                                                variant=\"outlined\"\n                                                value={variable.keyword || ''}\n                                                onChange={(event) => setVariable({ ...variable, keyword: event.target.value })}\n                                            />\n                                        </Grid>\n                                        <Grid item xs={3}>\n                                            <FormControl\n                                                error={variableErrors.builtinValueError}\n                                                fullWidth required variant=\"outlined\" className={classes.formControl}>\n                                                <InputLabel id=\"builtinvalueid\"> Value</InputLabel>\n                                                <Select\n                                                    labelId=\"builtinvalueid\"\n                                                    id=\"builtinvalue\"\n                                                    value={variable.builtinValue || null}\n                                                    onChange={(event) => setVariable({ ...variable, builtinValue: event.target.value })}\n                                                    label=\"Built-in Value\"\n                                                >\n                                                    <MenuItem value={'Patient Name'}>Patient Name</MenuItem>\n                                                    <MenuItem value={'Patient Surname'}>Patient Surname</MenuItem>\n                                                    <MenuItem value={'Patient Fullname'}>Patient Fullname</MenuItem>\n                                                    <MenuItem value={'Today Date'}>Today Date</MenuItem>\n                                                    <MenuItem value={'Appointment DateTime'}>Appointment DateTime</MenuItem>\n                                                </Select>\n                                            </FormControl>\n                                        </Grid>\n                                        <Grid item xs={3}>\n                                            <TextField\n                                                name=\"defaultvalue\"\n                                                id=\"defaultvalue\"\n                                                label=\"Default Value\"\n                                                fullWidth\n                                                autoComplete=\"none\"\n                                                helperText={'* This value is used if the variable is empty.'}\n                                                variant=\"outlined\"\n                                                value={variable.defaultValue || ''}\n                                                onChange={(event) => setVariable({ ...variable, defaultValue: event.target.value })}\n\n                                            />\n                                        </Grid>\n                                        <Grid item xs={3}>\n                                            <Button className={classes.createSMSButton} onClick={addVariableCliced} startIcon={<AddIcon />} variant=\"contained\" color=\"primary\" fullWidth style={{ height: \"55px\" }}>\n                                                Add Variable\n                                            </Button>\n                                        </Grid>\n                                    </Grid>\n                                    </Grid>\n\n                                    <Grid item style={{marginTop:\"20px\", fontWeight:\"500\", height:\"20px\"}}>\n                                         <Divider/>\n                                         <Grid container direction=\"row\" spacing={1} alignItems=\"center\">\n                                                <Grid item xs={3}>\n                                                    {\"Keyword\"}\n                                                </Grid>\n                                                <Grid item xs={3}>\n                                                    {\"Value\"}\n                                                </Grid>\n                                                <Grid item xs={3}>\n                                                    {\"Default Value\"}\n                                                </Grid>\n                                                <Grid item xs={3}>\n                                                </Grid>\n                                            </Grid>\n                                            <Divider/>\n                                      </Grid>      \n\n                                    {(!template.parameters || template.parameters.length === 0) && (\n                                        <Grid item>\n                                            <div style={{width:\"80%\", textAlign:\"center\", color:\"#777\", marginTop:\"50px\", fontSize:\"1rem\"}}>\n                                                 No Parameters Defined\n                                            </div>                                           \n                                        </Grid>    \n                                    )}\n\n                                    {template.parameters && template.parameters.length > 0 && template.parameters.map((item => (\n                                        <Grid item style={{marginTop:\"10px\", fontWeight:\"500\", height:\"30px\"}}>\n                                            <Grid container direction=\"row\" spacing={1} alignItems=\"center\">\n                                                <Grid item xs={3}>\n                                                    {item.keyword}\n                                                </Grid>\n                                                <Grid item xs={3}>\n                                                    {item.builtinValue}\n                                                </Grid>\n                                                <Grid item xs={3}>\n                                                    {item.defaultValue}\n                                                </Grid>\n                                                <Grid item xs={3}>\n                                                    <Tooltip title=\"Delete Parameter\">\n                                                        <IconButton onClick={() => deleteParameter(item.keyword)}>\n                                                            <DeleteIcon color=\"primary\" />\n                                                        </IconButton>\n                                                    </Tooltip>\n                                                </Grid>\n                                            </Grid>\n                                        </Grid>\n                                    )))}\n                            </Grid>\n                        </TabPanel>\n                        <TabPanel value={value} index={2}>\n                             <div style={{fontSize:\"1.2rem\", color:\"#777\", fontWeight:\"500\", marginBottom:\"50px\"}}>\n                                 Here you can set which SMSs (and when) should be sent to the patients automatically by the system :\n                             </div>   \n                             <Paper elevation={3}>\n                            <Grid container direction=\"column\" spacing={2} style={{minHeight:\"300px\", padding:\"10px 15px\"}}>\n                                <Grid item>\n                                    <FormControlLabel\n                                        control={\n                                        <Switch\n                                            checked={template.sendWhenBookedCalendar}\n                                            onChange={(e) => {settemplate({...template,sendWhenBookedCalendar : e.target.checked})}}\n                                            name=\"check-whenbooked\"\n                                            color=\"primary\"\n                                        />\n                                        }\n                                          label={<span style={template.sendWhenBookedCalendar ? {fontWeight:\"500\",color:\"#333\" } : {color:\"#777\"}}>\n                                                Automatically send this SMS to the patients when an appointment is booked on the calendar.\n                                                </span> \n                                            }\n                                    />\n                                </Grid>\n                            </Grid>\n                            </Paper>\n\n                        </TabPanel>\n\n\n                    </div>\n\n                    <Backdrop\n                        className={classes.backdrop}\n                        open={saving}\n                    >\n                        <CircularProgress color=\"inherit\" />\n                    </Backdrop>\n\n\n                    <Dialog\n                        open={openDeleteDialog}\n                        onClose={handleCloseDeleteDialog}\n                        aria-labelledby=\"alert-dialog-title\"\n                        aria-describedby=\"alert-dialog-description\"\n                    >\n                        <DialogTitle style={{ color: \"#d10202\", fontWeight: \"600\" }} id=\"alert-dialog-title\">\n                            {\"Delete template\"}\n                        </DialogTitle>\n                        <DialogContent>\n                            <DialogContentText\n                                style={{ color: \"#000\", fontWeight: \"500\" }}\n                                id=\"alert-dialog-description\"\n                            >\n                                <Grid container spacing={4}>\n                                    <Grid item xs={12}>\n                                        Are you sure you want to delete this template?\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <TextField\n                                            autoFocus\n                                            name=\"templatenameuser\"\n                                            id=\"templatenameuser\"\n                                            label=\"Template Name\"\n                                            placeholder=\"Please Retype The Template Name\"\n                                            fullWidth\n                                            required\n                                            error={templatenameusererror}\n                                            helperText={`* Please retype the template name you want to be deleted.`}\n                                            value={templatenameuser}\n                                            onChange={(event) => {\n                                                settemplatenameuser(event.target.value)\n                                            }}\n                                            autoComplete=\"none\"\n                                            variant=\"outlined\"\n                                        />\n                                    </Grid>\n                                </Grid>\n                            </DialogContentText>\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={handleCloseDeleteDialog} color=\"default\">\n                                Back\n                                 </Button>\n                            <Button onClick={deleteClicked} variant=\"contained\" style={{ backgroundColor: \"#d10202\", color: \"#fff\" }}>\n                                Yes, Delete this template\n                                 </Button>\n                        </DialogActions>\n                    </Dialog>\n\n\n\n                </Dialog>\n            </React.Fragment>\n        </React.Fragment>\n    );\n}\n","import React, { useEffect, useRef, useState } from 'react';\nimport { DataGrid } from '@material-ui/data-grid';\nimport { Button, Checkbox, CircularProgress, Dialog, DialogContent, DialogTitle, Divider, FormControl, FormControlLabel, Grid, Icon, InputLabel, LinearProgress, Link, makeStyles, MenuItem, Paper, Select, SvgIcon, Switch, TextField, Tooltip } from '@material-ui/core';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport { IconButton } from '@material-ui/core';\nimport CheckIcon from '@material-ui/icons/Check';\nimport CloseIcon from '@material-ui/icons/Close';\nimport GlobalState from '../GlobalState';\nimport { getMenuIndex } from '../MenuList';\nimport { FormatDateFromString, FormatDateFromStringShortYear } from './DateFormatter';\nimport AccessibilityIcon from '@material-ui/icons/Accessibility';\n\nimport SearchIcon from '@material-ui/icons/Search';\nimport BookingDialog from './BookingDialog';\nimport AddIcon from '@material-ui/icons/Add';\n\nimport NewReleasesIcon from '@material-ui/icons/NewReleases';\nimport HistoryIcon from '@material-ui/icons/History';\nimport TimelineIcon from '@material-ui/icons/Timeline';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport AutorenewIcon from '@material-ui/icons/Autorenew';\nimport LiveTvIcon from '@material-ui/icons/LiveTv';\nimport PlaylistAddCheckIcon from '@material-ui/icons/PlaylistAddCheck';\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport HourglassEmptyIcon from '@material-ui/icons/HourglassEmpty';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faFileExcel } from \"@fortawesome/free-solid-svg-icons\";\nimport Draggable from 'react-draggable';\n\nimport * as dateformat from 'dateformat';\n\nimport DraftsIcon from '@material-ui/icons/Drafts';\n\nimport DateFnsUtils from '@date-io/date-fns';\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardTimePicker,\n  KeyboardDatePicker,\n} from '@material-ui/pickers';\n\nimport BusinessIcon from '@material-ui/icons/Business';\nimport CreditCardIcon from '@material-ui/icons/CreditCard';\nimport LocalAtmIcon from '@material-ui/icons/LocalAtm';\n\n\nimport ReactHTMLTableToExcel from 'react-html-table-to-excel';\nimport PriceCalculator from './PriceCalculator';\nimport { corporates } from './Corporates';\nimport templateService from './services/SMSTemplateService';\nimport SMSTemplateDialog from './SMSTemplateDialog';\nimport SmsIcon from '@material-ui/icons/Sms';\n\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    marginTop: theme.spacing(0),\n    marginBottom: theme.spacing(1),\n\n  },\n\n  refreshButton: {\n    marginLeft: theme.spacing(2),\n  },\n\n  checkIcon: {\n    color: \"green\"\n  },\n\n  closeIcon: {\n    color: \"red\"\n  },\n\n  RefLink: {\n    cursor: \"pointer\"\n  },\n\n  BookedLabel: {\n    backgroundColor: \"#606060\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  templateAttendedLabel: {\n    backgroundColor: \"#0066aa\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  SampleTakenLabel: {\n    backgroundColor: \"#0066cc\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  ReportSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  ReportCertSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  PositiveLabel: {\n    backgroundColor: \"red\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  HideNowRows: {\n    position: \"absolute\",\n    top: \"40%\",\n    left: \"40%\",\n    width: \"600px\",\n    height: \"300px\",\n    backgroundColor: \"#fafafa\",\n    color: \"#111\",\n    zIndex: \"1000\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyItems: \"center\"\n  },\n\n  ExportToExcelButton:\n  {\n    // marginBottom : \"20px\",\n    color: \"#2f942e\",\n    borderColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"#fafffa\",\n      borderColor: \"#2f942e\",\n    },\n    textDecoration: \"none !important\",\n\n  },\n\n  ExportToExcelButtonInline:\n  {\n    // marginBottom : \"20px\",\n    color: \"#2f942e\",\n    borderColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"#fafffa\",\n      borderColor: \"#2f942e\",\n    },\n    textDecoration: \"none !important\",\n    cursor: \"pointer\",\n    padding: \"10px\"\n\n  },\n\n  table: {\n    width: \"100%\",\n    border: \"1px solid #ddd\",\n    borderCollapse: \"collapse\",\n  },\n\n  th: {\n    border: \"1px solid #ddd\",\n    borderCollapse: \"collapse\",\n    verticalAlign: \"middle\",\n    fontcolor: \"#555\",\n    fontWeight: \"400\",\n    fontSize: \"15px\",\n    paddingTop: \"5px\",\n    paddingBottom: \"5px\",\n    width: \"14%\",\n    paddingLeft: \"5px\",\n  },\n\n  td: {\n    border: \"1px solid #ddd\",\n    borderCollapse: \"collapse\",\n    verticalAlign: \"middle\",\n    paddingLeft: \"5px\",\n  },\n\n  topSelect: {\n    margin: theme.spacing(1),\n    minWidth: 80,\n  },\n\n  notifyIcon: {\n    width: \"16px\",\n    height: \"16px\",\n    borderRadius: \"50%\",\n    backgroundColor: \"rgb(220, 0, 78)\",\n    marginLeft: \"10px\"\n  },\n\n  createSMSButton : {\n    backgroundColor : \"#009e28\",\n    color: \"#fff\",\n    \"&:hover\" : {\n      backgroundColor: \"#00751e\"\n    }\n  }\n\n}));\n\nconst getTableTitle = (str) => {\n\n  if (str === 'today') {\n    return `Today's Bookings`;\n  } else if (str === 'old') {\n    return `Old Bookings`;\n  } else if (str === 'future') {\n    return `Future Bookings`;\n  } else if (str === 'recent') {\n    return `Recent Bookings`;\n  } else if (str === 'live') {\n    return `Live Bookings`;\n  } else if (str === 'completed') {\n    return `Completed Bookings`;\n  } else if (str === 'positive') {\n    return `Positive Results`;\n  } else if (str === 'deleted') {\n    return `Archived Records`;\n  } else if (str === 'late') {\n    return `40 Hours Late`;\n  }\n\n  else {\n    return `SMS Templates`;\n  }\n\n}\n\nconst getTableIcon = (str) => {\n\n  if (str === 'today') {\n    return <NewReleasesIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else if (str === 'old') {\n    return <HistoryIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else if (str === 'future') {\n    return <TimelineIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else if (str === 'recent') {\n    return <AutorenewIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else if (str === 'live') {\n    return <LiveTvIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else if (str === 'completed') {\n    return <PlaylistAddCheckIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else if (str === 'positive') {\n    return <AddCircleOutlineIcon style={{ fontSize: \"2.2rem\" }} />\n  } else if (str === 'deleted') {\n    return <DeleteIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else if (str === 'late') {\n    return <HourglassEmptyIcon style={{ fontSize: \"2.2rem\" }} />;\n  }\n\n  else {\n    return <SmsIcon style={{ fontSize: \"2.2rem\" }} />;\n  }\n\n}\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'}>\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nexport default function SMSTemplatesTable(props) {\n\n  const classes = useStyles();\n\n\n\n  var columns = [\n    {\n      field: \"_id\",\n      headerName: \" \",\n      width: 70,\n      renderCell: (params) => {\n        return (\n          <React.Fragment>\n            <IconButton\n              color=\"primary\"\n              onClick={(event) => openDetailsDialog(event, params.value)}\n            >\n              <SearchIcon />\n            </IconButton>\n          </React.Fragment>\n        );\n      },\n    },\n    { field: 'templateID', headerName: 'Template Name', width: 200 },\n    { field: 'rawText', headerName: 'SMS Body', width: 700 },\n  ];\n\n\n  const [state, setState] = React.useContext(GlobalState);\n\n  const [data, setData] = React.useState({ bookings: [], cachedBookings: [], isFetching: true });\n\n  const [selectedRow, setSelectedRow] = React.useState(null);\n\n  const [selectedBooking, setSelectedBooking] = React.useState(null);\n  const [seeDetailsDialogOpen, setSeeDetailsDialogOpen] = React.useState(false);\n\n  const [corporate, setCorporate] = useState(corporates[0]);\n  const corporateChanged = (event) => {\n    setCorporate(event.target.value);\n  }\n\n\n  const [filter, setFilter] = React.useState('');\n\n\n  const lastPromise = useRef();\n\n  const formatTimeStamp = (timeStamp) => {\n    const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\n    const timeStampStr = dateformat(timeStamp, 'yyyy-mm-dd');\n    if (todayStr === timeStampStr) {\n      return dateformat(timeStamp, \"'Today', h:MM:ss TT\");\n    }\n    else {\n      return dateformat(timeStamp, \"mmm dS, h:MM:ss TT\");\n    }\n  }\n\n  const loadData = () => {\n    var api = templateService.getAllTemplates;\n\n    setData({ bookings: [], cachedBookings: [], isFetching: true });\n\n    // console.log(props)\n\n    const currentPromise = api().then((res) => {\n      // console.log(res)\n      for (var i = 0; i < res.data.length; i++) {\n        res.data[i] = { ...res.data[i], id: i + 1 }\n      }\n      setData({ bookings: [...res.data], cachedBookings: [...res.data], isFetching: false });\n      // return res.data;\n    }).catch(err => {\n      console.error(err)\n    })\n\n    // lastPromise.current = currentPromise;\n\n    // currentPromise.then(\n    //   result => {\n    //     if (currentPromise === lastPromise.current) {\n    //       setData({bookings: [...result], cachedBookings: [...result], isFetching: false});\n    //       setPage(1);\n    //     }\n    //   },\n    //   e => {\n    //     if (currentPromise === lastPromise.current) {\n    //         console.error(e);\n    //         setData({bookings: data.bookings, cachedBookings: data.cachedBookings, isFetching: false});\n    //     }\n    //   });\n\n  }\n\n  useEffect(() => {\n    loadData()\n  },\n    [props.date]);\n\n\n\n\n  useEffect(() => {\n\n    if (filter && filter.trim().length > 0) {\n      var filteredData = data.cachedBookings.filter((element) =>\n\n        (element.name?.toLowerCase().indexOf(filter.toLowerCase()) >= 0) ||\n        (element.surname?.toLowerCase().indexOf(filter.toLowerCase()) >= 0) ||\n        ((element.name + ' ' + element.surname)?.toLowerCase().indexOf(filter.toLowerCase()) >= 0)\n\n\n\n      );\n\n\n      setData({ bookings: [...filteredData], cachedBookings: data.cachedBookings, isFetching: false });\n    } else {\n      setData({ bookings: [...data.cachedBookings], cachedBookings: data.cachedBookings, isFetching: false });\n    }\n  },\n    [filter]);\n\n\n  useEffect(() => {\n\n    loadData()\n\n  }, [state.templateDialogDataChanged]);\n\n\n  const handleCloseSeeDetaisDialog = () => {\n    setSelectedBooking(null);\n    setSeeDetailsDialogOpen(false);\n  }\n\n  const openDetailsDialog = (event, id) => {\n    const template = data.bookings.find(element => element._id === id);\n    if (template) {\n      setSelectedtemplate(template);\n      settemplateDialogTitle(`${template.templateID.toUpperCase()}`)\n      settemplateDialogSaveButtonText(\"Save Changes\")\n      settemplateDialogOpen(true)\n    }\n  }\n\n  const refreshClicked = (event) => {\n    setFilter('');\n    loadData()\n  }\n\n  const filterChanged = (event) => {\n    setFilter(event.target.value);\n  }\n\n  const handleSelectionChanged = (newSelection) => {\n    if (newSelection.length > 0) {\n      setSelectedRow(newSelection.rows[0]);\n    }\n\n  }\n\n  const [page, setPage] = React.useState(1);\n\n\n  const registerNewtemplateClicked = () => {\n    setSelectedtemplate(null)\n    settemplateDialogTitle('Create New SMS Template')\n    settemplateDialogSaveButtonText(\"Save\")\n    settemplateDialogOpen(true)\n  }\n\n  const [selectedtemplate, setSelectedtemplate] = React.useState(null)\n  const [templateDialogOpen, settemplateDialogOpen] = React.useState(false)\n  const [templateDialogTitle, settemplateDialogTitle] = React.useState('')\n  const [templateDialogSaveButtonText, settemplateDialogSaveButtonText] = React.useState('')\n\n\n  const handleClosetemplateDialog = () => {\n    settemplateDialogOpen(false)\n  }\n\n\n  return (\n    <React.Fragment>\n      {data.isFetching && (\n        <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\n          <LinearProgress color=\"primary\" />\n        </div>\n      )}\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"space-between\"\n        alignItems=\"flex-end\"\n      >\n        <Grid item md={4}>\n          <div style={{ textAlign: \"left\", paddingLeft: \"10px\" }}>\n            <Grid\n              container\n              direction=\"row\"\n              justify=\"flex-start\"\n              alignItems=\"center\"\n            >\n              <Grid item>\n                <span style={{ paddingRight: \"15px\", color: \"#555\" }}>\n                  {\" \"}\n                  {getTableIcon(props.date)}{\" \"}\n                </span>\n              </Grid>\n              <Grid item>\n                <span\n                  style={{\n                    fontSize: \"1.4rem\",\n                    fontWeight: \"600\",\n                    color: \"#444\",\n                  }}\n                >\n                  {\" \"}\n                  {getTableTitle(props.date)}{\" \"}\n                </span>\n              </Grid>\n              <Grid item>\n                <Tooltip title=\"Refresh\" placement=\"right\">\n                  <IconButton\n                    color=\"primary\"\n                    className={classes.refreshButton}\n                    onClick={refreshClicked}\n                  >\n                    <RefreshIcon />\n                  </IconButton>\n                </Tooltip>\n              </Grid>\n            </Grid>\n          </div>\n        </Grid>\n\n        <Grid item md={6}>\n          <div style={{ paddingBottom: \"10px\" }}>\n            <Button\n              // className={classes.ExportToExcelButton}\n              variant=\"contained\"\n              className={classes.createSMSButton}\n              color=\"primary\"\n              onClick={registerNewtemplateClicked}\n              startIcon={\n                <AddIcon />\n              }\n            >\n              Create New SMS Template\n              </Button>\n          </div>\n        </Grid>\n\n        {data.isFetching && <div className={classes.HideNowRows}></div>}\n\n        {/* <Grid item md={3}>\n          <TextField\n            variant=\"standard\"\n            value={filter}\n            onChange={filterChanged}\n            margin=\"normal\"\n            size=\"small\"\n            id=\"filter\"\n            label=\"Filter\"\n            name=\"filter\"\n            autoComplete=\"off\"\n          />\n        </Grid> */}\n\n      </Grid>\n\n      <div style={{ height: 700, width: \"100%\" }}>\n        <DataGrid\n          rows={data.bookings}\n          columns={columns}\n          autoPageSize\n          page={page}\n          onPageChange={(params) => {\n            setPage(params.page);\n          }}\n          onSelectionChange={handleSelectionChanged}\n        />\n      </div>\n\n\n      <BookingDialog\n        booking={selectedBooking}\n        open={seeDetailsDialogOpen && selectedBooking && selectedBooking.fullname}\n        onClose={handleCloseSeeDetaisDialog}\n      />\n\n      <SMSTemplateDialog\n        template={selectedtemplate}\n        open={templateDialogOpen}\n        handleClose={handleClosetemplateDialog}\n        title={templateDialogTitle}\n        saveButtonText={templateDialogSaveButtonText}\n      />\n\n    </React.Fragment>\n  );\n}","import DashboardIcon from \"@material-ui/icons/Dashboard\";\nimport NewReleasesIcon from \"@material-ui/icons/NewReleases\";\nimport HistoryIcon from \"@material-ui/icons/History\";\nimport TimelineIcon from \"@material-ui/icons/Timeline\";\nimport DescriptionIcon from \"@material-ui/icons/Description\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport AutorenewIcon from \"@material-ui/icons/Autorenew\";\nimport LiveTvIcon from \"@material-ui/icons/LiveTv\";\nimport PlaylistAddCheckIcon from \"@material-ui/icons/PlaylistAddCheck\";\nimport WarningIcon from \"@material-ui/icons/Warning\";\nimport AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport HourglassEmptyIcon from \"@material-ui/icons/HourglassEmpty\";\nimport DateRangeIcon from \"@material-ui/icons/DateRange\";\nimport EventNoteIcon from \"@material-ui/icons/EventNote\";\nimport AirplanemodeActiveIcon from \"@material-ui/icons/AirplanemodeActive\";\nimport AccessibilityIcon from '@material-ui/icons/Accessibility';\nimport CallIcon from '@material-ui/icons/Call';\nimport MailOutlineIcon from '@material-ui/icons/MailOutline';\nimport SmsIcon from '@material-ui/icons/Sms';\nimport DraftsIcon from '@material-ui/icons/Drafts';\n\n\n// OV Admin ----------------\nimport OVBookingTable from \"./OV/BookingTable\";\nimport OVCalendarView from \"./OV/calendar-admin/CalendarView\";\nimport PatientsTable from \"./OV/PatientsTable\";\nimport EmailTemplstesTable from \"./OV/EmailTemplatesTable\"\nimport SMSTemplatesTable from \"./OV/SMSTemplatesTable\";\n\n//---------------\n\nexport const MenuList_OV_Admin = [\n  {\n    index: 1,\n    id: `recentBookings`,\n    title: `Recent Bookings`,\n    icon: <AutorenewIcon />,\n  },\n  {\n    index: 2,\n    id: `todayBookings`,\n    title: `Today's Bookings`,\n    icon: <NewReleasesIcon />,\n  },\n  {\n    index: 3,\n    id: `oldBookings`,\n    title: `Old Bookings`,\n    icon: <HistoryIcon />,\n  },\n  {\n    index: 4,\n    id: `futureBookings`,\n    title: `Future Bookings`,\n    icon: <TimelineIcon />,\n  },\n  {\n    index: 5,\n    id: `allBookings`,\n    title: `All Bookings`,\n    icon: <DescriptionIcon />,\n  },\n  {\n    index: 6,\n    id: `traceBookings`,\n    title: `Patients to Trace`,\n    icon: <CallIcon />,\n  },\n  {\n    index: 7,\n    id: `deletedBookings`,\n    title: `Archived Records`,\n    icon: <DeleteIcon />,\n  },\n  {\n    index: 8,\n    id: `calendarView`,\n    title: `Calendar View`,\n    icon: <DateRangeIcon />,\n  },\n  {\n    index: 9,\n    id: `patientsList`,\n    title: `Patients`,\n    icon: <AccessibilityIcon />,\n  },\n  {\n    index: 10,\n    id: `emailTemplates`,\n    title: `Email Templates`,\n    icon: <DraftsIcon />,\n  },\n  {\n    index: 11,\n    id: `smsTemplates`,\n    title: `SMS Templates`,\n    icon: <SmsIcon />,\n  },\n\n];\n\n\n\nexport const MenuList_Admin = [\n  { index: 0, id: `dashboard`, title: `Dashboard`, icon: <DashboardIcon /> },\n  {\n    index: 1,\n    id: `recentBookings`,\n    title: `Recent Bookings`,\n    icon: <AutorenewIcon />,\n  },\n  {\n    index: 2,\n    id: `todayBookings`,\n    title: `Today's Bookings`,\n    icon: <NewReleasesIcon />,\n  },\n  {\n    index: 3,\n    id: `oldBookings`,\n    title: `Old Bookings`,\n    icon: <HistoryIcon />,\n  },\n  {\n    index: 4,\n    id: `futureBookings`,\n    title: `Future Bookings`,\n    icon: <TimelineIcon />,\n  },\n  {\n    index: 5,\n    id: `allBookings`,\n    title: `All Bookings`,\n    icon: <DescriptionIcon />,\n  },\n  {\n    index: 6,\n    id: `deletedBookings`,\n    title: `Deleted Records`,\n    icon: <DeleteIcon />,\n  },\n\n  {\n    index: 7,\n    id: `calendarView`,\n    title: `Calendar View`,\n    icon: <DateRangeIcon />,\n  },\n\n  { index: 8, id: `findByRef`, title: `Find By Ref No`, icon: <SearchIcon /> },\n];\n\nexport const MenuList_Gynae = [\n  { index: 0, id: `dashboard`, title: `Dashboard`, icon: <DashboardIcon /> },\n  {\n    index: 1,\n    id: `recentBookings`,\n    title: `Recent Bookings`,\n    icon: <AutorenewIcon />,\n  },\n  {\n    index: 2,\n    id: `todayBookings`,\n    title: `Today's Bookings`,\n    icon: <NewReleasesIcon />,\n  },\n  {\n    index: 3,\n    id: `oldBookings`,\n    title: `Old Bookings`,\n    icon: <HistoryIcon />,\n  },\n  {\n    index: 4,\n    id: `futureBookings`,\n    title: `Future Bookings`,\n    icon: <TimelineIcon />,\n  },\n  {\n    index: 5,\n    id: `allBookings`,\n    title: `All Bookings`,\n    icon: <DescriptionIcon />,\n  },\n  {\n    index: 6,\n    id: `deletedBookings`,\n    title: `Deleted Records`,\n    icon: <DeleteIcon />,\n  },\n  {\n    index: 7,\n    id: `calendarView`,\n    title: `Calendar View`,\n    icon: <DateRangeIcon />,\n  },\n  { index: 8, id: `findByRef`, title: `Find By Ref No`, icon: <SearchIcon /> },\n];\n\nexport const MenuList_GP = [\n  { index: 0, id: `dashboard`, title: `Dashboard`, icon: <DashboardIcon /> },\n  {\n    index: 1,\n    id: `recentBookings`,\n    title: `Recent Bookings`,\n    icon: <AutorenewIcon />,\n  },\n  {\n    index: 2,\n    id: `todayBookings`,\n    title: `Today's Bookings`,\n    icon: <NewReleasesIcon />,\n  },\n  {\n    index: 3,\n    id: `oldBookings`,\n    title: `Old Bookings`,\n    icon: <HistoryIcon />,\n  },\n  {\n    index: 4,\n    id: `futureBookings`,\n    title: `Future Bookings`,\n    icon: <TimelineIcon />,\n  },\n  {\n    index: 5,\n    id: `allBookings`,\n    title: `All Bookings`,\n    icon: <DescriptionIcon />,\n  },\n  {\n    index: 6,\n    id: `deletedBookings`,\n    title: `Deleted Records`,\n    icon: <DeleteIcon />,\n  },\n  {\n    index: 7,\n    id: `calendarView`,\n    title: `Calendar View`,\n    icon: <DateRangeIcon />,\n  },\n  { index: 8, id: `findByRef`, title: `Find By Ref No`, icon: <SearchIcon /> },\n];\n\nexport const MenuList_STD = [\n  { index: 0, id: `dashboard`, title: `Dashboard`, icon: <DashboardIcon /> },\n  {\n    index: 1,\n    id: `recentBookings`,\n    title: `Recent Bookings`,\n    icon: <AutorenewIcon />,\n  },\n  {\n    index: 2,\n    id: `todayBookings`,\n    title: `Today's Bookings`,\n    icon: <NewReleasesIcon />,\n  },\n  {\n    index: 3,\n    id: `oldBookings`,\n    title: `Old Bookings`,\n    icon: <HistoryIcon />,\n  },\n  {\n    index: 4,\n    id: `futureBookings`,\n    title: `Future Bookings`,\n    icon: <TimelineIcon />,\n  },\n  {\n    index: 5,\n    id: `allBookings`,\n    title: `All Bookings`,\n    icon: <DescriptionIcon />,\n  },\n  {\n    index: 6,\n    id: `deletedBookings`,\n    title: `Deleted Records`,\n    icon: <DeleteIcon />,\n  },\n  {\n    index: 7,\n    id: `calendarView`,\n    title: `Calendar View`,\n    icon: <DateRangeIcon />,\n  },\n  { index: 8, id: `findByRef`, title: `Find By Ref No`, icon: <SearchIcon /> },\n];\n\nexport const MenuList_PCR = [\n  { index: 0, id: `dashboard`, title: `Dashboard`, icon: <DashboardIcon /> },\n  {\n    index: 1,\n    id: `recentBookings`,\n    title: `Recent Bookings`,\n    icon: <AutorenewIcon />,\n  },\n  {\n    index: 2,\n    id: `todayBookings`,\n    title: `Today's Bookings`,\n    icon: <NewReleasesIcon />,\n  },\n  {\n    index: 3,\n    id: `liveBookings`,\n    title: `Live Bookings`,\n    icon: <LiveTvIcon />,\n  },\n  { index: 4, id: `oldBookings`, title: `Old Bookings`, icon: <HistoryIcon /> },\n  {\n    index: 5,\n    id: `futureBookings`,\n    title: `Future Bookings`,\n    icon: <TimelineIcon />,\n  },\n  {\n    index: 6,\n    id: `allBookings`,\n    title: `All Bookings`,\n    icon: <DescriptionIcon />,\n  },\n  {\n    index: 7,\n    id: `completedBookings`,\n    title: `Completed Bookings`,\n    icon: <PlaylistAddCheckIcon />,\n  },\n  {\n    index: 8,\n    id: `positiveBookings`,\n    title: `Positive Results`,\n    icon: <AddCircleOutlineIcon />,\n  },\n  {\n    index: 9,\n    id: `latebookings`,\n    title: `40 Hours Late`,\n    icon: <HourglassEmptyIcon />,\n  },\n  {\n    index: 10,\n    id: `deletedBookings`,\n    title: `Deleted Records`,\n    icon: <DeleteIcon />,\n  },\n  {\n    index: 11,\n    id: `trBookings`,\n    title: `TR Bookings`,\n    icon: <AirplanemodeActiveIcon />,\n  },\n  {\n    index: 12,\n    id: `unmatchedRecords`,\n    title: `Unmatched Records`,\n    icon: <WarningIcon />,\n  },\n  {\n    index: 13,\n    id: `calendarView`,\n    title: `Calendar View`,\n    icon: <DateRangeIcon />,\n  },\n  // {\n  //   index: 14,\n  //   id: `adminCalendarView`,\n  //   title: `Admin Calendar`,\n  //   icon: <EventNoteIcon />,\n  // },\n  { index: 15, id: `findByRef`, title: `Find By Ref No`, icon: <SearchIcon /> },\n];\n\nexport const getMenuContent = (role, index) => {\n   if (role === \"ovadmin\") {\n    switch (index) {\n      case 1:\n        return <OVBookingTable date=\"recent\" />;\n      case 2:\n        return <OVBookingTable date=\"today\" />;\n      case 3:\n        return <OVBookingTable date=\"old\" />;\n      case 4:\n        return <OVBookingTable date=\"future\" />;\n      case 5:\n        return <OVBookingTable date=\"all\" />;\n      case 6:\n        return <OVBookingTable date=\"trace\" />; \n      case 7:\n        return <OVBookingTable date=\"deleted\" />;\n      case 8:\n        return <OVCalendarView />;  \n      case 9:\n        return <PatientsTable />;  \n      case 10:\n          return <EmailTemplstesTable />\n      case 11:\n          return <SMSTemplatesTable />\n    \n      default:\n        return `Page Not Found!`;\n    }\n  } else {\n    return `Page Not Found!`;\n  }\n};\n\nexport const getMenuRole = (role) => {\n  switch (role) {\n    case \"ovadmin\":\n      return MenuList_OV_Admin;\n    default:\n      return [];\n  }\n};\n\nexport const getMenuId = (role, index) => {\n  const MenuList = getMenuRole(role);\n  for (var i = 0; i < MenuList.length; i++) {\n    if (MenuList[i].index === index) {\n      return MenuList[i].id;\n    }\n  }\n\n  return `Page Not Found!`;\n};\n\nexport const getMenuIndex = (role, id) => {\n  const MenuList = getMenuRole(role);\n  for (var i = 0; i < MenuList.length; i++) {\n    if (MenuList[i].id === id) {\n      return MenuList[i].index;\n    }\n  }\n\n  return -1;\n};\n","export const getRole = () => {\n    return sessionStorage.getItem('medexadmin-role')\n}\n\nexport const setRole = (role) => {\n    return sessionStorage.setItem('medexadmin-role', role)\n}\n\nexport const clearRole = (role) => {\n    return sessionStorage.removeItem('medexadmin-role')\n}","import React from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Link from \"@material-ui/core/Link\";\nimport Box from \"@material-ui/core/Box\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport GlobalState from \"./GlobalState\";\nimport Alert from \"@material-ui/lab/Alert\";\n\nimport logoImage from \"./images/optimal-vision-logo.png\"\n\nimport {\n  Grid,\n  AppBar,\n  Checkbox,\n  FormControl,\n  FormControlLabel,\n  InputAdornment,\n  InputLabel,\n  OutlinedInput,\n  Paper,\n  Backdrop,\n  CircularProgress,\n} from \"@material-ui/core\";\nimport { IconButton, Toolbar } from \"@material-ui/core\";\nimport { Visibility, VisibilityOff } from \"@material-ui/icons\";\nimport clsx from \"clsx\";\nimport Copyright from \"./CopyRight\";\n\nimport { useHistory } from \"react-router-dom\";\nimport UserService from \"./services/UserService\";\nimport { getMenuId } from \"./MenuList\";\n\nimport { useMediaQuery } from 'react-responsive'\nimport { borderRadius } from \"@material-ui/system\";\nimport { setRole } from \"./Role\";\nimport { getGlobalPath } from \"./GlobalPath\";\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    minHeight: \"100vh\",\n  },\n  image: {\n    backgroundImage: \"url(/images/bg.jpg)\",\n    backgroundRepeat: \"no-repeat\",\n    backgroundColor:\n      theme.palette.type === \"light\"\n        ? theme.palette.grey[50]\n        : theme.palette.grey[900],\n    backgroundSize: \"cover\",\n    backgroundPosition: \"center\",\n  },\n  paper: {\n    // margin: theme.spacing(15, 2),\n    padding: theme.spacing(4,4),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    position: \"relative\"\n    // border: `2px solid ${theme.palette.primary.main}`,\n    // borderRadius: \"8px\"\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n    color: \"#f5f5f5\",\n  },\n\n  margin: {\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n  },\n\n  alert: {\n    width: \"100%\",\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n  },\n\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: \"#fff\",\n  },\n\n  pageBg:{\n    paddingTop: theme.spacing(5),\n   \n    background: \"linear-gradient(274deg, rgba(255,255,255,1) 0%, rgba(255,255,255,1) 5%, rgba(210,210,210,1) 100%)\",\n    height: \"100vh\",\n    margin: 0,\n    padding:0,\n  },\n\n  appbarCenter: {\n    position: \"absolute\",\n    // width: \"260px\",\n    top: \"-40px\",\n    right: \"0\",\n    marginLeft: \"-145px\",\n    alignItems: \"center\",\n    justify: \"center\",\n    display: \"flex\",\n    backgroundColor: \"#fff\",\n    padding: \"5px 20px 15px 20px\",\n    borderRadius: \"8px\"\n  },\n\n  logoImage: {\n    width: \"30px\",\n    height: \"30px\",\n    marginLeft: \"0px\",\n  },\n\n  appbarTitle: {\n    color: \"#00a1c5\",\n    fontSize: \"1.2rem\",\n    fontWeight: \"500\",\n    marginRight: \"15px\",\n  },\n\n  adminPanelLabel: {\n    color: theme.palette.secondary.main, \n    fontWeight: \"600\",\n    marginBottom:\"20px\"\n  }\n\n\n\n\n}));\n\nexport default function SignIn() {\n  const classes = useStyles();\n  const [state, setState] = React.useContext(GlobalState);\n  const isMobile = useMediaQuery({ maxWidth: 1224 })\n\n\n  let history = useHistory();\n\n  const [password, setPassword] = React.useState(\"\");\n\n  const [username, setUsername] = React.useState(\"\");\n\n  const [saveChecked, setSaveChecked] = React.useState(false);\n\n  const [showPassword, setShowPassword] = React.useState(false);\n\n  const [error, setError] = React.useState(null);\n  const [submiting, setSubmiting] = React.useState(false);\n\n  const signIn = () => {\n    setSubmiting(true);\n\n    UserService.signIn({\n      username: username,\n      password: password,\n    })\n      .then((res) => {\n        setSubmiting(false);\n        if (res.data.status === \"OK\") {\n          setError(null);\n          const token = res.data.token;\n          if (saveChecked) {\n            localStorage.setItem(\"ovadmin-auth-token\", token);\n          } else {\n            sessionStorage.setItem(\"ovadmin-auth-token\", token);\n          }\n\n          setState((state) => ({ ...state, signedIn: true }));\n          setRole(res.data.roles[0])\n          setState((state) => ({ ...state, currentMenuIndex: 1 }));\n          history.push(getGlobalPath(`/${getMenuId(res.data.roles[0], 1)}`));\n        } else if (res.data.status === \"FAILED\") {\n          setError(res.data.error);\n        } else {\n          setError(\"Sorry, something went wrong, please try again.\");\n        }\n      })\n      .catch((err) => {\n        setSubmiting(false);\n        console.error(err);\n        setError(\"Sorry, something went wrong, please try again.\");\n      });\n  };\n\n  const usernameChanged = (event) => {\n    setUsername(event.target.value);\n    setError(null);\n  };\n\n  const passwordChanged = (event) => {\n    setPassword(event.target.value);\n    setError(null);\n  };\n\n  const handleClickShowPassword = () => {\n    setShowPassword(!showPassword);\n  };\n\n  const handleMouseDownPassword = (event) => {\n    event.preventDefault();\n  };\n\n  const saveCheckedChanged = (event) => {\n    setSaveChecked(event.target.checked);\n  };\n\n  return (\n    <div className={classes.pageBg}>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n\n        <Paper elevation={20}>\n          <div className={classes.paper}>\n            {/* <div className={classes.appbarCenter}>\n              <span className={classes.appbarTitle}>\n                Medical Express Clinic\n              </span>\n\n              <img\n                className={classes.logoImage}\n                src={getGlobalPath(\"/images/logo.png\")}\n                alt=\"logo image\"\n              />\n            </div> */}\n\n            <img src={logoImage} alt=\"Optimal Vision\" style={{marginBottom:\"20px\"}}/>\n\n            <Avatar className={classes.avatar}>\n              <LockOutlinedIcon />\n            </Avatar>\n            <Typography\n              component=\"h1\"\n              variant=\"h6\"\n              className={classes.adminPanelLabel}\n            >\n              Admin Panel\n            </Typography>\n\n            {error && (\n              <div className={classes.alert}>\n                <Alert severity=\"error\">\n                  {\" \"}\n                  <div style={{ lineHeight: \"1.5rem\", textAlign: \"justify\" }}>\n                    {error}\n                  </div>\n                </Alert>\n              </div>\n            )}\n\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"username\"\n              label=\"Username\"\n              name=\"email\"\n              autoComplete=\"username\"\n              value={username}\n              onChange={usernameChanged}\n              on\n              autoFocus\n            />\n            <FormControl\n              fullWidth\n              required\n              className={clsx(classes.margin, classes.textField)}\n              variant=\"outlined\"\n              onKeyPress={(event) => {\n                if (event.key === \"Enter\") {\n                  signIn();\n                }\n              }}\n            >\n              <InputLabel htmlFor=\"outlined-adornment-password\">\n                {\" \"}\n                Password{\" \"}\n              </InputLabel>\n              <OutlinedInput\n                id=\"outlined-adornment-password\"\n                name=\"outlined-adornment-password\"\n                type={showPassword ? \"text\" : \"password\"}\n                value={password}\n                onChange={passwordChanged}\n                autoComplete=\"current-password\"\n                endAdornment={\n                  <InputAdornment position=\"end\">\n                    <IconButton\n                      tabindex=\"-1\"\n                      aria-label=\"toggle password visibility\"\n                      onClick={handleClickShowPassword}\n                      onMouseDown={handleMouseDownPassword}\n                    >\n                      {showPassword ? <Visibility /> : <VisibilityOff />}\n                    </IconButton>\n                  </InputAdornment>\n                }\n                labelWidth={100}\n              />\n            </FormControl>\n\n            <FormControlLabel\n              style={{ textAlign: \"left\", width: \"100%\" }}\n              control={\n                <Checkbox\n                  value=\"remember\"\n                  color=\"primary\"\n                  checked={saveChecked}\n                  onChange={saveCheckedChanged}\n                />\n              }\n              label=\"Remember me\"\n            />\n            <Button\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={signIn}\n              className={classes.submit}\n            >\n              Sign In\n            </Button>\n          </div>\n        </Paper>\n\n        <Backdrop className={classes.backdrop} open={submiting}>\n          <Grid\n            container\n            direction=\"column\"\n            justify=\"center\"\n            alignItems=\"center\"\n            spacing={2}\n          >\n            <Grid item>\n              <CircularProgress color=\"inherit\" />\n            </Grid>\n            <Grid item>\n              <span style={{ textAlign: \"center\", color: \"#fff\" }}>\n                {\" \"}\n                {/* Please wait ...{\" \"} */}\n              </span>\n            </Grid>\n          </Grid>\n        </Backdrop>\n\n        <Box mt={5} style={{ color: \"#eee\" }}>\n          {/* <Copyright /> */}\n        </Box>\n      </Container>\n    </div>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useHistory } from \"react-router-dom\";\n\nimport {\n  Badge,\n  Divider,\n  Grid,\n  IconButton,\n  ListItemIcon,\n  Tooltip,\n} from \"@material-ui/core\";\nimport GlobalState from \"./GlobalState\";\nimport { List, ListItem } from \"@material-ui/core\";\n\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport { getMenuRole, getMenuId } from \"./MenuList\";\nimport { border, borderBottom } from \"@material-ui/system\";\nimport { getGlobalPath } from \"./GlobalPath\";\n\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\",\n  },\n  fixedHeight: {\n    height: 240,\n  },\n\n  icon: {\n    fontSize: \"1rem\",\n    color: \"#777\",\n    cursor: \"pointer\",\n    paddingTop: \"10px\",\n    paddingBottom: \"8px\",\n    borderBottom: \"1px solid #eee\",\n  },\n\n  iconSelected: {\n    color: \"#fff\",\n    backgroundColor:  theme.palette.primary.main,\n    transition: \"all 0.1s ease-in-out\"\n  },\n\n  menuText: {\n    fontSize: \"1rem\",\n    fontWeight: \"500\"\n  },\n\n  Badge:{\n    backgroundColor: \"rgb(220, 0, 78)\",\n    color: \"#fff\",\n    fontWeight: \"600\",\n    textAlign:\"center\",\n    borderRadius: \"50%\",\n    fontSize: \"0.85rem\",\n    lineHeight: \"0.85rem\",\n    padding:\"7px\",\n    marginTop:\"9px\",\n    width:\"28px\"\n\n  }\n}));\n\nexport default function MyMenu() {\n  const classes = useStyles();\n  const [state, setState] = React.useContext(GlobalState);\n\n  const [selectedIndex, setSelectedIndex] = React.useState(0);\n\n  let history = useHistory();\n\n  const updateShouldRefundsCount = async () =>\n  {\n  }\n\n  useEffect(() => {\n    setSelectedIndex(state.currentMenuIndex);\n    updateShouldRefundsCount()\n  }, [state.currentMenuIndex]);\n\n  const handleListItemClick = (event, index) => {\n    setSelectedIndex(index);\n    setState((state) => ({ ...state, currentMenuIndex: index }));\n\n    history.push(getGlobalPath(`/${getMenuId(state.role,index)}`));\n  };\n\n  return (\n    <React.Fragment>\n      <List>\n        {state.role &&\n          getMenuRole(state.role).map(\n            (item) =>\n              !item.hidden && (\n                // <ListItem button selected={selectedIndex === item.index} onClick={(event) => handleListItemClick(event, item.index)}>\n                // <ListItemIcon>\n                //     {item.icon}\n                // </ListItemIcon>\n                // <ListItemText primary={`${item.title}`} />\n                // </ListItem>\n                <React.Fragment key={`${item.id}`}>\n                  <div\n                    key={`${item.id}`}\n                    className={clsx(\n                      classes.icon,\n                      selectedIndex === item.index && classes.iconSelected\n                    )}\n                    onClick={(event) => handleListItemClick(event, item.index)}\n                  >\n                    <Grid\n                      container\n                      direction=\"row\"\n                      justify=\"flex-start\"\n                      alignItems=\"flex-start\"\n                      spacing={3}\n                      style={{paddingLeft:\"15px\"}}\n                    >\n                      <Grid item>{item.icon}</Grid>\n\n                      <Grid item style={{textAlign:\"left\"}}>\n                        <span\n                          className={classes.menuText}\n                        >{`${item.title}`}</span>{\" \"}\n                      </Grid>\n\n\n                    </Grid>\n                  </div>\n                </React.Fragment>\n              )\n          )}\n      </List>\n    </React.Fragment>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Box from \"@material-ui/core/Box\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Container from \"@material-ui/core/Container\";\nimport Link from \"@material-ui/core/Link\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\n\nimport { Avatar, Button, Grid, Tooltip, withStyles } from \"@material-ui/core\";\nimport GlobalState from \"./GlobalState\";\nimport MyMenu from \"./Menu\";\nimport { getMenuContent, getMenuId, getMenuIndex } from \"./MenuList\";\n\nimport { useLocation, useHistory } from \"react-router-dom\";\nimport Copyright from \"./CopyRight\";\nimport { useMediaQuery } from \"react-responsive\";\nimport PersonOutlineIcon from \"@material-ui/icons/PersonOutline\";\nimport AppsIcon from \"@material-ui/icons/Apps\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Menu from \"@material-ui/core/Menu\";\nimport dateformat from \"dateformat\";\nimport { getRole, setRole, clearRole } from \"./Role\";\nimport { getGlobalPath, getMenuIdFromGlobalPath } from \"./GlobalPath\";\n\nimport logoImage from \"./images/optimal-vision-logo.png\"\n\nconst drawerWidth = 240;\n\nconst StyledMenu = withStyles((theme) => ({\n  paper: {\n    marginTop: \"10px\",\n    // marginRight: \"5px\",\n    width: \"200px\",\n    height: \"200px\",\n    border: `1px solid #ddd`,\n    borderRadius: \"10px\",\n    paddingTop: \"10px\",\n  },\n}))((props) => (\n  <Menu\n    elevation={4}\n    getContentAnchorEl={null}\n    anchorOrigin={{\n      vertical: \"bottom\",\n      horizontal: \"center\",\n    }}\n    transformOrigin={{\n      vertical: \"top\",\n      horizontal: \"center\",\n    }}\n    {...props}\n  />\n));\n\nconst StyledMenuApps = withStyles((theme) => ({\n  paper: {\n    marginTop: \"5px\",\n    // marginRight: \"5px\",\n    width: \"280px\",\n    height: \"280px\",\n    border: `1px solid #ddd`,\n    borderRadius: \"10px\",\n    padding: \"10px\",\n  },\n}))((props) => (\n  <Menu\n    elevation={4}\n    getContentAnchorEl={null}\n    anchorOrigin={{\n      vertical: \"bottom\",\n      horizontal: \"center\",\n    }}\n    transformOrigin={{\n      vertical: \"top\",\n      horizontal: \"center\",\n    }}\n    {...props}\n  />\n));\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    padding: \"0 8px\",\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    // marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: \"none\",\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: \"relative\",\n    whiteSpace: \"nowrap\",\n    overflowX: \"hidden\",\n    width: drawerWidth,\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n\n    [theme.breakpoints.down(\"sm\")]: {\n      opacity: 0.9,\n    },\n  },\n  drawerPaperClose: {\n    overflowX: \"hidden\",\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up(\"sm\")]: {\n      width: theme.spacing(9),\n    },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: \"100vh\",\n    overflow: \"auto\",\n  },\n  container: {\n    paddingTop: theme.spacing(2),\n    paddingBottom: theme.spacing(2),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\",\n  },\n  fixedHeight: {\n    height: 240,\n  },\n\n  appbarTitle: {\n    color: \"#00a1c5\",\n    fontSize: \"1.2rem\",\n    fontWeight: \"500\",\n    marginRight: \"15px\",\n  },\n\n  appbarCenter: {\n    position: \"fixed\",\n    width: \"260px\",\n    top: \"10px\",\n    left: \"50%\",\n    marginLeft: \"-130px\",\n    alignItems: \"center\",\n    justify: \"center\",\n    display: \"flex\",\n  },\n\n  logoImage: {\n    width: \"204px\",\n    height: \"45px\",\n    // marginLeft: \"0px\",\n  },\n\n  logoImageMenu: {\n    width: \"136px\",\n    height: \"30px\",\n  },\n\n\n  userAvatar: {\n    backgroundColor: \"#fff\",\n    borderColor: \"#aaa\",\n    border: \"1px solid\",\n    color: \"#aaa\",\n    cursor: \"pointer\",\n  },\n\n  userAvatarSelected: {\n    backgroundColor: \"#fff\",\n    borderColor: theme.palette.primary.main,\n    border: \"1px solid\",\n    color: theme.palette.primary.main,\n    cursor: \"pointer\",\n  },\n\n  userAvatarBig: {\n    backgroundColor: \"#fff\",\n    borderColor: theme.palette.primary.main,\n    border: \"1px solid\",\n    color: theme.palette.primary.main,\n    width: \"60px\",\n    height: \"60px\",\n  },\n\n  appBarText: {\n    color: \"#888\",\n    [theme.breakpoints.down(\"sm\")]: {\n      display: \"none\",\n    },\n  },\n\n  appBarAppsIcon: {\n    // color: \"#888\",\n    cursor: \"pointer\",\n    fontSize: \"1.8rem\",\n  },\n\n  appBarAppsIconSelected: {\n    cursor: \"pointer\",\n    fontSize: \"1.8rem\",\n    color: theme.palette.primary.main,\n  },\n\n  usernameLabel: {\n    fontSize: \"1.2rem\",\n    color: theme.palette.primary.main,\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n  },\n\n  lastLoginLabel: {\n    color: \"#777\",\n    paddingTop: \"5px\",\n  },\n\n  appsLogo: {\n    width: \"70px\",\n    height: \"70px\",\n  },\n\n  appsBox: {\n    cursor: \"pointer\",\n    transition: \"all 0.1s ease-in-out\",\n    padding: \"2px\",\n    borderBottom: `5px solid #fff`,\n    borderRadius: \"5px\",\n    // border: \"2px solid #fff\",\n    \"&:hover\": {\n      //      border: `2px solid ${theme.palette.primary.main}`,\n      //      borderRadius: \"10px\",\n      borderBottom: `5px solid ${theme.palette.primary.main}`,\n      transition: \"all 0.1s ease-in-out\",\n    },\n  },\n\n  appsBoxSelected: {\n    cursor: \"pointer\",\n    transition: \"all 0.1s ease-in-out\",\n    padding: \"2px\",\n    borderBottom: `5px solid${theme.palette.primary.light}`,\n    borderRadius: \"5px\",\n    // border: \"2px solid #fff\",\n    \"&:hover\": {\n      //      border: `2px solid ${theme.palette.primary.main}`,\n      //      borderRadius: \"10px\",\n      borderBottom: `5px solid ${theme.palette.primary.light}`,\n      transition: \"all 0.1s ease-in-out\",\n    },\n  },\n\n  appsAdminLabel: {\n    color: \"#0264d4\",\n    fontWeight: \"600\",\n    fontSize: \"0.95rem\",\n    marginTop: \"-10px\",\n  },\n\n  appsPCRLabel: {\n    color: \"#4faef7\",\n    fontWeight: \"600\",\n    fontSize: \"0.95rem\",\n    marginTop: \"-10px\",\n  },\n\n  appsGynaeLabel: {\n    color: \"#e83caf\",\n    fontWeight: \"600\",\n    fontSize: \"0.95rem\",\n    marginTop: \"-10px\",\n  },\n\n  appsGPLabel: {\n    color: \"#f68529\",\n    fontWeight: \"600\",\n    fontSize: \"0.95rem\",\n    marginTop: \"-10px\",\n  },\n\n  appsSTDLabel: {\n    color: \"#f68529\",\n    fontWeight: \"600\",\n    fontSize: \"0.95rem\",\n    marginTop: \"-10px\",\n  },\n\n\n  \n\n  appsInToolbar: {\n    position: \"fixed\",\n    left: \"60px\",\n    top: \"-5px\",\n    height: \"65px\",\n    width: \"200px\",\n    overflow: \"hidden\",\n  },\n}));\n\nexport default function Dashboard() {\n  const classes = useStyles();\n  const [state, setState] = React.useContext(GlobalState);\n  const isMobile = useMediaQuery({ maxWidth: 768 });\n\n  const [open, setOpen] = React.useState(isMobile ? false : true);\n\n  const [currentMenuIndex, setCurrentMenuIndex] = React.useState(0);\n\n  const [anchorUserAvatar, setAnchorUserAvatar] = React.useState(null);\n  const handleUserAvatarClick = (event) => {\n    setAnchorUserAvatar(event.currentTarget);\n  };\n  const handleUserAvatarClose = () => {\n    setAnchorUserAvatar(null);\n  };\n\n  const [anchorApps, setAnchorApps] = React.useState(null);\n  const handleAppsClick = (event) => {\n    setAnchorApps(event.currentTarget);\n  };\n  const handleAppsClose = () => {\n    setAnchorApps(null);\n  };\n\n  const history = useHistory();\n\n  let location = useLocation();\n  React.useEffect(() => {\n    if (!state.role) return;\n    const index = getMenuIndex(\n      state.role,\n      getMenuIdFromGlobalPath(location.pathname)\n    );\n    setState((state) => ({ ...state, currentMenuIndex: index }));\n  }, [location]);\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, []);\n\n  useEffect(() => {\n    setCurrentMenuIndex(state.currentMenuIndex);\n    if (isMobile) {\n      setOpen(false);\n    }\n  }, [state.currentMenuIndex]);\n\n  const handleDrawerOpen = () => {\n    setOpen(!open);\n  };\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n\n  const handleLogout = () => {\n    localStorage.removeItem(\"ovadmin-auth-token\");\n    sessionStorage.removeItem(\"ovadmin-auth-token\");\n    clearRole();\n\n    setState((state) => ({ signedIn: false }));\n    history.replace(\"./login\");\n  };\n\n  const appsClicked = (role) => {\n    setRole(role);\n    setState((state) => ({ ...state, role: role }));\n    history.push(getGlobalPath(`/${getMenuId(role, 0)}`));\n    handleAppsClose();\n  };\n\n  const getAppsLogo = (role) => {\n    switch (role) {\n      case \"admin\":\n        return (\n          <img\n            src={getGlobalPath(\"/images/admin.png\")}\n            className={classes.appsLogo}\n          />\n        );\n      case \"pcr\":\n        return (\n          <img\n            src={getGlobalPath(\"/images/corona.png\")}\n            className={classes.appsLogo}\n          />\n        );\n\n      case \"gynae\":\n        return (\n          <img\n            src={getGlobalPath(\"/images/woman.png\")}\n            className={classes.appsLogo}\n          />\n        );\n\n        case \"gp\":\n        return (\n          <img\n            src={getGlobalPath(\"/images/doctor.png\")}\n            className={classes.appsLogo}\n          />\n        ); \n\n        case \"std\":\n          return (\n            <img\n              src={getGlobalPath(\"/images/std-icon.png\")}\n              className={classes.appsLogo}\n            />\n          ); \n\n      default:\n        return null;\n    }\n  };\n\n  const getAppsLabel = (role) => {\n    switch (role) {\n      case \"admin\":\n        return <div className={classes.appsAdminLabel}> {\"Admin\"} </div>;\n      case \"pcr\":\n        return <div className={classes.appsPCRLabel}> {\"PCR\"} </div>;\n      case \"gynae\":\n        return <div className={classes.appsGynaeLabel}> {\"Gynae\"} </div>;\n        case \"gp\":\n          return <div className={classes.appsGPLabel}> {\"GP\"} </div>;\n          case \"std\":\n            return <div className={classes.appsSTDLabel}> {\"STD\"} </div>;\n  \n      default:\n        return null;\n    }\n  };\n\n  return (\n    <React.Fragment>\n      {state.userId && state.role && (\n        <React.Fragment>\n          <div className={classes.root}>\n            <CssBaseline />\n            <AppBar\n              style={{ backgroundColor: \"#fff\", color: \"#555\", height: \"60px\" }}\n              position=\"absolute\"\n              className={clsx(\n                classes.appBar,\n                false && open && classes.appBarShift\n              )}\n            >\n              <Toolbar className={classes.toolbar}>\n                <IconButton\n                  edge=\"start\"\n                  color=\"inherit\"\n                  aria-label=\"open drawer\"\n                  onClick={handleDrawerOpen}\n                  className={clsx(classes.menuButton)}\n                >\n                  <MenuIcon />\n                </IconButton>\n\n                <div className={classes.appsInToolbar}>\n                  <Grid container direction=\"row\" alignItems=\"center\">\n                    <Grid item>{getAppsLogo(state.role)}</Grid>\n                    <Grid item>\n                      <div style={{ paddingTop: \"8px\" }}>\n                        {getAppsLabel(state.role)}\n                      </div>\n                    </Grid>\n                  </Grid>\n                </div>\n\n                <div className={classes.appbarCenter}>\n                  {!isMobile && (\n                    <React.Fragment>\n                      <img\n                        className={classes.logoImage}\n                        src={logoImage}\n                        alt=\"logo image\"\n                      />\n                    </React.Fragment> \n                   )}\n                </div>\n\n                <div\n                  style={{\n                    display: \"flex\",\n                    justifyContent: \"flex-end\",\n                    width: \"100%\",\n                    paddingLeft: \"2%\",\n                  }}\n                >\n                  <Grid\n                    container\n                    spacing={2}\n                    direction=\"row-reverse\"\n                    justify=\"flex-start\"\n                    alignItems=\"center\"\n                  >\n                    <Grid item>\n                      <Avatar\n                        className={\n                          anchorUserAvatar\n                            ? classes.userAvatarSelected\n                            : classes.userAvatar\n                        }\n                        onClick={handleUserAvatarClick}\n                      >\n                        <IconButton>\n                          <PersonOutlineIcon />\n                        </IconButton>\n                      </Avatar>\n                    </Grid>\n\n                    {state.userId?.roles.find((e) => e === \"admin\") && (\n                      <Grid item>\n                        <IconButton onClick={handleAppsClick}>\n                          <AppsIcon\n                            className={\n                              anchorApps\n                                ? classes.appBarAppsIconSelected\n                                : classes.appBarAppsIcon\n                            }\n                          />\n                        </IconButton>\n                      </Grid>\n                    )}\n                  </Grid>\n                </div>\n              </Toolbar>\n            </AppBar>\n\n            <StyledMenu\n              id=\"user-avatar-menu\"\n              anchorEl={anchorUserAvatar}\n              keepMounted\n              open={Boolean(anchorUserAvatar)}\n              onClose={handleUserAvatarClose}\n            >\n              <Grid\n                container\n                direction=\"column\"\n                justify=\"center\"\n                alignItems=\"center\"\n              >\n                <Grid item>\n                  <Avatar className={classes.userAvatarBig}>\n                    <PersonOutlineIcon style={{ fontSize: \"2.5rem\" }} />\n                  </Avatar>\n                </Grid>\n                <Grid item>\n                  <div className={classes.usernameLabel}>\n                    {\" \"}\n                    {state.userId?.username}{\" \"}\n                  </div>\n                </Grid>\n                {/* <Grid item>\n                  <span style={{ color: \"#999\", fontSize: \"0.85rem\" }}>\n                    Logged in at :\n                  </span>\n                </Grid>\n                <Grid item>\n                  <div className={classes.lastLoginLabel}>\n                    {dateformat(state.userId?.lastLoginTimeStamp)}\n                  </div>\n                </Grid> */}\n\n                <Grid item>\n                  <Button\n                    onClick={handleLogout}\n                    variant=\"outlined\"\n                    color=\"secondary\"\n                    style={{\n                      marginTop: \"30px\",\n                      width: \"150px\",\n                      borderRadius: \"30px\",\n                    }}\n                  >\n                    Logout\n                  </Button>\n                </Grid>\n              </Grid>\n            </StyledMenu>\n\n            <StyledMenuApps\n              id=\"apps-menu\"\n              anchorEl={anchorApps}\n              keepMounted\n              open={Boolean(anchorApps)}\n              onClose={handleAppsClose}\n            >\n              <Grid container spacing={1}>\n                <Grid item>\n                  <Grid\n                    container\n                    direction=\"column\"\n                    justify=\"center\"\n                    alignItems=\"center\"\n                    className={\n                      state.role === \"admin\"\n                        ? classes.appsBoxSelected\n                        : classes.appsBox\n                    }\n                    onClick={() => appsClicked(\"admin\")}\n                  >\n                    <Grid item>{getAppsLogo(\"admin\")}</Grid>\n                    <Grid item>{getAppsLabel(\"admin\")}</Grid>\n                  </Grid>\n                </Grid>\n\n                <Grid item>\n                  <Grid\n                    container\n                    direction=\"column\"\n                    justify=\"center\"\n                    alignItems=\"center\"\n                    className={\n                      state.role === \"pcr\"\n                        ? classes.appsBoxSelected\n                        : classes.appsBox\n                    }\n                    onClick={() => appsClicked(\"pcr\")}\n                  >\n                    <Grid item>{getAppsLogo(\"pcr\")}</Grid>\n                    <Grid item>{getAppsLabel(\"pcr\")}</Grid>\n                  </Grid>\n                </Grid>\n\n                <Grid item>\n                  <Grid\n                    container\n                    direction=\"column\"\n                    justify=\"center\"\n                    alignItems=\"center\"\n                    className={\n                      state.role === \"gynae\"\n                        ? classes.appsBoxSelected\n                        : classes.appsBox\n                    }\n                    onClick={() => appsClicked(\"gynae\")}\n                  >\n                    <Grid item>{getAppsLogo(\"gynae\")}</Grid>\n                    <Grid item>{getAppsLabel(\"gynae\")}</Grid>\n                  </Grid>\n                </Grid>\n\n                <Grid item>\n                  <Grid\n                    container\n                    direction=\"column\"\n                    justify=\"center\"\n                    alignItems=\"center\"\n                    className={\n                      state.role === \"gp\"\n                        ? classes.appsBoxSelected\n                        : classes.appsBox\n                    }\n                    onClick={() => appsClicked(\"gp\")}\n                  >\n                    <Grid item>{getAppsLogo(\"gp\")}</Grid>\n                    <Grid item>{getAppsLabel(\"gp\")}</Grid>\n                  </Grid>\n                </Grid>\n\n                <Grid item>\n                  <Grid\n                    container\n                    direction=\"column\"\n                    justify=\"center\"\n                    alignItems=\"center\"\n                    className={\n                      state.role === \"std\"\n                        ? classes.appsBoxSelected\n                        : classes.appsBox\n                    }\n                    onClick={() => appsClicked(\"std\")}\n                  >\n                    <Grid item>{getAppsLogo(\"std\")}</Grid>\n                    <Grid item>{getAppsLabel(\"std\")}</Grid>\n                  </Grid>\n                </Grid>\n\n              </Grid>\n            </StyledMenuApps>\n\n            <Drawer\n              variant={isMobile ? \"temporary\" : \"persistent\"}\n              classes={{\n                paper: clsx(\n                  classes.drawerPaper,\n                  !open && classes.drawerPaperClose\n                ),\n              }}\n              open={open}\n            >\n              <div className={classes.toolbarIcon}>\n                <React.Fragment>\n                  <img\n                    className={classes.logoImageMenu}\n                    src={logoImage} \n                    alt=\"logo image\"\n\n                  />\n                </React.Fragment>\n                <IconButton onClick={handleDrawerClose}>\n                  <ChevronLeftIcon />\n                </IconButton>\n              </div>\n              <Divider />\n\n              <MyMenu />\n            </Drawer>\n\n            <main className={classes.content}>\n              <div className={classes.appBarSpacer} />\n              <Container\n                maxWidth={isMobile ? \"xs\" : \"xl\"}\n                className={classes.container}\n              >\n                {currentMenuIndex > 0 && getMenuContent(state.role, currentMenuIndex)}\n              </Container>\n            </main>\n          </div>\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n}\n","import UserService from \"./services/UserService\";\n\nexport async function getUserIdFromToken(token)\n{\n    try{\n       const res  = await UserService.checkToken({token: token})\n       if (res.data.status === 'OK')\n        {\n            return {username: res.data.userId, forename: res.data.forename, surname: res.data.surname, roles:res.data.roles, lastLoginTimeStamp: res.data.lastLoginTimeStamp}\n        }\n       else\n        {\n            return null\n        }\n    }\n    catch(err)\n    {\n        return null\n    }\n  \n}","import React from 'react';\n\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport GlobalState from './GlobalState';\n\n\n\n\nimport SignIn from './SignIn';\nimport Dashboard from './Dashboard';\n\nimport { useLocation, useHistory} from \"react-router-dom\";\nimport { getUserIdFromToken } from './TokenVerifier';\nimport UserService from './services/UserService';\nimport { getMenuId } from './MenuList';\nimport { getRole, setRole } from './Role';\nimport { getGlobalPath } from './GlobalPath';\n\n\nconst useStyles = makeStyles((theme) => ({\n\n    appBar: {\n        position: 'static',\n        backgroundColor: \"#333\",\n        color: \"#fff\",\n        //alignItems: 'center'\n    \n      },\n\n      signOutButton:{\n        color: \"#fff\",\n        marginRight : \"20px\",\n        fontWeight: \"500\"\n      },\n\n      title: {\n        flexGrow : 1\n      }\n\n\n}));\n\nexport default function Navigator() {\n\n    const classes = useStyles();\n    const [state, setState] = React.useContext(GlobalState);\n\n    const [loaded, setLoaded] = React.useState(false)\n\n    let history = useHistory();\n\n    const handleSignOut = () =>\n    {\n      setState(state => ({...state, signedIn: false}));\n\n    }\n\n    let location = useLocation();\n\n    React.useEffect(() => {\n\n      const checkToken = async () =>\n      {\n        const authToken = localStorage.getItem('ovadmin-auth-token') || sessionStorage.getItem('ovadmin-auth-token');\n        UserService.setToken(authToken)\n\n         if (!authToken)\n        {\n          setState(state => ({...state, signedIn: false, signedUp: false, forgotPassword: false}));\n          setLoaded(true)\n          history.push(getGlobalPath('/login'));\n        }\n        else\n        {\n           const userId = await getUserIdFromToken(authToken);\n           if (!userId)\n           {\n              setState(state => ({...state, signedIn: false, signedUp: false, forgotPassword: false}));\n              history.push(getGlobalPath('/login'));\n           }\n           else if (location.pathname === getGlobalPath('/') || location.pathname === getGlobalPath('/#') || location.pathname.startsWith(getGlobalPath('/login')))\n           {\n            if (!getRole())\n            {\n             setRole(userId.roles[0])\n            }\n             setState(state => ({...state, signedIn: true, signedUp: false, forgotPassword: false, userId: userId, role: getRole()}));\n            \n             history.push(getGlobalPath(`/${getMenuId(getRole(),1)}`));\n           }\n           else\n           {\n              if (!getRole())\n              {\n               setRole(userId.roles[0])\n              }\n             setState(state => ({...state, signedIn: true, userId: userId, role: getRole()}));\n           }\n\n           setLoaded(true)\n        }\n      }\n\n      checkToken();\n   \n    }, [location.pathname]);\n\n    const getComponentFromState = () =>\n    {\n\n      if (state.signedIn)\n      {\n        return <Dashboard/>\n      }\n      else\n      {\n          return <SignIn/>    \n      }\n    }\n\n    return (\n        <React.Fragment>\n            <CssBaseline />\n\n            {\n              loaded && (\n                getComponentFromState()\n              )\n            }\n        \n        </React.Fragment>\n    );\n}","import React, { Fragment, Suspense, lazy } from \"react\";\nimport { MuiThemeProvider, CssBaseline } from \"@material-ui/core\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport theme from \"./theme\";\nimport GlobalStyles from \"./GlobalStyles\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport GlobalState from \"./GlobalState\";\nimport Navigator from './Navigator';\n\n\n\n\n// Configure JSS\n\n\nfunction App() {\n  const [state, setState] = React.useState({currentMenuIndex:1});\n\n  return (\n    <GlobalState.Provider value={[state, setState]}>\n      <BrowserRouter>\n        <MuiThemeProvider theme={theme}>\n          <CssBaseline />\n          <GlobalStyles />\n\n       \n\n              <Navigator/>\n\n       \n\n\n        </MuiThemeProvider>\n      </BrowserRouter>\n    </GlobalState.Provider>\n  );\n}\n\nserviceWorker.register();\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <App />,\n  document.getElementById(\"root\")\n);\n","\n\n\nconst FormatDateFromString = (str) =>\n{\n    if (!str)\n    return ''\n    \n    return `${str.substr(8,2)}-${str.substr(5,2)}-${str.substr(0,4)}`;\n}\n\nconst FormatDateFromStringWithSlash = (str) =>\n{\n    return `${str.substr(8,2)}/${str.substr(5,2)}/${str.substr(0,4)}`;\n}\n\nconst RevertFormatDateFromString = (str) =>\n{\n    if (!str)\n    return ''\n\n    return `${str.substr(6,4)}-${str.substr(3,2)}-${str.substr(0,2)}`;\n}\n\n\nconst FormatDateFromStringShortYear = (str) =>\n{\n    if (!str)\n    return ''\n\n    return `${str.substr(8,2)}-${str.substr(5,2)}-${str.substr(2,2)}`;\n}\n\n\n\nmodule.exports = {\n    FormatDateFromString : FormatDateFromString,\n    FormatDateFromStringShortYear : FormatDateFromStringShortYear,\n    RevertFormatDateFromString: RevertFormatDateFromString,\n    FormatDateFromStringWithSlash: FormatDateFromStringWithSlash\n}"],"sourceRoot":""}