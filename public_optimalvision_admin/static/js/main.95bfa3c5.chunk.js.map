{"version":3,"sources":["OV/PriceCalculator.js","theme.js","GlobalStyles.js","serviceWorker.js","GlobalState.js","images/optimal-vision-logo.png","GlobalPath.js","services/api.js","services/UserService.js","OV/services/api.js","OV/services/BookService.js","OV/services/PDFService.js","OV/Corporates.js","OV/PayDialog.js","Admin/calendar-admin/colors.js","services/InvoiceService.js","InvoiceDialog.js","OV/BookingDialog.js","OV/BookingTable.js","OV/calendar-admin/colors.js","OV/calendar-admin/MonthViewCell.js","OV/calendar-admin/calendar-util.js","OV/calendar-admin/MonthView.js","OV/calendar-admin/WeekViewCell.js","OV/calendar-admin/WeekView.js","OV/NewBookingDialog.js","OV/DateField.js","OV/services/PatientService.js","OV/services/EmailTemplateService.js","OV/PatientDialog.js","OV/NewOVBookingDialog.js","OV/DateDialog.js","OV/ChooseClinicDialog.js","OV/EditOVBookingDialog.js","OV/calendar-admin/DayViewCell.js","OV/calendar-admin/DayView.js","OV/calendar-admin/CalendarView.js","OV/PatientsTable.js","OV/EmailTemplateDialog.js","OV/EmailTemplatesTable.js","MenuList.js","Role.js","SignIn.js","Menu.js","Dashboard.js","TokenVerifier.js","Navigator.js","App.js","index.js","OV/DateFormatter.js"],"names":["calculatePrice","person","price","tr","certificate","antiBodyTest","module","exports","calculateTotalPrice","persons","totalPrice","i","length","darkBlack","borderColor","theme","createMuiTheme","palette","primary","main","light","contrastText","secondary","common","black","warning","dark","tonalOffset","background","default","spacing","breakpoints","values","xl","lg","md","sm","xs","border","borderWidth","overrides","MuiExpansionPanel","root","position","MuiTableCell","paddingLeft","paddingRight","borderBottom","MuiDivider","backgroundColor","height","MuiPrivateNotchedOutline","MuiListItem","divider","MuiDialog","paper","width","maxWidth","marginLeft","marginRight","MuiTooltip","tooltip","fontSize","MuiExpansionPanelDetails","enGB","responsiveFontSizes","withStyles","outline","color","white","paddingTop","paddingBottom","down","up","display","flexWrap","marginTop","marginBottom","withTheme","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","GlobalState","React","createContext","authToken","backendAPI","getGlobalPath","path","axios","create","baseURL","headers","UserService","setToken","token","signIn","payload","API","post","checkToken","BookService","addNewBooking","sendRegFormEmail","bookingId","payBooking","paymentMethod","corporate","unPayBooking","getShouldRefundsCount","get","refundBooking","getBookingsStatsByDateStr","dateStr","getBookingsCountByDateStr","getAllBookingsCountAll","getBookingsCountByDateStrandTime","time","source","cancelToken","getBookingsByDateStrandTime","getAllBookingsCountByDateStr","getAllBookingsCountByDateStrandTime","getAllBookingsByDateStrandTime","changeBackToBookingMade","id","changeToPatientAttended","updateBooking","updateBookingTime","deleteBooking","unDeleteBooking","moveToTraceFolderBooking","undoMoveToTraceFolderBooking","getBookingsByRef","ref","getBookingById","getAllBookings","limit","getTraceFolderBookings","getDeletedBookings","getTodayBookings","getOldBookings","getFutureBookings","getRecentBookings","getRecentBookingsAll","PDFService","downloadGPRegForm","responseType","Accept","corporates","makeStyles","title","refreshButton","checkIcon","closeIcon","RefLink","cursor","BookedLabel","PatientAttendedLabel","SampleTakenLabel","ReportSentLabel","ReportCertSentLabel","archiveButton","smartMatchButton","textDecoration","infoTitle","fontWeight","infoData","matchButton","padding","resendButton","resendFilesButton","cancelButton","backdrop","zIndex","drawer","borderRadius","colorPrimary","bar","LinearProgress","InvoiceService","createInvoice","updateInvoice","invoiceNumber","deleteinvoice","getInvoiceByBookingId","getInvoiceByInvoiceNumber","getCodeDetails","code","getAllCodes","downloadInvoice","emailInvoice","email","useStyles","box","textAlign","boxRed","boxInfo","ul","listStyle","margin","li","icon","lineThrough","heading","typography","pxToRem","flexBasis","flexShrink","text","secondaryHeading","infoDetails","Accordion","AccordionDeleted","DownloadForm","infoDataCharges","infoDataChargesHigher","borderLeft","PositiveLabel","EditButton","ResendEmailsButton","PayButton","printInvoiceButton","editInvoiceButton","PayLabel","RestoreButton","UndoTraceButton","DeleteButton","MoveToTraceButton","SaveButton","CancelButton","TextBox","checkIconSmall","centeredLabel","alignItems","dialogTitle","question","answer","Transition","forwardRef","props","Slide","direction","PaperComponent","handle","cancel","Paper","BookingDialog","classes","useContext","setState","useState","setEmailSent","setEmailSentInvoice","edit","editMode","setEditMode","delete","deleteMode","setDeleteMode","restore","restoreMode","setRestoreMode","trace","traceMode","setTraceMode","untrace","unTraceMode","setUnTraceMode","saving","deleting","setDeleting","restoring","setRestoring","validationError","setValidationError","bookingDate","setBookingDate","bookingTime","setBookingTime","fullname","setFullname","setEmail","tel","setTel","refreshData","setRefreshData","booking","setBooking","setRecordChanged","fieldChanged","setFieldChanged","setInvoice","useEffect","open","setTimeout","fullnameChanged","event","target","value","handleDeleteModeChanged","del","_id","bookingService","res","err","handleRestoreModeChanged","handleTraceModeChanged","handleUnTraceModeChanged","data","bookingDialogDataChanged","bookingPayChanged","openQDialg","setOpenQDialog","fixQuestion","str","result","replace","trim","endsWith","Fragment","Dialog","TransitionComponent","keepMounted","onClose","aria-labelledby","aria-describedby","DialogTitle","className","style","deleted","traceFolder","questions","right","top","Grid","container","justify","item","Tooltip","DialogContent","hidden","FormatDateFromString","TextField","fullWidth","bookingDateError","onChange","inputProps","bookingTimeError","Divider","phone","toUpperCase","faceToFaceConsultation","telephoneConsultation","justifyContent","Button","variant","onClick","type","disabled","deleteButtonDisabled","OTCCharges","Backdrop","CircularProgress","JSON","parse","map","DialogActions","HideNowRows","left","justifyItems","ExportToExcelButton","ExportToExcelButtonInline","table","borderCollapse","th","verticalAlign","fontcolor","td","topSelect","minWidth","notifyIcon","getTableTitle","BookingTable","topCount","setTopCount","openDialogExcel","setOpenDialogExcel","Date","getTime","fromDate","setFromDate","untilDate","setUntilDate","dateformat","fromDateStr","setFromDateStr","untilDateStr","seUntilDateStr","justCorporate","setJustCorporate","chkDate","setChkDate","chkForename","setChkForename","chkSurname","setChkSurname","chkDOB","setChkDOB","chkEmail","setChkEmail","chkTel","setChkTel","chkCertificate","setChkCertidicate","chkAntiBodyTest","setChkAntiBodyTest","chkextRef","setChkExtRef","chkPrice","setChkPrice","columns","date","field","headerName","renderCell","params","IconButton","openDetailsDialog","getValue","valueFormatter","formatTimeStamp","valueGetter","bookings","cachedBookings","isFetching","setData","setSelectedRow","selectedBooking","setSelectedBooking","seeDetailsDialogOpen","setSeeDetailsDialogOpen","setCorporate","filter","setFilter","useRef","timeStamp","todayStr","timeStampStr","loadData","api","filteredData","element","toLowerCase","indexOf","find","page","setPage","placement","showCreateExcel","startIcon","faFileExcel","size","label","name","autoComplete","FormControl","InputLabel","Select","labelId","MenuItem","rows","autoPageSize","onPageChange","onSelectionChange","newSelection","minHeight","maxHeight","row","FormControlLabel","control","Switch","checked","formControl","utils","DateFnsUtils","disableToolbar","format","KeyboardButtonProps","filename","sheet","buttonText","Checkbox","paid","paidBy","forenameCapital","surnameCapital","extRef","PriceCalculator","CalendarColors","Container","ContainerPast","DayLabel","DayLabelToday","lineHight","DayLabelDisabled","BookingCountLabel","BookingCountLabelBusy","LoadingProgress","BookingCountGauge","bottom","PCRGauge","GynaeGauge","GPGauge","STDGauge","BloodGauge","DayLabelContainer","MonthViewCell","key","cellIndex","month","daysInMonth","dayClicked","setDateStr","cellDate","setCellDate","bookingsCount","setBookingsCount","disableDay","setDisableDay","setIsPast","getMonth","day","a","AdminCalendarCache","record","method","query","count","fecthData","_bookingsCount","getVCClinicBar","percent","getF2FClinicBar","getLaserClinicBar","getCataractClinicBar","getPostOPClinicBar","_cellIndex","_month","_daysInMonth","getDate","_day","isToday","getDayLabel","clinic","selectedClinics","findIndex","e","disableShrink","CalendarUtil","getMonthRange","year","calendar","Calendar","SUNDAY","itermonthdates","dayLables","days","MonthView","WeekViewCell","isPast","CancelToken","getClinicBar","overflowY","WeekView","dates","CalendarIcon","DateTimeLabel","PriceLabelPaid","PriceLabelNotPaid","BoxDisabled","transition","BoxVC","BoxF2F","BoxLaser","BoxCataract","BoxPostOP","BoxOptometry","BoxGynae","BoxGP","BoxSTD","NewBookingDialog","handleClose","clinicClicked","DateField","loadingBox","dateChanged","todayButton","children","setDay","setMonth","setYear","dayArray","setDayArray","monthArray","setMonthArray","yearArray","setYearArray","updateDate","dd","mm","yyyy","dayStr","monthStr","resetDate","d","parseInt","substr","m","y","months","years","push","getFullYear","today","index","PatientService","registerNewPatient","updatePatient","deletePatient","unDeletePatient","getPatientById","getPatientByPatientId","patientID","getAllPatients","getDeletedPatients","TemplateService","getEmailPreview","templateId","patientId","sendManualEmail","sendTo","registerNewTemplate","updateTemplate","deleteTemplate","getTemplateById","getTemplateBytemplateId","templateID","getAllTemplates","TabPanel","other","role","a11yProps","appBar","flex","flexGrow","tabs","borderRight","titleCenter","eyeText","PatientDialog","formData","patient","setPatient","setSaving","emailSent","emailSending","setEmailSending","patientIDError","setPatientIDError","nameError","setNameError","surnameError","setSurnameError","birthDateError","setBirthDateError","patientRepeated","setPatientRepeated","setValue","history","setHistory","backupFormData","setBackUpFormData","openDeleteDialog","setOpenDeleteDialog","selectedTemplateID","setSelectedTemplateID","selectedTemplate","setSelectedTemplate","emailTemplates","setEmailTemplates","handleCloseDeleteDialog","createPreview","_template","html","content","subject","newSubject","_history","forEach","setSelectedVersion","surname","reverse","loadEmailTemplates","saveClicked","validatePatient","stringify","status","patientDialogDataChanged","deleteClicked","birthDate","formatDate","dateFormat","selectedVersion","sendEmail","fullScreen","AppBar","Toolbar","edge","aria-label","Typography","saveButtonText","Tabs","orientation","newValue","indicatorColor","textColor","Tab","required","helperText","gender","postCode","address","homeTel","mobileTel","occupation","gpname","kincontact","prevsighttest","multiline","cc","prevmedicalhistory","prevocularhistory","familyhistory","medications","grafth","allergies","placeholder","contactlenswearer","hobbies","vdu","othernotes","driver","notesfromconsultation","recommendation","Alert","severity","template","handleSelectedTemplateChanged","elevation","dangerouslySetInnerHTML","__html","DialogContentText","createFilterOptions","NewOVBookingDialog","fullnameError","setFullnameError","patientRecord","setPatientRecord","patientList","setPatientList","setPhone","notes","setNotes","setPatientID","prescriptionLeft","setPrescriptionLeft","prescriptionRight","setPrescriptionRight","setBirthDate","loadPatiens","validateBooking","patientDialogOpen","setPatientDialogOpen","newName","setNewName","newSurname","setNewSurname","getColorFromClinic","Autocomplete","_nameArray","split","inputValue","filterOptions","options","filtered","matchSorter","keys","getOptionLabel","option","selectOnFocus","clearOnBlur","handleHomeEndKeys","renderOption","freeSolo","renderInput","onBlur","autoFocus","timeControl","times","DateDialog","setDate","setTime","dateError","setDateError","handleOK","ChooseBookingDialog","SearchIcon","EditOVBookingDialog","openClinicDialog","setOpenClinicDialog","setClinic","openDateDialog","setOpenDateDialog","selectedPatient","setSelectedPatient","loadPatient","patiant","saveAsClicked","_clinic","bookingBox","overflowX","boxShadow","bookingBoxNew","bookingBoxVC","bookingBoxF2F","bookingBoxLaser","bookingBoxCataract","bookingBoxPostOP","bookingBoxOptometry","bookingBoxHidden","bookingBoxPositive","bookingBoxReportSent","BookingBorderPCR","BookingBorderGynae","BookingBorderGP","BookingBorderSTD","BookingBorderBlood","DayViewCell","setBookings","filteredBookings","setFilteredBookings","openDialog","setOpenDialog","openDialogAddNew","setOpenDialogAddNew","openDialogOV","setOpenDialogOV","dayViewCalFilter","search","fetchData","_bookings","getBookingClass","addNewBookingClicked","borderTop","clsx","bookingCliked","substring","titleLabel","titleLabelToday","DayView","Clinics","monthNames","fontColor","CalendarView","firstDayofWeek","setFirstDayofWeek","weekDates","setWeekDates","mode","setMode","selectedTab","setSeletedTab","removeFilter","dayofWeek","getDay","firstdayofweek","_mode","newDay","newMonth","newFirstDayofWeek","endOfWeek","endofWeekStr","getCalendarTitleFromMode","InputProps","endAdornment","InputAdornment","onMouseDown","ToggleButtonGroup","exclusive","ToggleButton","PatientsTable","setPatientDialogTitle","setPatientDialogSaveButtonText","patientDialogTitle","patientDialogSaveButtonText","EmailTemplateDialog","settemplate","templateIDError","settemplateIDError","subjectError","setSubjectError","templateRepeated","settemplateRepeated","variable","setVariable","variableErrors","setVariableErrors","EditorState","createEmpty","editorState","setEditorState","parameters","contentBlock","htmlToDraft","contentState","ContentState","createFromBlockArray","contentBlocks","_editorState","createWithContent","rawText","htmlToText","settemplatenameuser","settemplatenameusererror","validatetemplate","templateService","templateDialogDataChanged","templatenameuser","templatenameusererror","ValidateVariable","keyword","prev","keywordError","builtinValue","builtinValueError","wrapperClassName","editorClassName","onEditorStateChange","draftToHtml","convertToRaw","getCurrentContent","defaultValue","_variable","_keyword","sendWhenBookedCalendar","templateAttendedLabel","EmailTemplatesTable","setSelectedtemplate","settemplateDialogTitle","settemplateDialogSaveButtonText","settemplateDialogOpen","selectedtemplate","templateDialogOpen","templateDialogTitle","templateDialogSaveButtonText","MenuList_OV_Admin","getMenuContent","getMenuRole","getMenuId","MenuList","getRole","sessionStorage","getItem","setRole","setItem","image","backgroundImage","backgroundRepeat","grey","backgroundSize","backgroundPosition","flexDirection","avatar","form","submit","alert","pageBg","appbarCenter","logoImage","appbarTitle","adminPanelLabel","SignIn","useMediaQuery","useHistory","password","setPassword","username","setUsername","saveChecked","setSaveChecked","showPassword","setShowPassword","setError","submiting","setSubmiting","localStorage","signedIn","roles","currentMenuIndex","component","CssBaseline","src","alt","Avatar","lineHeight","on","textField","onKeyPress","htmlFor","OutlinedInput","tabindex","preventDefault","Visibility","VisibilityOff","labelWidth","Box","mt","overflow","fixedHeight","iconSelected","menuText","Badge","MyMenu","selectedIndex","setSelectedIndex","updateShouldRefundsCount","List","StyledMenu","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","StyledMenuApps","toolbar","toolbarIcon","mixins","transitions","easing","sharp","duration","leavingScreen","appBarShift","enteringScreen","menuButton","menuButtonHidden","drawerPaper","whiteSpace","opacity","drawerPaperClose","appBarSpacer","logoImageMenu","userAvatar","userAvatarSelected","userAvatarBig","appBarText","appBarAppsIcon","appBarAppsIconSelected","usernameLabel","lastLoginLabel","appsLogo","appsBox","appsBoxSelected","appsAdminLabel","appsPCRLabel","appsGynaeLabel","appsGPLabel","appsSTDLabel","appsInToolbar","Dashboard","isMobile","setOpen","setCurrentMenuIndex","anchorUserAvatar","setAnchorUserAvatar","anchorApps","setAnchorApps","handleAppsClose","useLocation","getMenuIndex","globalPath","getMenuIdFromGlobalPath","pathname","scrollTo","appsClicked","getAppsLogo","getAppsLabel","userId","currentTarget","anchorEl","removeItem","Drawer","getUserIdFromToken","forename","lastLoginTimeStamp","signOutButton","Navigator","loaded","setLoaded","signedUp","forgotPassword","startsWith","URL","process","href","origin","addEventListener","fetch","response","contentType","ready","unregister","reload","checkValidServiceWorker","App","Provider","GlobalStyles","ReactDOM","render","document","getElementById","FormatDateFromStringShortYear","RevertFormatDateFromString","FormatDateFromStringWithSlash"],"mappings":"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","file":"static/js/main.95bfa3c5.chunk.js","sourcesContent":["\nconst calculatePrice = (person) =>\n{\n\n    var price = 199;\n\n    if (person.tr)\n    {\n        price = 250;\n    }\n    \n    if (person.certificate)\n    {\n        price += 50;\n    }\n\n    if (person.antiBodyTest)\n    {\n        price += (99 + 50);\n    }\n\n    return price;\n\n}\n\nconst calculateTotalPrice = (persons) =>\n{\n    var totalPrice = 0;\n    for (var i = 0 ; i < persons.length ; i++)\n    {\n        totalPrice += calculatePrice(persons[i]);\n    }\n\n    return totalPrice;\n}\n\nmodule.exports = {\n    calculatePrice : calculatePrice,\n    calculateTotalPrice : calculateTotalPrice\n}","import { createMuiTheme, responsiveFontSizes } from \"@material-ui/core\";\nimport { enGB } from '@material-ui/core/locale';\n\n\nconst black = \"#212121\";\nconst darkBlack = \"rgb(36, 40, 44)\";\nconst background = \"#f9f9f9\";\n\nconst warningLight = \"rgba(253, 200, 69, .3)\";\nconst warningMain = \"rgba(253, 200, 69, .5)\";\nconst warningDark = \"rgba(253, 200, 69, .7)\";\n\n// border\nconst borderWidth = 2;\nconst borderColor = \"rgba(0, 0, 0, 0.13)\";\n\n// breakpoints\nconst xl = 1920;\nconst lg = 1280;\nconst md = 960;\nconst sm = 600;\nconst xs = 0;\n\n// spacing\nconst spacing = 8;\n\nconst theme = createMuiTheme({\n\n  palette: {\n\n    primary: { main: \"#03b5f2\",\n               light: \"#86d5f0\",\n               contrastText:\"#fff\"\n              //  dark: \"#0288D1\",\n              //  light: \"#B3E5FC\"\n\n      },\n    secondary: { main: \"#005eab\", contrastText:\"#fff\" },\n    common: {\n      black,\n      darkBlack\n    },\n    warning: {\n      light: warningLight,\n      main: warningMain,\n      dark: warningDark\n    },\n    // Used to shift a color's luminance by approximately\n    // two indexes within its tonal palette.\n    // E.g., shift from Red 500 to Red 300 or Red 700.\n    tonalOffset: 0.2,\n    background: {\n      default: background\n    },\n    spacing\n  },\n  breakpoints: {\n    // Define custom breakpoint values.\n    // These will apply to Material-UI components that use responsive\n    // breakpoints, such as `Grid` and `Hidden`. You can also use the\n    // theme breakpoint functions `up`, `down`, and `between` to create\n    // media queries for these breakpoints\n    values: {\n      xl,\n      lg,\n      md,\n      sm,\n      xs\n    }\n  },\n  border: {\n    borderColor: borderColor,\n    borderWidth: borderWidth\n  },\n  overrides: {\n    MuiExpansionPanel: {\n      root: {\n        position: \"static\"\n      }\n    },\n    MuiTableCell: {\n      root: {\n        paddingLeft: spacing * 2,\n        paddingRight: spacing * 2,\n        borderBottom: `${borderWidth}px solid ${borderColor}`,\n        [`@media (max-width:  ${sm}px)`]: {\n          paddingLeft: spacing,\n          paddingRight: spacing\n        }\n      }\n    },\n    MuiDivider: {\n      root: {\n        backgroundColor: borderColor,\n        height: borderWidth\n      }\n    },\n    MuiPrivateNotchedOutline: {\n      root: {\n        borderWidth: borderWidth\n      }\n    },\n    MuiListItem: {\n      divider: {\n        borderBottom: `${borderWidth}px solid ${borderColor}`\n      }\n    },\n    MuiDialog: {\n      paper: {\n        width: \"100%\",\n        maxWidth: 430,\n        marginLeft: spacing,\n        marginRight: spacing\n      }\n    },\n    MuiTooltip: {\n      tooltip: {\n        backgroundColor: darkBlack,\n        fontSize: \"0.7rem\"\n      }\n    },\n    MuiExpansionPanelDetails: {\n      root: {\n        [`@media (max-width:  ${sm}px)`]: {\n          paddingLeft: spacing,\n          paddingRight: spacing\n        }\n      }\n    }\n  },\n \n}, enGB);\n\nexport default responsiveFontSizes(theme);\n","import { withStyles } from \"@material-ui/core\";\n\nconst styles = theme => ({\n  \"@global\": {\n    /**\n     * Disable the focus outline, which is default on some browsers like\n     * chrome when focusing elements\n     */\n    \"*:focus\": {\n      outline: 0\n    },\n    \".text-white\": {\n      color: theme.palette.common.white\n    },\n    \".listItemLeftPadding\": {\n      paddingTop: `${theme.spacing(1.75)}px !important`,\n      paddingBottom: `${theme.spacing(1.75)}px !important`,\n      paddingLeft: `${theme.spacing(4)}px !important`,\n      [theme.breakpoints.down(\"sm\")]: {\n        paddingLeft: `${theme.spacing(4)}px !important`\n      },\n      \"@media (max-width:  420px)\": {\n        paddingLeft: `${theme.spacing(1)}px !important`\n      }\n    },\n    \".container\": {\n      width: \"100%\",\n      paddingRight: theme.spacing(4),\n      paddingLeft: theme.spacing(4),\n      marginRight: \"auto\",\n      marginLeft: \"auto\",\n      [theme.breakpoints.up(\"sm\")]: {\n        maxWidth: 540\n      },\n      [theme.breakpoints.up(\"md\")]: {\n        maxWidth: 720\n      },\n      [theme.breakpoints.up(\"lg\")]: {\n        maxWidth: 1170\n      }\n    },\n    \".row\": {\n      display: \"flex\",\n      flexWrap: \"wrap\",\n      marginRight: -theme.spacing(2),\n      marginLeft: -theme.spacing(2)\n    },\n    \".container-fluid\": {\n      width: \"100%\",\n      paddingRight: theme.spacing(2),\n      paddingLeft: theme.spacing(2),\n      marginRight: \"auto\",\n      marginLeft: \"auto\",\n      maxWidth: 1370\n    },\n    \".lg-mg-top\": {\n      marginTop: `${theme.spacing(20)}px !important`,\n      [theme.breakpoints.down(\"md\")]: {\n        marginTop: `${theme.spacing(18)}px !important`\n      },\n      [theme.breakpoints.down(\"sm\")]: {\n        marginTop: `${theme.spacing(16)}px !important`\n      },\n      [theme.breakpoints.down(\"xs\")]: {\n        marginTop: `${theme.spacing(14)}px !important`\n      }\n    },\n    \".lg-mg-bottom\": {\n      marginBottom: `${theme.spacing(20)}px !important`,\n      [theme.breakpoints.down(\"md\")]: {\n        marginBottom: `${theme.spacing(18)}px !important`\n      },\n      [theme.breakpoints.down(\"sm\")]: {\n        marginBottom: `${theme.spacing(16)}px !important`\n      },\n      [theme.breakpoints.down(\"xs\")]: {\n        marginBottom: `${theme.spacing(14)}px !important`\n      }\n    },\n    \".lg-p-top\": {\n      paddingTop: `${theme.spacing(20)}px !important`,\n      [theme.breakpoints.down(\"md\")]: {\n        paddingTop: `${theme.spacing(18)}px !important`\n      },\n      [theme.breakpoints.down(\"sm\")]: {\n        paddingTop: `${theme.spacing(16)}px !important`\n      },\n      [theme.breakpoints.down(\"xs\")]: {\n        paddingTop: `${theme.spacing(14)}px !important`\n      }\n    }\n  }\n});\n\nfunction globalStyles() {\n  return null;\n}\n\nexport default withStyles(styles, { withTheme: true })(globalStyles);\n","/* eslint-disable */\n\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit http://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See http://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'; \nconst GlobalState = React.createContext([{}, () => {}]); \nexport default GlobalState;","export default __webpack_public_path__ + \"static/media/optimal-vision-logo.ba03ccd6.png\";","\n\nexport const authToken = 'Basic QXp1cmXEaWFtb45kOmh1bnRlcjO='\n\nexport const backendAPI = 'https://www.travelpcrtest.com/'\n// export const backendAPI = 'http://localhost:9090/'\n\nexport function getGlobalPath(path){\n    return '/optimalvision/admin' + path\n    // return path\n}\n\nexport function getMenuIdFromGlobalPath(globalPath){\n    try{\n       \n        var split = globalPath.split('/')\n        if (split && split.length > 0)\n        {\n            return split[split.length - 1].length > 0 ?  split[split.length - 1] :  split[split.length - 2]\n        }\n        else\n        {\n            return ''\n        }\n    }\n    catch(err)\n    {\n        return ''\n    }\n}","import axios from 'axios';\nimport { authToken, backendAPI } from '../GlobalPath';\n\nexport default axios.create({\n  baseURL: backendAPI,\n\n  headers : {\n      'Authorization' : authToken\n  }\n});","import API from './api';\n\nexport default class UserService{\n\n    static setToken = (token) =>\n    {\n        this.token = token\n    }\n  \n    static signIn = (payload) =>\n    {\n        return  API.post('/api/optimalvision/user/signin', payload)\n    }\n\n    static checkToken = (payload) =>\n    {\n        return  API.post('/api/optimalvision/user/checktoken', payload)\n    }\n\n}\n","import axios from 'axios';\nimport { authToken, backendAPI } from '../../GlobalPath';\n\nexport default axios.create({\n  baseURL: backendAPI,\n  headers : {\n      'Authorization' : authToken,\n       'Content-Type': 'application/json',\n  }\n});","import API from './api';\nimport axiosRetry from 'axios-retry';\n\nexport default class BookService {\n\n\n   static addNewBooking = (payload) =>\n   {\n      return API.post(`/api/optimalvision/book/bookappointment`, payload);\n   }\n\n\n   static sendRegFormEmail = (bookingId) =>\n   {\n      return API.post(`/api/optimalvision/book/sendregformemail?id=${bookingId}`);\n   }\n   static payBooking = (bookingId,price, paymentMethod, corporate) =>\n   {\n      return API.post(`/api/optimalvision/book/paybooking?id=${bookingId}&paymentmethod=${paymentMethod}&corporate=${corporate}&price=${price}`);\n   }\n\n   static unPayBooking = (bookingId) =>\n   {\n      return API.post(`/api/optimalvision/book/unpaybooking?id=${bookingId}`);\n   }\n\n   static getShouldRefundsCount = () =>\n   {\n      return API.get(`/api/optimalvision/book/getshouldrefundscount?`);\n   }\n\n   \n\n   static refundBooking = (bookingId) =>\n   {\n      return API.post(`/api/optimalvision/payment/refundpayment`, {bookingId: bookingId});\n   }\n\n   static getBookingsStatsByDateStr = (dateStr) =>\n   {\n      return API.get(`/api/optimalvision/book/getbookingsstatsbydatestr?date=${dateStr}`);\n   }\n\n   static getBookingsCountByDateStr = (dateStr) =>\n   {\n      return API.get(`/api/optimalvision/book/getbookingscountbydatestr?date=${dateStr}`);\n   }\n\n   static getAllBookingsCountAll = () =>\n   {\n      return API.get(`/api/optimalvision/book/getallbookingscountall`);\n   }\n\n   static getBookingsCountByDateStrandTime = (dateStr, time, source) =>\n   {\n      return API.get(`/api/optimalvision/book/getbookingscountbydatestrandtime?date=${dateStr}&time=${time}`, {cancelToken: source.token});\n   }\n\n   static getBookingsByDateStrandTime = (dateStr, time) =>\n   {\n      return API.get(`/api/optimalvision/book/getbookingsbydatestrandtime?date=${dateStr}&time=${time}`);\n   }\n\n\n   static getAllBookingsCountByDateStr = (dateStr) =>\n   {\n      return API.get(`/api/optimalvision/book/getallbookingscountbydatestr?date=${dateStr}`);\n   }\n\n   static getAllBookingsCountByDateStrandTime = (dateStr, time, source) =>\n   {\n      return API.get(`/api/optimalvision/book/getallbookingscountbydatestrandtime?date=${dateStr}&time=${time}`, {cancelToken: source.token});\n   }\n\n   static getAllBookingsByDateStrandTime = (dateStr, time) =>\n   {\n      return API.get(`/api/optimalvision/book/getallbookingsbydatestrandtime?date=${dateStr}&time=${time}`);\n   }\n\n   static changeBackToBookingMade = (id) =>\n   {\n      return API.post(`/api/optimalvision/book/changebacktobookingmade?id=${id}`);\n   }\n\n   static changeToPatientAttended = (id) =>\n   {\n      return API.post(`/api/optimalvision/book/changetopatientattended?id=${id}`);\n   }\n\n   static updateBooking = (payload) =>\n   {\n      return API.post(`/api/optimalvision/book/updatebookappointment`, payload);\n   } \n\n   static updateBookingTime = (payload) =>\n   {\n      return API.post(`/api/optimalvision/book/updatebookappointmenttime`, payload);\n   } \n\n   static deleteBooking = (id) =>\n   {\n      return API.post(`/api/optimalvision/book/deletebookappointment?id=${id}`);\n   } \n\n   static unDeleteBooking = (id) =>\n   {\n      return API.post(`/api/optimalvision/book/undeletebookappointment?id=${id}`);\n   } \n\n   static moveToTraceFolderBooking = (id) =>\n   {\n      return API.post(`/api/optimalvision/book/movetotracebookappointment?id=${id}`);\n   } \n\n   static undoMoveToTraceFolderBooking = (id) =>\n   {\n      return API.post(`/api/optimalvision/book/undomovetotracebookappointment?id=${id}`);\n   } \n   \n    static getBookingsByRef = (ref) =>\n    {\n       return API.get(`/api/optimalvision/book/getbookingsbyref?ref=${ref}`);\n    }\n\n    static getBookingById = (id) =>\n    {\n       return API.get(`/api/optimalvision/book/getbookingbyid?id=${id}`);\n    }\n\n    static getAllBookings = (limit) =>\n    {\n      if (!limit) limit = 25 \n      return API.get(`/api/optimalvision/book/getallbookings?limit=${limit}`);\n    }\n\n    static getTraceFolderBookings = (limit) =>\n    {\n      if (!limit) limit = 25 \n      return API.get(`/api/optimalvision/book/gettracefolderdbookings?limit=${limit}`);\n    }\n\n\n    static getDeletedBookings= (limit) =>\n    {\n      if (!limit) limit = 25 \n       return API.get(`/api/optimalvision/book/getdeletedbookings?limit=${limit}`);\n    }\n\n    static getTraceFolderBookings= (limit) =>\n    {\n      if (!limit) limit = 25 \n       return API.get(`/api/optimalvision/book/gettracefolderbookings?limit=${limit}`);\n    }\n\n\n    static getTodayBookings= () =>\n    {\n       return API.get(`/api/optimalvision/book/gettodaybookings`);\n    }\n\n    static getOldBookings= (limit) =>\n    {\n      if (!limit) limit = 25 \n       return API.get(`/api/optimalvision/book/getoldbookings?limit=${limit}`);\n    }\n\n    static getFutureBookings= (limit) =>\n    {\n      if (!limit) limit = 25 \n       return API.get(`/api/optimalvision/book/getfuturebookings?limit=${limit}`);\n    }\n\n    static getRecentBookings= () =>\n    {\n       return API.get(`/api/optimalvision/book/getrecentbookings`);\n    }\n\n    static getRecentBookingsAll= (limit) =>\n    {\n      if (!limit) limit = 25 \n       return API.get(`/api/optimalvision/book/getrecentbookingsall?limit=${limit}`);\n    }\n}","import API from './api';\n\nexport default class PDFService {\n\n\n    static downloadGPRegForm = (id) =>\n    {\n       return API.get(`/api/pdf/downloadgpregform?id=${id}`, {\n        responseType: 'arraybuffer',\n        id: id,\n        headers: {\n            Accept: 'application/pdf',\n        }\n        });\n    }\n\n\n\n}","export const corporates = [\n    'Visa Medical'\n]","import React, { useEffect, useRef, useState } from \"react\";\nimport BookService from \"./services/BookService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {\n  Backdrop,\n  Button,\n  Checkbox,\n  CircularProgress,\n  Divider,\n  FormControlLabel,\n  Grid,\n  InputAdornment,\n  InputLabel,\n  Link,\n  makeStyles,\n  MenuItem,\n  Select,\n  TextField,\n  Tooltip,\n} from \"@material-ui/core\";\nimport GlobalState from \"../GlobalState\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport CreditCardIcon from \"@material-ui/icons/CreditCard\";\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\n\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Draggable from \"react-draggable\";\nimport Paper from \"@material-ui/core/Paper\";\n\nimport Alert from \"@material-ui/lab/Alert\";\n\nimport PropTypes from \"prop-types\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport Box from \"@material-ui/core/Box\";\n\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport { corporates } from \"./Corporates\";\nimport NumberFormat from \"react-number-format\";\n\n\nvar interval;\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    marginTop: theme.spacing(0),\n    marginBottom: theme.spacing(1),\n  },\n\n  refreshButton: {\n    marginLeft: theme.spacing(2),\n  },\n\n  checkIcon: {\n    color: \"green\",\n  },\n\n  closeIcon: {\n    color: \"red\",\n  },\n\n  RefLink: {\n    cursor: \"pointer\",\n  },\n\n  BookedLabel: {\n    backgroundColor: \"#606060\",\n    color: \"#fff\",\n    paddingRight: \"10px\",\n    paddingLeft: \"10px\",\n  },\n\n  PatientAttendedLabel: {\n    backgroundColor: \"#0066aa\",\n    color: \"#fff\",\n    paddingRight: \"15px\",\n    paddingLeft: \"10px\",\n  },\n\n  SampleTakenLabel: {\n    backgroundColor: \"#0066cc\",\n    color: \"#fff\",\n    paddingRight: \"40px\",\n    paddingLeft: \"10px\",\n  },\n\n  ReportSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"90px\",\n    paddingLeft: \"10px\",\n  },\n\n  ReportCertSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"68px\",\n    paddingLeft: \"10px\",\n  },\n\n  archiveButton: {},\n\n  smartMatchButton: {\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    marginRight: \"10px\",\n    // padding: \"10px\"\n  },\n\n  infoTitle: {\n    fontWeight: \"400\",\n  },\n\n  infoData: {\n    paddingLeft: \"10px\",\n    fontWeight: \"800\",\n  },\n\n  matchButton: {\n    marginTop: \"30px\",\n    marginBottom: \"20px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  resendButton: {\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  resendFilesButton: {\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n    backgroundColor: \"#3792ad\",\n    \"&:hover\": {\n      background: \"#2f798f\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  cancelButton: {\n    marginBottom: \"10px\",\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"90px\",\n    paddingRight: \"90px\",\n  },\n\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 5,\n    color: \"#fff\",\n  },\n}));\n\nfunction NumberFormatCustom(props) {\n  const { inputRef, onChange, ...other } = props;\n\n  return (\n    <NumberFormat\n      {...other}\n      getInputRef={inputRef}\n      onValueChange={(values) => {\n        onChange({\n          target: {\n            name: props.name,\n            value: values.value,\n          },\n        });\n      }}\n      thousandSeparator\n      isNumericString\n      prefix=\"\"\n    />\n  );\n}\n\nNumberFormatCustom.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\n\nconst BorderLinearProgress = withStyles((theme) => ({\n  root: {\n    height: 10,\n    borderRadius: 5,\n  },\n  colorPrimary: {\n    backgroundColor: \"#cedbce\", //theme.palette.grey[theme.palette.type === 'light' ? 200 : 700],\n  },\n  bar: {\n    borderRadius: 5,\n    backgroundColor: \"#2f942e\",\n  },\n}))(LinearProgress);\nfunction LinearProgressWithLabel(props) {\n  return (\n    <Box display=\"flex\" alignItems=\"center\">\n      <Box width=\"100%\" mr={1}>\n        <BorderLinearProgress variant=\"determinate\" {...props} />\n      </Box>\n      <Box minWidth={35}>\n        <Typography\n          style={{ fontWeight: \"800\", color: \"#5e855e\" }}\n          variant=\"body2\"\n          color=\"textSecondary\"\n        >{`${Math.round(props.value)}%`}</Typography>\n      </Box>\n    </Box>\n  );\n}\n\nLinearProgressWithLabel.propTypes = {\n  /**\n   * The value of the progress indicator for the determinate and buffer variants.\n   * Value between 0 and 100.\n   */\n  value: PropTypes.number.isRequired,\n};\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable\n      handle=\"#draggable-dialog-title\"\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\n    >\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nexport default function PayDialog(props) {\n  const classes = useStyles();\n\n  const [state, setState] = React.useContext(GlobalState);\n  const [paymentMethod, setPaymentMethod] = useState(\"credit card\");\n  const [corporate, setCorporate] = useState(corporates[0]);\n  const [saving, setSaving] = useState(false);\n\n  const [price, setPrice] = useState(\"\");\n  const [priceError, setPriceError] = useState(false);\n\n  useEffect( () => {\n    if (props.price)\n    {\n      setPrice(`${props.price}`)\n    }else\n    {\n      setPrice('')\n    }\n  }, [props.price, props.open])\n\n\n  const priceChanged = (event) =>\n  {\n    setPrice(event.target.value)\n    setPriceError(false)\n  }\n\n  const paymentMethodChanged = (event) => {\n    setPaymentMethod(event.target.value);\n  };\n\n  const handleClose = () => {\n    if (saving) return;\n\n    props.handleClose();\n    setPaymentMethod(\"credit card\");\n    setPrice('')\n    setCorporate(corporates[0]);\n    setSaving(false);\n  };\n\n  const corporateChanged = (event) => {\n    setCorporate(event.target.value);\n  };\n\n  const payClicked = async () => {\n\n\n    if (!price || price.trim().length === 0 || price === '0')\n    {\n      setPriceError(true)\n      return\n    }\n\n    setSaving(true);\n\n  \n\n    try {\n      await BookService.payBooking(\n        props.booking._id,\n        price,\n        paymentMethod,\n        paymentMethod === \"corporate\" ? corporate : \"\"\n      );\n      setSaving(false);\n      setState((state) => ({\n        ...state,\n        bookingPayChanged: !state.bookingPayChanged ? true : false,\n      }));\n      handleClose();\n    } catch (err) {\n      console.error(err);\n      setSaving(false);\n    }\n  };\n\n  return (\n    <React.Fragment>\n      {props.booking && (\n        <React.Fragment>\n          <Dialog\n            maxWidth=\"xs\"\n            open={props.open}\n            onClose={handleClose}\n            PaperComponent={PaperComponent}\n            aria-labelledby=\"form-dialog-title\"\n          >\n            <DialogTitle id=\"draggable-dialog-title\">\n              <Grid\n                container\n                spacing={2}\n                direction=\"row\"\n                justify=\"center\"\n                alignItems=\"center\"\n              >\n                <Grid item>\n                  <CreditCardIcon\n                    style={{ color: \"#f50057\", fontSize: \"3rem\" }}\n                  />\n                </Grid>\n\n                <Grid item>\n                  <div\n                    style={{\n                      color: \"#f50057\",\n                      paddingBottom: \"10px\",\n                      fontWeight: \"800\",\n                    }}\n                  >\n                    {\" \"}\n                    PAY the CHARGE{\" \"}\n                  </div>\n                </Grid>\n              </Grid>\n\n              <Divider />\n            </DialogTitle>\n            <DialogContent>\n              <div\n                style={{\n                  height: \"300px\",\n                }}\n              >\n                <Grid\n                  container\n                  direction=\"column\"\n                  justify=\"space-between\"\n                  spacing={2}\n                  alignItems=\"flex-start\"\n                >\n                  <Grid item>\n                  <TextField\n                                autoFocus\n                                error={priceError}\n                                label=\"TOTAL Charges\"\n                                value={price}\n                                fullWidth\n                                required\n                                onChange={priceChanged}\n                                name=\"product-price\"\n                                id=\"product-price-id\"\n                                InputProps={{\n                                  inputComponent: NumberFormatCustom,\n                                  startAdornment: (\n                                    <InputAdornment position=\"start\">\n                                      £\n                                    </InputAdornment>\n                                  ),\n                                }}\n                              />\n\n                  </Grid>\n\n                  <Grid item>\n                    <div style={{ fontSize: \"17px\" }}>\n                      {\" \"}\n                      How do you want to pay?{\" \"}\n                    </div>\n                  </Grid>\n\n                  <Grid item>\n                    <FormControl component=\"fieldset\">\n                      <RadioGroup\n                        aria-label=\"paymentMethod\"\n                        name=\"paymentMethod\"\n                        value={paymentMethod}\n                        onChange={paymentMethodChanged}\n                      >\n                        <FormControlLabel\n                          value=\"credit card\"\n                          control={<Radio />}\n                          label=\"Credit Card\"\n                        />\n                        <FormControlLabel\n                          value=\"cash\"\n                          control={<Radio />}\n                          label=\"Cash\"\n                        />\n                        <FormControlLabel\n                          value=\"corporate\"\n                          control={<Radio />}\n                          label=\"Corporate\"\n                        />\n                      </RadioGroup>\n\n                      {paymentMethod === \"corporate\" && (\n                        <FormControl\n                          style={{ marginTop: \"10px\" }}\n                          className={classes.formControl}\n                        >\n                          <Select\n                            labelId=\"select-corporate\"\n                            id=\"select-corporate-id\"\n                            value={corporate}\n                            onChange={corporateChanged}\n                          >\n                            {corporates.map((element) => (\n                              <MenuItem\n                                value={element}\n                              >{`${element}`}</MenuItem>\n                            ))}\n                          </Select>\n                        </FormControl>\n                      )}\n                    </FormControl>\n                  </Grid>\n                </Grid>\n\n                <Grid item></Grid>\n\n                <div\n                  style={{\n                    position: \"absolute\",\n                    bottom: \"20px\",\n                    right: \"20px\",\n                  }}\n                >\n                  <Grid\n                    container\n                    direction=\"row\"\n                    justify=\"flex-end\"\n                    alignItems=\"center\"\n                    spacing={1}\n                  >\n                    <Grid item>\n                      <Button\n                        onClick={handleClose}\n                        style={{ width: \"100px\" }}\n                        disabled={saving}\n                      >\n                        back\n                      </Button>\n                    </Grid>\n                    <Grid item>\n                      <Button\n                        onClick={payClicked}\n                        variant=\"contained\"\n                        color=\"secondary\"\n                        style={{ width: \"100px\" }}\n                        disabled={saving}\n                      >\n                        Pay\n                      </Button>\n                    </Grid>\n                  </Grid>\n                </div>\n              </div>\n\n              <Backdrop className={classes.backdrop} open={saving}>\n                <CircularProgress color=\"inherit\" />\n              </Backdrop>\n            </DialogContent>\n          </Dialog>\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n}\n","\n\nexport const CalendarColors = {\n    PCR_COLOR : \"#4faef7\",\n    GYNAE_COLOR : \"#e83caf\",\n    GP_COLOR :  \"#ff4f14\",\n    STD_COLOR : \"#d6733a\"\n}\n","import API from './api';\n\nexport default class InvoiceService{\n\n    static createInvoice = (payload) =>\n    {\n        return  API.post('/api/medex/invoice/createinvoice', payload)\n    }\n\n    static updateInvoice = (invoiceNumber, payload) =>\n    {\n        return  API.post(`/api/medex/invoice/updateinvoice?invoiceNumber=${invoiceNumber}`, payload)\n    }\n\n    static deleteinvoice = (invoiceNumber) =>\n    {\n        return  API.post(`/api/medex/invoice/deleteinvoice?invoiceNumber=${invoiceNumber}`)\n    }\n\n    static getInvoiceByBookingId = (bookingId) =>\n    {\n        return  API.get(`/api/medex/invoice/getinvoicebybookingid?bookingId=${bookingId}`)\n    }\n\n    static getInvoiceByInvoiceNumber = (invoiceNumber) =>\n    {\n        return  API.get(`/api/medex/invoice/getinvoicebyinvoicenumber?invoiceNumber=${invoiceNumber}`)\n    }\n\n    static getCodeDetails = (code) =>\n    {\n        return  API.post(`/api/medex/invoice/getcodedetails`, {code: code})\n    }\n\n    static getAllCodes = () =>\n    {\n        return API.get(`/api/medex/invoice/getallcodes`)\n    }\n\n    static downloadInvoice = (id) =>\n    {\n       return API.get(`/api/pdf/downloadinvoice?id=${id}`, {\n        responseType: 'arraybuffer',\n        id: id,\n        headers: {\n            Accept: 'application/pdf',\n        }\n        });\n    }\n\n    static emailInvoice = (id, email) =>\n    {\n       return API.post(`/api/pdf/emailinvoice?id=${id}&email=${email}`);\n    }\n\n}\n","import React, { useEffect, useRef, useState } from \"react\";\nimport InvoiceService from \"./services/InvoiceService\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\n\nimport {\n  Backdrop,\n  Button,\n  Checkbox,\n  CircularProgress,\n  DialogActions,\n  Divider,\n  FormControlLabel,\n  Grid,\n  IconButton,\n  InputAdornment,\n  InputLabel,\n  Link,\n  makeStyles,\n  MenuItem,\n  Select,\n  TextField,\n  Tooltip,\n} from \"@material-ui/core\";\nimport GlobalState from \"./GlobalState\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport CreditCardIcon from \"@material-ui/icons/CreditCard\";\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\n\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Draggable from \"react-draggable\";\nimport Paper from \"@material-ui/core/Paper\";\n\nimport Alert from \"@material-ui/lab/Alert\";\n\nimport PropTypes from \"prop-types\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport Box from \"@material-ui/core/Box\";\n\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport NumberFormat from \"react-number-format\";\n\nimport ReceiptIcon from \"@material-ui/icons/Receipt\";\n\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    marginTop: theme.spacing(0),\n    marginBottom: theme.spacing(1),\n  },\n\n  refreshButton: {\n    marginLeft: theme.spacing(2),\n  },\n\n  checkIcon: {\n    color: \"green\",\n  },\n\n  closeIcon: {\n    color: \"red\",\n  },\n\n  RefLink: {\n    cursor: \"pointer\",\n  },\n\n  BookedLabel: {\n    backgroundColor: \"#606060\",\n    color: \"#fff\",\n    paddingRight: \"10px\",\n    paddingLeft: \"10px\",\n  },\n\n  PatientAttendedLabel: {\n    backgroundColor: \"#0066aa\",\n    color: \"#fff\",\n    paddingRight: \"15px\",\n    paddingLeft: \"10px\",\n  },\n\n  SampleTakenLabel: {\n    backgroundColor: \"#0066cc\",\n    color: \"#fff\",\n    paddingRight: \"40px\",\n    paddingLeft: \"10px\",\n  },\n\n  ReportSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"90px\",\n    paddingLeft: \"10px\",\n  },\n\n  ReportCertSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"68px\",\n    paddingLeft: \"10px\",\n  },\n\n  archiveButton: {},\n\n  smartMatchButton: {\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    marginRight: \"10px\",\n    // padding: \"10px\"\n  },\n\n  infoTitle: {\n    fontWeight: \"400\",\n  },\n\n  infoData: {\n    paddingLeft: \"10px\",\n    fontWeight: \"800\",\n  },\n\n  matchButton: {\n    marginTop: \"30px\",\n    marginBottom: \"20px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  resendButton: {\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  resendFilesButton: {\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n    backgroundColor: \"#3792ad\",\n    \"&:hover\": {\n      background: \"#2f798f\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  cancelButton: {\n    marginBottom: \"10px\",\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"90px\",\n    paddingRight: \"90px\",\n  },\n\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 5,\n    color: \"#fff\",\n  },\n}));\n\nfunction NumberFormatCustom(props) {\n  const { inputRef, onChange, ...other } = props;\n\n  return (\n    <NumberFormat\n      {...other}\n      getInputRef={inputRef}\n      onValueChange={(values) => {\n        onChange({\n          target: {\n            name: props.name,\n            value: values.value,\n          },\n        });\n      }}\n      thousandSeparator\n      isNumericString\n      prefix=\"\"\n    />\n  );\n}\n\nNumberFormatCustom.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nconst BorderLinearProgress = withStyles((theme) => ({\n  root: {\n    height: 10,\n    borderRadius: 5,\n  },\n  colorPrimary: {\n    backgroundColor: \"#cedbce\", //theme.palette.grey[theme.palette.type === 'light' ? 200 : 700],\n  },\n  bar: {\n    borderRadius: 5,\n    backgroundColor: \"#2f942e\",\n  },\n}))(LinearProgress);\nfunction LinearProgressWithLabel(props) {\n  return (\n    <Box display=\"flex\" alignItems=\"center\">\n      <Box width=\"100%\" mr={1}>\n        <BorderLinearProgress variant=\"determinate\" {...props} />\n      </Box>\n      <Box minWidth={35}>\n        <Typography\n          style={{ fontWeight: \"800\", color: \"#5e855e\" }}\n          variant=\"body2\"\n          color=\"textSecondary\"\n        >{`${Math.round(props.value)}%`}</Typography>\n      </Box>\n    </Box>\n  );\n}\n\nLinearProgressWithLabel.propTypes = {\n  /**\n   * The value of the progress indicator for the determinate and buffer variants.\n   * Value between 0 and 100.\n   */\n  value: PropTypes.number.isRequired,\n};\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable\n      handle=\"#draggable-dialog-title\"\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\n    >\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nexport default function InvoiceDialog(props) {\n  const classes = useStyles();\n\n  const [state, setState] = React.useContext(GlobalState);\n  const [saving, setSaving] = useState(false);\n\n  const defaultCode = null; //{code:\"\",description:\"\",price:\"0\"}\n\n  const [code, setCode] = useState(defaultCode);\n  const [codeError, setCodeError] = useState(false);\n\n  const [description, setDescription] = useState(\"\");\n  const [descriptionError, setDescriptionError] = useState(false);\n\n  const [notes, setNotes] = useState(\"\");\n  const notesChanged = (event) => {\n    setNotes(event.target.value);\n  };\n\n  const [items, setItems] = React.useState([]);\n\n  const [price, setPrice] = useState(\"\");\n  const [priceError, setPriceError] = useState(false);\n\n  const [title, setTitle] = React.useState(\"INVOICE ISSUANCE\");\n\n  const [allCodes, setAllCodes] = React.useState([]);\n\n  useEffect(() => {\n    if (props.invoice) {\n      setItems(props.invoice.items);\n      setNotes(props.invoice.notes || \"\");\n      setTitle(\"EDIT INVOICE\");\n    } else {\n      setTitle(\"INVOICE ISSUANCE\");\n    }\n\n    fetchAllCodes();\n\n    return () => {\n      setItems([]);\n    };\n  }, [props.invoice]);\n\n  useEffect(() => {\n    if (!props.invoice && props.defaultCodes) {\n      setItems(props.defaultCodes)\n    }\n\n    return () => {\n      setItems([]);\n    };\n  }, [props.defaultCodes]);\n\n\n\n  const fetchAllCodes = async () => {\n    try {\n      const res = await InvoiceService.getAllCodes();\n      setAllCodes(res.data.result);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const priceChanged = (event) => {\n    setPrice(event.target.value);\n    setPriceError(false);\n  };\n\n  const codeChanged = (event) => {\n    setCode(event.target.value?.toUpperCase());\n    setCodeError(false);\n  };\n\n  const descriptionChanged = (event) => {\n    setDescription(event.target.value);\n    setDescriptionError(false);\n  };\n\n  const handleClose = (refresh) => {\n    if (saving) return;\n\n    setPrice(\"\");\n    setCode(defaultCode);\n    setDescription(\"\");\n    setPriceError(false);\n    setCodeError(false);\n    setDescriptionError(false);\n    setItems([]);\n    setNotes(\"\");\n    setSaving(false);\n\n    props.handleClose(refresh);\n  };\n\n  const codeLeft = () => {\n    fetchCodeDetails();\n  };\n\n  const fetchCodeDetails = async () => {\n    try {\n      setDescription(\"...\");\n      const res = await InvoiceService.getCodeDetails(code);\n      if (res.data.status === \"OK\") {\n        const result = res.data.result;\n        if (result.length === 0) {\n          setCodeError(true);\n          setDescription(\"\");\n          setPrice(\"\");\n        } else if (result.length >= 1) {\n          setDescription(result[0].description);\n          setPrice(result[0].price);\n          setDescriptionError(false);\n          setPriceError(false);\n        }\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const addItemClicked = () => {\n    if (!validateItem()) {\n      return;\n    }\n\n    setItems([\n      ...items,\n      { code: code.code, description: code.description, price: code.price },\n    ]);\n    setCode(defaultCode);\n  };\n\n  const addItemClicked2 = () => {\n    if (!validateItem2()) {\n      return;\n    }\n\n    setItems([...items, { code: \"\", description: description, price: price }]);\n    setDescription(\"\");\n    setPrice(\"\");\n  };\n\n  const validateItem = () => {\n    let error = false;\n    if (!code) return false;\n\n    if (!code.description || code.description.length === 0) {\n      error = true;\n    }\n    if (!code.price || code.price.length === 0) {\n      error = true;\n    }\n\n    return !error;\n  };\n\n  const validateItem2 = () => {\n    let error = false;\n    if (!description || description.length === 0) {\n      setDescriptionError(true);\n      error = true;\n    }\n    if (!price || price.length === 0) {\n      setPriceError(true);\n      error = true;\n    }\n\n    return !error;\n  };\n\n  const removeItem = (index) => {\n    let temp = [...items];\n    temp.splice(index, 1);\n    setItems(temp);\n  };\n\n  const getGrandTotal = (_items) => {\n    let total = 0;\n    _items.forEach((element) => {\n      total += parseFloat(element.price);\n    });\n\n    return total;\n  };\n\n  const saveClikced = async () => {\n    if (items.length === 0 && !props.invoice) {\n      return;\n    }\n\n    try {\n      setSaving(true);\n      let name = \"\";\n      let postCode = \"\";\n      let address = \"\";\n\n      if (props.booking.formData) {\n        const formData = JSON.parse(props.booking.formData)\n        name = `${formData.title} ${formData.forename} ${formData.surname}`;\n        postCode = formData.postCode;\n        address = formData.address;\n      } else if (props.booking.forename && props.booking.surname) {\n        name = `${props.booking.forename} ${props.booking.surname}`;\n        postCode = props.booking.postCode;\n        address = props.booking.address;\n      } else if (props.booking.fullname) {\n        name = `${props.booking.fullname}`;\n      }\n\n      const invoice = {\n        name: name,\n        date: new Date(),\n        dateAttended: new Date(props.booking.bookingDate),\n        items: items,\n        grandTotal: getGrandTotal(items),\n        bookingId: props.booking._id,\n        postCode: postCode,\n        address: address,\n        notes: notes,\n      };\n      if (!props.invoice) {\n        await InvoiceService.createInvoice(invoice);\n      } else if (items.length > 0) {\n        await InvoiceService.updateInvoice(\n          props.invoice.invoiceNumber,\n          invoice\n        );\n      } else {\n        await InvoiceService.deleteinvoice(props.invoice.invoiceNumber);\n      }\n\n      setSaving(false);\n      handleClose(true);\n    } catch (err) {\n      console.error(err);\n      setSaving(false);\n    }\n  };\n\n  return (\n    <React.Fragment>\n      {props.booking && (\n        <React.Fragment>\n          <Dialog\n            maxWidth=\"md\"\n            open={props.open}\n            onClose={() => handleClose(false)}\n            PaperComponent={PaperComponent}\n            aria-labelledby=\"form-dialog-title\"\n          >\n            <DialogTitle id=\"draggable-dialog-title\">\n              <Grid\n                container\n                spacing={2}\n                direction=\"row\"\n                justify=\"center\"\n                alignItems=\"center\"\n              >\n                <Grid item>\n                  <ReceiptIcon style={{ color: \"#1cb2c9\", fontSize: \"3rem\" }} />\n                </Grid>\n\n                <Grid item>\n                  <div\n                    style={{\n                      color: \"#1cb2c9\",\n                      paddingBottom: \"10px\",\n                      fontWeight: \"800\",\n                    }}\n                  >\n                    {`${title}`}\n                  </div>\n                </Grid>\n              </Grid>\n\n              <Divider />\n            </DialogTitle>\n            <DialogContent>\n              <div\n                style={{\n                  height: \"700px\",\n                  width: \"100%\",\n                }}\n              >\n                <Grid\n                  container\n                  direction=\"column\"\n                  justify=\"flex-start\"\n                  spacing={1}\n                  alignItems=\"flex-start\"\n                >\n                  <Grid item style={{ width: \"100%\" }}>\n                    <Grid container direction=\"row\" spacing={5}>\n                      <Grid item xs={10}>\n                        <Autocomplete\n                          id=\"code-auto-complete\"\n                          value={code}\n                          onChange={(event, newValue) => {\n                            setCode(newValue);\n                          }}\n                          options={allCodes}\n                          getOptionLabel={(option) =>\n                            `.${option.code} -- ${\n                              option.description\n                            } -- ${parseFloat(\n                              option.price\n                            ).toLocaleString(\"en-GB\", {\n                              style: \"currency\",\n                              currency: \"GBP\",\n                            })}`\n                          }\n                          style={{ width: \"750px\" }}\n                          renderInput={(params) => (\n                            <TextField\n                              {...params}\n                              label=\"System Codes\"\n                              helperText=\"Standard codes already defined in the system\"\n                            />\n                          )}\n                        />\n                      </Grid>\n\n                      <Grid item xs={2}>\n                        <Button\n                          onClick={addItemClicked}\n                          variant=\"outlined\"\n                          color=\"primary\"\n                          style={{ marginTop: \"15px\" }}\n                          disabled={saving}\n                        >\n                          + Add\n                        </Button>\n                      </Grid>\n                    </Grid>\n                  </Grid>\n\n                  <Grid item style={{ width: \"100%\", marginTop: \"20px\" }}>\n                    <Grid container direction=\"row\" spacing={5}>\n                      <Grid item xs={8}>\n                        <TextField\n                          error={descriptionError}\n                          value={description}\n                          onChange={descriptionChanged}\n                          fullWidth\n                          label=\"Description (Custom)\"\n                          name=\"desc\"\n                          helperText=\"You can enter any description you want to be placed on the invoice\"\n                          id=\"desc-id\"\n                        />\n                      </Grid>\n\n                      <Grid item xs={2}>\n                        <TextField\n                          error={priceError}\n                          value={price}\n                          onChange={priceChanged}\n                          fullWidth\n                          label=\"Price\"\n                          name=\"price\"\n                          id=\"price-id\"\n                          InputProps={{\n                            inputComponent: NumberFormatCustom,\n                            startAdornment: (\n                              <InputAdornment position=\"start\">\n                                £\n                              </InputAdornment>\n                            ),\n                          }}\n                        />\n                      </Grid>\n\n                      <Grid item xs={2}>\n                        <Button\n                          onClick={addItemClicked2}\n                          variant=\"outlined\"\n                          color=\"primary\"\n                          style={{ marginTop: \"12px\" }}\n                          disabled={saving}\n                        >\n                          + Add\n                        </Button>\n                      </Grid>\n                    </Grid>\n                  </Grid>\n\n                  <div\n                    style={{\n                      backgroundColor: \"#fff\",\n                      color: \"#1cb2c9\",\n                      fontWeight: \"500\",\n                      fontSize: \"0.95rem\",\n                      padding: \"5px 8px\",\n                      marginBottom: \"-15px\",\n                      marginLeft: \"10px\",\n                      zIndex: \"99\",\n                      marginTop: \"30px\",\n                    }}\n                  >\n                    Invoice Items\n                  </div>\n\n                  <div\n                    style={{\n                      width: \"100%\",\n                      height: \"300px\",\n                      overflowY: \"scroll\",\n                      border: \"1px solid #ddd\",\n                      borderRadius: \"4px\",\n                      padding: \"25px\",\n                      position: \"relative\",\n                    }}\n                  >\n                    <Grid item>\n                      <Grid\n                        container\n                        direction=\"column\"\n                        justify=\"flex-start\"\n                        spacing={2}\n                        alignItems=\"flex-start\"\n                      >\n                        <Grid item style={{ width: \"100%\", fontWeight: \"500\" }}>\n                          <Grid container direction=\"row\" spacing={4}>\n                            <Grid item xs={2}>\n                              Code\n                            </Grid>\n                            <Grid item xs={5}>\n                              Description\n                            </Grid>\n                            <Grid item xs={2}>\n                              Price\n                            </Grid>\n                            <Grid item xs={3}></Grid>\n                          </Grid>\n                        </Grid>\n                        {items.map((item, index) => (\n                          <Grid item style={{ width: \"100%\" }}>\n                            <Grid container direction=\"row\" spacing={4}>\n                              <Grid item xs={2}>\n                                {item.code}\n                              </Grid>\n                              <Grid item xs={5}>\n                                {item.description}\n                              </Grid>\n                              <Grid item xs={2}>\n                                {parseFloat(item.price).toLocaleString(\n                                  \"en-GB\",\n                                  { style: \"currency\", currency: \"GBP\" }\n                                )}\n                              </Grid>\n                              <Grid item xs={3}>\n                                <Tooltip title=\"Remove Item\">\n                                  <IconButton\n                                    style={{ marginTop: \"-15px\" }}\n                                    onClick={() => removeItem(index)}\n                                  >\n                                    <DeleteIcon color=\"primary\" />\n                                  </IconButton>\n                                </Tooltip>\n                              </Grid>\n                            </Grid>\n                          </Grid>\n                        ))}\n                      </Grid>\n                    </Grid>\n                  </div>\n\n                  <Grid item style={{ marginTop: \"10px\", width:\"100%\", display:\"flex\", justifyContent:\"flex-end\", paddingRight:\"30px\" }}>\n                    <span style={{ fontWeight: \"500\", color: \"#777\" }}>\n                      Grand Total :{\" \"}\n                    </span>{\" \"}\n                    <span\n                      style={{\n                        fontWeight: \"500\",\n                        color: \"#1cb2c9\",\n                        marginLeft: \"10px\",\n                        fontSize: \"1rem\",\n                      }}\n                    >\n                      {\" \"}\n                      {getGrandTotal(items).toLocaleString(\"en-GB\", {\n                        style: \"currency\",\n                        currency: \"GBP\",\n                      })}{\" \"}\n                    </span>\n                  </Grid>\n\n                  <Grid item style={{ marginTop: \"10px\", width: \"100%\" }}>\n                    <TextField\n                      value={notes}\n                      onChange={notesChanged}\n                      multiline\n                      rows={2}\n                      helperText=\"* notes will be printed on the invoice (optional)\"\n                      label=\"Notes\"\n                      fullWidth\n                      variant=\"outlined\"\n                      placeholder=\"enter any addional notes you want to be printed on the invoice...\"\n                    ></TextField>\n                  </Grid>\n                </Grid>\n              </div>\n\n              <Backdrop className={classes.backdrop} open={saving}>\n                <CircularProgress color=\"inherit\" />\n              </Backdrop>\n            </DialogContent>\n            <DialogActions>\n              <Grid\n                container\n                direction=\"row\"\n                justify=\"flex-end\"\n                alignItems=\"center\"\n                spacing={1}\n              >\n                <Grid item>\n                  <Button\n                    onClick={() => handleClose(false)}\n                    style={{ width: \"100px\" }}\n                    disabled={saving}\n                  >\n                    back\n                  </Button>\n                </Grid>\n                <Grid item>\n                  <Button\n                    onClick={saveClikced}\n                    variant=\"contained\"\n                    color=   {props.invoice ? 'secondary' : 'primary'}\n                    // style={{ width: \"100px\" }}\n                    disabled={saving}\n                  >\n                    {props.invoice ? 'Save Changes' : 'Issue Invoice'}\n                  </Button>\n                </Grid>\n              </Grid>\n            </DialogActions>\n          </Dialog>\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport GlobalState from \"../GlobalState\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {\n  Button,\n  Checkbox,\n  DialogActions,\n  DialogContentText,\n  Divider,\n  FormControlLabel,\n  IconButton,\n  TextField,\n  Tooltip,\n} from \"@material-ui/core\";\nimport PDFService from \"./services/PDFService\";\n\nimport { calculatePrice } from \"./PriceCalculator\";\n\nimport bookingService from \"./services/BookService\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport CloseIcon from \"@material-ui/icons/Close\";\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Draggable from \"react-draggable\";\nimport Slide from \"@material-ui/core/Slide\";\n\nimport Paper from \"@material-ui/core/Paper\";\n\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport BookService from \"./services/BookService\";\n\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport {\n  FormatDateFromString,\n  RevertFormatDateFromString,\n} from \"./DateFormatter\";\nimport PayDialog from \"./PayDialog\";\n\nimport PrintIcon from \"@material-ui/icons/Print\";\nimport UndoIcon from \"@material-ui/icons/Undo\";\n\nimport SendIcon from \"@material-ui/icons/Send\";\n\nimport HistoryIcon from \"@material-ui/icons/History\";\n\nimport FileCopyOutlinedIcon from \"@material-ui/icons/FileCopyOutlined\";\nimport { CalendarColors } from \"../Admin/calendar-admin/colors\";\nimport InvoiceDialog from \"../InvoiceDialog\";\nimport InvoiceService from \"../services/InvoiceService\";\nimport CallIcon from '@material-ui/icons/Call';\n\nconst useStyles = makeStyles((theme) => ({\n  box: {\n    backgroundColor: \"#373737\",\n    color: \"#fff\",\n    padding: \"1px\",\n    borderRadius: \"4px\",\n    textAlign: \"justify\",\n    paddingRight: \"40px\",\n  },\n\n  boxRed: {\n    backgroundColor: \"#dc2626\",\n    color: \"#fff\",\n    padding: \"1px\",\n    borderRadius: \"4px\",\n    textAlign: \"justify\",\n    paddingRight: \"40px\",\n  },\n\n  boxInfo: {\n    textAlign: \"justify\",\n    backgroundColor: \"#fafafa\",\n    color: \"#333\",\n    padding: \"1px\",\n    borderRadius: \"4px\",\n    paddingRight: \"40px\",\n    border: \"1px solid #eee\",\n  },\n\n  ul: {\n    listStyle: \"none\",\n    padding: \"0\",\n    margin: \"0\",\n  },\n\n  li: {\n    marginBottom: \"15px\",\n  },\n\n  icon: {\n    marginRight: \"8px\",\n  },\n\n  root: {\n    width: \"100%\",\n  },\n\n  lineThrough: {\n    textDecoration: \"line-through\",\n  },\n\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    flexBasis: \"33.33%\",\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n  },\n  secondaryHeading: {\n    fontSize: theme.typography.pxToRem(15),\n  },\n\n  infoDetails: {\n    textAlign: \"left\",\n  },\n\n  infoTitle: {\n    fontWeight: \"800\",\n    marginRight: \"10px\",\n    color: theme.palette.secondary.main,\n    fontSize: \"0.9rem\",\n  },\n\n  infoData: {\n    fontWeight: \"500\",\n    fontSize: \"1rem\",\n  },\n\n  title: {\n    textAlign: \"center\",\n    fontWeight: \"600\",\n    marginLeft: \"10px\",\n    marginBottom: \"5px\",\n  },\n\n  Accordion: {\n    backgroundColor: \"#f5f5f5\",\n    color: \"#222\",\n  },\n\n  AccordionDeleted: {\n    backgroundColor: \"#aaa\",\n    color: \"#555\",\n  },\n\n  DownloadForm: {\n    marginTop: \"10px\",\n    marginBottom: \"10px\",\n  },\n\n  infoDataCharges: {\n    fontSize: \"18px\",\n    color: \"green\",\n    fontWeight: \"600\",\n  },\n\n  infoDataChargesHigher: {\n    fontSize: \"18px\",\n    color: \"red\",\n    fontWeight: \"600\",\n  },\n  BookedLabel: {\n    color: \"#606060\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#606060\",\n    width: \"150px\",\n    display: \"inline-block\",\n  },\n\n  PatientAttendedLabel: {\n    color: \"#0066aa\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#0066aa\",\n    width: \"150px\",\n    display: \"inline-block\",\n  },\n\n  SampleTakenLabel: {\n    color: \"#0066cc\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#0066cc\",\n  },\n\n  ReportSentLabel: {\n    color: \"#009900\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#009900\",\n  },\n\n  ReportCertSentLabel: {\n    color: \"#009900\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#009900\",\n  },\n\n  PositiveLabel: {\n    color: \"red\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"red\",\n  },\n\n  EditButton: {\n    marginBottom: \"20px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n  },\n\n  ResendEmailsButton: {\n    // marginBottom : \"20px\",\n    color: \"#2f942e\",\n    borderColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"#fafffa\",\n      borderColor: \"#2f942e\",\n    },\n    textDecoration: \"none !important\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  PayButton: {\n    marginLeft: \"70px\",\n    width: \"300px\",\n  },\n\n  printInvoiceButton: {\n    marginLeft: \"70px\",\n    fontSize: \"0.8rem\",\n    // width: \"300px\",\n  },\n\n  editInvoiceButton: {\n    marginLeft: \"10px\",\n    fontSize: \"0.8rem\",\n  },\n\n  PayLabel: {\n    marginLeft: \"20px\",\n\n    color: \"#2f942e\",\n    fontWeight: \"500\",\n    textAlign: \"center\",\n  },\n\n  RestoreButton: {\n    marginBottom: \"20px\",\n    backgroundColor: \"#eee\",\n    color: \"#333\",\n    \"&:hover\": {\n      background: \"#f1f1f1\",\n      color: \"#111\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n  },\n\n  UndoTraceButton: {\n    marginBottom: \"20px\",\n    backgroundColor: \"#266900\",\n    color: \"#fff\",\n    \"&:hover\": {\n      background: \"#319400\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n  },\n\n\n  DeleteButton: {\n    marginBottom: \"20px\",\n    backgroundColor: \"#b80012\", \n    color: \"#fff\",\n    \"&:hover\": {\n      background: \"#d90015\",\n      color: \"#fff\",\n    },\n\n    padding: \"10px\",\n  },\n\n  MoveToTraceButton: {\n    marginBottom: \"20px\",\n    backgroundColor: \"#de3800\", \n    color: \"#fff\",\n    \"&:hover\": {\n      background: \"#f73e00\",\n      color: \"#fff\",\n    },\n\n    padding: \"10px\",\n  },\n\n\n  SaveButton: {\n    marginBottom: \"10px\",\n    padding: \"10px\",\n    color: \"#fff\",\n\n    backgroundColor:  \"#bd0d50\",\n    \"&:hover\": {\n      background: \"#d1175e\",\n      color: \"#fff\",\n    },\n  },\n\n  CancelButton: {\n    marginBottom: \"20px\",\n    // padding: \"10px\"\n  },\n\n  TextBox: {\n    padding: \"0px\",\n  },\n\n  checkIcon: {\n    color: \"green\",\n  },\n\n  checkIconSmall: {\n    color: \"green\",\n    paddingTop: \"5px\",\n  },\n\n  closeIcon: {\n    color: \"red\",\n  },\n\n  centeredLabel: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 5,\n    color: \"#fff\",\n  },\n\n  invoiceNumber: {\n    display: \"inline-block\",\n    fontWeight: \"500\",\n    width: \"72px\",\n    fontSize: \"1rem\",\n    color: theme.palette.primary.main,\n  },\n\n  dialogTitle: {\n    backgroundColor: theme.palette.secondary.main,\n    color: \"#fff\",\n  },\n\n  question:{\n    fontSize:\"1.3rem\",\n    fontWeight: \"400\",\n    color: theme.palette.secondary.main,\n    marginTop:\"30px\"\n  },\n\n  answer:{\n    fontSize:\"1.3rem\",\n    fontWeight: \"500\",\n    color: theme.palette.primary.main,\n  },\n\n\n\n}));\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable\n      handle=\"#alert-dialog-slide-title\"\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\n    >\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nexport default function BookingDialog(props) {\n  const classes = useStyles();\n\n  const [state, setState] = React.useContext(GlobalState);\n\n  const [copied, setCopied] = useState(false);\n\n  const [emailSent, setEmailSent] = React.useState(false);\n  const [emailSentInvoice, setEmailSentInvoice] = React.useState(false);\n\n  const [openResendDialog, setOpenResendDialog] = React.useState(false);\n  const [openPayDialog, setOpenPayDialog] = React.useState(false);\n  const [openRefundDialog, setOpenRefundDialog] = React.useState(false);\n\n  const [openInvoiceDialog, setOpenInvoiceDialog] = React.useState(false);\n\n  const [selectedBooking, setSelectedBooking] = React.useState(null);\n\n  const [editMode, setEditMode] = React.useState({ edit: false, person: null });\n  const [deleteMode, setDeleteMode] = React.useState({\n    delete: false,\n    person: null,\n  });\n  const [restoreMode, setRestoreMode] = React.useState({\n    restore: false,\n    person: null,\n  });\n\n  const [traceMode, setTraceMode] = React.useState({\n    trace: false,\n    person: null,\n  });\n  const [unTraceMode, setUnTraceMode] = React.useState({\n    untrace: false,\n    person: null,\n  });\n\n\n  const [saving, setSaving] = React.useState(false);\n  const [deleting, setDeleting] = React.useState(false);\n  const [restoring, setRestoring] = React.useState(false);\n\n  const [validationError, setValidationError] = React.useState({});\n\n  const [bookingDate, setBookingDate] = React.useState(\"\");\n  const [bookingTime, setBookingTime] = React.useState(\"\");\n\n  const [fullname, setFullname] = React.useState(\"\");\n  const [email, setEmail] = React.useState(\"\");\n  const [tel, setTel] = React.useState(\"\");\n  const [notes, setNotes] = React.useState(\"\");\n  const [service, setService] = React.useState(\"\");\n\n  const [refreshData, setRefreshData] = React.useState(false);\n\n  const [booking, setBooking] = React.useState(null);\n\n  const [recordChanged, setRecordChanged] = React.useState(false);\n\n  const [fieldChanged, setFieldChanged] = React.useState(false);\n\n  const [openUndoPayDialog, setOpenUndoPayDialog] = React.useState(false);\n\n  const [openTimeStampDialog, setOpenTimeStampDialog] = React.useState(false);\n\n  const [invoice, setInvoice] = React.useState(null);\n  const [invoiceLoaded, setInvoiceLoaded] = React.useState(false);\n\n  useEffect(() => {\n    if (!props.open) {\n      setTimeout(() => {\n        setEditMode({ edit: false, person: null });\n        setRecordChanged(false);\n      }, 500);\n    }\n  }, [props.open]);\n\n  const bookingDateChanged = (event) => {\n    setBookingDate(event.target.value);\n    setValidationError({ ...validationError, bookingDateError: false });\n    setFieldChanged(!fieldChanged);\n  };\n\n  const bookingTimeChanged = (event) => {\n    setBookingTime(event.target.value);\n    setValidationError({ ...validationError, bookingTimeError: false });\n    setFieldChanged(!fieldChanged);\n  };\n\n  const fullnameChanged = (event) => {\n    setFullname(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const emailChanged = (event) => {\n    setEmail(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const telChanged = (event) => {\n    setTel(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const serviceChanged = (event) => {\n    setService(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const notesChanged = (event) => {\n    setNotes(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const getStatusLabel = (status) => {\n    if (status === \"booked\") {\n      return <div className={classes.BookedLabel}> Booking Made </div>;\n    } else if (status === \"patient_attended\") {\n      return (\n        <div className={classes.PatientAttendedLabel}> Patient Attended </div>\n      );\n    } else {\n      return \"Unknown\";\n    }\n  };\n\n  const handleEditModeChanged = (edit, person) => {\n    if (edit) {\n      setFullname(person.fullname);\n      setBookingDate(FormatDateFromString(person.bookingDate));\n      setBookingTime(person.bookingTime.toUpperCase());\n      setEmail(person.email);\n      setTel(person.phone);\n      if (person.notes) {\n        setNotes(person.notes);\n      }\n\n      setEditMode({ edit: edit, person: person });\n    } else if (!edit && !person) {\n      setEditMode({ edit: edit, person: person });\n      setRecordChanged(false);\n    } else if (!edit && person) {\n      const booking = {};\n      const bookingId = person._id;\n      booking.email = email;\n      booking.phone = tel;\n      booking.fullname = fullname;\n      booking.notes = notes;\n      booking.service = service;\n      booking.bookingDate = RevertFormatDateFromString(bookingDate);\n      booking.bookingTime = bookingTime;\n      booking.bookingRef = person.bookingRef;\n\n      if (validateBooking(booking)) {\n        updateBooking({ bookingId: bookingId, person: booking });\n      }\n    }\n  };\n\n  const validateDate = (str) => {\n    var error = false;\n    if (!str || str.length !== 10) {\n      error = true;\n    }\n\n    if (str.charAt(4) !== \"-\" || str.charAt(7) !== \"-\") {\n      error = true;\n    }\n\n    try {\n      const result = /^\\d{4}-\\d{2}-\\d{2}$/.test(str);\n      if (!result) {\n        error = true;\n      }\n\n      const year = parseInt(str.substr(0, 4));\n      const month = parseInt(str.substr(5, 2));\n      const day = parseInt(str.substr(8, 2));\n\n      if (year < 1900) {\n        error = true;\n      }\n\n      if (month < 1 || month > 12) {\n        error = true;\n      }\n\n      if (day > 31) {\n        error = true;\n      }\n    } catch (err) {\n      error = true;\n    }\n\n    return !error;\n  };\n\n  const validateTime = (str) => {\n    var error = false;\n\n    const result = /^\\d{2}:\\d{2} AM$|^\\d{2}:\\d{2} PM$/.test(str);\n    if (!result) {\n      error = true;\n    }\n\n    try {\n      const hour = parseInt(str.substr(0, 2));\n      const minute = parseInt(str.substr(3, 2));\n\n      if (hour < 0 || hour > 12) {\n        error = true;\n      }\n\n      if (minute < 0 || minute > 59) {\n        error = true;\n      }\n    } catch (err) {\n      error = true;\n    }\n\n    return !error;\n  };\n\n  const validateBooking = (booking) => {\n    var error = false;\n\n    if (!validateDate(booking.bookingDate)) {\n      error = true;\n      setValidationError({ ...validationError, bookingDateError: true });\n    }\n\n    if (!validateTime(booking.bookingTime)) {\n      error = true;\n      setValidationError({ ...validationError, bookingTimeError: true });\n    }\n    return !error;\n  };\n\n  const updateBooking = (payload) => {\n    setSaving(true);\n    bookingService\n      .updateBooking(payload)\n      .then((res) => {\n        setSaving(false);\n        setEditMode({ edit: false, person: null });\n        setRefreshData(!refreshData);\n      })\n      .catch((err) => {\n        setSaving(false);\n        setEditMode({ edit: false, person: null });\n        console.log(err);\n      });\n  };\n\n  const deleteBooking = (id) => {\n    setDeleting(true);\n    bookingService\n      .deleteBooking(id)\n      .then((res) => {\n        setDeleting(false);\n        setDeleteMode({ delete: false, person: null });\n        setRefreshData(!refreshData);\n      })\n      .catch((err) => {\n        setDeleting(false);\n        setDeleteMode({ delete: false, person: null });\n        console.log(err);\n      });\n  };\n\n  const restoreBooking = (id) => {\n    setRestoring(true);\n    bookingService\n      .unDeleteBooking(id)\n      .then((res) => {\n        setRestoring(false);\n        setRestoreMode({ restore: false, person: null });\n        setRefreshData(!refreshData);\n      })\n      .catch((err) => {\n        setRestoring(false);\n        setRestoreMode({ restore: false, person: null });\n        console.log(err);\n      });\n  };\n\n  const handleDeleteModeChanged = (del, person) => {\n    if (del) {\n      setDeleteMode({ delete: del, person: person });\n    } else if (!del && !person) {\n      setDeleteMode({ delete: del, person: person });\n    } else if (!del && person) {\n      deleteBooking(person._id);\n    }\n  };\n\n  const handleRestoreModeChanged = (restore, person) => {\n    if (restore) {\n      setRestoreMode({ restore: restore, person: person });\n    } else if (!restore && !person) {\n      setRestoreMode({ restore: restore, person: person });\n    } else if (!restore && person) {\n      restoreBooking(person._id);\n    }\n  };\n\n\n\n  const traceBooking = (id) => {\n    setDeleting(true);\n    bookingService\n      .moveToTraceFolderBooking(id)\n      .then((res) => {\n        setDeleting(false);\n        setTraceMode({ trace: false, person: null });\n        setRefreshData(!refreshData);\n      })\n      .catch((err) => {\n        setDeleting(false);\n        setTraceMode({ trace: false, person: null });\n        console.log(err);\n      });\n  };\n\n  const unTraceBooking = (id) => {\n    setRestoring(true);\n    bookingService\n      .undoMoveToTraceFolderBooking(id)\n      .then((res) => {\n        setRestoring(false);\n        setUnTraceMode({ untrace: false, person: null });\n        setRefreshData(!refreshData);\n      })\n      .catch((err) => {\n        setRestoring(false);\n        setUnTraceMode({ untrace: false, person: null });\n        console.log(err);\n      });\n  };\n\n  const handleTraceModeChanged = (del, person) => {\n    if (del) {\n      setTraceMode({ trace: del, person: person });\n    } else if (!del && !person) {\n      setTraceMode({ trace: del, person: person });\n    } else if (!del && person) {\n      traceBooking(person._id);\n    }\n  };\n\n  const handleUnTraceModeChanged = (restore, person) => {\n    if (restore) {\n      setUnTraceMode({ untrace: restore, person: person });\n    } else if (!restore && !person) {\n      setUnTraceMode({ untrace: restore, person: person });\n    } else if (!restore && person) {\n      unTraceBooking(person._id);\n    }\n  };\n\n\n  const changeBackToBookingMade = (event, id) => {\n    setSaving(true);\n    BookService.changeBackToBookingMade(id)\n      .then((res) => {\n        setSaving(false);\n        setRefreshData(!refreshData);\n      })\n      .catch((err) => {\n        console.log(err);\n        setSaving(false);\n      });\n  };\n\n  const changeToPatientAttended = (event, id) => {\n    setSaving(true);\n    BookService.changeToPatientAttended(id)\n      .then((res) => {\n        setSaving(false);\n        setRefreshData(!refreshData);\n      })\n      .catch((err) => {\n        console.log(err);\n        setSaving(false);\n      });\n  };\n\n  const Pay = () => {\n    setSelectedBooking(booking);\n    setOpenPayDialog(true);\n  };\n\n  const OpenInvoiceDialog = () => {\n    setSelectedBooking(booking);\n    setInvoice(invoice);\n    setOpenInvoiceDialog(true);\n  };\n\n  useEffect(() => {\n    if (props.booking) {\n      BookService.getBookingById(props.booking._id)\n        .then((res) => {\n          setBooking(res.data);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n\n      setState((state) => ({\n        ...state,\n        bookingDialogDataChanged: !state.bookingDialogDataChanged\n          ? true\n          : false,\n      }));\n    }\n  }, [refreshData, state.bookingPayChanged]);\n\n  useEffect(() => {\n    if (props.booking) {\n      setBooking(props.booking);\n    }\n  }, [props.booking]);\n\n  const undoPaymentClicked = async () => {\n    setSaving(true);\n    try {\n      await BookService.unPayBooking(booking._id);\n      setSaving(false);\n      setOpenUndoPayDialog(false);\n      setRefreshData(!refreshData);\n    } catch (err) {\n      console.error(err);\n      setSaving(false);\n      setOpenUndoPayDialog(false);\n    }\n  };\n\n  const refundPaymentClicked = async () => {\n    setSaving(true);\n    try {\n      await BookService.refundBooking(booking._id);\n      setSaving(false);\n      updateShouldRefundsCount();\n      setOpenRefundDialog(false);\n      setRefreshData(!refreshData);\n    } catch (err) {\n      console.error(err);\n      setSaving(false);\n      setOpenRefundDialog(false);\n    }\n  };\n\n  const updateShouldRefundsCount = async () => {\n    try {\n      const res = await BookService.getShouldRefundsCount();\n      if (res && res.data && res.data.status === \"OK\") {\n        setState((state) => ({ ...state, shouldRefunsCount: res.data.count }));\n      }\n    } catch (ex) {\n      console.error(ex);\n    }\n  };\n\n  const downloadRegForm = (id) => {\n    PDFService.downloadGPRegForm(id)\n      .then((res) => {\n        const file = new Blob([res.data], { type: \"application/pdf\" });\n\n        const fileURL = URL.createObjectURL(file);\n        window.open(fileURL, \"_blank\");\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const downloadInvoice = (id) => {\n    InvoiceService.downloadInvoice(id)\n      .then((res) => {\n        const file = new Blob([res.data], { type: \"application/pdf\" });\n\n        const fileURL = URL.createObjectURL(file);\n        window.open(fileURL, \"_blank\");\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const sendRegForm = (id) => {\n    setSaving(true);\n    setEmailSent(false);\n    BookService.sendRegFormEmail(id)\n      .then((res) => {\n        setSaving(false);\n        if (res.data.status === \"OK\") {\n          setEmailSent(true);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setSaving(false);\n      });\n  };\n\n  const sendInvoiceEmail = (id, _email) => {\n    setSaving(true);\n    setEmailSentInvoice(false);\n    InvoiceService.emailInvoice(id, _email)\n      .then((res) => {\n        setSaving(false);\n        if (res.data.status === \"OK\") {\n          setEmailSentInvoice(true);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setSaving(false);\n      });\n  };\n\n  const onClose = () => {\n    setEmailSent(false);\n    setEmailSentInvoice(false);\n    setInvoice(null);\n    props.onClose();\n  };\n\n  const [openQDialg, setOpenQDialog] = React.useState(false)\n  const handleQDialgClose = () =>\n  {\n    setOpenQDialog(false)\n  }\n\n  const fixQuestion = (str) =>\n  {\n    let result = str.replace('*', '')\n    if (!result.trim().endsWith('?'))\n    {\n      result += '?'\n    }\n    return result\n  }\n\n  return (\n    <React.Fragment>\n      {booking && (\n        <React.Fragment>\n          <Dialog\n            maxWidth=\"xs\"\n            open={props.open}\n            TransitionComponent={Transition}\n            keepMounted\n            onClose={onClose}\n            PaperComponent={PaperComponent}\n            aria-labelledby=\"alert-dialog-slide-title\"\n            aria-describedby=\"alert-dialog-slide-description\"\n          >\n            <DialogTitle\n              id=\"alert-dialog-slide-title\"\n              className={classes.dialogTitle}\n              style={!booking.deleted && booking.traceFolder ? {backgroundColor:\"#de3800\", position:\"relative\"} : {position:\"relative\"}}\n            >\n              {booking.questions && (\n                 <div style={{position:\"absolute\", right:\"10px\", top:\"12px\", backgroundColor:\"#069c00\", fontSize:\"0.85rem\", padding:\"8px\", borderRadius:\"10px\"}}>\n                   Self-Test\n                 </div>\n              )}\n\n\n              <Grid\n                container\n                direction=\"row\"\n                justify=\"center\"\n                spacing={2}\n                alignItems=\"center\"\n              >\n                <Grid item>\n                  <div\n                    style={\n                      booking.deleted\n                        ? {\n                            paddingBottom: \"5px\",\n                            textDecoration: \"line-through\",\n                          }\n                        : (\n                          booking.traceFolder ? {\n                            paddingBottom: \"5px\",\n\n                          } : {\n\n                          }\n                        )\n                    }\n                  >\n                    {`${booking.fullname}`}\n                  </div>\n                </Grid>\n\n                {booking.deleted && (\n                  <Grid item>\n                    <Tooltip title=\"This record has been deleted.\">\n                      <DeleteIcon\n                        style={{\n                          padding: 0,\n                          margin: 0,\n                          color: \"#fff\",\n                          fontSize: 25,\n                        }}\n                      />\n                    </Tooltip>\n                  </Grid>\n                )}\n\n                {!booking.deleted && booking.traceFolder && (\n                  <Grid item>\n                    <Tooltip title=\"This record is in the TRACE folder.\">\n                      <CallIcon\n                        style={{\n                          padding: 0,\n                          margin: 0,\n                          color: \"#fff\",\n                          fontSize: \"2rem\",\n                        }}\n                      />\n                    </Tooltip>\n                  </Grid>\n                )}\n\n              </Grid>\n            </DialogTitle>\n            <DialogContent>\n              <div\n                style={{\n                  // height: \"550px\",\n                  paddingTop: \"0px\",\n                }}\n              >\n                <Grid item xs={12} md={12} key={`panel0`}>\n                  <div className={classes.infoDetails}>\n                    <ul className={classes.ul}>\n                      <li className={classes.li} style={{ marginTop: \"20px\" }}>\n                        <Grid container spacing={2}>\n                          <Grid item xs={12}>\n                            <span className={classes.infoTitle}>\n                              BOOKED DATE :\n                            </span>\n\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {FormatDateFromString(booking.bookingDate)}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                error={validationError.bookingDateError}\n                                className={classes.TextBox}\n                                value={bookingDate}\n                                onChange={bookingDateChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n                          <Grid item xs={12}>\n                            <span className={classes.infoTitle}>\n                              BOOKED TIME :\n                            </span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {booking.bookingTime}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                error={validationError.bookingTimeError}\n                                className={classes.TextBox}\n                                value={bookingTime}\n                                onChange={bookingTimeChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n                        </Grid>\n                      </li>\n\n                      <Divider />\n\n                      <li className={classes.li} style={{ marginTop: \"20px\" }}>\n                        <Grid container spacing={2}>\n                          <Grid item xs={12}>\n                            <span className={classes.infoTitle}>\n                              FULLNAME :{\" \"}\n                            </span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {booking.fullname}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                className={classes.TextBox}\n                                value={fullname}\n                                onChange={fullnameChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n                          <Grid item xs={12}>\n                            <span className={classes.infoTitle}>EMAIL : </span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {booking.email}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                className={classes.TextBox}\n                                value={email}\n                                onChange={emailChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n                          <Grid item xs={12}>\n                            <span className={classes.infoTitle}>TEL : </span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {booking.phone?.toUpperCase()}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                className={classes.TextBox}\n                                value={tel}\n                                onChange={telChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n                        </Grid>\n                      </li>\n\n                      <Divider />\n\n                      <li className={classes.li} style={{ marginTop: \"20px\" }}>\n                        <Grid container spacing={2}>\n                          <Grid item xs={12}>\n                            <span className={classes.infoTitle}>\n                              Consultation :{\" \"}\n                            </span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {booking.faceToFaceConsultation && (\n                                <span> Face to Face </span>\n                              )}\n                              {((booking.faceToFaceConsultation &&\n                                booking.telephoneConsultation) ||\n                                (!booking.faceToFaceConsultation &&\n                                  !booking.telephoneConsultation)) && (\n                                <span\n                                  style={{\n                                    paddingLeft: \"5px\",\n                                    paddingRight: \"5px\",\n                                  }}\n                                >\n                                  {\" \"}\n                                  -{\" \"}\n                                </span>\n                              )}\n                              {booking.telephoneConsultation && (\n                                <span> Telephone </span>\n                              )}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                className={classes.TextBox}\n                                value={fullname}\n                                onChange={fullnameChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n                        </Grid>\n                      </li>\n\n                      <Divider />\n\n                      {booking.questions && (\n                        <React.Fragment>\n                          <div style={{display:\"flex\", justifyContent:\"center\"}}>\n                          <Button fullWidth variant=\"contained\" color=\"primary\" style={{color:\"#fff\",margin:\"10px\"}} onClick={() => setOpenQDialog(true)}>\n                             Show questionnaire\n                          </Button>\n                          </div>\n                          <Divider />\n                        </React.Fragment>\n                      )}\n\n                   \n\n                      \n                      <div style={{marginTop:\"20px\"}}>\n\n                      </div>\n\n                      {/* Restore Functionality ******************************************* */}\n                      <li\n                        hidden={\n                          !(\n                            restoreMode.restore &&\n                            restoreMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <div\n                          style={{\n                            fontWeight: \"500\",\n                            paddingBottom: \"10px\",\n                            paddingLeft: \"5px\",\n                            fontSize: \"16px\",\n                            color: \"#333\",\n                          }}\n                        >\n                          Are you sure you want to restore this record?\n                        </div>\n                      </li>\n\n                      <li\n                        hidden={\n                          !booking.deleted ||\n                          (restoreMode.restore &&\n                            restoreMode.person._id === booking._id)\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"primary\"\n                          onClick={() => {\n                            handleRestoreModeChanged(true, booking);\n                          }}\n                          className={classes.RestoreButton}\n                        >\n                          Restore This Record\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            restoreMode.restore &&\n                            restoreMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"primary\"\n                          disabled={restoring}\n                          onClick={() => {\n                            handleRestoreModeChanged(false, booking);\n                          }}\n                          className={classes.SaveButton}\n                        >\n                          YES, Restore this!\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            restoreMode.restore &&\n                            restoreMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"default\"\n                          disabled={restoring}\n                          onClick={() => {\n                            handleRestoreModeChanged(false, null);\n                          }}\n                          className={classes.CancelButton}\n                        >\n                          Cancel\n                        </Button>\n                      </li>\n\n                      {/*  ******************************************************************* */}\n\n                      {/* Delete Functionality ******************************************* */}\n\n                      <li\n                        hidden={\n                          !(\n                            deleteMode.delete &&\n                            deleteMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <div\n                          style={{\n                            fontWeight: \"600\",\n                            paddingBottom: \"10px\",\n                            paddingLeft: \"5px\",\n                            fontSize: \"16px\",\n                          }}\n                        >\n                          Are you sure you want to archive this record?\n                        </div>\n                      </li>\n\n                      <li\n                        hidden={\n                          props.deleteButtonDisabled ||\n                          unTraceMode.untrace ||\n                          traceMode.trace ||\n                          booking.deleted ||\n                          editMode.edit ||\n                          (deleteMode.delete &&\n                            deleteMode.person._id === booking._id)\n                        }\n                      >\n                        {booking.OTCCharges > 0 && (\n                          <Tooltip title={\"Paid Records Cannot be Deleted!\"}>\n                            <div>\n                              <Button\n                                disabled={booking.OTCCharges > 0}\n                                type=\"button\"\n                                fullWidth\n                                variant=\"contained\"\n                                color=\"primary\"\n                                onClick={() => {\n                                  handleDeleteModeChanged(true, booking);\n                                }}\n                                className={classes.DeleteButton}\n                              >\n                                Archive This Record\n                              </Button>\n                            </div>\n                          </Tooltip>\n                        )}\n                        {\n                          <Button\n                            disabled={booking.OTCCharges > 0}\n                            type=\"button\"\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={() => {\n                              handleDeleteModeChanged(true, booking);\n                            }}\n                            className={classes.DeleteButton}\n                          >\n                            Archive This Record\n                          </Button>\n                        }\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            deleteMode.delete &&\n                            deleteMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"primary\"\n                          disabled={deleting}\n                          onClick={() => {\n                            handleDeleteModeChanged(false, booking);\n                          }}\n                          className={classes.SaveButton}\n                        >\n                          YES, Archive this!\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            deleteMode.delete &&\n                            deleteMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"default\"\n                          disabled={deleting}\n                          onClick={() => {\n                            handleDeleteModeChanged(false, null);\n                          }}\n                          className={classes.CancelButton}\n                        >\n                          Cancel\n                        </Button>\n                      </li>\n\n                      {/* ****************************************************************************************** */}\n\n\n\n                      {/* UnTrace Functionality ******************************************* */}\n                      <li\n                        hidden={\n                          !(\n                            unTraceMode.untrace &&\n                            unTraceMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <div\n                          style={{\n                            fontWeight: \"500\",\n                            paddingBottom: \"10px\",\n                            paddingLeft: \"5px\",\n                            fontSize: \"16px\",\n                            color: \"#333\",\n                          }}\n                        >\n                          Are you sure you want to take this record out of TRACE folder?\n                        </div>\n                      </li>\n\n                      <li\n                        hidden={\n                          deleteMode.delete ||\n                          !booking.traceFolder ||\n                          booking.deleted ||\n                          (unTraceMode.untrace &&\n                            unTraceMode.person._id === booking._id)\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"primary\"\n                          onClick={() => {\n                            handleUnTraceModeChanged(true, booking);\n                          }}\n                          className={classes.UndoTraceButton}\n                        >\n                          Take This out of Trace Folder\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            unTraceMode.untrace &&\n                            unTraceMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"primary\"\n                          disabled={restoring}\n                          onClick={() => {\n                            handleUnTraceModeChanged(false, booking);\n                          }}\n                          className={classes.SaveButton}\n                        >\n                          YES, Take this record out of TRACE Folder!\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            unTraceMode.untrace &&\n                            unTraceMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"default\"\n                          disabled={restoring}\n                          onClick={() => {\n                            handleUnTraceModeChanged(false, null);\n                          }}\n                          className={classes.CancelButton}\n                        >\n                          Cancel\n                        </Button>\n                      </li>\n\n                      {/*  ******************************************************************* */}\n\n                      {/* Move To Trace Folder Functionality ******************************************* */}\n\n                      <li\n                        hidden={\n                          !(\n                            traceMode.trace &&\n                            traceMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <div\n                          style={{\n                            fontWeight: \"600\",\n                            paddingBottom: \"10px\",\n                            paddingLeft: \"5px\",\n                            fontSize: \"16px\",\n                          }}\n                        >\n                          Are you sure you want to move this record to TRACE folder?\n                        </div>\n                      </li>\n\n                      <li\n                        hidden={\n                          booking.deleted ||\n                          booking.traceFolder || \n                          deleteMode.delete ||\n                          editMode.edit ||\n                          (traceMode.trace &&\n                            traceMode.person._id === booking._id)\n                        }\n                      >\n                        {\n                          <Button\n                            type=\"button\"\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={() => {\n                              handleTraceModeChanged(true, booking);\n                            }}\n                            className={classes.MoveToTraceButton}\n                          >\n                            Move To Trace Folder\n                          </Button>\n                        }\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            traceMode.trace &&\n                            traceMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"primary\"\n                          disabled={deleting}\n                          onClick={() => {\n                            handleTraceModeChanged(false, booking);\n                          }}\n                          className={classes.SaveButton}\n                        >\n                          YES, Move To TRACE Folder!\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            traceMode.trace &&\n                            traceMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"default\"\n                          disabled={deleting}\n                          onClick={() => {\n                            handleTraceModeChanged(false, null);\n                          }}\n                          className={classes.CancelButton}\n                        >\n                          Cancel\n                        </Button>\n                      </li>\n\n                      {/* ****************************************************************************************** */}\n\n\n                    </ul>\n                  </div>\n                </Grid>\n              </div>\n              <Backdrop\n                className={classes.backdrop}\n                open={saving || deleting || restoring}\n              >\n                <CircularProgress color=\"inherit\" />\n              </Backdrop>\n            </DialogContent>\n          </Dialog>\n\n          <Dialog\n            open={openQDialg}\n            onClose={handleQDialgClose}\n            maxWidth=\"sm\"\n          >\n            <DialogContent>\n                      {booking.questions && JSON.parse(booking.questions).map(item => (\n                        <div >\n                          <div className={classes.question}>\n                            {fixQuestion(item.question)}\n                          </div>\n                          <div className={classes.answer}>\n                            {item.answer}\n                          </div>\n                        </div>\n                      ))}\n            </DialogContent>\n\n            <DialogActions>\n              <Button onClick={() => setOpenQDialog(false)}>\n                Close\n              </Button>\n            </DialogActions>\n\n          </Dialog>\n\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n}\n","import React, {useEffect, useRef, useState} from 'react';\nimport { DataGrid } from '@material-ui/data-grid';\nimport BookService from './services/BookService';\nimport { Button, Checkbox, CircularProgress, Dialog, DialogContent, DialogTitle, Divider, FormControl, FormControlLabel, Grid, Icon, InputLabel, LinearProgress, Link, makeStyles, MenuItem, Paper, Select, SvgIcon, Switch, TextField, Tooltip } from '@material-ui/core';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport { IconButton } from '@material-ui/core';\nimport CheckIcon from '@material-ui/icons/Check';\nimport CloseIcon from '@material-ui/icons/Close';\nimport GlobalState from '../GlobalState';\nimport { getMenuIndex } from '../MenuList';\nimport {FormatDateFromString, FormatDateFromStringShortYear} from './DateFormatter';\n\nimport SearchIcon from '@material-ui/icons/Search';\nimport BookingDialog from './BookingDialog';\n\nimport NewReleasesIcon from '@material-ui/icons/NewReleases';\nimport HistoryIcon from '@material-ui/icons/History';\nimport TimelineIcon from '@material-ui/icons/Timeline';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport AutorenewIcon from '@material-ui/icons/Autorenew';\nimport LiveTvIcon from '@material-ui/icons/LiveTv';\nimport PlaylistAddCheckIcon from '@material-ui/icons/PlaylistAddCheck';\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport HourglassEmptyIcon from '@material-ui/icons/HourglassEmpty';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faFileExcel } from \"@fortawesome/free-solid-svg-icons\";\nimport Draggable from 'react-draggable';\n\nimport * as dateformat from 'dateformat';\n\nimport DateFnsUtils from '@date-io/date-fns';\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardTimePicker,\n  KeyboardDatePicker,\n} from '@material-ui/pickers';\n\nimport BusinessIcon from '@material-ui/icons/Business';\nimport CreditCardIcon from '@material-ui/icons/CreditCard';\nimport LocalAtmIcon from '@material-ui/icons/LocalAtm';\n\n\nimport ReactHTMLTableToExcel from 'react-html-table-to-excel';\nimport PriceCalculator from './PriceCalculator';\nimport { corporates } from './Corporates';\n\nimport CallIcon from '@material-ui/icons/Call';\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    marginTop: theme.spacing(0),\n    marginBottom: theme.spacing(1),\n\n  },\n  \n  refreshButton:{\n    marginLeft: theme.spacing(2),\n  },\n\n  checkIcon:{\n    color: \"green\"\n  },\n\n  closeIcon:{\n    color: \"red\"\n  },\n\n  RefLink: {\n    cursor: \"pointer\"\n  },\n\n  BookedLabel:{\n    backgroundColor: \"#606060\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  PatientAttendedLabel:{\n    backgroundColor: \"#0066aa\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  SampleTakenLabel:{\n    backgroundColor: \"#0066cc\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  ReportSentLabel:{\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  ReportCertSentLabel:{\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  PositiveLabel:{\n    backgroundColor: \"red\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  HideNowRows: {\n    position: \"absolute\",\n    top: \"40%\",\n    left: \"40%\",\n    width: \"600px\",\n    height: \"300px\",\n    backgroundColor : \"#fafafa\",\n    color : \"#111\",\n    zIndex: \"1000\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyItems: \"center\"\n  },\n\n  ExportToExcelButton:\n  {\n    // marginBottom : \"20px\",\n    color : \"#2f942e\",\n    borderColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"#fafffa\",\n      borderColor: \"#2f942e\",\n    },\n    textDecoration : \"none !important\", \n   \n  },\n\n  ExportToExcelButtonInline:\n  {\n    // marginBottom : \"20px\",\n    color : \"#2f942e\",\n    borderColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"#fafffa\",\n      borderColor: \"#2f942e\",\n    },\n    textDecoration : \"none !important\", \n    cursor: \"pointer\",\n    padding: \"10px\"\n   \n  },\n\n  table: {\n    width: \"100%\",\n    border: \"1px solid #ddd\",\n    borderCollapse: \"collapse\",\n},\n\nth: {\n    border: \"1px solid #ddd\",\n    borderCollapse: \"collapse\",\n    verticalAlign: \"middle\",\n    fontcolor: \"#555\",\n    fontWeight: \"400\",\n    fontSize: \"15px\",\n    paddingTop: \"5px\",\n    paddingBottom: \"5px\",\n    width: \"14%\",\n    paddingLeft: \"5px\",\n},\n\ntd: {\n    border: \"1px solid #ddd\",\n    borderCollapse: \"collapse\",\n    verticalAlign: \"middle\",\n    paddingLeft: \"5px\",\n},\n\ntopSelect: {\n  margin: theme.spacing(1),\n  minWidth: 80,\n},\n\nnotifyIcon:{\n  width: \"16px\",\n  height: \"16px\",\n  borderRadius: \"50%\",\n  backgroundColor : \"rgb(220, 0, 78)\",\n  marginLeft: \"10px\"\n}\n\n}));\n\nconst getTableTitle = (str) =>{\n\n  if (str === 'today')\n  {\n    return `Today's Bookings`;\n  }else if (str === 'old')\n  {\n    return `Old Bookings`;\n  }else if (str === 'future')\n  {\n    return `Future Bookings`;\n  }else if (str === 'recent')\n  {\n    return `Recent Bookings`;\n  }else if (str === 'live')\n  {\n    return `Live Bookings`;\n  }else if (str === 'completed')\n  {\n    return `Completed Bookings`;\n  }else if (str === 'positive')\n  {\n    return `Positive Results`;\n  }else if (str === 'trace')\n  {\n    return `Patients to Trace`;\n  }else if (str === 'deleted')\n  {\n    return `Archived Records`;\n  }else if (str === 'late')\n  {\n    return `40 Hours Late`;\n  }\n  \n  else\n  {\n    return `All Bookings`;\n  }\n\n}\n\nconst getTableIcon = (str) =>{\n\n  if (str === 'today')\n  {\n    return <NewReleasesIcon style={{fontSize:\"2.2rem\"}} />;\n  }else if (str === 'old')\n  {\n    return <HistoryIcon style={{fontSize:\"2.2rem\"}} />;\n  }else if (str === 'future')\n  {\n    return <TimelineIcon style={{fontSize:\"2.2rem\"}} />;\n  }else if (str === 'recent')\n  {\n    return <AutorenewIcon style={{fontSize:\"2.2rem\"}} />;\n  }else if (str === 'live')\n  {\n    return <LiveTvIcon style={{fontSize:\"2.2rem\"}} />;\n  }else if (str === 'completed')\n  {\n    return  <PlaylistAddCheckIcon style={{fontSize:\"2.2rem\"}} />;\n  }else if (str === 'positive')\n  {\n    return <AddCircleOutlineIcon style={{fontSize:\"2.2rem\"}} />\n  }else if (str === 'trace')\n  {\n    return <CallIcon style={{fontSize:\"2.2rem\"}} />;\n  }else if (str === 'deleted')\n  {\n    return <DeleteIcon style={{fontSize:\"2.2rem\"}} />;\n  }else if (str === 'late')\n  {\n    return <HourglassEmptyIcon style={{fontSize:\"2.2rem\"}} />;\n  }\n  \n  else\n  {\n    return <DescriptionIcon style={{fontSize:\"2.2rem\"}} />;\n  }\n\n}\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'}>\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nexport default function BookingTable(props) {\n  \n  const classes = useStyles();\n\n  const [topCount, setTopCount] = React.useState(25)\n  const topCountChanged = (event) =>\n  {\n    setTopCount(event.target.value)\n    loadData(event.target.value)\n  }\n  \n\n  const [openDialogExcel, setOpenDialogExcel] = useState(false);\n  const handleCloseDialogExcel = () =>\n  {\n    setCorporate(corporates[0]);\n    setJustCorporate(false);\n    setOpenDialogExcel(false);\n  }\n\n\n  const [fromDate, setFromDate] = React.useState(new Date(new Date().getTime() - 7 * 24 * 60 * 60 * 1000 ));\n  const handleFromDateChange = (date) => {\n    setFromDate(date);\n    setFromDateStr(dateformat(date,'yyyy-mm-dd'));\n  };\n\n  const [untilDate, setUntilDate] = React.useState(new Date(new Date().getTime() - 1 * 24 * 60 * 60 * 1000 ));\n  const handleUntilDateChange = (date) => {\n    setUntilDate(date);\n    seUntilDateStr(dateformat(date,'yyyy-mm-dd'));\n  };\n\n  const [fromDateStr, setFromDateStr] = useState(dateformat(new Date(new Date().getTime() - 7 * 24 * 60 * 60 * 1000 ), 'yyyy-mm-dd'));\n  const [untilDateStr, seUntilDateStr] = useState(dateformat(new Date(new Date().getTime() - 1 * 24 * 60 * 60 * 1000 ), 'yyyy-mm-dd'));\n\n  const [justCorporate, setJustCorporate] = useState(false);\n\n  const[chkDate, setChkDate] = useState(true);\n  const[chkForename, setChkForename] = useState(true);\n  const[chkSurname, setChkSurname] = useState(true);\n  const[chkDOB, setChkDOB] = useState(true);\n  const[chkEmail, setChkEmail] = useState(true);\n  const[chkTel, setChkTel] = useState(true);\n  const[chkCertificate, setChkCertidicate] = useState(true);\n  const[chkAntiBodyTest, setChkAntiBodyTest] = useState(true);\n  const[chkextRef, setChkExtRef] = useState(true);\n  const[chkPrice, setChkPrice] = useState(true);\n\n  const justCorporateChanged = (event) =>\n  {\n    setJustCorporate(event.target.checked);\n  }\n  \n\n  const chkDateChanged = (event) =>\n  {\n    setChkDate(event.target.checked);\n  }\n\n  const chkForenameChanged = (event) =>\n  {\n    setChkForename(event.target.checked);\n  }\n\n  const chkSurnameChanged = (event) =>\n  {\n    setChkSurname(event.target.checked);\n  }\n\n  const chkDOBChanged = (event) =>\n  {\n    setChkDOB(event.target.checked);\n  }\n\n  const chkEmailChanged = (event) =>\n  {\n    setChkEmail(event.target.checked);\n  }\n\n  const chkTelChanged = (event) =>\n  {\n    setChkTel(event.target.checked);\n  }\n\n  const chkCertificateChanged = (event) =>\n  {\n    setChkCertidicate(event.target.checked);\n  }\n\n  const chkAntiBodyTestChanged = (event) =>\n  {\n    setChkAntiBodyTest(event.target.checked);\n  }\n\n  const chkextRefChanged = (event) =>\n  {\n    setChkExtRef(event.target.checked);\n  }\n\n  const chkPriceChanged = (event) =>\n  {\n    setChkPrice(event.target.checked);\n  }\n\n\n\n  var columns = [];\n\n  if (props.date === 'recent')\n  {\n    columns = [\n      // { field: 'id', headerName: '#', width: 70 },\n\n      {\n        field: \"_id\",\n        headerName: \" \",\n        width: 120,\n        renderCell: (params) => {\n          return (\n            <React.Fragment>\n              <IconButton\n                color=\"primary\"\n                onClick={(event) => openDetailsDialog(event, params.value)}\n              >\n                <SearchIcon />\n              </IconButton>\n\n              <span\n                style={{\n                  color: \"#058700\",\n                  fontWeight: \"500\",\n                  fontSize: \"0.8rem\",\n                }}\n              >\n                {params.getValue(\"questions\") && \"Self-Test\"}\n              </span>\n            </React.Fragment>\n          );\n        },\n      },\n\n      {\n        field: \"timeStamp\",\n        headerName: \"TimeStamp\",\n        width: 200,\n        valueFormatter: (params) => {\n          return formatTimeStamp(params.value);\n        },\n      },\n\n      {\n        field: \"bookingDate\",\n        headerName: \"B Date\",\n        width: 110,\n        valueFormatter: (params) => {\n          return FormatDateFromString(params.value);\n        },\n      },\n      {\n        field: \"bookingTimeNormalized\",\n        headerName: \"B Time\",\n        width: 200,\n        valueGetter: (params) => {\n          return params.getValue(\"bookingTime\");\n        },\n      },\n      { field: \"fullname\", headerName: \"Fullname\", width: 250 },\n      { field: \"email\", headerName: \"Email\", width: 200 },\n      { field: \"phone\", headerName: \"Telephone\", width: 150 },\n      {\n        field: \"faceToFaceConsultation\",\n        headerName: \"Consultation\",\n        width: 250,\n        renderCell: (params) => {\n          return (\n            <React.Fragment>\n              {params.getValue(\"faceToFaceConsultation\") && (\n                <span> Face to Face </span>\n              )}\n              {params.getValue(\"faceToFaceConsultation\") && (\n                <span style={{ paddingLeft: \"5px\", paddingRight: \"5px\" }}>\n                  {\" \"}\n                  -{\" \"}\n                </span>\n              )}\n              {params.getValue(\"telephoneConsultation\") && (\n                <span> Telephone </span>\n              )}\n            </React.Fragment>\n          );\n        },\n      },\n    ];\n\n  }\n  else\n  {\n    columns = [\n      // { field: 'id', headerName: '#', width: 70 },\n  \n      {\n        field: \"_id\",\n        headerName: \" \",\n        width: 120,\n        renderCell: (params) => {\n          return (\n            <React.Fragment>\n              <IconButton\n                color=\"primary\"\n                onClick={(event) => openDetailsDialog(event, params.value)}\n              >\n                <SearchIcon />\n              </IconButton>\n\n              <span\n                style={{\n                  color: \"#058700\",\n                  fontWeight: \"500\",\n                  fontSize: \"0.8rem\",\n                }}\n              >\n                {params.getValue(\"questions\") && \"Self-Test\"}\n              </span>\n            </React.Fragment>\n          );\n        },\n      },\n\n\n\n\n  \n      { field: 'bookingDate', headerName: 'B Date', width: 110, valueFormatter: (params) => { \n              return FormatDateFromString(params.value);\n          }\n       },\n      { field: 'bookingTimeNormalized', headerName: 'B Time', width: 200 , valueGetter: (params) => {\n        return params.getValue('bookingTime');\n      }},\n      { field: 'fullname', headerName: 'Fullname', width: 250 },\n      { field: 'email', headerName: 'Email', width: 200 },\n      { field: 'phone', headerName: 'Telephone', width: 150 },\n      { field: 'faceToFaceConsultation', headerName: 'Consultation', width: 250 , renderCell: (params) => {\n        return (\n          <React.Fragment>\n              {params.getValue('faceToFaceConsultation') && <span> Face to Face </span>}\n              {params.getValue('faceToFaceConsultation') && <span style={{paddingLeft:\"5px\", paddingRight:\"5px\"}}> - </span>}\n              {params.getValue('telephoneConsultation') && <span> Telephone </span>}\n          </React.Fragment>\n        )\n      }},\n    \n    ];\n  \n\n  }\n\n\n\n  const [state, setState] = React.useContext(GlobalState);  \n\n  const [data, setData] = React.useState({bookings: [] , cachedBookings: [], isFetching : true});\n\n  const [selectedRow, setSelectedRow] = React.useState(null);\n\n  const [selectedBooking, setSelectedBooking] = React.useState(null);\n  const [seeDetailsDialogOpen, setSeeDetailsDialogOpen] = React.useState(false);\n\n  const [corporate, setCorporate] = useState(corporates[0]);\n  const corporateChanged = (event) =>\n  {\n    setCorporate(event.target.value);\n  }\n  \n\n  const [filter,setFilter] = React.useState('');\n\n\n  const lastPromise = useRef();\n\n  const formatTimeStamp = (timeStamp) =>\n  {\n    const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\n    const timeStampStr = dateformat(timeStamp, 'yyyy-mm-dd');\n    if (todayStr === timeStampStr)\n    {\n      return dateformat(timeStamp, \"'Today', h:MM:ss TT\");\n    }\n    else\n    {\n       return dateformat(timeStamp, \"mmm dS, h:MM:ss TT\");\n    }\n  }\n\n  const loadData = (top) =>\n  {\n    var api = BookService.getAllBookings;\n    if (props.date === 'today')\n    {\n      api = BookService.getTodayBookings;\n    }else if (props.date === 'old')\n    {\n      api = BookService.getOldBookings;\n    }else if (props.date === 'future')\n    {\n      api = BookService.getFutureBookings;\n    }else if (props.date === 'recent')\n    {\n      api = BookService.getRecentBookingsAll;\n    }\n    else if (props.date === 'deleted')\n    {\n      api = BookService.getDeletedBookings;\n    }\n    else if (props.date === 'trace')\n    {\n      api = BookService.getTraceFolderBookings;\n    }\n\n     \n    setData({bookings: [], cachedBookings: [], isFetching: true});\n   \n    // console.log(props)\n\n    const currentPromise = api(top).then( (res) =>{\n      // console.log(res)\n      for (var i=0; i < res.data.length; i++)\n      {\n        res.data[i] = {...res.data[i], id : i + 1}\n      }  \n      setData({bookings: [...res.data], cachedBookings: [...res.data], isFetching: false});\n      // return res.data;\n    }).catch(err => {\n      console.error(err)\n    })\n\n    // lastPromise.current = currentPromise;\n\n    // currentPromise.then(\n    //   result => {\n    //     if (currentPromise === lastPromise.current) {\n    //       setData({bookings: [...result], cachedBookings: [...result], isFetching: false});\n    //       setPage(1);\n    //     }\n    //   },\n    //   e => {\n    //     if (currentPromise === lastPromise.current) {\n    //         console.error(e);\n    //         setData({bookings: data.bookings, cachedBookings: data.cachedBookings, isFetching: false});\n    //     }\n    //   });\n\n  }\n\n  useEffect( () => {\n            setTopCount(25)\n            loadData(25)\n        },\n        [props.date]);\n\n\n\n\n  useEffect( () => {\n\n        if (filter && filter.trim().length > 0)\n        {\n          var filteredData = data.cachedBookings.filter( (element) => \n\n             (element.fullname?.toLowerCase().indexOf(filter.toLowerCase()) >= 0)\n              \n          );\n  \n  \n          setData({bookings: [...filteredData], cachedBookings: data.cachedBookings, isFetching: false});\n        }else\n        {\n          setData({bookings: [...data.cachedBookings], cachedBookings: data.cachedBookings, isFetching: false});\n        }\n      },\n      [filter]);\n\n  \n      useEffect(() => {\n\n       loadData(topCount)\n    \n      }, [state.bookingDialogDataChanged]);    \n\n\n  const handleCloseSeeDetaisDialog = () =>\n  {\n    setSelectedBooking(null);\n    setSeeDetailsDialogOpen(false);\n  }    \n  \n  const openDetailsDialog = (event, id) =>\n  {\n    const booking = data.bookings.find(element => element._id === id);\n    setSelectedBooking(booking);\n    setSeeDetailsDialogOpen(true);\n\n  }\n\n  const refreshClicked = (event) =>{\n    setFilter('');\n    loadData(topCount)\n  }\n\n  const filterChanged = (event) =>{\n    setFilter(event.target.value);\n  }\n\n  const handleSelectionChanged = (newSelection) =>\n  {\n    if (newSelection.length > 0){\n      setSelectedRow(newSelection.rows[0]);\n    }\n    \n  }\n\n  const [page, setPage] = React.useState(1);\n\n  const handleExcelButtonClicked = (event) =>\n  {\n    setOpenDialogExcel(true);\n  }\n\n  const isTopSelectHidden = (date)=>\n  {\n    return date === 'live' || date === 'positive' || date === 'late' || date === 'today'\n  }\n\n\n  return (\n    <React.Fragment>\n      {data.isFetching && (\n        <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\n          <LinearProgress color=\"primary\" />\n        </div>\n      )}\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"space-between\"\n        alignItems=\"flex-end\"\n      >\n        <Grid item md={4}>\n          <div style={{ textAlign: \"left\", paddingLeft: \"10px\" }}>\n            <Grid\n              container\n              direction=\"row\"\n              justify=\"flex-start\"\n              alignItems=\"center\"\n            >\n              <Grid item>\n                <span style={{ paddingRight: \"15px\", color: \"#555\" }}>\n                  {\" \"}\n                  {getTableIcon(props.date)}{\" \"}\n                </span>\n              </Grid>\n              <Grid item>\n                <span\n                  style={{\n                    fontSize: \"1.4rem\",\n                    fontWeight: \"600\",\n                    color: \"#444\",\n                  }}\n                >\n                  {\" \"}\n                  {getTableTitle(props.date)}{\" \"}\n                </span>\n              </Grid>\n              <Grid item>\n                <Tooltip title=\"Refresh\" placement=\"right\">\n                  <IconButton\n                    color=\"primary\"\n                    className={classes.refreshButton}\n                    onClick={refreshClicked}\n                  >\n                    <RefreshIcon />\n                  </IconButton>\n                </Tooltip>\n              </Grid>\n            </Grid>\n          </div>\n        </Grid>\n\n        <Grid item md={3}>\n          {props.date === \"completed\" && state.showCreateExcel && (\n            <div style={{ paddingBottom: \"5px\" }}>\n              <Button\n                className={classes.ExportToExcelButton}\n                variant=\"outlined\"\n                color=\"default\"\n                onClick={handleExcelButtonClicked}\n                startIcon={\n                  <FontAwesomeIcon\n                    style={{ color: \"#009900\" }}\n                    icon={faFileExcel}\n                  />\n                }\n              >\n                export to excel\n              </Button>\n            </div>\n          )}\n        </Grid>\n\n        {data.isFetching && <div className={classes.HideNowRows}></div>}\n\n        <Grid item md={3}>\n          <TextField\n            variant=\"standard\"\n            value={filter}\n            onChange={filterChanged}\n            margin=\"normal\"\n            size=\"small\"\n            id=\"filter\"\n            label=\"Filter\"\n            name=\"filter\"\n            autoComplete=\"off\"\n          />\n        </Grid>\n\n        <Grid item hidden={isTopSelectHidden(props.date)}>\n          <FormControl className={classes.topSelect}>\n            <InputLabel id=\"top-select-label\">Limit</InputLabel>\n            <Select\n              labelId=\"top-select-label\"\n              id=\"top-simple-select\"\n              value={topCount}\n              onChange={topCountChanged}\n            >\n              <MenuItem value={25}>25</MenuItem>\n              <MenuItem value={50}>50</MenuItem>\n              <MenuItem value={100}>100</MenuItem>\n              <MenuItem value={500}>500</MenuItem>\n              <MenuItem value={1000}>1000</MenuItem>\n              <MenuItem value={10000}>ALL</MenuItem>\n            </Select>\n          </FormControl>\n\n          {/* <Button onClick={() => loadData(true)}> Show all records </Button> */}\n        </Grid>\n      </Grid>\n\n      <div style={{ height: 700, width: \"100%\" }}>\n        <DataGrid\n          rows={data.bookings}\n          columns={columns}\n          autoPageSize\n          page={page}\n          onPageChange={(params) => {\n            setPage(params.page);\n          }}\n          onSelectionChange={handleSelectionChanged}\n        />\n      </div>\n\n\n      <BookingDialog\n        booking={selectedBooking}\n        open={seeDetailsDialogOpen && selectedBooking && selectedBooking.fullname}\n        onClose={handleCloseSeeDetaisDialog}\n      />\n\n      {data.bookings && data.bookings.length > 0 && (\n        <Dialog\n          maxWidth=\"lg\"\n          open={openDialogExcel}\n          onClose={handleCloseDialogExcel}\n          PaperComponent={PaperComponent}\n          aria-labelledby=\"form-dialog-title\"\n        >\n          <DialogTitle id=\"draggable-dialog-title\">\n            <Grid\n              container\n              spacing={2}\n              direction=\"row\"\n              justify=\"center\"\n              alignItems=\"center\"\n            >\n              <Grid item>\n                <FontAwesomeIcon\n                  style={{ color: \"#2f942e\", fontSize: \"2rem\" }}\n                  icon={faFileExcel}\n                />\n              </Grid>\n\n              <Grid item>\n                <div\n                  style={{\n                    color: \"#2f942e\",\n                    paddingBottom: \"5px\",\n                    fontWeight: \"800\",\n                  }}\n                >\n                  {\" \"}\n                  Export to EXCEL{\" \"}\n                </div>\n              </Grid>\n            </Grid>\n\n            <Divider />\n          </DialogTitle>\n          <DialogContent>\n            <div\n              style={{\n                minHeight: \"600px\",\n                maxHeight: \"600px\",\n                minWidth: \"1200px\",\n                maxWidth: \"1200px\",\n              }}\n            >\n              <div>\n                <Grid row container justify=\"center\" spacing={3}>\n                  <Grid item>\n                    <FormControlLabel\n                      control={\n                        <Switch\n                          checked={justCorporate}\n                          onChange={justCorporateChanged}\n                          name=\"justCorporate\"\n                        />\n                      }\n                      label=\"Just Corporate Records\"\n                    />\n                  </Grid>\n\n                  {justCorporate && (\n                    <Grid item>\n                      <FormControl\n                        style={{ marginTop: \"0px\" }}\n                        className={classes.formControl}\n                      >\n                        <Select\n                          labelId=\"select-corporate\"\n                          id=\"select-corporate-id\"\n                          value={corporate}\n                          onChange={corporateChanged}\n                        >\n                          {corporates.map((element) => (\n                            <MenuItem value={element}>{`${element}`}</MenuItem>\n                          ))}\n                        </Select>\n                      </FormControl>\n                    </Grid>\n                  )}\n                </Grid>\n\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                  <Grid row container justify=\"center\" spacing={3}>\n                    <Grid item>\n                      <KeyboardDatePicker\n                        disableToolbar\n                        variant=\"inline\"\n                        format=\"dd/MM/yyyy\"\n                        margin=\"normal\"\n                        id=\"date-picker-from\"\n                        label=\"From\"\n                        value={fromDate}\n                        onChange={handleFromDateChange}\n                        KeyboardButtonProps={{\n                          \"aria-label\": \"change date\",\n                        }}\n                      />\n                    </Grid>\n\n                    <Grid item>\n                      <KeyboardDatePicker\n                        disableToolbar\n                        variant=\"inline\"\n                        format=\"dd/MM/yyyy\"\n                        margin=\"normal\"\n                        id=\"date-picker-until\"\n                        label=\"Until\"\n                        value={untilDate}\n                        onChange={handleUntilDateChange}\n                        KeyboardButtonProps={{\n                          \"aria-label\": \"change date\",\n                        }}\n                      />\n                    </Grid>\n\n                    <Grid item>\n                      <div style={{ paddingTop: \"30px\", marginLeft: \"20px\" }}>\n                        <ReactHTMLTableToExcel\n                          id=\"test-table-xls-button\"\n                          className={classes.ExportToExcelButtonInline}\n                          table=\"table-to-xls\"\n                          filename={`PCR.Report.${fromDateStr}.${untilDateStr}`}\n                          sheet=\"PCR-Report\"\n                          buttonText=\"Download as XLS\"\n                        />\n                      </div>\n                    </Grid>\n                  </Grid>\n                </MuiPickersUtilsProvider>\n              </div>\n\n              <div>\n                <Grid container spacing={3}>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkDate}\n                          onChange={chkDateChanged}\n                          name=\"chkDate\"\n                        />\n                      }\n                      label=\"Date\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkForename}\n                          onChange={chkForenameChanged}\n                          name=\"chkForename\"\n                        />\n                      }\n                      label=\"Forename\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkSurname}\n                          onChange={chkSurnameChanged}\n                          name=\"chkSurname\"\n                        />\n                      }\n                      label=\"Surname\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkDOB}\n                          onChange={chkDOBChanged}\n                          name=\"chkDOB\"\n                        />\n                      }\n                      label=\"D.O.B\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkEmail}\n                          onChange={chkEmailChanged}\n                          name=\"chkEmail\"\n                        />\n                      }\n                      label=\"Email\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkTel}\n                          onChange={chkTelChanged}\n                          name=\"chkTel\"\n                        />\n                      }\n                      label=\"Tel\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkCertificate}\n                          onChange={chkCertificateChanged}\n                          name=\"chkCertificate\"\n                        />\n                      }\n                      label=\"Certificate\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkAntiBodyTest}\n                          onChange={chkAntiBodyTestChanged}\n                          name=\"chkAntiBodyTest\"\n                        />\n                      }\n                      label=\"AntiBodyTest\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkextRef}\n                          onChange={chkextRefChanged}\n                          name=\"chkextRef\"\n                        />\n                      }\n                      label=\"Lab No.\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkPrice}\n                          onChange={chkPriceChanged}\n                          name=\"chkPrice\"\n                        />\n                      }\n                      label=\"Price\"\n                    />\n                  </Grid>\n                </Grid>\n              </div>\n\n              <div style={{ width: \"100%\", paddingTop: \"20px\" }}>\n                <table className={classes.table} id=\"table-to-xls\">\n                  <tr>\n                    {chkDate && <th className={classes.th}>Date</th>}\n                    {chkForename && <th className={classes.th}>Forename</th>}\n                    {chkSurname && <th className={classes.th}>Surename</th>}\n                    {chkDOB && <th className={classes.th}>D.O.B</th>}\n                    {chkEmail && <th className={classes.th}>Email</th>}\n                    {chkTel && <th className={classes.th}>Tel</th>}\n                    {chkCertificate && (\n                      <th className={classes.th}>Certificate</th>\n                    )}\n                    {chkAntiBodyTest && (\n                      <th className={classes.th}>AntiBodyTest</th>\n                    )}\n                    {chkextRef && <th className={classes.th}>Lab No.</th>}\n                    {chkPrice && <th className={classes.th}>Price (£) </th>}\n                  </tr>\n\n                  {data.bookings\n                    .filter((booking) => {\n                      if (!justCorporate) {\n                        return (\n                          booking.bookingDate >= fromDateStr &&\n                          booking.bookingDate <= untilDateStr\n                        );\n                      } else {\n                        return (\n                          booking.bookingDate >= fromDateStr &&\n                          booking.bookingDate <= untilDateStr &&\n                          booking.paid &&\n                          booking.paidBy === \"corporate\" &&\n                          booking.corporate === corporate\n                        );\n                      }\n                    })\n\n                    .map((booking) => (\n                      <tr>\n                        {chkDate && (\n                          <td className={classes.td}>\n                            {FormatDateFromString(booking.bookingDate)}\n                          </td>\n                        )}\n                        {chkForename && (\n                          <td className={classes.td}>\n                            {booking.forenameCapital}\n                          </td>\n                        )}\n                        {chkSurname && (\n                          <td className={classes.td}>\n                            {booking.surnameCapital}\n                          </td>\n                        )}\n                        {chkDOB && (\n                          <th className={classes.th}>\n                            {/* {FormatDateFromString(booking.birthDate)} */}\n                          </th>\n                        )}\n                        {chkEmail && (\n                          <td className={classes.td}>{booking.email}</td>\n                        )}\n                        {chkTel && (\n                          <td className={classes.td}>{booking.phone}</td>\n                        )}\n                        {chkCertificate && (\n                          <td className={classes.td}>\n                            {booking.certificate ? \"YES\" : \"NO\"}\n                          </td>\n                        )}\n                        {chkAntiBodyTest && (\n                          <td className={classes.td}>\n                            {booking.antiBodyTest ? \"YES\" : \"NO\"}\n                          </td>\n                        )}\n                        {chkextRef && (\n                          <td className={classes.td}>{booking.extRef}</td>\n                        )}\n                        {chkPrice && (\n                          <td className={classes.td}>\n                            {PriceCalculator.calculatePrice(booking)}\n                          </td>\n                        )}\n                      </tr>\n                    ))}\n                </table>\n              </div>\n            </div>\n          </DialogContent>\n        </Dialog>\n      )}\n    </React.Fragment>\n  );\n} ","\n\nexport const CalendarColors = {\n    PCR_COLOR : \"#4faef7\",\n    GYNAE_COLOR : \"#e83caf\",\n    GP_COLOR :  \"#ff4f14\",\n    STD_COLOR : \"#d6733a\",\n    BLOOD_COLOR: \"#dc2626\",\n\n    VC_COLOR : \"#0c7acf\",\n    F2F_COLOR : \"#8600d4\",\n    LASER_COLOR :  \"#d1005e\",\n    CATARACT_COLOR : \"#00919e\",\n    POSTOP_COLOR: \"#9e6c00\",\n    OPOTOMETRY_COLOR: \"#007d0c\"\n\n\n}\n","import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport PropTypes from \"prop-types\";\nimport dateformat from \"dateformat\";\nimport BookService from \"../services/BookService\";\n\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nimport GlobalState from \"../../GlobalState\";\nimport { Grid } from \"@material-ui/core\";\nimport { CalendarColors } from \"./colors\";\n\nconst useStyles = makeStyles((theme) => ({\n  Container: {\n    width: \"100%\",\n    minWidth:\"200px\",\n    paddingTop: \"70%\",\n    position: \"relative\",\n    backgroundColor: \"#fff\",\n    cursor: \"pointer\",\n  },\n\n  ContainerPast: {\n    width: \"100%\",\n    paddingTop: \"70%\",\n    position: \"relative\",\n    backgroundColor: \"#fafafa\",\n  },\n\n  DayLabel: {\n    position: \"absolute\",\n    top: \"5px\",\n    right: \"5px\",\n    color: \"#555\",\n    fontSize: \"1rem\",\n  },\n\n  DayLabelToday: {\n    position: \"absolute\",\n    top: \"5px\",\n    right: \"5px\",\n    backgroundColor: \"#1a73e8\",\n    color: \"#fff\",\n    fontSize: \"1rem\",\n    borderRadius: \"50%\",\n    padding: \"5px\",\n    lineHight: \"35px\",\n    minWidth: \"35px\",\n    textAlign: \"center\",\n  },\n\n  DayLabelDisabled: {\n    position: \"absolute\",\n    top: \"5px\",\n    right: \"5px\",\n    color: \"#ddd\",\n    fontSize: \"1rem\",\n  },\n\n  BookingCountLabel: {\n    position: \"absolute\",\n    top: \"35%\",\n    left: \"40%\",\n    color: \"#3f51b5\",\n    backgroundColor: \"#ebedf7\",\n    fontSize: \"16px\",\n    fontWeight: \"600\",\n    padding: \"10px\",\n    borderRadius: \"50%\",\n    minWidth: \"40px\",\n    lineHight: \"40px\",\n    cursor: \"pointer\",\n    textAlign: \"center\",\n  },\n\n  BookingCountLabelBusy: {\n    position: \"absolute\",\n    top: \"35%\",\n    left: \"40%\",\n    color: \"#b00000\",\n    backgroundColor: \"#fce6e6\",\n    fontSize: \"16px\",\n    fontWeight: \"600\",\n    padding: \"10px\",\n    borderRadius: \"50%\",\n    minWidth: \"40px\",\n    cursor: \"pointer\",\n    textAlign: \"center\",\n  },\n\n  LoadingProgress: {\n    position: \"absolute\",\n    top: \"40%\",\n    left: \"40%\",\n  },\n\n  BookingCountGauge: {\n    position: \"absolute\",\n    bottom: \"5%\",\n    left: \"8%\",\n    width: \"8%\",\n    height: \"85%\",\n  },\n\n  PCRGauge: {\n    position: \"absolute\",\n    bottom: \"-20px\",\n    left: \"0\",\n    width: \"30px\",\n    height: \"120%\",\n  },\n\n  GynaeGauge: {\n    position: \"absolute\",\n    bottom: \"-20px\",\n    left: \"31px\",\n    width: \"20px\",\n    height: \"120%\",\n  },\n\n  GPGauge: {\n    position: \"absolute\",\n    bottom: \"-20px\",\n    left: \"52px\",\n    width: \"20px\",\n    height: \"120%\",\n  },\n\n  STDGauge: {\n    position: \"absolute\",\n    bottom: \"-20px\",\n    left: \"73px\",\n    width: \"20px\",\n    height: \"120%\",\n  },\n\n  BloodGauge: {\n    position: \"absolute\",\n    bottom: \"-20px\",\n    left: \"94px\",\n    width: \"20px\",\n    height: \"120%\",\n  },\n\n  DayLabelContainer: {\n    position: \"absolute\",\n    top: \"15%\",\n    left: \"5px\",\n    width: \"100%\",\n    paddingTop: \"45%\",\n  },\n}));\n\nconst MAX_BOOKING_COUNT_PCR = 50;\nconst MAX_BOOKING_COUNT_GP = 10;\nconst MAX_BOOKING_COUNT_STD = 10;\nconst MAX_BOOKING_COUNT_GYNAE = 10;\nconst MAX_BOOKING_COUNT_BLOOD = 10;\n\nconst MAX_BOOKING_COUNT = 10;\n\n\n\nconst MonthViewCell = ({ key, cellIndex, month, daysInMonth, dayClicked }) => {\n  const classes = useStyles();\n\n  const [state, setState] = React.useContext(GlobalState);\n\n  const [dateStr, setDateStr] = React.useState(\"\");\n\n  const [cellDate, setCellDate] = React.useState(new Date());\n\n  const [bookingsCount, setBookingsCount] = React.useState(null);\n\n  const [disableDay, setDisableDay] = React.useState(false);\n\n  const [isPast, setIsPast] = React.useState(false);\n\n  useEffect(() => {\n    if (cellIndex <= daysInMonth.length) {\n      const date = daysInMonth[cellIndex - 1];\n      const dateStr = dateformat(date, \"yyyy-mm-dd\");\n      setDateStr(dateStr);\n      setCellDate(date);\n      setDisableDay(date.getMonth() !== month - 1);\n      const todayStr = dateformat(new Date(), \"yyyy-mm-dd\");\n      setIsPast(dateStr < todayStr);\n    } else {\n      const day = cellIndex - daysInMonth.length;\n      const date = new Date(\n        daysInMonth[daysInMonth.length - 1].getTime() + day * 86400000\n      );\n      const dateStr = dateformat(date, \"yyyy-mm-dd\");\n      setDateStr(dateStr);\n      setCellDate(date);\n      setDisableDay(true);\n      const todayStr = dateformat(new Date(), \"yyyy-mm-dd\");\n      setIsPast(dateStr < todayStr);\n    }\n  }, [cellIndex, month, daysInMonth]);\n\n  useEffect(() => {\n    const fecthData = async () => {\n      if (!dateStr || dateStr.length <= 0) {\n        return;\n      }\n\n      if (disableDay) {\n        setBookingsCount(-2);\n        return;\n      }\n\n      setBookingsCount(null);\n\n      var res = state.AdminCalendarCache?.find(\n        (record) =>\n          record.method === \"getBookingsCountByDateStr\" &&\n          record.query === dateStr\n      )?.res;\n\n      if (!res) {\n        res = await BookService.getAllBookingsCountByDateStr(dateStr);\n        setState((state) => ({\n          ...state,\n          AdminCalendarCache: [\n            ...state.AdminCalendarCache,\n            { method: \"getBookingsCountByDateStr\", query: dateStr, res: res },\n          ],\n        }));\n      }\n\n      if (res.data.count) {\n        setBookingsCount(res.data.count);\n      }\n    };\n\n    fecthData();\n  }, [dateStr]);\n\n  const getDayLabel = (_cellIndex, _month, _daysInMonth) => {\n    var date = null;\n    var disabled = false;\n    var day = -1;\n\n    if (_cellIndex <= _daysInMonth.length) {\n      date = _daysInMonth[_cellIndex - 1];\n      day = date.getDate();\n      if (date.getMonth() !== _month - 1) {\n        disabled = true;\n      }\n    } else {\n      const _day = _cellIndex - _daysInMonth.length;\n      const date = new Date(\n        _daysInMonth[_daysInMonth.length - 1].getTime() + _day * 86400000\n      );\n      day = date.getDate();\n      disabled = true;\n    }\n\n    const isToday =\n      dateformat(new Date(), \"yyyy-mm-dd\") === dateformat(date, \"yyyy-mm-dd\");\n\n    return (\n      <span\n        className={\n          disabled\n            ? classes.DayLabelDisabled\n            : isToday\n            ? classes.DayLabelToday\n            : classes.DayLabel\n        }\n      >\n        {day > 0 ? `${day}` : \"\"}\n      </span>\n    );\n  };\n\n  const getClinicBar = (clinic, count) => {\n    return (\n      <React.Fragment>\n        {clinic === \"Virtual Consultation\" &&\n          state.selectedClinics.findIndex((e) => e === \"Virtual Consultation\") >= 0 &&\n          getVCClinicBar(count)}\n        {clinic === \"F2F Clinic\" &&\n          state.selectedClinics.findIndex((e) => e === \"F2F Clinic\") >= 0 &&\n          getF2FClinicBar(count)}\n        {clinic === \"Laser Theatre\" &&\n          state.selectedClinics.findIndex((e) => e === \"Laser Theatre\") >= 0 &&\n          getLaserClinicBar(count)}\n        {clinic === \"Lens Theatre\" &&\n          state.selectedClinics.findIndex((e) => e === \"Lens Theatre\") >= 0 &&\n          getCataractClinicBar(count)}\n                 {clinic === \"Post OP\" &&\n          state.selectedClinics.findIndex((e) => e === \"Post OP\") >= 0 &&\n          getPostOPClinicBar(count)}\n \n      </React.Fragment>\n    );\n  };\n\n  const minHeight = 1;\n  const getVCClinicBar = (count) => {\n    let width = (count / MAX_BOOKING_COUNT) * 100 + 5;\n    if (width > 100) width = 100;\n\n    if (width < 20) width = 20;\n\n    if (count === 0) {\n      width = minHeight;\n    }\n\n    const percent = 100 - width;\n\n    return (\n      <div className={classes.PCRGauge}>\n        <div\n          style={{\n            padding: \"0\",\n            margin: \"0\",\n            width: \"100%\",\n            height: \"100%\",\n            backgroundColor: CalendarColors.VC_COLOR,\n            position: \"relative\",\n          }}\n        >\n          <div\n            style={{\n              position: \"absolute\",\n              bottom: \"0px\",\n              color: \"#fff\",\n              fontWeight: \"500\",\n              fontSize:\"0.8rem\",\n              textAlign: \"center\",\n              width: \"100%\",\n            }}\n          >\n            {count > 0 && count}\n          </div>\n\n          <div\n            style={{\n              padding: \"0\",\n              margin: \"0\",\n              width: \"100%\",\n              height: `${percent}%`,\n              backgroundColor: \"#fafafa\",\n            }}\n          ></div>\n        </div>\n      </div>\n    );\n  };\n\n  const getF2FClinicBar = (count) => {\n    let width = (count / MAX_BOOKING_COUNT) * 100 + 5;\n    if (width > 100) width = 100;\n\n    if (width < 20) width = 20;\n\n    if (count === 0) {\n      width = minHeight;\n    }\n\n    const percent = 100 - width;\n\n    return (\n      <div className={classes.GynaeGauge}>\n        <div\n          style={{\n            padding: \"0\",\n            margin: \"0\",\n            width: \"100%\",\n            height: \"100%\",\n            backgroundColor: CalendarColors.F2F_COLOR,\n            position: \"relative\",\n          }}\n        >\n          <div\n             style={{\n                position: \"absolute\",\n                bottom: \"0px\",\n                color: \"#fff\",\n                fontWeight: \"500\",\n                fontSize:\"0.8rem\",\n                textAlign: \"center\",\n                width: \"100%\",\n              }}\n          >\n            {count > 0 && count}\n          </div>\n\n          <div\n            style={{\n              padding: \"0\",\n              margin: \"0\",\n              width: \"100%\",\n              height: `${percent}%`,\n              backgroundColor: \"#fafafa\",\n            }}\n          ></div>\n        </div>\n      </div>\n    );\n  };\n\n  const getLaserClinicBar = (count) => {\n    let width = (count / MAX_BOOKING_COUNT) * 100 + 5;\n    if (width > 100) width = 100;\n\n    if (width < 20) width = 20;\n\n    if (count === 0) {\n      width = minHeight;\n    }\n\n    const percent = 100 - width;\n\n    return (\n      <div className={classes.GPGauge}>\n        <div\n          style={{\n            padding: \"0\",\n            margin: \"0\",\n            width: \"100%\",\n            height: \"100%\",\n            backgroundColor: CalendarColors.LASER_COLOR,\n            position: \"relative\",\n          }}\n        >\n          <div\n             style={{\n                position: \"absolute\",\n                bottom: \"0px\",\n                color: \"#fff\",\n                fontWeight: \"500\",\n                fontSize:\"0.8rem\",\n                textAlign: \"center\",\n                width: \"100%\",\n              }}\n          >\n            {count > 0 && count}\n          </div>\n\n          <div\n            style={{\n              padding: \"0\",\n              margin: \"0\",\n              width: \"100%\",\n              height: `${percent}%`,\n              backgroundColor: \"#fafafa\",\n            }}\n          ></div>\n        </div>\n      </div>\n    );\n  };\n\n  const getCataractClinicBar = (count) => {\n    let width = (count / MAX_BOOKING_COUNT) * 100 + 5;\n    if (width > 100) width = 100;\n\n    if (width < 20) width = 20;\n\n    if (count === 0) {\n      width = minHeight;\n    }\n\n    const percent = 100 - width;\n\n    return (\n      <div className={classes.STDGauge}>\n        <div\n          style={{\n            padding: \"0\",\n            margin: \"0\",\n            width: \"100%\",\n            height: \"100%\",\n            backgroundColor: CalendarColors.CATARACT_COLOR,\n            position: \"relative\",\n          }}\n        >\n          <div\n             style={{\n                position: \"absolute\",\n                bottom: \"0px\",\n                color: \"#fff\",\n                fontWeight: \"500\",\n                fontSize:\"0.8rem\",\n                textAlign: \"center\",\n                width: \"100%\",\n              }}\n          >\n            {count > 0 && count}\n          </div>\n\n          <div\n            style={{\n              padding: \"0\",\n              margin: \"0\",\n              width: \"100%\",\n              height: `${percent}%`,\n              backgroundColor: \"#fafafa\",\n            }}\n          ></div>\n        </div>\n      </div>\n    );\n  };\n\n  const getPostOPClinicBar = (count) => {\n    let width = (count / MAX_BOOKING_COUNT) * 100 + 5;\n    if (width > 100) width = 100;\n\n    if (width < 20) width = 20;\n\n    if (count === 0) {\n      width = minHeight;\n    }\n\n    const percent = 100 - width;\n\n    return (\n      <div className={classes.BloodGauge}>\n        <div\n          style={{\n            padding: \"0\",\n            margin: \"0\",\n            width: \"100%\",\n            height: \"100%\",\n            backgroundColor: CalendarColors.POSTOP_COLOR,\n            position: \"relative\",\n          }}\n        >\n          <div\n             style={{\n                position: \"absolute\",\n                bottom: \"0px\",\n                color: \"#fff\",\n                fontWeight: \"500\",\n                fontSize:\"0.8rem\",\n                textAlign: \"center\",\n                width: \"100%\",\n              }}\n          >\n            {count > 0 && count}\n          </div>\n\n          <div\n            style={{\n              padding: \"0\",\n              margin: \"0\",\n              width: \"100%\",\n              height: `${percent}%`,\n              backgroundColor: \"#fafafa\",\n            }}\n          ></div>\n        </div>\n      </div>\n    );\n  };\n\n\n\n  const getBookingsCountLabel = (_bookingsCount) => {\n    if (!_bookingsCount) {\n      return (\n        <div className={classes.LoadingProgress}>\n          <CircularProgress disableShrink />\n        </div>\n      );\n    } else if (_bookingsCount !== -2) {\n      return (\n        <div className={classes.DayLabelContainer}>\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"flex-start\"\n            alignItems=\"flex-end\"\n            style={{ width: \"100%\", height: \"100%\" }}\n          >\n            {_bookingsCount.map((item) => (\n              <Grid item>{getClinicBar(item.clinic, item.count)}</Grid>\n            ))}\n          </Grid>\n        </div>\n      );\n    }\n  };\n\n  const getBookingsCountGauge = (_bookingsCount) => {\n    if (_bookingsCount > 0) {\n      let percent = (_bookingsCount / MAX_BOOKING_COUNT_PCR) * 100;\n      if (percent > 100) {\n        percent = 100;\n      }\n\n      percent = 100 - percent;\n\n      return (\n        <div className={classes.BookingCountGauge}>\n          <div\n            style={{\n              padding: \"0\",\n              margin: \"0\",\n              width: \"100%\",\n              height: \"100%\",\n              backgroundColor: \"#3f51b5\",\n            }}\n          >\n            <div\n              style={{\n                padding: \"0\",\n                margin: \"0\",\n                width: \"100%\",\n                height: `${percent}%`,\n                backgroundColor: \"#fafafa\",\n              }}\n            ></div>\n          </div>\n        </div>\n      );\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <div\n        className={classes.Container}\n        onClick={(event) => dayClicked(event, cellDate)}\n      >\n        {getDayLabel(cellIndex, month, daysInMonth)}\n\n        {getBookingsCountLabel(bookingsCount)}\n\n        {/* {getBookingsCountGauge(bookingsCount)} */}\n      </div>\n    </React.Fragment>\n  );\n};\n\nMonthViewCell.propTypes = {\n  key: PropTypes.string.isRequired,\n  cellIndex: PropTypes.number.isRequired,\n  month: PropTypes.number.isRequired,\n  daysInMonth: PropTypes.arrayOf(PropTypes.date),\n  dayClicked: PropTypes.func,\n};\n\nexport default MonthViewCell;\n","import calendar from 'node-calendar';\n\n\nexport default class CalendarUtil {\n\n    static getMonthRange = (month , year) =>\n    {\n        return new calendar.Calendar(calendar.SUNDAY).itermonthdates(year, month);\n    } \n\n} ","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport MonthViewCell from './MonthViewCell';\nimport CalendarUtil from './calendar-util';\n\nconst dayLables = ['Sun', 'Mon', 'Tue', 'Wed' , 'Thu', 'Fri', 'Sat'];\nconst days = [1,2,3,4,5,6,7]; \nconst rows = [1,2,3,4,5,6];\n\nconst useStyles = makeStyles((theme) => ({\n\n    table: {\n        width: \"100%\",\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n    },\n\n    th: {\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        verticalAlign: \"middle\",\n        fontcolor: \"#555\",\n        fontWeight: \"400\",\n        fontSize: \"15px\",\n        paddingTop: \"5px\",\n        paddingBottom: \"5px\",\n        width: \"14%\"\n    },\n\n    td: {\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        verticalAlign: \"middle\",\n    }\n\n  }));\n\nconst MonthView = ({month, year, dayClicked}) => {\n    const classes = useStyles();\n\n    const daysInMonth = CalendarUtil.getMonthRange(month,year);\n\n    return (\n        <React.Fragment>\n\n            <table className={classes.table}>\n                <thead>\n                    <tr>\n                        {dayLables.map(label => (\n                            <th key={`th-${label}`} className={classes.th}>\n                                {label}\n                            </th>\n                        ))}\n                    </tr>\n                </thead>\n                <tbody>\n                    {rows.map(row => (\n                        <tr>\n                            {days.map(day => (\n                                <td className={classes.td}>\n                                    <MonthViewCell \n                                        key={`${month}${year}${(row-1) * days.length + day}`} \n                                        cellIndex={(row-1) * days.length + day} \n                                        month={month} \n                                        daysInMonth={daysInMonth}\n                                        dayClicked = {dayClicked}\n                                        />\n                                </td>\n                            ))}\n                        </tr>\n                    ))}            \n                </tbody>\n\n            </table>\n\n      \n        </React.Fragment>\n\n\n    );\n}\n\nMonthView.propTypes = {\n    month: PropTypes.number.isRequired,\n    year: PropTypes.number.isRequired,\n    dayClicked: PropTypes.func\n  };\n\n\nexport default MonthView;","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport dateformat from 'dateformat';\nimport BookService from '../services/BookService';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport GlobalState from '../../GlobalState';\n\nimport axios from 'axios'\n\nimport { Grid } from '@material-ui/core';\nimport { CalendarColors } from './colors';\n\nconst MAX_BOOKING_COUNT_PCR = 10;\nconst MAX_BOOKING_COUNT_GP = 1;\nconst MAX_BOOKING_COUNT_STD = 1;\nconst MAX_BOOKING_COUNT_GYNAE = 1;\nconst MAX_BOOKING_COUNT_BLOOD = 1;\n\n\n\nconst useStyles = makeStyles((theme) => ({\n\n    Container: {\n        width: \"100%\",\n        minHeight: \"100px\",\n        paddingTop: \"40%\",\n        position: \"relative\",\n        backgroundColor: \"#fff\",\n        cursor: \"pointer\"\n    },\n\n    ContainerPast: {\n        width: \"100%\",\n        minHeight: \"100px\",\n        paddingTop: \"40%\",\n        position: \"relative\",\n        backgroundColor: \"#fafafa\",\n        cursor: \"pointer\"\n    },\n    \n    DayLabel: {\n        position: \"absolute\",\n        top: \"5px\",\n        right: \"5px\",\n        color: \"#555\",\n        fontSize: \"1rem\"\n    },\n\n    DayLabelDisabled: {\n        position: \"absolute\",\n        top: \"5px\",\n        right: \"5px\",\n        color: \"#ddd\",\n        fontSize: \"1rem\"\n    },\n\n    BookingCountLabel: {\n        position: \"absolute\",\n        top: \"25%\",\n        left: \"38%\",\n        color: \"#3f51b5\",\n        backgroundColor: \"#ebedf7\",\n        fontSize: \"14px\",\n        fontWeight: \"600\",\n        padding: \"5px\",\n        borderRadius: \"50%\",\n        minWidth: \"30px\",\n        cursor : \"pointer\",\n        textAlign: \"center\"\n    },\n\n    BookingCountLabelBusy: {\n        position: \"absolute\",\n        top: \"25%\",\n        left: \"38%\",\n        color: \"#b00000\",\n        backgroundColor: \"#fce6e6\",\n        fontSize: \"14px\",\n        fontWeight: \"600\",\n        padding: \"5px\",\n        borderRadius: \"50%\",\n        minWidth: \"30px\",\n        cursor : \"pointer\",\n        textAlign: \"center\"\n    },\n\n    LoadingProgress: {\n        position: \"absolute\",\n        top: \"40%\",\n        left: \"40%\",\n      },\n\n      BookingCountGauge: {\n        position: \"absolute\",\n        bottom: \"5%\",\n        left: \"8%\",\n        width : \"85%\",\n        height: \"8%\"\n    },\n\n    PCRGauge: {\n        position: \"absolute\",\n        bottom: \"15px\",\n        left: \"0\",\n        width: \"20px\",\n        height: \"90%\",\n      },\n    \n      GynaeGauge: {\n        position: \"absolute\",\n        bottom: \"15px\",\n        left: \"21px\",\n        width: \"20px\",\n        height: \"90%\",\n      },\n    \n      GPGauge: {\n        position: \"absolute\",\n        bottom: \"15px\",\n        left: \"42px\",\n        width: \"20px\",\n        height: \"90%\",\n      },\n    \n      STDGauge: {\n        position: \"absolute\",\n        bottom: \"15px\",\n        left: \"63px\",\n        width: \"20px\",\n        height: \"90%\",\n      },\n      BloodGauge: {\n        position: \"absolute\",\n        bottom: \"15px\",\n        left: \"84px\",\n        width: \"20px\",\n        height: \"90%\",\n      },\n\n    \n\n    DayLabelContainer:{\n        position: \"absolute\",\n        top: \"15%\",\n        left:\"5px\",\n        width:\"100%\",\n        height:\"100%\"   \n    },\n\n  }));\n\nconst MAX_BOOKING_COUNT = 1;  \n\nconst WeekViewCell = ({key, date, time, dayClicked}) => {\n    const classes = useStyles();\n\n    const [state, setState] = React.useContext(GlobalState);\n    const [bookingsCount, setBookingsCount] = React.useState(null);\n    const [isPast, setIsPast] = React.useState(false);\n\n    const [cellDate, setCellDate] = React.useState(new Date());\n\n    useEffect( () => {\n        const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\n        setIsPast(date < todayStr);\n\n        setCellDate(new Date(date));\n\n    }, [date]);\n\n    useEffect ( () => {\n      \n      \n      \n        if (!date || date.length <= 0 || !time || time.length <= 0)\n        {\n            return;\n        }\n        \n        // if (isPast)\n        // {\n        //     setBookingsCount(-2);\n        //     return;\n        // }\n\n        setBookingsCount(null);\n\n       \n\n        var res = state.AdminCalendarCache?.find(record => record.method === 'getBookingsCountByDateStrandTime' && record.query === `${date}${time}`)?.res;\n        if (res)\n        {\n            if (res.data.count)\n            {\n                setBookingsCount(res.data.count);\n            }  \n            return;\n        }\n\n        let source = axios.CancelToken.source();\n        BookService.getAllBookingsCountByDateStrandTime(date, time, source).then( res => {\n            if (res.data.count)\n            {\n                setBookingsCount(res.data.count);\n                setState(state => ({...state, AdminCalendarCache : [...state.AdminCalendarCache, {method: 'getBookingsCountByDateStrandTime' , query : `${date}${time}`, res: res}]}));\n            }  \n        }).catch( err => \n            {\n                //do nothing\n            });\n     \n        return () => {\n           if (source)\n              source.cancel('Cancelling in cleanup');\n        }\n     \n    }, [date, time]);\n\n\n    const minHeight = 1;\n    const getVCClinicBar = (count) => {\n      let width = (count / MAX_BOOKING_COUNT) * 100 + 5;\n      if (width > 100) width = 100;\n  \n      if (width < 30) width = 30;\n  \n      if (count === 0) {\n        width = minHeight;\n      }\n  \n      const percent = 100 - width;\n  \n      return (\n        <div className={classes.PCRGauge}>\n          <div\n            style={{\n              padding: \"0\",\n              margin: \"0\",\n              width: \"100%\",\n              height: \"100%\",\n              backgroundColor: CalendarColors.VC_COLOR,\n              position: \"relative\",\n            }}\n          >\n            <div\n              style={{\n                position: \"absolute\",\n                bottom: \"0px\",\n                color: \"#fff\",\n                fontWeight: \"500\",\n                fontSize:\"0.8rem\",\n                textAlign: \"center\",\n                width: \"100%\",\n              }}\n            >\n              {count > 0 && count}\n            </div>\n  \n            <div\n              style={{\n                padding: \"0\",\n                margin: \"0\",\n                width: \"100%\",\n                height: `${percent}%`,\n                backgroundColor: \"#fafafa\",\n              }}\n            ></div>\n          </div>\n        </div>\n      );\n    };\n  \n    const getF2FClinicBar = (count) => {\n      let width = (count / MAX_BOOKING_COUNT) * 100 + 5;\n      if (width > 100) width = 100;\n  \n      if (width < 30) width = 30;\n  \n      if (count === 0) {\n        width = minHeight;\n      }\n  \n      const percent = 100 - width;\n  \n      return (\n        <div className={classes.GynaeGauge}>\n          <div\n            style={{\n              padding: \"0\",\n              margin: \"0\",\n              width: \"100%\",\n              height: \"100%\",\n              backgroundColor: CalendarColors.F2F_COLOR,\n              position: \"relative\",\n            }}\n          >\n            <div\n               style={{\n                  position: \"absolute\",\n                  bottom: \"0px\",\n                  color: \"#fff\",\n                  fontWeight: \"500\",\n                  fontSize:\"0.8rem\",\n                  textAlign: \"center\",\n                  width: \"100%\",\n                }}\n            >\n              {count > 0 && count}\n            </div>\n  \n            <div\n              style={{\n                padding: \"0\",\n                margin: \"0\",\n                width: \"100%\",\n                height: `${percent}%`,\n                backgroundColor: \"#fafafa\",\n              }}\n            ></div>\n          </div>\n        </div>\n      );\n    };\n  \n    const getLaserClinicBar = (count) => {\n      let width = (count / MAX_BOOKING_COUNT) * 100 + 5;\n      if (width > 100) width = 100;\n  \n      if (width < 30) width = 30;\n  \n      if (count === 0) {\n        width = minHeight;\n      }\n  \n      const percent = 100 - width;\n  \n      return (\n        <div className={classes.GPGauge}>\n          <div\n            style={{\n              padding: \"0\",\n              margin: \"0\",\n              width: \"100%\",\n              height: \"100%\",\n              backgroundColor: CalendarColors.LASER_COLOR,\n              position: \"relative\",\n            }}\n          >\n            <div\n               style={{\n                  position: \"absolute\",\n                  bottom: \"0px\",\n                  color: \"#fff\",\n                  fontWeight: \"500\",\n                  fontSize:\"0.8rem\",\n                  textAlign: \"center\",\n                  width: \"100%\",\n                }}\n            >\n              {count > 0 && count}\n            </div>\n  \n            <div\n              style={{\n                padding: \"0\",\n                margin: \"0\",\n                width: \"100%\",\n                height: `${percent}%`,\n                backgroundColor: \"#fafafa\",\n              }}\n            ></div>\n          </div>\n        </div>\n      );\n    };\n  \n    const getCataractClinicBar = (count) => {\n      let width = (count / MAX_BOOKING_COUNT) * 100 + 5;\n      if (width > 100) width = 100;\n  \n      if (width < 30) width = 30;\n  \n      if (count === 0) {\n        width = minHeight;\n      }\n  \n      const percent = 100 - width;\n  \n      return (\n        <div className={classes.STDGauge}>\n          <div\n            style={{\n              padding: \"0\",\n              margin: \"0\",\n              width: \"100%\",\n              height: \"100%\",\n              backgroundColor: CalendarColors.CATARACT_COLOR,\n              position: \"relative\",\n            }}\n          >\n            <div\n               style={{\n                  position: \"absolute\",\n                  bottom: \"0px\",\n                  color: \"#fff\",\n                  fontWeight: \"500\",\n                  fontSize:\"0.8rem\",\n                  textAlign: \"center\",\n                  width: \"100%\",\n                }}\n            >\n              {count > 0 && count}\n            </div>\n  \n            <div\n              style={{\n                padding: \"0\",\n                margin: \"0\",\n                width: \"100%\",\n                height: `${percent}%`,\n                backgroundColor: \"#fafafa\",\n              }}\n            ></div>\n          </div>\n        </div>\n      );\n    };\n\n    const getPostOPClinicBar = (count) => {\n      let width = (count / MAX_BOOKING_COUNT) * 100 + 5;\n      if (width > 100) width = 100;\n  \n      if (width < 30) width = 30;\n  \n      if (count === 0) {\n        width = minHeight;\n      }\n  \n      const percent = 100 - width;\n  \n      return (\n        <div className={classes.BloodGauge}>\n          <div\n            style={{\n              padding: \"0\",\n              margin: \"0\",\n              width: \"100%\",\n              height: \"100%\",\n              backgroundColor: CalendarColors.POSTOP_COLOR,\n              position: \"relative\",\n            }}\n          >\n            <div\n               style={{\n                  position: \"absolute\",\n                  bottom: \"0px\",\n                  color: \"#fff\",\n                  fontWeight: \"500\",\n                  fontSize:\"0.8rem\",\n                  textAlign: \"center\",\n                  width: \"100%\",\n                }}\n            >\n              {count > 0 && count}\n            </div>\n  \n            <div\n              style={{\n                padding: \"0\",\n                margin: \"0\",\n                width: \"100%\",\n                height: `${percent}%`,\n                backgroundColor: \"#fafafa\",\n              }}\n            ></div>\n          </div>\n        </div>\n      );\n    };\n\n\n  \n  \n    const getBookingsCountLabel = (_bookingsCount) => {\n      if (!_bookingsCount) {\n        return (\n          <div className={classes.LoadingProgress}>\n            <CircularProgress disableShrink />\n          </div>\n        );\n      } else if (_bookingsCount !== -2) {\n        return (\n          <div className={classes.DayLabelContainer}>\n            <Grid\n              container\n              direction=\"row\"\n              justify=\"flex-start\"\n              alignItems=\"flex-end\"\n              style={{ width: \"100%\", height: \"100%\" }}\n            >\n              {_bookingsCount.map((item) => (\n                <Grid item>{getClinicBar(item.clinic, item.count)}</Grid>\n              ))}\n            </Grid>\n          </div>\n        );\n      }\n    };\n\n    const getClinicBar = (clinic, count) => {\n      return (\n        <React.Fragment>\n          {clinic === \"Virtual Consultation\" &&\n            state.selectedClinics.findIndex((e) => e === \"Virtual Consultation\") >= 0 &&\n            getVCClinicBar(count)}\n          {clinic === \"F2F Clinic\" &&\n            state.selectedClinics.findIndex((e) => e === \"F2F Clinic\") >= 0 &&\n            getF2FClinicBar(count)}\n          {clinic === \"Laser Theatre\" &&\n            state.selectedClinics.findIndex((e) => e === \"Laser Theatre\") >= 0 &&\n            getLaserClinicBar(count)}\n          {clinic === \"Cataract Theatre\" &&\n            state.selectedClinics.findIndex((e) => e === \"Cataract Theatre\") >= 0 &&\n            getCataractClinicBar(count)}\n                      {clinic === \"Post OP\" &&\n            state.selectedClinics.findIndex((e) => e === \"Post OP\") >= 0 &&\n            getPostOPClinicBar(count)}\n\n        </React.Fragment>\n      );\n    };\n    \n    const getBookingsCountGauge = (_bookingsCount) =>\n    {\n        if (_bookingsCount > 0 )\n        {\n            let percent = (_bookingsCount / MAX_BOOKING_COUNT) * 100;\n            if (percent > 100)\n            {\n                percent = 100;\n            }\n\n            // percent = 100 - percent;\n\n            return (\n\n                <div className={classes.BookingCountGauge}>\n                  <div style={{padding:\"0\", margin:\"0\", width:\"100%\", height:\"100%\", backgroundColor: \"#f5f5f5\"}} >\n                        <div  style={{padding:\"0\", margin:\"0\", height:\"100%\", width:`${percent}%`, backgroundColor: \"#3f51b5\"}} >\n\n                        </div>\n                  </div>\n                </div>\n            );\n        }\n    }\n\n\n\n\n    return (\n        <React.Fragment>\n\n            <div className={isPast ? classes.ContainerPast : classes.Container} onClick={(event => dayClicked(event,cellDate))} >\n\n              {getBookingsCountLabel(bookingsCount)}\n\n              {/* {getBookingsCountGauge(bookingsCount)} */}\n\n            </div>\n\n        </React.Fragment>\n\n\n    );\n}\n\nWeekViewCell.propTypes = {\n    key: PropTypes.string.isRequired,\n    date: PropTypes.string.isRequired,\n    time: PropTypes.string.isRequired,\n    dayClicked: PropTypes.func\n  };\n\n \n  \nexport default WeekViewCell;","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport WeekViewCell from './WeekViewCell';\nimport dateformat from 'dateformat';\n\nconst rows = [\n    '08:00 AM',\n    '08:15 AM',\n    '08:30 AM', \n    '08:45 AM',\n    '09:00 AM',\n    '09:15 AM', \n    '09:30 AM',\n    '09:45 AM',\n    '10:00 AM',\n    '10:15 AM',\n    '10:30 AM',\n    '10:45 AM',\n    '11:00 AM',\n    '11:15 AM',\n    '11:30 AM',\n    '11:45 AM',\n    '12:00 PM',\n    '12:15 PM',\n    '12:30 PM',\n    '12:45 PM',\n    '01:00 PM',\n    '01:15 PM',\n    '01:30 PM',\n    '01:45 PM',\n    '02:00 PM',\n    '02:15 PM',\n    '02:30 PM',\n    '02:45 PM',\n    '03:00 PM',\n    '03:15 PM',\n    '03:30 PM',\n    '03:45 PM',\n    '04:00 PM',\n    '04:15 PM',\n    '04:30 PM',\n    '04:45 PM',\n    '05:00 PM',\n    '05:15 PM',\n    '05:30 PM',\n    '05:45 PM',\n    '06:00 PM',\n    '06:15 PM',\n    '06:30 PM',\n    '06:45 PM',\n    '07:00 PM',\n    '07:15 PM',\n    '07:30 PM',\n    '07:45 PM'\n];\n\n\n\nconst useStyles = makeStyles((theme) => ({\n\n    table: {\n        width: \"100%\",\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        overflowY: \"auto\"\n    },\n\n    th: {\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        verticalAlign: \"middle\",\n        fontcolor: \"#555\",\n        fontWeight: \"400\",\n        fontSize: \"15px\",\n        paddingTop: \"5px\",\n        paddingBottom: \"5px\",\n        width: \"12%\", \n    },\n\n    td: {\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        verticalAlign: \"middle\",\n        height : \"50px\",\n        width: \"12%\", \n    }\n\n  }));\n\nconst WeekView = ({dates, dayClicked}) => {\n    const classes = useStyles();\n\n    return (\n        <React.Fragment>\n\n        <div style={{overflowY: \"scroll\" , height: \"60px\"}}>\n            <table className={classes.table}>\n                <thead>\n                    <tr>\n                        <th style={{width: \"7%\"}}>\n                        \n                        </th>\n                            {dates.map(date => (\n                                <th className={classes.th}>\n                                    <div style={{paddingBottom: \"5px\", color: \"#aaa\"}}>\n                                         {dateformat(date, 'ddd')}\n                                    </div>\n                                    <div>\n                                        <span style={{color: \"#aaa\"}}>\n                                            {dateformat(date, 'mmm ')}\n                                        </span> \n                                        <span  style={(dateformat(new Date(),'yyyy-mm-dd') === dateformat(date, 'yyyy-mm-dd')) ? { backgroundColor: \"#1a73e8\", color: \"#fff\", borderRadius: \"50%\",  padding: \"5px\",} : {color: \"#333\", fontWeight:\"500\"}}>\n                                             {dateformat(date, ' d')}\n                                        </span>\n                                       \n                                    </div>\n                                </th>\n                        ))}\n                    </tr>\n                </thead>\n             </table>\n\n        </div>\n\n            <div style={{overflowY: \"scroll\" , height: \"70vh\"}}>\n                <table className={classes.table}>   \n                    <tbody>\n                        {rows.map(row => (\n                            <tr>\n                                <td style={{width: \"7%\"}}>\n                                    {row}\n                                </td>\n                                {dates.map(day => (\n                                    <td className={classes.td}>\n                                        <WeekViewCell \n                                                dayClicked = {dayClicked}\n                                                key={`${dateformat(day,'yyyy-mm-dd')}-${row.replace(':','-')}`} \n                                                date={dateformat(day,'yyyy-mm-dd')} \n                                                time={row}/>\n                                    </td>\n                                ))}\n                            </tr>\n                        ))}            \n                    </tbody>\n                </table>\n            </div>                    \n      \n        </React.Fragment>\n\n\n    );\n}\n\nWeekView.propTypes = {\n    dates: PropTypes.arrayOf(PropTypes.any).isRequired,\n    dayClicked: PropTypes.func\n  };\n\n\nexport default WeekView;","import React, { useEffect, useRef, useState } from \"react\";\nimport BookService from \"./services/BookService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {\n  Backdrop,\n  Button,\n  Checkbox,\n  CircularProgress,\n  Divider,\n  FormControlLabel,\n  Grid,\n  InputAdornment,\n  InputLabel,\n  Link,\n  makeStyles,\n  MenuItem,\n  Select,\n  Switch,\n  TextField,\n  Tooltip,\n} from \"@material-ui/core\";\nimport GlobalState from \"../GlobalState\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport CreditCardIcon from \"@material-ui/icons/CreditCard\";\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\n\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Draggable from \"react-draggable\";\nimport Paper from \"@material-ui/core/Paper\";\n\nimport Alert from \"@material-ui/lab/Alert\";\n\nimport PropTypes from \"prop-types\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport Box from \"@material-ui/core/Box\";\n\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport { corporates } from \"./Corporates\";\nimport NumberFormat from \"react-number-format\";\n\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { validate } from \"email-validator\";\nimport DateRangeIcon from \"@material-ui/icons/DateRange\";\nimport { CalendarColors } from \"./calendar-admin/colors\";\n\nvar interval;\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    marginTop: theme.spacing(0),\n    marginBottom: theme.spacing(1),\n  },\n\n  refreshButton: {\n    marginLeft: theme.spacing(2),\n  },\n\n  checkIcon: {\n    color: \"green\",\n  },\n\n  closeIcon: {\n    color: \"red\",\n  },\n\n  RefLink: {\n    cursor: \"pointer\",\n  },\n\n  BookedLabel: {\n    backgroundColor: \"#606060\",\n    color: \"#fff\",\n    paddingRight: \"10px\",\n    paddingLeft: \"10px\",\n  },\n\n  PatientAttendedLabel: {\n    backgroundColor: \"#0066aa\",\n    color: \"#fff\",\n    paddingRight: \"15px\",\n    paddingLeft: \"10px\",\n  },\n\n  SampleTakenLabel: {\n    backgroundColor: \"#0066cc\",\n    color: \"#fff\",\n    paddingRight: \"40px\",\n    paddingLeft: \"10px\",\n  },\n\n  ReportSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"90px\",\n    paddingLeft: \"10px\",\n  },\n\n  ReportCertSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"68px\",\n    paddingLeft: \"10px\",\n  },\n\n  archiveButton: {},\n\n  smartMatchButton: {\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    marginRight: \"10px\",\n    // padding: \"10px\"\n  },\n\n  infoTitle: {\n    fontWeight: \"400\",\n  },\n\n  infoData: {\n    paddingLeft: \"10px\",\n    fontWeight: \"800\",\n  },\n\n  matchButton: {\n    marginTop: \"30px\",\n    marginBottom: \"20px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  resendButton: {\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  resendFilesButton: {\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n    backgroundColor: \"#3792ad\",\n    \"&:hover\": {\n      background: \"#2f798f\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  cancelButton: {\n    marginBottom: \"10px\",\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"90px\",\n    paddingRight: \"90px\",\n  },\n\n  CalendarIcon: {\n    color: theme.palette.primary.main,\n  },\n\n  DateTimeLabel: {\n    fontWeight: \"600\",\n    fontSize: \"1.2rem\",\n    color: theme.palette.primary.main,\n  },\n\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 5,\n    color: \"#fff\",\n  },\n\n  PriceLabelPaid:{\n    color: theme.palette.primary.main,\n    fontWeight: \"600\"\n  },\n\n  PriceLabelNotPaid:{\n    color: theme.palette.secondary.main,\n    fontWeight: \"600\"\n  },\n\n  BoxDisabled: {\n    width : \"100%\",\n    padding: \"10px\",\n    borderRadius: \"8px\",\n    border: \"1px solid\",\n    fontSize: \"1.2rem\",\n    fontWeight: \"500\",\n    textAlign: \"center\",\n    borderColor: \"#ddd\",\n    cursor: \"not-allowed\",\n    color: \"#ddd\",\n    transition: \"all 0.2s ease\",\n  },\n\n  BoxVC: {\n    width : \"100%\",\n    padding: \"10px\",\n    borderRadius: \"8px\",\n    border: \"1px solid\",\n    fontSize: \"1.2rem\",\n    fontWeight: \"500\",\n    textAlign: \"center\",\n    cursor: \"pointer\",\n    borderColor: CalendarColors.VC_COLOR,\n    color: CalendarColors.VC_COLOR,\n    transition: \"all 0.2s ease\",\n    \"&:hover\": {\n      backgroundColor: CalendarColors.VC_COLOR,\n      color: \"#fff\"\n    }\n  \n  },\n\n  BoxF2F: {\n    width : \"100%\",\n    padding: \"10px\",\n    borderRadius: \"8px\",\n    border: \"1px solid\",\n    fontSize: \"1.2rem\",\n    fontWeight: \"500\",\n    textAlign: \"center\",\n    cursor: \"pointer\",\n    borderColor: CalendarColors.F2F_COLOR,\n    color: CalendarColors.F2F_COLOR,\n    transition: \"all 0.2s ease\",\n    \"&:hover\": {\n      backgroundColor: CalendarColors.F2F_COLOR,\n      color: \"#fff\"\n    }\n  \n  },\n\n  BoxLaser: {\n    width : \"100%\",\n    padding: \"10px\",\n    borderRadius: \"8px\",\n    border: \"1px solid\",\n    fontSize: \"1.2rem\",\n    fontWeight: \"500\",\n    textAlign: \"center\",\n    cursor: \"pointer\",\n    borderColor: CalendarColors.LASER_COLOR,\n    color: CalendarColors.LASER_COLOR,\n    transition: \"all 0.2s ease\",\n    \"&:hover\": {\n      backgroundColor: CalendarColors.LASER_COLOR,\n      color: \"#fff\"\n    }\n  \n  },\n\n  BoxCataract: {\n    width : \"100%\",\n    padding: \"10px\",\n    borderRadius: \"8px\",\n    border: \"1px solid\",\n    fontSize: \"1.2rem\",\n    fontWeight: \"500\",\n    textAlign: \"center\",\n    cursor: \"pointer\",\n    borderColor: CalendarColors.CATARACT_COLOR,\n    color: CalendarColors.CATARACT_COLOR,\n    transition: \"all 0.2s ease\",\n    \"&:hover\": {\n      backgroundColor: CalendarColors.CATARACT_COLOR,\n      color: \"#fff\"\n    }\n  \n  },\n\n  BoxPostOP: {\n    width : \"100%\",\n    padding: \"10px\",\n    borderRadius: \"8px\",\n    border: \"1px solid\",\n    fontSize: \"1.2rem\",\n    fontWeight: \"500\",\n    textAlign: \"center\",\n    cursor: \"pointer\",\n    borderColor: CalendarColors.POSTOP_COLOR,\n    color: CalendarColors.POSTOP_COLOR,\n    transition: \"all 0.2s ease\",\n    \"&:hover\": {\n      backgroundColor: CalendarColors.POSTOP_COLOR,\n      color: \"#fff\"\n    }\n  \n  },\n\n  BoxOptometry: {\n    width : \"100%\",\n    padding: \"10px\",\n    borderRadius: \"8px\",\n    border: \"1px solid\",\n    fontSize: \"1.2rem\",\n    fontWeight: \"500\",\n    textAlign: \"center\",\n    cursor: \"pointer\",\n    borderColor: CalendarColors.OPOTOMETRY_COLOR,\n    color: CalendarColors.OPOTOMETRY_COLOR,\n    transition: \"all 0.2s ease\",\n    \"&:hover\": {\n      backgroundColor: CalendarColors.OPOTOMETRY_COLOR,\n      color: \"#fff\"\n    }\n  \n  },\n\n\n\n\n\n\n\n\n\n\n  BoxGynae: {\n    width : \"100%\",\n    padding: \"10px\",\n    borderRadius: \"8px\",\n    border: \"1px solid\",\n    fontSize: \"1.2rem\",\n    fontWeight: \"500\",\n    textAlign: \"center\",\n    cursor: \"pointer\",\n    borderColor: CalendarColors.GYNAE_COLOR,\n    color: CalendarColors.GYNAE_COLOR,\n    transition: \"all 0.2s ease\",\n    \"&:hover\": {\n      backgroundColor: CalendarColors.GYNAE_COLOR,\n      color: \"#fff\"\n    }\n  \n  },\n\n  BoxGP: {\n    width : \"100%\",\n    padding: \"10px\",\n    borderRadius: \"8px\",\n    border: \"1px solid\",\n    fontSize: \"1.2rem\",\n    fontWeight: \"500\",\n    textAlign: \"center\",\n    cursor: \"pointer\",\n    borderColor: CalendarColors.GP_COLOR,\n    color: CalendarColors.GP_COLOR,\n    transition: \"all 0.2s ease\",\n    \"&:hover\": {\n      backgroundColor: CalendarColors.GP_COLOR,\n      color: \"#fff\"\n    }\n  },\n\n  BoxSTD: {\n    width : \"100%\",\n    padding: \"10px\",\n    borderRadius: \"8px\",\n    border: \"1px solid\",\n    fontSize: \"1.2rem\",\n    fontWeight: \"500\",\n    textAlign: \"center\",\n    cursor: \"pointer\",\n    borderColor: CalendarColors.STD_COLOR,\n    color: CalendarColors.STD_COLOR,\n    transition: \"all 0.2s ease\",\n    \"&:hover\": {\n      backgroundColor: CalendarColors.STD_COLOR,\n      color: \"#fff\"\n    }\n  },\n\n\n\n}));\n\nconst Packages = [\n  { packageName: \"Consultation with Consultant Gynaecologist\" },\n  { packageName: `Coil Fitting/Coil Removal` },\n  { packageName: `Well Woman Check` },\n  { packageName: `Sexual Health Screening` },\n  { packageName: `Pre-pregnancy/Fertility check` },\n  { packageName: `Gynaecological Ultrasound` },\n  { packageName: `HPV Vaccination` },\n  { packageName: `Cervical / Pap Smear` },\n  { packageName: `HPV Treatment / Wart Cryo-Therapy` },\n];\n\nfunction NumberFormatCustom(props) {\n  const { inputRef, onChange, ...other } = props;\n\n  return (\n    <NumberFormat\n      {...other}\n      getInputRef={inputRef}\n      onValueChange={(values) => {\n        onChange({\n          target: {\n            name: props.name,\n            value: values.value,\n          },\n        });\n      }}\n      thousandSeparator\n      isNumericString\n      prefix=\"\"\n    />\n  );\n}\n\nNumberFormatCustom.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nconst BorderLinearProgress = withStyles((theme) => ({\n  root: {\n    height: 10,\n    borderRadius: 5,\n  },\n  colorPrimary: {\n    backgroundColor: \"#cedbce\", //theme.palette.grey[theme.palette.type === 'light' ? 200 : 700],\n  },\n  bar: {\n    borderRadius: 5,\n    backgroundColor: \"#2f942e\",\n  },\n}))(LinearProgress);\nfunction LinearProgressWithLabel(props) {\n  return (\n    <Box display=\"flex\" alignItems=\"center\">\n      <Box width=\"100%\" mr={1}>\n        <BorderLinearProgress variant=\"determinate\" {...props} />\n      </Box>\n      <Box minWidth={35}>\n        <Typography\n          style={{ fontWeight: \"800\", color: \"#5e855e\" }}\n          variant=\"body2\"\n          color=\"textSecondary\"\n        >{`${Math.round(props.value)}%`}</Typography>\n      </Box>\n    </Box>\n  );\n}\n\nLinearProgressWithLabel.propTypes = {\n  /**\n   * The value of the progress indicator for the determinate and buffer variants.\n   * Value between 0 and 100.\n   */\n  value: PropTypes.number.isRequired,\n};\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable\n      handle=\"#draggable-dialog-title\"\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\n    >\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nexport default function NewBookingDialog(props) {\n  const classes = useStyles();\n\n  const [state, setState] = React.useContext(GlobalState);\n\n  const handleClose = () => {    \n    props.handleClose();\n  };\n\n\n  const timeDisabled = () =>\n  {\n    return props.time.indexOf(':15') > 0 || props.time.indexOf(':45') > 0 || props.time.indexOf('09') >= 0 \n  }\n\n  const clinicClicked = (clinic) =>\n  {\n    props.clinicClicked(clinic)\n  }\n\n  return (\n    <React.Fragment>\n      {props.date && props.time && (\n        <React.Fragment>\n          <Dialog\n            maxWidth=\"xs\"\n            open={props.open}\n            onClose={handleClose}\n            PaperComponent={PaperComponent}\n            aria-labelledby=\"form-dialog-title\"\n          >\n            <DialogTitle id=\"draggable-dialog-title\">\n              <Grid\n                container\n                spacing={1}\n                direction=\"row\"\n                justify=\"center\"\n                alignItems=\"center\"\n              >\n                <Grid item>\n                  <AddIcon style={{ color: \"#f50057\", fontSize: \"3rem\" }} />\n                </Grid>\n\n                <Grid item>\n                  <div\n                    style={{\n                      color: \"#f50057\",\n                      paddingBottom: \"10px\",\n                      fontWeight: \"800\",\n                    }}\n                  >\n                    {\" \"}\n                    ADD New Booking{\" \"}\n                  </div>\n                </Grid>\n              </Grid>\n\n              <Divider />\n            </DialogTitle>\n            <DialogContent>\n              <div\n                style={{\n                  height: \"480px\",\n                }}\n              >\n                <Grid\n                  container\n                  direction=\"row\"\n                  justify=\"stretch\"\n                  spacing={2}\n                  alignItems=\"center\"\n                >\n                  <Grid item xs={12}>\n                    <Grid\n                      container\n                      direction=\"row\"\n                      justify=\"center\"\n                      alignItems=\"center\"\n                      spacing={0}\n                    >\n                      <Grid item>\n                        <DateRangeIcon className={classes.CalendarIcon} />\n                      </Grid>\n                      <Grid item>\n                        <span className={classes.DateTimeLabel}>\n                          {props.date} , {props.time}\n                        </span>\n                      </Grid>\n                    </Grid>\n                  </Grid>\n\n\n                  <Grid item xs={12} style={{marginTop:\"0px\"}}>\n                    <div className={classes.BoxVC} onClick={() => clinicClicked(\"Virtual Consultation\")}>\n                      Virtual Consultation\n                    </div>\n                  </Grid>\n                  <Grid item xs={12}>\n                    <div className={classes.BoxF2F} onClick={() => clinicClicked(\"F2F Clinic\")}>\n                      F2F Clinic\n                    </div>\n                  </Grid>\n                  <Grid item xs={12}>\n                    <div className={classes.BoxLaser} onClick={() => clinicClicked(\"Laser Theatre\")}>\n                      Laser Theatre\n                    </div>\n                  </Grid>\n                  <Grid item xs={12}>\n                    <div className={classes.BoxCataract} onClick={() => clinicClicked(\"Lens Theatre\")}>\n                      Lens Theatre\n                    </div>\n                  </Grid>\n                  <Grid item xs={12}>\n                    <div className={classes.BoxPostOP} onClick={() => clinicClicked(\"Post OP\")}>\n                      Post OP\n                    </div>\n                  </Grid>\n                  <Grid item xs={12}>\n                    <div className={classes.BoxOptometry} onClick={() => clinicClicked(\"Optometry\")}>\n                      Optometry\n                    </div>\n                  </Grid>\n\n\n                </Grid>\n\n                <div\n                  style={{\n                    position: \"absolute\",\n                    bottom: \"0px\",\n                    right: \"5px\",\n                  }}\n                >\n                  <Grid\n                    container\n                    direction=\"row\"\n                    justify=\"flex-end\"\n                    alignItems=\"center\"\n                    spacing={1}\n                  >\n                    <Grid item>\n                      <Button\n                        onClick={handleClose}\n                        style={{ width: \"100px\" }}\n                      >\n                        close\n                      </Button>\n                    </Grid>\n                   \n                  </Grid>\n                </div>\n              </div>\n\n            </DialogContent>\n          </Dialog>\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n}\n","import PropTypes from 'prop-types';\n\n\nimport React, { useEffect } from 'react';\nimport Typography from '@material-ui/core/Typography';\n\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\n\n\nimport dateformat from 'dateformat';\nimport { FormControl, IconButton, InputLabel, Select, Tooltip } from '@material-ui/core';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport CloseIcon from '@material-ui/icons/Close';\nimport TodayIcon from '@material-ui/icons/Today';\n\n\nconst useStyles = makeStyles((theme) => ({\n\n    loadingBox: {\n\n    }\n\n}));\n\n\nconst DateField = ({ title, value, dateChanged, error, todayButton, children }) => {\n\n    const [day, setDay] = React.useState('');\n    const [month, setMonth] = React.useState('');\n    const [year, setYear] = React.useState('');\n\n    const [dayArray, setDayArray] = React.useState([]);\n    const [monthArray, setMonthArray] = React.useState([]);\n    const [yearArray, setYearArray] = React.useState([]);\n\n    const updateDate = (dd, mm, yyyy) => {\n        let dayStr = `${dd}`;\n        let monthStr = `${mm + 1}`;\n\n\n        if (dayStr.length === 1) {\n            dayStr = `0${dayStr}`;\n        }\n\n        if (monthStr.length === 1) {\n            monthStr = `0${monthStr}`;\n        }\n\n        dateChanged(`${yyyy}-${monthStr}-${dayStr}`);\n\n\n    }\n\n    const handleDayChanged = (event) => {\n        setDay(event.target.value);\n        updateDate(event.target.value, month, year);\n    };\n\n    const handleMonthChanged = (event) => {\n        setMonth(event.target.value);\n        updateDate(day, event.target.value, year);\n    };\n\n    const handleYearChanged = (event) => {\n        setYear(event.target.value);\n        updateDate(day, month, event.target.value);\n    };\n\n    const resetDate = () => {\n        setDay(\"\")\n        setYear(\"\")\n        setMonth(\"\")\n        dateChanged(\"\")\n    }\n\n    const todayDate = () => {\n        const today = new Date()\n        updateDate(today.getDate(), today.getMonth(), today.getFullYear())\n    }\n\n\n    useEffect(() => {\n        if (value && value.length === 10) {\n            const d = parseInt(value.substr(8, 2));\n            const m = parseInt(value.substr(5, 2));\n            const y = parseInt(value.substr(0, 4));\n\n            setDay(d);\n            setMonth(m - 1);\n            setYear(y);\n        }else if (!value)\n        {\n            resetDate()\n        }\n\n\n    }, [value]);\n\n    useEffect(() => {\n\n        const days = [];\n        const months = [];\n        const years = [];\n\n\n        for (var i = 1; i <= 31; i++) {\n            days.push(i);\n        }\n\n        for (i = 0; i < 12; i++) {\n            months.push(dateformat(new Date(2020, i, 5), 'mmmm'));\n        }\n\n        for (i = 1900; i <= new Date().getFullYear() + 1; i++) {\n            years.push(i);\n        }\n\n\n        setDayArray(days);\n        setMonthArray(months);\n        setYearArray(years);\n\n    }, [])\n\n    return (\n\n        <React.Fragment>\n\n\n            <div style={{ position: \"relative\", border: `1px solid ${error ? 'red' : '#ddd'}`, borderRadius: \"10px\", padding: \"20px\", paddingBottom: \"20px\", marginTop: \"20px\" }}>\n\n                <div style={{ position: \"absolute\", top: \"-15px\", left: \"15px\", backgroundColor: \"#fff\", color: `${error ? 'red' : '#555'}`, padding: \"5px\", paddingLeft: \"10px\", paddingRight: \"10px\" }}>\n                    {title}\n                </div>\n\n                <div style={{ position: \"absolute\", top: \"-25px\", right: \"10px\", backgroundColor: \"#fff\", color: `${error ? 'red' : '#555'}`, padding: \"5px\", paddingLeft: \"10px\", paddingRight: \"10px\" }}>\n                    <Tooltip title=\"Clear Date\">\n                        <IconButton onClick={resetDate}>\n                            <CloseIcon />\n                        </IconButton>\n                    </Tooltip>\n                </div>\n\n                {todayButton && (\n                    <div style={{ position: \"absolute\", top: \"-25px\", right: \"70px\", backgroundColor: \"#fff\", color: `${error ? 'red' : '#555'}`, padding: \"5px\", paddingLeft: \"10px\", paddingRight: \"10px\" }}>\n                        <Tooltip title=\"Today\">\n                            <IconButton onClick={todayDate}>\n                                <TodayIcon />\n                            </IconButton>\n                        </Tooltip>\n                    </div>\n\n                )}\n\n\n\n\n\n                <Grid\n                    container\n                    direction=\"row\"\n                    justify=\"flex-start\"\n                    alignItems=\"flex-start\"\n                    spacing={2}\n                >\n\n\n                    <Grid item xs={12} sm={4}>\n                        <FormControl fullWidth>\n                            <InputLabel id=\"day-label\">Day</InputLabel>\n                            <Select\n\n                                labelId=\"day-label\"\n                                id=\"day-select\"\n                                value={day}\n                                onChange={handleDayChanged}\n                            >\n                                {\n                                    dayArray.map(item => (\n                                        <MenuItem value={item}>{item}</MenuItem>\n                                    )\n                                    )}\n                            </Select>\n                        </FormControl>\n\n\n                    </Grid>\n\n                    <Grid item xs={12} sm={4}>\n                        <FormControl fullWidth>\n                            <InputLabel id=\"month-label\">Month</InputLabel>\n                            <Select\n                                labelId=\"month-label\"\n                                id=\"month-select\"\n                                value={month}\n                                onChange={handleMonthChanged}\n                            >\n                                {\n                                    monthArray.map((item, index) => (\n                                        <MenuItem value={index}>{item}</MenuItem>\n                                    )\n                                    )}\n                            </Select>\n                        </FormControl>\n\n\n                    </Grid>\n\n                    <Grid item xs={12} sm={4}>\n                        <FormControl fullWidth>\n                            <InputLabel id=\"day-label\">Year</InputLabel>\n                            <Select\n                                labelId=\"year-label\"\n                                id=\"year-select\"\n                                value={year}\n                                onChange={handleYearChanged}\n                            >\n                                {\n                                    yearArray.map(item => (\n                                        <MenuItem value={item}>{item}</MenuItem>\n                                    )\n                                    )}\n                            </Select>\n                        </FormControl>\n                    </Grid>\n                </Grid>\n\n                <div>\n                    {children}\n                </div>\n\n            </div>\n\n\n        </React.Fragment>\n    );\n}\n\n\nDateField.propTypes = {\n    title: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired,\n    dateChanged: PropTypes.func.isRequired,\n    error: PropTypes.bool\n};\n\nexport default DateField;\n\n\n\n\n","import API from './api';\nimport axiosRetry from 'axios-retry';\n\nexport default class PatientService {\n\n\n   static registerNewPatient = (payload) =>\n   {\n      return API.post(`/api/optimalvision/patient/registernewpatient`, payload);\n   }\n\n   static updatePatient = (payload) =>\n   {\n      return API.post(`/api/optimalvision/patient/updatepatient`, payload);\n   } \n\n   static deletePatient = (id) =>\n   {\n      return API.post(`/api/optimalvision/patient/deletepatient?id=${id}`);\n   } \n\n   static unDeletePatient = (id) =>\n   {\n      return API.post(`/api/optimalvision/patient/undeletepatient?id=${id}`);\n   } \n   \n    static getPatientById = (id) =>\n    {\n       return API.get(`/api/optimalvision/patient/getpatientbyid?id=${id}`);\n    }\n\n    static getPatientByPatientId = (patientID) =>\n    {\n       return API.get(`/api/optimalvision/patient/getpatientbypatientid?patientID=${patientID}`);\n    }\n\n    static getAllPatients = () =>\n    {\n      return API.get(`/api/optimalvision/patient/getallpatients`);\n    }\n\n    static getDeletedPatients= (limit) =>\n    {\n      if (!limit) limit = 25 \n       return API.get(`/api/optimalvision/patiant/getdeletedpatients`);\n    }\n\n}","import API from './api';\nimport axiosRetry from 'axios-retry';\n\nexport default class TemplateService {\n\n   static getEmailPreview = (templateId, bookingId, patientId) =>\n   {\n      return API.post(`/api/optimalvision/emailtemplate/getemailpreview`, {templateId,bookingId,patientId});\n   }\n\n   static sendManualEmail = (templateId, sendTo, bookingId, patientId) =>\n   {\n      return API.post(`/api/optimalvision/emailtemplate/sendmanualemail`, {templateId,sendTo,bookingId,patientId});\n   }\n\n   static registerNewTemplate = (payload) =>\n   {\n      return API.post(`/api/optimalvision/emailtemplate/registernewtemplate`, payload);\n   }\n\n   static updateTemplate = (payload) =>\n   {\n      return API.post(`/api/optimalvision/emailtemplate/updatetemplate`, payload);\n   } \n\n   static deleteTemplate = (id) =>\n   {\n      return API.post(`/api/optimalvision/emailtemplate/deletetemplate?id=${id}`);\n   } \n\n    static getTemplateById = (id) =>\n    {\n       return API.get(`/api/optimalvision/emailtemplate/gettemplatebyid?id=${id}`);\n    }\n\n    static getTemplateBytemplateId = (templateID) =>\n    {\n       return API.get(`/api/optimalvision/emailtemplate/gettemplatebytemplateid?templateID=${templateID}`);\n    }\n\n    static getAllTemplates = () =>\n    {\n      return API.get(`/api/optimalvision/emailtemplate/getalltemplates`);\n    }\n}","import React, { useEffect, useRef, useState } from \"react\";\nimport BookService from \"./services/BookService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {\n    AppBar,\n    Backdrop,\n    Button,\n    Checkbox,\n    CircularProgress,\n    DialogActions,\n    DialogContentText,\n    Divider,\n    FormControlLabel,\n    Grid,\n    IconButton,\n    InputAdornment,\n    InputLabel,\n    Link,\n    makeStyles,\n    MenuItem,\n    Select,\n    TextField,\n    Toolbar,\n    Tooltip,\n} from \"@material-ui/core\";\nimport GlobalState from \"./../GlobalState\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\n\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Draggable from \"react-draggable\";\nimport Paper from \"@material-ui/core/Paper\";\n\nimport Alert from \"@material-ui/lab/Alert\";\n\nimport PropTypes from \"prop-types\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport Box from \"@material-ui/core/Box\";\n\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport NumberFormat from \"react-number-format\";\n\nimport AccessAlarmsIcon from '@material-ui/icons/AccessAlarms';\nimport DateField from \"./DateField\";\n\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\nimport CloseIcon from '@material-ui/icons/Close';\nimport Slide from '@material-ui/core/Slide';\nimport PatientService from \"./services/PatientService\";\nimport dateFormat from \"dateformat\";\n\nimport SaveIcon from '@material-ui/icons/Save';\nimport TemplateService from \"./services/EmailTemplateService\";\n\n// import createDOMPurify from 'dompurify'\n// import { JSDOM } from 'jsdom'\n\nimport SendIcon from '@material-ui/icons/Send';\nimport CheckIcon from '@material-ui/icons/Check';\n\n// const window = (new JSDOM('')).window\n// const DOMPurify = createDOMPurify(window)\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`vertical-tabpanel-${index}`}\n            aria-labelledby={`vertical-tab-${index}`}\n            {...other}\n            style={{ width: \"100%\" }}\n        >\n            {value === index && (\n                <div style={{ padding: \"20px\", width: \"100%\" }}>\n                    {children}\n                </div>\n            )}\n        </div>\n    );\n}\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n    return {\n        id: `vertical-tab-${index}`,\n        'aria-controls': `vertical-tabpanel-${index}`,\n    };\n}\n\nconst useStyles = makeStyles((theme) => ({\n    appBar: {\n        position: 'relative',\n    },\n    title: {\n        marginLeft: theme.spacing(2),\n        flex: 1,\n    },\n\n    root: {\n        paddingTop: \"8px\",\n        flexGrow: 1,\n        backgroundColor: theme.palette.background.paper,\n        display: 'flex',\n        height: 224,\n    },\n    tabs: {\n        borderRight: `1px solid ${theme.palette.divider}`,\n    },\n\n    backdrop: {\n        zIndex: theme.zIndex.drawer + 5,\n        color: \"#fff\",\n    },\n\n    titleCenter: {\n        width: \"100%\",\n        textAlign: \"center\",\n        fontSize: \"1.1rem\",\n        color: theme.palette.primary.main,\n        fontWeight: \"500\",\n        borderBottom: `2px dashed ${theme.palette.primary.main}`\n    },\n\n    eyeText: {\n        width: \"100%\",\n        textAlign: \"left\",\n        fontSize: \"1.1rem\",\n        color: theme.palette.primary.main,\n        fontWeight: \"500\",\n        paddingTop: \"15px\"\n    }\n\n}));\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport default function PatientDialog(props) {\n    const classes = useStyles();\n\n    const [state, setState] = React.useContext(GlobalState);\n\n    const [patient, setPatient] = React.useState({ formData: {} })\n    const [saving, setSaving] = React.useState(false);\n\n    const [emailSent, setEmailSent] = React.useState(false)\n    const [emailSending, setEmailSending] = React.useState(false)\n\n\n    const [patientIDError, setPatientIDError] = React.useState(false)\n    const [nameError, setNameError] = React.useState(false)\n    const [surnameError, setSurnameError] = React.useState(false)\n    const [birthDateError, setBirthDateError] = React.useState(false)\n\n    const [patientRepeated, setPatientRepeated] = React.useState(false)\n\n\n    const [value, setValue] = React.useState(0);\n\n    const [history, setHistory] = React.useState([]);\n    const [backupFormData, setBackUpFormData] = React.useState(null);\n\n    const [openDeleteDialog, setOpenDeleteDialog] = React.useState(false)\n\n    const [selectedTemplateID, setSelectedTemplateID] = React.useState(null)\n    const [selectedTemplate, setSelectedTemplate] = React.useState(null)  \n    const [emailTemplates, setEmailTemplates] = React.useState([])\n\n    const handleCloseDeleteDialog = () => {\n        setOpenDeleteDialog(false)\n    }\n\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    const createPreview = async (_template) => {\n        try{\n            const res = await TemplateService.getEmailPreview(_template.templateID, null, patient.patientID)\n            if (res && res.data && res.data.result){\n                console.log(res.data.result)\n                setSelectedTemplate({..._template, html: res.data.result.content, subject: res.data.result.newSubject})\n            }\n\n        }catch(err)\n        {\n            console.error(err)\n        }\n    }\n\n    useEffect(() => {\n        if (props.open) {\n            const _history = []\n\n            if (props.patient) {\n                setPatient({ ...props.patient, formData: props.patient.formData ? JSON.parse(props.patient.formData) : {} })\n                setBackUpFormData(props.patient.formData ? JSON.parse(props.patient.formData) : {})\n                if (props.patient.history) {\n                    props.patient.history.forEach(record => {\n                        _history.push(JSON.parse(record))\n                    });\n                    setSelectedVersion(0)\n                }\n            }\n            else {\n                setPatient({ formData: {},  name : props.name || '', surname: props.surname || ''})\n            }\n\n            setHistory(_history.reverse())\n            loadEmailTemplates()\n\n        }\n    }, [props.patient, props.open])\n\n    const loadEmailTemplates = async () => {\n        try{\n            const res = await TemplateService.getAllTemplates()\n            if (res){\n                setEmailTemplates(res.data)\n            }\n\n        }catch(err)\n        {\n            console.error(err)\n        }\n    }\n\n    const handleClose = () => {\n        props.handleClose();\n        setValue(0)\n        setPatient({ formData: {} })\n        setPatientIDError(false)\n        setNameError(false)\n        setSurnameError(false)\n        setPatientRepeated(false)\n        setSelectedTemplate(null) \n        setSelectedTemplateID(null)\n    };\n\n    const saveClicked = async () => {\n\n        if (!validatePatient()) {\n            setValue(0)\n            return\n        }\n\n        try {\n            setPatientRepeated(false)\n            setSaving(true)\n            patient.formData = JSON.stringify(patient.formData)\n            if (props.patient) {\n                const res = await PatientService.updatePatient({ id: patient._id, patient: patient })\n                setSaving(false)\n                if (res.data.status === \"OK\") {\n                    setState(state => ({ ...state, patientDialogDataChanged: !state.patientDialogDataChanged }))\n                    handleClose();\n                }\n            } else {\n                const res = await PatientService.registerNewPatient({ patient: patient })\n                setSaving(false)\n                if (res.data.status === \"OK\") {\n                    setState(state => ({ ...state, patientDialogDataChanged: !state.patientDialogDataChanged }))\n                    handleClose();\n                } else if (res.data.status === \"FAILED\" && res.data.error === \"Repeated Patient!\") {\n                    setPatientIDError(true)\n                    setPatientRepeated(true)\n                    setValue(0)\n\n                }\n            }\n        }\n        catch (err) {\n            setSaving(false)\n            console.error(err)\n        }\n    }\n\n    const deleteClicked = async () => {\n\n        setOpenDeleteDialog(false)\n\n        setSaving(true)\n        try {\n            await PatientService.deletePatient(props.patient._id)\n            setSaving(false)\n            setState((state) => ({\n                ...state,\n                patientDialogDataChanged: !state.patientDialogDataChanged\n                    ? true\n                    : false,\n            }));\n            handleClose();\n        }\n        catch (err) {\n            console.error(err)\n            setSaving(false)\n        }\n    }\n\n\n\n    const validatePatient = () => {\n        var error = false\n        if (!patient.patientID || patient.patientID.trim().length === 0) {\n            error = true\n            setPatientIDError(true)\n        }\n        if (!patient.name || patient.name.trim().length === 0) {\n            error = true\n            setNameError(true)\n        }\n\n        if (!patient.surname || patient.surname.trim().length === 0) {\n            error = true\n            setSurnameError(true)\n        }\n\n        if (patient.birthDate && patient.birthDate.length !== 10) {\n            setBirthDateError(true)\n            error = true\n        }\n\n        return !error\n\n    }\n\n    const formatDate = (date) => {\n        return dateFormat(date, \"dd-mm-yyyy , HH:MM:ss\")\n    }\n\n    const [selectedVersion, setSelectedVersion] = React.useState(0)\n\n    const showHistoryComboBox = () => {\n        return (\n            <React.Fragment>\n                <div style={{ marginTop: \"-10px\" }}>\n                    <span style={{ color: \"#fff\", fontWeight: \"500\", fontSize: \"1rem\", marginRight: \"10px\" }}>\n                        Version :\n                    </span>\n                    <Select\n                        label=\"Version\"\n                        labelId=\"version-label\"\n                        id=\"version-label\"\n                        style={{ color: \"#fff\", padding: \"0px 10px\" }}\n                        value={selectedVersion}\n                        onChange={(event) => {\n                            setSelectedVersion(event.target.value)\n                            if (event.target.value === 0) {\n                                setPatient({ ...patient, formData: backupFormData })\n                            } else {\n                                setPatient({ ...patient, formData: history[event.target.value - 1] })\n                            }\n\n                        }}\n\n                    >\n                        <MenuItem value={0}>{`${formatDate(patient.formData.timeStamp)} ( Current )`}</MenuItem>\n\n                        {history.map((item, index) => (\n                            <MenuItem value={index + 1}>{`${formatDate(item.timeStamp)} ( History )`}</MenuItem>\n                        ))\n                        }\n                    </Select>\n\n                </div>\n            </React.Fragment>\n        )\n    }\n\n    const handleSelectedTemplateChanged = (value) =>\n    {\n        setSelectedTemplateID(value)\n        const template = emailTemplates.find(e => e.templateID === value)\n        setSelectedTemplate(template)\n        createPreview(template) \n        setEmailSent(false)\n    }\n\n    const sendEmail = async () => {\n        try{\n            setEmailSending(true)\n            setSaving(true)\n\n            await TemplateService.sendManualEmail(selectedTemplate.templateID, patient.email, null, patient.patientID)\n\n\n            setEmailSending(false)\n            setEmailSent(true)\n            setSaving(false)\n\n        }catch(err)\n        {\n            console.error(err)\n            setEmailSending(false)\n            setSaving(false)\n        }\n\n    }\n\n\n    return (\n        <React.Fragment>\n            <React.Fragment>\n                <Dialog fullScreen open={props.open} onClose={handleClose} TransitionComponent={Transition}>\n                    <AppBar className={classes.appBar} style={(selectedVersion > 0 && history && history.length > 0) ? { backgroundColor: \"#777\" } : {}} color=\"secondary\">\n                        <Toolbar>\n                            <IconButton edge=\"start\" color=\"inherit\" onClick={handleClose} aria-label=\"close\">\n                                <CloseIcon />\n                            </IconButton>\n                            <Typography variant=\"h6\" className={classes.title}>\n                                {props.title}\n                            </Typography>\n\n\n                            <Button startIcon={<SaveIcon />} variant=\"contained\" color=\"primary\" onClick={saveClicked} disabled={selectedVersion > 0 && history && history.length > 0}>\n                                {props.saveButtonText}\n                            </Button>\n                        </Toolbar>\n\n                        <Grid container direction=\"column\" alignItems=\"center\" justify=\"center\">\n\n                            {history && history.length > 0 && (\n                                <Grid item>\n                                    {showHistoryComboBox()}\n                                </Grid>\n                            )}\n                        </Grid>\n\n                    </AppBar>\n\n                    <div className={classes.root}>\n                        <Tabs\n                            orientation=\"vertical\"\n                            variant=\"scrollable\"\n                            value={value}\n                            onChange={handleChange}\n                            aria-label=\"Vertical tabs example\"\n                            indicatorColor=\"secondary\"\n                            textColor=\"secondary\"\n                            className={classes.tabs}\n                        >\n                            <Tab label=\"Personal Details\" {...a11yProps(0)} />\n                            <Tab label={`History & Symptoms`} {...a11yProps(1)} />\n                            <Tab label={`Notes From Consultation`} {...a11yProps(2)} />\n\n                            {/* <Tab label=\"Dry Eyes\" {...a11yProps(2)} />\n                            <Tab label=\"Ocular Examination\" {...a11yProps(3)} />\n                            <Tab label=\"Diagnostics\" {...a11yProps(4)} />\n                            <Tab label=\"Uncorrected VA\" {...a11yProps(5)} />\n                            <Tab label=\"Refraction\" {...a11yProps(6)} />\n                            <Tab label=\"Auto Refraction\" {...a11yProps(7)} />\n                            <Tab label=\"Manifest Refraction\" {...a11yProps(8)} />\n                            <Tab label=\"Target Refraction\" {...a11yProps(9)} /> */}\n                            <Tab label=\"Recommendation\" {...a11yProps(3)} />\n                            {props.patient && (\n                                <Tab label=\"Send Emails (Manually)\" {...a11yProps(4)} />\n                            )}\n                        </Tabs>\n                        <TabPanel value={value} index={0}>\n                            <Grid container spacing={4}>\n                                <Grid item xs={12} sm={6} md={4}>\n                                    <TextField\n                                        disabled={props.patient}\n                                        name=\"patientid\"\n                                        id=\"patientid\"\n                                        label=\"Patient ID\"\n                                        fullWidth\n                                        required\n                                        helperText={patientRepeated ? 'This PatientID is already assigned to another patient' : ''}\n                                        error={patientIDError}\n                                        value={patient.patientID || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, patientID: event.target.value })\n                                            setPatientIDError(false)\n                                        }}\n                                        autoComplete=\"none\"\n                                        variant=\"outlined\"\n                                    />\n                                </Grid>\n                                <Grid item xs={12} sm={6} md={4}>\n                                    <TextField\n                                        name=\"firstname\"\n                                        id=\"firstname\"\n                                        label=\"First Name\"\n                                        fullWidth\n                                        required\n                                        error={nameError}\n                                        value={patient.name || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, name: event.target.value })\n                                            setNameError(false)\n                                        }}\n                                        autoComplete=\"none\"\n                                        variant=\"outlined\"\n                                    />\n                                </Grid>\n                                <Grid item xs={12} sm={6} md={4}>\n                                    <TextField\n                                        name=\"surname\"\n                                        id=\"surname\"\n                                        label=\"Surname\"\n                                        fullWidth\n                                        required\n                                        error={surnameError}\n                                        value={patient.surname || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, surname: event.target.value })\n                                            setSurnameError(false)\n                                        }}\n                                        autoComplete=\"none\"\n                                        variant=\"outlined\"\n                                    />\n                                </Grid>\n                                <Grid item xs={12} sm={6} md={4}>\n                                    <FormControl fullWidth variant=\"outlined\" >\n                                        <InputLabel id=\"gender-label\">Gender</InputLabel>\n                                        <Select\n                                            label=\"Gender\"\n                                            labelId=\"gender-label\"\n                                            id=\"gender-label\"\n                                            fullWidth\n                                            style={{ height: \"90px\" }}\n                                            value={patient.gender || ''}\n                                            onChange={(event) => {\n                                                setPatient({ ...patient, gender: event.target.value })\n                                            }}\n\n                                        >\n                                            <MenuItem value={\"Male\"}>Male</MenuItem>\n                                            <MenuItem value={\"Female\"}>Female</MenuItem>\n                                        </Select>\n                                    </FormControl>\n                                </Grid>\n                                <Grid item xs={12} sm={6} md={8} style={{ marginTop: \"-20px\" }} >\n                                    <DateField\n                                        error={birthDateError}\n                                        value={patient.birthDate || ''}\n                                        title=\"DOB\"\n                                        dateChanged={(value) => {\n                                            setPatient({ ...patient, birthDate: value })\n                                            setBirthDateError(false)\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} sm={6} md={4}>\n                                    <TextField\n                                        name=\"postcode\"\n                                        id=\"postcode\"\n                                        label=\"Postcode\"\n                                        fullWidth\n                                        autoComplete=\"none\"\n                                        value={patient.postCode || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, postCode: event.target.value })\n                                        }}\n                                        variant=\"outlined\"\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} sm={6} md={8}>\n                                    <TextField\n                                        name=\"address\"\n                                        id=\"address\"\n                                        label=\"Address\"\n                                        fullWidth\n                                        autoComplete=\"none\"\n                                        value={patient.address || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, address: event.target.value })\n                                        }}\n\n                                        variant=\"outlined\"\n\n                                    />\n                                </Grid>\n\n                                <Grid item xs={12} sm={6} md={4}>\n                                    <TextField\n                                        name=\"hometel\"\n                                        id=\"hometel\"\n                                        label=\"Home Tel\"\n                                        fullWidth\n                                        autoComplete=\"none\"\n                                        value={patient.homeTel || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, homeTel: event.target.value })\n                                        }}\n                                        variant=\"outlined\"\n\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} sm={6} md={4}>\n                                    <TextField\n                                        name=\"mobiletel\"\n                                        id=\"mobiletel\"\n                                        label=\"Mobile Tel\"\n                                        fullWidth\n                                        autoComplete=\"none\"\n                                        value={patient.mobileTel || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, mobileTel: event.target.value })\n                                        }}\n\n                                        variant=\"outlined\"\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} sm={6} md={4}>\n                                    <TextField\n                                        name=\"email\"\n                                        id=\"email\"\n                                        label=\"Email\"\n                                        fullWidth\n                                        autoComplete=\"none\"\n                                        value={patient.email || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, email: event.target.value })\n                                        }}\n                                        variant=\"outlined\"\n\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} sm={6}>\n                                    <TextField\n                                        name=\"occupation\"\n                                        id=\"occupation\"\n                                        label=\"Occupation\"\n                                        fullWidth\n                                        autoComplete=\"none\"\n                                        value={patient.formData.occupation || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, occupation: event.target.value } })\n                                        }}\n\n                                        variant=\"outlined\"\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} sm={6}>\n                                    <TextField\n                                        name=\"gpname\"\n                                        id=\"gpname\"\n                                        label={`GP Name & Address`}\n                                        fullWidth\n                                        autoComplete=\"none\"\n                                        value={patient.formData.gpname || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, gpname: event.target.value } })\n                                        }}\n\n                                        variant=\"outlined\"\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} sm={6}>\n                                    <TextField\n                                        name=\"kincontact\"\n                                        id=\"kincontact\"\n                                        label=\"Next of Kin Contact\"\n                                        fullWidth\n                                        autoComplete=\"none\"\n                                        value={patient.formData.kincontact || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, kincontact: event.target.value } })\n                                        }}\n                                        variant=\"outlined\"\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} sm={6}>\n                                    <TextField\n                                        name=\"prevsighttest\"\n                                        id=\"prevsignttest\"\n                                        label=\"Previous Sight Test\"\n                                        fullWidth\n                                        autoComplete=\"none\"\n                                        value={patient.formData.prevsighttest || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, prevsighttest: event.target.value } })\n                                        }}\n                                        variant=\"outlined\"\n\n                                    />\n                                </Grid>\n\n                                {props.patient && (\n                                    <Grid item xs={12} style={{ marginTop: \"20px\" }}>\n                                        <Button\n                                            onClick={() => setOpenDeleteDialog(true)}\n                                            variant=\"contained\"\n                                            fullWidth\n                                            color=\"primary\"\n                                            // style={{ width: \"100px\" }}\n                                            style={{ backgroundColor: \"#c70000\", color: \"#fff\" }}\n                                            disabled={saving}\n                                        >\n                                            Delete This Patient\n                                  </Button>\n                                    </Grid>\n\n\n                                )}\n                            </Grid>\n                        </TabPanel>\n                        <TabPanel value={value} index={1}>\n                            <Grid container spacing={2}>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"cc\"\n                                        id=\"cc\"\n                                        label=\"C.C\"\n                                        fullWidth\n                                        multiline\n                                        rows={3}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.cc || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, cc: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"prevmedicalhistory\"\n                                        id=\"prevmedicalhistory\"\n                                        label=\"Previous Medical History\"\n                                        fullWidth\n                                        multiline\n                                        rows={3}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.prevmedicalhistory || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, prevmedicalhistory: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"prevocularhistory\"\n                                        id=\"prevocularhistory\"\n                                        label=\"Previous Ocular History\"\n                                        fullWidth\n                                        multiline\n                                        rows={3}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.prevocularhistory || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, prevocularhistory: event.target.value } })\n                                        }}\n\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"familyhistory\"\n                                        id=\"familyhistory\"\n                                        label=\"Family History\"\n                                        fullWidth\n                                        multiline\n                                        rows={3}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.familyhistory || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, familyhistory: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"medications\"\n                                        id=\"medications\"\n                                        label=\"Medications\"\n                                        fullWidth\n                                        multiline\n                                        rows={3}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.medications || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, medications: event.target.value } })\n                                        }}\n\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"grafth\"\n                                        id=\"grafth\"\n                                        label=\"Graft H\"\n                                        fullWidth\n                                        multiline\n                                        rows={3}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.grafth || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, grafth: event.target.value } })\n                                        }}\n\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"allergies\"\n                                        id=\"allregies\"\n                                        label=\"Allergies\"\n                                        fullWidth\n                                        multiline\n                                        rows={3}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.allergies || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, allergies: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"contactlenswearer\"\n                                        id=\"contactlenswearer\"\n                                        label=\"Contact Lens Wearer\"\n                                        fullWidth\n                                        multiline\n                                        rows={3}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        placeholder={` Yes/No \\n Soft/RGP/EW`}\n                                        value={patient.formData.contactlenswearer || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, contactlenswearer: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"hobbies\"\n                                        id=\"hobbies\"\n                                        label=\"Lifestyle / Hobbies\"\n                                        fullWidth\n                                        multiline\n                                        rows={3}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.hobbies || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, hobbies: event.target.value } })\n                                        }}\n\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"vdu\"\n                                        id=\"vdu\"\n                                        label=\"VDU\"\n                                        fullWidth\n                                        multiline\n                                        rows={3}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.vdu || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, vdu: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"othernotes\"\n                                        id=\"othernotes\"\n                                        label=\"Other Notes\"\n                                        fullWidth\n                                        multiline\n                                        rows={10}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.othernotes || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, othernotes: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"driver\"\n                                        id=\"driver\"\n                                        label=\"Driver\"\n                                        fullWidth\n                                        multiline\n                                        rows={3}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.driver || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, driver: event.target.value } })\n                                        }}\n\n\n                                    />\n                                </Grid>\n                            </Grid>\n                        </TabPanel>\n                        <TabPanel value={value} index={2}>\n                            <Grid container spacing={2}>\n                                <Grid item xs={12}>\n                                    <TextField\n                                        name=\"notesfromconsultation\"\n                                        id=\"notesfromconsultation\"\n                                        label=\"Notes From Consultation\"\n                                        fullWidth\n                                        multiline\n                                        rows={25}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.notesfromconsultation || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, notesfromconsultation: event.target.value } })\n                                        }}\n                                    />\n\n                                </Grid>\n                            </Grid>\n                        </TabPanel>\n\n\n                        <TabPanel value={value} index={3}>\n                            <Grid container spacing={2}>\n                                <Grid item xs={12}>\n                                    <TextField\n                                        name=\"recommendation\"\n                                        id=\"recommendation\"\n                                        label=\"Recommendation\"\n                                        fullWidth\n                                        multiline\n                                        rows={25}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.recommendation || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, recommendation: event.target.value } })\n                                        }}\n                                    />\n\n                                </Grid>\n                            </Grid>\n                        </TabPanel>\n                        \n                        {props.patient && (\n                            <TabPanel value={value} index={4}>\n                                <Grid container spacing={2} direction=\"column\">\n                                    <Grid item>\n                                        <div style={{fontSize:\"1.2rem\", color:\"#777\", fontWeight:\"500\", marginBottom:\"0px\"}}>\n                                            Here you can manually send emails (from templates) to the patients:\n                                        </div>   \n                                    </Grid>\n                                    <Grid item style={{marginBottom:\"10px\"}}>\n                                      <Alert severity=\"info\">Emails will be sent to \"{patient.email}\"</Alert>\n                                    </Grid>\n                                    <Grid item xs={6}>\n                                    <FormControl fullWidth variant=\"outlined\" className={classes.formControl}>\n                                        <InputLabel id=\"template-label-id\">Choose Your Template</InputLabel>\n                                            <Select\n                                                fullWidth\n                                                label=\"Choose Your Template\"\n                                                labelId=\"template-label-id\"\n                                                id=\"template-label\"\n                                                value={selectedTemplateID}\n                                                onChange={(event) => {\n                                                    handleSelectedTemplateChanged(event.target.value)\n                                                }}\n                                            >\n\n                                                {emailTemplates.map((item, index) => (\n                                                    <MenuItem value={item.templateID}>{`${item.templateID}`}</MenuItem>\n                                                ))\n                                                }\n\n                                            </Select>\n                                        </FormControl>\n                                    </Grid>\n                                    <Grid item>\n                                        {selectedTemplate && (\n                                            <React.Fragment>\n                                                <div style={{fontWeight:\"500\", color:\"#777\", fontSize:\"1rem\", width:\"100%\", padding:\"5px\"}}>\n                                                    Email Preview :\n                                                </div>\n                                                <Paper elevation={4} style={{padding:\"20px\",marginBottom:\"1px\", backgroundColor:\"#0083ba\"}}>\n                                                    <div style={{fontSize:\"1rem\", fontWeight:\"500\", color:\"#fff\", position:\"relative\"}}>\n                                                        {selectedTemplate.subject}\n                                                        <div style={{position:\"absolute\", right:\"5px\", top:\"-5px\"}}>\n                                                            {!emailSent && (\n                                                                <Button disabled={emailSending || (!patient.email || patient.email.length < 3)} onClick={sendEmail} startIcon={<SendIcon/>} variant=\"contained\" color=\"primary\">\n                                                                     Send Email\n                                                                 </Button>\n                                                            )}\n                                                            {emailSent && (\n                                                                <div style={{fontWeight:\"500\", fontSize:\"1rem\", color:\"#fff\"}}>\n                                                                    <Grid container spacing={1} alignItems=\"center\">\n                                                                        <Grid item>\n                                                                             Email Sent Successfully \n                                                                        </Grid>\n                                                                        <Grid item>\n                                                                            <CheckIcon/>\n                                                                        </Grid>\n                                                                    </Grid>\n                                                                    \n                                                                 </div>\n                                                            )}\n                                                        </div>\n                                                    </div>   \n                                                </Paper>\n                                                <Paper elevation={4} style={{padding:\"20px\"}}>\n                                                    <div \n                                                        // dangerouslySetInnerHTML={{ __html: DOMPurify.sanitize(selectedTemplate.html) }}\n                                                        dangerouslySetInnerHTML={{ __html: selectedTemplate.html}}\n                                                    >\n                                                    </div>\n                                                </Paper>\n                                            </React.Fragment>\n                                        )}\n                                    </Grid>\n\n                                </Grid>\n                             </TabPanel>                        \n                        )}\n\n\n                    </div>\n\n                    <Backdrop\n                        className={classes.backdrop}\n                        open={saving}\n                    >\n                        <CircularProgress color=\"inherit\" />\n                    </Backdrop>\n\n\n                    <Dialog\n                        open={openDeleteDialog}\n                        onClose={handleCloseDeleteDialog}\n                        aria-labelledby=\"alert-dialog-title\"\n                        aria-describedby=\"alert-dialog-description\"\n                    >\n                        <DialogTitle style={{ color: \"#d10202\", fontWeight: \"600\" }} id=\"alert-dialog-title\">\n                            {\"Delete Patient\"}\n                        </DialogTitle>\n                        <DialogContent>\n                            <DialogContentText\n                                style={{ color: \"#000\", fontWeight: \"500\" }}\n                                id=\"alert-dialog-description\"\n                            >\n                                Are you sure you want to delete this patient?\n                            </DialogContentText>\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={handleCloseDeleteDialog} color=\"default\">\n                                Back\n                                 </Button>\n                            <Button onClick={deleteClicked} variant=\"contained\" style={{ backgroundColor: \"#d10202\", color: \"#fff\" }}>\n                                Yes, Delete this patient\n                                 </Button>\n                        </DialogActions>\n                    </Dialog>\n\n\n\n                </Dialog>\n            </React.Fragment>\n        </React.Fragment>\n    );\n}\n","import React, { useEffect, useRef, useState } from \"react\";\nimport BookService from \"./services/BookService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {\n    Backdrop,\n    Button,\n    Checkbox,\n    CircularProgress,\n    DialogActions,\n    Divider,\n    FormControlLabel,\n    Grid,\n    InputAdornment,\n    InputLabel,\n    Link,\n    makeStyles,\n    MenuItem,\n    Select,\n    Switch,\n    TextField,\n    Tooltip,\n} from \"@material-ui/core\";\nimport GlobalState from \"../GlobalState\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport CreditCardIcon from \"@material-ui/icons/CreditCard\";\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\n\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Draggable from \"react-draggable\";\nimport Paper from \"@material-ui/core/Paper\";\n\nimport Alert from \"@material-ui/lab/Alert\";\n\nimport PropTypes from \"prop-types\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport Box from \"@material-ui/core/Box\";\n\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport { corporates } from \"./Corporates\";\nimport NumberFormat from \"react-number-format\";\n\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { validate } from \"email-validator\";\nimport DateRangeIcon from \"@material-ui/icons/DateRange\";\nimport { CalendarColors } from \"./calendar-admin/colors\";\nimport DateField from \"./DateField\";\n\nimport Autocomplete, { createFilterOptions } from '@material-ui/lab/Autocomplete';\nimport PatientService from \"./services/PatientService\";\n\nimport {matchSorter} from 'match-sorter'\nimport PatientDialog from \"./PatientDialog\";\n\n\nconst filter = createFilterOptions();\n\nvar interval;\n\nconst useStyles = makeStyles((theme) => ({\n    title: {\n        marginTop: theme.spacing(0),\n        marginBottom: theme.spacing(1),\n    },\n\n    refreshButton: {\n        marginLeft: theme.spacing(2),\n    },\n\n    checkIcon: {\n        color: \"green\",\n    },\n\n    closeIcon: {\n        color: \"red\",\n    },\n\n    RefLink: {\n        cursor: \"pointer\",\n    },\n\n    BookedLabel: {\n        backgroundColor: \"#606060\",\n        color: \"#fff\",\n        paddingRight: \"10px\",\n        paddingLeft: \"10px\",\n    },\n\n    PatientAttendedLabel: {\n        backgroundColor: \"#0066aa\",\n        color: \"#fff\",\n        paddingRight: \"15px\",\n        paddingLeft: \"10px\",\n    },\n\n    SampleTakenLabel: {\n        backgroundColor: \"#0066cc\",\n        color: \"#fff\",\n        paddingRight: \"40px\",\n        paddingLeft: \"10px\",\n    },\n\n    ReportSentLabel: {\n        backgroundColor: \"#009900\",\n        color: \"#fff\",\n        paddingRight: \"90px\",\n        paddingLeft: \"10px\",\n    },\n\n    ReportCertSentLabel: {\n        backgroundColor: \"#009900\",\n        color: \"#fff\",\n        paddingRight: \"68px\",\n        paddingLeft: \"10px\",\n    },\n\n    archiveButton: {},\n\n    smartMatchButton: {\n        backgroundColor: \"#2f942e\",\n        \"&:hover\": {\n            background: \"green\",\n            color: \"#fff\",\n        },\n        textDecoration: \"none !important\",\n        marginRight: \"10px\",\n        // padding: \"10px\"\n    },\n\n    infoTitle: {\n        fontWeight: \"400\",\n    },\n\n    infoData: {\n        paddingLeft: \"10px\",\n        fontWeight: \"800\",\n    },\n\n    matchButton: {\n        marginTop: \"30px\",\n        marginBottom: \"20px\",\n        backgroundColor: \"#2f942e\",\n        \"&:hover\": {\n            background: \"green\",\n            color: \"#fff\",\n        },\n        textDecoration: \"none !important\",\n        padding: \"10px\",\n        paddingLeft: \"50px\",\n        paddingRight: \"50px\",\n    },\n\n    resendButton: {\n        marginTop: \"5px\",\n        marginBottom: \"5px\",\n        backgroundColor: \"#2f942e\",\n        \"&:hover\": {\n            background: \"green\",\n            color: \"#fff\",\n        },\n        textDecoration: \"none !important\",\n        padding: \"10px\",\n        paddingLeft: \"50px\",\n        paddingRight: \"50px\",\n    },\n\n    resendFilesButton: {\n        marginTop: \"5px\",\n        marginBottom: \"5px\",\n        backgroundColor: \"#3792ad\",\n        \"&:hover\": {\n            background: \"#2f798f\",\n            color: \"#fff\",\n        },\n        textDecoration: \"none !important\",\n        padding: \"10px\",\n        paddingLeft: \"50px\",\n        paddingRight: \"50px\",\n    },\n\n    cancelButton: {\n        marginBottom: \"10px\",\n        textDecoration: \"none !important\",\n        padding: \"10px\",\n        paddingLeft: \"90px\",\n        paddingRight: \"90px\",\n    },\n\n    CalendarIcon: {\n        color: theme.palette.primary.main,\n    },\n\n    DateTimeLabel: {\n        fontWeight: \"600\",\n        fontSize: \"1.2rem\",\n        color: theme.palette.primary.main,\n    },\n\n    backdrop: {\n        zIndex: theme.zIndex.drawer + 5,\n        color: \"#fff\",\n    },\n\n    PriceLabelPaid: {\n        color: theme.palette.primary.main,\n        fontWeight: \"600\"\n    },\n\n    PriceLabelNotPaid: {\n        color: theme.palette.secondary.main,\n        fontWeight: \"600\"\n    },\n\n\n}));\n\nconst Packages = [\n    { packageName: \"Consultation with Consultant Gynaecologist\" },\n    { packageName: `Coil Fitting/Coil Removal` },\n    { packageName: `Well Woman Check` },\n    { packageName: `Sexual Health Screening` },\n    { packageName: `Pre-pregnancy/Fertility check` },\n    { packageName: `Gynaecological Ultrasound` },\n    { packageName: `HPV Vaccination` },\n    { packageName: `Cervical / Pap Smear` },\n    { packageName: `HPV Treatment / Wart Cryo-Therapy` },\n];\n\nfunction NumberFormatCustom(props) {\n    const { inputRef, onChange, ...other } = props;\n\n    return (\n        <NumberFormat\n            {...other}\n            getInputRef={inputRef}\n            onValueChange={(values) => {\n                onChange({\n                    target: {\n                        name: props.name,\n                        value: values.value,\n                    },\n                });\n            }}\n            thousandSeparator\n            isNumericString\n            prefix=\"\"\n        />\n    );\n}\n\nNumberFormatCustom.propTypes = {\n    inputRef: PropTypes.func.isRequired,\n    name: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired,\n};\n\nconst BorderLinearProgress = withStyles((theme) => ({\n    root: {\n        height: 10,\n        borderRadius: 5,\n    },\n    colorPrimary: {\n        backgroundColor: \"#cedbce\", //theme.palette.grey[theme.palette.type === 'light' ? 200 : 700],\n    },\n    bar: {\n        borderRadius: 5,\n        backgroundColor: \"#2f942e\",\n    },\n}))(LinearProgress);\nfunction LinearProgressWithLabel(props) {\n    return (\n        <Box display=\"flex\" alignItems=\"center\">\n            <Box width=\"100%\" mr={1}>\n                <BorderLinearProgress variant=\"determinate\" {...props} />\n            </Box>\n            <Box minWidth={35}>\n                <Typography\n                    style={{ fontWeight: \"800\", color: \"#5e855e\" }}\n                    variant=\"body2\"\n                    color=\"textSecondary\"\n                >{`${Math.round(props.value)}%`}</Typography>\n            </Box>\n        </Box>\n    );\n}\n\nLinearProgressWithLabel.propTypes = {\n    /**\n     * The value of the progress indicator for the determinate and buffer variants.\n     * Value between 0 and 100.\n     */\n    value: PropTypes.number.isRequired,\n};\n\nfunction PaperComponent(props) {\n    return (\n        <Draggable\n            handle=\"#draggable-dialog-title\"\n            cancel={'[class*=\"MuiDialogContent-root\"]'}\n        >\n            <Paper {...props} />\n        </Draggable>\n    );\n}\n\nexport default function NewOVBookingDialog(props) {\n    const classes = useStyles();\n\n    const [state, setState] = React.useContext(GlobalState);\n    const [saving, setSaving] = useState(false);\n\n    const [fullname, setFullname] = React.useState(\"\");\n    const [fullnameError, setFullnameError] = React.useState(false);\n\n    const [patientRecord, setPatientRecord] = React.useState(null)\n    const [patientList, setPatientList] = React.useState([])\n\n\n    const [phone, setPhone] = React.useState(\"\");\n    const [email, setEmail] = React.useState(\"\");\n    const [notes, setNotes] = React.useState(\"\");\n\n    const [patientID, setPatientID] = React.useState(\"\");\n    const [prescriptionLeft, setPrescriptionLeft] = React.useState(\"\");\n    const [prescriptionRight, setPrescriptionRight] = React.useState(\"\");\n\n\n    const [birthDate, setBirthDate] = React.useState(\"\");\n    const [birthDateError, setBirthDateError] = React.useState(false);\n\n\n    const birthDateChanged = (dateStr) => {\n        setBirthDate(dateStr);\n    }\n\n\n\n\n    const fullnameChanged = (event) => {\n        setFullname(event.target.value);\n        setFullnameError(false);\n    };\n\n    const phoneChanged = (event) => {\n        setPhone(event.target.value);\n    };\n\n    const emailChanged = (event) => {\n        setEmail(event.target.value);\n    };\n\n\n    const notesChanged = (event) => {\n        setNotes(event.target.value);\n    };\n\n    const patientIDChanged = (event) => {\n        setPatientID(event.target.value);\n    };\n\n    const prescriptionLeftChanged = (event) => {\n        setPrescriptionLeft(event.target.value);\n    };\n\n    const prescriptionRightChanged = (event) => {\n        setPrescriptionRight(event.target.value);\n    };\n\n    useEffect(() => {\n        if (props.open)\n        {\n            loadPatiens()\n        }\n\n    }, [props.open, state.patientDialogDataChanged])\n\n    const loadPatiens = async() =>\n    {\n        try{\n            const res = await PatientService.getAllPatients()\n            setPatientList(res.data)\n        }catch(err)\n        {\n            console.error(err)\n        }\n    }\n\n    const handleClose = () => {\n        if (saving) return;\n\n        setFullname(\"\");\n        setFullnameError(false);\n        setBirthDateError(false)\n        setPhone(\"\");\n        setEmail(\"\");\n        setNotes(\"\");\n        setBirthDate(\"\")\n        setPatientID(\"\")\n        setPrescriptionLeft(\"\")\n        setPrescriptionRight(\"\")\n        setPatientRecord(null)\n\n        props.handleClose();\n        setSaving(false);\n    };\n\n    const validateBooking = () => {\n        let error = false;\n        if (!fullname || fullname.trim().length < 1) {\n            setFullnameError(true);\n            error = true;\n        }\n\n        if (birthDate && birthDate.length >= 1 && birthDate.length < 10) {\n            setBirthDateError(true);\n            error = true;\n        }\n\n        return !error;\n    };\n\n    const saveClicked = async () => {\n        if (!validateBooking()) {\n            return;\n        }\n\n        setSaving(true);\n\n        try {\n            await BookService.addNewBooking({\n                bookingDate: props.date,\n                bookingTime: props.time,\n                fullname: fullname,\n                phone: phone,\n                email: email,\n                birthDate: birthDate,\n                notes: notes,\n                clinic: props.clinic,\n                patientID: patientID,\n                prescriptionLeft: prescriptionLeft,\n                prescriptionRight: prescriptionRight\n            });\n            setSaving(false);\n            setState((state) => ({\n                ...state,\n                bookingDialogDataChanged: !state.bookingDialogDataChanged\n                    ? true\n                    : false,\n            }));\n            handleClose();\n        } catch (err) {\n            console.error(err);\n            setSaving(false);\n        }\n    };\n\n    const getColorFromClinic = (clinic) => {\n        switch (clinic) {\n            case \"Virtual Consultation\":\n                return CalendarColors.VC_COLOR\n            case \"F2F Clinic\":\n                return CalendarColors.F2F_COLOR\n            case \"Laser Theatre\":\n                return CalendarColors.LASER_COLOR\n            case \"Lens Theatre\":\n                return CalendarColors.CATARACT_COLOR\n            case \"Post OP\":\n                return CalendarColors.POSTOP_COLOR\n            case \"Optometry\":\n                return CalendarColors.OPOTOMETRY_COLOR\n\n            default:\n                return \"#777\"\n\n        }\n    }\n\n    const filterOptions = (options, { inputValue }) => {\n\n        if (inputValue && inputValue.length >= 1)\n        {\n        //   setNoOptionsText(\"\")\n          return matchSorter(options, inputValue, {keys: ['fullname']});\n        }\n        else\n        {\n        //   setNoOptionsText(\"Please enter at least 3 characters\")\n          return matchSorter(options, '$$$$', {keys: ['fullname']});\n        }\n      }\n\n      const [patientDialogOpen, setPatientDialogOpen] = React.useState(false)\n      const handleClosePatientDialog = () =>\n      {\n          setPatientDialogOpen(false)\n          setNewName('')\n          setNewSurname('')\n      }\n\n      const [newName, setNewName] = React.useState('')\n      const [newSurname, setNewSurname] = React.useState('')\n\n      useEffect ( () => {\n          if (patientRecord)\n          {\n              setFullname(patientRecord.fullname || '')\n              setPatientID(patientRecord.patientID || '')\n              setEmail(patientRecord.email || '')\n              setPhone(patientRecord.mobileTel || patientRecord.homeTel || '')\n              setBirthDate(patientRecord.birthDate || null)\n          }else\n          {\n            setFullname('')\n            setPatientID('')\n            setEmail('')\n            setPhone('')\n            setBirthDate(null)\n        }\n\n      }, [patientRecord])\n    \n\n    return (\n        <React.Fragment>\n            {props.date && props.time && (\n                <React.Fragment>\n                    <Dialog\n                        maxWidth=\"md\"\n                        open={props.open}\n                        onClose={handleClose}\n                        PaperComponent={PaperComponent}\n                        aria-labelledby=\"form-dialog-title\"\n                    >\n                        <DialogTitle id=\"draggable-dialog-title\">\n\n                            <div style={{ position: \"absolute\", left: \"0px\", top: \"0px\", width: \"100%\", backgroundColor: getColorFromClinic(props.clinic), color: \"#fff\", padding: \"15px 5px\", textAlign: \"center\", fontSize: \"1.5rem\" }}>\n                                <Grid container direction=\"row\"\n                                    justify=\"center\"\n                                    alignItems=\"center\"\n                                    spacing={1}\n                                >\n                                    <Grid item>\n                                        <AddIcon style={{ fontSize: \"2.5rem\" }} />\n                                    </Grid>\n                                    <Grid item style={{ marginTop: \"-12px\" }}>\n                                        {props.clinic}\n\n                                    </Grid>\n                                </Grid>\n                            </div>\n\n\n                        </DialogTitle>\n                        <DialogContent>\n                            <div\n                                style={{\n                                    paddingTop: \"50px\",\n                                    paddingBottom: \"20px\"\n                                }}\n                            >\n                                <Grid\n                                    container\n                                    direction=\"row\"\n                                    justify=\"stretch\"\n                                    spacing={2}\n                                    alignItems=\"center\"\n                                >\n                                    <Grid item xs={12} style={{ marginTop: \"10px\" }}>\n                                        <Grid\n                                            container\n                                            direction=\"row\"\n                                            justify=\"center\"\n                                            alignItems=\"center\"\n                                            spacing={1}\n                                        >\n                                            <Grid item>\n                                                <DateRangeIcon className={classes.CalendarIcon} />\n                                            </Grid>\n                                            <Grid item>\n                                                <span className={classes.DateTimeLabel}>\n                                                    {props.date} , {props.time}\n                                                </span>\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n\n                                    <Grid item xs={12} md={6}>\n                                        {/* <TextField\n                                            fullWidth\n                                            autoFocus\n                                            error={fullnameError}\n                                            label=\"Full Name\"\n                                            value={fullname}\n                                            required\n                                            onChange={fullnameChanged}\n                                            name=\"fullname\"\n                                            id=\"fullname-id\"\n                                            autoComplete=\"none\"\n                                        /> */}\n\n                                        <Autocomplete\n                                            fullWidth\n                                            autoComplete=\"none\"\n                                            value={patientRecord}\n                                            onChange={(event, newValue) => {\n                                                if (typeof newValue === 'string') {\n                                                    // timeout to avoid instant validation of the dialog's form.\n                                                    setTimeout(() => {\n                                                        const _nameArray = newValue.split(\" \")\n                                                        console.log(_nameArray)\n                                                        if (_nameArray.length >= 1)\n                                                        {\n                                                            setNewName(_nameArray[0])\n                                                        }\n                                                        if (_nameArray.length >=2 )\n                                                        {\n                                                            setNewSurname(_nameArray[1])\n                                                        }\n                                                        setPatientDialogOpen(true)\n                                                        // toggleOpen(true);\n                                                        // setDialogValue({\n                                                        //     title: newValue,\n                                                        //     year: '',\n                                                        // });\n                                                    });\n                                                } else if (newValue && newValue.inputValue) {\n                                                    const _nameArray = newValue.inputValue.split(\" \")\n                                                    console.log(_nameArray)\n\n                                                    if (_nameArray.length >= 1)\n                                                    {\n                                                        setNewName(_nameArray[0])\n                                                    }\n                                                    if (_nameArray.length >= 2 )\n                                                    {\n                                                        setNewSurname(_nameArray[1])\n                                                    }\n\n                                                    setPatientDialogOpen(true)\n                                                    // toggleOpen(true);\n                                                    // setDialogValue({\n                                                    //     title: newValue.inputValue,\n                                                    //     year: '',\n                                                    // });\n                                                } else {\n                                                    setPatientRecord(newValue);\n                                                }\n                                            }}\n                                            filterOptions={(options, params) => {\n                                                // const filtered = filter(options, params);\n                                                const filtered = filterOptions(options,params)\n\n                                                if (params.inputValue !== '') {\n                                                    filtered.push({\n                                                        inputValue: params.inputValue,\n                                                        fullname: `Add \"${params.inputValue}\"`,\n                                                    });\n                                                }\n\n                                                return filtered;\n                                            }}\n                                            id=\"fullname\"\n                                            options={patientList}\n                                            getOptionLabel={(option) => {\n                                                // e.g value selected with enter, right from the input\n                                                if (typeof option === 'string') {\n                                                    return option;\n                                                }\n                                                if (option.inputValue) {\n                                                    return option.inputValue;\n                                                }\n                                                return option.fullname;\n                                            }}\n                                            selectOnFocus\n                                            clearOnBlur\n                                            handleHomeEndKeys\n                                            renderOption={(option) => option.fullname}\n                                            // style={{ width: 300 }}\n                                            freeSolo\n                                            renderInput={(params) => (\n                                                <TextField {...params} onBlur={(event) => {setPatientRecord({...patientRecord, fullname:event.target.value})}} autoComplete=\"none\" autoFocus error={fullnameError} fullWidth label=\"Full Name\" required />\n                                            )}\n                                        />\n                                    </Grid>\n\n                                    <Grid item xs={12} md={6}>\n                                        <TextField\n                                            fullWidth\n                                            label=\"Patient ID\"\n                                            value={patientID}\n                                            onChange={patientIDChanged}\n                                            name=\"patientid\"\n                                            id=\"patientid-id\"\n                                            autoComplete=\"none\"\n                                        />\n                                    </Grid>\n\n\n                                    <Grid item xs={12} md={6}>\n                                        <TextField\n                                            fullWidth\n                                            label=\"Telephone\"\n                                            value={phone}\n                                            onChange={phoneChanged}\n                                            name=\"phone\"\n                                            id=\"phone-id\"\n                                            autoComplete=\"none\"\n                                        />\n                                    </Grid>\n\n                                    <Grid item xs={12} md={6}>\n                                        <TextField\n                                            fullWidth\n                                            label=\"Email\"\n                                            value={email}\n                                            onChange={emailChanged}\n                                            name=\"email\"\n                                            id=\"email-id\"\n                                            autoComplete=\"none\"\n                                        />\n                                    </Grid>\n\n                                    <Grid item xs={12}>\n                                        <DateField\n                                            error={birthDateError}\n                                            title=\"Date of Birth\"\n                                            value={birthDate}\n                                            dateChanged={birthDateChanged}\n                                        >\n\n                                        </DateField>\n                                    </Grid>\n\n                                    <Grid item xs={12} md={6}>\n                                        <TextField\n                                            fullWidth\n                                            label=\"Prescription (LEFT)\"\n                                            value={prescriptionLeft}\n                                            onChange={prescriptionLeftChanged}\n                                            name=\"pleft\"\n                                            id=\"pleft-id\"\n                                            autoComplete=\"none\"\n                                        />\n                                    </Grid>\n\n                                    <Grid item xs={12} md={6}>\n                                        <TextField\n                                            fullWidth\n                                            label=\"Prescription (RIGHT)\"\n                                            value={prescriptionRight}\n                                            onChange={prescriptionRightChanged}\n                                            name=\"pright\"\n                                            id=\"pright-id\"\n                                            autoComplete=\"none\"\n                                        />\n                                    </Grid>\n\n                                    <Grid item xs={12}>\n                                        <TextField\n                                            fullWidth\n                                            label=\"Notes\"\n                                            value={notes}\n                                            onChange={notesChanged}\n                                            name=\"notes\"\n                                            id=\"notes-id\"\n                                            autoComplete=\"none\"\n                                        />\n                                    </Grid>\n                                </Grid>\n\n                                <div\n                                    style={{\n                                        position: \"absolute\",\n                                        bottom: \"20px\",\n                                        right: \"20px\",\n                                    }}\n                                >\n                                </div>\n                            </div>\n\n                            <Backdrop className={classes.backdrop} open={saving}>\n                                <CircularProgress color=\"inherit\" />\n                            </Backdrop>\n                        </DialogContent>\n\n                        <DialogActions>\n                            <Grid\n                                container\n                                direction=\"row\"\n                                justify=\"flex-end\"\n                                alignItems=\"center\"\n                                spacing={1}\n                            >\n                                <Grid item>\n                                    <Button\n                                        onClick={handleClose}\n                                        style={{ width: \"100px\" }}\n                                        disabled={saving}\n                                    >\n                                        back\n                      </Button>\n                                </Grid>\n                                <Grid item>\n                                    <Button\n                                        onClick={saveClicked}\n                                        variant=\"contained\"\n                                        color=\"secondary\"\n                                        // style={{ width: \"100px\" }}\n                                        disabled={saving}\n                                    >\n                                        Book Appointment\n                      </Button>\n                                </Grid>\n                            </Grid>\n\n                        </DialogActions>\n\n\n                        <PatientDialog\n                            patient={null}\n                            open={patientDialogOpen}\n                            handleClose={handleClosePatientDialog}\n                            title={\"Add New Patient\"}\n                            saveButtonText={\"Save\"}\n                            name={newName}\n                            surname={newSurname}\n                        />\n\n\n                    </Dialog>\n                </React.Fragment>\n            )}\n        </React.Fragment>\n    );\n}\n","import React, { useEffect, useRef, useState } from \"react\";\nimport BookService from \"./services/BookService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {\n    Backdrop,\n    Button,\n    Checkbox,\n    CircularProgress,\n    DialogActions,\n    Divider,\n    FormControlLabel,\n    Grid,\n    InputAdornment,\n    InputLabel,\n    Link,\n    makeStyles,\n    MenuItem,\n    Select,\n    TextField,\n    Tooltip,\n} from \"@material-ui/core\";\nimport GlobalState from \"./../GlobalState\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport CreditCardIcon from \"@material-ui/icons/CreditCard\";\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\n\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Draggable from \"react-draggable\";\nimport Paper from \"@material-ui/core/Paper\";\n\nimport Alert from \"@material-ui/lab/Alert\";\n\nimport PropTypes from \"prop-types\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport Box from \"@material-ui/core/Box\";\n\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport { corporates } from \"./Corporates\";\nimport NumberFormat from \"react-number-format\";\n\nimport AccessAlarmsIcon from '@material-ui/icons/AccessAlarms';\nimport DateField from \"./DateField\";\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    title: {\n        marginTop: theme.spacing(0),\n        marginBottom: theme.spacing(1),\n    },\n\n    refreshButton: {\n        marginLeft: theme.spacing(2),\n    },\n\n    checkIcon: {\n        color: \"green\",\n    },\n\n    closeIcon: {\n        color: \"red\",\n    },\n\n    RefLink: {\n        cursor: \"pointer\",\n    },\n\n    BookedLabel: {\n        backgroundColor: \"#606060\",\n        color: \"#fff\",\n        paddingRight: \"10px\",\n        paddingLeft: \"10px\",\n    },\n\n    PatientAttendedLabel: {\n        backgroundColor: \"#0066aa\",\n        color: \"#fff\",\n        paddingRight: \"15px\",\n        paddingLeft: \"10px\",\n    },\n\n    SampleTakenLabel: {\n        backgroundColor: \"#0066cc\",\n        color: \"#fff\",\n        paddingRight: \"40px\",\n        paddingLeft: \"10px\",\n    },\n\n    ReportSentLabel: {\n        backgroundColor: \"#009900\",\n        color: \"#fff\",\n        paddingRight: \"90px\",\n        paddingLeft: \"10px\",\n    },\n\n    ReportCertSentLabel: {\n        backgroundColor: \"#009900\",\n        color: \"#fff\",\n        paddingRight: \"68px\",\n        paddingLeft: \"10px\",\n    },\n\n    archiveButton: {},\n\n    smartMatchButton: {\n        backgroundColor: \"#2f942e\",\n        \"&:hover\": {\n            background: \"green\",\n            color: \"#fff\",\n        },\n        textDecoration: \"none !important\",\n        marginRight: \"10px\",\n        // padding: \"10px\"\n    },\n\n    infoTitle: {\n        fontWeight: \"400\",\n    },\n\n    infoData: {\n        paddingLeft: \"10px\",\n        fontWeight: \"800\",\n    },\n\n    matchButton: {\n        marginTop: \"30px\",\n        marginBottom: \"20px\",\n        backgroundColor: \"#2f942e\",\n        \"&:hover\": {\n            background: \"green\",\n            color: \"#fff\",\n        },\n        textDecoration: \"none !important\",\n        padding: \"10px\",\n        paddingLeft: \"50px\",\n        paddingRight: \"50px\",\n    },\n\n    resendButton: {\n        marginTop: \"5px\",\n        marginBottom: \"5px\",\n        backgroundColor: \"#2f942e\",\n        \"&:hover\": {\n            background: \"green\",\n            color: \"#fff\",\n        },\n        textDecoration: \"none !important\",\n        padding: \"10px\",\n        paddingLeft: \"50px\",\n        paddingRight: \"50px\",\n    },\n\n    resendFilesButton: {\n        marginTop: \"5px\",\n        marginBottom: \"5px\",\n        backgroundColor: \"#3792ad\",\n        \"&:hover\": {\n            background: \"#2f798f\",\n            color: \"#fff\",\n        },\n        textDecoration: \"none !important\",\n        padding: \"10px\",\n        paddingLeft: \"50px\",\n        paddingRight: \"50px\",\n    },\n\n    cancelButton: {\n        marginBottom: \"10px\",\n        textDecoration: \"none !important\",\n        padding: \"10px\",\n        paddingLeft: \"90px\",\n        paddingRight: \"90px\",\n    },\n\n    backdrop: {\n        zIndex: theme.zIndex.drawer + 5,\n        color: \"#fff\",\n    },\n\n    timeControl: {\n        marginTop: \"20px\",\n    }\n}));\n\n\nfunction PaperComponent(props) {\n    return (\n        <Draggable\n            handle=\"#draggable-dialog-title\"\n            cancel={'[class*=\"MuiDialogContent-root\"]'}\n        >\n            <Paper {...props} />\n        </Draggable>\n    );\n}\n\nconst times = [\n    '08:00 AM',\n    '08:15 AM',\n    '08:30 AM', \n    '08:45 AM',\n    '09:00 AM',\n    '09:15 AM', \n    '09:30 AM',\n    '09:45 AM',\n    '10:00 AM',\n    '10:15 AM',\n    '10:30 AM',\n    '10:45 AM',\n    '11:00 AM',\n    '11:15 AM',\n    '11:30 AM',\n    '11:45 AM',\n    '12:00 PM',\n    '12:15 PM',\n    '12:30 PM',\n    '12:45 PM',\n    '01:00 PM',\n    '01:15 PM',\n    '01:30 PM',\n    '01:45 PM',\n    '02:00 PM',\n    '02:15 PM',\n    '02:30 PM',\n    '02:45 PM',\n    '03:00 PM',\n    '03:15 PM',\n    '03:30 PM',\n    '03:45 PM',\n    '04:00 PM',\n    '04:15 PM',\n    '04:30 PM',\n    '04:45 PM',\n    '05:00 PM',\n    '05:15 PM',\n    '05:30 PM',\n    '05:45 PM',\n    '06:00 PM',\n    '06:15 PM',\n    '06:30 PM',\n    '06:45 PM',\n    '07:00 PM',\n    '07:15 PM',\n    '07:30 PM',\n    '07:45 PM'\n];\n\nexport default function DateDialog(props) {\n    const classes = useStyles();\n\n    const [state, setState] = React.useContext(GlobalState);\n\n    const [date, setDate] = React.useState(\"\")\n    const [time, setTime] = React.useState(\"\")\n\n    const [dateError, setDateError] = React.useState(false)\n\n\n    const dateChanged = (value) => {\n        setDate(value)\n        setDateError(false)\n    }\n\n    const timeChanged = (event) => {\n        setTime(event.target.value)\n    }\n\n    useEffect(() => {\n        setDate(props.date)\n        setTime(props.time)\n\n    }, [props.date, props.time, props.open])\n\n\n\n    const handleClose = () => {\n\n        setDateError(false)\n        props.handleClose();\n    };\n\n    const okClicked = () => {\n        if (!date || date.length < 10) {\n            setDateError(true)\n            return\n        }\n\n        props.handleOK(date, time)\n    }\n\n\n    return (\n        <React.Fragment>\n            <React.Fragment>\n                <Dialog\n                    maxWidth=\"sm\"\n                    open={props.open}\n                    onClose={handleClose}\n                    PaperComponent={PaperComponent}\n                    aria-labelledby=\"form-dialog-title\"\n                >\n                    <DialogTitle id=\"draggable-dialog-title\">\n                        <Grid\n                            container\n                            spacing={2}\n                            direction=\"row\"\n                            justify=\"center\"\n                            alignItems=\"center\"\n                        >\n                            <Grid item>\n                                <AccessAlarmsIcon\n                                    style={{ color: \"#03b5f2\", fontSize: \"3rem\" }}\n                                />\n                            </Grid>\n\n                            <Grid item>\n                                <div\n                                    style={{\n                                        color: \"#03b5f2\",\n                                        paddingBottom: \"10px\",\n                                        fontWeight: \"800\",\n                                    }}\n                                >\n                                    {\" \"}\n                    Change Date and Time{\" \"}\n                                </div>\n                            </Grid>\n                        </Grid>\n\n                        <Divider />\n                    </DialogTitle>\n                    <DialogContent>\n                        <Grid container spacing={1}>\n\n                            <Grid item xs={8}>\n                                <DateField\n                                    error={dateError}\n                                    title=\"Appointment Date\"\n                                    value={date}\n                                    dateChanged={dateChanged}\n                                >\n\n                                </DateField>\n                            </Grid>\n\n                            <Grid item xs={4}>\n                                <div style={{ position: \"relative\", border: `1px solid ${'#ddd'}`, borderRadius: \"10px\", padding: \"20px\", paddingBottom: \"20px\", marginTop: \"20px\" }}>\n\n                                    <div style={{ position: \"absolute\", top: \"-15px\", left: \"15px\", backgroundColor: \"#fff\", color: `${'#555'}`, padding: \"5px\", paddingLeft: \"10px\", paddingRight: \"10px\" }}>\n                                        Appointment Time\n                                    </div>\n\n\n\n                                    <Grid\n                                        container\n                                        direction=\"row\"\n                                        justify=\"flex-start\"\n                                        alignItems=\"flex-start\"\n                                        spacing={2}\n                                    >\n\n\n                                        <Grid item xs={12}>\n                                            <FormControl fullWidth>\n                                                <InputLabel id=\"time-label\">Time</InputLabel>\n                                                <Select\n\n                                                    labelId=\"time-label\"\n                                                    id=\"time-select\"\n                                                    value={time}\n                                                    onChange={timeChanged}\n                                                >\n                                                    {times.map(item => (\n\n                                                        <MenuItem value={item}>{item}</MenuItem>\n\n                                                    ))}\n                                                </Select>\n                                            </FormControl>\n\n\n                                        </Grid>\n\n\n                                    </Grid>\n\n                                </div>\n\n\n                                {/* <FormControl className={classes.timeControl}>\n                                    <InputLabel id=\"demo-simple-select-label\"> Time</InputLabel>\n                                    <Select\n                                        labelId=\"demo-simple-select-label\"\n                                        id=\"demo-simple-select\"\n                                        value={time}\n                                        onChange={timeChanged}\n                                    >\n                                        {times.map(item => (\n\n                                            <MenuItem value={item}>{item}</MenuItem>\n\n                                        ))}\n                                    </Select>\n                                </FormControl> */}\n\n                            </Grid>\n\n\n                        </Grid>\n\n                    </DialogContent>\n\n                    <DialogActions>\n                        <Button onClick={handleClose}>\n                            cancel\n                    </Button>\n                        <Button color=\"primary\" onClick={okClicked} variant=\"contained\" style={{ width: \"100px\" }}>\n                            OK\n                    </Button>\n                    </DialogActions>\n                </Dialog>\n            </React.Fragment>\n        </React.Fragment>\n    );\n}\n","import React, { useEffect, useRef, useState } from \"react\";\nimport BookService from \"./services/BookService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {\n  Backdrop,\n  Button,\n  Checkbox,\n  CircularProgress,\n  Divider,\n  FormControlLabel,\n  Grid,\n  InputAdornment,\n  InputLabel,\n  Link,\n  makeStyles,\n  MenuItem,\n  Select,\n  Switch,\n  TextField,\n  Tooltip,\n} from \"@material-ui/core\";\nimport GlobalState from \"../GlobalState\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport CreditCardIcon from \"@material-ui/icons/CreditCard\";\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\n\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Draggable from \"react-draggable\";\nimport Paper from \"@material-ui/core/Paper\";\n\nimport Alert from \"@material-ui/lab/Alert\";\n\nimport PropTypes from \"prop-types\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport Box from \"@material-ui/core/Box\";\n\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport { corporates } from \"./Corporates\";\nimport NumberFormat from \"react-number-format\";\n\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { validate } from \"email-validator\";\nimport DateRangeIcon from \"@material-ui/icons/DateRange\";\nimport { CalendarColors } from \"./calendar-admin/colors\";\n\nvar interval;\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    marginTop: theme.spacing(0),\n    marginBottom: theme.spacing(1),\n  },\n\n  refreshButton: {\n    marginLeft: theme.spacing(2),\n  },\n\n  checkIcon: {\n    color: \"green\",\n  },\n\n  closeIcon: {\n    color: \"red\",\n  },\n\n  RefLink: {\n    cursor: \"pointer\",\n  },\n\n  BookedLabel: {\n    backgroundColor: \"#606060\",\n    color: \"#fff\",\n    paddingRight: \"10px\",\n    paddingLeft: \"10px\",\n  },\n\n  PatientAttendedLabel: {\n    backgroundColor: \"#0066aa\",\n    color: \"#fff\",\n    paddingRight: \"15px\",\n    paddingLeft: \"10px\",\n  },\n\n  SampleTakenLabel: {\n    backgroundColor: \"#0066cc\",\n    color: \"#fff\",\n    paddingRight: \"40px\",\n    paddingLeft: \"10px\",\n  },\n\n  ReportSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"90px\",\n    paddingLeft: \"10px\",\n  },\n\n  ReportCertSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"68px\",\n    paddingLeft: \"10px\",\n  },\n\n  archiveButton: {},\n\n  smartMatchButton: {\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    marginRight: \"10px\",\n    // padding: \"10px\"\n  },\n\n  infoTitle: {\n    fontWeight: \"400\",\n  },\n\n  infoData: {\n    paddingLeft: \"10px\",\n    fontWeight: \"800\",\n  },\n\n  matchButton: {\n    marginTop: \"30px\",\n    marginBottom: \"20px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  resendButton: {\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  resendFilesButton: {\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n    backgroundColor: \"#3792ad\",\n    \"&:hover\": {\n      background: \"#2f798f\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  cancelButton: {\n    marginBottom: \"10px\",\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"90px\",\n    paddingRight: \"90px\",\n  },\n\n  CalendarIcon: {\n    color: theme.palette.primary.main,\n  },\n\n  DateTimeLabel: {\n    fontWeight: \"600\",\n    fontSize: \"1.2rem\",\n    color: theme.palette.primary.main,\n  },\n\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 5,\n    color: \"#fff\",\n  },\n\n  PriceLabelPaid:{\n    color: theme.palette.primary.main,\n    fontWeight: \"600\"\n  },\n\n  PriceLabelNotPaid:{\n    color: theme.palette.secondary.main,\n    fontWeight: \"600\"\n  },\n\n  BoxDisabled: {\n    width : \"100%\",\n    padding: \"10px\",\n    borderRadius: \"8px\",\n    border: \"1px solid\",\n    fontSize: \"1.2rem\",\n    fontWeight: \"500\",\n    textAlign: \"center\",\n    borderColor: \"#ddd\",\n    cursor: \"not-allowed\",\n    color: \"#ddd\",\n    transition: \"all 0.2s ease\",\n  },\n\n  BoxVC: {\n    width : \"100%\",\n    padding: \"10px\",\n    borderRadius: \"8px\",\n    border: \"1px solid\",\n    fontSize: \"1.2rem\",\n    fontWeight: \"500\",\n    textAlign: \"center\",\n    cursor: \"pointer\",\n    borderColor: CalendarColors.VC_COLOR,\n    color: CalendarColors.VC_COLOR,\n    transition: \"all 0.2s ease\",\n    \"&:hover\": {\n      backgroundColor: CalendarColors.VC_COLOR,\n      color: \"#fff\"\n    }\n  \n  },\n\n  BoxF2F: {\n    width : \"100%\",\n    padding: \"10px\",\n    borderRadius: \"8px\",\n    border: \"1px solid\",\n    fontSize: \"1.2rem\",\n    fontWeight: \"500\",\n    textAlign: \"center\",\n    cursor: \"pointer\",\n    borderColor: CalendarColors.F2F_COLOR,\n    color: CalendarColors.F2F_COLOR,\n    transition: \"all 0.2s ease\",\n    \"&:hover\": {\n      backgroundColor: CalendarColors.F2F_COLOR,\n      color: \"#fff\"\n    }\n  \n  },\n\n  BoxLaser: {\n    width : \"100%\",\n    padding: \"10px\",\n    borderRadius: \"8px\",\n    border: \"1px solid\",\n    fontSize: \"1.2rem\",\n    fontWeight: \"500\",\n    textAlign: \"center\",\n    cursor: \"pointer\",\n    borderColor: CalendarColors.LASER_COLOR,\n    color: CalendarColors.LASER_COLOR,\n    transition: \"all 0.2s ease\",\n    \"&:hover\": {\n      backgroundColor: CalendarColors.LASER_COLOR,\n      color: \"#fff\"\n    }\n  \n  },\n\n  BoxCataract: {\n    width : \"100%\",\n    padding: \"10px\",\n    borderRadius: \"8px\",\n    border: \"1px solid\",\n    fontSize: \"1.2rem\",\n    fontWeight: \"500\",\n    textAlign: \"center\",\n    cursor: \"pointer\",\n    borderColor: CalendarColors.CATARACT_COLOR,\n    color: CalendarColors.CATARACT_COLOR,\n    transition: \"all 0.2s ease\",\n    \"&:hover\": {\n      backgroundColor: CalendarColors.CATARACT_COLOR,\n      color: \"#fff\"\n    }\n  \n  },\n\n  BoxPostOP: {\n    width : \"100%\",\n    padding: \"10px\",\n    borderRadius: \"8px\",\n    border: \"1px solid\",\n    fontSize: \"1.2rem\",\n    fontWeight: \"500\",\n    textAlign: \"center\",\n    cursor: \"pointer\",\n    borderColor: CalendarColors.POSTOP_COLOR,\n    color: CalendarColors.POSTOP_COLOR,\n    transition: \"all 0.2s ease\",\n    \"&:hover\": {\n      backgroundColor: CalendarColors.POSTOP_COLOR,\n      color: \"#fff\"\n    }\n  \n  },\n\n  BoxOptometry: {\n    width : \"100%\",\n    padding: \"10px\",\n    borderRadius: \"8px\",\n    border: \"1px solid\",\n    fontSize: \"1.2rem\",\n    fontWeight: \"500\",\n    textAlign: \"center\",\n    cursor: \"pointer\",\n    borderColor: CalendarColors.OPOTOMETRY_COLOR,\n    color: CalendarColors.OPOTOMETRY_COLOR,\n    transition: \"all 0.2s ease\",\n    \"&:hover\": {\n      backgroundColor: CalendarColors.OPOTOMETRY_COLOR,\n      color: \"#fff\"\n    }\n  \n  },\n\n\n\n\n\n\n\n\n\n\n  BoxGynae: {\n    width : \"100%\",\n    padding: \"10px\",\n    borderRadius: \"8px\",\n    border: \"1px solid\",\n    fontSize: \"1.2rem\",\n    fontWeight: \"500\",\n    textAlign: \"center\",\n    cursor: \"pointer\",\n    borderColor: CalendarColors.GYNAE_COLOR,\n    color: CalendarColors.GYNAE_COLOR,\n    transition: \"all 0.2s ease\",\n    \"&:hover\": {\n      backgroundColor: CalendarColors.GYNAE_COLOR,\n      color: \"#fff\"\n    }\n  \n  },\n\n  BoxGP: {\n    width : \"100%\",\n    padding: \"10px\",\n    borderRadius: \"8px\",\n    border: \"1px solid\",\n    fontSize: \"1.2rem\",\n    fontWeight: \"500\",\n    textAlign: \"center\",\n    cursor: \"pointer\",\n    borderColor: CalendarColors.GP_COLOR,\n    color: CalendarColors.GP_COLOR,\n    transition: \"all 0.2s ease\",\n    \"&:hover\": {\n      backgroundColor: CalendarColors.GP_COLOR,\n      color: \"#fff\"\n    }\n  },\n\n  BoxSTD: {\n    width : \"100%\",\n    padding: \"10px\",\n    borderRadius: \"8px\",\n    border: \"1px solid\",\n    fontSize: \"1.2rem\",\n    fontWeight: \"500\",\n    textAlign: \"center\",\n    cursor: \"pointer\",\n    borderColor: CalendarColors.STD_COLOR,\n    color: CalendarColors.STD_COLOR,\n    transition: \"all 0.2s ease\",\n    \"&:hover\": {\n      backgroundColor: CalendarColors.STD_COLOR,\n      color: \"#fff\"\n    }\n  },\n\n\n\n}));\n\nconst Packages = [\n  { packageName: \"Consultation with Consultant Gynaecologist\" },\n  { packageName: `Coil Fitting/Coil Removal` },\n  { packageName: `Well Woman Check` },\n  { packageName: `Sexual Health Screening` },\n  { packageName: `Pre-pregnancy/Fertility check` },\n  { packageName: `Gynaecological Ultrasound` },\n  { packageName: `HPV Vaccination` },\n  { packageName: `Cervical / Pap Smear` },\n  { packageName: `HPV Treatment / Wart Cryo-Therapy` },\n];\n\nfunction NumberFormatCustom(props) {\n  const { inputRef, onChange, ...other } = props;\n\n  return (\n    <NumberFormat\n      {...other}\n      getInputRef={inputRef}\n      onValueChange={(values) => {\n        onChange({\n          target: {\n            name: props.name,\n            value: values.value,\n          },\n        });\n      }}\n      thousandSeparator\n      isNumericString\n      prefix=\"\"\n    />\n  );\n}\n\nNumberFormatCustom.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nconst BorderLinearProgress = withStyles((theme) => ({\n  root: {\n    height: 10,\n    borderRadius: 5,\n  },\n  colorPrimary: {\n    backgroundColor: \"#cedbce\", //theme.palette.grey[theme.palette.type === 'light' ? 200 : 700],\n  },\n  bar: {\n    borderRadius: 5,\n    backgroundColor: \"#2f942e\",\n  },\n}))(LinearProgress);\nfunction LinearProgressWithLabel(props) {\n  return (\n    <Box display=\"flex\" alignItems=\"center\">\n      <Box width=\"100%\" mr={1}>\n        <BorderLinearProgress variant=\"determinate\" {...props} />\n      </Box>\n      <Box minWidth={35}>\n        <Typography\n          style={{ fontWeight: \"800\", color: \"#5e855e\" }}\n          variant=\"body2\"\n          color=\"textSecondary\"\n        >{`${Math.round(props.value)}%`}</Typography>\n      </Box>\n    </Box>\n  );\n}\n\nLinearProgressWithLabel.propTypes = {\n  /**\n   * The value of the progress indicator for the determinate and buffer variants.\n   * Value between 0 and 100.\n   */\n  value: PropTypes.number.isRequired,\n};\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable\n      handle=\"#draggable-dialog-title\"\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\n    >\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nexport default function ChooseBookingDialog(props) {\n  const classes = useStyles();\n\n  const [state, setState] = React.useContext(GlobalState);\n\n  const handleClose = () => {    \n    props.handleClose();\n  };\n\n\n  const timeDisabled = () =>\n  {\n    return props.time.indexOf(':15') > 0 || props.time.indexOf(':45') > 0 || props.time.indexOf('09') >= 0 \n  }\n\n  const clinicClicked = (clinic) =>\n  {\n    props.clinicClicked(clinic)\n  }\n\n  return (\n    <React.Fragment>\n        <React.Fragment>\n          <Dialog\n            maxWidth=\"xs\"\n            open={props.open}\n            onClose={handleClose}\n            PaperComponent={PaperComponent}\n            aria-labelledby=\"form-dialog-title\"\n          >\n            <DialogTitle id=\"draggable-dialog-title\">\n              <Grid\n                container\n                spacing={2}\n                direction=\"row\"\n                justify=\"center\"\n                alignItems=\"center\"\n              >\n                {/* <Grid item>\n                  <AddIcon style={{ color: \"#f50057\", fontSize: \"3rem\" }} />\n                </Grid> */}\n\n                <Grid item>\n                  <div\n                    style={{\n                      color: \"#f50057\",\n                      paddingBottom: \"10px\",\n                      fontWeight: \"800\",\n                    }}\n                  >\n                    {\" \"}\n                    Change Clinic{\" \"}\n                  </div>\n                </Grid>\n              </Grid>\n\n              <Divider />\n            </DialogTitle>\n            <DialogContent>\n              <div\n                style={{\n                  height: \"420px\",\n                }}\n              >\n                <Grid\n                  container\n                  direction=\"row\"\n                  justify=\"stretch\"\n                  spacing={2}\n                  alignItems=\"center\"\n                >\n\n\n                  <Grid item xs={12} style={{marginTop:\"0px\"}}>\n                    <div className={classes.BoxVC} onClick={() => clinicClicked(\"Virtual Consultation\")}>\n                      Virtual Consultation\n                    </div>\n                  </Grid>\n                  <Grid item xs={12}>\n                    <div className={classes.BoxF2F} onClick={() => clinicClicked(\"F2F Clinic\")}>\n                      F2F Clinic\n                    </div>\n                  </Grid>\n                  <Grid item xs={12}>\n                    <div className={classes.BoxLaser} onClick={() => clinicClicked(\"Laser Theatre\")}>\n                      Laser Theatre\n                    </div>\n                  </Grid>\n                  <Grid item xs={12}>\n                    <div className={classes.BoxCataract} onClick={() => clinicClicked(\"Lens Theatre\")}>\n                      Lens Theatre\n                    </div>\n                  </Grid>\n                  <Grid item xs={12}>\n                    <div className={classes.BoxPostOP} onClick={() => clinicClicked(\"Post OP\")}>\n                      Post OP\n                    </div>\n                  </Grid>\n                  <Grid item xs={12}>\n                    <div className={classes.BoxOptometry} onClick={() => clinicClicked(\"Optometry\")}>\n                      Optometry\n                    </div>\n                  </Grid>\n\n\n                </Grid>\n\n                <div\n                  style={{\n                    position: \"absolute\",\n                    bottom: \"0px\",\n                    right: \"5px\",\n                  }}\n                >\n                  <Grid\n                    container\n                    direction=\"row\"\n                    justify=\"flex-end\"\n                    alignItems=\"center\"\n                    spacing={1}\n                  >\n                    <Grid item>\n                      <Button\n                        onClick={handleClose}\n                        style={{ width: \"100px\" }}\n                      >\n                        close\n                      </Button>\n                    </Grid>\n                   \n                  </Grid>\n                </div>\n              </div>\n\n            </DialogContent>\n          </Dialog>\n        </React.Fragment>\n    </React.Fragment>\n  );\n}\n","import React, { useEffect, useRef, useState } from \"react\";\nimport BookService from \"./services/BookService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {\n    Backdrop,\n    Button,\n    Checkbox,\n    CircularProgress,\n    DialogActions,\n    DialogContentText,\n    Divider,\n    FormControlLabel,\n    Grid,\n    IconButton,\n    InputAdornment,\n    InputLabel,\n    Link,\n    makeStyles,\n    MenuItem,\n    Select,\n    Switch,\n    TextField,\n    Tooltip,\n} from \"@material-ui/core\";\nimport GlobalState from \"../GlobalState\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport CreditCardIcon from \"@material-ui/icons/CreditCard\";\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\n\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Draggable from \"react-draggable\";\nimport Paper from \"@material-ui/core/Paper\";\n\nimport Alert from \"@material-ui/lab/Alert\";\n\nimport PropTypes from \"prop-types\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport Box from \"@material-ui/core/Box\";\n\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport { corporates } from \"./Corporates\";\nimport NumberFormat from \"react-number-format\";\n\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { validate } from \"email-validator\";\nimport DateRangeIcon from \"@material-ui/icons/DateRange\";\nimport { CalendarColors } from \"./calendar-admin/colors\";\nimport DateField from \"./DateField\";\n\nimport EditIcon from '@material-ui/icons/Edit';\nimport DateDialog from \"./DateDialog\";\nimport ChooseClinicDialog from \"./ChooseClinicDialog\"\nimport PatientDialog from \"./PatientDialog\";\nimport PatientService from \"./services/PatientService\";\nimport SearchIcon from '@material-ui/icons/Search';\n\n\nvar interval;\n\nconst useStyles = makeStyles((theme) => ({\n    title: {\n        marginTop: theme.spacing(0),\n        marginBottom: theme.spacing(1),\n    },\n\n    refreshButton: {\n        marginLeft: theme.spacing(2),\n    },\n\n    checkIcon: {\n        color: \"green\",\n    },\n\n    closeIcon: {\n        color: \"red\",\n    },\n\n    RefLink: {\n        cursor: \"pointer\",\n    },\n\n    BookedLabel: {\n        backgroundColor: \"#606060\",\n        color: \"#fff\",\n        paddingRight: \"10px\",\n        paddingLeft: \"10px\",\n    },\n\n    PatientAttendedLabel: {\n        backgroundColor: \"#0066aa\",\n        color: \"#fff\",\n        paddingRight: \"15px\",\n        paddingLeft: \"10px\",\n    },\n\n    SampleTakenLabel: {\n        backgroundColor: \"#0066cc\",\n        color: \"#fff\",\n        paddingRight: \"40px\",\n        paddingLeft: \"10px\",\n    },\n\n    ReportSentLabel: {\n        backgroundColor: \"#009900\",\n        color: \"#fff\",\n        paddingRight: \"90px\",\n        paddingLeft: \"10px\",\n    },\n\n    ReportCertSentLabel: {\n        backgroundColor: \"#009900\",\n        color: \"#fff\",\n        paddingRight: \"68px\",\n        paddingLeft: \"10px\",\n    },\n\n    archiveButton: {},\n\n    smartMatchButton: {\n        backgroundColor: \"#2f942e\",\n        \"&:hover\": {\n            background: \"green\",\n            color: \"#fff\",\n        },\n        textDecoration: \"none !important\",\n        marginRight: \"10px\",\n        // padding: \"10px\"\n    },\n\n    infoTitle: {\n        fontWeight: \"400\",\n    },\n\n    infoData: {\n        paddingLeft: \"10px\",\n        fontWeight: \"800\",\n    },\n\n    matchButton: {\n        marginTop: \"30px\",\n        marginBottom: \"20px\",\n        backgroundColor: \"#2f942e\",\n        \"&:hover\": {\n            background: \"green\",\n            color: \"#fff\",\n        },\n        textDecoration: \"none !important\",\n        padding: \"10px\",\n        paddingLeft: \"50px\",\n        paddingRight: \"50px\",\n    },\n\n    resendButton: {\n        marginTop: \"5px\",\n        marginBottom: \"5px\",\n        backgroundColor: \"#2f942e\",\n        \"&:hover\": {\n            background: \"green\",\n            color: \"#fff\",\n        },\n        textDecoration: \"none !important\",\n        padding: \"10px\",\n        paddingLeft: \"50px\",\n        paddingRight: \"50px\",\n    },\n\n    resendFilesButton: {\n        marginTop: \"5px\",\n        marginBottom: \"5px\",\n        backgroundColor: \"#3792ad\",\n        \"&:hover\": {\n            background: \"#2f798f\",\n            color: \"#fff\",\n        },\n        textDecoration: \"none !important\",\n        padding: \"10px\",\n        paddingLeft: \"50px\",\n        paddingRight: \"50px\",\n    },\n\n    cancelButton: {\n        marginBottom: \"10px\",\n        textDecoration: \"none !important\",\n        padding: \"10px\",\n        paddingLeft: \"90px\",\n        paddingRight: \"90px\",\n    },\n\n    CalendarIcon: {\n        color: theme.palette.primary.main,\n    },\n\n    DateTimeLabel: {\n        fontWeight: \"600\",\n        fontSize: \"1.2rem\",\n        color: theme.palette.primary.main,\n    },\n\n    backdrop: {\n        zIndex: theme.zIndex.drawer + 5,\n        color: \"#fff\",\n    },\n\n    PriceLabelPaid: {\n        color: theme.palette.primary.main,\n        fontWeight: \"600\"\n    },\n\n    PriceLabelNotPaid: {\n        color: theme.palette.secondary.main,\n        fontWeight: \"600\"\n    },\n\n    SearchIcon:{\n        fontSize: \"2rem\",\n        color: theme.palette.primary.main,\n    }\n\n\n}));\n\nconst Packages = [\n    { packageName: \"Consultation with Consultant Gynaecologist\" },\n    { packageName: `Coil Fitting/Coil Removal` },\n    { packageName: `Well Woman Check` },\n    { packageName: `Sexual Health Screening` },\n    { packageName: `Pre-pregnancy/Fertility check` },\n    { packageName: `Gynaecological Ultrasound` },\n    { packageName: `HPV Vaccination` },\n    { packageName: `Cervical / Pap Smear` },\n    { packageName: `HPV Treatment / Wart Cryo-Therapy` },\n];\n\nfunction NumberFormatCustom(props) {\n    const { inputRef, onChange, ...other } = props;\n\n    return (\n        <NumberFormat\n            {...other}\n            getInputRef={inputRef}\n            onValueChange={(values) => {\n                onChange({\n                    target: {\n                        name: props.name,\n                        value: values.value,\n                    },\n                });\n            }}\n            thousandSeparator\n            isNumericString\n            prefix=\"\"\n        />\n    );\n}\n\nNumberFormatCustom.propTypes = {\n    inputRef: PropTypes.func.isRequired,\n    name: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired,\n};\n\nconst BorderLinearProgress = withStyles((theme) => ({\n    root: {\n        height: 10,\n        borderRadius: 5,\n    },\n    colorPrimary: {\n        backgroundColor: \"#cedbce\", //theme.palette.grey[theme.palette.type === 'light' ? 200 : 700],\n    },\n    bar: {\n        borderRadius: 5,\n        backgroundColor: \"#2f942e\",\n    },\n}))(LinearProgress);\nfunction LinearProgressWithLabel(props) {\n    return (\n        <Box display=\"flex\" alignItems=\"center\">\n            <Box width=\"100%\" mr={1}>\n                <BorderLinearProgress variant=\"determinate\" {...props} />\n            </Box>\n            <Box minWidth={35}>\n                <Typography\n                    style={{ fontWeight: \"800\", color: \"#5e855e\" }}\n                    variant=\"body2\"\n                    color=\"textSecondary\"\n                >{`${Math.round(props.value)}%`}</Typography>\n            </Box>\n        </Box>\n    );\n}\n\nLinearProgressWithLabel.propTypes = {\n    /**\n     * The value of the progress indicator for the determinate and buffer variants.\n     * Value between 0 and 100.\n     */\n    value: PropTypes.number.isRequired,\n};\n\nfunction PaperComponent(props) {\n    return (\n        <Draggable\n            handle=\"#draggable-dialog-title\"\n            cancel={'[class*=\"MuiDialogContent-root\"]'}\n        >\n            <Paper {...props} />\n        </Draggable>\n    );\n}\n\nexport default function EditOVBookingDialog(props) {\n    const classes = useStyles();\n\n    const [state, setState] = React.useContext(GlobalState);\n    const [saving, setSaving] = useState(false);\n\n    const [openClinicDialog, setOpenClinicDialog] = React.useState(false)\n\n    const [clinic, setClinic] = React.useState(\"\")\n\n    const [fullname, setFullname] = React.useState(\"\");\n    const [fullnameError, setFullnameError] = React.useState(false);\n\n    const [phone, setPhone] = React.useState(\"\");\n    const [email, setEmail] = React.useState(\"\");\n    const [notes, setNotes] = React.useState(\"\");\n\n    const [patientID, setPatientID] = React.useState(\"\");\n    const [prescriptionLeft, setPrescriptionLeft] = React.useState(\"\");\n    const [prescriptionRight, setPrescriptionRight] = React.useState(\"\");\n\n\n    const [birthDate, setBirthDate] = React.useState(\"\");\n    const [birthDateError, setBirthDateError] = React.useState(false);\n\n    const [openDeleteDialog, setOpenDeleteDialog] = React.useState(false)\n\n    const [openDateDialog, setOpenDateDialog] = React.useState(false)\n\n    const [date, setDate] = React.useState(\"\")\n    const [time, setTime] = React.useState(\"\")\n\n    const [selectedPatient, setSelectedPatient] = React.useState(null)\n    const [patientDialogOpen, setPatientDialogOpen] = React.useState(false)\n\n    const handleClosePatientDialog = () => {\n      setPatientDialogOpen(false)\n    }\n  \n\n    const patientIDChanged = (event) => {\n        setPatientID(event.target.value);\n    };\n\n    const prescriptionLeftChanged = (event) => {\n        setPrescriptionLeft(event.target.value);\n    };\n\n    const prescriptionRightChanged = (event) => {\n        setPrescriptionRight(event.target.value);\n    };\n\n\n    const handleCloseDeleteDialog = () => {\n        setOpenDeleteDialog(false)\n    }\n\n    const handleSaveDateDialog = (date, time) => {\n        setDate(date)\n        setTime(time)\n        setOpenDateDialog(false)\n    }\n\n    const handleCloseDateDialog = () => {\n        setOpenDateDialog(false)\n    }\n\n\n    React.useEffect(() => {\n        if (props.booking && props.open) {\n            setFullname(props.booking.fullname)\n            setPhone(props.booking.phone)\n            setEmail(props.booking.email)\n            setBirthDate(props.booking.birthDate)\n            setNotes(props.booking.notes)\n            setDate(props.date)\n            setTime(props.time)\n            setPatientID(props.booking.patientID)\n            setPrescriptionLeft(props.booking.prescriptionLeft)\n            setPrescriptionRight(props.booking.prescriptionRight)\n\n            setClinic(props.clinic)\n\n            loadPatient()\n\n        }\n\n    }, [props.open, props.booking])\n\n    const loadPatient = async () =>\n    {\n        try{\n            setSelectedPatient(null)\n            if (props.booking.patientID && props.booking.patientID.length > 0)\n            {\n                const res = await PatientService.getPatientByPatientId(props.booking.patientID)\n                if (res && res.data)\n                {\n                    const patiant = res.data\n                    setSelectedPatient(patiant)\n                }\n            }\n        }\n        catch(err)\n        {\n            console.error(err)\n        }\n    }\n\n\n    const birthDateChanged = (dateStr) => {\n        setBirthDate(dateStr);\n    }\n\n\n\n\n    const fullnameChanged = (event) => {\n        setFullname(event.target.value);\n        setFullnameError(false);\n    };\n\n    const phoneChanged = (event) => {\n        setPhone(event.target.value);\n    };\n\n    const emailChanged = (event) => {\n        setEmail(event.target.value);\n    };\n\n\n    const notesChanged = (event) => {\n        setNotes(event.target.value);\n    };\n\n    const handleClose = () => {\n        if (saving) return;\n\n        setFullname(\"\");\n        setFullnameError(false);\n        setBirthDateError(false)\n        setPhone(\"\");\n        setEmail(\"\");\n        setNotes(\"\");\n        setBirthDate(\"\")\n        setPatientID(\"\")\n        setPrescriptionLeft(\"\")\n        setPrescriptionRight(\"\")\n        setClinic(\"\")\n        setSelectedPatient(null)\n\n\n        props.handleClose();\n        setSaving(false);\n    };\n\n    const validateBooking = () => {\n        let error = false;\n        if (!fullname || fullname.trim().length < 1) {\n            setFullnameError(true);\n            error = true;\n        }\n\n        if (birthDate && birthDate.length >= 1 && birthDate.length < 10) {\n            setBirthDateError(true);\n            error = true;\n        }\n\n        return !error;\n    };\n\n    const deleteClicked = async () => {\n\n        setOpenDeleteDialog(false)\n\n        setSaving(true)\n        try {\n            await BookService.deleteBooking(props.booking._id)\n            setSaving(false)\n            setState((state) => ({\n                ...state,\n                bookingDialogDataChanged: !state.bookingDialogDataChanged\n                    ? true\n                    : false,\n            }));\n            handleClose();\n        }\n        catch (err) {\n            console.error(err)\n            setSaving(false)\n        }\n    }\n\n    const saveClicked = async () => {\n        if (!validateBooking()) {\n            return;\n        }\n\n        setSaving(true);\n\n        try {\n            await BookService.updateBooking({\n                bookingId: props.booking._id,\n                bookingDate: date,\n                bookingTime: time,\n                fullname: fullname,\n                phone: phone,\n                email: email,\n                birthDate: birthDate,\n                notes: notes,\n                clinic: clinic,\n                patientID: patientID,\n                prescriptionLeft: prescriptionLeft,\n                prescriptionRight: prescriptionRight,\n            });\n            setSaving(false);\n            setState((state) => ({\n                ...state,\n                bookingDialogDataChanged: !state.bookingDialogDataChanged\n                    ? true\n                    : false,\n            }));\n            handleClose();\n        } catch (err) {\n            console.error(err);\n            setSaving(false);\n        }\n    };\n\n    const saveAsClicked = async () => {\n        if (!validateBooking()) {\n            return;\n        }\n\n        setSaving(true);\n\n        try {\n            await BookService.addNewBooking({\n                bookingDate: date,\n                bookingTime: time,\n                fullname: fullname,\n                phone: phone,\n                email: email,\n                birthDate: birthDate,\n                notes: notes,\n                clinic: clinic,\n                patientID: patientID,\n                prescriptionLeft: prescriptionLeft,\n                prescriptionRight: prescriptionRight,\n            });\n            setSaving(false);\n            setState((state) => ({\n                ...state,\n                bookingDialogDataChanged: !state.bookingDialogDataChanged\n                    ? true\n                    : false,\n            }));\n            handleClose();\n        } catch (err) {\n            console.error(err);\n            setSaving(false);\n        }\n    };\n\n\n    const getColorFromClinic = (clinic) => {\n        switch (clinic) {\n            case \"Virtual Consultation\":\n                return CalendarColors.VC_COLOR\n            case \"F2F Clinic\":\n                return CalendarColors.F2F_COLOR\n            case \"Laser Theatre\":\n                return CalendarColors.LASER_COLOR\n            case \"Lens Theatre\":\n                return CalendarColors.CATARACT_COLOR\n            case \"Post OP\":\n                return CalendarColors.POSTOP_COLOR\n            case \"Optometry\":\n                return CalendarColors.OPOTOMETRY_COLOR\n    \n    \n            default:\n                return \"#777\"\n\n        }\n    }\n\n    const handleClinicClicked = (_clinic) =>\n    {\n        setClinic(_clinic)\n        setOpenClinicDialog(false)\n    }\n\n    const handleCloseClinicDialog = () =>\n    {\n        setOpenClinicDialog(false)\n    }\n    \n    const editClinicClicked = () =>\n    {\n        setOpenClinicDialog(true)\n    }\n\n    \n\n\n    return (\n        <React.Fragment>\n            {props.date && props.time && (\n                <React.Fragment>\n                    <Dialog\n                        maxWidth=\"md\"\n                        open={props.open}\n                        onClose={handleClose}\n                        PaperComponent={PaperComponent}\n                        aria-labelledby=\"form-dialog-title\"\n                    >\n                        <DialogTitle id=\"draggable-dialog-title\">\n\n                            <div style={{ position: \"absolute\", left: \"0px\", top: \"0px\", width: \"100%\", backgroundColor: getColorFromClinic(clinic), color: \"#fff\", padding: \"15px 5px\", textAlign: \"center\", fontSize: \"1.5rem\" }}>\n                                <Grid container direction=\"row\"\n                                    justify=\"center\"\n                                    alignItems=\"center\"\n                                    spacing={1}\n                                >\n                                    <Grid item>\n                                        <Tooltip title=\"Change Clinic\">\n                                            <EditIcon style={{ fontSize: \"2rem\", cursor:\"pointer\" }} onClick={editClinicClicked} />\n                                        </Tooltip>\n                                    </Grid>\n                                    <Grid item style={{ marginTop: \"-10px\" }}>\n                                        {clinic}\n                                    </Grid>\n                                </Grid>\n                            </div>\n\n\n                        </DialogTitle>\n                        <DialogContent>\n                            <div\n                                style={{\n                                    paddingTop: \"50px\",\n                                    paddingBottom: \"20px\"\n                                }}\n                            >\n                                <Grid\n                                    container\n                                    direction=\"row\"\n                                    justify=\"stretch\"\n                                    spacing={2}\n                                    alignItems=\"center\"\n                                >\n                                    <Grid item xs={12} style={{ marginTop: \"10px\" }}>\n                                        <Grid\n                                            container\n                                            direction=\"row\"\n                                            justify=\"center\"\n                                            alignItems=\"center\"\n                                            spacing={1}\n                                            style={{ cursor: \"pointer\" }} onClick={() => setOpenDateDialog(true)}\n                                        >\n                                            <Grid item>\n                                                <DateRangeIcon className={classes.CalendarIcon} />\n                                            </Grid>\n                                            <Grid item>\n                                                <span className={classes.DateTimeLabel}>\n                                                    {date} , {time}\n                                                </span>\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n\n                                    <Grid item xs={12} md={6}>\n                                        <TextField\n                                            fullWidth\n                                            autoFocus\n                                            error={fullnameError}\n                                            label=\"Full Name\"\n                                            value={fullname}\n                                            required\n                                            onChange={fullnameChanged}\n                                            name=\"fullname\"\n                                            id=\"fullname-id\"\n                                            autoComplete=\"none\"\n                                        />\n                                    </Grid>\n\n                                    <Grid item xs={12} md={6}>\n                                        <Grid container alignItems=\"center\">\n                                            <Grid item xs={10}>\n                                                <TextField\n                                                    fullWidth\n                                                    label=\"Patient ID\"\n                                                    value={patientID}\n                                                    onChange={patientIDChanged}\n                                                    name=\"patientid\"\n                                                    id=\"patientid-id\"\n                                                    autoComplete=\"none\"\n                                                />\n                                            </Grid>\n                                            <Grid item xs={2}>\n                                                {selectedPatient && (\n                                                    <Tooltip title=\"Show Patient Detail\">\n                                                        <IconButton onClick={() => { setPatientDialogOpen(true) }}>\n                                                            <SearchIcon className={classes.SearchIcon} />\n                                                        </IconButton>\n                                                    </Tooltip>\n                                                )}\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n\n\n                                    <Grid item xs={12} md={6}>\n                                        <TextField\n                                            fullWidth\n                                            label=\"Telephone\"\n                                            value={phone}\n                                            onChange={phoneChanged}\n                                            name=\"phone\"\n                                            id=\"phone-id\"\n                                            autoComplete=\"none\"\n                                        />\n                                    </Grid>\n\n                                    <Grid item xs={12} md={6}>\n                                        <TextField\n                                            fullWidth\n                                            label=\"Email\"\n                                            value={email}\n                                            onChange={emailChanged}\n                                            name=\"email\"\n                                            id=\"email-id\"\n                                            autoComplete=\"none\"\n                                        />\n                                    </Grid>\n\n                                    <Grid item xs={12}>\n                                        <DateField\n                                            error={birthDateError}\n                                            title=\"Date of Birth\"\n                                            value={birthDate}\n                                            dateChanged={birthDateChanged}\n                                        >\n\n                                        </DateField>\n                                    </Grid>\n\n                                    <Grid item xs={12} md={6}>\n                                        <TextField\n                                            fullWidth\n                                            label=\"Prescription (LEFT)\"\n                                            value={prescriptionLeft}\n                                            onChange={prescriptionLeftChanged}\n                                            name=\"pleft\"\n                                            id=\"pleft-id\"\n                                            autoComplete=\"none\"\n                                        />\n                                    </Grid>\n\n                                    <Grid item xs={12} md={6}>\n                                        <TextField\n                                            fullWidth\n                                            label=\"Prescription (RIGHT)\"\n                                            value={prescriptionRight}\n                                            onChange={prescriptionRightChanged}\n                                            name=\"pright\"\n                                            id=\"pright-id\"\n                                            autoComplete=\"none\"\n                                        />\n                                    </Grid>\n\n                                    <Grid item xs={12}>\n                                        <TextField\n                                            fullWidth\n                                            label=\"Notes\"\n                                            value={notes}\n                                            onChange={notesChanged}\n                                            name=\"notes\"\n                                            id=\"notes-id\"\n                                            autoComplete=\"none\"\n                                        />\n                                    </Grid>\n\n                                    <Grid item xs={12} style={{marginTop:\"20px\"}}>\n                                    <Button\n                                        onClick={() => setOpenDeleteDialog(true)}\n                                        variant=\"contained\"\n                                        fullWidth\n                                        color=\"primary\"\n                                        // style={{ width: \"100px\" }}\n                                        style={{ backgroundColor: \"#c70000\", color: \"#fff\" }}\n                                        disabled={saving}\n                                    >\n                                        Delete Appointment\n                                      </Button>\n                                </Grid>\n\n\n                                </Grid>\n\n                                <div\n                                    style={{\n                                        position: \"absolute\",\n                                        bottom: \"20px\",\n                                        right: \"20px\",\n                                    }}\n                                >\n                                </div>\n                            </div>\n\n                            <Backdrop className={classes.backdrop} open={saving}>\n                                <CircularProgress color=\"inherit\" />\n                            </Backdrop>\n                        </DialogContent>\n\n                        <DialogActions>\n                            <Grid\n                                container\n                                direction=\"row\"\n                                justify=\"flex-end\"\n                                alignItems=\"center\"\n                                spacing={2}\n                            >\n\n                                <Grid item>\n                                    <Button\n                                        onClick={handleClose}\n                                        style={{ width: \"100px\" }}\n                                        disabled={saving}\n                                    >\n                                        back\n                                     </Button>\n                                </Grid>\n                                <Grid item>\n                                    <Button\n                                        onClick={saveClicked}\n                                        variant=\"contained\"\n                                        color=\"primary\"\n                                        // style={{ width: \"100px\" }}\n                                        style={{ backgroundColor: \"#ff7200\", color: \"#fff\" }}\n                                        disabled={saving}\n                                    >\n                                        Save Changes\n                                      </Button>\n                                </Grid>\n\n                                <Grid item xs={12}>\n                                    <div style={{width:\"100%\", display:\"flex\", justifyContent:\"center\"}}>\n                                    <Button\n                                        onClick={saveAsClicked}\n                                        variant=\"contained\"\n                                        color=\"secondary\"\n                                        style={{ width: \"400px\" }}\n                                        // style={{ backgroundColor: \"#ff7200\", color: \"#fff\" }}\n                                        disabled={saving}\n                                    >\n                                        Save As a new booking\n                                      </Button>\n\n                                    </div>\n                                </Grid>\n\n\n                                {/* <div style={{position:\"absolute\", left:\"10px\", bottom:\"5px\"}}> */}\n                                {/* </div> */}\n\n\n                            </Grid>\n\n                        </DialogActions>\n\n                        <Dialog\n                            open={openDeleteDialog}\n                            onClose={handleCloseDeleteDialog}\n                            aria-labelledby=\"alert-dialog-title\"\n                            aria-describedby=\"alert-dialog-description\"\n                        >\n                            <DialogTitle style={{ color: \"#d10202\", fontWeight: \"600\" }} id=\"alert-dialog-title\">\n                                {\"Delete Appointment\"}\n                            </DialogTitle>\n                            <DialogContent>\n                                <DialogContentText\n                                    style={{ color: \"#000\", fontWeight: \"500\" }}\n                                    id=\"alert-dialog-description\"\n                                >\n                                    Are you sure you want to delete this appointment?\n                            </DialogContentText>\n                            </DialogContent>\n                            <DialogActions>\n                                <Button onClick={handleCloseDeleteDialog} color=\"default\">\n                                    Back\n                                 </Button>\n                                <Button onClick={deleteClicked} variant=\"contained\" style={{ backgroundColor: \"#d10202\", color: \"#fff\" }}>\n                                    Yes, Delete this appointment\n                                 </Button>\n                            </DialogActions>\n                        </Dialog>\n\n                    </Dialog>\n\n                    <DateDialog\n                        open={openDateDialog}\n                        handleClose={handleCloseDateDialog}\n                        handleOK={handleSaveDateDialog}\n                        date={date}\n                        time={time}>\n\n                    </DateDialog>\n\n                </React.Fragment>\n            )}\n\n            <ChooseClinicDialog\n                    open={openClinicDialog}\n                    handleClose={handleCloseClinicDialog}\n                    clinicClicked={handleClinicClicked}\n            />\n\n            {selectedPatient && (\n                <PatientDialog\n                    patient={selectedPatient}\n                    open={patientDialogOpen}\n                    handleClose={handleClosePatientDialog}\n                    title={`${selectedPatient.name?.toUpperCase()} ${selectedPatient.surname?.toUpperCase()}`}\n                    saveButtonText={\"Save Changes\"}\n                />\n            )}\n\n            \n            \n        </React.Fragment>\n    );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport PropTypes from \"prop-types\";\nimport dateformat from \"dateformat\";\nimport BookService from \"../services/BookService\";\n\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport GlobalState from \"../../GlobalState\";\nimport BookingDialog from \"../BookingDialog\";\nimport NewBookingDialog from \"../NewBookingDialog\";\nimport { CalendarColors } from \"./colors\";\nimport clsx from \"clsx\";\n\nimport NewOVDialog from \"../NewOVBookingDialog\";\nimport EditOVBookingDialog from \"../EditOVBookingDialog\";\n\nconst useStyles = makeStyles((theme) => ({\n  Container: {\n    width: \"100%\",\n    height: \"50px\",\n    position: \"relative\",\n    backgroundColor: \"#fff\",\n    display: \"flex\",\n    alignItems: \"flex-start\",\n    justifyItems: \"flex-start\",\n    paddingLeft: \"10px\",\n  },\n\n  ContainerPast: {\n    width: \"100%\",\n    paddingTop: \"50px\",\n    position: \"relative\",\n    backgroundColor: \"#fafafa\",\n  },\n\n  DayLabel: {\n    position: \"absolute\",\n    top: \"5px\",\n    right: \"5px\",\n    color: \"#555\",\n    fontSize: \"1rem\",\n  },\n\n  DayLabelDisabled: {\n    position: \"absolute\",\n    top: \"5px\",\n    right: \"5px\",\n    color: \"#ddd\",\n    fontSize: \"1rem\",\n  },\n\n  LoadingProgress: {\n    position: \"absolute\",\n    top: \"10%\",\n    left: \"40%\",\n  },\n\n  BookingCountGauge: {\n    position: \"absolute\",\n    bottom: \"5%\",\n    left: \"8%\",\n    width: \"85%\",\n    height: \"8%\",\n  },\n\n  bookingBox: {\n    display: \"flex\",\n    marginRight: \"10px\",\n    marginTop: \"5px\",\n    padding: \"7px\",\n    maxWidth: \"150px\",\n    overflowX: \"hidden\",\n    // border: \"1px solid #eee\",\n    fontSize: \"12px\",\n    fontWeight: \"500\",\n    cursor: \"pointer\",\n    backgroundColor: \"#ebedf7\",\n    color: \"#3f51b5\",\n    boxShadow: \"2px 4px #fafafa\",\n\n    \"&:hover\": {\n      background: \"#3f51b5\",\n      color: \"#ebedf7\",\n    },\n  },\n\n  bookingBoxNew: {\n    display: \"flex\",\n    marginRight: \"10px\",\n    marginTop: \"5px\",\n    padding: \"6px 10px\",\n    maxWidth: \"150px\",\n    overflowX: \"hidden\",\n    border: \"1px solid #ddd\",\n    color: \"#ccc\",\n    fontSize: \"12px\",\n    fontWeight: \"500\",\n    cursor: \"pointer\",\n    backgroundColor: \"#fff\",\n\n    boxShadow: \"2px 4px #fafafa\",\n    transition: \"all 0.5s ease\",\n    borderRadius: \"4px\",\n\n    \"&:hover\": {\n      background: \"#fff\",\n      color: theme.palette.secondary.main,\n      borderColor: theme.palette.secondary.main,\n    },\n  },\n\n  bookingBoxVC: {\n    display: \"flex\",\n    marginRight: \"10px\",\n    marginTop: \"5px\",\n    padding: \"7px\",\n    maxWidth: \"200px\",\n    overflowX: \"hidden\",\n    fontSize: \"12px\",\n    fontWeight: \"500\",\n    cursor: \"pointer\",\n    backgroundColor: CalendarColors.VC_COLOR,\n    color: \"#eee\",\n    boxShadow: \"2px 4px #fafafa\",\n\n    \"&:hover\": {\n      // background: \"#0059b3\",\n      color: \"#fafafa\",\n    },\n  },\n  bookingBoxF2F: {\n    display: \"flex\",\n    marginRight: \"10px\",\n    marginTop: \"5px\",\n    padding: \"7px\",\n    maxWidth: \"200px\",\n    overflowX: \"hidden\",\n    fontSize: \"12px\",\n    fontWeight: \"500\",\n    cursor: \"pointer\",\n    backgroundColor: CalendarColors.F2F_COLOR,\n    color: \"#eee\",\n    boxShadow: \"2px 4px #fafafa\",\n\n    \"&:hover\": {\n      // background: \"#0059b3\",\n      color: \"#fafafa\",\n    },\n  },\n  bookingBoxLaser: {\n    display: \"flex\",\n    marginRight: \"10px\",\n    marginTop: \"5px\",\n    padding: \"7px\",\n    maxWidth: \"200px\",\n    overflowX: \"hidden\",\n    fontSize: \"12px\",\n    fontWeight: \"500\",\n    cursor: \"pointer\",\n    backgroundColor: CalendarColors.LASER_COLOR,\n    color: \"#eee\",\n    boxShadow: \"2px 4px #fafafa\",\n\n    \"&:hover\": {\n      // background: \"#0059b3\",\n      color: \"#fafafa\",\n    },\n  },\n\n  bookingBoxCataract: {\n    display: \"flex\",\n    marginRight: \"10px\",\n    marginTop: \"5px\",\n    padding: \"7px\",\n    maxWidth: \"200px\",\n    overflowX: \"hidden\",\n    fontSize: \"12px\",\n    fontWeight: \"500\",\n    cursor: \"pointer\",\n    backgroundColor: CalendarColors.CATARACT_COLOR,\n    color: \"#eee\",\n    boxShadow: \"2px 4px #fafafa\",\n\n    \"&:hover\": {\n      // background: \"#0059b3\",\n      color: \"#fafafa\",\n    },\n  },\n\n  bookingBoxPostOP: {\n    display: \"flex\",\n    marginRight: \"10px\",\n    marginTop: \"5px\",\n    padding: \"7px\",\n    maxWidth: \"200px\",\n    overflowX: \"hidden\",\n    fontSize: \"12px\",\n    fontWeight: \"500\",\n    cursor: \"pointer\",\n    backgroundColor: CalendarColors.POSTOP_COLOR,\n    color: \"#eee\",\n    boxShadow: \"2px 4px #fafafa\",\n\n    \"&:hover\": {\n      // background: \"#0059b3\",\n      color: \"#fafafa\",\n    },\n  },\n\n  bookingBoxOptometry: {\n    display: \"flex\",\n    marginRight: \"10px\",\n    marginTop: \"5px\",\n    padding: \"7px\",\n    maxWidth: \"200px\",\n    overflowX: \"hidden\",\n    fontSize: \"12px\",\n    fontWeight: \"500\",\n    cursor: \"pointer\",\n    backgroundColor: CalendarColors.OPOTOMETRY_COLOR,\n    color: \"#eee\",\n    boxShadow: \"2px 4px #fafafa\",\n\n    \"&:hover\": {\n      // background: \"#0059b3\",\n      color: \"#fafafa\",\n    },\n  },\n\n\n\n  bookingBoxHidden: {\n    display: \"none\",\n    marginRight: \"10px\",\n    marginTop: \"5px\",\n    padding: \"7px\",\n    maxWidth: \"150px\",\n    overflowX: \"hidden\",\n    fontSize: \"12px\",\n    fontWeight: \"500\",\n    cursor: \"pointer\",\n    backgroundColor: \"#fff\",\n    color: \"#fff\",\n    boxShadow: \"2px 4px #fafafa\",\n\n    \"&:hover\": {\n      // background: \"#0059b3\",\n      color: \"#fafafa\",\n    },\n  },\n\n\n\n\n\n\n\n  bookingBoxPositive: {\n    display: \"flex\",\n    marginRight: \"10px\",\n    marginTop: \"5px\",\n    padding: \"7px\",\n    maxWidth: \"150px\",\n    overflowX: \"hidden\",\n    fontSize: \"12px\",\n    fontWeight: \"500\",\n    cursor: \"pointer\",\n    backgroundColor: \"#d40b0b\",\n    color: \"#fff2f2\",\n    boxShadow: \"2px 4px #fafafa\",\n\n    \"&:hover\": {\n      background: \"#bf0000\",\n      color: \"#fff\",\n    },\n  },\n\n  bookingBoxReportSent: {\n    display: \"flex\",\n    marginRight: \"10px\",\n    marginTop: \"5px\",\n    padding: \"7px\",\n    maxWidth: \"150px\",\n    overflowX: \"hidden\",\n    fontSize: \"12px\",\n    fontWeight: \"500\",\n    cursor: \"pointer\",\n    backgroundColor: \"#009900\",\n    color: \"#eee\",\n    boxShadow: \"2px 4px #fafafa\",\n\n    \"&:hover\": {\n      background: \"#006e00\",\n      color: \"#fafafa\",\n    },\n  },\n\n  BookingBorderPCR: {\n    border: \"4px solid\",\n    borderColor: CalendarColors.PCR_COLOR,\n  },\n\n  BookingBorderGynae: {\n    border: \"4px solid\",\n    borderColor: CalendarColors.GYNAE_COLOR,\n  },\n\n  BookingBorderGP: {\n    border: \"4px solid\",\n    borderColor: CalendarColors.GP_COLOR,\n  },\n\n  BookingBorderSTD: {\n    border: \"4px solid\",\n    borderColor: CalendarColors.STD_COLOR,\n  },\n  BookingBorderBlood: {\n    border: \"4px solid\",\n    borderColor: CalendarColors.BLOOD_COLOR,\n  },\n\n}));\n\nconst DayViewCell = ({ key, date, time }) => {\n  const classes = useStyles();\n\n  const [state, setState] = React.useContext(GlobalState);\n  const [bookings, setBookings] = React.useState(null);\n  const [filteredBookings, setFilteredBookings] = React.useState(null);\n  const [selectedBooking, setSelectedBooking] = React.useState(null);\n\n  const [refresh, setRefresh] = React.useState(true);\n\n  const [isPast, setIsPast] = React.useState(false);\n\n  const [openDialog, setOpenDialog] = React.useState(false);\n  const [openDialogAddNew, setOpenDialogAddNew] = React.useState(false);\n\n  const [openDialogOV, setOpenDialogOV] = React.useState(false);\n\n  const [clinic, setClinic] = React.useState('');\n\n\n  const handleCloseDialogOV = () => {\n    setOpenDialogOV(false);\n    setOpenDialogAddNew(false)\n  };\n\n  useEffect(() => {\n    const todayStr = dateformat(new Date(), \"yyyy-mm-dd\");\n    setIsPast(date < todayStr);\n  }, [date]);\n\n  useEffect(() => {\n    if (bookings) {\n      if (state.dayViewCalFilter && state.dayViewCalFilter.trim().length > 0) {\n        const search = state.dayViewCalFilter.trim().toUpperCase();\n        setFilteredBookings(\n          bookings.filter(\n            (booking) =>\n              booking.fullname?.toLowerCase().indexOf(search.toLowerCase()) >= 0 \n          )\n        );\n      } else {\n        setFilteredBookings([...bookings]);\n      }\n    }\n  }, [state.dayViewCalFilter, bookings]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      if (!date || date.length <= 0 || !time || time.length <= 0) {\n        return;\n      }\n\n      // if (isPast)\n      // {\n      //     setBookings([]);\n      //     return;\n      // }\n\n      setBookings(null);\n\n      var res = state.AdminCalendarCache?.find(\n        (record) =>\n          record.method === \"getBookingsByDateStrandTime\" &&\n          record.query === `${date}${time}`\n      )?.res;\n      if (!res || openDialog || openDialogAddNew || true) {\n        res = await BookService.getAllBookingsByDateStrandTime(date, time);\n        setState((state) => ({\n          ...state,\n          AdminCalendarCache: [\n            ...state.AdminCalendarCache,\n            {\n              method: \"getBookingsByDateStrandTime\",\n              query: `${date}${time}`,\n              res: res,\n            },\n          ],\n        }));\n      }\n\n      if (res.data.status === \"OK\") {\n        setBookings(res.data.bookings);\n      }\n    };\n\n    if (openDialog || openDialogAddNew) {\n      setState((state) => ({\n        ...state,\n        AdminCalendarCache: state.AdminCalendarCache.filter(\n          (record) =>\n            !(\n              record.method === \"getBookingsByDateStrandTime\" &&\n              record.query === `${date}${time}`\n            )\n        ),\n      }));\n      setState((state) => ({\n        ...state,\n        AdminCalendarCache: state.AdminCalendarCache.filter(\n          (record) =>\n            !(\n              record.method === \"getBookingsCountByDateStrandTime\" &&\n              record.query === `${date}${time}`\n            )\n        ),\n      }));\n      setState((state) => ({\n        ...state,\n        AdminCalendarCache: state.AdminCalendarCache.filter(\n          (record) =>\n            !(\n              record.method === \"getBookingsCountByDateStr\" &&\n              record.query === date\n            )\n        ),\n      }));\n    }\n\n    fetchData();\n  }, [date, time, state.bookingDialogDataChanged]);\n\n  const bookingCliked = (event, booking) => {\n    setSelectedBooking(booking);\n    setOpenDialog(true);\n  };\n\n  const getBookingClass = (clinic) => {\n    switch (clinic) {\n      case \"Virtual Consultation\":\n        return classes.bookingBoxVC;\n      case \"F2F Clinic\":\n        return classes.bookingBoxF2F;\n      case \"Laser Theatre\":\n        return classes.bookingBoxLaser;\n      case \"Lens Theatre\":\n        return classes.bookingBoxCataract;\n        case \"Post OP\":\n          return classes.bookingBoxPostOP;\n          case \"Optometry\":\n            return classes.bookingBoxOptometry;\n      \n  \n      default:\n        return classes.bookingBoxHidden;\n    }\n  };\n\n  const addNewBookingClicked = () => {\n    setOpenDialogAddNew(true);\n  };\n\n  const getBookingBorderClass = (clinic) => {\n    switch (clinic) {\n      case \"pcr\":\n        return classes.BookingBorderPCR;\n      case \"gynae\":\n        return classes.BookingBorderGynae;\n      case \"gp\":\n        return classes.BookingBorderGP;\n      case \"std\":\n        return classes.BookingBorderSTD;\n        case \"blood\":\n          return classes.BookingBorderBlood;\n    \n      default:\n        return null;\n    }\n  };\n\n  const getBookingsBox = (_bookings) => {\n    if (_bookings === null) {\n      return (\n        <div className={classes.LoadingProgress}>\n          <CircularProgress disableShrink />\n        </div>\n      );\n    } else if (_bookings.length >= 0) {\n      return (\n        <React.Fragment>\n          {_bookings.map(\n            (booking) =>\n              state.selectedClinics.findIndex(\n                (e) => e === booking.clinic\n              ) >= 0 && (\n                <div\n                  style={booking.tr ? { borderTop: \"5px solid #d00fd6\" } : {}}\n                  className={clsx(\n                    getBookingClass(booking.clinic),\n                    // getBookingBorderClass(booking.clinic)\n                  )}\n                  onClick={(event) => bookingCliked(event, booking)}\n                >\n                  {`${\n                    booking.fullname\n                  }`.substring(0, 30)}\n                </div>\n              )\n          )}\n\n          <div className={classes.bookingBoxNew} onClick={addNewBookingClicked}>\n            {\" \"}\n            + Add New Booking\n          </div>\n        </React.Fragment>\n      );\n    }\n  };\n\n  const handleCloseDialog = () => {\n    setOpenDialog(false);\n  };\n\n  const handleCloseDialogAddNew = () => {\n    setOpenDialogAddNew(false);\n  };\n\n  const handleClinicClicked = (clinic) => {\n\n    setClinic(clinic)\n    setOpenDialogOV(true)\n\n  };\n\n  return (\n    <React.Fragment>\n      <div className={classes.Container}>\n        {getBookingsBox(filteredBookings)}\n      </div>\n\n      <EditOVBookingDialog\n        booking={selectedBooking}\n        open={openDialog}\n        date={date}\n        time={time}\n        clinic={selectedBooking?.clinic}\n        handleClose={handleCloseDialog}\n      />\n\n      <NewBookingDialog\n        date={date}\n        time={time}\n        open={openDialogAddNew}\n        handleClose={handleCloseDialogAddNew}\n        clinicClicked={handleClinicClicked}\n      />\n\n      <NewOVDialog\n        date={date}\n        time={time}\n        open={openDialogOV}\n        clinic={clinic}\n        handleClose={handleCloseDialogOV}\n      />\n\n    </React.Fragment>\n  );\n};\n\nDayViewCell.propTypes = {\n  key: PropTypes.string.isRequired,\n  date: PropTypes.string.isRequired,\n  time: PropTypes.string.isRequired,\n};\n\nexport default DayViewCell;\n","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport DayViewCell from './DayViewCell';\nimport dateformat from 'dateformat';\n\n\n\n\nconst rows = [\n    '08:00 AM',\n    '08:15 AM',\n    '08:30 AM', \n    '08:45 AM',\n    '09:00 AM',\n    '09:15 AM', \n    '09:30 AM',\n    '09:45 AM',\n    '10:00 AM',\n    '10:15 AM',\n    '10:30 AM',\n    '10:45 AM',\n    '11:00 AM',\n    '11:15 AM',\n    '11:30 AM',\n    '11:45 AM',\n    '12:00 PM',\n    '12:15 PM',\n    '12:30 PM',\n    '12:45 PM',\n    '01:00 PM',\n    '01:15 PM',\n    '01:30 PM',\n    '01:45 PM',\n    '02:00 PM',\n    '02:15 PM',\n    '02:30 PM',\n    '02:45 PM',\n    '03:00 PM',\n    '03:15 PM',\n    '03:30 PM',\n    '03:45 PM',\n    '04:00 PM',\n    '04:15 PM',\n    '04:30 PM',\n    '04:45 PM',\n    '05:00 PM',\n    '05:15 PM',\n    '05:30 PM',\n    '05:45 PM',\n    '06:00 PM',\n    '06:15 PM',\n    '06:30 PM',\n    '06:45 PM',\n    '07:00 PM',\n    '07:15 PM',\n    '07:30 PM',\n    '07:45 PM'\n];\n\nconst useStyles = makeStyles((theme) => ({\n\n    table: {\n        width: \"100%\",\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        overflowY: \"auto\"\n    },\n\n    th: {\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        verticalAlign: \"middle\",\n        fontcolor: \"#555\",\n        fontWeight: \"400\",\n        fontSize: \"15px\",\n        paddingTop: \"5px\",\n        paddingBottom: \"5px\",\n        width: \"12%\", \n    },\n\n    td: {\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        verticalAlign: \"middle\",\n        height : \"50px\",\n        width: \"84%\", \n    },\n\n    titleLabel: {\n        paddingBottom: \"17px\",\n        paddingTop: \"17px\",\n        color: \"#777\",\n        fontSize: \"16px\"\n    },\n\n    titleLabelToday: {\n        paddingBottom: \"17px\",\n        paddingTop: \"17px\",\n        color: \"#fff\",\n        backgroundColor: \"#1a73e8\",\n        fontSize: \"16px\"\n    },\n\n  }));\n\nconst DayView = ({date}) => {\n    const classes = useStyles();\n\n    return (\n        <React.Fragment>\n\n        <div style={{overflowY: \"scroll\" , height: \"60px\"}}>\n            <table className={classes.table}>\n                <thead>\n                    <tr>\n                        <th style={{width: \"7%\"}}>\n                        \n                        </th>\n                        <th style={{width: \"84%\"}}>\n                                <div className={(dateformat(new Date(),'yyyy-mm-dd') === dateformat(date, 'yyyy-mm-dd')) ? classes.titleLabelToday : classes.titleLabel }>\n                                        {dateformat(date,'dddd')}\n                                </div>                                \n                        </th>\n                    </tr>\n                </thead>\n             </table>\n\n        </div>\n\n            <div style={{overflowY: \"scroll\" , height: \"70vh\"}}>\n                <table className={classes.table}>   \n                    <tbody>\n                        {rows.map(row => (\n                            <tr>\n                                <td style={{width: \"7%\"}}>\n                                    {row}\n                                </td>\n                               \n                                <td className={classes.td}>\n                                     <DayViewCell key={`${dateformat(date,'yyyy-mm-dd')}-${row}`} date={dateformat(date,'yyyy-mm-dd')} time={row}/>  \n                                </td>\n                            \n                            </tr>\n                        ))}            \n                    </tbody>\n                </table>\n            </div>                    \n      \n        </React.Fragment>\n\n\n    );\n}\n\nDayView.propTypes = {\n    date: PropTypes.any.isRequired\n  };\n\n\nexport default DayView;","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MonthView from './MonthView';\nimport { Button, Grid, IconButton, InputAdornment, TextField, Tooltip } from '@material-ui/core';\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\n\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport WeekView from './WeekView';\nimport dateformat from 'dateformat';\nimport DayView from './DayView';\nimport GlobalState from '../../GlobalState';\n\nimport CloseIcon from '@material-ui/icons/Close';\nimport { CalendarColors } from './colors';\n\nconst Clinics = [\n    {clinic: \"Virtual Consultation\", color: CalendarColors.VC_COLOR},\n    {clinic: \"F2F Clinic\", color: CalendarColors.F2F_COLOR},\n    {clinic: \"Laser Theatre\", color: CalendarColors.LASER_COLOR},\n    {clinic: \"Lens Theatre\", color: CalendarColors.CATARACT_COLOR},\n    {clinic: \"Post OP\", color: CalendarColors.POSTOP_COLOR},\n    {clinic: \"Optometry\", color: CalendarColors.OPOTOMETRY_COLOR},\n]\n\nconst monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n  \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n];\n\nconst useStyles = makeStyles((theme) => ({\n\n    title: {\n        textAlign: \"center\",\n        fontSize: \"24px\",\n        fontColor: \"#333\"\n    },\n\n  }));\n\nexport default function CalendarView() {\n    const classes = useStyles();\n\n    const [state, setState] = React.useContext(GlobalState);\n\n    const [month, setMonth] = React.useState(new Date().getMonth() + 1);\n    const [year, setYear] = React.useState(new Date().getFullYear());\n\n    const [day, setDay] = React.useState(new Date());\n\n    const [firstDayofWeek, setFirstDayofWeek] = React.useState(new Date());\n\n    const [weekDates, setWeekDates] = React.useState([]);\n\n    const [mode, setMode] = React.useState('month');\n    const [selectedTab, setSeletedTab] = React.useState('month');\n\n    const [filter,setFilter] = React.useState('');\n\n    const filterChanged = (event) =>{\n        setFilter(event.target.value);\n        setState(state => ({...state, dayViewCalFilter : event.target.value?.trim()?.toUpperCase()}))\n      }\n\n      const removeFilter = () =>\n      {\n        setFilter('');\n        setState(state => ({...state, dayViewCalFilter : ''}));\n      }\n\n\n    useEffect( () => {\n        const today = new Date();\n        const dayofWeek = today.getDay();\n        const firstdayofweek = new Date(today.getTime() - ( dayofWeek * 86400000));\n        setFirstDayofWeek(firstdayofweek);\n        setState(state => ({...state, AdminCalendarCache : []}));\n        setState(state => ({...state, selectedClinics : Clinics.map(item => item.clinic) }));\n\n        return () =>\n        {\n            setState(state => ({...state, AdminCalendarCache : []}));\n            removeFilter();\n        }\n       \n    }, []);\n\n\n    useEffect( () => {\n        const dates = [];\n        for (var i = 0; i < 7 ; i++)\n        {\n            dates.push(new Date(firstDayofWeek.getTime() + ( i * 86400000)));\n        }\n        setWeekDates(dates);\n\n    }, [firstDayofWeek]);\n\n    const handlePrevButton = (event) =>\n    {\n       if (mode === 'month')\n       {\n            if (month === 1)\n            {\n                setYear(year - 1);\n            } \n\n            const newMonth = month === 1 ? 12 : month - 1;\n            setMonth(newMonth);\n\n            const newDay = new Date(year, newMonth - 1 , 1, 0 ,0 ,0 ,0);\n            setDay(newDay);\n\n            const dayofWeek = newDay.getDay();\n            setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\n\n       } \n       else if (mode === 'week')\n       {\n           const newFirstDayofWeek = new Date(firstDayofWeek.getTime() - ( 7 * 86400000));\n           setFirstDayofWeek(newFirstDayofWeek);\n\n           setDay(newFirstDayofWeek);\n           setMonth(newFirstDayofWeek.getMonth() + 1);\n           setYear(newFirstDayofWeek.getFullYear());\n\n       }\n       else if (mode === 'day')\n       {\n           const newDay = new Date(day.getTime() - ( 1 * 86400000));\n           setDay(newDay);\n\n           const dayofWeek = newDay.getDay();\n           setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\n\n           setMonth(newDay.getMonth() + 1);\n           setYear(newDay.getFullYear());\n       }\n    }\n\n    const handleNextButton = (event) =>\n    {\n        if (mode === 'month')\n        {\n            if (month === 12)\n            {\n                setYear(year + 1);\n            } \n       \n            const newMonth = month === 12 ? 1 : month + 1;\n            setMonth(newMonth);\n\n            const newDay = new Date(year, newMonth - 1 , 1, 0 ,0 ,0 ,0);\n            setDay(newDay);\n\n            const dayofWeek = newDay.getDay();\n            setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\n        }\n        else if (mode === 'week')\n        {\n            const newFirstDayofWeek = new Date(firstDayofWeek.getTime() + ( 7 * 86400000));\n            setFirstDayofWeek(newFirstDayofWeek);\n\n            setDay(newFirstDayofWeek);\n            setMonth(newFirstDayofWeek.getMonth() + 1);\n            setYear(newFirstDayofWeek.getFullYear());\n\n        }\n        else if (mode === 'day')\n        {\n            const newDay = new Date(day.getTime() + ( 1 * 86400000));\n            setDay(newDay);\n\n            const dayofWeek = newDay.getDay();\n            setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\n \n            setMonth(newDay.getMonth() + 1);\n            setYear(newDay.getFullYear());\n        }\n    }\n\n    const goToday = (event) => {\n        const newDay = new Date();\n        const dayofWeek = newDay.getDay();\n        setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\n        setDay(newDay);\n        setMonth(newDay.getMonth() + 1);\n        setYear(newDay.getFullYear());\n    }\n\n    const dayClicked = (event, date) =>\n    {\n        const newDay = new Date(date);\n        const dayofWeek = newDay.getDay();\n        setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\n        setDay(newDay);\n        setMonth(newDay.getMonth() + 1);\n        setYear(newDay.getFullYear());\n        setSeletedTab('day');\n        setMode('day');\n    }\n\n    const getContentFromMode = (_mode) => {\n        if (_mode === 'month')\n        {\n            return (\n                <MonthView dayClicked={dayClicked} month={month} year={year}/>    \n            );\n        }    \n        else if (_mode === 'week')\n        {\n            return (\n                    <WeekView dayClicked={dayClicked} dates={weekDates}/>\n            );\n            \n        }\n        else if (_mode === 'day')\n        {\n            return (\n                <DayView date={day}/>\n            );\n        }\n    }\n\n    const getCalendarTitleFromMode = (_mode) => {\n        if (_mode === 'month')\n        {\n            return (\n                <span className={classes.title}> {`${monthNames[month - 1]} ${year}`} </span>   \n            );\n        }    \n        else if (_mode === 'week')\n        {\n            const endOfWeek = new Date(firstDayofWeek.getTime() + ( 6 * 86400000));\n            let endofWeekStr = '';\n            if (endOfWeek.getMonth() === firstDayofWeek.getMonth())\n            {\n                endofWeekStr = dateformat(endOfWeek,'d');\n            }else\n            {\n                endofWeekStr = dateformat(endOfWeek,'mmm d');\n            }\n\n            return (\n                <span className={classes.title}> {`${dateformat(firstDayofWeek,'mmm d')} - ${endofWeekStr}, ${year}`} </span>\n            );\n            \n        }\n        else if (_mode === 'day')\n        {\n            return (\n                <span className={classes.title}> {`${dateformat(day,'mmmm d, yyyy')}`} </span>\n            );\n        }\n    }\n\n\n    const handleTabChanged = (event, value) => {\n        if (value && value.length)\n        {\n          setSeletedTab(value);\n          setMode(value);\n        }\n    };\n\n    const getPrevButtonTitle = (_mode) =>\n    {\n        return `Previuos ${mode}`;\n    }\n\n    const getNextButtonTitle = (_mode) =>\n    {\n        return `Next ${mode}`;\n    }\n\n    const clinicClicked = (clinic) =>\n    {\n        if (state.selectedClinics?.findIndex(e => e === clinic) >= 0 )\n        {\n            setState(state => ({...state, selectedClinics :state.selectedClinics.filter(e => e !== clinic)}));\n        }else\n        {\n            setState(state => ({...state, selectedClinics : [...state.selectedClinics, clinic]}));\n        }\n    }\n\n    const getClinicGuide = () =>\n    {\n        return (\n            <div style={{marginBottom:\"10px\"}}>\n               <Grid container spacing={1}>\n                   {Clinics.map( item => (\n                       <Grid item>\n                           <div \n                                style={state.selectedClinics?.findIndex(e => e === item.clinic) >= 0 ? {border:`1px solid ${item.color}`, backgroundColor:`${item.color}`, color:\"#fff\" ,fontSize:\"0.85rem\", fontWeight:\"500\", padding:\"5px\", width:\"150px\" , textAlign:\"center\", cursor:\"pointer\", borderRadius:\"4px\"}   : {border:`1px solid ${item.color}`, color:`${item.color}`, fontSize:\"0.85rem\", fontWeight:\"500\", padding:\"5px\", width:\"150px\", textAlign:\"center\", cursor:\"pointer\", borderRadius:\"4px\"}}\n                                onClick= {() => clinicClicked(item.clinic)}   \n                                > \n                               {item.clinic}\n                           </div>\n                        </Grid>\n                   ))\n                   }\n               </Grid>\n            </div>\n        )\n    }\n\n    return (\n        <React.Fragment>\n\n            {getClinicGuide()}\n\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"space-between\"\n            alignItems=\"center\"\n            style= {{marginBottom: \"10px\", marginTop: \"0px\"}}\n            >  \n\n            <Grid item md={3}>\n                <div  style={{display:\"flex\", alignItems: \"flex-start\", justifyContent: \"flex-start\" , paddingLeft: \"10px\"}}>\n                    <Tooltip title={getPrevButtonTitle(mode)} placement=\"bottom-start\">\n                        <IconButton \n                                color=\"default\" \n                                aria-label=\"prev\"\n                                onClick = {handlePrevButton}\n                                >\n                            <NavigateBeforeIcon style={{fontSize: '2rem'}}/>\n                        </IconButton>\n                    </Tooltip>\n\n                    <Tooltip title={getNextButtonTitle(mode)} placement=\"bottom-end\">\n                        <IconButton \n                                color=\"default\" \n                                aria-label=\"next\"\n                                onClick = {handleNextButton}\n                                >\n                            <NavigateNextIcon style={{fontSize: '2rem'}}/>\n                        </IconButton>\n                    </Tooltip>\n\n                    <Button style={{marginTop: \"11px\", marginLeft: \"10px\"}} onClick={goToday} variant=\"outlined\"> Today </Button>\n                </div>\n\n            </Grid>\n\n            <Grid item md={6}>\n\n                    <Grid\n                        container\n                        direction=\"row\"\n                        justify=\"center\"\n                        alignItems=\"flex-end\"\n                        spacing = {3}\n                        >\n                            <Grid item>\n                                    {getCalendarTitleFromMode(mode)}\n                            </Grid>\n                            {mode === 'day' && (\n                                        <Grid item>\n                                                <TextField\n                                                    variant=\"standard\"\n                                                    style={{marginBottom : \"5px\"}}\n                                                    value={filter}\n                                                    onChange={filterChanged}\n                                                    margin=\"normal\"\n                                                    size=\"small\"\n                                                    id=\"filter\"\n                                                    label=\"Filter\"\n                                                    name=\"filter\"\n                                                    autoComplete=\"off\"\n                                                    InputProps={{\n                                                        endAdornment : \n                                                            <InputAdornment position=\"end\">\n                                                                <Tooltip title=\"Clear\">\n                                                                            <IconButton\n                                                                            aria-label=\"remove filter\"\n                                                                            onClick={() => removeFilter()}\n                                                                            onMouseDown={() => removeFilter()}\n                                                                        >\n                                                                            <CloseIcon/>\n                                                                        </IconButton>\n                                                                </Tooltip>\n                                                            \n                                                            </InputAdornment>\n                                                          \n                                                    }}\n                                                   \n                                                />\n                                        </Grid>\n                            )}\n                           \n                    </Grid>\n                \n            </Grid>\n\n            <Grid item md={3}>\n                <div  style={{display:\"flex\", alignItems: \"flex-end\", justifyContent: \"flex-end\", paddingRight: \"10px\" }}>\n                    <ToggleButtonGroup\n                        value={selectedTab}\n                        exclusive\n                        onChange={handleTabChanged}\n                        aria-label=\"select view mode\"\n                    >\n                        <ToggleButton style={selectedTab === 'month' ? {width: \"80px\", color: \"#3f51b5\", backgroundColor: \"#ebedf7\" } : {width: \"80px\"}} value=\"month\" aria-label=\"month view\">\n                                month\n                        </ToggleButton>\n                        <ToggleButton style={selectedTab === 'week' ? {width: \"80px\", color: \"#3f51b5\", backgroundColor: \"#ebedf7\"} : {width: \"80px\"}}  value=\"week\" aria-label=\"week view\">\n                                week\n                        </ToggleButton>\n                        <ToggleButton style={selectedTab === 'day' ? {width: \"80px\", color: \"#3f51b5\", backgroundColor: \"#ebedf7\"} : {width: \"80px\"}} value=\"day\" aria-label=\"day view\">\n                                day\n                        </ToggleButton>\n                    </ToggleButtonGroup>\n                </div>\n            </Grid>\n\n           </Grid> \n\n             {getContentFromMode(mode)}\n\n        </React.Fragment>\n\n\n    );\n\n}","import React, { useEffect, useRef, useState } from 'react';\nimport { DataGrid } from '@material-ui/data-grid';\nimport { Button, Checkbox, CircularProgress, Dialog, DialogContent, DialogTitle, Divider, FormControl, FormControlLabel, Grid, Icon, InputLabel, LinearProgress, Link, makeStyles, MenuItem, Paper, Select, SvgIcon, Switch, TextField, Tooltip } from '@material-ui/core';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport { IconButton } from '@material-ui/core';\nimport CheckIcon from '@material-ui/icons/Check';\nimport CloseIcon from '@material-ui/icons/Close';\nimport GlobalState from '../GlobalState';\nimport { getMenuIndex } from '../MenuList';\nimport { FormatDateFromString, FormatDateFromStringShortYear } from './DateFormatter';\nimport AccessibilityIcon from '@material-ui/icons/Accessibility';\n\nimport SearchIcon from '@material-ui/icons/Search';\nimport BookingDialog from './BookingDialog';\nimport AddIcon from '@material-ui/icons/Add';\n\nimport NewReleasesIcon from '@material-ui/icons/NewReleases';\nimport HistoryIcon from '@material-ui/icons/History';\nimport TimelineIcon from '@material-ui/icons/Timeline';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport AutorenewIcon from '@material-ui/icons/Autorenew';\nimport LiveTvIcon from '@material-ui/icons/LiveTv';\nimport PlaylistAddCheckIcon from '@material-ui/icons/PlaylistAddCheck';\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport HourglassEmptyIcon from '@material-ui/icons/HourglassEmpty';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faFileExcel } from \"@fortawesome/free-solid-svg-icons\";\nimport Draggable from 'react-draggable';\n\nimport * as dateformat from 'dateformat';\n\nimport DateFnsUtils from '@date-io/date-fns';\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardTimePicker,\n  KeyboardDatePicker,\n} from '@material-ui/pickers';\n\nimport BusinessIcon from '@material-ui/icons/Business';\nimport CreditCardIcon from '@material-ui/icons/CreditCard';\nimport LocalAtmIcon from '@material-ui/icons/LocalAtm';\n\n\nimport ReactHTMLTableToExcel from 'react-html-table-to-excel';\nimport PriceCalculator from './PriceCalculator';\nimport { corporates } from './Corporates';\nimport PatientService from './services/PatientService';\nimport PatientDialog from './PatientDialog';\nimport { set } from 'date-fns/esm';\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    marginTop: theme.spacing(0),\n    marginBottom: theme.spacing(1),\n\n  },\n\n  refreshButton: {\n    marginLeft: theme.spacing(2),\n  },\n\n  checkIcon: {\n    color: \"green\"\n  },\n\n  closeIcon: {\n    color: \"red\"\n  },\n\n  RefLink: {\n    cursor: \"pointer\"\n  },\n\n  BookedLabel: {\n    backgroundColor: \"#606060\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  PatientAttendedLabel: {\n    backgroundColor: \"#0066aa\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  SampleTakenLabel: {\n    backgroundColor: \"#0066cc\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  ReportSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  ReportCertSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  PositiveLabel: {\n    backgroundColor: \"red\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  HideNowRows: {\n    position: \"absolute\",\n    top: \"40%\",\n    left: \"40%\",\n    width: \"600px\",\n    height: \"300px\",\n    backgroundColor: \"#fafafa\",\n    color: \"#111\",\n    zIndex: \"1000\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyItems: \"center\"\n  },\n\n  ExportToExcelButton:\n  {\n    // marginBottom : \"20px\",\n    color: \"#2f942e\",\n    borderColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"#fafffa\",\n      borderColor: \"#2f942e\",\n    },\n    textDecoration: \"none !important\",\n\n  },\n\n  ExportToExcelButtonInline:\n  {\n    // marginBottom : \"20px\",\n    color: \"#2f942e\",\n    borderColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"#fafffa\",\n      borderColor: \"#2f942e\",\n    },\n    textDecoration: \"none !important\",\n    cursor: \"pointer\",\n    padding: \"10px\"\n\n  },\n\n  table: {\n    width: \"100%\",\n    border: \"1px solid #ddd\",\n    borderCollapse: \"collapse\",\n  },\n\n  th: {\n    border: \"1px solid #ddd\",\n    borderCollapse: \"collapse\",\n    verticalAlign: \"middle\",\n    fontcolor: \"#555\",\n    fontWeight: \"400\",\n    fontSize: \"15px\",\n    paddingTop: \"5px\",\n    paddingBottom: \"5px\",\n    width: \"14%\",\n    paddingLeft: \"5px\",\n  },\n\n  td: {\n    border: \"1px solid #ddd\",\n    borderCollapse: \"collapse\",\n    verticalAlign: \"middle\",\n    paddingLeft: \"5px\",\n  },\n\n  topSelect: {\n    margin: theme.spacing(1),\n    minWidth: 80,\n  },\n\n  notifyIcon: {\n    width: \"16px\",\n    height: \"16px\",\n    borderRadius: \"50%\",\n    backgroundColor: \"rgb(220, 0, 78)\",\n    marginLeft: \"10px\"\n  }\n\n}));\n\nconst getTableTitle = (str) => {\n\n  if (str === 'today') {\n    return `Today's Bookings`;\n  } else if (str === 'old') {\n    return `Old Bookings`;\n  } else if (str === 'future') {\n    return `Future Bookings`;\n  } else if (str === 'recent') {\n    return `Recent Bookings`;\n  } else if (str === 'live') {\n    return `Live Bookings`;\n  } else if (str === 'completed') {\n    return `Completed Bookings`;\n  } else if (str === 'positive') {\n    return `Positive Results`;\n  } else if (str === 'deleted') {\n    return `Archived Records`;\n  } else if (str === 'late') {\n    return `40 Hours Late`;\n  }\n\n  else {\n    return `Patients`;\n  }\n\n}\n\nconst getTableIcon = (str) => {\n\n  if (str === 'today') {\n    return <NewReleasesIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else if (str === 'old') {\n    return <HistoryIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else if (str === 'future') {\n    return <TimelineIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else if (str === 'recent') {\n    return <AutorenewIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else if (str === 'live') {\n    return <LiveTvIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else if (str === 'completed') {\n    return <PlaylistAddCheckIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else if (str === 'positive') {\n    return <AddCircleOutlineIcon style={{ fontSize: \"2.2rem\" }} />\n  } else if (str === 'deleted') {\n    return <DeleteIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else if (str === 'late') {\n    return <HourglassEmptyIcon style={{ fontSize: \"2.2rem\" }} />;\n  }\n\n  else {\n    return <AccessibilityIcon style={{ fontSize: \"2.2rem\" }} />;\n  }\n\n}\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'}>\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nexport default function PatientsTable(props) {\n\n  const classes = useStyles();\n\n\n\n  var columns = [\n    {\n      field: \"_id\",\n      headerName: \"Patient ID\",\n      width: 150,\n      renderCell: (params) => {\n        return (\n          <React.Fragment>\n            <IconButton\n              color=\"primary\"\n              onClick={(event) => openDetailsDialog(event, params.value)}\n            >\n              <SearchIcon />\n            </IconButton>\n\n            <span\n              style={{\n                color: \"#333\",\n                fontWeight: \"600\",\n                fontSize: \"0.8rem\",\n              }}\n            >\n              {params.getValue(\"patientID\")}\n            </span>\n          </React.Fragment>\n        );\n      },\n    },\n    { field: 'name', headerName: 'Name', width: 150 },\n    { field: 'surname', headerName: 'Surname', width: 150 },\n    {\n      field: 'birthDate', headerName: 'DOB', width: 150, valueFormatter: (params) => {\n        return FormatDateFromString(params.value);\n      },\n    },\n    { field: 'email', headerName: 'Email', width: 200 },\n    { field: 'homeTel', headerName: 'Home Tel', width: 150 },\n    { field: 'mobileTel', headerName: 'Mobile Tel', width: 150 },\n    { field: 'postCode', headerName: 'Postcode', width: 300 },\n    { field: 'address', headerName: 'Address', width: 300 },\n\n  ];\n\n\n  const [state, setState] = React.useContext(GlobalState);\n\n  const [data, setData] = React.useState({ bookings: [], cachedBookings: [], isFetching: true });\n\n  const [selectedRow, setSelectedRow] = React.useState(null);\n\n  const [selectedBooking, setSelectedBooking] = React.useState(null);\n  const [seeDetailsDialogOpen, setSeeDetailsDialogOpen] = React.useState(false);\n\n  const [corporate, setCorporate] = useState(corporates[0]);\n  const corporateChanged = (event) => {\n    setCorporate(event.target.value);\n  }\n\n\n  const [filter, setFilter] = React.useState('');\n\n\n  const lastPromise = useRef();\n\n  const formatTimeStamp = (timeStamp) => {\n    const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\n    const timeStampStr = dateformat(timeStamp, 'yyyy-mm-dd');\n    if (todayStr === timeStampStr) {\n      return dateformat(timeStamp, \"'Today', h:MM:ss TT\");\n    }\n    else {\n      return dateformat(timeStamp, \"mmm dS, h:MM:ss TT\");\n    }\n  }\n\n  const loadData = () => {\n    var api = PatientService.getAllPatients;\n\n    if (props.date === 'deleted') {\n      api = PatientService.getDeletedPatients;\n    }\n\n    setData({ bookings: [], cachedBookings: [], isFetching: true });\n\n    // console.log(props)\n\n    const currentPromise = api().then((res) => {\n      // console.log(res)\n      for (var i = 0; i < res.data.length; i++) {\n        res.data[i] = { ...res.data[i], id: i + 1 }\n      }\n      setData({ bookings: [...res.data], cachedBookings: [...res.data], isFetching: false });\n      // return res.data;\n    }).catch(err => {\n      console.error(err)\n    })\n\n    // lastPromise.current = currentPromise;\n\n    // currentPromise.then(\n    //   result => {\n    //     if (currentPromise === lastPromise.current) {\n    //       setData({bookings: [...result], cachedBookings: [...result], isFetching: false});\n    //       setPage(1);\n    //     }\n    //   },\n    //   e => {\n    //     if (currentPromise === lastPromise.current) {\n    //         console.error(e);\n    //         setData({bookings: data.bookings, cachedBookings: data.cachedBookings, isFetching: false});\n    //     }\n    //   });\n\n  }\n\n  useEffect(() => {\n    loadData()\n  },\n    [props.date]);\n\n\n\n\n  useEffect(() => {\n\n    if (filter && filter.trim().length > 0) {\n      var filteredData = data.cachedBookings.filter((element) =>\n\n        (element.name?.toLowerCase().indexOf(filter.toLowerCase()) >= 0) ||\n        (element.surname?.toLowerCase().indexOf(filter.toLowerCase()) >= 0) ||\n        ((element.name + ' ' + element.surname)?.toLowerCase().indexOf(filter.toLowerCase()) >= 0)\n\n\n\n      );\n\n\n      setData({ bookings: [...filteredData], cachedBookings: data.cachedBookings, isFetching: false });\n    } else {\n      setData({ bookings: [...data.cachedBookings], cachedBookings: data.cachedBookings, isFetching: false });\n    }\n  },\n    [filter]);\n\n\n  useEffect(() => {\n\n    loadData()\n\n  }, [state.patientDialogDataChanged]);\n\n\n  const handleCloseSeeDetaisDialog = () => {\n    setSelectedBooking(null);\n    setSeeDetailsDialogOpen(false);\n  }\n\n  const openDetailsDialog = (event, id) => {\n    const patient = data.bookings.find(element => element._id === id);\n    if (patient) {\n      setSelectedPatient(patient);\n      setPatientDialogTitle(`${patient.name.toUpperCase()} ${patient.surname.toUpperCase()}`)\n      setPatientDialogSaveButtonText(\"Save Changes\")\n      setPatientDialogOpen(true)\n    }\n  }\n\n  const refreshClicked = (event) => {\n    setFilter('');\n    loadData()\n  }\n\n  const filterChanged = (event) => {\n    setFilter(event.target.value);\n  }\n\n  const handleSelectionChanged = (newSelection) => {\n    if (newSelection.length > 0) {\n      setSelectedRow(newSelection.rows[0]);\n    }\n\n  }\n\n  const [page, setPage] = React.useState(1);\n\n\n  const registerNewPatientClicked = () => {\n    setSelectedPatient(null)\n    setPatientDialogTitle('Register New Patient')\n    setPatientDialogSaveButtonText(\"Save\")\n    setPatientDialogOpen(true)\n  }\n\n  const [selectedPatient, setSelectedPatient] = React.useState(null)\n  const [patientDialogOpen, setPatientDialogOpen] = React.useState(false)\n  const [patientDialogTitle, setPatientDialogTitle] = React.useState('')\n  const [patientDialogSaveButtonText, setPatientDialogSaveButtonText] = React.useState('')\n\n\n  const handleClosePatientDialog = () => {\n    setPatientDialogOpen(false)\n  }\n\n\n  return (\n    <React.Fragment>\n      {data.isFetching && (\n        <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\n          <LinearProgress color=\"primary\" />\n        </div>\n      )}\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"space-between\"\n        alignItems=\"flex-end\"\n      >\n        <Grid item md={4}>\n          <div style={{ textAlign: \"left\", paddingLeft: \"10px\" }}>\n            <Grid\n              container\n              direction=\"row\"\n              justify=\"flex-start\"\n              alignItems=\"center\"\n            >\n              <Grid item>\n                <span style={{ paddingRight: \"15px\", color: \"#555\" }}>\n                  {\" \"}\n                  {getTableIcon(props.date)}{\" \"}\n                </span>\n              </Grid>\n              <Grid item>\n                <span\n                  style={{\n                    fontSize: \"1.4rem\",\n                    fontWeight: \"600\",\n                    color: \"#444\",\n                  }}\n                >\n                  {\" \"}\n                  {getTableTitle(props.date)}{\" \"}\n                </span>\n              </Grid>\n              <Grid item>\n                <Tooltip title=\"Refresh\" placement=\"right\">\n                  <IconButton\n                    color=\"primary\"\n                    className={classes.refreshButton}\n                    onClick={refreshClicked}\n                  >\n                    <RefreshIcon />\n                  </IconButton>\n                </Tooltip>\n              </Grid>\n            </Grid>\n          </div>\n        </Grid>\n\n        <Grid item md={3}>\n          <div style={{ paddingBottom: \"10px\" }}>\n            <Button\n              // className={classes.ExportToExcelButton}\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={registerNewPatientClicked}\n              startIcon={\n                <AddIcon />\n              }\n            >\n              Register new Patient\n              </Button>\n          </div>\n        </Grid>\n\n        {data.isFetching && <div className={classes.HideNowRows}></div>}\n\n        <Grid item md={3}>\n          <TextField\n            variant=\"standard\"\n            value={filter}\n            onChange={filterChanged}\n            margin=\"normal\"\n            size=\"small\"\n            id=\"filter\"\n            label=\"Filter\"\n            name=\"filter\"\n            autoComplete=\"off\"\n          />\n        </Grid>\n\n      </Grid>\n\n      <div style={{ height: 700, width: \"100%\" }}>\n        <DataGrid\n          rows={data.bookings}\n          columns={columns}\n          autoPageSize\n          page={page}\n          onPageChange={(params) => {\n            setPage(params.page);\n          }}\n          onSelectionChange={handleSelectionChanged}\n        />\n      </div>\n\n\n      <BookingDialog\n        booking={selectedBooking}\n        open={seeDetailsDialogOpen && selectedBooking && selectedBooking.fullname}\n        onClose={handleCloseSeeDetaisDialog}\n      />\n\n      <PatientDialog\n        patient={selectedPatient}\n        open={patientDialogOpen}\n        handleClose={handleClosePatientDialog}\n        title={patientDialogTitle}\n        saveButtonText={patientDialogSaveButtonText}\n      />\n\n    </React.Fragment>\n  );\n}","import React, { useEffect, useRef, useState } from \"react\";\nimport BookService from \"./services/BookService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {\n    AppBar,\n    Backdrop,\n    Button,\n    Checkbox,\n    CircularProgress,\n    DialogActions,\n    DialogContentText,\n    Divider,\n    FormControlLabel,\n    Grid,\n    IconButton,\n    InputAdornment,\n    InputLabel,\n    Link,\n    makeStyles,\n    MenuItem,\n    Select,\n    Switch,\n    TextField,\n    Toolbar,\n    Tooltip,\n} from \"@material-ui/core\";\nimport GlobalState from \"./../GlobalState\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\n\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Draggable from \"react-draggable\";\nimport Paper from \"@material-ui/core/Paper\";\n\nimport Alert from \"@material-ui/lab/Alert\";\n\nimport PropTypes from \"prop-types\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport Box from \"@material-ui/core/Box\";\n\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport NumberFormat from \"react-number-format\";\n\nimport AccessAlarmsIcon from '@material-ui/icons/AccessAlarms';\nimport DateField from \"./DateField\";\n\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\nimport CloseIcon from '@material-ui/icons/Close';\nimport Slide from '@material-ui/core/Slide';\nimport templateService from \"./services/EmailTemplateService\";\nimport dateFormat from \"dateformat\";\n\nimport SaveIcon from '@material-ui/icons/Save';\n\n\nimport { EditorState, convertToRaw, convertFromHTML, ContentState } from 'draft-js';\nimport { Editor } from 'react-draft-wysiwyg';\nimport draftToHtml from 'draftjs-to-html';\nimport htmlToDraft from 'html-to-draftjs';\nimport { htmlToText } from 'html-to-text';\nimport { stateFromHTML } from 'draft-js-import-html';\nimport \"./react-draft-wysiwyg.css\";\nimport TemplateService from \"./services/EmailTemplateService\";\n\nimport AddIcon from '@material-ui/icons/Add';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`vertical-tabpanel-${index}`}\n            aria-labelledby={`vertical-tab-${index}`}\n            {...other}\n            style={{ width: \"100%\" }}\n        >\n            {value === index && (\n                <div style={{ padding: \"20px\", width: \"100%\" }}>\n                    {children}\n                </div>\n            )}\n        </div>\n    );\n}\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n    return {\n        id: `vertical-tab-${index}`,\n        'aria-controls': `vertical-tabpanel-${index}`,\n    };\n}\n\nconst useStyles = makeStyles((theme) => ({\n    appBar: {\n        position: 'relative',\n    },\n    title: {\n        marginLeft: theme.spacing(2),\n        flex: 1,\n    },\n\n    root: {\n        paddingTop: \"8px\",\n        flexGrow: 1,\n        backgroundColor: theme.palette.background.paper,\n        display: 'flex',\n        height: 224,\n    },\n    tabs: {\n        borderRight: `1px solid ${theme.palette.divider}`,\n    },\n\n    backdrop: {\n        zIndex: theme.zIndex.drawer + 5,\n        color: \"#fff\",\n    },\n\n    titleCenter: {\n        width: \"100%\",\n        textAlign: \"center\",\n        fontSize: \"1.1rem\",\n        color: theme.palette.primary.main,\n        fontWeight: \"500\",\n        borderBottom: `2px dashed ${theme.palette.primary.main}`\n    },\n\n    eyeText: {\n        width: \"100%\",\n        textAlign: \"left\",\n        fontSize: \"1.1rem\",\n        color: theme.palette.primary.main,\n        fontWeight: \"500\",\n        paddingTop: \"15px\"\n    }\n\n}));\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport default function EmailTemplateDialog(props) {\n    const classes = useStyles();\n\n    const [state, setState] = React.useContext(GlobalState);\n\n    const [template, settemplate] = React.useState({ formData: {} })\n    const [saving, setSaving] = React.useState(false);\n\n\n    const [templateIDError, settemplateIDError] = React.useState(false)\n    const [subjectError, setSubjectError] = React.useState(false)\n\n    const [nameError, setNameError] = React.useState(false)\n    const [surnameError, setSurnameError] = React.useState(false)\n    const [birthDateError, setBirthDateError] = React.useState(false)\n\n    const [templateRepeated, settemplateRepeated] = React.useState(false)\n\n\n    const [value, setValue] = React.useState(0);\n\n    const [history, setHistory] = React.useState([]);\n    const [backupFormData, setBackUpFormData] = React.useState(null);\n\n    const [openDeleteDialog, setOpenDeleteDialog] = React.useState(false)\n\n    const [variable, setVariable] = React.useState({})\n    const [variableErrors, setVariableErrors] = React.useState({})\n\n\n    // const [editorState, setEditorState] = React.useState(EditorState.createWithContent(stateFromHTML(`<p>...</p>`)))\n    const [editorState, setEditorState] = React.useState(EditorState.createEmpty())\n\n    const onEditorStateChange = (_editorState) => {\n        setEditorState(_editorState)\n        const html = draftToHtml(convertToRaw(editorState.getCurrentContent()))\n        settemplate({\n            ...template,\n            html: html,\n            rawText: htmlToText(html),\n        })\n    }\n\n\n    const handleCloseDeleteDialog = () => {\n        setOpenDeleteDialog(false)\n    }\n\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    useEffect(() => {\n        if (props.open) {\n\n            if (props.template) {\n                let parameters = []\n                try{\n                    parameters = JSON.parse(props.template.parameters)\n                }\n                catch(err){}\n\n                settemplate({ ...props.template, parameters: parameters})\n                const html = props.template.html\n                const contentBlock = htmlToDraft(html);\n                if (contentBlock) {\n                    const contentState = ContentState.createFromBlockArray(\n                        contentBlock.contentBlocks\n                    );\n                    const _editorState = EditorState.createWithContent(contentState);\n                    setEditorState(_editorState)\n                }\n            }\n            else {\n                const html = '<p style=\"font-size:16px\">Please delete this and write your <strong>Text</strong> here ... 😀</p>';\n                const contentBlock = htmlToDraft(html);\n                if (contentBlock) {\n                    const contentState = ContentState.createFromBlockArray(\n                        contentBlock.contentBlocks\n                    );\n                    const _editorState = EditorState.createWithContent(contentState);\n                    setEditorState(_editorState)\n                    settemplate({\n                        ...template,\n                        parameters: [],\n                        html: html,\n                        rawText: htmlToText(html),\n                    })\n                }\n            }\n        }\n    }, [props.template, props.open])\n\n\n\n    const handleClose = () => {\n        props.handleClose();\n        setValue(0)\n        settemplate({})\n        settemplateIDError(false)\n        setNameError(false)\n        setSurnameError(false)\n        settemplateRepeated(false)\n        settemplatenameuser('')\n        settemplatenameusererror(false)\n        setVariable({})\n        setVariableErrors({})\n        setSubjectError(false)\n    };\n\n    const saveClicked = async () => {\n\n        if (!validatetemplate()) {\n            setValue(0)\n            return\n        }\n\n        try {\n            settemplateRepeated(false)\n            setSaving(true)\n            const parameters = JSON.stringify(template.parameters)\n            if (props.template) {\n                const res = await templateService.updateTemplate({ id: template._id, template: {...template, parameters: parameters} })\n                setSaving(false)\n                if (res.data.status === \"OK\") {\n                    setState(state => ({ ...state, templateDialogDataChanged: !state.templateDialogDataChanged }))\n                    handleClose();\n                }\n            } else {\n                const res = await templateService.registerNewTemplate({ template: {...template, parameters: parameters}  })\n                setSaving(false)\n                if (res.data.status === \"OK\") {\n                    setState(state => ({ ...state, templateDialogDataChanged: !state.templateDialogDataChanged }))\n                    handleClose();\n                } else if (res.data.status === \"FAILED\" && res.data.error === \"Repeated template!\") {\n                    settemplateIDError(true)\n                    settemplateRepeated(true)\n                    setValue(0)\n                }\n            }\n        }\n        catch (err) {\n            setSaving(false)\n            console.error(err)\n        }\n    }\n\n    const deleteClicked = async () => {\n\n        if (templatenameuser !== props.template.templateID) {\n            settemplatenameusererror(true)\n            return\n        }\n\n        setOpenDeleteDialog(false)\n\n        setSaving(true)\n        try {\n            await templateService.deleteTemplate(props.template._id)\n            setSaving(false)\n            setState((state) => ({\n                ...state,\n                templateDialogDataChanged: !state.templateDialogDataChanged\n                    ? true\n                    : false,\n            }));\n            handleClose();\n        }\n        catch (err) {\n            console.error(err)\n            setSaving(false)\n        }\n    }\n\n\n\n    const validatetemplate = () => {\n\n        var error = false\n        if (!template.templateID || template.templateID.trim().length === 0) {\n            error = true\n            settemplateIDError(true)\n        }\n\n        if (!template.html || template.html.length === 0) {\n            error = true\n            setNameError(true)\n        }\n\n        if (!template.rawText || template.rawText.length === 0) {\n            error = true\n            setNameError(true)\n        }\n\n        if (!template.subject || template.subject.length === 0) {\n            error = true\n            setSubjectError(true)\n        }\n\n        return !error\n    }\n\n    const formatDate = (date) => {\n        return dateFormat(date, \"dd-mm-yyyy , HH:MM:ss\")\n    }\n\n    const [selectedVersion, setSelectedVersion] = React.useState(0)\n\n    const [templatenameuser, settemplatenameuser] = React.useState('')\n    const [templatenameusererror, settemplatenameusererror] = React.useState(false)\n\n    const addVariableCliced = () => {\n        setVariableErrors({})\n        if (!ValidateVariable()) {\n            return\n        }\n\n        const _variable = {\n            keyword: variable.keyword,\n            builtinValue: variable.builtinValue,\n            defaultValue: variable.defaultValue\n        }\n\n        settemplate({ ...template, parameters: [...template.parameters, _variable] })\n        setVariable({})\n    }\n\n    const ValidateVariable = () => {\n        var error = false\n        if (!variable.keyword) {\n            setVariableErrors((prev) => prev = { ...prev, keywordError: true })\n            error = true\n        }\n\n        if (variable.keyword)\n        {\n            if (template.parameters.find(e => e.keyword === variable.keyword))\n            {\n                setVariableErrors((prev) => prev = { ...prev, keywordError: true })\n                error = true\n            }\n        }\n\n\n        if (!variable.builtinValue) {\n            setVariableErrors((prev) => prev = { ...prev, builtinValueError: true })\n            error = true\n        }\n\n\n        return !error\n    }\n\n    const deleteParameter = (_keyword) =>\n    {\n        settemplate({...template, parameters: template.parameters.filter(e => e.keyword !== _keyword)})\n    }\n\n    return (\n        <React.Fragment>\n            <React.Fragment>\n                <Dialog fullScreen open={props.open} onClose={handleClose} TransitionComponent={Transition}>\n                    <AppBar className={classes.appBar} style={(selectedVersion > 0 && history && history.length > 0) ? { backgroundColor: \"#777\" } : {}} color=\"primary\">\n                        <Toolbar>\n                            <IconButton edge=\"start\" color=\"inherit\" onClick={handleClose} aria-label=\"close\">\n                                <CloseIcon />\n                            </IconButton>\n                            <Typography variant=\"h6\" className={classes.title}>\n                                {props.title}\n                            </Typography>\n\n\n                            <Button startIcon={<SaveIcon />} variant=\"contained\" color=\"secondary\" onClick={saveClicked} disabled={selectedVersion > 0 && history && history.length > 0}>\n                                {props.saveButtonText}\n                            </Button>\n                        </Toolbar>\n\n\n                    </AppBar>\n\n                    <div className={classes.root}>\n                        <Tabs\n                            orientation=\"vertical\"\n                            variant=\"scrollable\"\n                            value={value}\n                            onChange={handleChange}\n                            aria-label=\"Vertical tabs example\"\n                            indicatorColor=\"secondary\"\n                            textColor=\"secondary\"\n                            className={classes.tabs}\n                        >\n                            <Tab label=\"Email Text\" {...a11yProps(0)} />\n                            <Tab label={`Parameters`} {...a11yProps(1)} />\n                            <Tab label={`Settings`} {...a11yProps(2)} />\n\n                        </Tabs>\n                        <TabPanel value={value} index={0}>\n                            <Grid container spacing={1}>\n                                <Grid item xs={12}>\n                                    <Grid container spacing={2} alignItems=\"center\">\n                                        <Grid item xs={8}>\n                                            <TextField\n                                                // disabled={props.template}\n                                                name=\"templatename\"\n                                                id=\"templatename\"\n                                                label=\"Template Name\"\n                                                fullWidth\n                                                required\n                                                helperText={templateRepeated ? '* This Name is already assigned to another template! Please choose a different name.' : '* Please give a unique name to each templete.'}\n                                                error={templateIDError}\n                                                value={template.templateID || ''}\n                                                onChange={(event) => {\n                                                    settemplate({ ...template, templateID: event.target.value })\n                                                    settemplateIDError(false)\n                                                }}\n                                                autoComplete=\"none\"\n                                                variant=\"outlined\"\n                                            />\n\n                                        </Grid>\n                                        {props.template && (\n                                            <Grid item xs={4}>\n                                                <Button onClick={() => setOpenDeleteDialog(true)} variant=\"contained\" style={{ backgroundColor: \"#d10202\", color: \"#fff\", marginBottom: \"5px\" }}>\n                                                    Delete This Template\n                                                </Button>\n                                            </Grid>\n                                        )}\n\n                                    </Grid>\n\n                                </Grid>\n                                <Grid item xs={12}>\n                                <TextField\n                                        name=\"subject\"\n                                        id=\"subject\"\n                                        label=\"Email Subject\"\n                                        fullWidth\n                                        required\n                                        error={subjectError}\n                                        value={template.subject || ''}\n                                        onChange={(event) => {\n                                            settemplate({ ...template, subject: event.target.value })\n                                            setSubjectError(false)\n                                        }}\n                                        autoComplete=\"none\"\n                                        variant=\"outlined\"\n                                    />\n\n                                </Grid>\n                                <Grid item xs={12}>\n                                    <Editor\n                                        autoFocus\n                                        editorState={editorState}\n                                        wrapperClassName=\"demo-wrapper\"\n                                        editorClassName=\"demo-editor\"\n                                        onEditorStateChange={onEditorStateChange}\n                                    />\n                                </Grid>\n                            </Grid>\n                        </TabPanel>\n                        <TabPanel value={value} index={1}>\n                            <Grid container direction=\"column\" spacing={2}>\n                                <Grid item>\n                                    <Grid container direction=\"row\" spacing={1} alignItems=\"bottom\">\n                                        <Grid item xs={3}>\n                                            <TextField\n                                                name=\"keyword\"\n                                                id=\"keyword\"\n                                                label=\"Keyword\"\n                                                fullWidth\n                                                required\n                                                error={variableErrors.keywordError}\n                                                helperText={'This is the TEXT within your email that you want to be replaced by a value'}\n                                                autoComplete=\"none\"\n                                                variant=\"outlined\"\n                                                value={variable.keyword || ''}\n                                                onChange={(event) => setVariable({ ...variable, keyword: event.target.value })}\n                                            />\n                                        </Grid>\n                                        <Grid item xs={3}>\n                                            <FormControl\n                                                error={variableErrors.builtinValueError}\n                                                fullWidth required variant=\"outlined\" className={classes.formControl}>\n                                                <InputLabel id=\"builtinvalueid\"> Value</InputLabel>\n                                                <Select\n                                                    labelId=\"builtinvalueid\"\n                                                    id=\"builtinvalue\"\n                                                    value={variable.builtinValue || null}\n                                                    onChange={(event) => setVariable({ ...variable, builtinValue: event.target.value })}\n                                                    label=\"Built-in Value\"\n                                                >\n                                                    <MenuItem value={'Patient Name'}>Patient Name</MenuItem>\n                                                    <MenuItem value={'Patient Surname'}>Patient Surname</MenuItem>\n                                                    <MenuItem value={'Patient Fullname'}>Patient Fullname</MenuItem>\n                                                    <MenuItem value={'Today Date'}>Today Date</MenuItem>\n                                                    <MenuItem value={'Appointment DateTime'}>Appointment DateTime</MenuItem>\n                                                </Select>\n                                            </FormControl>\n                                        </Grid>\n                                        <Grid item xs={3}>\n                                            <TextField\n                                                name=\"defaultvalue\"\n                                                id=\"defaultvalue\"\n                                                label=\"Default Value\"\n                                                fullWidth\n                                                autoComplete=\"none\"\n                                                helperText={'* This value is used if the variable is empty.'}\n                                                variant=\"outlined\"\n                                                value={variable.defaultValue || ''}\n                                                onChange={(event) => setVariable({ ...variable, defaultValue: event.target.value })}\n\n                                            />\n                                        </Grid>\n                                        <Grid item xs={3}>\n                                            <Button onClick={addVariableCliced} startIcon={<AddIcon />} variant=\"contained\" color=\"primary\" fullWidth style={{ height: \"55px\" }}>\n                                                Add Variable\n                                            </Button>\n                                        </Grid>\n                                    </Grid>\n                                    </Grid>\n\n                                    <Grid item style={{marginTop:\"20px\", fontWeight:\"500\", height:\"20px\"}}>\n                                         <Divider/>\n                                         <Grid container direction=\"row\" spacing={1} alignItems=\"center\">\n                                                <Grid item xs={3}>\n                                                    {\"Keyword\"}\n                                                </Grid>\n                                                <Grid item xs={3}>\n                                                    {\"Value\"}\n                                                </Grid>\n                                                <Grid item xs={3}>\n                                                    {\"Default Value\"}\n                                                </Grid>\n                                                <Grid item xs={3}>\n                                                </Grid>\n                                            </Grid>\n                                            <Divider/>\n                                      </Grid>      \n\n                                    {(!template.parameters || template.parameters.length === 0) && (\n                                        <Grid item>\n                                            <div style={{width:\"80%\", textAlign:\"center\", color:\"#777\", marginTop:\"50px\", fontSize:\"1rem\"}}>\n                                                 No Parameters Defined\n                                            </div>                                           \n                                        </Grid>    \n                                    )}\n\n                                    {template.parameters && template.parameters.length > 0 && template.parameters.map((item => (\n                                        <Grid item style={{marginTop:\"10px\", fontWeight:\"500\", height:\"30px\"}}>\n                                            <Grid container direction=\"row\" spacing={1} alignItems=\"center\">\n                                                <Grid item xs={3}>\n                                                    {item.keyword}\n                                                </Grid>\n                                                <Grid item xs={3}>\n                                                    {item.builtinValue}\n                                                </Grid>\n                                                <Grid item xs={3}>\n                                                    {item.defaultValue}\n                                                </Grid>\n                                                <Grid item xs={3}>\n                                                    <Tooltip title=\"Delete Parameter\">\n                                                        <IconButton onClick={() => deleteParameter(item.keyword)}>\n                                                            <DeleteIcon color=\"primary\" />\n                                                        </IconButton>\n                                                    </Tooltip>\n                                                </Grid>\n                                            </Grid>\n                                        </Grid>\n                                    )))}\n                            </Grid>\n                        </TabPanel>\n                        <TabPanel value={value} index={2}>\n                             <div style={{fontSize:\"1.2rem\", color:\"#777\", fontWeight:\"500\", marginBottom:\"50px\"}}>\n                                 Here you can set which emails (and when) should be sent to the patients automatically by the system :\n                             </div>   \n                             <Paper elevation={3}>\n                            <Grid container direction=\"column\" spacing={2} style={{minHeight:\"300px\", padding:\"10px 15px\"}}>\n                                <Grid item>\n                                    <FormControlLabel\n                                        control={\n                                        <Switch\n                                            checked={template.sendWhenBookedCalendar}\n                                            onChange={(e) => {settemplate({...template,sendWhenBookedCalendar : e.target.checked})}}\n                                            name=\"check-whenbooked\"\n                                            color=\"primary\"\n                                        />\n                                        }\n                                          label={<span style={template.sendWhenBookedCalendar ? {fontWeight:\"500\",color:\"#333\" } : {color:\"#777\"}}>\n                                                Automatically send this email to the patients when an appointment is booked on the calendar.\n                                                </span> \n                                            }\n                                    />\n                                </Grid>\n                            </Grid>\n                            </Paper>\n\n                        </TabPanel>\n\n\n                    </div>\n\n                    <Backdrop\n                        className={classes.backdrop}\n                        open={saving}\n                    >\n                        <CircularProgress color=\"inherit\" />\n                    </Backdrop>\n\n\n                    <Dialog\n                        open={openDeleteDialog}\n                        onClose={handleCloseDeleteDialog}\n                        aria-labelledby=\"alert-dialog-title\"\n                        aria-describedby=\"alert-dialog-description\"\n                    >\n                        <DialogTitle style={{ color: \"#d10202\", fontWeight: \"600\" }} id=\"alert-dialog-title\">\n                            {\"Delete template\"}\n                        </DialogTitle>\n                        <DialogContent>\n                            <DialogContentText\n                                style={{ color: \"#000\", fontWeight: \"500\" }}\n                                id=\"alert-dialog-description\"\n                            >\n                                <Grid container spacing={4}>\n                                    <Grid item xs={12}>\n                                        Are you sure you want to delete this template?\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <TextField\n                                            autoFocus\n                                            name=\"templatenameuser\"\n                                            id=\"templatenameuser\"\n                                            label=\"Template Name\"\n                                            placeholder=\"Please Retype The Template Name\"\n                                            fullWidth\n                                            required\n                                            error={templatenameusererror}\n                                            helperText={`* Please retype the template name you want to be deleted.`}\n                                            value={templatenameuser}\n                                            onChange={(event) => {\n                                                settemplatenameuser(event.target.value)\n                                            }}\n                                            autoComplete=\"none\"\n                                            variant=\"outlined\"\n                                        />\n                                    </Grid>\n                                </Grid>\n                            </DialogContentText>\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={handleCloseDeleteDialog} color=\"default\">\n                                Back\n                                 </Button>\n                            <Button onClick={deleteClicked} variant=\"contained\" style={{ backgroundColor: \"#d10202\", color: \"#fff\" }}>\n                                Yes, Delete this template\n                                 </Button>\n                        </DialogActions>\n                    </Dialog>\n\n\n\n                </Dialog>\n            </React.Fragment>\n        </React.Fragment>\n    );\n}\n","import React, { useEffect, useRef, useState } from 'react';\nimport { DataGrid } from '@material-ui/data-grid';\nimport { Button, Checkbox, CircularProgress, Dialog, DialogContent, DialogTitle, Divider, FormControl, FormControlLabel, Grid, Icon, InputLabel, LinearProgress, Link, makeStyles, MenuItem, Paper, Select, SvgIcon, Switch, TextField, Tooltip } from '@material-ui/core';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport { IconButton } from '@material-ui/core';\nimport CheckIcon from '@material-ui/icons/Check';\nimport CloseIcon from '@material-ui/icons/Close';\nimport GlobalState from '../GlobalState';\nimport { getMenuIndex } from '../MenuList';\nimport { FormatDateFromString, FormatDateFromStringShortYear } from './DateFormatter';\nimport AccessibilityIcon from '@material-ui/icons/Accessibility';\n\nimport SearchIcon from '@material-ui/icons/Search';\nimport BookingDialog from './BookingDialog';\nimport AddIcon from '@material-ui/icons/Add';\n\nimport NewReleasesIcon from '@material-ui/icons/NewReleases';\nimport HistoryIcon from '@material-ui/icons/History';\nimport TimelineIcon from '@material-ui/icons/Timeline';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport AutorenewIcon from '@material-ui/icons/Autorenew';\nimport LiveTvIcon from '@material-ui/icons/LiveTv';\nimport PlaylistAddCheckIcon from '@material-ui/icons/PlaylistAddCheck';\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport HourglassEmptyIcon from '@material-ui/icons/HourglassEmpty';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faFileExcel } from \"@fortawesome/free-solid-svg-icons\";\nimport Draggable from 'react-draggable';\n\nimport * as dateformat from 'dateformat';\n\nimport DraftsIcon from '@material-ui/icons/Drafts';\n\nimport DateFnsUtils from '@date-io/date-fns';\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardTimePicker,\n  KeyboardDatePicker,\n} from '@material-ui/pickers';\n\nimport BusinessIcon from '@material-ui/icons/Business';\nimport CreditCardIcon from '@material-ui/icons/CreditCard';\nimport LocalAtmIcon from '@material-ui/icons/LocalAtm';\n\n\nimport ReactHTMLTableToExcel from 'react-html-table-to-excel';\nimport PriceCalculator from './PriceCalculator';\nimport { corporates } from './Corporates';\nimport templateService from './services/EmailTemplateService';\nimport EmailTemplateDialog from './EmailTemplateDialog';\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    marginTop: theme.spacing(0),\n    marginBottom: theme.spacing(1),\n\n  },\n\n  refreshButton: {\n    marginLeft: theme.spacing(2),\n  },\n\n  checkIcon: {\n    color: \"green\"\n  },\n\n  closeIcon: {\n    color: \"red\"\n  },\n\n  RefLink: {\n    cursor: \"pointer\"\n  },\n\n  BookedLabel: {\n    backgroundColor: \"#606060\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  templateAttendedLabel: {\n    backgroundColor: \"#0066aa\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  SampleTakenLabel: {\n    backgroundColor: \"#0066cc\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  ReportSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  ReportCertSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  PositiveLabel: {\n    backgroundColor: \"red\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  HideNowRows: {\n    position: \"absolute\",\n    top: \"40%\",\n    left: \"40%\",\n    width: \"600px\",\n    height: \"300px\",\n    backgroundColor: \"#fafafa\",\n    color: \"#111\",\n    zIndex: \"1000\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyItems: \"center\"\n  },\n\n  ExportToExcelButton:\n  {\n    // marginBottom : \"20px\",\n    color: \"#2f942e\",\n    borderColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"#fafffa\",\n      borderColor: \"#2f942e\",\n    },\n    textDecoration: \"none !important\",\n\n  },\n\n  ExportToExcelButtonInline:\n  {\n    // marginBottom : \"20px\",\n    color: \"#2f942e\",\n    borderColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"#fafffa\",\n      borderColor: \"#2f942e\",\n    },\n    textDecoration: \"none !important\",\n    cursor: \"pointer\",\n    padding: \"10px\"\n\n  },\n\n  table: {\n    width: \"100%\",\n    border: \"1px solid #ddd\",\n    borderCollapse: \"collapse\",\n  },\n\n  th: {\n    border: \"1px solid #ddd\",\n    borderCollapse: \"collapse\",\n    verticalAlign: \"middle\",\n    fontcolor: \"#555\",\n    fontWeight: \"400\",\n    fontSize: \"15px\",\n    paddingTop: \"5px\",\n    paddingBottom: \"5px\",\n    width: \"14%\",\n    paddingLeft: \"5px\",\n  },\n\n  td: {\n    border: \"1px solid #ddd\",\n    borderCollapse: \"collapse\",\n    verticalAlign: \"middle\",\n    paddingLeft: \"5px\",\n  },\n\n  topSelect: {\n    margin: theme.spacing(1),\n    minWidth: 80,\n  },\n\n  notifyIcon: {\n    width: \"16px\",\n    height: \"16px\",\n    borderRadius: \"50%\",\n    backgroundColor: \"rgb(220, 0, 78)\",\n    marginLeft: \"10px\"\n  }\n\n}));\n\nconst getTableTitle = (str) => {\n\n  if (str === 'today') {\n    return `Today's Bookings`;\n  } else if (str === 'old') {\n    return `Old Bookings`;\n  } else if (str === 'future') {\n    return `Future Bookings`;\n  } else if (str === 'recent') {\n    return `Recent Bookings`;\n  } else if (str === 'live') {\n    return `Live Bookings`;\n  } else if (str === 'completed') {\n    return `Completed Bookings`;\n  } else if (str === 'positive') {\n    return `Positive Results`;\n  } else if (str === 'deleted') {\n    return `Archived Records`;\n  } else if (str === 'late') {\n    return `40 Hours Late`;\n  }\n\n  else {\n    return `Email Templates`;\n  }\n\n}\n\nconst getTableIcon = (str) => {\n\n  if (str === 'today') {\n    return <NewReleasesIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else if (str === 'old') {\n    return <HistoryIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else if (str === 'future') {\n    return <TimelineIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else if (str === 'recent') {\n    return <AutorenewIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else if (str === 'live') {\n    return <LiveTvIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else if (str === 'completed') {\n    return <PlaylistAddCheckIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else if (str === 'positive') {\n    return <AddCircleOutlineIcon style={{ fontSize: \"2.2rem\" }} />\n  } else if (str === 'deleted') {\n    return <DeleteIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else if (str === 'late') {\n    return <HourglassEmptyIcon style={{ fontSize: \"2.2rem\" }} />;\n  }\n\n  else {\n    return <DraftsIcon style={{ fontSize: \"2.2rem\" }} />;\n  }\n\n}\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'}>\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nexport default function EmailTemplatesTable(props) {\n\n  const classes = useStyles();\n\n\n\n  var columns = [\n    {\n      field: \"_id\",\n      headerName: \" \",\n      width: 70,\n      renderCell: (params) => {\n        return (\n          <React.Fragment>\n            <IconButton\n              color=\"primary\"\n              onClick={(event) => openDetailsDialog(event, params.value)}\n            >\n              <SearchIcon />\n            </IconButton>\n          </React.Fragment>\n        );\n      },\n    },\n    { field: 'templateID', headerName: 'Template Name', width: 200 },\n    { field: 'subject', headerName: 'Subject', width: 400 },\n    { field: 'rawText', headerName: 'Email Body', width: 700 },\n  ];\n\n\n  const [state, setState] = React.useContext(GlobalState);\n\n  const [data, setData] = React.useState({ bookings: [], cachedBookings: [], isFetching: true });\n\n  const [selectedRow, setSelectedRow] = React.useState(null);\n\n  const [selectedBooking, setSelectedBooking] = React.useState(null);\n  const [seeDetailsDialogOpen, setSeeDetailsDialogOpen] = React.useState(false);\n\n  const [corporate, setCorporate] = useState(corporates[0]);\n  const corporateChanged = (event) => {\n    setCorporate(event.target.value);\n  }\n\n\n  const [filter, setFilter] = React.useState('');\n\n\n  const lastPromise = useRef();\n\n  const formatTimeStamp = (timeStamp) => {\n    const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\n    const timeStampStr = dateformat(timeStamp, 'yyyy-mm-dd');\n    if (todayStr === timeStampStr) {\n      return dateformat(timeStamp, \"'Today', h:MM:ss TT\");\n    }\n    else {\n      return dateformat(timeStamp, \"mmm dS, h:MM:ss TT\");\n    }\n  }\n\n  const loadData = () => {\n    var api = templateService.getAllTemplates;\n\n    setData({ bookings: [], cachedBookings: [], isFetching: true });\n\n    // console.log(props)\n\n    const currentPromise = api().then((res) => {\n      // console.log(res)\n      for (var i = 0; i < res.data.length; i++) {\n        res.data[i] = { ...res.data[i], id: i + 1 }\n      }\n      setData({ bookings: [...res.data], cachedBookings: [...res.data], isFetching: false });\n      // return res.data;\n    }).catch(err => {\n      console.error(err)\n    })\n\n    // lastPromise.current = currentPromise;\n\n    // currentPromise.then(\n    //   result => {\n    //     if (currentPromise === lastPromise.current) {\n    //       setData({bookings: [...result], cachedBookings: [...result], isFetching: false});\n    //       setPage(1);\n    //     }\n    //   },\n    //   e => {\n    //     if (currentPromise === lastPromise.current) {\n    //         console.error(e);\n    //         setData({bookings: data.bookings, cachedBookings: data.cachedBookings, isFetching: false});\n    //     }\n    //   });\n\n  }\n\n  useEffect(() => {\n    loadData()\n  },\n    [props.date]);\n\n\n\n\n  useEffect(() => {\n\n    if (filter && filter.trim().length > 0) {\n      var filteredData = data.cachedBookings.filter((element) =>\n\n        (element.name?.toLowerCase().indexOf(filter.toLowerCase()) >= 0) ||\n        (element.surname?.toLowerCase().indexOf(filter.toLowerCase()) >= 0) ||\n        ((element.name + ' ' + element.surname)?.toLowerCase().indexOf(filter.toLowerCase()) >= 0)\n\n\n\n      );\n\n\n      setData({ bookings: [...filteredData], cachedBookings: data.cachedBookings, isFetching: false });\n    } else {\n      setData({ bookings: [...data.cachedBookings], cachedBookings: data.cachedBookings, isFetching: false });\n    }\n  },\n    [filter]);\n\n\n  useEffect(() => {\n\n    loadData()\n\n  }, [state.templateDialogDataChanged]);\n\n\n  const handleCloseSeeDetaisDialog = () => {\n    setSelectedBooking(null);\n    setSeeDetailsDialogOpen(false);\n  }\n\n  const openDetailsDialog = (event, id) => {\n    const template = data.bookings.find(element => element._id === id);\n    if (template) {\n      setSelectedtemplate(template);\n      settemplateDialogTitle(`${template.templateID.toUpperCase()}`)\n      settemplateDialogSaveButtonText(\"Save Changes\")\n      settemplateDialogOpen(true)\n    }\n  }\n\n  const refreshClicked = (event) => {\n    setFilter('');\n    loadData()\n  }\n\n  const filterChanged = (event) => {\n    setFilter(event.target.value);\n  }\n\n  const handleSelectionChanged = (newSelection) => {\n    if (newSelection.length > 0) {\n      setSelectedRow(newSelection.rows[0]);\n    }\n\n  }\n\n  const [page, setPage] = React.useState(1);\n\n\n  const registerNewtemplateClicked = () => {\n    setSelectedtemplate(null)\n    settemplateDialogTitle('Create New Email Template')\n    settemplateDialogSaveButtonText(\"Save\")\n    settemplateDialogOpen(true)\n  }\n\n  const [selectedtemplate, setSelectedtemplate] = React.useState(null)\n  const [templateDialogOpen, settemplateDialogOpen] = React.useState(false)\n  const [templateDialogTitle, settemplateDialogTitle] = React.useState('')\n  const [templateDialogSaveButtonText, settemplateDialogSaveButtonText] = React.useState('')\n\n\n  const handleClosetemplateDialog = () => {\n    settemplateDialogOpen(false)\n  }\n\n\n  return (\n    <React.Fragment>\n      {data.isFetching && (\n        <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\n          <LinearProgress color=\"primary\" />\n        </div>\n      )}\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"space-between\"\n        alignItems=\"flex-end\"\n      >\n        <Grid item md={4}>\n          <div style={{ textAlign: \"left\", paddingLeft: \"10px\" }}>\n            <Grid\n              container\n              direction=\"row\"\n              justify=\"flex-start\"\n              alignItems=\"center\"\n            >\n              <Grid item>\n                <span style={{ paddingRight: \"15px\", color: \"#555\" }}>\n                  {\" \"}\n                  {getTableIcon(props.date)}{\" \"}\n                </span>\n              </Grid>\n              <Grid item>\n                <span\n                  style={{\n                    fontSize: \"1.4rem\",\n                    fontWeight: \"600\",\n                    color: \"#444\",\n                  }}\n                >\n                  {\" \"}\n                  {getTableTitle(props.date)}{\" \"}\n                </span>\n              </Grid>\n              <Grid item>\n                <Tooltip title=\"Refresh\" placement=\"right\">\n                  <IconButton\n                    color=\"primary\"\n                    className={classes.refreshButton}\n                    onClick={refreshClicked}\n                  >\n                    <RefreshIcon />\n                  </IconButton>\n                </Tooltip>\n              </Grid>\n            </Grid>\n          </div>\n        </Grid>\n\n        <Grid item md={6}>\n          <div style={{ paddingBottom: \"10px\" }}>\n            <Button\n              // className={classes.ExportToExcelButton}\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={registerNewtemplateClicked}\n              startIcon={\n                <AddIcon />\n              }\n            >\n              Create New Email Template\n              </Button>\n          </div>\n        </Grid>\n\n        {data.isFetching && <div className={classes.HideNowRows}></div>}\n\n        {/* <Grid item md={3}>\n          <TextField\n            variant=\"standard\"\n            value={filter}\n            onChange={filterChanged}\n            margin=\"normal\"\n            size=\"small\"\n            id=\"filter\"\n            label=\"Filter\"\n            name=\"filter\"\n            autoComplete=\"off\"\n          />\n        </Grid> */}\n\n      </Grid>\n\n      <div style={{ height: 700, width: \"100%\" }}>\n        <DataGrid\n          rows={data.bookings}\n          columns={columns}\n          autoPageSize\n          page={page}\n          onPageChange={(params) => {\n            setPage(params.page);\n          }}\n          onSelectionChange={handleSelectionChanged}\n        />\n      </div>\n\n\n      <BookingDialog\n        booking={selectedBooking}\n        open={seeDetailsDialogOpen && selectedBooking && selectedBooking.fullname}\n        onClose={handleCloseSeeDetaisDialog}\n      />\n\n      <EmailTemplateDialog\n        template={selectedtemplate}\n        open={templateDialogOpen}\n        handleClose={handleClosetemplateDialog}\n        title={templateDialogTitle}\n        saveButtonText={templateDialogSaveButtonText}\n      />\n\n    </React.Fragment>\n  );\n}","import DashboardIcon from \"@material-ui/icons/Dashboard\";\nimport NewReleasesIcon from \"@material-ui/icons/NewReleases\";\nimport HistoryIcon from \"@material-ui/icons/History\";\nimport TimelineIcon from \"@material-ui/icons/Timeline\";\nimport DescriptionIcon from \"@material-ui/icons/Description\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport AutorenewIcon from \"@material-ui/icons/Autorenew\";\nimport LiveTvIcon from \"@material-ui/icons/LiveTv\";\nimport PlaylistAddCheckIcon from \"@material-ui/icons/PlaylistAddCheck\";\nimport WarningIcon from \"@material-ui/icons/Warning\";\nimport AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport HourglassEmptyIcon from \"@material-ui/icons/HourglassEmpty\";\nimport DateRangeIcon from \"@material-ui/icons/DateRange\";\nimport EventNoteIcon from \"@material-ui/icons/EventNote\";\nimport AirplanemodeActiveIcon from \"@material-ui/icons/AirplanemodeActive\";\nimport AccessibilityIcon from '@material-ui/icons/Accessibility';\nimport CallIcon from '@material-ui/icons/Call';\nimport MailOutlineIcon from '@material-ui/icons/MailOutline';\nimport SmsIcon from '@material-ui/icons/Sms';\nimport DraftsIcon from '@material-ui/icons/Drafts';\n\n\n// OV Admin ----------------\nimport OVBookingTable from \"./OV/BookingTable\";\nimport OVCalendarView from \"./OV/calendar-admin/CalendarView\";\nimport PatientsTable from \"./OV/PatientsTable\";\nimport EmailTemplstesTable from \"./OV/EmailTemplatesTable\"\n\n//---------------\n\nexport const MenuList_OV_Admin = [\n  {\n    index: 1,\n    id: `recentBookings`,\n    title: `Recent Bookings`,\n    icon: <AutorenewIcon />,\n  },\n  {\n    index: 2,\n    id: `todayBookings`,\n    title: `Today's Bookings`,\n    icon: <NewReleasesIcon />,\n  },\n  {\n    index: 3,\n    id: `oldBookings`,\n    title: `Old Bookings`,\n    icon: <HistoryIcon />,\n  },\n  {\n    index: 4,\n    id: `futureBookings`,\n    title: `Future Bookings`,\n    icon: <TimelineIcon />,\n  },\n  {\n    index: 5,\n    id: `allBookings`,\n    title: `All Bookings`,\n    icon: <DescriptionIcon />,\n  },\n  {\n    index: 6,\n    id: `traceBookings`,\n    title: `Patients to Trace`,\n    icon: <CallIcon />,\n  },\n  {\n    index: 7,\n    id: `deletedBookings`,\n    title: `Archived Records`,\n    icon: <DeleteIcon />,\n  },\n  {\n    index: 8,\n    id: `calendarView`,\n    title: `Calendar View`,\n    icon: <DateRangeIcon />,\n  },\n  {\n    index: 9,\n    id: `patientsList`,\n    title: `Patients`,\n    icon: <AccessibilityIcon />,\n  },\n  {\n    index: 10,\n    id: `emailTemplates`,\n    title: `Email Templates`,\n    icon: <DraftsIcon />,\n  },\n  {\n    index: 11,\n    id: `smsTemplates`,\n    title: `SMS Templates`,\n    icon: <SmsIcon />,\n  },\n\n];\n\n\n\nexport const MenuList_Admin = [\n  { index: 0, id: `dashboard`, title: `Dashboard`, icon: <DashboardIcon /> },\n  {\n    index: 1,\n    id: `recentBookings`,\n    title: `Recent Bookings`,\n    icon: <AutorenewIcon />,\n  },\n  {\n    index: 2,\n    id: `todayBookings`,\n    title: `Today's Bookings`,\n    icon: <NewReleasesIcon />,\n  },\n  {\n    index: 3,\n    id: `oldBookings`,\n    title: `Old Bookings`,\n    icon: <HistoryIcon />,\n  },\n  {\n    index: 4,\n    id: `futureBookings`,\n    title: `Future Bookings`,\n    icon: <TimelineIcon />,\n  },\n  {\n    index: 5,\n    id: `allBookings`,\n    title: `All Bookings`,\n    icon: <DescriptionIcon />,\n  },\n  {\n    index: 6,\n    id: `deletedBookings`,\n    title: `Deleted Records`,\n    icon: <DeleteIcon />,\n  },\n\n  {\n    index: 7,\n    id: `calendarView`,\n    title: `Calendar View`,\n    icon: <DateRangeIcon />,\n  },\n\n  { index: 8, id: `findByRef`, title: `Find By Ref No`, icon: <SearchIcon /> },\n];\n\nexport const MenuList_Gynae = [\n  { index: 0, id: `dashboard`, title: `Dashboard`, icon: <DashboardIcon /> },\n  {\n    index: 1,\n    id: `recentBookings`,\n    title: `Recent Bookings`,\n    icon: <AutorenewIcon />,\n  },\n  {\n    index: 2,\n    id: `todayBookings`,\n    title: `Today's Bookings`,\n    icon: <NewReleasesIcon />,\n  },\n  {\n    index: 3,\n    id: `oldBookings`,\n    title: `Old Bookings`,\n    icon: <HistoryIcon />,\n  },\n  {\n    index: 4,\n    id: `futureBookings`,\n    title: `Future Bookings`,\n    icon: <TimelineIcon />,\n  },\n  {\n    index: 5,\n    id: `allBookings`,\n    title: `All Bookings`,\n    icon: <DescriptionIcon />,\n  },\n  {\n    index: 6,\n    id: `deletedBookings`,\n    title: `Deleted Records`,\n    icon: <DeleteIcon />,\n  },\n  {\n    index: 7,\n    id: `calendarView`,\n    title: `Calendar View`,\n    icon: <DateRangeIcon />,\n  },\n  { index: 8, id: `findByRef`, title: `Find By Ref No`, icon: <SearchIcon /> },\n];\n\nexport const MenuList_GP = [\n  { index: 0, id: `dashboard`, title: `Dashboard`, icon: <DashboardIcon /> },\n  {\n    index: 1,\n    id: `recentBookings`,\n    title: `Recent Bookings`,\n    icon: <AutorenewIcon />,\n  },\n  {\n    index: 2,\n    id: `todayBookings`,\n    title: `Today's Bookings`,\n    icon: <NewReleasesIcon />,\n  },\n  {\n    index: 3,\n    id: `oldBookings`,\n    title: `Old Bookings`,\n    icon: <HistoryIcon />,\n  },\n  {\n    index: 4,\n    id: `futureBookings`,\n    title: `Future Bookings`,\n    icon: <TimelineIcon />,\n  },\n  {\n    index: 5,\n    id: `allBookings`,\n    title: `All Bookings`,\n    icon: <DescriptionIcon />,\n  },\n  {\n    index: 6,\n    id: `deletedBookings`,\n    title: `Deleted Records`,\n    icon: <DeleteIcon />,\n  },\n  {\n    index: 7,\n    id: `calendarView`,\n    title: `Calendar View`,\n    icon: <DateRangeIcon />,\n  },\n  { index: 8, id: `findByRef`, title: `Find By Ref No`, icon: <SearchIcon /> },\n];\n\nexport const MenuList_STD = [\n  { index: 0, id: `dashboard`, title: `Dashboard`, icon: <DashboardIcon /> },\n  {\n    index: 1,\n    id: `recentBookings`,\n    title: `Recent Bookings`,\n    icon: <AutorenewIcon />,\n  },\n  {\n    index: 2,\n    id: `todayBookings`,\n    title: `Today's Bookings`,\n    icon: <NewReleasesIcon />,\n  },\n  {\n    index: 3,\n    id: `oldBookings`,\n    title: `Old Bookings`,\n    icon: <HistoryIcon />,\n  },\n  {\n    index: 4,\n    id: `futureBookings`,\n    title: `Future Bookings`,\n    icon: <TimelineIcon />,\n  },\n  {\n    index: 5,\n    id: `allBookings`,\n    title: `All Bookings`,\n    icon: <DescriptionIcon />,\n  },\n  {\n    index: 6,\n    id: `deletedBookings`,\n    title: `Deleted Records`,\n    icon: <DeleteIcon />,\n  },\n  {\n    index: 7,\n    id: `calendarView`,\n    title: `Calendar View`,\n    icon: <DateRangeIcon />,\n  },\n  { index: 8, id: `findByRef`, title: `Find By Ref No`, icon: <SearchIcon /> },\n];\n\nexport const MenuList_PCR = [\n  { index: 0, id: `dashboard`, title: `Dashboard`, icon: <DashboardIcon /> },\n  {\n    index: 1,\n    id: `recentBookings`,\n    title: `Recent Bookings`,\n    icon: <AutorenewIcon />,\n  },\n  {\n    index: 2,\n    id: `todayBookings`,\n    title: `Today's Bookings`,\n    icon: <NewReleasesIcon />,\n  },\n  {\n    index: 3,\n    id: `liveBookings`,\n    title: `Live Bookings`,\n    icon: <LiveTvIcon />,\n  },\n  { index: 4, id: `oldBookings`, title: `Old Bookings`, icon: <HistoryIcon /> },\n  {\n    index: 5,\n    id: `futureBookings`,\n    title: `Future Bookings`,\n    icon: <TimelineIcon />,\n  },\n  {\n    index: 6,\n    id: `allBookings`,\n    title: `All Bookings`,\n    icon: <DescriptionIcon />,\n  },\n  {\n    index: 7,\n    id: `completedBookings`,\n    title: `Completed Bookings`,\n    icon: <PlaylistAddCheckIcon />,\n  },\n  {\n    index: 8,\n    id: `positiveBookings`,\n    title: `Positive Results`,\n    icon: <AddCircleOutlineIcon />,\n  },\n  {\n    index: 9,\n    id: `latebookings`,\n    title: `40 Hours Late`,\n    icon: <HourglassEmptyIcon />,\n  },\n  {\n    index: 10,\n    id: `deletedBookings`,\n    title: `Deleted Records`,\n    icon: <DeleteIcon />,\n  },\n  {\n    index: 11,\n    id: `trBookings`,\n    title: `TR Bookings`,\n    icon: <AirplanemodeActiveIcon />,\n  },\n  {\n    index: 12,\n    id: `unmatchedRecords`,\n    title: `Unmatched Records`,\n    icon: <WarningIcon />,\n  },\n  {\n    index: 13,\n    id: `calendarView`,\n    title: `Calendar View`,\n    icon: <DateRangeIcon />,\n  },\n  // {\n  //   index: 14,\n  //   id: `adminCalendarView`,\n  //   title: `Admin Calendar`,\n  //   icon: <EventNoteIcon />,\n  // },\n  { index: 15, id: `findByRef`, title: `Find By Ref No`, icon: <SearchIcon /> },\n];\n\nexport const getMenuContent = (role, index) => {\n   if (role === \"ovadmin\") {\n    switch (index) {\n      case 1:\n        return <OVBookingTable date=\"recent\" />;\n      case 2:\n        return <OVBookingTable date=\"today\" />;\n      case 3:\n        return <OVBookingTable date=\"old\" />;\n      case 4:\n        return <OVBookingTable date=\"future\" />;\n      case 5:\n        return <OVBookingTable date=\"all\" />;\n      case 6:\n        return <OVBookingTable date=\"trace\" />; \n      case 7:\n        return <OVBookingTable date=\"deleted\" />;\n      case 8:\n        return <OVCalendarView />;  \n      case 9:\n        return <PatientsTable />;  \n      case 10:\n          return <EmailTemplstesTable />\n  \n      default:\n        return `Page Not Found!`;\n    }\n  } else {\n    return `Page Not Found!`;\n  }\n};\n\nexport const getMenuRole = (role) => {\n  switch (role) {\n    case \"ovadmin\":\n      return MenuList_OV_Admin;\n    default:\n      return [];\n  }\n};\n\nexport const getMenuId = (role, index) => {\n  const MenuList = getMenuRole(role);\n  for (var i = 0; i < MenuList.length; i++) {\n    if (MenuList[i].index === index) {\n      return MenuList[i].id;\n    }\n  }\n\n  return `Page Not Found!`;\n};\n\nexport const getMenuIndex = (role, id) => {\n  const MenuList = getMenuRole(role);\n  for (var i = 0; i < MenuList.length; i++) {\n    if (MenuList[i].id === id) {\n      return MenuList[i].index;\n    }\n  }\n\n  return -1;\n};\n","export const getRole = () => {\n    return sessionStorage.getItem('medexadmin-role')\n}\n\nexport const setRole = (role) => {\n    return sessionStorage.setItem('medexadmin-role', role)\n}\n\nexport const clearRole = (role) => {\n    return sessionStorage.removeItem('medexadmin-role')\n}","import React from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Link from \"@material-ui/core/Link\";\nimport Box from \"@material-ui/core/Box\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport GlobalState from \"./GlobalState\";\nimport Alert from \"@material-ui/lab/Alert\";\n\nimport logoImage from \"./images/optimal-vision-logo.png\"\n\nimport {\n  Grid,\n  AppBar,\n  Checkbox,\n  FormControl,\n  FormControlLabel,\n  InputAdornment,\n  InputLabel,\n  OutlinedInput,\n  Paper,\n  Backdrop,\n  CircularProgress,\n} from \"@material-ui/core\";\nimport { IconButton, Toolbar } from \"@material-ui/core\";\nimport { Visibility, VisibilityOff } from \"@material-ui/icons\";\nimport clsx from \"clsx\";\nimport Copyright from \"./CopyRight\";\n\nimport { useHistory } from \"react-router-dom\";\nimport UserService from \"./services/UserService\";\nimport { getMenuId } from \"./MenuList\";\n\nimport { useMediaQuery } from 'react-responsive'\nimport { borderRadius } from \"@material-ui/system\";\nimport { setRole } from \"./Role\";\nimport { getGlobalPath } from \"./GlobalPath\";\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    minHeight: \"100vh\",\n  },\n  image: {\n    backgroundImage: \"url(/images/bg.jpg)\",\n    backgroundRepeat: \"no-repeat\",\n    backgroundColor:\n      theme.palette.type === \"light\"\n        ? theme.palette.grey[50]\n        : theme.palette.grey[900],\n    backgroundSize: \"cover\",\n    backgroundPosition: \"center\",\n  },\n  paper: {\n    // margin: theme.spacing(15, 2),\n    padding: theme.spacing(4,4),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    position: \"relative\"\n    // border: `2px solid ${theme.palette.primary.main}`,\n    // borderRadius: \"8px\"\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n    color: \"#f5f5f5\",\n  },\n\n  margin: {\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n  },\n\n  alert: {\n    width: \"100%\",\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n  },\n\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: \"#fff\",\n  },\n\n  pageBg:{\n    paddingTop: theme.spacing(5),\n   \n    background: \"linear-gradient(274deg, rgba(255,255,255,1) 0%, rgba(255,255,255,1) 5%, rgba(210,210,210,1) 100%)\",\n    height: \"100vh\",\n    margin: 0,\n    padding:0,\n  },\n\n  appbarCenter: {\n    position: \"absolute\",\n    // width: \"260px\",\n    top: \"-40px\",\n    right: \"0\",\n    marginLeft: \"-145px\",\n    alignItems: \"center\",\n    justify: \"center\",\n    display: \"flex\",\n    backgroundColor: \"#fff\",\n    padding: \"5px 20px 15px 20px\",\n    borderRadius: \"8px\"\n  },\n\n  logoImage: {\n    width: \"30px\",\n    height: \"30px\",\n    marginLeft: \"0px\",\n  },\n\n  appbarTitle: {\n    color: \"#00a1c5\",\n    fontSize: \"1.2rem\",\n    fontWeight: \"500\",\n    marginRight: \"15px\",\n  },\n\n  adminPanelLabel: {\n    color: theme.palette.secondary.main, \n    fontWeight: \"600\",\n    marginBottom:\"20px\"\n  }\n\n\n\n\n}));\n\nexport default function SignIn() {\n  const classes = useStyles();\n  const [state, setState] = React.useContext(GlobalState);\n  const isMobile = useMediaQuery({ maxWidth: 1224 })\n\n\n  let history = useHistory();\n\n  const [password, setPassword] = React.useState(\"\");\n\n  const [username, setUsername] = React.useState(\"\");\n\n  const [saveChecked, setSaveChecked] = React.useState(false);\n\n  const [showPassword, setShowPassword] = React.useState(false);\n\n  const [error, setError] = React.useState(null);\n  const [submiting, setSubmiting] = React.useState(false);\n\n  const signIn = () => {\n    setSubmiting(true);\n\n    UserService.signIn({\n      username: username,\n      password: password,\n    })\n      .then((res) => {\n        setSubmiting(false);\n        if (res.data.status === \"OK\") {\n          setError(null);\n          const token = res.data.token;\n          if (saveChecked) {\n            localStorage.setItem(\"ovadmin-auth-token\", token);\n          } else {\n            sessionStorage.setItem(\"ovadmin-auth-token\", token);\n          }\n\n          setState((state) => ({ ...state, signedIn: true }));\n          setRole(res.data.roles[0])\n          setState((state) => ({ ...state, currentMenuIndex: 1 }));\n          history.push(getGlobalPath(`/${getMenuId(res.data.roles[0], 1)}`));\n        } else if (res.data.status === \"FAILED\") {\n          setError(res.data.error);\n        } else {\n          setError(\"Sorry, something went wrong, please try again.\");\n        }\n      })\n      .catch((err) => {\n        setSubmiting(false);\n        console.error(err);\n        setError(\"Sorry, something went wrong, please try again.\");\n      });\n  };\n\n  const usernameChanged = (event) => {\n    setUsername(event.target.value);\n    setError(null);\n  };\n\n  const passwordChanged = (event) => {\n    setPassword(event.target.value);\n    setError(null);\n  };\n\n  const handleClickShowPassword = () => {\n    setShowPassword(!showPassword);\n  };\n\n  const handleMouseDownPassword = (event) => {\n    event.preventDefault();\n  };\n\n  const saveCheckedChanged = (event) => {\n    setSaveChecked(event.target.checked);\n  };\n\n  return (\n    <div className={classes.pageBg}>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n\n        <Paper elevation={20}>\n          <div className={classes.paper}>\n            {/* <div className={classes.appbarCenter}>\n              <span className={classes.appbarTitle}>\n                Medical Express Clinic\n              </span>\n\n              <img\n                className={classes.logoImage}\n                src={getGlobalPath(\"/images/logo.png\")}\n                alt=\"logo image\"\n              />\n            </div> */}\n\n            <img src={logoImage} alt=\"Optimal Vision\" style={{marginBottom:\"20px\"}}/>\n\n            <Avatar className={classes.avatar}>\n              <LockOutlinedIcon />\n            </Avatar>\n            <Typography\n              component=\"h1\"\n              variant=\"h6\"\n              className={classes.adminPanelLabel}\n            >\n              Admin Panel\n            </Typography>\n\n            {error && (\n              <div className={classes.alert}>\n                <Alert severity=\"error\">\n                  {\" \"}\n                  <div style={{ lineHeight: \"1.5rem\", textAlign: \"justify\" }}>\n                    {error}\n                  </div>\n                </Alert>\n              </div>\n            )}\n\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"username\"\n              label=\"Username\"\n              name=\"email\"\n              autoComplete=\"username\"\n              value={username}\n              onChange={usernameChanged}\n              on\n              autoFocus\n            />\n            <FormControl\n              fullWidth\n              required\n              className={clsx(classes.margin, classes.textField)}\n              variant=\"outlined\"\n              onKeyPress={(event) => {\n                if (event.key === \"Enter\") {\n                  signIn();\n                }\n              }}\n            >\n              <InputLabel htmlFor=\"outlined-adornment-password\">\n                {\" \"}\n                Password{\" \"}\n              </InputLabel>\n              <OutlinedInput\n                id=\"outlined-adornment-password\"\n                name=\"outlined-adornment-password\"\n                type={showPassword ? \"text\" : \"password\"}\n                value={password}\n                onChange={passwordChanged}\n                autoComplete=\"current-password\"\n                endAdornment={\n                  <InputAdornment position=\"end\">\n                    <IconButton\n                      tabindex=\"-1\"\n                      aria-label=\"toggle password visibility\"\n                      onClick={handleClickShowPassword}\n                      onMouseDown={handleMouseDownPassword}\n                    >\n                      {showPassword ? <Visibility /> : <VisibilityOff />}\n                    </IconButton>\n                  </InputAdornment>\n                }\n                labelWidth={100}\n              />\n            </FormControl>\n\n            <FormControlLabel\n              style={{ textAlign: \"left\", width: \"100%\" }}\n              control={\n                <Checkbox\n                  value=\"remember\"\n                  color=\"primary\"\n                  checked={saveChecked}\n                  onChange={saveCheckedChanged}\n                />\n              }\n              label=\"Remember me\"\n            />\n            <Button\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={signIn}\n              className={classes.submit}\n            >\n              Sign In\n            </Button>\n          </div>\n        </Paper>\n\n        <Backdrop className={classes.backdrop} open={submiting}>\n          <Grid\n            container\n            direction=\"column\"\n            justify=\"center\"\n            alignItems=\"center\"\n            spacing={2}\n          >\n            <Grid item>\n              <CircularProgress color=\"inherit\" />\n            </Grid>\n            <Grid item>\n              <span style={{ textAlign: \"center\", color: \"#fff\" }}>\n                {\" \"}\n                {/* Please wait ...{\" \"} */}\n              </span>\n            </Grid>\n          </Grid>\n        </Backdrop>\n\n        <Box mt={5} style={{ color: \"#eee\" }}>\n          {/* <Copyright /> */}\n        </Box>\n      </Container>\n    </div>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useHistory } from \"react-router-dom\";\n\nimport {\n  Badge,\n  Divider,\n  Grid,\n  IconButton,\n  ListItemIcon,\n  Tooltip,\n} from \"@material-ui/core\";\nimport GlobalState from \"./GlobalState\";\nimport { List, ListItem } from \"@material-ui/core\";\n\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport { getMenuRole, getMenuId } from \"./MenuList\";\nimport { border, borderBottom } from \"@material-ui/system\";\nimport { getGlobalPath } from \"./GlobalPath\";\n\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\",\n  },\n  fixedHeight: {\n    height: 240,\n  },\n\n  icon: {\n    fontSize: \"1rem\",\n    color: \"#777\",\n    cursor: \"pointer\",\n    paddingTop: \"10px\",\n    paddingBottom: \"8px\",\n    borderBottom: \"1px solid #eee\",\n  },\n\n  iconSelected: {\n    color: \"#fff\",\n    backgroundColor:  theme.palette.primary.main,\n    transition: \"all 0.1s ease-in-out\"\n  },\n\n  menuText: {\n    fontSize: \"1rem\",\n    fontWeight: \"500\"\n  },\n\n  Badge:{\n    backgroundColor: \"rgb(220, 0, 78)\",\n    color: \"#fff\",\n    fontWeight: \"600\",\n    textAlign:\"center\",\n    borderRadius: \"50%\",\n    fontSize: \"0.85rem\",\n    lineHeight: \"0.85rem\",\n    padding:\"7px\",\n    marginTop:\"9px\",\n    width:\"28px\"\n\n  }\n}));\n\nexport default function MyMenu() {\n  const classes = useStyles();\n  const [state, setState] = React.useContext(GlobalState);\n\n  const [selectedIndex, setSelectedIndex] = React.useState(0);\n\n  let history = useHistory();\n\n  const updateShouldRefundsCount = async () =>\n  {\n  }\n\n  useEffect(() => {\n    setSelectedIndex(state.currentMenuIndex);\n    updateShouldRefundsCount()\n  }, [state.currentMenuIndex]);\n\n  const handleListItemClick = (event, index) => {\n    setSelectedIndex(index);\n    setState((state) => ({ ...state, currentMenuIndex: index }));\n\n    history.push(getGlobalPath(`/${getMenuId(state.role,index)}`));\n  };\n\n  return (\n    <React.Fragment>\n      <List>\n        {state.role &&\n          getMenuRole(state.role).map(\n            (item) =>\n              !item.hidden && (\n                // <ListItem button selected={selectedIndex === item.index} onClick={(event) => handleListItemClick(event, item.index)}>\n                // <ListItemIcon>\n                //     {item.icon}\n                // </ListItemIcon>\n                // <ListItemText primary={`${item.title}`} />\n                // </ListItem>\n                <React.Fragment key={`${item.id}`}>\n                  <div\n                    key={`${item.id}`}\n                    className={clsx(\n                      classes.icon,\n                      selectedIndex === item.index && classes.iconSelected\n                    )}\n                    onClick={(event) => handleListItemClick(event, item.index)}\n                  >\n                    <Grid\n                      container\n                      direction=\"row\"\n                      justify=\"flex-start\"\n                      alignItems=\"flex-start\"\n                      spacing={3}\n                      style={{paddingLeft:\"15px\"}}\n                    >\n                      <Grid item>{item.icon}</Grid>\n\n                      <Grid item style={{textAlign:\"left\"}}>\n                        <span\n                          className={classes.menuText}\n                        >{`${item.title}`}</span>{\" \"}\n                      </Grid>\n\n\n                    </Grid>\n                  </div>\n                </React.Fragment>\n              )\n          )}\n      </List>\n    </React.Fragment>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Box from \"@material-ui/core/Box\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Container from \"@material-ui/core/Container\";\nimport Link from \"@material-ui/core/Link\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\n\nimport { Avatar, Button, Grid, Tooltip, withStyles } from \"@material-ui/core\";\nimport GlobalState from \"./GlobalState\";\nimport MyMenu from \"./Menu\";\nimport { getMenuContent, getMenuId, getMenuIndex } from \"./MenuList\";\n\nimport { useLocation, useHistory } from \"react-router-dom\";\nimport Copyright from \"./CopyRight\";\nimport { useMediaQuery } from \"react-responsive\";\nimport PersonOutlineIcon from \"@material-ui/icons/PersonOutline\";\nimport AppsIcon from \"@material-ui/icons/Apps\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Menu from \"@material-ui/core/Menu\";\nimport dateformat from \"dateformat\";\nimport { getRole, setRole, clearRole } from \"./Role\";\nimport { getGlobalPath, getMenuIdFromGlobalPath } from \"./GlobalPath\";\n\nimport logoImage from \"./images/optimal-vision-logo.png\"\n\nconst drawerWidth = 240;\n\nconst StyledMenu = withStyles((theme) => ({\n  paper: {\n    marginTop: \"10px\",\n    // marginRight: \"5px\",\n    width: \"200px\",\n    height: \"200px\",\n    border: `1px solid #ddd`,\n    borderRadius: \"10px\",\n    paddingTop: \"10px\",\n  },\n}))((props) => (\n  <Menu\n    elevation={4}\n    getContentAnchorEl={null}\n    anchorOrigin={{\n      vertical: \"bottom\",\n      horizontal: \"center\",\n    }}\n    transformOrigin={{\n      vertical: \"top\",\n      horizontal: \"center\",\n    }}\n    {...props}\n  />\n));\n\nconst StyledMenuApps = withStyles((theme) => ({\n  paper: {\n    marginTop: \"5px\",\n    // marginRight: \"5px\",\n    width: \"280px\",\n    height: \"280px\",\n    border: `1px solid #ddd`,\n    borderRadius: \"10px\",\n    padding: \"10px\",\n  },\n}))((props) => (\n  <Menu\n    elevation={4}\n    getContentAnchorEl={null}\n    anchorOrigin={{\n      vertical: \"bottom\",\n      horizontal: \"center\",\n    }}\n    transformOrigin={{\n      vertical: \"top\",\n      horizontal: \"center\",\n    }}\n    {...props}\n  />\n));\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    padding: \"0 8px\",\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    // marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: \"none\",\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: \"relative\",\n    whiteSpace: \"nowrap\",\n    overflowX: \"hidden\",\n    width: drawerWidth,\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n\n    [theme.breakpoints.down(\"sm\")]: {\n      opacity: 0.9,\n    },\n  },\n  drawerPaperClose: {\n    overflowX: \"hidden\",\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up(\"sm\")]: {\n      width: theme.spacing(9),\n    },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: \"100vh\",\n    overflow: \"auto\",\n  },\n  container: {\n    paddingTop: theme.spacing(2),\n    paddingBottom: theme.spacing(2),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\",\n  },\n  fixedHeight: {\n    height: 240,\n  },\n\n  appbarTitle: {\n    color: \"#00a1c5\",\n    fontSize: \"1.2rem\",\n    fontWeight: \"500\",\n    marginRight: \"15px\",\n  },\n\n  appbarCenter: {\n    position: \"fixed\",\n    width: \"260px\",\n    top: \"10px\",\n    left: \"50%\",\n    marginLeft: \"-130px\",\n    alignItems: \"center\",\n    justify: \"center\",\n    display: \"flex\",\n  },\n\n  logoImage: {\n    width: \"204px\",\n    height: \"45px\",\n    // marginLeft: \"0px\",\n  },\n\n  logoImageMenu: {\n    width: \"136px\",\n    height: \"30px\",\n  },\n\n\n  userAvatar: {\n    backgroundColor: \"#fff\",\n    borderColor: \"#aaa\",\n    border: \"1px solid\",\n    color: \"#aaa\",\n    cursor: \"pointer\",\n  },\n\n  userAvatarSelected: {\n    backgroundColor: \"#fff\",\n    borderColor: theme.palette.primary.main,\n    border: \"1px solid\",\n    color: theme.palette.primary.main,\n    cursor: \"pointer\",\n  },\n\n  userAvatarBig: {\n    backgroundColor: \"#fff\",\n    borderColor: theme.palette.primary.main,\n    border: \"1px solid\",\n    color: theme.palette.primary.main,\n    width: \"60px\",\n    height: \"60px\",\n  },\n\n  appBarText: {\n    color: \"#888\",\n    [theme.breakpoints.down(\"sm\")]: {\n      display: \"none\",\n    },\n  },\n\n  appBarAppsIcon: {\n    // color: \"#888\",\n    cursor: \"pointer\",\n    fontSize: \"1.8rem\",\n  },\n\n  appBarAppsIconSelected: {\n    cursor: \"pointer\",\n    fontSize: \"1.8rem\",\n    color: theme.palette.primary.main,\n  },\n\n  usernameLabel: {\n    fontSize: \"1.2rem\",\n    color: theme.palette.primary.main,\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n  },\n\n  lastLoginLabel: {\n    color: \"#777\",\n    paddingTop: \"5px\",\n  },\n\n  appsLogo: {\n    width: \"70px\",\n    height: \"70px\",\n  },\n\n  appsBox: {\n    cursor: \"pointer\",\n    transition: \"all 0.1s ease-in-out\",\n    padding: \"2px\",\n    borderBottom: `5px solid #fff`,\n    borderRadius: \"5px\",\n    // border: \"2px solid #fff\",\n    \"&:hover\": {\n      //      border: `2px solid ${theme.palette.primary.main}`,\n      //      borderRadius: \"10px\",\n      borderBottom: `5px solid ${theme.palette.primary.main}`,\n      transition: \"all 0.1s ease-in-out\",\n    },\n  },\n\n  appsBoxSelected: {\n    cursor: \"pointer\",\n    transition: \"all 0.1s ease-in-out\",\n    padding: \"2px\",\n    borderBottom: `5px solid${theme.palette.primary.light}`,\n    borderRadius: \"5px\",\n    // border: \"2px solid #fff\",\n    \"&:hover\": {\n      //      border: `2px solid ${theme.palette.primary.main}`,\n      //      borderRadius: \"10px\",\n      borderBottom: `5px solid ${theme.palette.primary.light}`,\n      transition: \"all 0.1s ease-in-out\",\n    },\n  },\n\n  appsAdminLabel: {\n    color: \"#0264d4\",\n    fontWeight: \"600\",\n    fontSize: \"0.95rem\",\n    marginTop: \"-10px\",\n  },\n\n  appsPCRLabel: {\n    color: \"#4faef7\",\n    fontWeight: \"600\",\n    fontSize: \"0.95rem\",\n    marginTop: \"-10px\",\n  },\n\n  appsGynaeLabel: {\n    color: \"#e83caf\",\n    fontWeight: \"600\",\n    fontSize: \"0.95rem\",\n    marginTop: \"-10px\",\n  },\n\n  appsGPLabel: {\n    color: \"#f68529\",\n    fontWeight: \"600\",\n    fontSize: \"0.95rem\",\n    marginTop: \"-10px\",\n  },\n\n  appsSTDLabel: {\n    color: \"#f68529\",\n    fontWeight: \"600\",\n    fontSize: \"0.95rem\",\n    marginTop: \"-10px\",\n  },\n\n\n  \n\n  appsInToolbar: {\n    position: \"fixed\",\n    left: \"60px\",\n    top: \"-5px\",\n    height: \"65px\",\n    width: \"200px\",\n    overflow: \"hidden\",\n  },\n}));\n\nexport default function Dashboard() {\n  const classes = useStyles();\n  const [state, setState] = React.useContext(GlobalState);\n  const isMobile = useMediaQuery({ maxWidth: 768 });\n\n  const [open, setOpen] = React.useState(isMobile ? false : true);\n\n  const [currentMenuIndex, setCurrentMenuIndex] = React.useState(0);\n\n  const [anchorUserAvatar, setAnchorUserAvatar] = React.useState(null);\n  const handleUserAvatarClick = (event) => {\n    setAnchorUserAvatar(event.currentTarget);\n  };\n  const handleUserAvatarClose = () => {\n    setAnchorUserAvatar(null);\n  };\n\n  const [anchorApps, setAnchorApps] = React.useState(null);\n  const handleAppsClick = (event) => {\n    setAnchorApps(event.currentTarget);\n  };\n  const handleAppsClose = () => {\n    setAnchorApps(null);\n  };\n\n  const history = useHistory();\n\n  let location = useLocation();\n  React.useEffect(() => {\n    if (!state.role) return;\n    const index = getMenuIndex(\n      state.role,\n      getMenuIdFromGlobalPath(location.pathname)\n    );\n    setState((state) => ({ ...state, currentMenuIndex: index }));\n  }, [location]);\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, []);\n\n  useEffect(() => {\n    setCurrentMenuIndex(state.currentMenuIndex);\n    if (isMobile) {\n      setOpen(false);\n    }\n  }, [state.currentMenuIndex]);\n\n  const handleDrawerOpen = () => {\n    setOpen(!open);\n  };\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n\n  const handleLogout = () => {\n    localStorage.removeItem(\"ovadmin-auth-token\");\n    sessionStorage.removeItem(\"ovadmin-auth-token\");\n    clearRole();\n\n    setState((state) => ({ signedIn: false }));\n    history.replace(\"./login\");\n  };\n\n  const appsClicked = (role) => {\n    setRole(role);\n    setState((state) => ({ ...state, role: role }));\n    history.push(getGlobalPath(`/${getMenuId(role, 0)}`));\n    handleAppsClose();\n  };\n\n  const getAppsLogo = (role) => {\n    switch (role) {\n      case \"admin\":\n        return (\n          <img\n            src={getGlobalPath(\"/images/admin.png\")}\n            className={classes.appsLogo}\n          />\n        );\n      case \"pcr\":\n        return (\n          <img\n            src={getGlobalPath(\"/images/corona.png\")}\n            className={classes.appsLogo}\n          />\n        );\n\n      case \"gynae\":\n        return (\n          <img\n            src={getGlobalPath(\"/images/woman.png\")}\n            className={classes.appsLogo}\n          />\n        );\n\n        case \"gp\":\n        return (\n          <img\n            src={getGlobalPath(\"/images/doctor.png\")}\n            className={classes.appsLogo}\n          />\n        ); \n\n        case \"std\":\n          return (\n            <img\n              src={getGlobalPath(\"/images/std-icon.png\")}\n              className={classes.appsLogo}\n            />\n          ); \n\n      default:\n        return null;\n    }\n  };\n\n  const getAppsLabel = (role) => {\n    switch (role) {\n      case \"admin\":\n        return <div className={classes.appsAdminLabel}> {\"Admin\"} </div>;\n      case \"pcr\":\n        return <div className={classes.appsPCRLabel}> {\"PCR\"} </div>;\n      case \"gynae\":\n        return <div className={classes.appsGynaeLabel}> {\"Gynae\"} </div>;\n        case \"gp\":\n          return <div className={classes.appsGPLabel}> {\"GP\"} </div>;\n          case \"std\":\n            return <div className={classes.appsSTDLabel}> {\"STD\"} </div>;\n  \n      default:\n        return null;\n    }\n  };\n\n  return (\n    <React.Fragment>\n      {state.userId && state.role && (\n        <React.Fragment>\n          <div className={classes.root}>\n            <CssBaseline />\n            <AppBar\n              style={{ backgroundColor: \"#fff\", color: \"#555\", height: \"60px\" }}\n              position=\"absolute\"\n              className={clsx(\n                classes.appBar,\n                false && open && classes.appBarShift\n              )}\n            >\n              <Toolbar className={classes.toolbar}>\n                <IconButton\n                  edge=\"start\"\n                  color=\"inherit\"\n                  aria-label=\"open drawer\"\n                  onClick={handleDrawerOpen}\n                  className={clsx(classes.menuButton)}\n                >\n                  <MenuIcon />\n                </IconButton>\n\n                <div className={classes.appsInToolbar}>\n                  <Grid container direction=\"row\" alignItems=\"center\">\n                    <Grid item>{getAppsLogo(state.role)}</Grid>\n                    <Grid item>\n                      <div style={{ paddingTop: \"8px\" }}>\n                        {getAppsLabel(state.role)}\n                      </div>\n                    </Grid>\n                  </Grid>\n                </div>\n\n                <div className={classes.appbarCenter}>\n                  {!isMobile && (\n                    <React.Fragment>\n                      <img\n                        className={classes.logoImage}\n                        src={logoImage}\n                        alt=\"logo image\"\n                      />\n                    </React.Fragment> \n                   )}\n                </div>\n\n                <div\n                  style={{\n                    display: \"flex\",\n                    justifyContent: \"flex-end\",\n                    width: \"100%\",\n                    paddingLeft: \"2%\",\n                  }}\n                >\n                  <Grid\n                    container\n                    spacing={2}\n                    direction=\"row-reverse\"\n                    justify=\"flex-start\"\n                    alignItems=\"center\"\n                  >\n                    <Grid item>\n                      <Avatar\n                        className={\n                          anchorUserAvatar\n                            ? classes.userAvatarSelected\n                            : classes.userAvatar\n                        }\n                        onClick={handleUserAvatarClick}\n                      >\n                        <IconButton>\n                          <PersonOutlineIcon />\n                        </IconButton>\n                      </Avatar>\n                    </Grid>\n\n                    {state.userId?.roles.find((e) => e === \"admin\") && (\n                      <Grid item>\n                        <IconButton onClick={handleAppsClick}>\n                          <AppsIcon\n                            className={\n                              anchorApps\n                                ? classes.appBarAppsIconSelected\n                                : classes.appBarAppsIcon\n                            }\n                          />\n                        </IconButton>\n                      </Grid>\n                    )}\n                  </Grid>\n                </div>\n              </Toolbar>\n            </AppBar>\n\n            <StyledMenu\n              id=\"user-avatar-menu\"\n              anchorEl={anchorUserAvatar}\n              keepMounted\n              open={Boolean(anchorUserAvatar)}\n              onClose={handleUserAvatarClose}\n            >\n              <Grid\n                container\n                direction=\"column\"\n                justify=\"center\"\n                alignItems=\"center\"\n              >\n                <Grid item>\n                  <Avatar className={classes.userAvatarBig}>\n                    <PersonOutlineIcon style={{ fontSize: \"2.5rem\" }} />\n                  </Avatar>\n                </Grid>\n                <Grid item>\n                  <div className={classes.usernameLabel}>\n                    {\" \"}\n                    {state.userId?.username}{\" \"}\n                  </div>\n                </Grid>\n                {/* <Grid item>\n                  <span style={{ color: \"#999\", fontSize: \"0.85rem\" }}>\n                    Logged in at :\n                  </span>\n                </Grid>\n                <Grid item>\n                  <div className={classes.lastLoginLabel}>\n                    {dateformat(state.userId?.lastLoginTimeStamp)}\n                  </div>\n                </Grid> */}\n\n                <Grid item>\n                  <Button\n                    onClick={handleLogout}\n                    variant=\"outlined\"\n                    color=\"secondary\"\n                    style={{\n                      marginTop: \"30px\",\n                      width: \"150px\",\n                      borderRadius: \"30px\",\n                    }}\n                  >\n                    Logout\n                  </Button>\n                </Grid>\n              </Grid>\n            </StyledMenu>\n\n            <StyledMenuApps\n              id=\"apps-menu\"\n              anchorEl={anchorApps}\n              keepMounted\n              open={Boolean(anchorApps)}\n              onClose={handleAppsClose}\n            >\n              <Grid container spacing={1}>\n                <Grid item>\n                  <Grid\n                    container\n                    direction=\"column\"\n                    justify=\"center\"\n                    alignItems=\"center\"\n                    className={\n                      state.role === \"admin\"\n                        ? classes.appsBoxSelected\n                        : classes.appsBox\n                    }\n                    onClick={() => appsClicked(\"admin\")}\n                  >\n                    <Grid item>{getAppsLogo(\"admin\")}</Grid>\n                    <Grid item>{getAppsLabel(\"admin\")}</Grid>\n                  </Grid>\n                </Grid>\n\n                <Grid item>\n                  <Grid\n                    container\n                    direction=\"column\"\n                    justify=\"center\"\n                    alignItems=\"center\"\n                    className={\n                      state.role === \"pcr\"\n                        ? classes.appsBoxSelected\n                        : classes.appsBox\n                    }\n                    onClick={() => appsClicked(\"pcr\")}\n                  >\n                    <Grid item>{getAppsLogo(\"pcr\")}</Grid>\n                    <Grid item>{getAppsLabel(\"pcr\")}</Grid>\n                  </Grid>\n                </Grid>\n\n                <Grid item>\n                  <Grid\n                    container\n                    direction=\"column\"\n                    justify=\"center\"\n                    alignItems=\"center\"\n                    className={\n                      state.role === \"gynae\"\n                        ? classes.appsBoxSelected\n                        : classes.appsBox\n                    }\n                    onClick={() => appsClicked(\"gynae\")}\n                  >\n                    <Grid item>{getAppsLogo(\"gynae\")}</Grid>\n                    <Grid item>{getAppsLabel(\"gynae\")}</Grid>\n                  </Grid>\n                </Grid>\n\n                <Grid item>\n                  <Grid\n                    container\n                    direction=\"column\"\n                    justify=\"center\"\n                    alignItems=\"center\"\n                    className={\n                      state.role === \"gp\"\n                        ? classes.appsBoxSelected\n                        : classes.appsBox\n                    }\n                    onClick={() => appsClicked(\"gp\")}\n                  >\n                    <Grid item>{getAppsLogo(\"gp\")}</Grid>\n                    <Grid item>{getAppsLabel(\"gp\")}</Grid>\n                  </Grid>\n                </Grid>\n\n                <Grid item>\n                  <Grid\n                    container\n                    direction=\"column\"\n                    justify=\"center\"\n                    alignItems=\"center\"\n                    className={\n                      state.role === \"std\"\n                        ? classes.appsBoxSelected\n                        : classes.appsBox\n                    }\n                    onClick={() => appsClicked(\"std\")}\n                  >\n                    <Grid item>{getAppsLogo(\"std\")}</Grid>\n                    <Grid item>{getAppsLabel(\"std\")}</Grid>\n                  </Grid>\n                </Grid>\n\n              </Grid>\n            </StyledMenuApps>\n\n            <Drawer\n              variant={isMobile ? \"temporary\" : \"persistent\"}\n              classes={{\n                paper: clsx(\n                  classes.drawerPaper,\n                  !open && classes.drawerPaperClose\n                ),\n              }}\n              open={open}\n            >\n              <div className={classes.toolbarIcon}>\n                <React.Fragment>\n                  <img\n                    className={classes.logoImageMenu}\n                    src={logoImage} \n                    alt=\"logo image\"\n\n                  />\n                </React.Fragment>\n                <IconButton onClick={handleDrawerClose}>\n                  <ChevronLeftIcon />\n                </IconButton>\n              </div>\n              <Divider />\n\n              <MyMenu />\n            </Drawer>\n\n            <main className={classes.content}>\n              <div className={classes.appBarSpacer} />\n              <Container\n                maxWidth={isMobile ? \"xs\" : \"xl\"}\n                className={classes.container}\n              >\n                {currentMenuIndex > 0 && getMenuContent(state.role, currentMenuIndex)}\n              </Container>\n            </main>\n          </div>\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n}\n","import UserService from \"./services/UserService\";\n\nexport async function getUserIdFromToken(token)\n{\n    try{\n       const res  = await UserService.checkToken({token: token})\n       if (res.data.status === 'OK')\n        {\n            return {username: res.data.userId, forename: res.data.forename, surname: res.data.surname, roles:res.data.roles, lastLoginTimeStamp: res.data.lastLoginTimeStamp}\n        }\n       else\n        {\n            return null\n        }\n    }\n    catch(err)\n    {\n        return null\n    }\n  \n}","import React from 'react';\n\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport GlobalState from './GlobalState';\n\n\n\n\nimport SignIn from './SignIn';\nimport Dashboard from './Dashboard';\n\nimport { useLocation, useHistory} from \"react-router-dom\";\nimport { getUserIdFromToken } from './TokenVerifier';\nimport UserService from './services/UserService';\nimport { getMenuId } from './MenuList';\nimport { getRole, setRole } from './Role';\nimport { getGlobalPath } from './GlobalPath';\n\n\nconst useStyles = makeStyles((theme) => ({\n\n    appBar: {\n        position: 'static',\n        backgroundColor: \"#333\",\n        color: \"#fff\",\n        //alignItems: 'center'\n    \n      },\n\n      signOutButton:{\n        color: \"#fff\",\n        marginRight : \"20px\",\n        fontWeight: \"500\"\n      },\n\n      title: {\n        flexGrow : 1\n      }\n\n\n}));\n\nexport default function Navigator() {\n\n    const classes = useStyles();\n    const [state, setState] = React.useContext(GlobalState);\n\n    const [loaded, setLoaded] = React.useState(false)\n\n    let history = useHistory();\n\n    const handleSignOut = () =>\n    {\n      setState(state => ({...state, signedIn: false}));\n\n    }\n\n    let location = useLocation();\n\n    React.useEffect(() => {\n\n      const checkToken = async () =>\n      {\n        const authToken = localStorage.getItem('ovadmin-auth-token') || sessionStorage.getItem('ovadmin-auth-token');\n        UserService.setToken(authToken)\n\n         if (!authToken)\n        {\n          setState(state => ({...state, signedIn: false, signedUp: false, forgotPassword: false}));\n          setLoaded(true)\n          history.push(getGlobalPath('/login'));\n        }\n        else\n        {\n           const userId = await getUserIdFromToken(authToken);\n           if (!userId)\n           {\n              setState(state => ({...state, signedIn: false, signedUp: false, forgotPassword: false}));\n              history.push(getGlobalPath('/login'));\n           }\n           else if (location.pathname === getGlobalPath('/') || location.pathname === getGlobalPath('/#') || location.pathname.startsWith(getGlobalPath('/login')))\n           {\n            if (!getRole())\n            {\n             setRole(userId.roles[0])\n            }\n             setState(state => ({...state, signedIn: true, signedUp: false, forgotPassword: false, userId: userId, role: getRole()}));\n            \n             history.push(getGlobalPath(`/${getMenuId(getRole(),1)}`));\n           }\n           else\n           {\n              if (!getRole())\n              {\n               setRole(userId.roles[0])\n              }\n             setState(state => ({...state, signedIn: true, userId: userId, role: getRole()}));\n           }\n\n           setLoaded(true)\n        }\n      }\n\n      checkToken();\n   \n    }, [location.pathname]);\n\n    const getComponentFromState = () =>\n    {\n\n      if (state.signedIn)\n      {\n        return <Dashboard/>\n      }\n      else\n      {\n          return <SignIn/>    \n      }\n    }\n\n    return (\n        <React.Fragment>\n            <CssBaseline />\n\n            {\n              loaded && (\n                getComponentFromState()\n              )\n            }\n        \n        </React.Fragment>\n    );\n}","import React, { Fragment, Suspense, lazy } from \"react\";\nimport { MuiThemeProvider, CssBaseline } from \"@material-ui/core\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport theme from \"./theme\";\nimport GlobalStyles from \"./GlobalStyles\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport GlobalState from \"./GlobalState\";\nimport Navigator from './Navigator';\n\n\n\n\n// Configure JSS\n\n\nfunction App() {\n  const [state, setState] = React.useState({currentMenuIndex:1});\n\n  return (\n    <GlobalState.Provider value={[state, setState]}>\n      <BrowserRouter>\n        <MuiThemeProvider theme={theme}>\n          <CssBaseline />\n          <GlobalStyles />\n\n       \n\n              <Navigator/>\n\n       \n\n\n        </MuiThemeProvider>\n      </BrowserRouter>\n    </GlobalState.Provider>\n  );\n}\n\nserviceWorker.register();\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <App />,\n  document.getElementById(\"root\")\n);\n","\n\n\nconst FormatDateFromString = (str) =>\n{\n    if (!str)\n    return ''\n    \n    return `${str.substr(8,2)}-${str.substr(5,2)}-${str.substr(0,4)}`;\n}\n\nconst FormatDateFromStringWithSlash = (str) =>\n{\n    return `${str.substr(8,2)}/${str.substr(5,2)}/${str.substr(0,4)}`;\n}\n\nconst RevertFormatDateFromString = (str) =>\n{\n    if (!str)\n    return ''\n\n    return `${str.substr(6,4)}-${str.substr(3,2)}-${str.substr(0,2)}`;\n}\n\n\nconst FormatDateFromStringShortYear = (str) =>\n{\n    if (!str)\n    return ''\n\n    return `${str.substr(8,2)}-${str.substr(5,2)}-${str.substr(2,2)}`;\n}\n\n\n\nmodule.exports = {\n    FormatDateFromString : FormatDateFromString,\n    FormatDateFromStringShortYear : FormatDateFromStringShortYear,\n    RevertFormatDateFromString: RevertFormatDateFromString,\n    FormatDateFromStringWithSlash: FormatDateFromStringWithSlash\n}"],"sourceRoot":""}