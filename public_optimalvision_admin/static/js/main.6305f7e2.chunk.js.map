{"version":3,"sources":["OV/PriceCalculator.js","theme.js","GlobalStyles.js","serviceWorker.js","GlobalState.js","images/optimal-vision-logo.png","GlobalPath.js","services/api.js","services/UserService.js","OV/services/api.js","OV/services/BookService.js","OV/services/PDFService.js","OV/Corporates.js","OV/PayDialog.js","Admin/calendar-admin/colors.js","services/InvoiceService.js","InvoiceDialog.js","OV/DateField.js","OV/services/PatientService.js","OV/services/EmailTemplateService.js","OV/services/SMSTemplateService.js","OV/PatientDialog.js","OV/BookingDialog.js","OV/BookingTable.js","OV/calendar-admin/colors.js","OV/calendar-admin/MonthViewCell.js","OV/calendar-admin/calendar-util.js","OV/calendar-admin/MonthView.js","OV/calendar-admin/WeekViewCell.js","OV/calendar-admin/WeekView.js","OV/NewBookingDialog.js","OV/NewOVBookingDialog.js","OV/DateDialog.js","OV/ChooseClinicDialog.js","OV/EditOVBookingDialog.js","OV/calendar-admin/DayViewCell.js","OV/calendar-admin/DayView.js","OV/calendar-admin/CalendarView.js","OV/PatientsTable.js","OV/EmailTemplateDialog.js","OV/EmailTemplatesTable.js","OV/SMSTemplateDialog.js","OV/SMSTemplatesTable.js","MenuList.js","Role.js","SignIn.js","Menu.js","Dashboard.js","TokenVerifier.js","Navigator.js","App.js","index.js","OV/DateFormatter.js"],"names":["calculatePrice","person","price","tr","certificate","antiBodyTest","module","exports","calculateTotalPrice","persons","totalPrice","i","length","darkBlack","borderColor","theme","createMuiTheme","palette","primary","main","light","contrastText","secondary","common","black","warning","dark","tonalOffset","background","default","spacing","breakpoints","values","xl","lg","md","sm","xs","border","borderWidth","overrides","MuiExpansionPanel","root","position","MuiTableCell","paddingLeft","paddingRight","borderBottom","MuiDivider","backgroundColor","height","MuiPrivateNotchedOutline","MuiListItem","divider","MuiDialog","paper","width","maxWidth","marginLeft","marginRight","MuiTooltip","tooltip","fontSize","MuiExpansionPanelDetails","enGB","responsiveFontSizes","withStyles","outline","color","white","paddingTop","paddingBottom","down","up","display","flexWrap","marginTop","marginBottom","withTheme","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","GlobalState","React","createContext","authToken","backendAPI","getGlobalPath","path","axios","create","baseURL","headers","UserService","setToken","token","signIn","payload","API","post","checkToken","BookService","addNewBooking","sendRegFormEmail","bookingId","payBooking","paymentMethod","corporate","unPayBooking","getShouldRefundsCount","get","refundBooking","getBookingsStatsByDateStr","dateStr","getBookingsCountByDateStr","getAllBookingsCountAll","getBookingsCountByDateStrandTime","time","source","cancelToken","getBookingsByDateStrandTime","getAllBookingsCountByDateStr","getAllBookingsCountByDateStrandTime","getAllBookingsByDateStrandTime","changeBackToBookingMade","id","changeToPatientAttended","updateBooking","updateBookingTime","deleteBooking","unDeleteBooking","moveToTraceFolderBooking","undoMoveToTraceFolderBooking","getBookingsByRef","ref","getBookingById","getAllBookings","limit","getTraceFolderBookings","getDeletedBookings","getTodayBookings","getOldBookings","getFutureBookings","getRecentBookings","getRecentBookingsAll","PDFService","downloadGPRegForm","responseType","Accept","corporates","makeStyles","title","refreshButton","checkIcon","closeIcon","RefLink","cursor","BookedLabel","PatientAttendedLabel","SampleTakenLabel","ReportSentLabel","ReportCertSentLabel","archiveButton","smartMatchButton","textDecoration","infoTitle","fontWeight","infoData","matchButton","padding","resendButton","resendFilesButton","cancelButton","backdrop","zIndex","drawer","borderRadius","colorPrimary","bar","LinearProgress","InvoiceService","createInvoice","updateInvoice","invoiceNumber","deleteinvoice","getInvoiceByBookingId","getInvoiceByInvoiceNumber","getCodeDetails","code","getAllCodes","downloadInvoice","emailInvoice","email","DateField","loadingBox","value","dateChanged","todayButton","children","useState","day","setDay","month","setMonth","year","setYear","dayArray","setDayArray","monthArray","setMonthArray","yearArray","setYearArray","updateDate","dd","mm","yyyy","dayStr","monthStr","resetDate","useEffect","d","parseInt","substr","m","y","days","months","years","push","dateformat","Date","getFullYear","Fragment","style","top","left","right","Tooltip","IconButton","onClick","today","getDate","getMonth","Grid","container","direction","justify","alignItems","item","FormControl","fullWidth","InputLabel","Select","labelId","onChange","event","target","map","MenuItem","index","PatientService","getNewPatientID","registerNewPatient","updatePatient","deletePatient","unDeletePatient","getPatientById","getPatientByPatientId","patientID","getPatientByEmail","getAllPatients","getDeletedPatients","TemplateService","getEmailPreview","templateId","patientId","sendManualEmail","sendTo","registerNewTemplate","updateTemplate","deleteTemplate","getTemplateById","getTemplateBytemplateId","templateID","getAllTemplates","getSMSPreview","sendManualSMS","TabPanel","props","other","role","hidden","aria-labelledby","a11yProps","useStyles","appBar","flex","flexGrow","tabs","borderRight","titleCenter","textAlign","eyeText","multilineColor","lineHeight","Transition","forwardRef","Slide","PatientDialog","classes","useContext","setState","formData","patient","setPatient","saving","setSaving","emailSent","setEmailSent","emailSending","setEmailSending","smsSent","setSMSSent","smsSending","setSMSSending","patientIDError","setPatientIDError","nameError","setNameError","surnameError","setSurnameError","birthDateError","setBirthDateError","patientRepeated","setPatientRepeated","setValue","history","setHistory","backupFormData","setBackUpFormData","openDeleteDialog","setOpenDeleteDialog","selectedTemplateID","setSelectedTemplateID","selectedTemplate","setSelectedTemplate","emailTemplates","setEmailTemplates","selectedSMSTemplateID","setSelectedSMSTemplateID","selectedSMSTemplate","setSelectedSMSTemplate","smsTemplates","setSMSTemplates","handleCloseDeleteDialog","createPreview","_template","a","res","data","result","html","content","subject","newSubject","createSMSPreview","SMSTemplateService","rawText","open","_history","JSON","parse","forEach","record","setSelectedVersion","name","surname","reverse","loadEmailTemplates","loadSMSTemplates","handleClose","saveClicked","validatePatient","stringify","_id","status","patientDialogDataChanged","setTimeout","deleteClicked","trim","birthDate","formatDate","date","dateFormat","selectedVersion","sendEmail","sendSMS","mobileTel","Dialog","fullScreen","onClose","TransitionComponent","AppBar","className","Toolbar","edge","aria-label","Typography","variant","Button","startIcon","disabled","saveButtonText","label","timeStamp","Tabs","orientation","newValue","indicatorColor","textColor","Tab","TextField","required","helperText","autoComplete","gender","postCode","address","homeTel","occupation","gpname","kincontact","prevsighttest","multiline","rows","cc","prevmedicalhistory","prevocularhistory","familyhistory","medications","grafth","allergies","placeholder","contactlenswearer","hobbies","vdu","othernotes","driver","notesfromconsultation","recommendation","Alert","severity","formControl","template","find","e","handleSelectedTemplateChanged","Paper","elevation","dangerouslySetInnerHTML","__html","handleSelectedSMSTemplateChanged","InputProps","input","Backdrop","CircularProgress","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","box","boxRed","boxInfo","ul","listStyle","margin","li","icon","lineThrough","heading","typography","pxToRem","flexBasis","flexShrink","text","secondaryHeading","infoDetails","Accordion","AccordionDeleted","DownloadForm","infoDataCharges","infoDataChargesHigher","borderLeft","PositiveLabel","EditButton","ResendEmailsButton","PayButton","printInvoiceButton","editInvoiceButton","PayLabel","RestoreButton","UndoTraceButton","DeleteButton","MoveToTraceButton","SaveButton","CancelButton","TextBox","checkIconSmall","centeredLabel","dialogTitle","question","answer","SearchIcon","PaperComponent","handle","cancel","BookingDialog","setEmailSentInvoice","selectedPatient","setSelectedPatient","patientDialogOpen","setPatientDialogOpen","edit","editMode","delete","deleteMode","setDeleteMode","restore","restoreMode","setRestoreMode","trace","traceMode","setTraceMode","untrace","unTraceMode","setUnTraceMode","setNotesSaved","deleting","setDeleting","restoring","setRestoring","validationError","setValidationError","bookingDate","setBookingDate","bookingTime","setBookingTime","fullname","setFullname","setEmail","tel","setTel","refreshData","setRefreshData","booking","setBooking","fieldChanged","setFieldChanged","setInvoice","loadPatient","fullnameChanged","res0","bookingService","bookingDialogDataChanged","res1","fullnameArray","split","phone","res2","handleDeleteModeChanged","del","err","handleRestoreModeChanged","handleTraceModeChanged","handleUnTraceModeChanged","openQDialg","setOpenQDialog","fixQuestion","str","replace","endsWith","keepMounted","deleted","traceFolder","questions","Divider","FormatDateFromString","bookingDateError","inputProps","bookingTimeError","toUpperCase","faceToFaceConsultation","telephoneConsultation","justifyContent","type","deleteButtonDisabled","OTCCharges","HideNowRows","justifyItems","ExportToExcelButton","ExportToExcelButtonInline","table","borderCollapse","th","verticalAlign","fontcolor","td","topSelect","minWidth","notifyIcon","getTableTitle","BookingTable","topCount","setTopCount","openDialogExcel","setOpenDialogExcel","getTime","fromDate","setFromDate","untilDate","setUntilDate","fromDateStr","setFromDateStr","untilDateStr","seUntilDateStr","justCorporate","setJustCorporate","chkDate","setChkDate","chkForename","setChkForename","chkSurname","setChkSurname","chkDOB","setChkDOB","chkEmail","setChkEmail","chkTel","setChkTel","chkCertificate","setChkCertidicate","chkAntiBodyTest","setChkAntiBodyTest","chkextRef","setChkExtRef","chkPrice","setChkPrice","columns","field","headerName","renderCell","params","openDetailsDialog","getValue","valueFormatter","formatTimeStamp","bookings","cachedBookings","isFetching","setData","setSelectedRow","selectedBooking","setSelectedBooking","seeDetailsDialogOpen","setSeeDetailsDialogOpen","setCorporate","filter","setFilter","useRef","todayStr","timeStampStr","loadData","api","filteredData","element","toLowerCase","indexOf","page","setPage","placement","showCreateExcel","faFileExcel","size","autoPageSize","onPageChange","onSelectionChange","newSelection","minHeight","maxHeight","row","FormControlLabel","control","Switch","checked","utils","DateFnsUtils","disableToolbar","format","KeyboardButtonProps","filename","sheet","buttonText","Checkbox","paid","paidBy","forenameCapital","surnameCapital","extRef","PriceCalculator","CalendarColors","Container","ContainerPast","DayLabel","DayLabelToday","lineHight","DayLabelDisabled","BookingCountLabel","BookingCountLabelBusy","LoadingProgress","BookingCountGauge","bottom","PCRGauge","GynaeGauge","GPGauge","STDGauge","BloodGauge","DayLabelContainer","MonthViewCell","key","cellIndex","daysInMonth","dayClicked","setDateStr","cellDate","setCellDate","bookingsCount","setBookingsCount","disableDay","setDisableDay","setIsPast","AdminCalendarCache","method","query","count","fecthData","_bookingsCount","getVCClinicBar","percent","getF2FClinicBar","getLaserClinicBar","getCataractClinicBar","getPostOPClinicBar","_cellIndex","_month","_daysInMonth","_day","isToday","getDayLabel","clinic","selectedClinics","findIndex","disableShrink","CalendarUtil","getMonthRange","calendar","Calendar","SUNDAY","itermonthdates","dayLables","MonthView","WeekViewCell","isPast","CancelToken","getClinicBar","overflowY","WeekView","dates","CalendarIcon","DateTimeLabel","PriceLabelPaid","PriceLabelNotPaid","BoxDisabled","transition","BoxVC","BoxF2F","BoxLaser","BoxCataract","BoxPostOP","BoxOptometry","BoxGynae","BoxGP","BoxSTD","NewBookingDialog","clinicClicked","createFilterOptions","NewOVBookingDialog","fullnameError","setFullnameError","patientRecord","setPatientRecord","patientList","setPatientList","setPhone","notes","setNotes","setPatientID","prescriptionLeft","setPrescriptionLeft","prescriptionRight","setPrescriptionRight","setBirthDate","loadPatiens","validateBooking","newName","setNewName","newSurname","setNewSurname","getColorFromClinic","Autocomplete","_nameArray","inputValue","filterOptions","options","filtered","matchSorter","keys","getOptionLabel","option","selectOnFocus","clearOnBlur","handleHomeEndKeys","renderOption","freeSolo","renderInput","onBlur","autoFocus","timeControl","times","DateDialog","setDate","setTime","dateError","setDateError","handleOK","ChooseBookingDialog","EditOVBookingDialog","openClinicDialog","setOpenClinicDialog","setClinic","openDateDialog","setOpenDateDialog","patiant","saveAsClicked","_clinic","bookingBox","overflowX","boxShadow","bookingBoxNew","bookingBoxVC","bookingBoxF2F","bookingBoxLaser","bookingBoxCataract","bookingBoxPostOP","bookingBoxOptometry","bookingBoxHidden","bookingBoxPositive","bookingBoxReportSent","BookingBorderPCR","BookingBorderGynae","BookingBorderGP","BookingBorderSTD","BookingBorderBlood","DayViewCell","setBookings","filteredBookings","setFilteredBookings","openDialog","setOpenDialog","openDialogAddNew","setOpenDialogAddNew","openDialogOV","setOpenDialogOV","dayViewCalFilter","search","fetchData","_bookings","getBookingClass","addNewBookingClicked","borderTop","clsx","bookingCliked","substring","titleLabel","titleLabelToday","DayView","Clinics","monthNames","fontColor","CalendarView","firstDayofWeek","setFirstDayofWeek","weekDates","setWeekDates","mode","setMode","selectedTab","setSeletedTab","removeFilter","dayofWeek","getDay","firstdayofweek","_mode","newDay","newMonth","newFirstDayofWeek","endOfWeek","endofWeekStr","getCalendarTitleFromMode","endAdornment","InputAdornment","onMouseDown","ToggleButtonGroup","exclusive","ToggleButton","PatientsTable","setPatientDialogTitle","setPatientDialogSaveButtonText","patientDialogTitle","patientDialogSaveButtonText","EmailTemplateDialog","settemplate","templateIDError","settemplateIDError","subjectError","setSubjectError","templateRepeated","settemplateRepeated","clinicError","setClinicError","variable","setVariable","variableErrors","setVariableErrors","EditorState","createEmpty","editorState","setEditorState","parameters","contentBlock","htmlToDraft","contentState","ContentState","createFromBlockArray","contentBlocks","_editorState","createWithContent","htmlToText","settemplatenameuser","settemplatenameusererror","validatetemplate","templateService","templateDialogDataChanged","templatenameuser","sendWhenBookedCalendar","templatenameusererror","ValidateVariable","keyword","prev","keywordError","builtinValue","builtinValueError","wrapperClassName","editorClassName","onEditorStateChange","draftToHtml","convertToRaw","getCurrentContent","defaultValue","_variable","_keyword","templateAttendedLabel","EmailTemplatesTable","setSelectedtemplate","settemplateDialogTitle","settemplateDialogSaveButtonText","settemplateDialogOpen","selectedtemplate","templateDialogOpen","templateDialogTitle","templateDialogSaveButtonText","createSMSButton","SMSTemplateDialog","rawTextError","setRawTextError","SMSTemplatesTable","MenuList_OV_Admin","getMenuContent","getMenuRole","getMenuId","MenuList","getRole","sessionStorage","getItem","setRole","setItem","image","backgroundImage","backgroundRepeat","grey","backgroundSize","backgroundPosition","flexDirection","avatar","form","submit","alert","pageBg","appbarCenter","logoImage","appbarTitle","adminPanelLabel","SignIn","useMediaQuery","useHistory","password","setPassword","username","setUsername","saveChecked","setSaveChecked","showPassword","setShowPassword","setError","submiting","setSubmiting","localStorage","signedIn","roles","currentMenuIndex","component","CssBaseline","src","alt","Avatar","on","textField","onKeyPress","htmlFor","OutlinedInput","tabindex","preventDefault","Visibility","VisibilityOff","labelWidth","Box","mt","overflow","fixedHeight","iconSelected","menuText","Badge","MyMenu","selectedIndex","setSelectedIndex","updateShouldRefundsCount","List","StyledMenu","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","StyledMenuApps","toolbar","toolbarIcon","mixins","transitions","easing","sharp","duration","leavingScreen","appBarShift","enteringScreen","menuButton","menuButtonHidden","drawerPaper","whiteSpace","opacity","drawerPaperClose","appBarSpacer","logoImageMenu","userAvatar","userAvatarSelected","userAvatarBig","appBarText","appBarAppsIcon","appBarAppsIconSelected","usernameLabel","lastLoginLabel","appsLogo","appsBox","appsBoxSelected","appsAdminLabel","appsPCRLabel","appsGynaeLabel","appsGPLabel","appsSTDLabel","appsInToolbar","Dashboard","isMobile","setOpen","setCurrentMenuIndex","anchorUserAvatar","setAnchorUserAvatar","anchorApps","setAnchorApps","handleAppsClose","useLocation","getMenuIndex","globalPath","getMenuIdFromGlobalPath","pathname","scrollTo","appsClicked","getAppsLogo","getAppsLabel","userId","currentTarget","anchorEl","removeItem","Drawer","getUserIdFromToken","forename","lastLoginTimeStamp","signOutButton","Navigator","loaded","setLoaded","signedUp","forgotPassword","startsWith","URL","process","href","origin","addEventListener","fetch","response","contentType","ready","unregister","reload","checkValidServiceWorker","App","Provider","GlobalStyles","ReactDOM","render","document","getElementById","FormatDateFromStringShortYear","RevertFormatDateFromString","FormatDateFromStringWithSlash"],"mappings":"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","file":"static/js/main.6305f7e2.chunk.js","sourcesContent":["\nconst calculatePrice = (person) =>\n{\n\n    var price = 199;\n\n    if (person.tr)\n    {\n        price = 250;\n    }\n    \n    if (person.certificate)\n    {\n        price += 50;\n    }\n\n    if (person.antiBodyTest)\n    {\n        price += (99 + 50);\n    }\n\n    return price;\n\n}\n\nconst calculateTotalPrice = (persons) =>\n{\n    var totalPrice = 0;\n    for (var i = 0 ; i < persons.length ; i++)\n    {\n        totalPrice += calculatePrice(persons[i]);\n    }\n\n    return totalPrice;\n}\n\nmodule.exports = {\n    calculatePrice : calculatePrice,\n    calculateTotalPrice : calculateTotalPrice\n}","import { createMuiTheme, responsiveFontSizes } from \"@material-ui/core\";\nimport { enGB } from '@material-ui/core/locale';\n\n\nconst black = \"#212121\";\nconst darkBlack = \"rgb(36, 40, 44)\";\nconst background = \"#f9f9f9\";\n\nconst warningLight = \"rgba(253, 200, 69, .3)\";\nconst warningMain = \"rgba(253, 200, 69, .5)\";\nconst warningDark = \"rgba(253, 200, 69, .7)\";\n\n// border\nconst borderWidth = 2;\nconst borderColor = \"rgba(0, 0, 0, 0.13)\";\n\n// breakpoints\nconst xl = 1920;\nconst lg = 1280;\nconst md = 960;\nconst sm = 600;\nconst xs = 0;\n\n// spacing\nconst spacing = 8;\n\nconst theme = createMuiTheme({\n\n  palette: {\n\n    primary: { main: \"#03b5f2\",\n               light: \"#86d5f0\",\n               contrastText:\"#fff\"\n              //  dark: \"#0288D1\",\n              //  light: \"#B3E5FC\"\n\n      },\n    secondary: { main: \"#005eab\", contrastText:\"#fff\" },\n    common: {\n      black,\n      darkBlack\n    },\n    warning: {\n      light: warningLight,\n      main: warningMain,\n      dark: warningDark\n    },\n    // Used to shift a color's luminance by approximately\n    // two indexes within its tonal palette.\n    // E.g., shift from Red 500 to Red 300 or Red 700.\n    tonalOffset: 0.2,\n    background: {\n      default: background\n    },\n    spacing\n  },\n  breakpoints: {\n    // Define custom breakpoint values.\n    // These will apply to Material-UI components that use responsive\n    // breakpoints, such as `Grid` and `Hidden`. You can also use the\n    // theme breakpoint functions `up`, `down`, and `between` to create\n    // media queries for these breakpoints\n    values: {\n      xl,\n      lg,\n      md,\n      sm,\n      xs\n    }\n  },\n  border: {\n    borderColor: borderColor,\n    borderWidth: borderWidth\n  },\n  overrides: {\n    MuiExpansionPanel: {\n      root: {\n        position: \"static\"\n      }\n    },\n    MuiTableCell: {\n      root: {\n        paddingLeft: spacing * 2,\n        paddingRight: spacing * 2,\n        borderBottom: `${borderWidth}px solid ${borderColor}`,\n        [`@media (max-width:  ${sm}px)`]: {\n          paddingLeft: spacing,\n          paddingRight: spacing\n        }\n      }\n    },\n    MuiDivider: {\n      root: {\n        backgroundColor: borderColor,\n        height: borderWidth\n      }\n    },\n    MuiPrivateNotchedOutline: {\n      root: {\n        borderWidth: borderWidth\n      }\n    },\n    MuiListItem: {\n      divider: {\n        borderBottom: `${borderWidth}px solid ${borderColor}`\n      }\n    },\n    MuiDialog: {\n      paper: {\n        width: \"100%\",\n        maxWidth: 430,\n        marginLeft: spacing,\n        marginRight: spacing\n      }\n    },\n    MuiTooltip: {\n      tooltip: {\n        backgroundColor: darkBlack,\n        fontSize: \"0.7rem\"\n      }\n    },\n    MuiExpansionPanelDetails: {\n      root: {\n        [`@media (max-width:  ${sm}px)`]: {\n          paddingLeft: spacing,\n          paddingRight: spacing\n        }\n      }\n    }\n  },\n \n}, enGB);\n\nexport default responsiveFontSizes(theme);\n","import { withStyles } from \"@material-ui/core\";\n\nconst styles = theme => ({\n  \"@global\": {\n    /**\n     * Disable the focus outline, which is default on some browsers like\n     * chrome when focusing elements\n     */\n    \"*:focus\": {\n      outline: 0\n    },\n    \".text-white\": {\n      color: theme.palette.common.white\n    },\n    \".listItemLeftPadding\": {\n      paddingTop: `${theme.spacing(1.75)}px !important`,\n      paddingBottom: `${theme.spacing(1.75)}px !important`,\n      paddingLeft: `${theme.spacing(4)}px !important`,\n      [theme.breakpoints.down(\"sm\")]: {\n        paddingLeft: `${theme.spacing(4)}px !important`\n      },\n      \"@media (max-width:  420px)\": {\n        paddingLeft: `${theme.spacing(1)}px !important`\n      }\n    },\n    \".container\": {\n      width: \"100%\",\n      paddingRight: theme.spacing(4),\n      paddingLeft: theme.spacing(4),\n      marginRight: \"auto\",\n      marginLeft: \"auto\",\n      [theme.breakpoints.up(\"sm\")]: {\n        maxWidth: 540\n      },\n      [theme.breakpoints.up(\"md\")]: {\n        maxWidth: 720\n      },\n      [theme.breakpoints.up(\"lg\")]: {\n        maxWidth: 1170\n      }\n    },\n    \".row\": {\n      display: \"flex\",\n      flexWrap: \"wrap\",\n      marginRight: -theme.spacing(2),\n      marginLeft: -theme.spacing(2)\n    },\n    \".container-fluid\": {\n      width: \"100%\",\n      paddingRight: theme.spacing(2),\n      paddingLeft: theme.spacing(2),\n      marginRight: \"auto\",\n      marginLeft: \"auto\",\n      maxWidth: 1370\n    },\n    \".lg-mg-top\": {\n      marginTop: `${theme.spacing(20)}px !important`,\n      [theme.breakpoints.down(\"md\")]: {\n        marginTop: `${theme.spacing(18)}px !important`\n      },\n      [theme.breakpoints.down(\"sm\")]: {\n        marginTop: `${theme.spacing(16)}px !important`\n      },\n      [theme.breakpoints.down(\"xs\")]: {\n        marginTop: `${theme.spacing(14)}px !important`\n      }\n    },\n    \".lg-mg-bottom\": {\n      marginBottom: `${theme.spacing(20)}px !important`,\n      [theme.breakpoints.down(\"md\")]: {\n        marginBottom: `${theme.spacing(18)}px !important`\n      },\n      [theme.breakpoints.down(\"sm\")]: {\n        marginBottom: `${theme.spacing(16)}px !important`\n      },\n      [theme.breakpoints.down(\"xs\")]: {\n        marginBottom: `${theme.spacing(14)}px !important`\n      }\n    },\n    \".lg-p-top\": {\n      paddingTop: `${theme.spacing(20)}px !important`,\n      [theme.breakpoints.down(\"md\")]: {\n        paddingTop: `${theme.spacing(18)}px !important`\n      },\n      [theme.breakpoints.down(\"sm\")]: {\n        paddingTop: `${theme.spacing(16)}px !important`\n      },\n      [theme.breakpoints.down(\"xs\")]: {\n        paddingTop: `${theme.spacing(14)}px !important`\n      }\n    }\n  }\n});\n\nfunction globalStyles() {\n  return null;\n}\n\nexport default withStyles(styles, { withTheme: true })(globalStyles);\n","/* eslint-disable */\n\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit http://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See http://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'; \nconst GlobalState = React.createContext([{}, () => {}]); \nexport default GlobalState;","export default __webpack_public_path__ + \"static/media/optimal-vision-logo.ba03ccd6.png\";","\n\nexport const authToken = 'Basic QXp1cmXEaWFtb45kOmh1bnRlcjO='\n\nexport const backendAPI = 'https://www.travelpcrtest.com/'\n// export const backendAPI = 'http://localhost:9090/'\n\nexport function getGlobalPath(path){\n    return '/optimalvision/admin' + path\n    // return path\n}\n\nexport function getMenuIdFromGlobalPath(globalPath){\n    try{\n       \n        var split = globalPath.split('/')\n        if (split && split.length > 0)\n        {\n            return split[split.length - 1].length > 0 ?  split[split.length - 1] :  split[split.length - 2]\n        }\n        else\n        {\n            return ''\n        }\n    }\n    catch(err)\n    {\n        return ''\n    }\n}","import axios from 'axios';\nimport { authToken, backendAPI } from '../GlobalPath';\n\nexport default axios.create({\n  baseURL: backendAPI,\n\n  headers : {\n      'Authorization' : authToken\n  }\n});","import API from './api';\n\nexport default class UserService{\n\n    static setToken = (token) =>\n    {\n        this.token = token\n    }\n  \n    static signIn = (payload) =>\n    {\n        return  API.post('/api/optimalvision/user/signin', payload)\n    }\n\n    static checkToken = (payload) =>\n    {\n        return  API.post('/api/optimalvision/user/checktoken', payload)\n    }\n\n}\n","import axios from 'axios';\nimport { authToken, backendAPI } from '../../GlobalPath';\n\nexport default axios.create({\n  baseURL: backendAPI,\n  headers : {\n      'Authorization' : authToken,\n       'Content-Type': 'application/json',\n  }\n});","import API from './api';\nimport axiosRetry from 'axios-retry';\n\nexport default class BookService {\n\n\n   static addNewBooking = (payload) =>\n   {\n      return API.post(`/api/optimalvision/book/bookappointment`, payload);\n   }\n\n\n   static sendRegFormEmail = (bookingId) =>\n   {\n      return API.post(`/api/optimalvision/book/sendregformemail?id=${bookingId}`);\n   }\n   static payBooking = (bookingId,price, paymentMethod, corporate) =>\n   {\n      return API.post(`/api/optimalvision/book/paybooking?id=${bookingId}&paymentmethod=${paymentMethod}&corporate=${corporate}&price=${price}`);\n   }\n\n   static unPayBooking = (bookingId) =>\n   {\n      return API.post(`/api/optimalvision/book/unpaybooking?id=${bookingId}`);\n   }\n\n   static getShouldRefundsCount = () =>\n   {\n      return API.get(`/api/optimalvision/book/getshouldrefundscount?`);\n   }\n\n   \n\n   static refundBooking = (bookingId) =>\n   {\n      return API.post(`/api/optimalvision/payment/refundpayment`, {bookingId: bookingId});\n   }\n\n   static getBookingsStatsByDateStr = (dateStr) =>\n   {\n      return API.get(`/api/optimalvision/book/getbookingsstatsbydatestr?date=${dateStr}`);\n   }\n\n   static getBookingsCountByDateStr = (dateStr) =>\n   {\n      return API.get(`/api/optimalvision/book/getbookingscountbydatestr?date=${dateStr}`);\n   }\n\n   static getAllBookingsCountAll = () =>\n   {\n      return API.get(`/api/optimalvision/book/getallbookingscountall`);\n   }\n\n   static getBookingsCountByDateStrandTime = (dateStr, time, source) =>\n   {\n      return API.get(`/api/optimalvision/book/getbookingscountbydatestrandtime?date=${dateStr}&time=${time}`, {cancelToken: source.token});\n   }\n\n   static getBookingsByDateStrandTime = (dateStr, time) =>\n   {\n      return API.get(`/api/optimalvision/book/getbookingsbydatestrandtime?date=${dateStr}&time=${time}`);\n   }\n\n\n   static getAllBookingsCountByDateStr = (dateStr) =>\n   {\n      return API.get(`/api/optimalvision/book/getallbookingscountbydatestr?date=${dateStr}`);\n   }\n\n   static getAllBookingsCountByDateStrandTime = (dateStr, time, source) =>\n   {\n      return API.get(`/api/optimalvision/book/getallbookingscountbydatestrandtime?date=${dateStr}&time=${time}`, {cancelToken: source.token});\n   }\n\n   static getAllBookingsByDateStrandTime = (dateStr, time) =>\n   {\n      return API.get(`/api/optimalvision/book/getallbookingsbydatestrandtime?date=${dateStr}&time=${time}`);\n   }\n\n   static changeBackToBookingMade = (id) =>\n   {\n      return API.post(`/api/optimalvision/book/changebacktobookingmade?id=${id}`);\n   }\n\n   static changeToPatientAttended = (id) =>\n   {\n      return API.post(`/api/optimalvision/book/changetopatientattended?id=${id}`);\n   }\n\n   static updateBooking = (payload) =>\n   {\n      return API.post(`/api/optimalvision/book/updatebookappointment`, payload);\n   } \n\n   static updateBookingTime = (payload) =>\n   {\n      return API.post(`/api/optimalvision/book/updatebookappointmenttime`, payload);\n   } \n\n   static deleteBooking = (id) =>\n   {\n      return API.post(`/api/optimalvision/book/deletebookappointment?id=${id}`);\n   } \n\n   static unDeleteBooking = (id) =>\n   {\n      return API.post(`/api/optimalvision/book/undeletebookappointment?id=${id}`);\n   } \n\n   static moveToTraceFolderBooking = (id) =>\n   {\n      return API.post(`/api/optimalvision/book/movetotracebookappointment?id=${id}`);\n   } \n\n   static undoMoveToTraceFolderBooking = (id) =>\n   {\n      return API.post(`/api/optimalvision/book/undomovetotracebookappointment?id=${id}`);\n   } \n   \n    static getBookingsByRef = (ref) =>\n    {\n       return API.get(`/api/optimalvision/book/getbookingsbyref?ref=${ref}`);\n    }\n\n    static getBookingById = (id) =>\n    {\n       return API.get(`/api/optimalvision/book/getbookingbyid?id=${id}`);\n    }\n\n    static getAllBookings = (limit) =>\n    {\n      if (!limit) limit = 25 \n      return API.get(`/api/optimalvision/book/getallbookings?limit=${limit}`);\n    }\n\n    static getTraceFolderBookings = (limit) =>\n    {\n      if (!limit) limit = 25 \n      return API.get(`/api/optimalvision/book/gettracefolderdbookings?limit=${limit}`);\n    }\n\n\n    static getDeletedBookings= (limit) =>\n    {\n      if (!limit) limit = 25 \n       return API.get(`/api/optimalvision/book/getdeletedbookings?limit=${limit}`);\n    }\n\n    static getTraceFolderBookings= (limit) =>\n    {\n      if (!limit) limit = 25 \n       return API.get(`/api/optimalvision/book/gettracefolderbookings?limit=${limit}`);\n    }\n\n\n    static getTodayBookings= () =>\n    {\n       return API.get(`/api/optimalvision/book/gettodaybookings`);\n    }\n\n    static getOldBookings= (limit) =>\n    {\n      if (!limit) limit = 25 \n       return API.get(`/api/optimalvision/book/getoldbookings?limit=${limit}`);\n    }\n\n    static getFutureBookings= (limit) =>\n    {\n      if (!limit) limit = 25 \n       return API.get(`/api/optimalvision/book/getfuturebookings?limit=${limit}`);\n    }\n\n    static getRecentBookings= () =>\n    {\n       return API.get(`/api/optimalvision/book/getrecentbookings`);\n    }\n\n    static getRecentBookingsAll= (limit) =>\n    {\n      if (!limit) limit = 25 \n       return API.get(`/api/optimalvision/book/getrecentbookingsall?limit=${limit}`);\n    }\n}","import API from './api';\n\nexport default class PDFService {\n\n\n    static downloadGPRegForm = (id) =>\n    {\n       return API.get(`/api/pdf/downloadgpregform?id=${id}`, {\n        responseType: 'arraybuffer',\n        id: id,\n        headers: {\n            Accept: 'application/pdf',\n        }\n        });\n    }\n\n\n\n}","export const corporates = [\n    'Visa Medical'\n]","import React, { useEffect, useRef, useState } from \"react\";\nimport BookService from \"./services/BookService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {\n  Backdrop,\n  Button,\n  Checkbox,\n  CircularProgress,\n  Divider,\n  FormControlLabel,\n  Grid,\n  InputAdornment,\n  InputLabel,\n  Link,\n  makeStyles,\n  MenuItem,\n  Select,\n  TextField,\n  Tooltip,\n} from \"@material-ui/core\";\nimport GlobalState from \"../GlobalState\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport CreditCardIcon from \"@material-ui/icons/CreditCard\";\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\n\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Draggable from \"react-draggable\";\nimport Paper from \"@material-ui/core/Paper\";\n\nimport Alert from \"@material-ui/lab/Alert\";\n\nimport PropTypes from \"prop-types\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport Box from \"@material-ui/core/Box\";\n\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport { corporates } from \"./Corporates\";\nimport NumberFormat from \"react-number-format\";\n\n\nvar interval;\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    marginTop: theme.spacing(0),\n    marginBottom: theme.spacing(1),\n  },\n\n  refreshButton: {\n    marginLeft: theme.spacing(2),\n  },\n\n  checkIcon: {\n    color: \"green\",\n  },\n\n  closeIcon: {\n    color: \"red\",\n  },\n\n  RefLink: {\n    cursor: \"pointer\",\n  },\n\n  BookedLabel: {\n    backgroundColor: \"#606060\",\n    color: \"#fff\",\n    paddingRight: \"10px\",\n    paddingLeft: \"10px\",\n  },\n\n  PatientAttendedLabel: {\n    backgroundColor: \"#0066aa\",\n    color: \"#fff\",\n    paddingRight: \"15px\",\n    paddingLeft: \"10px\",\n  },\n\n  SampleTakenLabel: {\n    backgroundColor: \"#0066cc\",\n    color: \"#fff\",\n    paddingRight: \"40px\",\n    paddingLeft: \"10px\",\n  },\n\n  ReportSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"90px\",\n    paddingLeft: \"10px\",\n  },\n\n  ReportCertSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"68px\",\n    paddingLeft: \"10px\",\n  },\n\n  archiveButton: {},\n\n  smartMatchButton: {\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    marginRight: \"10px\",\n    // padding: \"10px\"\n  },\n\n  infoTitle: {\n    fontWeight: \"400\",\n  },\n\n  infoData: {\n    paddingLeft: \"10px\",\n    fontWeight: \"800\",\n  },\n\n  matchButton: {\n    marginTop: \"30px\",\n    marginBottom: \"20px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  resendButton: {\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  resendFilesButton: {\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n    backgroundColor: \"#3792ad\",\n    \"&:hover\": {\n      background: \"#2f798f\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  cancelButton: {\n    marginBottom: \"10px\",\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"90px\",\n    paddingRight: \"90px\",\n  },\n\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 5,\n    color: \"#fff\",\n  },\n}));\n\nfunction NumberFormatCustom(props) {\n  const { inputRef, onChange, ...other } = props;\n\n  return (\n    <NumberFormat\n      {...other}\n      getInputRef={inputRef}\n      onValueChange={(values) => {\n        onChange({\n          target: {\n            name: props.name,\n            value: values.value,\n          },\n        });\n      }}\n      thousandSeparator\n      isNumericString\n      prefix=\"\"\n    />\n  );\n}\n\nNumberFormatCustom.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\n\nconst BorderLinearProgress = withStyles((theme) => ({\n  root: {\n    height: 10,\n    borderRadius: 5,\n  },\n  colorPrimary: {\n    backgroundColor: \"#cedbce\", //theme.palette.grey[theme.palette.type === 'light' ? 200 : 700],\n  },\n  bar: {\n    borderRadius: 5,\n    backgroundColor: \"#2f942e\",\n  },\n}))(LinearProgress);\nfunction LinearProgressWithLabel(props) {\n  return (\n    <Box display=\"flex\" alignItems=\"center\">\n      <Box width=\"100%\" mr={1}>\n        <BorderLinearProgress variant=\"determinate\" {...props} />\n      </Box>\n      <Box minWidth={35}>\n        <Typography\n          style={{ fontWeight: \"800\", color: \"#5e855e\" }}\n          variant=\"body2\"\n          color=\"textSecondary\"\n        >{`${Math.round(props.value)}%`}</Typography>\n      </Box>\n    </Box>\n  );\n}\n\nLinearProgressWithLabel.propTypes = {\n  /**\n   * The value of the progress indicator for the determinate and buffer variants.\n   * Value between 0 and 100.\n   */\n  value: PropTypes.number.isRequired,\n};\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable\n      handle=\"#draggable-dialog-title\"\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\n    >\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nexport default function PayDialog(props) {\n  const classes = useStyles();\n\n  const [state, setState] = React.useContext(GlobalState);\n  const [paymentMethod, setPaymentMethod] = useState(\"credit card\");\n  const [corporate, setCorporate] = useState(corporates[0]);\n  const [saving, setSaving] = useState(false);\n\n  const [price, setPrice] = useState(\"\");\n  const [priceError, setPriceError] = useState(false);\n\n  useEffect( () => {\n    if (props.price)\n    {\n      setPrice(`${props.price}`)\n    }else\n    {\n      setPrice('')\n    }\n  }, [props.price, props.open])\n\n\n  const priceChanged = (event) =>\n  {\n    setPrice(event.target.value)\n    setPriceError(false)\n  }\n\n  const paymentMethodChanged = (event) => {\n    setPaymentMethod(event.target.value);\n  };\n\n  const handleClose = () => {\n    if (saving) return;\n\n    props.handleClose();\n    setPaymentMethod(\"credit card\");\n    setPrice('')\n    setCorporate(corporates[0]);\n    setSaving(false);\n  };\n\n  const corporateChanged = (event) => {\n    setCorporate(event.target.value);\n  };\n\n  const payClicked = async () => {\n\n\n    if (!price || price.trim().length === 0 || price === '0')\n    {\n      setPriceError(true)\n      return\n    }\n\n    setSaving(true);\n\n  \n\n    try {\n      await BookService.payBooking(\n        props.booking._id,\n        price,\n        paymentMethod,\n        paymentMethod === \"corporate\" ? corporate : \"\"\n      );\n      setSaving(false);\n      setState((state) => ({\n        ...state,\n        bookingPayChanged: !state.bookingPayChanged ? true : false,\n      }));\n      handleClose();\n    } catch (err) {\n      console.error(err);\n      setSaving(false);\n    }\n  };\n\n  return (\n    <React.Fragment>\n      {props.booking && (\n        <React.Fragment>\n          <Dialog\n            maxWidth=\"xs\"\n            open={props.open}\n            onClose={handleClose}\n            PaperComponent={PaperComponent}\n            aria-labelledby=\"form-dialog-title\"\n          >\n            <DialogTitle id=\"draggable-dialog-title\">\n              <Grid\n                container\n                spacing={2}\n                direction=\"row\"\n                justify=\"center\"\n                alignItems=\"center\"\n              >\n                <Grid item>\n                  <CreditCardIcon\n                    style={{ color: \"#f50057\", fontSize: \"3rem\" }}\n                  />\n                </Grid>\n\n                <Grid item>\n                  <div\n                    style={{\n                      color: \"#f50057\",\n                      paddingBottom: \"10px\",\n                      fontWeight: \"800\",\n                    }}\n                  >\n                    {\" \"}\n                    PAY the CHARGE{\" \"}\n                  </div>\n                </Grid>\n              </Grid>\n\n              <Divider />\n            </DialogTitle>\n            <DialogContent>\n              <div\n                style={{\n                  height: \"300px\",\n                }}\n              >\n                <Grid\n                  container\n                  direction=\"column\"\n                  justify=\"space-between\"\n                  spacing={2}\n                  alignItems=\"flex-start\"\n                >\n                  <Grid item>\n                  <TextField\n                                autoFocus\n                                error={priceError}\n                                label=\"TOTAL Charges\"\n                                value={price}\n                                fullWidth\n                                required\n                                onChange={priceChanged}\n                                name=\"product-price\"\n                                id=\"product-price-id\"\n                                InputProps={{\n                                  inputComponent: NumberFormatCustom,\n                                  startAdornment: (\n                                    <InputAdornment position=\"start\">\n                                      £\n                                    </InputAdornment>\n                                  ),\n                                }}\n                              />\n\n                  </Grid>\n\n                  <Grid item>\n                    <div style={{ fontSize: \"17px\" }}>\n                      {\" \"}\n                      How do you want to pay?{\" \"}\n                    </div>\n                  </Grid>\n\n                  <Grid item>\n                    <FormControl component=\"fieldset\">\n                      <RadioGroup\n                        aria-label=\"paymentMethod\"\n                        name=\"paymentMethod\"\n                        value={paymentMethod}\n                        onChange={paymentMethodChanged}\n                      >\n                        <FormControlLabel\n                          value=\"credit card\"\n                          control={<Radio />}\n                          label=\"Credit Card\"\n                        />\n                        <FormControlLabel\n                          value=\"cash\"\n                          control={<Radio />}\n                          label=\"Cash\"\n                        />\n                        <FormControlLabel\n                          value=\"corporate\"\n                          control={<Radio />}\n                          label=\"Corporate\"\n                        />\n                      </RadioGroup>\n\n                      {paymentMethod === \"corporate\" && (\n                        <FormControl\n                          style={{ marginTop: \"10px\" }}\n                          className={classes.formControl}\n                        >\n                          <Select\n                            labelId=\"select-corporate\"\n                            id=\"select-corporate-id\"\n                            value={corporate}\n                            onChange={corporateChanged}\n                          >\n                            {corporates.map((element) => (\n                              <MenuItem\n                                value={element}\n                              >{`${element}`}</MenuItem>\n                            ))}\n                          </Select>\n                        </FormControl>\n                      )}\n                    </FormControl>\n                  </Grid>\n                </Grid>\n\n                <Grid item></Grid>\n\n                <div\n                  style={{\n                    position: \"absolute\",\n                    bottom: \"20px\",\n                    right: \"20px\",\n                  }}\n                >\n                  <Grid\n                    container\n                    direction=\"row\"\n                    justify=\"flex-end\"\n                    alignItems=\"center\"\n                    spacing={1}\n                  >\n                    <Grid item>\n                      <Button\n                        onClick={handleClose}\n                        style={{ width: \"100px\" }}\n                        disabled={saving}\n                      >\n                        back\n                      </Button>\n                    </Grid>\n                    <Grid item>\n                      <Button\n                        onClick={payClicked}\n                        variant=\"contained\"\n                        color=\"secondary\"\n                        style={{ width: \"100px\" }}\n                        disabled={saving}\n                      >\n                        Pay\n                      </Button>\n                    </Grid>\n                  </Grid>\n                </div>\n              </div>\n\n              <Backdrop className={classes.backdrop} open={saving}>\n                <CircularProgress color=\"inherit\" />\n              </Backdrop>\n            </DialogContent>\n          </Dialog>\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n}\n","\n\nexport const CalendarColors = {\n    PCR_COLOR : \"#4faef7\",\n    GYNAE_COLOR : \"#e83caf\",\n    GP_COLOR :  \"#ff4f14\",\n    STD_COLOR : \"#d6733a\"\n}\n","import API from './api';\n\nexport default class InvoiceService{\n\n    static createInvoice = (payload) =>\n    {\n        return  API.post('/api/medex/invoice/createinvoice', payload)\n    }\n\n    static updateInvoice = (invoiceNumber, payload) =>\n    {\n        return  API.post(`/api/medex/invoice/updateinvoice?invoiceNumber=${invoiceNumber}`, payload)\n    }\n\n    static deleteinvoice = (invoiceNumber) =>\n    {\n        return  API.post(`/api/medex/invoice/deleteinvoice?invoiceNumber=${invoiceNumber}`)\n    }\n\n    static getInvoiceByBookingId = (bookingId) =>\n    {\n        return  API.get(`/api/medex/invoice/getinvoicebybookingid?bookingId=${bookingId}`)\n    }\n\n    static getInvoiceByInvoiceNumber = (invoiceNumber) =>\n    {\n        return  API.get(`/api/medex/invoice/getinvoicebyinvoicenumber?invoiceNumber=${invoiceNumber}`)\n    }\n\n    static getCodeDetails = (code) =>\n    {\n        return  API.post(`/api/medex/invoice/getcodedetails`, {code: code})\n    }\n\n    static getAllCodes = () =>\n    {\n        return API.get(`/api/medex/invoice/getallcodes`)\n    }\n\n    static downloadInvoice = (id) =>\n    {\n       return API.get(`/api/pdf/downloadinvoice?id=${id}`, {\n        responseType: 'arraybuffer',\n        id: id,\n        headers: {\n            Accept: 'application/pdf',\n        }\n        });\n    }\n\n    static emailInvoice = (id, email) =>\n    {\n       return API.post(`/api/pdf/emailinvoice?id=${id}&email=${email}`);\n    }\n\n}\n","import React, { useEffect, useRef, useState } from \"react\";\nimport InvoiceService from \"./services/InvoiceService\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\n\nimport {\n  Backdrop,\n  Button,\n  Checkbox,\n  CircularProgress,\n  DialogActions,\n  Divider,\n  FormControlLabel,\n  Grid,\n  IconButton,\n  InputAdornment,\n  InputLabel,\n  Link,\n  makeStyles,\n  MenuItem,\n  Select,\n  TextField,\n  Tooltip,\n} from \"@material-ui/core\";\nimport GlobalState from \"./GlobalState\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport CreditCardIcon from \"@material-ui/icons/CreditCard\";\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\n\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Draggable from \"react-draggable\";\nimport Paper from \"@material-ui/core/Paper\";\n\nimport Alert from \"@material-ui/lab/Alert\";\n\nimport PropTypes from \"prop-types\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport Box from \"@material-ui/core/Box\";\n\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport NumberFormat from \"react-number-format\";\n\nimport ReceiptIcon from \"@material-ui/icons/Receipt\";\n\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    marginTop: theme.spacing(0),\n    marginBottom: theme.spacing(1),\n  },\n\n  refreshButton: {\n    marginLeft: theme.spacing(2),\n  },\n\n  checkIcon: {\n    color: \"green\",\n  },\n\n  closeIcon: {\n    color: \"red\",\n  },\n\n  RefLink: {\n    cursor: \"pointer\",\n  },\n\n  BookedLabel: {\n    backgroundColor: \"#606060\",\n    color: \"#fff\",\n    paddingRight: \"10px\",\n    paddingLeft: \"10px\",\n  },\n\n  PatientAttendedLabel: {\n    backgroundColor: \"#0066aa\",\n    color: \"#fff\",\n    paddingRight: \"15px\",\n    paddingLeft: \"10px\",\n  },\n\n  SampleTakenLabel: {\n    backgroundColor: \"#0066cc\",\n    color: \"#fff\",\n    paddingRight: \"40px\",\n    paddingLeft: \"10px\",\n  },\n\n  ReportSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"90px\",\n    paddingLeft: \"10px\",\n  },\n\n  ReportCertSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"68px\",\n    paddingLeft: \"10px\",\n  },\n\n  archiveButton: {},\n\n  smartMatchButton: {\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    marginRight: \"10px\",\n    // padding: \"10px\"\n  },\n\n  infoTitle: {\n    fontWeight: \"400\",\n  },\n\n  infoData: {\n    paddingLeft: \"10px\",\n    fontWeight: \"800\",\n  },\n\n  matchButton: {\n    marginTop: \"30px\",\n    marginBottom: \"20px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  resendButton: {\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  resendFilesButton: {\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n    backgroundColor: \"#3792ad\",\n    \"&:hover\": {\n      background: \"#2f798f\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  cancelButton: {\n    marginBottom: \"10px\",\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"90px\",\n    paddingRight: \"90px\",\n  },\n\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 5,\n    color: \"#fff\",\n  },\n}));\n\nfunction NumberFormatCustom(props) {\n  const { inputRef, onChange, ...other } = props;\n\n  return (\n    <NumberFormat\n      {...other}\n      getInputRef={inputRef}\n      onValueChange={(values) => {\n        onChange({\n          target: {\n            name: props.name,\n            value: values.value,\n          },\n        });\n      }}\n      thousandSeparator\n      isNumericString\n      prefix=\"\"\n    />\n  );\n}\n\nNumberFormatCustom.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nconst BorderLinearProgress = withStyles((theme) => ({\n  root: {\n    height: 10,\n    borderRadius: 5,\n  },\n  colorPrimary: {\n    backgroundColor: \"#cedbce\", //theme.palette.grey[theme.palette.type === 'light' ? 200 : 700],\n  },\n  bar: {\n    borderRadius: 5,\n    backgroundColor: \"#2f942e\",\n  },\n}))(LinearProgress);\nfunction LinearProgressWithLabel(props) {\n  return (\n    <Box display=\"flex\" alignItems=\"center\">\n      <Box width=\"100%\" mr={1}>\n        <BorderLinearProgress variant=\"determinate\" {...props} />\n      </Box>\n      <Box minWidth={35}>\n        <Typography\n          style={{ fontWeight: \"800\", color: \"#5e855e\" }}\n          variant=\"body2\"\n          color=\"textSecondary\"\n        >{`${Math.round(props.value)}%`}</Typography>\n      </Box>\n    </Box>\n  );\n}\n\nLinearProgressWithLabel.propTypes = {\n  /**\n   * The value of the progress indicator for the determinate and buffer variants.\n   * Value between 0 and 100.\n   */\n  value: PropTypes.number.isRequired,\n};\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable\n      handle=\"#draggable-dialog-title\"\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\n    >\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nexport default function InvoiceDialog(props) {\n  const classes = useStyles();\n\n  const [state, setState] = React.useContext(GlobalState);\n  const [saving, setSaving] = useState(false);\n\n  const defaultCode = null; //{code:\"\",description:\"\",price:\"0\"}\n\n  const [code, setCode] = useState(defaultCode);\n  const [codeError, setCodeError] = useState(false);\n\n  const [description, setDescription] = useState(\"\");\n  const [descriptionError, setDescriptionError] = useState(false);\n\n  const [notes, setNotes] = useState(\"\");\n  const notesChanged = (event) => {\n    setNotes(event.target.value);\n  };\n\n  const [items, setItems] = React.useState([]);\n\n  const [price, setPrice] = useState(\"\");\n  const [priceError, setPriceError] = useState(false);\n\n  const [title, setTitle] = React.useState(\"INVOICE ISSUANCE\");\n\n  const [allCodes, setAllCodes] = React.useState([]);\n\n  useEffect(() => {\n    if (props.invoice) {\n      setItems(props.invoice.items);\n      setNotes(props.invoice.notes || \"\");\n      setTitle(\"EDIT INVOICE\");\n    } else {\n      setTitle(\"INVOICE ISSUANCE\");\n    }\n\n    fetchAllCodes();\n\n    return () => {\n      setItems([]);\n    };\n  }, [props.invoice]);\n\n  useEffect(() => {\n    if (!props.invoice && props.defaultCodes) {\n      setItems(props.defaultCodes)\n    }\n\n    return () => {\n      setItems([]);\n    };\n  }, [props.defaultCodes]);\n\n\n\n  const fetchAllCodes = async () => {\n    try {\n      const res = await InvoiceService.getAllCodes();\n      setAllCodes(res.data.result);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const priceChanged = (event) => {\n    setPrice(event.target.value);\n    setPriceError(false);\n  };\n\n  const codeChanged = (event) => {\n    setCode(event.target.value?.toUpperCase());\n    setCodeError(false);\n  };\n\n  const descriptionChanged = (event) => {\n    setDescription(event.target.value);\n    setDescriptionError(false);\n  };\n\n  const handleClose = (refresh) => {\n    if (saving) return;\n\n    setPrice(\"\");\n    setCode(defaultCode);\n    setDescription(\"\");\n    setPriceError(false);\n    setCodeError(false);\n    setDescriptionError(false);\n    setItems([]);\n    setNotes(\"\");\n    setSaving(false);\n\n    props.handleClose(refresh);\n  };\n\n  const codeLeft = () => {\n    fetchCodeDetails();\n  };\n\n  const fetchCodeDetails = async () => {\n    try {\n      setDescription(\"...\");\n      const res = await InvoiceService.getCodeDetails(code);\n      if (res.data.status === \"OK\") {\n        const result = res.data.result;\n        if (result.length === 0) {\n          setCodeError(true);\n          setDescription(\"\");\n          setPrice(\"\");\n        } else if (result.length >= 1) {\n          setDescription(result[0].description);\n          setPrice(result[0].price);\n          setDescriptionError(false);\n          setPriceError(false);\n        }\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const addItemClicked = () => {\n    if (!validateItem()) {\n      return;\n    }\n\n    setItems([\n      ...items,\n      { code: code.code, description: code.description, price: code.price },\n    ]);\n    setCode(defaultCode);\n  };\n\n  const addItemClicked2 = () => {\n    if (!validateItem2()) {\n      return;\n    }\n\n    setItems([...items, { code: \"\", description: description, price: price }]);\n    setDescription(\"\");\n    setPrice(\"\");\n  };\n\n  const validateItem = () => {\n    let error = false;\n    if (!code) return false;\n\n    if (!code.description || code.description.length === 0) {\n      error = true;\n    }\n    if (!code.price || code.price.length === 0) {\n      error = true;\n    }\n\n    return !error;\n  };\n\n  const validateItem2 = () => {\n    let error = false;\n    if (!description || description.length === 0) {\n      setDescriptionError(true);\n      error = true;\n    }\n    if (!price || price.length === 0) {\n      setPriceError(true);\n      error = true;\n    }\n\n    return !error;\n  };\n\n  const removeItem = (index) => {\n    let temp = [...items];\n    temp.splice(index, 1);\n    setItems(temp);\n  };\n\n  const getGrandTotal = (_items) => {\n    let total = 0;\n    _items.forEach((element) => {\n      total += parseFloat(element.price);\n    });\n\n    return total;\n  };\n\n  const saveClikced = async () => {\n    if (items.length === 0 && !props.invoice) {\n      return;\n    }\n\n    try {\n      setSaving(true);\n      let name = \"\";\n      let postCode = \"\";\n      let address = \"\";\n\n      if (props.booking.formData) {\n        const formData = JSON.parse(props.booking.formData)\n        name = `${formData.title} ${formData.forename} ${formData.surname}`;\n        postCode = formData.postCode;\n        address = formData.address;\n      } else if (props.booking.forename && props.booking.surname) {\n        name = `${props.booking.forename} ${props.booking.surname}`;\n        postCode = props.booking.postCode;\n        address = props.booking.address;\n      } else if (props.booking.fullname) {\n        name = `${props.booking.fullname}`;\n      }\n\n      const invoice = {\n        name: name,\n        date: new Date(),\n        dateAttended: new Date(props.booking.bookingDate),\n        items: items,\n        grandTotal: getGrandTotal(items),\n        bookingId: props.booking._id,\n        postCode: postCode,\n        address: address,\n        notes: notes,\n      };\n      if (!props.invoice) {\n        await InvoiceService.createInvoice(invoice);\n      } else if (items.length > 0) {\n        await InvoiceService.updateInvoice(\n          props.invoice.invoiceNumber,\n          invoice\n        );\n      } else {\n        await InvoiceService.deleteinvoice(props.invoice.invoiceNumber);\n      }\n\n      setSaving(false);\n      handleClose(true);\n    } catch (err) {\n      console.error(err);\n      setSaving(false);\n    }\n  };\n\n  return (\n    <React.Fragment>\n      {props.booking && (\n        <React.Fragment>\n          <Dialog\n            maxWidth=\"md\"\n            open={props.open}\n            onClose={() => handleClose(false)}\n            PaperComponent={PaperComponent}\n            aria-labelledby=\"form-dialog-title\"\n          >\n            <DialogTitle id=\"draggable-dialog-title\">\n              <Grid\n                container\n                spacing={2}\n                direction=\"row\"\n                justify=\"center\"\n                alignItems=\"center\"\n              >\n                <Grid item>\n                  <ReceiptIcon style={{ color: \"#1cb2c9\", fontSize: \"3rem\" }} />\n                </Grid>\n\n                <Grid item>\n                  <div\n                    style={{\n                      color: \"#1cb2c9\",\n                      paddingBottom: \"10px\",\n                      fontWeight: \"800\",\n                    }}\n                  >\n                    {`${title}`}\n                  </div>\n                </Grid>\n              </Grid>\n\n              <Divider />\n            </DialogTitle>\n            <DialogContent>\n              <div\n                style={{\n                  height: \"700px\",\n                  width: \"100%\",\n                }}\n              >\n                <Grid\n                  container\n                  direction=\"column\"\n                  justify=\"flex-start\"\n                  spacing={1}\n                  alignItems=\"flex-start\"\n                >\n                  <Grid item style={{ width: \"100%\" }}>\n                    <Grid container direction=\"row\" spacing={5}>\n                      <Grid item xs={10}>\n                        <Autocomplete\n                          id=\"code-auto-complete\"\n                          value={code}\n                          onChange={(event, newValue) => {\n                            setCode(newValue);\n                          }}\n                          options={allCodes}\n                          getOptionLabel={(option) =>\n                            `.${option.code} -- ${\n                              option.description\n                            } -- ${parseFloat(\n                              option.price\n                            ).toLocaleString(\"en-GB\", {\n                              style: \"currency\",\n                              currency: \"GBP\",\n                            })}`\n                          }\n                          style={{ width: \"750px\" }}\n                          renderInput={(params) => (\n                            <TextField\n                              {...params}\n                              label=\"System Codes\"\n                              helperText=\"Standard codes already defined in the system\"\n                            />\n                          )}\n                        />\n                      </Grid>\n\n                      <Grid item xs={2}>\n                        <Button\n                          onClick={addItemClicked}\n                          variant=\"outlined\"\n                          color=\"primary\"\n                          style={{ marginTop: \"15px\" }}\n                          disabled={saving}\n                        >\n                          + Add\n                        </Button>\n                      </Grid>\n                    </Grid>\n                  </Grid>\n\n                  <Grid item style={{ width: \"100%\", marginTop: \"20px\" }}>\n                    <Grid container direction=\"row\" spacing={5}>\n                      <Grid item xs={8}>\n                        <TextField\n                          error={descriptionError}\n                          value={description}\n                          onChange={descriptionChanged}\n                          fullWidth\n                          label=\"Description (Custom)\"\n                          name=\"desc\"\n                          helperText=\"You can enter any description you want to be placed on the invoice\"\n                          id=\"desc-id\"\n                        />\n                      </Grid>\n\n                      <Grid item xs={2}>\n                        <TextField\n                          error={priceError}\n                          value={price}\n                          onChange={priceChanged}\n                          fullWidth\n                          label=\"Price\"\n                          name=\"price\"\n                          id=\"price-id\"\n                          InputProps={{\n                            inputComponent: NumberFormatCustom,\n                            startAdornment: (\n                              <InputAdornment position=\"start\">\n                                £\n                              </InputAdornment>\n                            ),\n                          }}\n                        />\n                      </Grid>\n\n                      <Grid item xs={2}>\n                        <Button\n                          onClick={addItemClicked2}\n                          variant=\"outlined\"\n                          color=\"primary\"\n                          style={{ marginTop: \"12px\" }}\n                          disabled={saving}\n                        >\n                          + Add\n                        </Button>\n                      </Grid>\n                    </Grid>\n                  </Grid>\n\n                  <div\n                    style={{\n                      backgroundColor: \"#fff\",\n                      color: \"#1cb2c9\",\n                      fontWeight: \"500\",\n                      fontSize: \"0.95rem\",\n                      padding: \"5px 8px\",\n                      marginBottom: \"-15px\",\n                      marginLeft: \"10px\",\n                      zIndex: \"99\",\n                      marginTop: \"30px\",\n                    }}\n                  >\n                    Invoice Items\n                  </div>\n\n                  <div\n                    style={{\n                      width: \"100%\",\n                      height: \"300px\",\n                      overflowY: \"scroll\",\n                      border: \"1px solid #ddd\",\n                      borderRadius: \"4px\",\n                      padding: \"25px\",\n                      position: \"relative\",\n                    }}\n                  >\n                    <Grid item>\n                      <Grid\n                        container\n                        direction=\"column\"\n                        justify=\"flex-start\"\n                        spacing={2}\n                        alignItems=\"flex-start\"\n                      >\n                        <Grid item style={{ width: \"100%\", fontWeight: \"500\" }}>\n                          <Grid container direction=\"row\" spacing={4}>\n                            <Grid item xs={2}>\n                              Code\n                            </Grid>\n                            <Grid item xs={5}>\n                              Description\n                            </Grid>\n                            <Grid item xs={2}>\n                              Price\n                            </Grid>\n                            <Grid item xs={3}></Grid>\n                          </Grid>\n                        </Grid>\n                        {items.map((item, index) => (\n                          <Grid item style={{ width: \"100%\" }}>\n                            <Grid container direction=\"row\" spacing={4}>\n                              <Grid item xs={2}>\n                                {item.code}\n                              </Grid>\n                              <Grid item xs={5}>\n                                {item.description}\n                              </Grid>\n                              <Grid item xs={2}>\n                                {parseFloat(item.price).toLocaleString(\n                                  \"en-GB\",\n                                  { style: \"currency\", currency: \"GBP\" }\n                                )}\n                              </Grid>\n                              <Grid item xs={3}>\n                                <Tooltip title=\"Remove Item\">\n                                  <IconButton\n                                    style={{ marginTop: \"-15px\" }}\n                                    onClick={() => removeItem(index)}\n                                  >\n                                    <DeleteIcon color=\"primary\" />\n                                  </IconButton>\n                                </Tooltip>\n                              </Grid>\n                            </Grid>\n                          </Grid>\n                        ))}\n                      </Grid>\n                    </Grid>\n                  </div>\n\n                  <Grid item style={{ marginTop: \"10px\", width:\"100%\", display:\"flex\", justifyContent:\"flex-end\", paddingRight:\"30px\" }}>\n                    <span style={{ fontWeight: \"500\", color: \"#777\" }}>\n                      Grand Total :{\" \"}\n                    </span>{\" \"}\n                    <span\n                      style={{\n                        fontWeight: \"500\",\n                        color: \"#1cb2c9\",\n                        marginLeft: \"10px\",\n                        fontSize: \"1rem\",\n                      }}\n                    >\n                      {\" \"}\n                      {getGrandTotal(items).toLocaleString(\"en-GB\", {\n                        style: \"currency\",\n                        currency: \"GBP\",\n                      })}{\" \"}\n                    </span>\n                  </Grid>\n\n                  <Grid item style={{ marginTop: \"10px\", width: \"100%\" }}>\n                    <TextField\n                      value={notes}\n                      onChange={notesChanged}\n                      multiline\n                      rows={2}\n                      helperText=\"* notes will be printed on the invoice (optional)\"\n                      label=\"Notes\"\n                      fullWidth\n                      variant=\"outlined\"\n                      placeholder=\"enter any addional notes you want to be printed on the invoice...\"\n                    ></TextField>\n                  </Grid>\n                </Grid>\n              </div>\n\n              <Backdrop className={classes.backdrop} open={saving}>\n                <CircularProgress color=\"inherit\" />\n              </Backdrop>\n            </DialogContent>\n            <DialogActions>\n              <Grid\n                container\n                direction=\"row\"\n                justify=\"flex-end\"\n                alignItems=\"center\"\n                spacing={1}\n              >\n                <Grid item>\n                  <Button\n                    onClick={() => handleClose(false)}\n                    style={{ width: \"100px\" }}\n                    disabled={saving}\n                  >\n                    back\n                  </Button>\n                </Grid>\n                <Grid item>\n                  <Button\n                    onClick={saveClikced}\n                    variant=\"contained\"\n                    color=   {props.invoice ? 'secondary' : 'primary'}\n                    // style={{ width: \"100px\" }}\n                    disabled={saving}\n                  >\n                    {props.invoice ? 'Save Changes' : 'Issue Invoice'}\n                  </Button>\n                </Grid>\n              </Grid>\n            </DialogActions>\n          </Dialog>\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n}\n","import PropTypes from 'prop-types';\n\n\nimport React, { useEffect } from 'react';\nimport Typography from '@material-ui/core/Typography';\n\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\n\n\nimport dateformat from 'dateformat';\nimport { FormControl, IconButton, InputLabel, Select, Tooltip } from '@material-ui/core';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport CloseIcon from '@material-ui/icons/Close';\nimport TodayIcon from '@material-ui/icons/Today';\n\n\nconst useStyles = makeStyles((theme) => ({\n\n    loadingBox: {\n\n    }\n\n}));\n\n\nconst DateField = ({ title, value, dateChanged, error, todayButton, children }) => {\n\n    const [day, setDay] = React.useState('');\n    const [month, setMonth] = React.useState('');\n    const [year, setYear] = React.useState('');\n\n    const [dayArray, setDayArray] = React.useState([]);\n    const [monthArray, setMonthArray] = React.useState([]);\n    const [yearArray, setYearArray] = React.useState([]);\n\n    const updateDate = (dd, mm, yyyy) => {\n        let dayStr = `${dd}`;\n        let monthStr = `${mm + 1}`;\n\n\n        if (dayStr.length === 1) {\n            dayStr = `0${dayStr}`;\n        }\n\n        if (monthStr.length === 1) {\n            monthStr = `0${monthStr}`;\n        }\n\n        dateChanged(`${yyyy}-${monthStr}-${dayStr}`);\n\n\n    }\n\n    const handleDayChanged = (event) => {\n        setDay(event.target.value);\n        updateDate(event.target.value, month, year);\n    };\n\n    const handleMonthChanged = (event) => {\n        setMonth(event.target.value);\n        updateDate(day, event.target.value, year);\n    };\n\n    const handleYearChanged = (event) => {\n        setYear(event.target.value);\n        updateDate(day, month, event.target.value);\n    };\n\n    const resetDate = () => {\n        setDay(\"\")\n        setYear(\"\")\n        setMonth(\"\")\n        dateChanged(\"\")\n    }\n\n    const todayDate = () => {\n        const today = new Date()\n        updateDate(today.getDate(), today.getMonth(), today.getFullYear())\n    }\n\n\n    useEffect(() => {\n        if (value && value.length === 10) {\n            const d = parseInt(value.substr(8, 2));\n            const m = parseInt(value.substr(5, 2));\n            const y = parseInt(value.substr(0, 4));\n\n            setDay(d);\n            setMonth(m - 1);\n            setYear(y);\n        }else if (!value)\n        {\n            resetDate()\n        }\n\n\n    }, [value]);\n\n    useEffect(() => {\n\n        const days = [];\n        const months = [];\n        const years = [];\n\n\n        for (var i = 1; i <= 31; i++) {\n            days.push(i);\n        }\n\n        for (i = 0; i < 12; i++) {\n            months.push(dateformat(new Date(2020, i, 5), 'mmmm'));\n        }\n\n        for (i = 1900; i <= new Date().getFullYear() + 1; i++) {\n            years.push(i);\n        }\n\n\n        setDayArray(days);\n        setMonthArray(months);\n        setYearArray(years);\n\n    }, [])\n\n    return (\n\n        <React.Fragment>\n\n\n            <div style={{ position: \"relative\", border: `1px solid ${error ? 'red' : '#ddd'}`, borderRadius: \"10px\", padding: \"20px\", paddingBottom: \"20px\", marginTop: \"20px\" }}>\n\n                <div style={{ position: \"absolute\", top: \"-15px\", left: \"15px\", backgroundColor: \"#fff\", color: `${error ? 'red' : '#555'}`, padding: \"5px\", paddingLeft: \"10px\", paddingRight: \"10px\" }}>\n                    {title}\n                </div>\n\n                <div style={{ position: \"absolute\", top: \"-25px\", right: \"10px\", backgroundColor: \"#fff\", color: `${error ? 'red' : '#555'}`, padding: \"5px\", paddingLeft: \"10px\", paddingRight: \"10px\" }}>\n                    <Tooltip title=\"Clear Date\">\n                        <IconButton onClick={resetDate}>\n                            <CloseIcon />\n                        </IconButton>\n                    </Tooltip>\n                </div>\n\n                {todayButton && (\n                    <div style={{ position: \"absolute\", top: \"-25px\", right: \"70px\", backgroundColor: \"#fff\", color: `${error ? 'red' : '#555'}`, padding: \"5px\", paddingLeft: \"10px\", paddingRight: \"10px\" }}>\n                        <Tooltip title=\"Today\">\n                            <IconButton onClick={todayDate}>\n                                <TodayIcon />\n                            </IconButton>\n                        </Tooltip>\n                    </div>\n\n                )}\n\n\n\n\n\n                <Grid\n                    container\n                    direction=\"row\"\n                    justify=\"flex-start\"\n                    alignItems=\"flex-start\"\n                    spacing={2}\n                >\n\n\n                    <Grid item xs={12} sm={4}>\n                        <FormControl fullWidth>\n                            <InputLabel id=\"day-label\">Day</InputLabel>\n                            <Select\n\n                                labelId=\"day-label\"\n                                id=\"day-select\"\n                                value={day}\n                                onChange={handleDayChanged}\n                            >\n                                {\n                                    dayArray.map(item => (\n                                        <MenuItem value={item}>{item}</MenuItem>\n                                    )\n                                    )}\n                            </Select>\n                        </FormControl>\n\n\n                    </Grid>\n\n                    <Grid item xs={12} sm={4}>\n                        <FormControl fullWidth>\n                            <InputLabel id=\"month-label\">Month</InputLabel>\n                            <Select\n                                labelId=\"month-label\"\n                                id=\"month-select\"\n                                value={month}\n                                onChange={handleMonthChanged}\n                            >\n                                {\n                                    monthArray.map((item, index) => (\n                                        <MenuItem value={index}>{item}</MenuItem>\n                                    )\n                                    )}\n                            </Select>\n                        </FormControl>\n\n\n                    </Grid>\n\n                    <Grid item xs={12} sm={4}>\n                        <FormControl fullWidth>\n                            <InputLabel id=\"day-label\">Year</InputLabel>\n                            <Select\n                                labelId=\"year-label\"\n                                id=\"year-select\"\n                                value={year}\n                                onChange={handleYearChanged}\n                            >\n                                {\n                                    yearArray.map(item => (\n                                        <MenuItem value={item}>{item}</MenuItem>\n                                    )\n                                    )}\n                            </Select>\n                        </FormControl>\n                    </Grid>\n                </Grid>\n\n                <div>\n                    {children}\n                </div>\n\n            </div>\n\n\n        </React.Fragment>\n    );\n}\n\n\nDateField.propTypes = {\n    title: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired,\n    dateChanged: PropTypes.func.isRequired,\n    error: PropTypes.bool\n};\n\nexport default DateField;\n\n\n\n\n","import API from './api';\nimport axiosRetry from 'axios-retry';\n\nexport default class PatientService {\n\n   static getNewPatientID = () =>\n   {\n      return API.get(`/api/optimalvision/patient/getnewpatientid`);\n   }\n\n   static registerNewPatient = (payload) =>\n   {\n      return API.post(`/api/optimalvision/patient/registernewpatient`, payload);\n   }\n\n   static updatePatient = (payload) =>\n   {\n      return API.post(`/api/optimalvision/patient/updatepatient`, payload);\n   } \n\n   static deletePatient = (id) =>\n   {\n      return API.post(`/api/optimalvision/patient/deletepatient?id=${id}`);\n   } \n\n   static unDeletePatient = (id) =>\n   {\n      return API.post(`/api/optimalvision/patient/undeletepatient?id=${id}`);\n   } \n   \n    static getPatientById = (id) =>\n    {\n       return API.get(`/api/optimalvision/patient/getpatientbyid?id=${id}`);\n    }\n\n    static getPatientByPatientId = (patientID) =>\n    {\n       return API.get(`/api/optimalvision/patient/getpatientbypatientid?patientID=${patientID}`);\n    }\n\n    static getPatientByEmail = (email) =>\n    {\n       return API.get(`/api/optimalvision/patient/getpatientbyemail?email=${email}`);\n    }\n\n\n    static getAllPatients = () =>\n    {\n      return API.get(`/api/optimalvision/patient/getallpatients`);\n    }\n\n    static getDeletedPatients= (limit) =>\n    {\n      if (!limit) limit = 25 \n       return API.get(`/api/optimalvision/patiant/getdeletedpatients`);\n    }\n\n}","import API from './api';\nimport axiosRetry from 'axios-retry';\n\nexport default class TemplateService {\n\n   static getEmailPreview = (templateId, bookingId, patientId) =>\n   {\n      return API.post(`/api/optimalvision/emailtemplate/getemailpreview`, {templateId,bookingId,patientId});\n   }\n\n   static sendManualEmail = (templateId, sendTo, bookingId, patientId) =>\n   {\n      return API.post(`/api/optimalvision/emailtemplate/sendmanualemail`, {templateId,sendTo,bookingId,patientId});\n   }\n\n   static registerNewTemplate = (payload) =>\n   {\n      return API.post(`/api/optimalvision/emailtemplate/registernewtemplate`, payload);\n   }\n\n   static updateTemplate = (payload) =>\n   {\n      return API.post(`/api/optimalvision/emailtemplate/updatetemplate`, payload);\n   } \n\n   static deleteTemplate = (id) =>\n   {\n      return API.post(`/api/optimalvision/emailtemplate/deletetemplate?id=${id}`);\n   } \n\n    static getTemplateById = (id) =>\n    {\n       return API.get(`/api/optimalvision/emailtemplate/gettemplatebyid?id=${id}`);\n    }\n\n    static getTemplateBytemplateId = (templateID) =>\n    {\n       return API.get(`/api/optimalvision/emailtemplate/gettemplatebytemplateid?templateID=${templateID}`);\n    }\n\n    static getAllTemplates = () =>\n    {\n      return API.get(`/api/optimalvision/emailtemplate/getalltemplates`);\n    }\n}","import API from './api';\nimport axiosRetry from 'axios-retry';\n\nexport default class TemplateService {\n\n   static getSMSPreview = (templateId, bookingId, patientId) =>\n   {\n      return API.post(`/api/optimalvision/smstemplate/getsmspreview`, {templateId,bookingId,patientId});\n   }\n\n   static sendManualSMS = (templateId, sendTo, bookingId, patientId) =>\n   {\n      return API.post(`/api/optimalvision/smstemplate/sendmanualsms`, {templateId,sendTo,bookingId,patientId});\n   }\n\n   static registerNewTemplate = (payload) =>\n   {\n      return API.post(`/api/optimalvision/smstemplate/registernewtemplate`, payload);\n   }\n\n   static updateTemplate = (payload) =>\n   {\n      return API.post(`/api/optimalvision/smstemplate/updatetemplate`, payload);\n   } \n\n   static deleteTemplate = (id) =>\n   {\n      return API.post(`/api/optimalvision/smstemplate/deletetemplate?id=${id}`);\n   } \n\n    static getTemplateById = (id) =>\n    {\n       return API.get(`/api/optimalvision/smstemplate/gettemplatebyid?id=${id}`);\n    }\n\n    static getTemplateBytemplateId = (templateID) =>\n    {\n       return API.get(`/api/optimalvision/smstemplate/gettemplatebytemplateid?templateID=${templateID}`);\n    }\n\n    static getAllTemplates = () =>\n    {\n      return API.get(`/api/optimalvision/smstemplate/getalltemplates`);\n    }\n}","import React, { useEffect, useRef, useState } from \"react\";\nimport BookService from \"./services/BookService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {\n    AppBar,\n    Backdrop,\n    Button,\n    Checkbox,\n    CircularProgress,\n    DialogActions,\n    DialogContentText,\n    Divider,\n    FormControlLabel,\n    Grid,\n    IconButton,\n    InputAdornment,\n    InputLabel,\n    Link,\n    makeStyles,\n    MenuItem,\n    Select,\n    TextField,\n    Toolbar,\n    Tooltip,\n} from \"@material-ui/core\";\nimport GlobalState from \"./../GlobalState\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\n\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Draggable from \"react-draggable\";\nimport Paper from \"@material-ui/core/Paper\";\n\nimport Alert from \"@material-ui/lab/Alert\";\n\nimport PropTypes from \"prop-types\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport Box from \"@material-ui/core/Box\";\n\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport NumberFormat from \"react-number-format\";\n\nimport AccessAlarmsIcon from '@material-ui/icons/AccessAlarms';\nimport DateField from \"./DateField\";\n\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\nimport CloseIcon from '@material-ui/icons/Close';\nimport Slide from '@material-ui/core/Slide';\nimport PatientService from \"./services/PatientService\";\nimport dateFormat from \"dateformat\";\n\nimport SaveIcon from '@material-ui/icons/Save';\nimport TemplateService from \"./services/EmailTemplateService\";\nimport SMSTemplateService from \"./services/SMSTemplateService\";\n\n// import createDOMPurify from 'dompurify'\n// import { JSDOM } from 'jsdom'\n\nimport SendIcon from '@material-ui/icons/Send';\nimport CheckIcon from '@material-ui/icons/Check';\n\n// const window = (new JSDOM('')).window\n// const DOMPurify = createDOMPurify(window)\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`vertical-tabpanel-${index}`}\n            aria-labelledby={`vertical-tab-${index}`}\n            {...other}\n            style={{ width: \"100%\" }}\n        >\n            {value === index && (\n                <div style={{ padding: \"20px\", width: \"100%\" }}>\n                    {children}\n                </div>\n            )}\n        </div>\n    );\n}\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n    return {\n        id: `vertical-tab-${index}`,\n        'aria-controls': `vertical-tabpanel-${index}`,\n    };\n}\n\nconst useStyles = makeStyles((theme) => ({\n    appBar: {\n        position: 'relative',\n    },\n    title: {\n        marginLeft: theme.spacing(2),\n        flex: 1,\n    },\n\n    root: {\n        paddingTop: \"8px\",\n        flexGrow: 1,\n        backgroundColor: theme.palette.background.paper,\n        display: 'flex',\n        height: 224,\n    },\n    tabs: {\n        borderRight: `1px solid ${theme.palette.divider}`,\n    },\n\n    backdrop: {\n        zIndex: theme.zIndex.drawer + 5,\n        color: \"#fff\",\n    },\n\n    titleCenter: {\n        width: \"100%\",\n        textAlign: \"center\",\n        fontSize: \"1.1rem\",\n        color: theme.palette.primary.main,\n        fontWeight: \"500\",\n        borderBottom: `2px dashed ${theme.palette.primary.main}`\n    },\n\n    eyeText: {\n        width: \"100%\",\n        textAlign: \"left\",\n        fontSize: \"1.1rem\",\n        color: theme.palette.primary.main,\n        fontWeight: \"500\",\n        paddingTop: \"15px\"\n    },\n\n    multilineColor:{\n        color:'#333',\n        lineHeight: \"1.5rem\"\n    }\n\n}));\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport default function PatientDialog(props) {\n    const classes = useStyles();\n\n    const [state, setState] = React.useContext(GlobalState);\n\n    const [patient, setPatient] = React.useState({ formData: {} })\n    const [saving, setSaving] = React.useState(false);\n\n    const [emailSent, setEmailSent] = React.useState(false)\n    const [emailSending, setEmailSending] = React.useState(false)\n\n    const [smsSent, setSMSSent] = React.useState(false)\n    const [smsSending, setSMSSending] = React.useState(false)\n\n\n    const [patientIDError, setPatientIDError] = React.useState(false)\n    const [nameError, setNameError] = React.useState(false)\n    const [surnameError, setSurnameError] = React.useState(false)\n    const [birthDateError, setBirthDateError] = React.useState(false)\n\n    const [patientRepeated, setPatientRepeated] = React.useState(false)\n\n\n    const [value, setValue] = React.useState(0);\n\n    const [history, setHistory] = React.useState([]);\n    const [backupFormData, setBackUpFormData] = React.useState(null);\n\n    const [openDeleteDialog, setOpenDeleteDialog] = React.useState(false)\n\n    const [selectedTemplateID, setSelectedTemplateID] = React.useState(null)\n    const [selectedTemplate, setSelectedTemplate] = React.useState(null)  \n    const [emailTemplates, setEmailTemplates] = React.useState([])\n\n    const [selectedSMSTemplateID, setSelectedSMSTemplateID] = React.useState(null)\n    const [selectedSMSTemplate, setSelectedSMSTemplate] = React.useState(null)  \n    const [smsTemplates, setSMSTemplates] = React.useState([])\n\n\n    const handleCloseDeleteDialog = () => {\n        setOpenDeleteDialog(false)\n    }\n\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    const createPreview = async (_template) => {\n        try{\n            const res = await TemplateService.getEmailPreview(_template.templateID, null, patient.patientID)\n            if (res && res.data && res.data.result){\n                setSelectedTemplate({..._template, html: res.data.result.content, subject: res.data.result.newSubject})\n            }\n\n        }catch(err)\n        {\n            console.error(err)\n        }\n    }\n\n    const createSMSPreview = async (_template) => {\n        try{\n            const res = await SMSTemplateService.getSMSPreview(_template.templateID, null, patient.patientID)\n            if (res && res.data && res.data.result){\n                setSelectedSMSTemplate({..._template, rawText: res.data.result.content})\n            }\n\n        }catch(err)\n        {\n            console.error(err)\n        }\n    }\n\n\n    useEffect(() => {\n        if (props.open) {\n            const _history = []\n\n            if (props.patient) {\n                setPatient({ ...props.patient, formData: props.patient.formData ? JSON.parse(props.patient.formData) : {} })\n                setBackUpFormData(props.patient.formData ? JSON.parse(props.patient.formData) : {})\n                if (props.patient.history) {\n                    props.patient.history.forEach(record => {\n                        _history.push(JSON.parse(record))\n                    });\n                    setSelectedVersion(0)\n                }\n            }\n            else {\n                getNewPatientID()\n                setPatient({ formData: {},  name : props.name || '', surname: props.surname || ''})\n            }\n\n            setHistory(_history.reverse())\n            loadEmailTemplates()\n            loadSMSTemplates()\n\n        }\n    }, [props.patient, props.open])\n\n    const getNewPatientID = async () =>\n    {\n        setSaving(true)\n        const res = await PatientService.getNewPatientID()\n        setSaving(false)\n        if (res && res.data && res.data.result)\n        {\n            setPatient({...patient, patientID: res.data.result})\n            setPatientIDError(false)\n            setPatientRepeated(false)\n        }\n    }\n\n    const loadEmailTemplates = async () => {\n        try{\n            const res = await TemplateService.getAllTemplates()\n            if (res){\n                setEmailTemplates(res.data)\n            }\n\n        }catch(err)\n        {\n            console.error(err)\n        }\n    }\n\n    const loadSMSTemplates = async () => {\n        try{\n            const res = await SMSTemplateService.getAllTemplates()\n            if (res){\n                setSMSTemplates(res.data)\n            }\n\n        }catch(err)\n        {\n            console.error(err)\n        }\n    }\n\n\n    const handleClose = () => {\n        props.handleClose();\n        setValue(0)\n        setPatient({ formData: {} })\n        setPatientIDError(false)\n        setNameError(false)\n        setSurnameError(false)\n        setPatientRepeated(false)\n        setSelectedTemplate(null) \n        setSelectedTemplateID(null)\n        setSelectedSMSTemplate(null)\n        setSelectedSMSTemplateID(null)\n        setSMSSent(false)\n        setEmailSent(false)\n        setSMSSending(false)\n        setEmailSending(false)\n    };\n\n    const saveClicked = async () => {\n\n        if (!validatePatient()) {\n            setValue(0)\n            return\n        }\n\n        try {\n            setPatientRepeated(false)\n            setSaving(true)\n            patient.formData = JSON.stringify(patient.formData)\n            if (props.patient) {\n                const res = await PatientService.updatePatient({ id: patient._id, patient: patient })\n                setSaving(false)\n                if (res.data.status === \"OK\") {\n                    setState(state => ({ ...state, patientDialogDataChanged: !state.patientDialogDataChanged }))\n                    handleClose();\n                }\n            } else {\n                const res = await PatientService.registerNewPatient({ patient: patient })\n                setSaving(false)\n                if (res.data.status === \"OK\") {\n                    setState(state => ({ ...state, patientDialogDataChanged: !state.patientDialogDataChanged }))\n                    handleClose();\n                } else if (res.data.status === \"FAILED\" && res.data.error === \"Repeated Patient!\") {\n                    setPatientIDError(true)\n                    setPatientRepeated(true)\n                    setValue(0)\n                    setTimeout(() => {\n                        getNewPatientID()\n                    }, 1000);\n\n                }\n            }\n        }\n        catch (err) {\n            setSaving(false)\n            console.error(err)\n        }\n    }\n\n    const deleteClicked = async () => {\n\n        setOpenDeleteDialog(false)\n\n        setSaving(true)\n        try {\n            await PatientService.deletePatient(props.patient._id)\n            setSaving(false)\n            setState((state) => ({\n                ...state,\n                patientDialogDataChanged: !state.patientDialogDataChanged\n                    ? true\n                    : false,\n            }));\n            handleClose();\n        }\n        catch (err) {\n            console.error(err)\n            setSaving(false)\n        }\n    }\n\n    const validatePatient = () => {\n        var error = false\n        if (!patient.patientID || patient.patientID.trim().length === 0) {\n            error = true\n            setPatientIDError(true)\n        }\n        if (!patient.name || patient.name.trim().length === 0) {\n            error = true\n            setNameError(true)\n        }\n\n        if (!patient.surname || patient.surname.trim().length === 0) {\n            error = true\n            setSurnameError(true)\n        }\n\n        if (patient.birthDate && patient.birthDate.length !== 10) {\n            setBirthDateError(true)\n            error = true\n        }\n\n        return !error\n\n    }\n\n    const formatDate = (date) => {\n        return dateFormat(date, \"dd-mm-yyyy , HH:MM:ss\")\n    }\n\n    const [selectedVersion, setSelectedVersion] = React.useState(0)\n\n    const showHistoryComboBox = () => {\n        return (\n            <React.Fragment>\n                <div style={{ marginTop: \"-10px\" }}>\n                    <span style={{ color: \"#fff\", fontWeight: \"500\", fontSize: \"1rem\", marginRight: \"10px\" }}>\n                        Version :\n                    </span>\n                    <Select\n                        label=\"Version\"\n                        labelId=\"version-label\"\n                        id=\"version-label\"\n                        style={{ color: \"#fff\", padding: \"0px 10px\" }}\n                        value={selectedVersion}\n                        onChange={(event) => {\n                            setSelectedVersion(event.target.value)\n                            if (event.target.value === 0) {\n                                setPatient({ ...patient, formData: backupFormData })\n                            } else {\n                                setPatient({ ...patient, formData: history[event.target.value - 1] })\n                            }\n\n                        }}\n\n                    >\n                        <MenuItem value={0}>{`${formatDate(patient.formData.timeStamp)} ( Current )`}</MenuItem>\n\n                        {history.map((item, index) => (\n                            <MenuItem value={index + 1}>{`${formatDate(item.timeStamp)} ( History )`}</MenuItem>\n                        ))\n                        }\n                    </Select>\n\n                </div>\n            </React.Fragment>\n        )\n    }\n\n    const handleSelectedTemplateChanged = (value) =>\n    {\n        setSelectedTemplateID(value)\n        const template = emailTemplates.find(e => e.templateID === value)\n        setSelectedTemplate(template)\n        createPreview(template) \n        setEmailSent(false)\n    }\n\n    const handleSelectedSMSTemplateChanged = (value) =>\n    {\n        setSelectedSMSTemplateID(value)\n        const template = smsTemplates.find(e => e.templateID === value)\n        setSelectedSMSTemplate(template)\n        createSMSPreview(template) \n        setSMSSent(false)\n    }\n\n\n    const sendEmail = async () => {\n        try{\n            setEmailSending(true)\n            setSaving(true)\n\n            await TemplateService.sendManualEmail(selectedTemplate.templateID, patient.email, null, patient.patientID)\n\n\n            setEmailSending(false)\n            setEmailSent(true)\n            setSaving(false)\n\n        }catch(err)\n        {\n            console.error(err)\n            setEmailSending(false)\n            setSaving(false)\n        }\n\n    }\n\n    const sendSMS = async () => {\n        try{\n            setSMSSending(true)\n            setSaving(true)\n\n            await SMSTemplateService.sendManualSMS(selectedSMSTemplate.templateID, patient.mobileTel, null, patient.patientID)\n\n            setSMSSending(false)\n            setSMSSent(true)\n            setSaving(false)\n\n        }catch(err)\n        {\n            console.error(err)\n            setSMSSending(false)\n            setSaving(false)\n        }\n\n    }\n\n\n\n    return (\n        <React.Fragment>\n            <React.Fragment>\n                <Dialog fullScreen open={props.open} onClose={handleClose} TransitionComponent={Transition}>\n                    <AppBar className={classes.appBar} style={(selectedVersion > 0 && history && history.length > 0) ? { backgroundColor: \"#777\" } : {}} color=\"secondary\">\n                        <Toolbar>\n                            <IconButton edge=\"start\" color=\"inherit\" onClick={handleClose} aria-label=\"close\">\n                                <CloseIcon />\n                            </IconButton>\n                            <Typography variant=\"h6\" className={classes.title}>\n                                {props.title}\n                            </Typography>\n\n\n                            <Button startIcon={<SaveIcon />} variant=\"contained\" color=\"primary\" onClick={saveClicked} disabled={selectedVersion > 0 && history && history.length > 0}>\n                                {props.saveButtonText}\n                            </Button>\n                        </Toolbar>\n\n                        <Grid container direction=\"column\" alignItems=\"center\" justify=\"center\">\n\n                            {history && history.length > 0 && (\n                                <Grid item>\n                                    {showHistoryComboBox()}\n                                </Grid>\n                            )}\n                        </Grid>\n\n                    </AppBar>\n\n                    <div className={classes.root}>\n                        <Tabs\n                            orientation=\"vertical\"\n                            variant=\"scrollable\"\n                            value={value}\n                            onChange={handleChange}\n                            aria-label=\"Vertical tabs example\"\n                            indicatorColor=\"secondary\"\n                            textColor=\"secondary\"\n                            className={classes.tabs}\n                        >\n                            <Tab label=\"Personal Details\" {...a11yProps(0)} />\n                            <Tab label={`History & Symptoms`} {...a11yProps(1)} />\n                            <Tab label={`Notes From Consultation`} {...a11yProps(2)} />\n                            <Tab label=\"Recommendation\" {...a11yProps(3)} />\n                            {props.patient && (\n                                <Tab label=\"Send Emails (Manually)\" {...a11yProps(4)} />\n                            )}\n                            {props.patient && (\n                                <Tab label=\"Send SMS (Manually)\" {...a11yProps(5)} />\n                            )}\n\n                        </Tabs>\n                        <TabPanel value={value} index={0}>\n                            <Grid container spacing={4}>\n                                <Grid item xs={12} sm={6} md={4}>\n                                    <TextField\n                                        disabled={props.patient}\n                                        name=\"patientid\"\n                                        id=\"patientid\"\n                                        label=\"Patient ID\"\n                                        fullWidth\n                                        required\n                                        helperText={patientRepeated ? 'This PatientID is already assigned to another patient' : ''}\n                                        error={patientIDError}\n                                        value={patient.patientID || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, patientID: event.target.value })\n                                            setPatientIDError(false)\n                                        }}\n                                        autoComplete=\"none\"\n                                        variant=\"outlined\"\n                                    />\n                                </Grid>\n                                <Grid item xs={12} sm={6} md={4}>\n                                    <TextField\n                                        name=\"firstname\"\n                                        id=\"firstname\"\n                                        label=\"First Name\"\n                                        fullWidth\n                                        required\n                                        error={nameError}\n                                        value={patient.name || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, name: event.target.value })\n                                            setNameError(false)\n                                        }}\n                                        autoComplete=\"none\"\n                                        variant=\"outlined\"\n                                    />\n                                </Grid>\n                                <Grid item xs={12} sm={6} md={4}>\n                                    <TextField\n                                        name=\"surname\"\n                                        id=\"surname\"\n                                        label=\"Surname\"\n                                        fullWidth\n                                        required\n                                        error={surnameError}\n                                        value={patient.surname || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, surname: event.target.value })\n                                            setSurnameError(false)\n                                        }}\n                                        autoComplete=\"none\"\n                                        variant=\"outlined\"\n                                    />\n                                </Grid>\n                                <Grid item xs={12} sm={6} md={4}>\n                                    <FormControl fullWidth variant=\"outlined\" >\n                                        <InputLabel id=\"gender-label\">Gender</InputLabel>\n                                        <Select\n                                            label=\"Gender\"\n                                            labelId=\"gender-label\"\n                                            id=\"gender-label\"\n                                            fullWidth\n                                            style={{ height: \"90px\" }}\n                                            value={patient.gender || ''}\n                                            onChange={(event) => {\n                                                setPatient({ ...patient, gender: event.target.value })\n                                            }}\n\n                                        >\n                                            <MenuItem value={\"Male\"}>Male</MenuItem>\n                                            <MenuItem value={\"Female\"}>Female</MenuItem>\n                                        </Select>\n                                    </FormControl>\n                                </Grid>\n                                <Grid item xs={12} sm={6} md={8} style={{ marginTop: \"-20px\" }} >\n                                    <DateField\n                                        error={birthDateError}\n                                        value={patient.birthDate || ''}\n                                        title=\"DOB\"\n                                        dateChanged={(value) => {\n                                            setPatient({ ...patient, birthDate: value })\n                                            setBirthDateError(false)\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} sm={6} md={4}>\n                                    <TextField\n                                        name=\"postcode\"\n                                        id=\"postcode\"\n                                        label=\"Postcode\"\n                                        fullWidth\n                                        autoComplete=\"none\"\n                                        value={patient.postCode || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, postCode: event.target.value })\n                                        }}\n                                        variant=\"outlined\"\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} sm={6} md={8}>\n                                    <TextField\n                                        name=\"address\"\n                                        id=\"address\"\n                                        label=\"Address\"\n                                        fullWidth\n                                        autoComplete=\"none\"\n                                        value={patient.address || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, address: event.target.value })\n                                        }}\n\n                                        variant=\"outlined\"\n\n                                    />\n                                </Grid>\n\n                                <Grid item xs={12} sm={6} md={4}>\n                                    <TextField\n                                        name=\"hometel\"\n                                        id=\"hometel\"\n                                        label=\"Home Tel\"\n                                        fullWidth\n                                        autoComplete=\"none\"\n                                        value={patient.homeTel || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, homeTel: event.target.value })\n                                        }}\n                                        variant=\"outlined\"\n\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} sm={6} md={4}>\n                                    <TextField\n                                        name=\"mobiletel\"\n                                        id=\"mobiletel\"\n                                        label=\"Mobile Tel\"\n                                        fullWidth\n                                        autoComplete=\"none\"\n                                        value={patient.mobileTel || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, mobileTel: event.target.value })\n                                        }}\n\n                                        variant=\"outlined\"\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} sm={6} md={4}>\n                                    <TextField\n                                        name=\"email\"\n                                        id=\"email\"\n                                        label=\"Email\"\n                                        fullWidth\n                                        autoComplete=\"none\"\n                                        value={patient.email || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, email: event.target.value })\n                                        }}\n                                        variant=\"outlined\"\n\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} sm={6}>\n                                    <TextField\n                                        name=\"occupation\"\n                                        id=\"occupation\"\n                                        label=\"Occupation\"\n                                        fullWidth\n                                        autoComplete=\"none\"\n                                        value={patient.formData.occupation || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, occupation: event.target.value } })\n                                        }}\n\n                                        variant=\"outlined\"\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} sm={6}>\n                                    <TextField\n                                        name=\"gpname\"\n                                        id=\"gpname\"\n                                        label={`GP Name & Address`}\n                                        fullWidth\n                                        autoComplete=\"none\"\n                                        value={patient.formData.gpname || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, gpname: event.target.value } })\n                                        }}\n\n                                        variant=\"outlined\"\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} sm={6}>\n                                    <TextField\n                                        name=\"kincontact\"\n                                        id=\"kincontact\"\n                                        label=\"Next of Kin Contact\"\n                                        fullWidth\n                                        autoComplete=\"none\"\n                                        value={patient.formData.kincontact || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, kincontact: event.target.value } })\n                                        }}\n                                        variant=\"outlined\"\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} sm={6}>\n                                    <TextField\n                                        name=\"prevsighttest\"\n                                        id=\"prevsignttest\"\n                                        label=\"Previous Sight Test\"\n                                        fullWidth\n                                        autoComplete=\"none\"\n                                        value={patient.formData.prevsighttest || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, prevsighttest: event.target.value } })\n                                        }}\n                                        variant=\"outlined\"\n\n                                    />\n                                </Grid>\n\n                                {props.patient && (\n                                    <Grid item xs={12} style={{ marginTop: \"20px\" }}>\n                                        <Button\n                                            onClick={() => setOpenDeleteDialog(true)}\n                                            variant=\"contained\"\n                                            fullWidth\n                                            color=\"primary\"\n                                            // style={{ width: \"100px\" }}\n                                            style={{ backgroundColor: \"#c70000\", color: \"#fff\" }}\n                                            disabled={saving}\n                                        >\n                                            Delete This Patient\n                                  </Button>\n                                    </Grid>\n\n\n                                )}\n                            </Grid>\n                        </TabPanel>\n                        <TabPanel value={value} index={1}>\n                            <Grid container spacing={2}>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"cc\"\n                                        id=\"cc\"\n                                        label=\"C.C\"\n                                        fullWidth\n                                        multiline\n                                        rows={3}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.cc || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, cc: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"prevmedicalhistory\"\n                                        id=\"prevmedicalhistory\"\n                                        label=\"Previous Medical History\"\n                                        fullWidth\n                                        multiline\n                                        rows={3}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.prevmedicalhistory || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, prevmedicalhistory: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"prevocularhistory\"\n                                        id=\"prevocularhistory\"\n                                        label=\"Previous Ocular History\"\n                                        fullWidth\n                                        multiline\n                                        rows={3}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.prevocularhistory || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, prevocularhistory: event.target.value } })\n                                        }}\n\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"familyhistory\"\n                                        id=\"familyhistory\"\n                                        label=\"Family History\"\n                                        fullWidth\n                                        multiline\n                                        rows={3}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.familyhistory || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, familyhistory: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"medications\"\n                                        id=\"medications\"\n                                        label=\"Medications\"\n                                        fullWidth\n                                        multiline\n                                        rows={3}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.medications || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, medications: event.target.value } })\n                                        }}\n\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"grafth\"\n                                        id=\"grafth\"\n                                        label=\"Graft H\"\n                                        fullWidth\n                                        multiline\n                                        rows={3}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.grafth || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, grafth: event.target.value } })\n                                        }}\n\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"allergies\"\n                                        id=\"allregies\"\n                                        label=\"Allergies\"\n                                        fullWidth\n                                        multiline\n                                        rows={3}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.allergies || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, allergies: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"contactlenswearer\"\n                                        id=\"contactlenswearer\"\n                                        label=\"Contact Lens Wearer\"\n                                        fullWidth\n                                        multiline\n                                        rows={3}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        placeholder={` Yes/No \\n Soft/RGP/EW`}\n                                        value={patient.formData.contactlenswearer || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, contactlenswearer: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"hobbies\"\n                                        id=\"hobbies\"\n                                        label=\"Lifestyle / Hobbies\"\n                                        fullWidth\n                                        multiline\n                                        rows={3}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.hobbies || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, hobbies: event.target.value } })\n                                        }}\n\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"vdu\"\n                                        id=\"vdu\"\n                                        label=\"VDU\"\n                                        fullWidth\n                                        multiline\n                                        rows={3}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.vdu || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, vdu: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"othernotes\"\n                                        id=\"othernotes\"\n                                        label=\"Other Notes\"\n                                        fullWidth\n                                        multiline\n                                        rows={10}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.othernotes || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, othernotes: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"driver\"\n                                        id=\"driver\"\n                                        label=\"Driver\"\n                                        fullWidth\n                                        multiline\n                                        rows={3}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.driver || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, driver: event.target.value } })\n                                        }}\n\n\n                                    />\n                                </Grid>\n                            </Grid>\n                        </TabPanel>\n                        <TabPanel value={value} index={2}>\n                            <Grid container spacing={2}>\n                                <Grid item xs={12}>\n                                    <TextField\n                                        name=\"notesfromconsultation\"\n                                        id=\"notesfromconsultation\"\n                                        label=\"Notes From Consultation\"\n                                        fullWidth\n                                        multiline\n                                        rows={25}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.notesfromconsultation || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, notesfromconsultation: event.target.value } })\n                                        }}\n                                    />\n\n                                </Grid>\n                            </Grid>\n                        </TabPanel>\n\n\n                        <TabPanel value={value} index={3}>\n                            <Grid container spacing={2}>\n                                <Grid item xs={12}>\n                                    <TextField\n                                        name=\"recommendation\"\n                                        id=\"recommendation\"\n                                        label=\"Recommendation\"\n                                        fullWidth\n                                        multiline\n                                        rows={25}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.recommendation || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, recommendation: event.target.value } })\n                                        }}\n                                    />\n\n                                </Grid>\n                            </Grid>\n                        </TabPanel>\n                        \n                        {props.patient && (\n                            <TabPanel value={value} index={4}>\n                                <Grid container spacing={2} direction=\"column\">\n                                    <Grid item>\n                                        <div style={{fontSize:\"1.2rem\", color:\"#777\", fontWeight:\"500\", marginBottom:\"0px\"}}>\n                                            Here you can manually send emails (from templates) to the patients:\n                                        </div>   \n                                    </Grid>\n                                    <Grid item style={{marginBottom:\"10px\"}}>\n                                      <Alert severity=\"info\">Emails will be sent to  <span style={{fontWeight:\"500\"}}>\"{patient.email}\"</span></Alert>\n                                    </Grid>\n                                    <Grid item xs={6}>\n                                    <FormControl fullWidth variant=\"outlined\" className={classes.formControl}>\n                                        <InputLabel id=\"template-label-id\">Choose Your Template</InputLabel>\n                                            <Select\n                                                fullWidth\n                                                label=\"Choose Your Template\"\n                                                labelId=\"template-label-id\"\n                                                id=\"template-label\"\n                                                value={selectedTemplateID}\n                                                onChange={(event) => {\n                                                    handleSelectedTemplateChanged(event.target.value)\n                                                }}\n                                            >\n\n                                                {emailTemplates.map((item, index) => (\n                                                    <MenuItem value={item.templateID}>{`${item.templateID}`}</MenuItem>\n                                                ))\n                                                }\n\n                                            </Select>\n                                        </FormControl>\n                                    </Grid>\n                                    <Grid item>\n                                        {selectedTemplate && (\n                                            <React.Fragment>\n                                                <div style={{fontWeight:\"500\", color:\"#777\", fontSize:\"1rem\", width:\"100%\", padding:\"5px\"}}>\n                                                    Email Preview :\n                                                </div>\n                                                <Paper elevation={4} style={{padding:\"20px\",marginBottom:\"1px\", backgroundColor:\"#0083ba\"}}>\n                                                    <div style={{fontSize:\"1rem\", fontWeight:\"500\", color:\"#fff\", position:\"relative\"}}>\n                                                         To: {patient.email}\n                                                        <div style={{position:\"absolute\", right:\"5px\", top:\"-5px\"}}>\n                                                            {!emailSent && (\n                                                                <Button disabled={emailSending || (!patient.email || patient.email.length < 3)} onClick={sendEmail} startIcon={<SendIcon/>} variant=\"contained\" color=\"primary\">\n                                                                     Send Email\n                                                                 </Button>\n                                                            )}\n                                                            {emailSent && (\n                                                                <div style={{fontWeight:\"500\", fontSize:\"1rem\", color:\"#fff\"}}>\n                                                                    <Grid container spacing={1} alignItems=\"center\">\n                                                                        <Grid item>\n                                                                             Email Sent Successfully \n                                                                        </Grid>\n                                                                        <Grid item>\n                                                                            <CheckIcon/>\n                                                                        </Grid>\n                                                                    </Grid>\n                                                                    \n                                                                 </div>\n                                                            )}\n                                                        </div>\n                                                    </div>   \n                                                </Paper>\n                                                <Paper elevation={4} style={{padding:\"10px\",marginBottom:\"1px\", backgroundColor:\"#e6f8ff\"}}>\n                                                    <div style={{fontSize:\"1rem\", fontWeight:\"500\", color:\"#006b94\", position:\"relative\"}}>\n                                                         <span>Subject:</span> {selectedTemplate.subject}\n                                                    </div>\n                                                 </Paper>        \n\n                                                <Paper elevation={4} style={{padding:\"20px\"}}>\n                                                    <div \n                                                        // dangerouslySetInnerHTML={{ __html: DOMPurify.sanitize(selectedTemplate.html) }}\n                                                        dangerouslySetInnerHTML={{ __html: selectedTemplate.html}}\n                                                    >\n                                                    </div>\n                                                </Paper>\n                                            </React.Fragment>\n                                        )}\n                                    </Grid>\n\n                                </Grid>\n                             </TabPanel>                        \n                        )}\n\n                        {props.patient && (\n                            <TabPanel value={value} index={5}>\n                                <Grid container spacing={2} direction=\"column\">\n                                    <Grid item>\n                                        <div style={{fontSize:\"1.2rem\", color:\"#777\", fontWeight:\"500\", marginBottom:\"0px\"}}>\n                                            Here you can manually send sms (from templates) to the patients:\n                                        </div>   \n                                    </Grid>\n                                    <Grid item style={{marginBottom:\"10px\"}}>\n                                      <Alert severity=\"info\">SMS will be sent to <span style={{fontWeight:\"500\"}}>\"{patient.mobileTel}\"</span></Alert>\n                                    </Grid>\n                                    <Grid item xs={6}>\n                                    <FormControl fullWidth variant=\"outlined\" className={classes.formControl}>\n                                        <InputLabel id=\"template-label-id\">Choose Your Template</InputLabel>\n                                            <Select\n                                                fullWidth\n                                                label=\"Choose Your Template\"\n                                                labelId=\"template-label-id\"\n                                                id=\"template-label\"\n                                                value={selectedSMSTemplateID}\n                                                onChange={(event) => {\n                                                    handleSelectedSMSTemplateChanged(event.target.value)\n                                                }}\n                                            >\n\n                                                {smsTemplates.map((item, index) => (\n                                                    <MenuItem value={item.templateID}>{`${item.templateID}`}</MenuItem>\n                                                ))\n                                                }\n\n                                            </Select>\n                                        </FormControl>\n                                    </Grid>\n                                    <Grid item>\n                                        {selectedSMSTemplate && (\n                                            <React.Fragment>\n                                                <div style={{fontWeight:\"500\", color:\"#777\", fontSize:\"1rem\", width:\"100%\", padding:\"5px\"}}>\n                                                    SMS Preview :\n                                                </div>\n                                                <Paper elevation={4} style={{padding:\"20px\",marginBottom:\"1px\", backgroundColor:\"#0083ba\"}}>\n                                                    <div style={{fontSize:\"1rem\", fontWeight:\"500\", color:\"#fff\", position:\"relative\"}}>\n                                                        To:  {patient.mobileTel}\n                                                        <div style={{position:\"absolute\", right:\"5px\", top:\"-5px\"}}>\n                                                            {!smsSent && (\n                                                                <Button disabled={smsSending || (!patient.mobileTel || patient.mobileTel.length < 3)} onClick={sendSMS} startIcon={<SendIcon/>} variant=\"contained\" color=\"primary\">\n                                                                     Send SMS\n                                                                 </Button>\n                                                            )}\n                                                            {smsSent && (\n                                                                <div style={{fontWeight:\"500\", fontSize:\"1rem\", color:\"#fff\"}}>\n                                                                    <Grid container spacing={1} alignItems=\"center\">\n                                                                        <Grid item>\n                                                                             SMS Sent Successfully \n                                                                        </Grid>\n                                                                        <Grid item>\n                                                                            <CheckIcon/>\n                                                                        </Grid>\n                                                                    </Grid>\n                                                                    \n                                                                 </div>\n                                                            )}\n                                                        </div>\n                                                    </div>   \n                                                </Paper>\n                                                <Paper elevation={4} style={{padding:\"20px\"}}>\n                                                    <div> \n                                                        <TextField\n                                                            name=\"smspreview\"\n                                                            id=\"smspreview\"\n                                                            disabled={true}\n                                                            fullWidth\n                                                            multiline={true}\n                                                            rows={20}\n                                                            value= {selectedSMSTemplate.rawText}\n                                                            InputProps={{\n                                                                classes: {\n                                                                    input: classes.multilineColor\n                                                                }\n                                                            }}\n                                                        />\n\n                                                       \n                                                    </div>\n                                                </Paper>\n                                            </React.Fragment>\n                                        )}\n                                    </Grid>\n\n                                </Grid>\n                             </TabPanel>                        \n                        )}\n\n\n\n                    </div>\n\n                    <Backdrop\n                        className={classes.backdrop}\n                        open={saving}\n                    >\n                        <CircularProgress color=\"inherit\" />\n                    </Backdrop>\n\n\n                    <Dialog\n                        open={openDeleteDialog}\n                        onClose={handleCloseDeleteDialog}\n                        aria-labelledby=\"alert-dialog-title\"\n                        aria-describedby=\"alert-dialog-description\"\n                    >\n                        <DialogTitle style={{ color: \"#d10202\", fontWeight: \"600\" }} id=\"alert-dialog-title\">\n                            {\"Delete Patient\"}\n                        </DialogTitle>\n                        <DialogContent>\n                            <DialogContentText\n                                style={{ color: \"#000\", fontWeight: \"500\" }}\n                                id=\"alert-dialog-description\"\n                            >\n                                Are you sure you want to delete this patient?\n                            </DialogContentText>\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={handleCloseDeleteDialog} color=\"default\">\n                                Back\n                                 </Button>\n                            <Button onClick={deleteClicked} variant=\"contained\" style={{ backgroundColor: \"#d10202\", color: \"#fff\" }}>\n                                Yes, Delete this patient\n                                 </Button>\n                        </DialogActions>\n                    </Dialog>\n\n\n\n                </Dialog>\n            </React.Fragment>\n        </React.Fragment>\n    );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport GlobalState from \"../GlobalState\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {\n  Button,\n  Checkbox,\n  DialogActions,\n  DialogContentText,\n  Divider,\n  FormControlLabel,\n  IconButton,\n  TextField,\n  Tooltip,\n} from \"@material-ui/core\";\nimport PDFService from \"./services/PDFService\";\n\nimport { calculatePrice } from \"./PriceCalculator\";\n\nimport bookingService from \"./services/BookService\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport CloseIcon from \"@material-ui/icons/Close\";\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Draggable from \"react-draggable\";\nimport Slide from \"@material-ui/core/Slide\";\n\nimport Paper from \"@material-ui/core/Paper\";\n\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport BookService from \"./services/BookService\";\nimport SearchIcon from '@material-ui/icons/Search';\n\n\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport {\n  FormatDateFromString,\n  RevertFormatDateFromString,\n} from \"./DateFormatter\";\nimport PayDialog from \"./PayDialog\";\n\nimport PrintIcon from \"@material-ui/icons/Print\";\nimport UndoIcon from \"@material-ui/icons/Undo\";\n\nimport SendIcon from \"@material-ui/icons/Send\";\n\nimport HistoryIcon from \"@material-ui/icons/History\";\n\nimport FileCopyOutlinedIcon from \"@material-ui/icons/FileCopyOutlined\";\nimport { CalendarColors } from \"../Admin/calendar-admin/colors\";\nimport InvoiceDialog from \"../InvoiceDialog\";\nimport InvoiceService from \"../services/InvoiceService\";\nimport CallIcon from '@material-ui/icons/Call';\nimport Alert from \"@material-ui/lab/Alert\";\nimport PatientDialog from \"./PatientDialog\";\nimport PatientService from \"./services/PatientService\";\n\nconst useStyles = makeStyles((theme) => ({\n  box: {\n    backgroundColor: \"#373737\",\n    color: \"#fff\",\n    padding: \"1px\",\n    borderRadius: \"4px\",\n    textAlign: \"justify\",\n    paddingRight: \"40px\",\n  },\n\n  boxRed: {\n    backgroundColor: \"#dc2626\",\n    color: \"#fff\",\n    padding: \"1px\",\n    borderRadius: \"4px\",\n    textAlign: \"justify\",\n    paddingRight: \"40px\",\n  },\n\n  boxInfo: {\n    textAlign: \"justify\",\n    backgroundColor: \"#fafafa\",\n    color: \"#333\",\n    padding: \"1px\",\n    borderRadius: \"4px\",\n    paddingRight: \"40px\",\n    border: \"1px solid #eee\",\n  },\n\n  ul: {\n    listStyle: \"none\",\n    padding: \"0\",\n    margin: \"0\",\n  },\n\n  li: {\n    marginBottom: \"15px\",\n  },\n\n  icon: {\n    marginRight: \"8px\",\n  },\n\n  root: {\n    width: \"100%\",\n  },\n\n  lineThrough: {\n    textDecoration: \"line-through\",\n  },\n\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    flexBasis: \"33.33%\",\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n  },\n  secondaryHeading: {\n    fontSize: theme.typography.pxToRem(15),\n  },\n\n  infoDetails: {\n    textAlign: \"left\",\n  },\n\n  infoTitle: {\n    fontWeight: \"800\",\n    marginRight: \"10px\",\n    color: theme.palette.secondary.main,\n    fontSize: \"0.9rem\",\n  },\n\n  infoData: {\n    fontWeight: \"500\",\n    fontSize: \"1rem\",\n  },\n\n  title: {\n    textAlign: \"center\",\n    fontWeight: \"600\",\n    marginLeft: \"10px\",\n    marginBottom: \"5px\",\n  },\n\n  Accordion: {\n    backgroundColor: \"#f5f5f5\",\n    color: \"#222\",\n  },\n\n  AccordionDeleted: {\n    backgroundColor: \"#aaa\",\n    color: \"#555\",\n  },\n\n  DownloadForm: {\n    marginTop: \"10px\",\n    marginBottom: \"10px\",\n  },\n\n  infoDataCharges: {\n    fontSize: \"18px\",\n    color: \"green\",\n    fontWeight: \"600\",\n  },\n\n  infoDataChargesHigher: {\n    fontSize: \"18px\",\n    color: \"red\",\n    fontWeight: \"600\",\n  },\n  BookedLabel: {\n    color: \"#606060\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#606060\",\n    width: \"150px\",\n    display: \"inline-block\",\n  },\n\n  PatientAttendedLabel: {\n    color: \"#0066aa\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#0066aa\",\n    width: \"150px\",\n    display: \"inline-block\",\n  },\n\n  SampleTakenLabel: {\n    color: \"#0066cc\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#0066cc\",\n  },\n\n  ReportSentLabel: {\n    color: \"#009900\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#009900\",\n  },\n\n  ReportCertSentLabel: {\n    color: \"#009900\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#009900\",\n  },\n\n  PositiveLabel: {\n    color: \"red\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"red\",\n  },\n\n  EditButton: {\n    marginBottom: \"20px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n  },\n\n  ResendEmailsButton: {\n    // marginBottom : \"20px\",\n    color: \"#2f942e\",\n    borderColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"#fafffa\",\n      borderColor: \"#2f942e\",\n    },\n    textDecoration: \"none !important\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  PayButton: {\n    marginLeft: \"70px\",\n    width: \"300px\",\n  },\n\n  printInvoiceButton: {\n    marginLeft: \"70px\",\n    fontSize: \"0.8rem\",\n    // width: \"300px\",\n  },\n\n  editInvoiceButton: {\n    marginLeft: \"10px\",\n    fontSize: \"0.8rem\",\n  },\n\n  PayLabel: {\n    marginLeft: \"20px\",\n\n    color: \"#2f942e\",\n    fontWeight: \"500\",\n    textAlign: \"center\",\n  },\n\n  RestoreButton: {\n    marginBottom: \"20px\",\n    backgroundColor: \"#eee\",\n    color: \"#333\",\n    \"&:hover\": {\n      background: \"#f1f1f1\",\n      color: \"#111\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n  },\n\n  UndoTraceButton: {\n    marginBottom: \"20px\",\n    backgroundColor: \"#266900\",\n    color: \"#fff\",\n    \"&:hover\": {\n      background: \"#319400\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n  },\n\n\n  DeleteButton: {\n    marginBottom: \"20px\",\n    backgroundColor: \"#b80012\", \n    color: \"#fff\",\n    \"&:hover\": {\n      background: \"#d90015\",\n      color: \"#fff\",\n    },\n\n    padding: \"10px\",\n  },\n\n  MoveToTraceButton: {\n    marginBottom: \"20px\",\n    backgroundColor: \"#de3800\", \n    color: \"#fff\",\n    \"&:hover\": {\n      background: \"#f73e00\",\n      color: \"#fff\",\n    },\n\n    padding: \"10px\",\n  },\n\n\n  SaveButton: {\n    marginBottom: \"10px\",\n    padding: \"10px\",\n    color: \"#fff\",\n\n    backgroundColor:  \"#bd0d50\",\n    \"&:hover\": {\n      background: \"#d1175e\",\n      color: \"#fff\",\n    },\n  },\n\n  CancelButton: {\n    marginBottom: \"20px\",\n    // padding: \"10px\"\n  },\n\n  TextBox: {\n    padding: \"0px\",\n  },\n\n  checkIcon: {\n    color: \"green\",\n  },\n\n  checkIconSmall: {\n    color: \"green\",\n    paddingTop: \"5px\",\n  },\n\n  closeIcon: {\n    color: \"red\",\n  },\n\n  centeredLabel: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 5,\n    color: \"#fff\",\n  },\n\n  invoiceNumber: {\n    display: \"inline-block\",\n    fontWeight: \"500\",\n    width: \"72px\",\n    fontSize: \"1rem\",\n    color: theme.palette.primary.main,\n  },\n\n  dialogTitle: {\n    backgroundColor: theme.palette.secondary.main,\n    color: \"#fff\",\n  },\n\n  question:{\n    fontSize:\"1.3rem\",\n    fontWeight: \"400\",\n    color: theme.palette.secondary.main,\n    marginTop:\"30px\"\n  },\n\n  answer:{\n    fontSize:\"1.3rem\",\n    fontWeight: \"500\",\n    color: theme.palette.primary.main,\n  },\n\n  SearchIcon:{\n    fontSize: \"2rem\",\n    color: theme.palette.primary.main,\n}\n\n\n\n\n}));\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable\n      handle=\"#alert-dialog-slide-title\"\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\n    >\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nexport default function BookingDialog(props) {\n  const classes = useStyles();\n\n  const [state, setState] = React.useContext(GlobalState);\n\n  const [copied, setCopied] = useState(false);\n\n  const [emailSent, setEmailSent] = React.useState(false);\n  const [emailSentInvoice, setEmailSentInvoice] = React.useState(false);\n\n  const [openResendDialog, setOpenResendDialog] = React.useState(false);\n  const [openPayDialog, setOpenPayDialog] = React.useState(false);\n  const [openRefundDialog, setOpenRefundDialog] = React.useState(false);\n\n  const [openInvoiceDialog, setOpenInvoiceDialog] = React.useState(false);\n\n  const [selectedBooking, setSelectedBooking] = React.useState(null);\n\n  const [selectedPatient, setSelectedPatient] = React.useState(null)\n  const [patientDialogOpen, setPatientDialogOpen] = React.useState(false)\n\n  const handleClosePatientDialog = () => {\n    setPatientDialogOpen(false)\n  }\n\n\n  const [editMode, setEditMode] = React.useState({ edit: false, person: null });\n  const [deleteMode, setDeleteMode] = React.useState({\n    delete: false,\n    person: null,\n  });\n  const [restoreMode, setRestoreMode] = React.useState({\n    restore: false,\n    person: null,\n  });\n\n  const [traceMode, setTraceMode] = React.useState({\n    trace: false,\n    person: null,\n  });\n  const [unTraceMode, setUnTraceMode] = React.useState({\n    untrace: false,\n    person: null,\n  });\n\n\n  const [saving, setSaving] = React.useState(false);\n  const [notesSaved, setNotesSaved] = React.useState(false);\n\n  const [deleting, setDeleting] = React.useState(false);\n  const [restoring, setRestoring] = React.useState(false);\n\n  const [validationError, setValidationError] = React.useState({});\n\n  const [bookingDate, setBookingDate] = React.useState(\"\");\n  const [bookingTime, setBookingTime] = React.useState(\"\");\n\n  const [fullname, setFullname] = React.useState(\"\");\n  const [email, setEmail] = React.useState(\"\");\n  const [tel, setTel] = React.useState(\"\");\n  const [notes, setNotes] = React.useState(\"\");\n  const [service, setService] = React.useState(\"\");\n\n  const [refreshData, setRefreshData] = React.useState(false);\n\n  const [booking, setBooking] = React.useState(null);\n\n  const [recordChanged, setRecordChanged] = React.useState(false);\n\n  const [fieldChanged, setFieldChanged] = React.useState(false);\n\n  const [openUndoPayDialog, setOpenUndoPayDialog] = React.useState(false);\n\n  const [openTimeStampDialog, setOpenTimeStampDialog] = React.useState(false);\n\n  const [invoice, setInvoice] = React.useState(null);\n  const [invoiceLoaded, setInvoiceLoaded] = React.useState(false);\n\n  useEffect(() => {\n    if (props.open && props.booking) {\n      // setNotes(props.booking.notes || '')\n      loadPatient()\n    }\n  }, [props.open, props.booking]);\n\n  const bookingDateChanged = (event) => {\n    setBookingDate(event.target.value);\n    setValidationError({ ...validationError, bookingDateError: false });\n    setFieldChanged(!fieldChanged);\n  };\n\n  const bookingTimeChanged = (event) => {\n    setBookingTime(event.target.value);\n    setValidationError({ ...validationError, bookingTimeError: false });\n    setFieldChanged(!fieldChanged);\n  };\n\n  const fullnameChanged = (event) => {\n    setFullname(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const emailChanged = (event) => {\n    setEmail(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const telChanged = (event) => {\n    setTel(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const serviceChanged = (event) => {\n    setService(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const notesChanged = (event) => {\n    setNotes(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n\n  const loadPatient = async () =>\n  {\n    try{\n      if (props.booking.patientID)\n      {\n        setSaving(true)\n        const res = await PatientService.getPatientByPatientId(props.booking.patientID)\n        setSelectedPatient(res.data)\n        setSaving(false)\n        setBooking(props.booking)\n      }else{\n        setSaving(true)\n\n        const res0 = await PatientService.getPatientByEmail(props.booking.email)\n        if (res0 && res0.data)\n        {\n          await bookingService.updateBooking({bookingId: props.booking._id, patientID: res0.data.patientID})\n          setState(state => ({...state, bookingDialogDataChanged : !state.bookingDialogDataChanged}))\n          setSelectedPatient(res0.data)\n          setBooking({...props.booking, patientID : res0.data.patientID})\n          setSaving(false)\n\n        }else{\n          const res1 = await PatientService.getNewPatientID()\n          const fullnameArray = props.booking.fullname.split(\" \")\n          const patient = { \n            name: fullnameArray.length > 0 ? fullnameArray[0] : '-',\n            surname: fullnameArray.length > 1 ? fullnameArray[1] : '-',\n            mobileTel: props.booking.phone,\n            email: props.booking.email,\n            patientID: res1.data.result,\n            formData: JSON.stringify({})\n          }\n  \n          const res2 = await PatientService.registerNewPatient({patient: patient})\n          await bookingService.updateBooking({bookingId: props.booking._id, patientID: res1.data.result})\n          setState(state => ({...state, bookingDialogDataChanged : !state.bookingDialogDataChanged}))\n          setSelectedPatient(res2.data.patient)\n          setBooking({...props.booking, patientID : res1.data.result})\n          setSaving(false)\n        }\n      }\n\n    }catch(err)\n    {\n      console.log(err)\n      setSaving(false)\n      setSelectedPatient(null)\n    }\n  } \n\n  const getStatusLabel = (status) => {\n    if (status === \"booked\") {\n      return <div className={classes.BookedLabel}> Booking Made </div>;\n    } else if (status === \"patient_attended\") {\n      return (\n        <div className={classes.PatientAttendedLabel}> Patient Attended </div>\n      );\n    } else {\n      return \"Unknown\";\n    }\n  };\n\n  const handleEditModeChanged = (edit, person) => {\n    if (edit) {\n      setFullname(person.fullname);\n      setBookingDate(FormatDateFromString(person.bookingDate));\n      setBookingTime(person.bookingTime.toUpperCase());\n      setEmail(person.email);\n      setTel(person.phone);\n      if (person.notes) {\n        setNotes(person.notes);\n      }\n\n      setEditMode({ edit: edit, person: person });\n    } else if (!edit && !person) {\n      setEditMode({ edit: edit, person: person });\n      setRecordChanged(false);\n    } else if (!edit && person) {\n      const booking = {};\n      const bookingId = person._id;\n      booking.email = email;\n      booking.phone = tel;\n      booking.fullname = fullname;\n      booking.notes = notes;\n      booking.service = service;\n      booking.bookingDate = RevertFormatDateFromString(bookingDate);\n      booking.bookingTime = bookingTime;\n      booking.bookingRef = person.bookingRef;\n\n      if (validateBooking(booking)) {\n        updateBooking({ bookingId: bookingId, person: booking });\n      }\n    }\n  };\n\n  const validateDate = (str) => {\n    var error = false;\n    if (!str || str.length !== 10) {\n      error = true;\n    }\n\n    if (str.charAt(4) !== \"-\" || str.charAt(7) !== \"-\") {\n      error = true;\n    }\n\n    try {\n      const result = /^\\d{4}-\\d{2}-\\d{2}$/.test(str);\n      if (!result) {\n        error = true;\n      }\n\n      const year = parseInt(str.substr(0, 4));\n      const month = parseInt(str.substr(5, 2));\n      const day = parseInt(str.substr(8, 2));\n\n      if (year < 1900) {\n        error = true;\n      }\n\n      if (month < 1 || month > 12) {\n        error = true;\n      }\n\n      if (day > 31) {\n        error = true;\n      }\n    } catch (err) {\n      error = true;\n    }\n\n    return !error;\n  };\n\n  const validateTime = (str) => {\n    var error = false;\n\n    const result = /^\\d{2}:\\d{2} AM$|^\\d{2}:\\d{2} PM$/.test(str);\n    if (!result) {\n      error = true;\n    }\n\n    try {\n      const hour = parseInt(str.substr(0, 2));\n      const minute = parseInt(str.substr(3, 2));\n\n      if (hour < 0 || hour > 12) {\n        error = true;\n      }\n\n      if (minute < 0 || minute > 59) {\n        error = true;\n      }\n    } catch (err) {\n      error = true;\n    }\n\n    return !error;\n  };\n\n  const validateBooking = (booking) => {\n    var error = false;\n\n    if (!validateDate(booking.bookingDate)) {\n      error = true;\n      setValidationError({ ...validationError, bookingDateError: true });\n    }\n\n    if (!validateTime(booking.bookingTime)) {\n      error = true;\n      setValidationError({ ...validationError, bookingTimeError: true });\n    }\n    return !error;\n  };\n\n  const updateBooking = (payload) => {\n    setSaving(true);\n    bookingService\n      .updateBooking(payload)\n      .then((res) => {\n        setSaving(false);\n        setEditMode({ edit: false, person: null });\n        setRefreshData(!refreshData);\n      })\n      .catch((err) => {\n        setSaving(false);\n        setEditMode({ edit: false, person: null });\n        console.log(err);\n      });\n  };\n\n  const deleteBooking = (id) => {\n    setDeleting(true);\n    bookingService\n      .deleteBooking(id)\n      .then((res) => {\n        setDeleting(false);\n        setDeleteMode({ delete: false, person: null });\n        setRefreshData(!refreshData);\n      })\n      .catch((err) => {\n        setDeleting(false);\n        setDeleteMode({ delete: false, person: null });\n        console.log(err);\n      });\n  };\n\n  const restoreBooking = (id) => {\n    setRestoring(true);\n    bookingService\n      .unDeleteBooking(id)\n      .then((res) => {\n        setRestoring(false);\n        setRestoreMode({ restore: false, person: null });\n        setRefreshData(!refreshData);\n      })\n      .catch((err) => {\n        setRestoring(false);\n        setRestoreMode({ restore: false, person: null });\n        console.log(err);\n      });\n  };\n\n  const handleDeleteModeChanged = (del, person) => {\n    if (del) {\n      setDeleteMode({ delete: del, person: person });\n    } else if (!del && !person) {\n      setDeleteMode({ delete: del, person: person });\n    } else if (!del && person) {\n      deleteBooking(person._id);\n    }\n  };\n\n  const handleRestoreModeChanged = (restore, person) => {\n    if (restore) {\n      setRestoreMode({ restore: restore, person: person });\n    } else if (!restore && !person) {\n      setRestoreMode({ restore: restore, person: person });\n    } else if (!restore && person) {\n      restoreBooking(person._id);\n    }\n  };\n\n\n\n  const traceBooking = (id) => {\n    setDeleting(true);\n    bookingService\n      .moveToTraceFolderBooking(id)\n      .then((res) => {\n        setDeleting(false);\n        setTraceMode({ trace: false, person: null });\n        setRefreshData(!refreshData);\n      })\n      .catch((err) => {\n        setDeleting(false);\n        setTraceMode({ trace: false, person: null });\n        console.log(err);\n      });\n  };\n\n  const unTraceBooking = (id) => {\n    setRestoring(true);\n    bookingService\n      .undoMoveToTraceFolderBooking(id)\n      .then((res) => {\n        setRestoring(false);\n        setUnTraceMode({ untrace: false, person: null });\n        setRefreshData(!refreshData);\n      })\n      .catch((err) => {\n        setRestoring(false);\n        setUnTraceMode({ untrace: false, person: null });\n        console.log(err);\n      });\n  };\n\n  const handleTraceModeChanged = (del, person) => {\n    if (del) {\n      setTraceMode({ trace: del, person: person });\n    } else if (!del && !person) {\n      setTraceMode({ trace: del, person: person });\n    } else if (!del && person) {\n      traceBooking(person._id);\n    }\n  };\n\n  const handleUnTraceModeChanged = (restore, person) => {\n    if (restore) {\n      setUnTraceMode({ untrace: restore, person: person });\n    } else if (!restore && !person) {\n      setUnTraceMode({ untrace: restore, person: person });\n    } else if (!restore && person) {\n      unTraceBooking(person._id);\n    }\n  };\n\n\n  const changeBackToBookingMade = (event, id) => {\n    setSaving(true);\n    BookService.changeBackToBookingMade(id)\n      .then((res) => {\n        setSaving(false);\n        setRefreshData(!refreshData);\n      })\n      .catch((err) => {\n        console.log(err);\n        setSaving(false);\n      });\n  };\n\n  const changeToPatientAttended = (event, id) => {\n    setSaving(true);\n    BookService.changeToPatientAttended(id)\n      .then((res) => {\n        setSaving(false);\n        setRefreshData(!refreshData);\n      })\n      .catch((err) => {\n        console.log(err);\n        setSaving(false);\n      });\n  };\n\n  const Pay = () => {\n    setSelectedBooking(booking);\n    setOpenPayDialog(true);\n  };\n\n  const OpenInvoiceDialog = () => {\n    setSelectedBooking(booking);\n    setInvoice(invoice);\n    setOpenInvoiceDialog(true);\n  };\n\n  // useEffect(() => {\n  //   if (props.booking) {\n  //     BookService.getBookingById(props.booking._id)\n  //       .then((res) => {\n  //         setBooking(res.data);\n  //       })\n  //       .catch((err) => {\n  //         console.log(err);\n  //       });\n\n  //     setState((state) => ({\n  //       ...state,\n  //       bookingDialogDataChanged: !state.bookingDialogDataChanged\n  //         ? true\n  //         : false,\n  //     }));\n  //   }\n  // }, [refreshData, state.bookingPayChanged]);\n\n  // useEffect(() => {\n  //   if (props.booking) {\n  //     setBooking(props.booking);\n  //   }\n  // }, [props.booking]);\n\n  const undoPaymentClicked = async () => {\n    setSaving(true);\n    try {\n      await BookService.unPayBooking(booking._id);\n      setSaving(false);\n      setOpenUndoPayDialog(false);\n      setRefreshData(!refreshData);\n    } catch (err) {\n      console.error(err);\n      setSaving(false);\n      setOpenUndoPayDialog(false);\n    }\n  };\n\n  const refundPaymentClicked = async () => {\n    setSaving(true);\n    try {\n      await BookService.refundBooking(booking._id);\n      setSaving(false);\n      updateShouldRefundsCount();\n      setOpenRefundDialog(false);\n      setRefreshData(!refreshData);\n    } catch (err) {\n      console.error(err);\n      setSaving(false);\n      setOpenRefundDialog(false);\n    }\n  };\n\n  const updateShouldRefundsCount = async () => {\n    try {\n      const res = await BookService.getShouldRefundsCount();\n      if (res && res.data && res.data.status === \"OK\") {\n        setState((state) => ({ ...state, shouldRefunsCount: res.data.count }));\n      }\n    } catch (ex) {\n      console.error(ex);\n    }\n  };\n\n  const downloadRegForm = (id) => {\n    PDFService.downloadGPRegForm(id)\n      .then((res) => {\n        const file = new Blob([res.data], { type: \"application/pdf\" });\n\n        const fileURL = URL.createObjectURL(file);\n        window.open(fileURL, \"_blank\");\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const downloadInvoice = (id) => {\n    InvoiceService.downloadInvoice(id)\n      .then((res) => {\n        const file = new Blob([res.data], { type: \"application/pdf\" });\n\n        const fileURL = URL.createObjectURL(file);\n        window.open(fileURL, \"_blank\");\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const sendRegForm = (id) => {\n    setSaving(true);\n    setEmailSent(false);\n    BookService.sendRegFormEmail(id)\n      .then((res) => {\n        setSaving(false);\n        if (res.data.status === \"OK\") {\n          setEmailSent(true);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setSaving(false);\n      });\n  };\n\n  const sendInvoiceEmail = (id, _email) => {\n    setSaving(true);\n    setEmailSentInvoice(false);\n    InvoiceService.emailInvoice(id, _email)\n      .then((res) => {\n        setSaving(false);\n        if (res.data.status === \"OK\") {\n          setEmailSentInvoice(true);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setSaving(false);\n      });\n  };\n\n  const onClose = () => {\n    setEmailSent(false);\n    setEmailSentInvoice(false);\n    setInvoice(null);\n    setSaving(false)\n    setNotesSaved(false)\n    setPatientDialogOpen(false)\n    setSelectedPatient(null)\n    props.onClose();\n  };\n\n  const [openQDialg, setOpenQDialog] = React.useState(false)\n  const handleQDialgClose = () =>\n  {\n    setOpenQDialog(false)\n  }\n\n  const fixQuestion = (str) =>\n  {\n    let result = str.replace('*', '')\n    if (!result.trim().endsWith('?'))\n    {\n      result += '?'\n    }\n    return result\n  }\n\n  const saveNotes = async () =>\n  {\n    try{\n      setSaving(true)\n      setNotesSaved(false)\n      await BookService.updateBooking({bookingId: props.booking._id, notes: notes})\n      setState(state => ({...state, bookingDialogDataChanged : !state.bookingDialogDataChanged}))\n      setNotesSaved(true)\n      setSaving(false)\n\n    }catch(err)\n    {\n      console.log(err)\n      setSaving(false)\n    }\n  }\n\n  return (\n    <React.Fragment>\n      {booking && (\n        <React.Fragment>\n          <Dialog\n            maxWidth=\"sm\"\n            open={props.open}\n            TransitionComponent={Transition}\n            keepMounted\n            onClose={onClose}\n            PaperComponent={PaperComponent}\n            aria-labelledby=\"alert-dialog-slide-title\"\n            aria-describedby=\"alert-dialog-slide-description\"\n          >\n            <DialogTitle\n              id=\"alert-dialog-slide-title\"\n              className={classes.dialogTitle}\n              style={!booking.deleted && booking.traceFolder ? {backgroundColor:\"#de3800\", position:\"relative\"} : {position:\"relative\"}}\n            >\n              {booking.questions && (\n                 <div style={{position:\"absolute\", right:\"10px\", top:\"12px\", backgroundColor:\"#069c00\", fontSize:\"0.85rem\", padding:\"8px\", borderRadius:\"10px\"}}>\n                   Self-Test\n                 </div>\n              )}\n\n\n              <Grid\n                container\n                direction=\"row\"\n                justify=\"center\"\n                spacing={2}\n                alignItems=\"center\"\n              >\n                <Grid item>\n                  <div\n                    style={\n                      booking.deleted\n                        ? {\n                            paddingBottom: \"5px\",\n                            textDecoration: \"line-through\",\n                          }\n                        : (\n                          booking.traceFolder ? {\n                            paddingBottom: \"5px\",\n\n                          } : {\n\n                          }\n                        )\n                    }\n                  >\n                    {`${booking.fullname}`}\n                  </div>\n                </Grid>\n\n                {booking.deleted && (\n                  <Grid item>\n                    <Tooltip title=\"This record has been deleted.\">\n                      <DeleteIcon\n                        style={{\n                          padding: 0,\n                          margin: 0,\n                          color: \"#fff\",\n                          fontSize: 25,\n                        }}\n                      />\n                    </Tooltip>\n                  </Grid>\n                )}\n\n                {!booking.deleted && booking.traceFolder && (\n                  <Grid item>\n                    <Tooltip title=\"This record is in the TRACE folder.\">\n                      <CallIcon\n                        style={{\n                          padding: 0,\n                          margin: 0,\n                          color: \"#fff\",\n                          fontSize: \"2rem\",\n                        }}\n                      />\n                    </Tooltip>\n                  </Grid>\n                )}\n\n              </Grid>\n            </DialogTitle>\n            <DialogContent>\n              <div\n                style={{\n                  // height: \"550px\",\n                  paddingTop: \"0px\",\n                }}\n              >\n                <Grid item xs={12} key={`panel0`}>\n                  <div className={classes.infoDetails}>\n                    <ul className={classes.ul}>\n                    <li className={classes.li}>\n                        <Grid container spacing={2} alignItems=\"center\">\n                          <Grid item>\n                            <span className={classes.infoTitle}>\n                              Patient ID :\n                            </span>\n\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {booking.patientID}\n                            </span>\n                          </Grid>\n                          <Grid item>\n                            {selectedPatient && (\n                              <Tooltip title=\"Show Patient Detail\">\n                                <IconButton onClick={() => { setPatientDialogOpen(true) }}>\n                                  <SearchIcon className={classes.SearchIcon} />\n                                </IconButton>\n                              </Tooltip>\n                            )}\n\n                          </Grid>\n                        </Grid>\n                      </li>\n\n                      <Divider />\n\n                      <li className={classes.li} style={{ marginTop: \"20px\" }}>\n                        <Grid container spacing={2}>\n                          <Grid item xs={12} md={6}>\n                            <span className={classes.infoTitle}>\n                              BOOKED DATE :\n                            </span>\n\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {FormatDateFromString(booking.bookingDate)}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                error={validationError.bookingDateError}\n                                className={classes.TextBox}\n                                value={bookingDate}\n                                onChange={bookingDateChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n                          <Grid item xs={12} md={6}>\n                            <span className={classes.infoTitle}>\n                              BOOKED TIME :\n                            </span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {booking.bookingTime}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                error={validationError.bookingTimeError}\n                                className={classes.TextBox}\n                                value={bookingTime}\n                                onChange={bookingTimeChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n                        </Grid>\n                      </li>\n\n                      <Divider />\n\n                      <li className={classes.li} style={{ marginTop: \"20px\" }}>\n                        <Grid container spacing={2}>\n                          <Grid item xs={12}>\n                            <span className={classes.infoTitle}>\n                              FULLNAME :{\" \"}\n                            </span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {booking.fullname}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                className={classes.TextBox}\n                                value={fullname}\n                                onChange={fullnameChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n                          <Grid item xs={12} md={6}>\n                            <span className={classes.infoTitle}>EMAIL : </span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {booking.email}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                className={classes.TextBox}\n                                value={email}\n                                onChange={emailChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n                          <Grid item xs={12} md={6}>\n                            <span className={classes.infoTitle}>TEL : </span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {booking.phone?.toUpperCase()}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                className={classes.TextBox}\n                                value={tel}\n                                onChange={telChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n                        </Grid>\n                      </li>\n\n                      <Divider />\n\n                      <li className={classes.li} style={{ marginTop: \"20px\" }}>\n                        <Grid container spacing={2}>\n                          <Grid item xs={12}>\n                            <span className={classes.infoTitle}>\n                              Consultation :{\" \"}\n                            </span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {booking.faceToFaceConsultation && (\n                                <span> Face to Face </span>\n                              )}\n                              {((booking.faceToFaceConsultation &&\n                                booking.telephoneConsultation) ||\n                                (!booking.faceToFaceConsultation &&\n                                  !booking.telephoneConsultation)) && (\n                                <span\n                                  style={{\n                                    paddingLeft: \"5px\",\n                                    paddingRight: \"5px\",\n                                  }}\n                                >\n                                  {\" \"}\n                                  -{\" \"}\n                                </span>\n                              )}\n                              {booking.telephoneConsultation && (\n                                <span> Telephone </span>\n                              )}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                className={classes.TextBox}\n                                value={fullname}\n                                onChange={fullnameChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n                        </Grid>\n                      </li>\n\n                      <Divider />\n\n                      {/* <li className={classes.li} style={{ marginTop: \"20px\" }}>\n                        <Grid container spacing={2}>\n                          <Grid item xs={12}>\n                            <TextField\n                                name=\"notesfromconsultation\"\n                                id=\"notesfromconsultation\"\n                                label=\"Notes From Consultation\"\n                                fullWidth\n                                multiline\n                                rows={5}\n                                variant=\"outlined\"\n                                autoComplete=\"none\"\n                                value={notes || ''}\n                                onChange={(event) => {\n                                    setNotes(event.target.value)\n                                }}\n                            />\n \n                          </Grid>\n                          {notesSaved && (\n                            <Grid item xs={12}>\n                              <Alert severity=\"success\">Notes Saved Successfully!</Alert>\n                            </Grid>                          \n                          )}\n                          <Grid item xs={12}>\n                            <Button onClick={saveNotes} fullWidth variant=\"contained\" color=\"secondary\">\n                                Save Notes\n                            </Button>\n                          </Grid>\n\n                        </Grid>\n                          </li> */}\n\n                      {/* <Divider /> */}\n\n                      {booking.questions && (\n                        <React.Fragment>\n                          <div style={{display:\"flex\", justifyContent:\"center\"}}>\n                          <Button fullWidth variant=\"contained\" color=\"primary\" style={{color:\"#fff\",margin:\"10px\"}} onClick={() => setOpenQDialog(true)}>\n                             Show questionnaire\n                          </Button>\n                          </div>\n                          <Divider />\n                        </React.Fragment>\n                      )}\n\n                   \n\n                      \n                      <div style={{marginTop:\"20px\"}}>\n\n                      </div>\n\n                      {/* Restore Functionality ******************************************* */}\n                      <li\n                        hidden={\n                          !(\n                            restoreMode.restore &&\n                            restoreMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <div\n                          style={{\n                            fontWeight: \"500\",\n                            paddingBottom: \"10px\",\n                            paddingLeft: \"5px\",\n                            fontSize: \"16px\",\n                            color: \"#333\",\n                          }}\n                        >\n                          Are you sure you want to restore this record?\n                        </div>\n                      </li>\n\n                      <li\n                        hidden={\n                          !booking.deleted ||\n                          (restoreMode.restore &&\n                            restoreMode.person._id === booking._id)\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"primary\"\n                          onClick={() => {\n                            handleRestoreModeChanged(true, booking);\n                          }}\n                          className={classes.RestoreButton}\n                        >\n                          Restore This Record\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            restoreMode.restore &&\n                            restoreMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"primary\"\n                          disabled={restoring}\n                          onClick={() => {\n                            handleRestoreModeChanged(false, booking);\n                          }}\n                          className={classes.SaveButton}\n                        >\n                          YES, Restore this!\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            restoreMode.restore &&\n                            restoreMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"default\"\n                          disabled={restoring}\n                          onClick={() => {\n                            handleRestoreModeChanged(false, null);\n                          }}\n                          className={classes.CancelButton}\n                        >\n                          Cancel\n                        </Button>\n                      </li>\n\n                      {/*  ******************************************************************* */}\n\n                      {/* Delete Functionality ******************************************* */}\n\n                      <li\n                        hidden={\n                          !(\n                            deleteMode.delete &&\n                            deleteMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <div\n                          style={{\n                            fontWeight: \"600\",\n                            paddingBottom: \"10px\",\n                            paddingLeft: \"5px\",\n                            fontSize: \"16px\",\n                          }}\n                        >\n                          Are you sure you want to archive this record?\n                        </div>\n                      </li>\n\n                      <li\n                        hidden={\n                          props.deleteButtonDisabled ||\n                          unTraceMode.untrace ||\n                          traceMode.trace ||\n                          booking.deleted ||\n                          editMode.edit ||\n                          (deleteMode.delete &&\n                            deleteMode.person._id === booking._id)\n                        }\n                      >\n                        {booking.OTCCharges > 0 && (\n                          <Tooltip title={\"Paid Records Cannot be Deleted!\"}>\n                            <div>\n                              <Button\n                                disabled={booking.OTCCharges > 0}\n                                type=\"button\"\n                                fullWidth\n                                variant=\"contained\"\n                                color=\"primary\"\n                                onClick={() => {\n                                  handleDeleteModeChanged(true, booking);\n                                }}\n                                className={classes.DeleteButton}\n                              >\n                                Archive This Record\n                              </Button>\n                            </div>\n                          </Tooltip>\n                        )}\n                        {\n                          <Button\n                            disabled={booking.OTCCharges > 0}\n                            type=\"button\"\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={() => {\n                              handleDeleteModeChanged(true, booking);\n                            }}\n                            className={classes.DeleteButton}\n                          >\n                            Archive This Record\n                          </Button>\n                        }\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            deleteMode.delete &&\n                            deleteMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"primary\"\n                          disabled={deleting}\n                          onClick={() => {\n                            handleDeleteModeChanged(false, booking);\n                          }}\n                          className={classes.SaveButton}\n                        >\n                          YES, Archive this!\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            deleteMode.delete &&\n                            deleteMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"default\"\n                          disabled={deleting}\n                          onClick={() => {\n                            handleDeleteModeChanged(false, null);\n                          }}\n                          className={classes.CancelButton}\n                        >\n                          Cancel\n                        </Button>\n                      </li>\n\n                      {/* ****************************************************************************************** */}\n\n\n\n                      {/* UnTrace Functionality ******************************************* */}\n                      <li\n                        hidden={\n                          !(\n                            unTraceMode.untrace &&\n                            unTraceMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <div\n                          style={{\n                            fontWeight: \"500\",\n                            paddingBottom: \"10px\",\n                            paddingLeft: \"5px\",\n                            fontSize: \"16px\",\n                            color: \"#333\",\n                          }}\n                        >\n                          Are you sure you want to take this record out of TRACE folder?\n                        </div>\n                      </li>\n\n                      <li\n                        hidden={\n                          deleteMode.delete ||\n                          !booking.traceFolder ||\n                          booking.deleted ||\n                          (unTraceMode.untrace &&\n                            unTraceMode.person._id === booking._id)\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"primary\"\n                          onClick={() => {\n                            handleUnTraceModeChanged(true, booking);\n                          }}\n                          className={classes.UndoTraceButton}\n                        >\n                          Take This out of Trace Folder\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            unTraceMode.untrace &&\n                            unTraceMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"primary\"\n                          disabled={restoring}\n                          onClick={() => {\n                            handleUnTraceModeChanged(false, booking);\n                          }}\n                          className={classes.SaveButton}\n                        >\n                          YES, Take this record out of TRACE Folder!\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            unTraceMode.untrace &&\n                            unTraceMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"default\"\n                          disabled={restoring}\n                          onClick={() => {\n                            handleUnTraceModeChanged(false, null);\n                          }}\n                          className={classes.CancelButton}\n                        >\n                          Cancel\n                        </Button>\n                      </li>\n\n                      {/*  ******************************************************************* */}\n\n                      {/* Move To Trace Folder Functionality ******************************************* */}\n\n                      <li\n                        hidden={\n                          !(\n                            traceMode.trace &&\n                            traceMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <div\n                          style={{\n                            fontWeight: \"600\",\n                            paddingBottom: \"10px\",\n                            paddingLeft: \"5px\",\n                            fontSize: \"16px\",\n                          }}\n                        >\n                          Are you sure you want to move this record to TRACE folder?\n                        </div>\n                      </li>\n\n                      <li\n                        hidden={\n                          booking.deleted ||\n                          booking.traceFolder || \n                          deleteMode.delete ||\n                          editMode.edit ||\n                          (traceMode.trace &&\n                            traceMode.person._id === booking._id)\n                        }\n                      >\n                        {\n                          <Button\n                            type=\"button\"\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={() => {\n                              handleTraceModeChanged(true, booking);\n                            }}\n                            className={classes.MoveToTraceButton}\n                          >\n                            Move To Trace Folder\n                          </Button>\n                        }\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            traceMode.trace &&\n                            traceMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"primary\"\n                          disabled={deleting}\n                          onClick={() => {\n                            handleTraceModeChanged(false, booking);\n                          }}\n                          className={classes.SaveButton}\n                        >\n                          YES, Move To TRACE Folder!\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            traceMode.trace &&\n                            traceMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"default\"\n                          disabled={deleting}\n                          onClick={() => {\n                            handleTraceModeChanged(false, null);\n                          }}\n                          className={classes.CancelButton}\n                        >\n                          Cancel\n                        </Button>\n                      </li>\n\n                      {/* ****************************************************************************************** */}\n\n\n                    </ul>\n                  </div>\n                </Grid>\n              </div>\n              <Backdrop\n                className={classes.backdrop}\n                open={saving || deleting || restoring}\n              >\n                <CircularProgress color=\"inherit\" />\n              </Backdrop>\n            </DialogContent>\n          </Dialog>\n\n          <Dialog\n            open={openQDialg}\n            onClose={handleQDialgClose}\n            maxWidth=\"sm\"\n          >\n            <DialogContent>\n                      {booking.questions && JSON.parse(booking.questions).map(item => (\n                        <div >\n                          <div className={classes.question}>\n                            {fixQuestion(item.question)}\n                          </div>\n                          <div className={classes.answer}>\n                            {item.answer}\n                          </div>\n                        </div>\n                      ))}\n            </DialogContent>\n\n            <DialogActions>\n              <Button onClick={() => setOpenQDialog(false)}>\n                Close\n              </Button>\n            </DialogActions>\n\n\n\n          </Dialog>\n\n          {selectedPatient && (\n                <PatientDialog\n                    patient={selectedPatient}\n                    open={patientDialogOpen}\n                    handleClose={handleClosePatientDialog}\n                    title={`${selectedPatient.name?.toUpperCase()} ${selectedPatient.surname?.toUpperCase()}`}\n                    saveButtonText={\"Save Changes\"}\n                />\n            )}\n\n\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n}\n","import React, {useEffect, useRef, useState} from 'react';\nimport { DataGrid } from '@material-ui/data-grid';\nimport BookService from './services/BookService';\nimport { Button, Checkbox, CircularProgress, Dialog, DialogContent, DialogTitle, Divider, FormControl, FormControlLabel, Grid, Icon, InputLabel, LinearProgress, Link, makeStyles, MenuItem, Paper, Select, SvgIcon, Switch, TextField, Tooltip } from '@material-ui/core';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport { IconButton } from '@material-ui/core';\nimport CheckIcon from '@material-ui/icons/Check';\nimport CloseIcon from '@material-ui/icons/Close';\nimport GlobalState from '../GlobalState';\nimport { getMenuIndex } from '../MenuList';\nimport {FormatDateFromString, FormatDateFromStringShortYear} from './DateFormatter';\n\nimport SearchIcon from '@material-ui/icons/Search';\nimport BookingDialog from './BookingDialog';\n\nimport NewReleasesIcon from '@material-ui/icons/NewReleases';\nimport HistoryIcon from '@material-ui/icons/History';\nimport TimelineIcon from '@material-ui/icons/Timeline';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport AutorenewIcon from '@material-ui/icons/Autorenew';\nimport LiveTvIcon from '@material-ui/icons/LiveTv';\nimport PlaylistAddCheckIcon from '@material-ui/icons/PlaylistAddCheck';\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport HourglassEmptyIcon from '@material-ui/icons/HourglassEmpty';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faFileExcel } from \"@fortawesome/free-solid-svg-icons\";\nimport Draggable from 'react-draggable';\n\nimport * as dateformat from 'dateformat';\n\nimport DateFnsUtils from '@date-io/date-fns';\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardTimePicker,\n  KeyboardDatePicker,\n} from '@material-ui/pickers';\n\nimport BusinessIcon from '@material-ui/icons/Business';\nimport CreditCardIcon from '@material-ui/icons/CreditCard';\nimport LocalAtmIcon from '@material-ui/icons/LocalAtm';\n\n\nimport ReactHTMLTableToExcel from 'react-html-table-to-excel';\nimport PriceCalculator from './PriceCalculator';\nimport { corporates } from './Corporates';\n\nimport CallIcon from '@material-ui/icons/Call';\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    marginTop: theme.spacing(0),\n    marginBottom: theme.spacing(1),\n\n  },\n  \n  refreshButton:{\n    marginLeft: theme.spacing(2),\n  },\n\n  checkIcon:{\n    color: \"green\"\n  },\n\n  closeIcon:{\n    color: \"red\"\n  },\n\n  RefLink: {\n    cursor: \"pointer\"\n  },\n\n  BookedLabel:{\n    backgroundColor: \"#606060\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  PatientAttendedLabel:{\n    backgroundColor: \"#0066aa\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  SampleTakenLabel:{\n    backgroundColor: \"#0066cc\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  ReportSentLabel:{\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  ReportCertSentLabel:{\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  PositiveLabel:{\n    backgroundColor: \"red\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  HideNowRows: {\n    position: \"absolute\",\n    top: \"40%\",\n    left: \"40%\",\n    width: \"600px\",\n    height: \"300px\",\n    backgroundColor : \"#fafafa\",\n    color : \"#111\",\n    zIndex: \"1000\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyItems: \"center\"\n  },\n\n  ExportToExcelButton:\n  {\n    // marginBottom : \"20px\",\n    color : \"#2f942e\",\n    borderColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"#fafffa\",\n      borderColor: \"#2f942e\",\n    },\n    textDecoration : \"none !important\", \n   \n  },\n\n  ExportToExcelButtonInline:\n  {\n    // marginBottom : \"20px\",\n    color : \"#2f942e\",\n    borderColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"#fafffa\",\n      borderColor: \"#2f942e\",\n    },\n    textDecoration : \"none !important\", \n    cursor: \"pointer\",\n    padding: \"10px\"\n   \n  },\n\n  table: {\n    width: \"100%\",\n    border: \"1px solid #ddd\",\n    borderCollapse: \"collapse\",\n},\n\nth: {\n    border: \"1px solid #ddd\",\n    borderCollapse: \"collapse\",\n    verticalAlign: \"middle\",\n    fontcolor: \"#555\",\n    fontWeight: \"400\",\n    fontSize: \"15px\",\n    paddingTop: \"5px\",\n    paddingBottom: \"5px\",\n    width: \"14%\",\n    paddingLeft: \"5px\",\n},\n\ntd: {\n    border: \"1px solid #ddd\",\n    borderCollapse: \"collapse\",\n    verticalAlign: \"middle\",\n    paddingLeft: \"5px\",\n},\n\ntopSelect: {\n  margin: theme.spacing(1),\n  minWidth: 80,\n},\n\nnotifyIcon:{\n  width: \"16px\",\n  height: \"16px\",\n  borderRadius: \"50%\",\n  backgroundColor : \"rgb(220, 0, 78)\",\n  marginLeft: \"10px\"\n}\n\n}));\n\nconst getTableTitle = (str) =>{\n\n  if (str === 'today')\n  {\n    return `Today's Bookings`;\n  }else if (str === 'old')\n  {\n    return `Old Bookings`;\n  }else if (str === 'future')\n  {\n    return `Future Bookings`;\n  }else if (str === 'recent')\n  {\n    return `Recent Bookings`;\n  }else if (str === 'live')\n  {\n    return `Live Bookings`;\n  }else if (str === 'completed')\n  {\n    return `Completed Bookings`;\n  }else if (str === 'positive')\n  {\n    return `Positive Results`;\n  }else if (str === 'trace')\n  {\n    return `Patients to Trace`;\n  }else if (str === 'deleted')\n  {\n    return `Archived Records`;\n  }else if (str === 'late')\n  {\n    return `40 Hours Late`;\n  }\n  \n  else\n  {\n    return `All Bookings`;\n  }\n\n}\n\nconst getTableIcon = (str) =>{\n\n  if (str === 'today')\n  {\n    return <NewReleasesIcon style={{fontSize:\"2.2rem\"}} />;\n  }else if (str === 'old')\n  {\n    return <HistoryIcon style={{fontSize:\"2.2rem\"}} />;\n  }else if (str === 'future')\n  {\n    return <TimelineIcon style={{fontSize:\"2.2rem\"}} />;\n  }else if (str === 'recent')\n  {\n    return <AutorenewIcon style={{fontSize:\"2.2rem\"}} />;\n  }else if (str === 'live')\n  {\n    return <LiveTvIcon style={{fontSize:\"2.2rem\"}} />;\n  }else if (str === 'completed')\n  {\n    return  <PlaylistAddCheckIcon style={{fontSize:\"2.2rem\"}} />;\n  }else if (str === 'positive')\n  {\n    return <AddCircleOutlineIcon style={{fontSize:\"2.2rem\"}} />\n  }else if (str === 'trace')\n  {\n    return <CallIcon style={{fontSize:\"2.2rem\"}} />;\n  }else if (str === 'deleted')\n  {\n    return <DeleteIcon style={{fontSize:\"2.2rem\"}} />;\n  }else if (str === 'late')\n  {\n    return <HourglassEmptyIcon style={{fontSize:\"2.2rem\"}} />;\n  }\n  \n  else\n  {\n    return <DescriptionIcon style={{fontSize:\"2.2rem\"}} />;\n  }\n\n}\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'}>\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nexport default function BookingTable(props) {\n  \n  const classes = useStyles();\n\n  const [topCount, setTopCount] = React.useState(25)\n  const topCountChanged = (event) =>\n  {\n    setTopCount(event.target.value)\n    loadData(event.target.value)\n  }\n  \n\n  const [openDialogExcel, setOpenDialogExcel] = useState(false);\n  const handleCloseDialogExcel = () =>\n  {\n    setCorporate(corporates[0]);\n    setJustCorporate(false);\n    setOpenDialogExcel(false);\n  }\n\n\n  const [fromDate, setFromDate] = React.useState(new Date(new Date().getTime() - 7 * 24 * 60 * 60 * 1000 ));\n  const handleFromDateChange = (date) => {\n    setFromDate(date);\n    setFromDateStr(dateformat(date,'yyyy-mm-dd'));\n  };\n\n  const [untilDate, setUntilDate] = React.useState(new Date(new Date().getTime() - 1 * 24 * 60 * 60 * 1000 ));\n  const handleUntilDateChange = (date) => {\n    setUntilDate(date);\n    seUntilDateStr(dateformat(date,'yyyy-mm-dd'));\n  };\n\n  const [fromDateStr, setFromDateStr] = useState(dateformat(new Date(new Date().getTime() - 7 * 24 * 60 * 60 * 1000 ), 'yyyy-mm-dd'));\n  const [untilDateStr, seUntilDateStr] = useState(dateformat(new Date(new Date().getTime() - 1 * 24 * 60 * 60 * 1000 ), 'yyyy-mm-dd'));\n\n  const [justCorporate, setJustCorporate] = useState(false);\n\n  const[chkDate, setChkDate] = useState(true);\n  const[chkForename, setChkForename] = useState(true);\n  const[chkSurname, setChkSurname] = useState(true);\n  const[chkDOB, setChkDOB] = useState(true);\n  const[chkEmail, setChkEmail] = useState(true);\n  const[chkTel, setChkTel] = useState(true);\n  const[chkCertificate, setChkCertidicate] = useState(true);\n  const[chkAntiBodyTest, setChkAntiBodyTest] = useState(true);\n  const[chkextRef, setChkExtRef] = useState(true);\n  const[chkPrice, setChkPrice] = useState(true);\n\n  const justCorporateChanged = (event) =>\n  {\n    setJustCorporate(event.target.checked);\n  }\n  \n\n  const chkDateChanged = (event) =>\n  {\n    setChkDate(event.target.checked);\n  }\n\n  const chkForenameChanged = (event) =>\n  {\n    setChkForename(event.target.checked);\n  }\n\n  const chkSurnameChanged = (event) =>\n  {\n    setChkSurname(event.target.checked);\n  }\n\n  const chkDOBChanged = (event) =>\n  {\n    setChkDOB(event.target.checked);\n  }\n\n  const chkEmailChanged = (event) =>\n  {\n    setChkEmail(event.target.checked);\n  }\n\n  const chkTelChanged = (event) =>\n  {\n    setChkTel(event.target.checked);\n  }\n\n  const chkCertificateChanged = (event) =>\n  {\n    setChkCertidicate(event.target.checked);\n  }\n\n  const chkAntiBodyTestChanged = (event) =>\n  {\n    setChkAntiBodyTest(event.target.checked);\n  }\n\n  const chkextRefChanged = (event) =>\n  {\n    setChkExtRef(event.target.checked);\n  }\n\n  const chkPriceChanged = (event) =>\n  {\n    setChkPrice(event.target.checked);\n  }\n\n\n\n  var columns = [];\n\n  if (props.date === 'recent')\n  {\n    columns = [\n      // { field: 'id', headerName: '#', width: 70 },\n\n      {\n        field: \"_id\",\n        headerName: \" \",\n        width: 120,\n        renderCell: (params) => {\n          return (\n            <React.Fragment>\n              <IconButton\n                color=\"primary\"\n                onClick={(event) => openDetailsDialog(event, params.value)}\n              >\n                <SearchIcon />\n              </IconButton>\n\n              <span\n                style={{\n                  color: \"#058700\",\n                  fontWeight: \"500\",\n                  fontSize: \"0.8rem\",\n                }}\n              >\n                {params.getValue(\"questions\") && \"Self-Test\"}\n              </span>\n            </React.Fragment>\n          );\n        },\n      },\n\n      {\n        field: \"timeStamp\",\n        headerName: \"TimeStamp\",\n        width: 200,\n        valueFormatter: (params) => {\n          return formatTimeStamp(params.value);\n        },\n      },\n\n      {\n        field: \"bookingDate\",\n        headerName: \"B Date\",\n        width: 110,\n        valueFormatter: (params) => {\n          return FormatDateFromString(params.value);\n        },\n      },\n      {\n        field: \"bookingTimeNormalized\",\n        headerName: \"B Time\",\n        width: 150,\n        renderCell: (params) => {\n          return <span style={{fontSize:\"0.7rem\",fontWeight:\"500\"}}>{params.getValue(\"bookingTime\")}</span> ;\n        },\n      },\n      { field: \"fullname\", headerName: \"Fullname\", width: 250 },\n      { field: \"phone\", headerName: \"Telephone\", width: 150 },\n\n      { field: \"email\", headerName: \"Email\", width: 200 },\n      {\n        field: \"faceToFaceConsultation\",\n        headerName: \"Consultation\",\n        width: 250,\n        renderCell: (params) => {\n          return (\n            <React.Fragment>\n              {params.getValue(\"faceToFaceConsultation\") && (\n                <span> Face to Face </span>\n              )}\n              {params.getValue(\"faceToFaceConsultation\") && (\n                <span style={{ paddingLeft: \"5px\", paddingRight: \"5px\" }}>\n                  {\" \"}\n                  -{\" \"}\n                </span>\n              )}\n              {params.getValue(\"telephoneConsultation\") && (\n                <span> Telephone </span>\n              )}\n            </React.Fragment>\n          );\n        },\n      },\n    ];\n\n  }\n  else\n  {\n    columns = [\n      // { field: 'id', headerName: '#', width: 70 },\n  \n      {\n        field: \"_id\",\n        headerName: \" \",\n        width: 120,\n        renderCell: (params) => {\n          return (\n            <React.Fragment>\n              <IconButton\n                color=\"primary\"\n                onClick={(event) => openDetailsDialog(event, params.value)}\n              >\n                <SearchIcon />\n              </IconButton>\n\n              <span\n                style={{\n                  color: \"#058700\",\n                  fontWeight: \"500\",\n                  fontSize: \"0.8rem\",\n                }}\n              >\n                {params.getValue(\"questions\") && \"Self-Test\"}\n              </span>\n            </React.Fragment>\n          );\n        },\n      },\n\n\n\n\n  \n      { field: 'bookingDate', headerName: 'B Date', width: 110, valueFormatter: (params) => { \n              return FormatDateFromString(params.value);\n          }\n       },\n       {\n        field: \"bookingTimeNormalized\",\n        headerName: \"B Time\",\n        width: 150,\n        renderCell: (params) => {\n          return <span style={{fontSize:\"0.7rem\",fontWeight:\"500\"}}>{params.getValue(\"bookingTime\")}</span> ;\n        },\n      },\n      { field: 'fullname', headerName: 'Fullname', width: 250 },\n      { field: 'phone', headerName: 'Telephone', width: 150 },\n      { field: 'email', headerName: 'Email', width: 200 },\n      { field: 'faceToFaceConsultation', headerName: 'Consultation', width: 250 , renderCell: (params) => {\n        return (\n          <React.Fragment>\n              {params.getValue('faceToFaceConsultation') && <span> Face to Face </span>}\n              {params.getValue('faceToFaceConsultation') && <span style={{paddingLeft:\"5px\", paddingRight:\"5px\"}}> - </span>}\n              {params.getValue('telephoneConsultation') && <span> Telephone </span>}\n          </React.Fragment>\n        )\n      }},\n    \n    ];\n  \n\n  }\n\n\n\n  const [state, setState] = React.useContext(GlobalState);  \n\n  const [data, setData] = React.useState({bookings: [] , cachedBookings: [], isFetching : true});\n\n  const [selectedRow, setSelectedRow] = React.useState(null);\n\n  const [selectedBooking, setSelectedBooking] = React.useState(null);\n  const [seeDetailsDialogOpen, setSeeDetailsDialogOpen] = React.useState(false);\n\n  const [corporate, setCorporate] = useState(corporates[0]);\n  const corporateChanged = (event) =>\n  {\n    setCorporate(event.target.value);\n  }\n  \n\n  const [filter,setFilter] = React.useState('');\n\n\n  const lastPromise = useRef();\n\n  const formatTimeStamp = (timeStamp) =>\n  {\n    const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\n    const timeStampStr = dateformat(timeStamp, 'yyyy-mm-dd');\n    if (todayStr === timeStampStr)\n    {\n      return dateformat(timeStamp, \"'Today', h:MM:ss TT\");\n    }\n    else\n    {\n       return dateformat(timeStamp, \"mmm dS, h:MM:ss TT\");\n    }\n  }\n\n  const loadData = (top) =>\n  {\n    var api = BookService.getAllBookings;\n    if (props.date === 'today')\n    {\n      api = BookService.getTodayBookings;\n    }else if (props.date === 'old')\n    {\n      api = BookService.getOldBookings;\n    }else if (props.date === 'future')\n    {\n      api = BookService.getFutureBookings;\n    }else if (props.date === 'recent')\n    {\n      api = BookService.getRecentBookingsAll;\n    }\n    else if (props.date === 'deleted')\n    {\n      api = BookService.getDeletedBookings;\n    }\n    else if (props.date === 'trace')\n    {\n      api = BookService.getTraceFolderBookings;\n    }\n\n     \n    setData({bookings: [], cachedBookings: [], isFetching: true});\n   \n    // console.log(props)\n\n    const currentPromise = api(top).then( (res) =>{\n      // console.log(res)\n      for (var i=0; i < res.data.length; i++)\n      {\n        res.data[i] = {...res.data[i], id : i + 1}\n      }  \n      setData({bookings: [...res.data], cachedBookings: [...res.data], isFetching: false});\n      // return res.data;\n    }).catch(err => {\n      console.error(err)\n    })\n\n    // lastPromise.current = currentPromise;\n\n    // currentPromise.then(\n    //   result => {\n    //     if (currentPromise === lastPromise.current) {\n    //       setData({bookings: [...result], cachedBookings: [...result], isFetching: false});\n    //       setPage(1);\n    //     }\n    //   },\n    //   e => {\n    //     if (currentPromise === lastPromise.current) {\n    //         console.error(e);\n    //         setData({bookings: data.bookings, cachedBookings: data.cachedBookings, isFetching: false});\n    //     }\n    //   });\n\n  }\n\n  useEffect( () => {\n            setTopCount(25)\n            loadData(25)\n        },\n        [props.date]);\n\n\n\n\n  useEffect( () => {\n\n        if (filter && filter.trim().length > 0)\n        {\n          var filteredData = data.cachedBookings.filter( (element) => \n\n             (element.fullname?.toLowerCase().indexOf(filter.toLowerCase()) >= 0)\n              \n          );\n  \n  \n          setData({bookings: [...filteredData], cachedBookings: data.cachedBookings, isFetching: false});\n        }else\n        {\n          setData({bookings: [...data.cachedBookings], cachedBookings: data.cachedBookings, isFetching: false});\n        }\n      },\n      [filter]);\n\n  \n      useEffect(() => {\n\n       loadData(topCount)\n    \n      }, [state.bookingDialogDataChanged]);    \n\n\n  const handleCloseSeeDetaisDialog = () =>\n  {\n    setSelectedBooking(null);\n    setSeeDetailsDialogOpen(false);\n  }    \n  \n  const openDetailsDialog = (event, id) =>\n  {\n    const booking = data.bookings.find(element => element._id === id);\n    setSelectedBooking(booking);\n    setSeeDetailsDialogOpen(true);\n\n  }\n\n  const refreshClicked = (event) =>{\n    setFilter('');\n    loadData(topCount)\n  }\n\n  const filterChanged = (event) =>{\n    setFilter(event.target.value);\n  }\n\n  const handleSelectionChanged = (newSelection) =>\n  {\n    if (newSelection.length > 0){\n      setSelectedRow(newSelection.rows[0]);\n    }\n    \n  }\n\n  const [page, setPage] = React.useState(1);\n\n  const handleExcelButtonClicked = (event) =>\n  {\n    setOpenDialogExcel(true);\n  }\n\n  const isTopSelectHidden = (date)=>\n  {\n    return date === 'live' || date === 'positive' || date === 'late' || date === 'today'\n  }\n\n\n  return (\n    <React.Fragment>\n      {data.isFetching && (\n        <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\n          <LinearProgress color=\"primary\" />\n        </div>\n      )}\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"space-between\"\n        alignItems=\"flex-end\"\n      >\n        <Grid item md={4}>\n          <div style={{ textAlign: \"left\", paddingLeft: \"10px\" }}>\n            <Grid\n              container\n              direction=\"row\"\n              justify=\"flex-start\"\n              alignItems=\"center\"\n            >\n              <Grid item>\n                <span style={{ paddingRight: \"15px\", color: \"#555\" }}>\n                  {\" \"}\n                  {getTableIcon(props.date)}{\" \"}\n                </span>\n              </Grid>\n              <Grid item>\n                <span\n                  style={{\n                    fontSize: \"1.4rem\",\n                    fontWeight: \"600\",\n                    color: \"#444\",\n                  }}\n                >\n                  {\" \"}\n                  {getTableTitle(props.date)}{\" \"}\n                </span>\n              </Grid>\n              <Grid item>\n                <Tooltip title=\"Refresh\" placement=\"right\">\n                  <IconButton\n                    color=\"primary\"\n                    className={classes.refreshButton}\n                    onClick={refreshClicked}\n                  >\n                    <RefreshIcon />\n                  </IconButton>\n                </Tooltip>\n              </Grid>\n            </Grid>\n          </div>\n        </Grid>\n\n        <Grid item md={3}>\n          {props.date === \"completed\" && state.showCreateExcel && (\n            <div style={{ paddingBottom: \"5px\" }}>\n              <Button\n                className={classes.ExportToExcelButton}\n                variant=\"outlined\"\n                color=\"default\"\n                onClick={handleExcelButtonClicked}\n                startIcon={\n                  <FontAwesomeIcon\n                    style={{ color: \"#009900\" }}\n                    icon={faFileExcel}\n                  />\n                }\n              >\n                export to excel\n              </Button>\n            </div>\n          )}\n        </Grid>\n\n        {data.isFetching && <div className={classes.HideNowRows}></div>}\n\n        <Grid item md={3}>\n          <TextField\n            variant=\"standard\"\n            value={filter}\n            onChange={filterChanged}\n            margin=\"normal\"\n            size=\"small\"\n            id=\"filter\"\n            label=\"Filter\"\n            name=\"filter\"\n            autoComplete=\"off\"\n          />\n        </Grid>\n\n        <Grid item hidden={isTopSelectHidden(props.date)}>\n          <FormControl className={classes.topSelect}>\n            <InputLabel id=\"top-select-label\">Limit</InputLabel>\n            <Select\n              labelId=\"top-select-label\"\n              id=\"top-simple-select\"\n              value={topCount}\n              onChange={topCountChanged}\n            >\n              <MenuItem value={25}>25</MenuItem>\n              <MenuItem value={50}>50</MenuItem>\n              <MenuItem value={100}>100</MenuItem>\n              <MenuItem value={500}>500</MenuItem>\n              <MenuItem value={1000}>1000</MenuItem>\n              <MenuItem value={10000}>ALL</MenuItem>\n            </Select>\n          </FormControl>\n\n          {/* <Button onClick={() => loadData(true)}> Show all records </Button> */}\n        </Grid>\n      </Grid>\n\n      <div style={{ height: 700, width: \"100%\" }}>\n        <DataGrid\n          rows={data.bookings}\n          columns={columns}\n          autoPageSize\n          page={page}\n          onPageChange={(params) => {\n            setPage(params.page);\n          }}\n          onSelectionChange={handleSelectionChanged}\n        />\n      </div>\n\n\n      <BookingDialog\n        booking={selectedBooking}\n        open={seeDetailsDialogOpen && selectedBooking && selectedBooking.fullname}\n        onClose={handleCloseSeeDetaisDialog}\n      />\n\n      {data.bookings && data.bookings.length > 0 && (\n        <Dialog\n          maxWidth=\"lg\"\n          open={openDialogExcel}\n          onClose={handleCloseDialogExcel}\n          PaperComponent={PaperComponent}\n          aria-labelledby=\"form-dialog-title\"\n        >\n          <DialogTitle id=\"draggable-dialog-title\">\n            <Grid\n              container\n              spacing={2}\n              direction=\"row\"\n              justify=\"center\"\n              alignItems=\"center\"\n            >\n              <Grid item>\n                <FontAwesomeIcon\n                  style={{ color: \"#2f942e\", fontSize: \"2rem\" }}\n                  icon={faFileExcel}\n                />\n              </Grid>\n\n              <Grid item>\n                <div\n                  style={{\n                    color: \"#2f942e\",\n                    paddingBottom: \"5px\",\n                    fontWeight: \"800\",\n                  }}\n                >\n                  {\" \"}\n                  Export to EXCEL{\" \"}\n                </div>\n              </Grid>\n            </Grid>\n\n            <Divider />\n          </DialogTitle>\n          <DialogContent>\n            <div\n              style={{\n                minHeight: \"600px\",\n                maxHeight: \"600px\",\n                minWidth: \"1200px\",\n                maxWidth: \"1200px\",\n              }}\n            >\n              <div>\n                <Grid row container justify=\"center\" spacing={3}>\n                  <Grid item>\n                    <FormControlLabel\n                      control={\n                        <Switch\n                          checked={justCorporate}\n                          onChange={justCorporateChanged}\n                          name=\"justCorporate\"\n                        />\n                      }\n                      label=\"Just Corporate Records\"\n                    />\n                  </Grid>\n\n                  {justCorporate && (\n                    <Grid item>\n                      <FormControl\n                        style={{ marginTop: \"0px\" }}\n                        className={classes.formControl}\n                      >\n                        <Select\n                          labelId=\"select-corporate\"\n                          id=\"select-corporate-id\"\n                          value={corporate}\n                          onChange={corporateChanged}\n                        >\n                          {corporates.map((element) => (\n                            <MenuItem value={element}>{`${element}`}</MenuItem>\n                          ))}\n                        </Select>\n                      </FormControl>\n                    </Grid>\n                  )}\n                </Grid>\n\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                  <Grid row container justify=\"center\" spacing={3}>\n                    <Grid item>\n                      <KeyboardDatePicker\n                        disableToolbar\n                        variant=\"inline\"\n                        format=\"dd/MM/yyyy\"\n                        margin=\"normal\"\n                        id=\"date-picker-from\"\n                        label=\"From\"\n                        value={fromDate}\n                        onChange={handleFromDateChange}\n                        KeyboardButtonProps={{\n                          \"aria-label\": \"change date\",\n                        }}\n                      />\n                    </Grid>\n\n                    <Grid item>\n                      <KeyboardDatePicker\n                        disableToolbar\n                        variant=\"inline\"\n                        format=\"dd/MM/yyyy\"\n                        margin=\"normal\"\n                        id=\"date-picker-until\"\n                        label=\"Until\"\n                        value={untilDate}\n                        onChange={handleUntilDateChange}\n                        KeyboardButtonProps={{\n                          \"aria-label\": \"change date\",\n                        }}\n                      />\n                    </Grid>\n\n                    <Grid item>\n                      <div style={{ paddingTop: \"30px\", marginLeft: \"20px\" }}>\n                        <ReactHTMLTableToExcel\n                          id=\"test-table-xls-button\"\n                          className={classes.ExportToExcelButtonInline}\n                          table=\"table-to-xls\"\n                          filename={`PCR.Report.${fromDateStr}.${untilDateStr}`}\n                          sheet=\"PCR-Report\"\n                          buttonText=\"Download as XLS\"\n                        />\n                      </div>\n                    </Grid>\n                  </Grid>\n                </MuiPickersUtilsProvider>\n              </div>\n\n              <div>\n                <Grid container spacing={3}>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkDate}\n                          onChange={chkDateChanged}\n                          name=\"chkDate\"\n                        />\n                      }\n                      label=\"Date\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkForename}\n                          onChange={chkForenameChanged}\n                          name=\"chkForename\"\n                        />\n                      }\n                      label=\"Forename\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkSurname}\n                          onChange={chkSurnameChanged}\n                          name=\"chkSurname\"\n                        />\n                      }\n                      label=\"Surname\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkDOB}\n                          onChange={chkDOBChanged}\n                          name=\"chkDOB\"\n                        />\n                      }\n                      label=\"D.O.B\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkEmail}\n                          onChange={chkEmailChanged}\n                          name=\"chkEmail\"\n                        />\n                      }\n                      label=\"Email\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkTel}\n                          onChange={chkTelChanged}\n                          name=\"chkTel\"\n                        />\n                      }\n                      label=\"Tel\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkCertificate}\n                          onChange={chkCertificateChanged}\n                          name=\"chkCertificate\"\n                        />\n                      }\n                      label=\"Certificate\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkAntiBodyTest}\n                          onChange={chkAntiBodyTestChanged}\n                          name=\"chkAntiBodyTest\"\n                        />\n                      }\n                      label=\"AntiBodyTest\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkextRef}\n                          onChange={chkextRefChanged}\n                          name=\"chkextRef\"\n                        />\n                      }\n                      label=\"Lab No.\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkPrice}\n                          onChange={chkPriceChanged}\n                          name=\"chkPrice\"\n                        />\n                      }\n                      label=\"Price\"\n                    />\n                  </Grid>\n                </Grid>\n              </div>\n\n              <div style={{ width: \"100%\", paddingTop: \"20px\" }}>\n                <table className={classes.table} id=\"table-to-xls\">\n                  <tr>\n                    {chkDate && <th className={classes.th}>Date</th>}\n                    {chkForename && <th className={classes.th}>Forename</th>}\n                    {chkSurname && <th className={classes.th}>Surename</th>}\n                    {chkDOB && <th className={classes.th}>D.O.B</th>}\n                    {chkEmail && <th className={classes.th}>Email</th>}\n                    {chkTel && <th className={classes.th}>Tel</th>}\n                    {chkCertificate && (\n                      <th className={classes.th}>Certificate</th>\n                    )}\n                    {chkAntiBodyTest && (\n                      <th className={classes.th}>AntiBodyTest</th>\n                    )}\n                    {chkextRef && <th className={classes.th}>Lab No.</th>}\n                    {chkPrice && <th className={classes.th}>Price (£) </th>}\n                  </tr>\n\n                  {data.bookings\n                    .filter((booking) => {\n                      if (!justCorporate) {\n                        return (\n                          booking.bookingDate >= fromDateStr &&\n                          booking.bookingDate <= untilDateStr\n                        );\n                      } else {\n                        return (\n                          booking.bookingDate >= fromDateStr &&\n                          booking.bookingDate <= untilDateStr &&\n                          booking.paid &&\n                          booking.paidBy === \"corporate\" &&\n                          booking.corporate === corporate\n                        );\n                      }\n                    })\n\n                    .map((booking) => (\n                      <tr>\n                        {chkDate && (\n                          <td className={classes.td}>\n                            {FormatDateFromString(booking.bookingDate)}\n                          </td>\n                        )}\n                        {chkForename && (\n                          <td className={classes.td}>\n                            {booking.forenameCapital}\n                          </td>\n                        )}\n                        {chkSurname && (\n                          <td className={classes.td}>\n                            {booking.surnameCapital}\n                          </td>\n                        )}\n                        {chkDOB && (\n                          <th className={classes.th}>\n                            {/* {FormatDateFromString(booking.birthDate)} */}\n                          </th>\n                        )}\n                        {chkEmail && (\n                          <td className={classes.td}>{booking.email}</td>\n                        )}\n                        {chkTel && (\n                          <td className={classes.td}>{booking.phone}</td>\n                        )}\n                        {chkCertificate && (\n                          <td className={classes.td}>\n                            {booking.certificate ? \"YES\" : \"NO\"}\n                          </td>\n                        )}\n                        {chkAntiBodyTest && (\n                          <td className={classes.td}>\n                            {booking.antiBodyTest ? \"YES\" : \"NO\"}\n                          </td>\n                        )}\n                        {chkextRef && (\n                          <td className={classes.td}>{booking.extRef}</td>\n                        )}\n                        {chkPrice && (\n                          <td className={classes.td}>\n                            {PriceCalculator.calculatePrice(booking)}\n                          </td>\n                        )}\n                      </tr>\n                    ))}\n                </table>\n              </div>\n            </div>\n          </DialogContent>\n        </Dialog>\n      )}\n    </React.Fragment>\n  );\n} ","\n\nexport const CalendarColors = {\n    PCR_COLOR : \"#4faef7\",\n    GYNAE_COLOR : \"#e83caf\",\n    GP_COLOR :  \"#ff4f14\",\n    STD_COLOR : \"#d6733a\",\n    BLOOD_COLOR: \"#dc2626\",\n\n    VC_COLOR : \"#0c7acf\",\n    F2F_COLOR : \"#8600d4\",\n    LASER_COLOR :  \"#d1005e\",\n    CATARACT_COLOR : \"#00919e\",\n    POSTOP_COLOR: \"#9e6c00\",\n    OPOTOMETRY_COLOR: \"#007d0c\"\n\n\n}\n","import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport PropTypes from \"prop-types\";\nimport dateformat from \"dateformat\";\nimport BookService from \"../services/BookService\";\n\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nimport GlobalState from \"../../GlobalState\";\nimport { Grid } from \"@material-ui/core\";\nimport { CalendarColors } from \"./colors\";\n\nconst useStyles = makeStyles((theme) => ({\n  Container: {\n    width: \"100%\",\n    minWidth:\"200px\",\n    paddingTop: \"70%\",\n    position: \"relative\",\n    backgroundColor: \"#fff\",\n    cursor: \"pointer\",\n  },\n\n  ContainerPast: {\n    width: \"100%\",\n    paddingTop: \"70%\",\n    position: \"relative\",\n    backgroundColor: \"#fafafa\",\n  },\n\n  DayLabel: {\n    position: \"absolute\",\n    top: \"5px\",\n    right: \"5px\",\n    color: \"#555\",\n    fontSize: \"1rem\",\n  },\n\n  DayLabelToday: {\n    position: \"absolute\",\n    top: \"5px\",\n    right: \"5px\",\n    backgroundColor: \"#1a73e8\",\n    color: \"#fff\",\n    fontSize: \"1rem\",\n    borderRadius: \"50%\",\n    padding: \"5px\",\n    lineHight: \"35px\",\n    minWidth: \"35px\",\n    textAlign: \"center\",\n  },\n\n  DayLabelDisabled: {\n    position: \"absolute\",\n    top: \"5px\",\n    right: \"5px\",\n    color: \"#ddd\",\n    fontSize: \"1rem\",\n  },\n\n  BookingCountLabel: {\n    position: \"absolute\",\n    top: \"35%\",\n    left: \"40%\",\n    color: \"#3f51b5\",\n    backgroundColor: \"#ebedf7\",\n    fontSize: \"16px\",\n    fontWeight: \"600\",\n    padding: \"10px\",\n    borderRadius: \"50%\",\n    minWidth: \"40px\",\n    lineHight: \"40px\",\n    cursor: \"pointer\",\n    textAlign: \"center\",\n  },\n\n  BookingCountLabelBusy: {\n    position: \"absolute\",\n    top: \"35%\",\n    left: \"40%\",\n    color: \"#b00000\",\n    backgroundColor: \"#fce6e6\",\n    fontSize: \"16px\",\n    fontWeight: \"600\",\n    padding: \"10px\",\n    borderRadius: \"50%\",\n    minWidth: \"40px\",\n    cursor: \"pointer\",\n    textAlign: \"center\",\n  },\n\n  LoadingProgress: {\n    position: \"absolute\",\n    top: \"40%\",\n    left: \"40%\",\n  },\n\n  BookingCountGauge: {\n    position: \"absolute\",\n    bottom: \"5%\",\n    left: \"8%\",\n    width: \"8%\",\n    height: \"85%\",\n  },\n\n  PCRGauge: {\n    position: \"absolute\",\n    bottom: \"-20px\",\n    left: \"0\",\n    width: \"30px\",\n    height: \"120%\",\n  },\n\n  GynaeGauge: {\n    position: \"absolute\",\n    bottom: \"-20px\",\n    left: \"31px\",\n    width: \"20px\",\n    height: \"120%\",\n  },\n\n  GPGauge: {\n    position: \"absolute\",\n    bottom: \"-20px\",\n    left: \"52px\",\n    width: \"20px\",\n    height: \"120%\",\n  },\n\n  STDGauge: {\n    position: \"absolute\",\n    bottom: \"-20px\",\n    left: \"73px\",\n    width: \"20px\",\n    height: \"120%\",\n  },\n\n  BloodGauge: {\n    position: \"absolute\",\n    bottom: \"-20px\",\n    left: \"94px\",\n    width: \"20px\",\n    height: \"120%\",\n  },\n\n  DayLabelContainer: {\n    position: \"absolute\",\n    top: \"15%\",\n    left: \"5px\",\n    width: \"100%\",\n    paddingTop: \"45%\",\n  },\n}));\n\nconst MAX_BOOKING_COUNT_PCR = 50;\nconst MAX_BOOKING_COUNT_GP = 10;\nconst MAX_BOOKING_COUNT_STD = 10;\nconst MAX_BOOKING_COUNT_GYNAE = 10;\nconst MAX_BOOKING_COUNT_BLOOD = 10;\n\nconst MAX_BOOKING_COUNT = 10;\n\n\n\nconst MonthViewCell = ({ key, cellIndex, month, daysInMonth, dayClicked }) => {\n  const classes = useStyles();\n\n  const [state, setState] = React.useContext(GlobalState);\n\n  const [dateStr, setDateStr] = React.useState(\"\");\n\n  const [cellDate, setCellDate] = React.useState(new Date());\n\n  const [bookingsCount, setBookingsCount] = React.useState(null);\n\n  const [disableDay, setDisableDay] = React.useState(false);\n\n  const [isPast, setIsPast] = React.useState(false);\n\n  useEffect(() => {\n    if (cellIndex <= daysInMonth.length) {\n      const date = daysInMonth[cellIndex - 1];\n      const dateStr = dateformat(date, \"yyyy-mm-dd\");\n      setDateStr(dateStr);\n      setCellDate(date);\n      setDisableDay(date.getMonth() !== month - 1);\n      const todayStr = dateformat(new Date(), \"yyyy-mm-dd\");\n      setIsPast(dateStr < todayStr);\n    } else {\n      const day = cellIndex - daysInMonth.length;\n      const date = new Date(\n        daysInMonth[daysInMonth.length - 1].getTime() + day * 86400000\n      );\n      const dateStr = dateformat(date, \"yyyy-mm-dd\");\n      setDateStr(dateStr);\n      setCellDate(date);\n      setDisableDay(true);\n      const todayStr = dateformat(new Date(), \"yyyy-mm-dd\");\n      setIsPast(dateStr < todayStr);\n    }\n  }, [cellIndex, month, daysInMonth]);\n\n  useEffect(() => {\n    const fecthData = async () => {\n      if (!dateStr || dateStr.length <= 0) {\n        return;\n      }\n\n      if (disableDay) {\n        setBookingsCount(-2);\n        return;\n      }\n\n      setBookingsCount(null);\n\n      var res = state.AdminCalendarCache?.find(\n        (record) =>\n          record.method === \"getBookingsCountByDateStr\" &&\n          record.query === dateStr\n      )?.res;\n\n      if (!res) {\n        res = await BookService.getAllBookingsCountByDateStr(dateStr);\n        setState((state) => ({\n          ...state,\n          AdminCalendarCache: [\n            ...state.AdminCalendarCache,\n            { method: \"getBookingsCountByDateStr\", query: dateStr, res: res },\n          ],\n        }));\n      }\n\n      if (res.data.count) {\n        setBookingsCount(res.data.count);\n      }\n    };\n\n    fecthData();\n  }, [dateStr]);\n\n  const getDayLabel = (_cellIndex, _month, _daysInMonth) => {\n    var date = null;\n    var disabled = false;\n    var day = -1;\n\n    if (_cellIndex <= _daysInMonth.length) {\n      date = _daysInMonth[_cellIndex - 1];\n      day = date.getDate();\n      if (date.getMonth() !== _month - 1) {\n        disabled = true;\n      }\n    } else {\n      const _day = _cellIndex - _daysInMonth.length;\n      const date = new Date(\n        _daysInMonth[_daysInMonth.length - 1].getTime() + _day * 86400000\n      );\n      day = date.getDate();\n      disabled = true;\n    }\n\n    const isToday =\n      dateformat(new Date(), \"yyyy-mm-dd\") === dateformat(date, \"yyyy-mm-dd\");\n\n    return (\n      <span\n        className={\n          disabled\n            ? classes.DayLabelDisabled\n            : isToday\n            ? classes.DayLabelToday\n            : classes.DayLabel\n        }\n      >\n        {day > 0 ? `${day}` : \"\"}\n      </span>\n    );\n  };\n\n  const getClinicBar = (clinic, count) => {\n    return (\n      <React.Fragment>\n        {clinic === \"Virtual Consultation\" &&\n          state.selectedClinics.findIndex((e) => e === \"Virtual Consultation\") >= 0 &&\n          getVCClinicBar(count)}\n        {clinic === \"F2F Clinic\" &&\n          state.selectedClinics.findIndex((e) => e === \"F2F Clinic\") >= 0 &&\n          getF2FClinicBar(count)}\n        {clinic === \"Laser Theatre\" &&\n          state.selectedClinics.findIndex((e) => e === \"Laser Theatre\") >= 0 &&\n          getLaserClinicBar(count)}\n        {clinic === \"Lens Theatre\" &&\n          state.selectedClinics.findIndex((e) => e === \"Lens Theatre\") >= 0 &&\n          getCataractClinicBar(count)}\n                 {clinic === \"Post OP\" &&\n          state.selectedClinics.findIndex((e) => e === \"Post OP\") >= 0 &&\n          getPostOPClinicBar(count)}\n \n      </React.Fragment>\n    );\n  };\n\n  const minHeight = 1;\n  const getVCClinicBar = (count) => {\n    let width = (count / MAX_BOOKING_COUNT) * 100 + 5;\n    if (width > 100) width = 100;\n\n    if (width < 20) width = 20;\n\n    if (count === 0) {\n      width = minHeight;\n    }\n\n    const percent = 100 - width;\n\n    return (\n      <div className={classes.PCRGauge}>\n        <div\n          style={{\n            padding: \"0\",\n            margin: \"0\",\n            width: \"100%\",\n            height: \"100%\",\n            backgroundColor: CalendarColors.VC_COLOR,\n            position: \"relative\",\n          }}\n        >\n          <div\n            style={{\n              position: \"absolute\",\n              bottom: \"0px\",\n              color: \"#fff\",\n              fontWeight: \"500\",\n              fontSize:\"0.8rem\",\n              textAlign: \"center\",\n              width: \"100%\",\n            }}\n          >\n            {count > 0 && count}\n          </div>\n\n          <div\n            style={{\n              padding: \"0\",\n              margin: \"0\",\n              width: \"100%\",\n              height: `${percent}%`,\n              backgroundColor: \"#fafafa\",\n            }}\n          ></div>\n        </div>\n      </div>\n    );\n  };\n\n  const getF2FClinicBar = (count) => {\n    let width = (count / MAX_BOOKING_COUNT) * 100 + 5;\n    if (width > 100) width = 100;\n\n    if (width < 20) width = 20;\n\n    if (count === 0) {\n      width = minHeight;\n    }\n\n    const percent = 100 - width;\n\n    return (\n      <div className={classes.GynaeGauge}>\n        <div\n          style={{\n            padding: \"0\",\n            margin: \"0\",\n            width: \"100%\",\n            height: \"100%\",\n            backgroundColor: CalendarColors.F2F_COLOR,\n            position: \"relative\",\n          }}\n        >\n          <div\n             style={{\n                position: \"absolute\",\n                bottom: \"0px\",\n                color: \"#fff\",\n                fontWeight: \"500\",\n                fontSize:\"0.8rem\",\n                textAlign: \"center\",\n                width: \"100%\",\n              }}\n          >\n            {count > 0 && count}\n          </div>\n\n          <div\n            style={{\n              padding: \"0\",\n              margin: \"0\",\n              width: \"100%\",\n              height: `${percent}%`,\n              backgroundColor: \"#fafafa\",\n            }}\n          ></div>\n        </div>\n      </div>\n    );\n  };\n\n  const getLaserClinicBar = (count) => {\n    let width = (count / MAX_BOOKING_COUNT) * 100 + 5;\n    if (width > 100) width = 100;\n\n    if (width < 20) width = 20;\n\n    if (count === 0) {\n      width = minHeight;\n    }\n\n    const percent = 100 - width;\n\n    return (\n      <div className={classes.GPGauge}>\n        <div\n          style={{\n            padding: \"0\",\n            margin: \"0\",\n            width: \"100%\",\n            height: \"100%\",\n            backgroundColor: CalendarColors.LASER_COLOR,\n            position: \"relative\",\n          }}\n        >\n          <div\n             style={{\n                position: \"absolute\",\n                bottom: \"0px\",\n                color: \"#fff\",\n                fontWeight: \"500\",\n                fontSize:\"0.8rem\",\n                textAlign: \"center\",\n                width: \"100%\",\n              }}\n          >\n            {count > 0 && count}\n          </div>\n\n          <div\n            style={{\n              padding: \"0\",\n              margin: \"0\",\n              width: \"100%\",\n              height: `${percent}%`,\n              backgroundColor: \"#fafafa\",\n            }}\n          ></div>\n        </div>\n      </div>\n    );\n  };\n\n  const getCataractClinicBar = (count) => {\n    let width = (count / MAX_BOOKING_COUNT) * 100 + 5;\n    if (width > 100) width = 100;\n\n    if (width < 20) width = 20;\n\n    if (count === 0) {\n      width = minHeight;\n    }\n\n    const percent = 100 - width;\n\n    return (\n      <div className={classes.STDGauge}>\n        <div\n          style={{\n            padding: \"0\",\n            margin: \"0\",\n            width: \"100%\",\n            height: \"100%\",\n            backgroundColor: CalendarColors.CATARACT_COLOR,\n            position: \"relative\",\n          }}\n        >\n          <div\n             style={{\n                position: \"absolute\",\n                bottom: \"0px\",\n                color: \"#fff\",\n                fontWeight: \"500\",\n                fontSize:\"0.8rem\",\n                textAlign: \"center\",\n                width: \"100%\",\n              }}\n          >\n            {count > 0 && count}\n          </div>\n\n          <div\n            style={{\n              padding: \"0\",\n              margin: \"0\",\n              width: \"100%\",\n              height: `${percent}%`,\n              backgroundColor: \"#fafafa\",\n            }}\n          ></div>\n        </div>\n      </div>\n    );\n  };\n\n  const getPostOPClinicBar = (count) => {\n    let width = (count / MAX_BOOKING_COUNT) * 100 + 5;\n    if (width > 100) width = 100;\n\n    if (width < 20) width = 20;\n\n    if (count === 0) {\n      width = minHeight;\n    }\n\n    const percent = 100 - width;\n\n    return (\n      <div className={classes.BloodGauge}>\n        <div\n          style={{\n            padding: \"0\",\n            margin: \"0\",\n            width: \"100%\",\n            height: \"100%\",\n            backgroundColor: CalendarColors.POSTOP_COLOR,\n            position: \"relative\",\n          }}\n        >\n          <div\n             style={{\n                position: \"absolute\",\n                bottom: \"0px\",\n                color: \"#fff\",\n                fontWeight: \"500\",\n                fontSize:\"0.8rem\",\n                textAlign: \"center\",\n                width: \"100%\",\n              }}\n          >\n            {count > 0 && count}\n          </div>\n\n          <div\n            style={{\n              padding: \"0\",\n              margin: \"0\",\n              width: \"100%\",\n              height: `${percent}%`,\n              backgroundColor: \"#fafafa\",\n            }}\n          ></div>\n        </div>\n      </div>\n    );\n  };\n\n\n\n  const getBookingsCountLabel = (_bookingsCount) => {\n    if (!_bookingsCount) {\n      return (\n        <div className={classes.LoadingProgress}>\n          <CircularProgress disableShrink />\n        </div>\n      );\n    } else if (_bookingsCount !== -2) {\n      return (\n        <div className={classes.DayLabelContainer}>\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"flex-start\"\n            alignItems=\"flex-end\"\n            style={{ width: \"100%\", height: \"100%\" }}\n          >\n            {_bookingsCount.map((item) => (\n              <Grid item>{getClinicBar(item.clinic, item.count)}</Grid>\n            ))}\n          </Grid>\n        </div>\n      );\n    }\n  };\n\n  const getBookingsCountGauge = (_bookingsCount) => {\n    if (_bookingsCount > 0) {\n      let percent = (_bookingsCount / MAX_BOOKING_COUNT_PCR) * 100;\n      if (percent > 100) {\n        percent = 100;\n      }\n\n      percent = 100 - percent;\n\n      return (\n        <div className={classes.BookingCountGauge}>\n          <div\n            style={{\n              padding: \"0\",\n              margin: \"0\",\n              width: \"100%\",\n              height: \"100%\",\n              backgroundColor: \"#3f51b5\",\n            }}\n          >\n            <div\n              style={{\n                padding: \"0\",\n                margin: \"0\",\n                width: \"100%\",\n                height: `${percent}%`,\n                backgroundColor: \"#fafafa\",\n              }}\n            ></div>\n          </div>\n        </div>\n      );\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <div\n        className={classes.Container}\n        onClick={(event) => dayClicked(event, cellDate)}\n      >\n        {getDayLabel(cellIndex, month, daysInMonth)}\n\n        {getBookingsCountLabel(bookingsCount)}\n\n        {/* {getBookingsCountGauge(bookingsCount)} */}\n      </div>\n    </React.Fragment>\n  );\n};\n\nMonthViewCell.propTypes = {\n  key: PropTypes.string.isRequired,\n  cellIndex: PropTypes.number.isRequired,\n  month: PropTypes.number.isRequired,\n  daysInMonth: PropTypes.arrayOf(PropTypes.date),\n  dayClicked: PropTypes.func,\n};\n\nexport default MonthViewCell;\n","import calendar from 'node-calendar';\n\n\nexport default class CalendarUtil {\n\n    static getMonthRange = (month , year) =>\n    {\n        return new calendar.Calendar(calendar.SUNDAY).itermonthdates(year, month);\n    } \n\n} ","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport MonthViewCell from './MonthViewCell';\nimport CalendarUtil from './calendar-util';\n\nconst dayLables = ['Sun', 'Mon', 'Tue', 'Wed' , 'Thu', 'Fri', 'Sat'];\nconst days = [1,2,3,4,5,6,7]; \nconst rows = [1,2,3,4,5,6];\n\nconst useStyles = makeStyles((theme) => ({\n\n    table: {\n        width: \"100%\",\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n    },\n\n    th: {\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        verticalAlign: \"middle\",\n        fontcolor: \"#555\",\n        fontWeight: \"400\",\n        fontSize: \"15px\",\n        paddingTop: \"5px\",\n        paddingBottom: \"5px\",\n        width: \"14%\"\n    },\n\n    td: {\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        verticalAlign: \"middle\",\n    }\n\n  }));\n\nconst MonthView = ({month, year, dayClicked}) => {\n    const classes = useStyles();\n\n    const daysInMonth = CalendarUtil.getMonthRange(month,year);\n\n    return (\n        <React.Fragment>\n\n            <table className={classes.table}>\n                <thead>\n                    <tr>\n                        {dayLables.map(label => (\n                            <th key={`th-${label}`} className={classes.th}>\n                                {label}\n                            </th>\n                        ))}\n                    </tr>\n                </thead>\n                <tbody>\n                    {rows.map(row => (\n                        <tr>\n                            {days.map(day => (\n                                <td className={classes.td}>\n                                    <MonthViewCell \n                                        key={`${month}${year}${(row-1) * days.length + day}`} \n                                        cellIndex={(row-1) * days.length + day} \n                                        month={month} \n                                        daysInMonth={daysInMonth}\n                                        dayClicked = {dayClicked}\n                                        />\n                                </td>\n                            ))}\n                        </tr>\n                    ))}            \n                </tbody>\n\n            </table>\n\n      \n        </React.Fragment>\n\n\n    );\n}\n\nMonthView.propTypes = {\n    month: PropTypes.number.isRequired,\n    year: PropTypes.number.isRequired,\n    dayClicked: PropTypes.func\n  };\n\n\nexport default MonthView;","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport dateformat from 'dateformat';\nimport BookService from '../services/BookService';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport GlobalState from '../../GlobalState';\n\nimport axios from 'axios'\n\nimport { Grid } from '@material-ui/core';\nimport { CalendarColors } from './colors';\n\nconst MAX_BOOKING_COUNT_PCR = 10;\nconst MAX_BOOKING_COUNT_GP = 1;\nconst MAX_BOOKING_COUNT_STD = 1;\nconst MAX_BOOKING_COUNT_GYNAE = 1;\nconst MAX_BOOKING_COUNT_BLOOD = 1;\n\n\n\nconst useStyles = makeStyles((theme) => ({\n\n    Container: {\n        width: \"100%\",\n        minHeight: \"100px\",\n        paddingTop: \"40%\",\n        position: \"relative\",\n        backgroundColor: \"#fff\",\n        cursor: \"pointer\"\n    },\n\n    ContainerPast: {\n        width: \"100%\",\n        minHeight: \"100px\",\n        paddingTop: \"40%\",\n        position: \"relative\",\n        backgroundColor: \"#fafafa\",\n        cursor: \"pointer\"\n    },\n    \n    DayLabel: {\n        position: \"absolute\",\n        top: \"5px\",\n        right: \"5px\",\n        color: \"#555\",\n        fontSize: \"1rem\"\n    },\n\n    DayLabelDisabled: {\n        position: \"absolute\",\n        top: \"5px\",\n        right: \"5px\",\n        color: \"#ddd\",\n        fontSize: \"1rem\"\n    },\n\n    BookingCountLabel: {\n        position: \"absolute\",\n        top: \"25%\",\n        left: \"38%\",\n        color: \"#3f51b5\",\n        backgroundColor: \"#ebedf7\",\n        fontSize: \"14px\",\n        fontWeight: \"600\",\n        padding: \"5px\",\n        borderRadius: \"50%\",\n        minWidth: \"30px\",\n        cursor : \"pointer\",\n        textAlign: \"center\"\n    },\n\n    BookingCountLabelBusy: {\n        position: \"absolute\",\n        top: \"25%\",\n        left: \"38%\",\n        color: \"#b00000\",\n        backgroundColor: \"#fce6e6\",\n        fontSize: \"14px\",\n        fontWeight: \"600\",\n        padding: \"5px\",\n        borderRadius: \"50%\",\n        minWidth: \"30px\",\n        cursor : \"pointer\",\n        textAlign: \"center\"\n    },\n\n    LoadingProgress: {\n        position: \"absolute\",\n        top: \"40%\",\n        left: \"40%\",\n      },\n\n      BookingCountGauge: {\n        position: \"absolute\",\n        bottom: \"5%\",\n        left: \"8%\",\n        width : \"85%\",\n        height: \"8%\"\n    },\n\n    PCRGauge: {\n        position: \"absolute\",\n        bottom: \"15px\",\n        left: \"0\",\n        width: \"20px\",\n        height: \"90%\",\n      },\n    \n      GynaeGauge: {\n        position: \"absolute\",\n        bottom: \"15px\",\n        left: \"21px\",\n        width: \"20px\",\n        height: \"90%\",\n      },\n    \n      GPGauge: {\n        position: \"absolute\",\n        bottom: \"15px\",\n        left: \"42px\",\n        width: \"20px\",\n        height: \"90%\",\n      },\n    \n      STDGauge: {\n        position: \"absolute\",\n        bottom: \"15px\",\n        left: \"63px\",\n        width: \"20px\",\n        height: \"90%\",\n      },\n      BloodGauge: {\n        position: \"absolute\",\n        bottom: \"15px\",\n        left: \"84px\",\n        width: \"20px\",\n        height: \"90%\",\n      },\n\n    \n\n    DayLabelContainer:{\n        position: \"absolute\",\n        top: \"15%\",\n        left:\"5px\",\n        width:\"100%\",\n        height:\"100%\"   \n    },\n\n  }));\n\nconst MAX_BOOKING_COUNT = 1;  \n\nconst WeekViewCell = ({key, date, time, dayClicked}) => {\n    const classes = useStyles();\n\n    const [state, setState] = React.useContext(GlobalState);\n    const [bookingsCount, setBookingsCount] = React.useState(null);\n    const [isPast, setIsPast] = React.useState(false);\n\n    const [cellDate, setCellDate] = React.useState(new Date());\n\n    useEffect( () => {\n        const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\n        setIsPast(date < todayStr);\n\n        setCellDate(new Date(date));\n\n    }, [date]);\n\n    useEffect ( () => {\n      \n      \n      \n        if (!date || date.length <= 0 || !time || time.length <= 0)\n        {\n            return;\n        }\n        \n        // if (isPast)\n        // {\n        //     setBookingsCount(-2);\n        //     return;\n        // }\n\n        setBookingsCount(null);\n\n       \n\n        var res = state.AdminCalendarCache?.find(record => record.method === 'getBookingsCountByDateStrandTime' && record.query === `${date}${time}`)?.res;\n        if (res)\n        {\n            if (res.data.count)\n            {\n                setBookingsCount(res.data.count);\n            }  \n            return;\n        }\n\n        let source = axios.CancelToken.source();\n        BookService.getAllBookingsCountByDateStrandTime(date, time, source).then( res => {\n            if (res.data.count)\n            {\n                setBookingsCount(res.data.count);\n                setState(state => ({...state, AdminCalendarCache : [...state.AdminCalendarCache, {method: 'getBookingsCountByDateStrandTime' , query : `${date}${time}`, res: res}]}));\n            }  \n        }).catch( err => \n            {\n                //do nothing\n            });\n     \n        return () => {\n           if (source)\n              source.cancel('Cancelling in cleanup');\n        }\n     \n    }, [date, time]);\n\n\n    const minHeight = 1;\n    const getVCClinicBar = (count) => {\n      let width = (count / MAX_BOOKING_COUNT) * 100 + 5;\n      if (width > 100) width = 100;\n  \n      if (width < 30) width = 30;\n  \n      if (count === 0) {\n        width = minHeight;\n      }\n  \n      const percent = 100 - width;\n  \n      return (\n        <div className={classes.PCRGauge}>\n          <div\n            style={{\n              padding: \"0\",\n              margin: \"0\",\n              width: \"100%\",\n              height: \"100%\",\n              backgroundColor: CalendarColors.VC_COLOR,\n              position: \"relative\",\n            }}\n          >\n            <div\n              style={{\n                position: \"absolute\",\n                bottom: \"0px\",\n                color: \"#fff\",\n                fontWeight: \"500\",\n                fontSize:\"0.8rem\",\n                textAlign: \"center\",\n                width: \"100%\",\n              }}\n            >\n              {count > 0 && count}\n            </div>\n  \n            <div\n              style={{\n                padding: \"0\",\n                margin: \"0\",\n                width: \"100%\",\n                height: `${percent}%`,\n                backgroundColor: \"#fafafa\",\n              }}\n            ></div>\n          </div>\n        </div>\n      );\n    };\n  \n    const getF2FClinicBar = (count) => {\n      let width = (count / MAX_BOOKING_COUNT) * 100 + 5;\n      if (width > 100) width = 100;\n  \n      if (width < 30) width = 30;\n  \n      if (count === 0) {\n        width = minHeight;\n      }\n  \n      const percent = 100 - width;\n  \n      return (\n        <div className={classes.GynaeGauge}>\n          <div\n            style={{\n              padding: \"0\",\n              margin: \"0\",\n              width: \"100%\",\n              height: \"100%\",\n              backgroundColor: CalendarColors.F2F_COLOR,\n              position: \"relative\",\n            }}\n          >\n            <div\n               style={{\n                  position: \"absolute\",\n                  bottom: \"0px\",\n                  color: \"#fff\",\n                  fontWeight: \"500\",\n                  fontSize:\"0.8rem\",\n                  textAlign: \"center\",\n                  width: \"100%\",\n                }}\n            >\n              {count > 0 && count}\n            </div>\n  \n            <div\n              style={{\n                padding: \"0\",\n                margin: \"0\",\n                width: \"100%\",\n                height: `${percent}%`,\n                backgroundColor: \"#fafafa\",\n              }}\n            ></div>\n          </div>\n        </div>\n      );\n    };\n  \n    const getLaserClinicBar = (count) => {\n      let width = (count / MAX_BOOKING_COUNT) * 100 + 5;\n      if (width > 100) width = 100;\n  \n      if (width < 30) width = 30;\n  \n      if (count === 0) {\n        width = minHeight;\n      }\n  \n      const percent = 100 - width;\n  \n      return (\n        <div className={classes.GPGauge}>\n          <div\n            style={{\n              padding: \"0\",\n              margin: \"0\",\n              width: \"100%\",\n              height: \"100%\",\n              backgroundColor: CalendarColors.LASER_COLOR,\n              position: \"relative\",\n            }}\n          >\n            <div\n               style={{\n                  position: \"absolute\",\n                  bottom: \"0px\",\n                  color: \"#fff\",\n                  fontWeight: \"500\",\n                  fontSize:\"0.8rem\",\n                  textAlign: \"center\",\n                  width: \"100%\",\n                }}\n            >\n              {count > 0 && count}\n            </div>\n  \n            <div\n              style={{\n                padding: \"0\",\n                margin: \"0\",\n                width: \"100%\",\n                height: `${percent}%`,\n                backgroundColor: \"#fafafa\",\n              }}\n            ></div>\n          </div>\n        </div>\n      );\n    };\n  \n    const getCataractClinicBar = (count) => {\n      let width = (count / MAX_BOOKING_COUNT) * 100 + 5;\n      if (width > 100) width = 100;\n  \n      if (width < 30) width = 30;\n  \n      if (count === 0) {\n        width = minHeight;\n      }\n  \n      const percent = 100 - width;\n  \n      return (\n        <div className={classes.STDGauge}>\n          <div\n            style={{\n              padding: \"0\",\n              margin: \"0\",\n              width: \"100%\",\n              height: \"100%\",\n              backgroundColor: CalendarColors.CATARACT_COLOR,\n              position: \"relative\",\n            }}\n          >\n            <div\n               style={{\n                  position: \"absolute\",\n                  bottom: \"0px\",\n                  color: \"#fff\",\n                  fontWeight: \"500\",\n                  fontSize:\"0.8rem\",\n                  textAlign: \"center\",\n                  width: \"100%\",\n                }}\n            >\n              {count > 0 && count}\n            </div>\n  \n            <div\n              style={{\n                padding: \"0\",\n                margin: \"0\",\n                width: \"100%\",\n                height: `${percent}%`,\n                backgroundColor: \"#fafafa\",\n              }}\n            ></div>\n          </div>\n        </div>\n      );\n    };\n\n    const getPostOPClinicBar = (count) => {\n      let width = (count / MAX_BOOKING_COUNT) * 100 + 5;\n      if (width > 100) width = 100;\n  \n      if (width < 30) width = 30;\n  \n      if (count === 0) {\n        width = minHeight;\n      }\n  \n      const percent = 100 - width;\n  \n      return (\n        <div className={classes.BloodGauge}>\n          <div\n            style={{\n              padding: \"0\",\n              margin: \"0\",\n              width: \"100%\",\n              height: \"100%\",\n              backgroundColor: CalendarColors.POSTOP_COLOR,\n              position: \"relative\",\n            }}\n          >\n            <div\n               style={{\n                  position: \"absolute\",\n                  bottom: \"0px\",\n                  color: \"#fff\",\n                  fontWeight: \"500\",\n                  fontSize:\"0.8rem\",\n                  textAlign: \"center\",\n                  width: \"100%\",\n                }}\n            >\n              {count > 0 && count}\n            </div>\n  \n            <div\n              style={{\n                padding: \"0\",\n                margin: \"0\",\n                width: \"100%\",\n                height: `${percent}%`,\n                backgroundColor: \"#fafafa\",\n              }}\n            ></div>\n          </div>\n        </div>\n      );\n    };\n\n\n  \n  \n    const getBookingsCountLabel = (_bookingsCount) => {\n      if (!_bookingsCount) {\n        return (\n          <div className={classes.LoadingProgress}>\n            <CircularProgress disableShrink />\n          </div>\n        );\n      } else if (_bookingsCount !== -2) {\n        return (\n          <div className={classes.DayLabelContainer}>\n            <Grid\n              container\n              direction=\"row\"\n              justify=\"flex-start\"\n              alignItems=\"flex-end\"\n              style={{ width: \"100%\", height: \"100%\" }}\n            >\n              {_bookingsCount.map((item) => (\n                <Grid item>{getClinicBar(item.clinic, item.count)}</Grid>\n              ))}\n            </Grid>\n          </div>\n        );\n      }\n    };\n\n    const getClinicBar = (clinic, count) => {\n      return (\n        <React.Fragment>\n          {clinic === \"Virtual Consultation\" &&\n            state.selectedClinics.findIndex((e) => e === \"Virtual Consultation\") >= 0 &&\n            getVCClinicBar(count)}\n          {clinic === \"F2F Clinic\" &&\n            state.selectedClinics.findIndex((e) => e === \"F2F Clinic\") >= 0 &&\n            getF2FClinicBar(count)}\n          {clinic === \"Laser Theatre\" &&\n            state.selectedClinics.findIndex((e) => e === \"Laser Theatre\") >= 0 &&\n            getLaserClinicBar(count)}\n          {clinic === \"Cataract Theatre\" &&\n            state.selectedClinics.findIndex((e) => e === \"Cataract Theatre\") >= 0 &&\n            getCataractClinicBar(count)}\n                      {clinic === \"Post OP\" &&\n            state.selectedClinics.findIndex((e) => e === \"Post OP\") >= 0 &&\n            getPostOPClinicBar(count)}\n\n        </React.Fragment>\n      );\n    };\n    \n    const getBookingsCountGauge = (_bookingsCount) =>\n    {\n        if (_bookingsCount > 0 )\n        {\n            let percent = (_bookingsCount / MAX_BOOKING_COUNT) * 100;\n            if (percent > 100)\n            {\n                percent = 100;\n            }\n\n            // percent = 100 - percent;\n\n            return (\n\n                <div className={classes.BookingCountGauge}>\n                  <div style={{padding:\"0\", margin:\"0\", width:\"100%\", height:\"100%\", backgroundColor: \"#f5f5f5\"}} >\n                        <div  style={{padding:\"0\", margin:\"0\", height:\"100%\", width:`${percent}%`, backgroundColor: \"#3f51b5\"}} >\n\n                        </div>\n                  </div>\n                </div>\n            );\n        }\n    }\n\n\n\n\n    return (\n        <React.Fragment>\n\n            <div className={isPast ? classes.ContainerPast : classes.Container} onClick={(event => dayClicked(event,cellDate))} >\n\n              {getBookingsCountLabel(bookingsCount)}\n\n              {/* {getBookingsCountGauge(bookingsCount)} */}\n\n            </div>\n\n        </React.Fragment>\n\n\n    );\n}\n\nWeekViewCell.propTypes = {\n    key: PropTypes.string.isRequired,\n    date: PropTypes.string.isRequired,\n    time: PropTypes.string.isRequired,\n    dayClicked: PropTypes.func\n  };\n\n \n  \nexport default WeekViewCell;","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport WeekViewCell from './WeekViewCell';\nimport dateformat from 'dateformat';\n\nconst rows = [\n    '08:00 AM',\n    '08:15 AM',\n    '08:30 AM', \n    '08:45 AM',\n    '09:00 AM',\n    '09:15 AM', \n    '09:30 AM',\n    '09:45 AM',\n    '10:00 AM',\n    '10:15 AM',\n    '10:30 AM',\n    '10:45 AM',\n    '11:00 AM',\n    '11:15 AM',\n    '11:30 AM',\n    '11:45 AM',\n    '12:00 PM',\n    '12:15 PM',\n    '12:30 PM',\n    '12:45 PM',\n    '01:00 PM',\n    '01:15 PM',\n    '01:30 PM',\n    '01:45 PM',\n    '02:00 PM',\n    '02:15 PM',\n    '02:30 PM',\n    '02:45 PM',\n    '03:00 PM',\n    '03:15 PM',\n    '03:30 PM',\n    '03:45 PM',\n    '04:00 PM',\n    '04:15 PM',\n    '04:30 PM',\n    '04:45 PM',\n    '05:00 PM',\n    '05:15 PM',\n    '05:30 PM',\n    '05:45 PM',\n    '06:00 PM',\n    '06:15 PM',\n    '06:30 PM',\n    '06:45 PM',\n    '07:00 PM',\n    '07:15 PM',\n    '07:30 PM',\n    '07:45 PM'\n];\n\n\n\nconst useStyles = makeStyles((theme) => ({\n\n    table: {\n        width: \"100%\",\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        overflowY: \"auto\"\n    },\n\n    th: {\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        verticalAlign: \"middle\",\n        fontcolor: \"#555\",\n        fontWeight: \"400\",\n        fontSize: \"15px\",\n        paddingTop: \"5px\",\n        paddingBottom: \"5px\",\n        width: \"12%\", \n    },\n\n    td: {\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        verticalAlign: \"middle\",\n        height : \"50px\",\n        width: \"12%\", \n    }\n\n  }));\n\nconst WeekView = ({dates, dayClicked}) => {\n    const classes = useStyles();\n\n    return (\n        <React.Fragment>\n\n        <div style={{overflowY: \"scroll\" , height: \"60px\"}}>\n            <table className={classes.table}>\n                <thead>\n                    <tr>\n                        <th style={{width: \"7%\"}}>\n                        \n                        </th>\n                            {dates.map(date => (\n                                <th className={classes.th}>\n                                    <div style={{paddingBottom: \"5px\", color: \"#aaa\"}}>\n                                         {dateformat(date, 'ddd')}\n                                    </div>\n                                    <div>\n                                        <span style={{color: \"#aaa\"}}>\n                                            {dateformat(date, 'mmm ')}\n                                        </span> \n                                        <span  style={(dateformat(new Date(),'yyyy-mm-dd') === dateformat(date, 'yyyy-mm-dd')) ? { backgroundColor: \"#1a73e8\", color: \"#fff\", borderRadius: \"50%\",  padding: \"5px\",} : {color: \"#333\", fontWeight:\"500\"}}>\n                                             {dateformat(date, ' d')}\n                                        </span>\n                                       \n                                    </div>\n                                </th>\n                        ))}\n                    </tr>\n                </thead>\n             </table>\n\n        </div>\n\n            <div style={{overflowY: \"scroll\" , height: \"70vh\"}}>\n                <table className={classes.table}>   \n                    <tbody>\n                        {rows.map(row => (\n                            <tr>\n                                <td style={{width: \"7%\"}}>\n                                    {row}\n                                </td>\n                                {dates.map(day => (\n                                    <td className={classes.td}>\n                                        <WeekViewCell \n                                                dayClicked = {dayClicked}\n                                                key={`${dateformat(day,'yyyy-mm-dd')}-${row.replace(':','-')}`} \n                                                date={dateformat(day,'yyyy-mm-dd')} \n                                                time={row}/>\n                                    </td>\n                                ))}\n                            </tr>\n                        ))}            \n                    </tbody>\n                </table>\n            </div>                    \n      \n        </React.Fragment>\n\n\n    );\n}\n\nWeekView.propTypes = {\n    dates: PropTypes.arrayOf(PropTypes.any).isRequired,\n    dayClicked: PropTypes.func\n  };\n\n\nexport default WeekView;","import React, { useEffect, useRef, useState } from \"react\";\nimport BookService from \"./services/BookService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {\n  Backdrop,\n  Button,\n  Checkbox,\n  CircularProgress,\n  Divider,\n  FormControlLabel,\n  Grid,\n  InputAdornment,\n  InputLabel,\n  Link,\n  makeStyles,\n  MenuItem,\n  Select,\n  Switch,\n  TextField,\n  Tooltip,\n} from \"@material-ui/core\";\nimport GlobalState from \"../GlobalState\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport CreditCardIcon from \"@material-ui/icons/CreditCard\";\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\n\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Draggable from \"react-draggable\";\nimport Paper from \"@material-ui/core/Paper\";\n\nimport Alert from \"@material-ui/lab/Alert\";\n\nimport PropTypes from \"prop-types\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport Box from \"@material-ui/core/Box\";\n\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport { corporates } from \"./Corporates\";\nimport NumberFormat from \"react-number-format\";\n\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { validate } from \"email-validator\";\nimport DateRangeIcon from \"@material-ui/icons/DateRange\";\nimport { CalendarColors } from \"./calendar-admin/colors\";\n\nvar interval;\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    marginTop: theme.spacing(0),\n    marginBottom: theme.spacing(1),\n  },\n\n  refreshButton: {\n    marginLeft: theme.spacing(2),\n  },\n\n  checkIcon: {\n    color: \"green\",\n  },\n\n  closeIcon: {\n    color: \"red\",\n  },\n\n  RefLink: {\n    cursor: \"pointer\",\n  },\n\n  BookedLabel: {\n    backgroundColor: \"#606060\",\n    color: \"#fff\",\n    paddingRight: \"10px\",\n    paddingLeft: \"10px\",\n  },\n\n  PatientAttendedLabel: {\n    backgroundColor: \"#0066aa\",\n    color: \"#fff\",\n    paddingRight: \"15px\",\n    paddingLeft: \"10px\",\n  },\n\n  SampleTakenLabel: {\n    backgroundColor: \"#0066cc\",\n    color: \"#fff\",\n    paddingRight: \"40px\",\n    paddingLeft: \"10px\",\n  },\n\n  ReportSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"90px\",\n    paddingLeft: \"10px\",\n  },\n\n  ReportCertSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"68px\",\n    paddingLeft: \"10px\",\n  },\n\n  archiveButton: {},\n\n  smartMatchButton: {\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    marginRight: \"10px\",\n    // padding: \"10px\"\n  },\n\n  infoTitle: {\n    fontWeight: \"400\",\n  },\n\n  infoData: {\n    paddingLeft: \"10px\",\n    fontWeight: \"800\",\n  },\n\n  matchButton: {\n    marginTop: \"30px\",\n    marginBottom: \"20px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  resendButton: {\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  resendFilesButton: {\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n    backgroundColor: \"#3792ad\",\n    \"&:hover\": {\n      background: \"#2f798f\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  cancelButton: {\n    marginBottom: \"10px\",\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"90px\",\n    paddingRight: \"90px\",\n  },\n\n  CalendarIcon: {\n    color: theme.palette.primary.main,\n  },\n\n  DateTimeLabel: {\n    fontWeight: \"600\",\n    fontSize: \"1.2rem\",\n    color: theme.palette.primary.main,\n  },\n\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 5,\n    color: \"#fff\",\n  },\n\n  PriceLabelPaid:{\n    color: theme.palette.primary.main,\n    fontWeight: \"600\"\n  },\n\n  PriceLabelNotPaid:{\n    color: theme.palette.secondary.main,\n    fontWeight: \"600\"\n  },\n\n  BoxDisabled: {\n    width : \"100%\",\n    padding: \"10px\",\n    borderRadius: \"8px\",\n    border: \"1px solid\",\n    fontSize: \"1.2rem\",\n    fontWeight: \"500\",\n    textAlign: \"center\",\n    borderColor: \"#ddd\",\n    cursor: \"not-allowed\",\n    color: \"#ddd\",\n    transition: \"all 0.2s ease\",\n  },\n\n  BoxVC: {\n    width : \"100%\",\n    padding: \"10px\",\n    borderRadius: \"8px\",\n    border: \"1px solid\",\n    fontSize: \"1.2rem\",\n    fontWeight: \"500\",\n    textAlign: \"center\",\n    cursor: \"pointer\",\n    borderColor: CalendarColors.VC_COLOR,\n    color: CalendarColors.VC_COLOR,\n    transition: \"all 0.2s ease\",\n    \"&:hover\": {\n      backgroundColor: CalendarColors.VC_COLOR,\n      color: \"#fff\"\n    }\n  \n  },\n\n  BoxF2F: {\n    width : \"100%\",\n    padding: \"10px\",\n    borderRadius: \"8px\",\n    border: \"1px solid\",\n    fontSize: \"1.2rem\",\n    fontWeight: \"500\",\n    textAlign: \"center\",\n    cursor: \"pointer\",\n    borderColor: CalendarColors.F2F_COLOR,\n    color: CalendarColors.F2F_COLOR,\n    transition: \"all 0.2s ease\",\n    \"&:hover\": {\n      backgroundColor: CalendarColors.F2F_COLOR,\n      color: \"#fff\"\n    }\n  \n  },\n\n  BoxLaser: {\n    width : \"100%\",\n    padding: \"10px\",\n    borderRadius: \"8px\",\n    border: \"1px solid\",\n    fontSize: \"1.2rem\",\n    fontWeight: \"500\",\n    textAlign: \"center\",\n    cursor: \"pointer\",\n    borderColor: CalendarColors.LASER_COLOR,\n    color: CalendarColors.LASER_COLOR,\n    transition: \"all 0.2s ease\",\n    \"&:hover\": {\n      backgroundColor: CalendarColors.LASER_COLOR,\n      color: \"#fff\"\n    }\n  \n  },\n\n  BoxCataract: {\n    width : \"100%\",\n    padding: \"10px\",\n    borderRadius: \"8px\",\n    border: \"1px solid\",\n    fontSize: \"1.2rem\",\n    fontWeight: \"500\",\n    textAlign: \"center\",\n    cursor: \"pointer\",\n    borderColor: CalendarColors.CATARACT_COLOR,\n    color: CalendarColors.CATARACT_COLOR,\n    transition: \"all 0.2s ease\",\n    \"&:hover\": {\n      backgroundColor: CalendarColors.CATARACT_COLOR,\n      color: \"#fff\"\n    }\n  \n  },\n\n  BoxPostOP: {\n    width : \"100%\",\n    padding: \"10px\",\n    borderRadius: \"8px\",\n    border: \"1px solid\",\n    fontSize: \"1.2rem\",\n    fontWeight: \"500\",\n    textAlign: \"center\",\n    cursor: \"pointer\",\n    borderColor: CalendarColors.POSTOP_COLOR,\n    color: CalendarColors.POSTOP_COLOR,\n    transition: \"all 0.2s ease\",\n    \"&:hover\": {\n      backgroundColor: CalendarColors.POSTOP_COLOR,\n      color: \"#fff\"\n    }\n  \n  },\n\n  BoxOptometry: {\n    width : \"100%\",\n    padding: \"10px\",\n    borderRadius: \"8px\",\n    border: \"1px solid\",\n    fontSize: \"1.2rem\",\n    fontWeight: \"500\",\n    textAlign: \"center\",\n    cursor: \"pointer\",\n    borderColor: CalendarColors.OPOTOMETRY_COLOR,\n    color: CalendarColors.OPOTOMETRY_COLOR,\n    transition: \"all 0.2s ease\",\n    \"&:hover\": {\n      backgroundColor: CalendarColors.OPOTOMETRY_COLOR,\n      color: \"#fff\"\n    }\n  \n  },\n\n\n\n\n\n\n\n\n\n\n  BoxGynae: {\n    width : \"100%\",\n    padding: \"10px\",\n    borderRadius: \"8px\",\n    border: \"1px solid\",\n    fontSize: \"1.2rem\",\n    fontWeight: \"500\",\n    textAlign: \"center\",\n    cursor: \"pointer\",\n    borderColor: CalendarColors.GYNAE_COLOR,\n    color: CalendarColors.GYNAE_COLOR,\n    transition: \"all 0.2s ease\",\n    \"&:hover\": {\n      backgroundColor: CalendarColors.GYNAE_COLOR,\n      color: \"#fff\"\n    }\n  \n  },\n\n  BoxGP: {\n    width : \"100%\",\n    padding: \"10px\",\n    borderRadius: \"8px\",\n    border: \"1px solid\",\n    fontSize: \"1.2rem\",\n    fontWeight: \"500\",\n    textAlign: \"center\",\n    cursor: \"pointer\",\n    borderColor: CalendarColors.GP_COLOR,\n    color: CalendarColors.GP_COLOR,\n    transition: \"all 0.2s ease\",\n    \"&:hover\": {\n      backgroundColor: CalendarColors.GP_COLOR,\n      color: \"#fff\"\n    }\n  },\n\n  BoxSTD: {\n    width : \"100%\",\n    padding: \"10px\",\n    borderRadius: \"8px\",\n    border: \"1px solid\",\n    fontSize: \"1.2rem\",\n    fontWeight: \"500\",\n    textAlign: \"center\",\n    cursor: \"pointer\",\n    borderColor: CalendarColors.STD_COLOR,\n    color: CalendarColors.STD_COLOR,\n    transition: \"all 0.2s ease\",\n    \"&:hover\": {\n      backgroundColor: CalendarColors.STD_COLOR,\n      color: \"#fff\"\n    }\n  },\n\n\n\n}));\n\nconst Packages = [\n  { packageName: \"Consultation with Consultant Gynaecologist\" },\n  { packageName: `Coil Fitting/Coil Removal` },\n  { packageName: `Well Woman Check` },\n  { packageName: `Sexual Health Screening` },\n  { packageName: `Pre-pregnancy/Fertility check` },\n  { packageName: `Gynaecological Ultrasound` },\n  { packageName: `HPV Vaccination` },\n  { packageName: `Cervical / Pap Smear` },\n  { packageName: `HPV Treatment / Wart Cryo-Therapy` },\n];\n\nfunction NumberFormatCustom(props) {\n  const { inputRef, onChange, ...other } = props;\n\n  return (\n    <NumberFormat\n      {...other}\n      getInputRef={inputRef}\n      onValueChange={(values) => {\n        onChange({\n          target: {\n            name: props.name,\n            value: values.value,\n          },\n        });\n      }}\n      thousandSeparator\n      isNumericString\n      prefix=\"\"\n    />\n  );\n}\n\nNumberFormatCustom.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nconst BorderLinearProgress = withStyles((theme) => ({\n  root: {\n    height: 10,\n    borderRadius: 5,\n  },\n  colorPrimary: {\n    backgroundColor: \"#cedbce\", //theme.palette.grey[theme.palette.type === 'light' ? 200 : 700],\n  },\n  bar: {\n    borderRadius: 5,\n    backgroundColor: \"#2f942e\",\n  },\n}))(LinearProgress);\nfunction LinearProgressWithLabel(props) {\n  return (\n    <Box display=\"flex\" alignItems=\"center\">\n      <Box width=\"100%\" mr={1}>\n        <BorderLinearProgress variant=\"determinate\" {...props} />\n      </Box>\n      <Box minWidth={35}>\n        <Typography\n          style={{ fontWeight: \"800\", color: \"#5e855e\" }}\n          variant=\"body2\"\n          color=\"textSecondary\"\n        >{`${Math.round(props.value)}%`}</Typography>\n      </Box>\n    </Box>\n  );\n}\n\nLinearProgressWithLabel.propTypes = {\n  /**\n   * The value of the progress indicator for the determinate and buffer variants.\n   * Value between 0 and 100.\n   */\n  value: PropTypes.number.isRequired,\n};\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable\n      handle=\"#draggable-dialog-title\"\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\n    >\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nexport default function NewBookingDialog(props) {\n  const classes = useStyles();\n\n  const [state, setState] = React.useContext(GlobalState);\n\n  const handleClose = () => {    \n    props.handleClose();\n  };\n\n\n  const timeDisabled = () =>\n  {\n    return props.time.indexOf(':15') > 0 || props.time.indexOf(':45') > 0 || props.time.indexOf('09') >= 0 \n  }\n\n  const clinicClicked = (clinic) =>\n  {\n    props.clinicClicked(clinic)\n  }\n\n  return (\n    <React.Fragment>\n      {props.date && props.time && (\n        <React.Fragment>\n          <Dialog\n            maxWidth=\"xs\"\n            open={props.open}\n            onClose={handleClose}\n            PaperComponent={PaperComponent}\n            aria-labelledby=\"form-dialog-title\"\n          >\n            <DialogTitle id=\"draggable-dialog-title\">\n              <Grid\n                container\n                spacing={1}\n                direction=\"row\"\n                justify=\"center\"\n                alignItems=\"center\"\n              >\n                <Grid item>\n                  <AddIcon style={{ color: \"#f50057\", fontSize: \"3rem\" }} />\n                </Grid>\n\n                <Grid item>\n                  <div\n                    style={{\n                      color: \"#f50057\",\n                      paddingBottom: \"10px\",\n                      fontWeight: \"800\",\n                    }}\n                  >\n                    {\" \"}\n                    ADD New Booking{\" \"}\n                  </div>\n                </Grid>\n              </Grid>\n\n              <Divider />\n            </DialogTitle>\n            <DialogContent>\n              <div\n                style={{\n                  height: \"480px\",\n                }}\n              >\n                <Grid\n                  container\n                  direction=\"row\"\n                  justify=\"stretch\"\n                  spacing={2}\n                  alignItems=\"center\"\n                >\n                  <Grid item xs={12}>\n                    <Grid\n                      container\n                      direction=\"row\"\n                      justify=\"center\"\n                      alignItems=\"center\"\n                      spacing={0}\n                    >\n                      <Grid item>\n                        <DateRangeIcon className={classes.CalendarIcon} />\n                      </Grid>\n                      <Grid item>\n                        <span className={classes.DateTimeLabel}>\n                          {props.date} , {props.time}\n                        </span>\n                      </Grid>\n                    </Grid>\n                  </Grid>\n\n\n                  <Grid item xs={12} style={{marginTop:\"0px\"}}>\n                    <div className={classes.BoxVC} onClick={() => clinicClicked(\"Virtual Consultation\")}>\n                      Virtual Consultation\n                    </div>\n                  </Grid>\n                  <Grid item xs={12}>\n                    <div className={classes.BoxF2F} onClick={() => clinicClicked(\"F2F Clinic\")}>\n                      F2F Clinic\n                    </div>\n                  </Grid>\n                  <Grid item xs={12}>\n                    <div className={classes.BoxLaser} onClick={() => clinicClicked(\"Laser Theatre\")}>\n                      Laser Theatre\n                    </div>\n                  </Grid>\n                  <Grid item xs={12}>\n                    <div className={classes.BoxCataract} onClick={() => clinicClicked(\"Lens Theatre\")}>\n                      Lens Theatre\n                    </div>\n                  </Grid>\n                  <Grid item xs={12}>\n                    <div className={classes.BoxPostOP} onClick={() => clinicClicked(\"Post OP\")}>\n                      Post OP\n                    </div>\n                  </Grid>\n                  <Grid item xs={12}>\n                    <div className={classes.BoxOptometry} onClick={() => clinicClicked(\"Optometry\")}>\n                      Optometry\n                    </div>\n                  </Grid>\n\n\n                </Grid>\n\n                <div\n                  style={{\n                    position: \"absolute\",\n                    bottom: \"0px\",\n                    right: \"5px\",\n                  }}\n                >\n                  <Grid\n                    container\n                    direction=\"row\"\n                    justify=\"flex-end\"\n                    alignItems=\"center\"\n                    spacing={1}\n                  >\n                    <Grid item>\n                      <Button\n                        onClick={handleClose}\n                        style={{ width: \"100px\" }}\n                      >\n                        close\n                      </Button>\n                    </Grid>\n                   \n                  </Grid>\n                </div>\n              </div>\n\n            </DialogContent>\n          </Dialog>\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n}\n","import React, { useEffect, useRef, useState } from \"react\";\nimport BookService from \"./services/BookService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {\n    Backdrop,\n    Button,\n    Checkbox,\n    CircularProgress,\n    DialogActions,\n    Divider,\n    FormControlLabel,\n    Grid,\n    InputAdornment,\n    InputLabel,\n    Link,\n    makeStyles,\n    MenuItem,\n    Select,\n    Switch,\n    TextField,\n    Tooltip,\n} from \"@material-ui/core\";\nimport GlobalState from \"../GlobalState\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport CreditCardIcon from \"@material-ui/icons/CreditCard\";\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\n\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Draggable from \"react-draggable\";\nimport Paper from \"@material-ui/core/Paper\";\n\nimport Alert from \"@material-ui/lab/Alert\";\n\nimport PropTypes from \"prop-types\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport Box from \"@material-ui/core/Box\";\n\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport { corporates } from \"./Corporates\";\nimport NumberFormat from \"react-number-format\";\n\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { validate } from \"email-validator\";\nimport DateRangeIcon from \"@material-ui/icons/DateRange\";\nimport { CalendarColors } from \"./calendar-admin/colors\";\nimport DateField from \"./DateField\";\n\nimport Autocomplete, { createFilterOptions } from '@material-ui/lab/Autocomplete';\nimport PatientService from \"./services/PatientService\";\n\nimport {matchSorter} from 'match-sorter'\nimport PatientDialog from \"./PatientDialog\";\n\n\nconst filter = createFilterOptions();\n\nvar interval;\n\nconst useStyles = makeStyles((theme) => ({\n    title: {\n        marginTop: theme.spacing(0),\n        marginBottom: theme.spacing(1),\n    },\n\n    refreshButton: {\n        marginLeft: theme.spacing(2),\n    },\n\n    checkIcon: {\n        color: \"green\",\n    },\n\n    closeIcon: {\n        color: \"red\",\n    },\n\n    RefLink: {\n        cursor: \"pointer\",\n    },\n\n    BookedLabel: {\n        backgroundColor: \"#606060\",\n        color: \"#fff\",\n        paddingRight: \"10px\",\n        paddingLeft: \"10px\",\n    },\n\n    PatientAttendedLabel: {\n        backgroundColor: \"#0066aa\",\n        color: \"#fff\",\n        paddingRight: \"15px\",\n        paddingLeft: \"10px\",\n    },\n\n    SampleTakenLabel: {\n        backgroundColor: \"#0066cc\",\n        color: \"#fff\",\n        paddingRight: \"40px\",\n        paddingLeft: \"10px\",\n    },\n\n    ReportSentLabel: {\n        backgroundColor: \"#009900\",\n        color: \"#fff\",\n        paddingRight: \"90px\",\n        paddingLeft: \"10px\",\n    },\n\n    ReportCertSentLabel: {\n        backgroundColor: \"#009900\",\n        color: \"#fff\",\n        paddingRight: \"68px\",\n        paddingLeft: \"10px\",\n    },\n\n    archiveButton: {},\n\n    smartMatchButton: {\n        backgroundColor: \"#2f942e\",\n        \"&:hover\": {\n            background: \"green\",\n            color: \"#fff\",\n        },\n        textDecoration: \"none !important\",\n        marginRight: \"10px\",\n        // padding: \"10px\"\n    },\n\n    infoTitle: {\n        fontWeight: \"400\",\n    },\n\n    infoData: {\n        paddingLeft: \"10px\",\n        fontWeight: \"800\",\n    },\n\n    matchButton: {\n        marginTop: \"30px\",\n        marginBottom: \"20px\",\n        backgroundColor: \"#2f942e\",\n        \"&:hover\": {\n            background: \"green\",\n            color: \"#fff\",\n        },\n        textDecoration: \"none !important\",\n        padding: \"10px\",\n        paddingLeft: \"50px\",\n        paddingRight: \"50px\",\n    },\n\n    resendButton: {\n        marginTop: \"5px\",\n        marginBottom: \"5px\",\n        backgroundColor: \"#2f942e\",\n        \"&:hover\": {\n            background: \"green\",\n            color: \"#fff\",\n        },\n        textDecoration: \"none !important\",\n        padding: \"10px\",\n        paddingLeft: \"50px\",\n        paddingRight: \"50px\",\n    },\n\n    resendFilesButton: {\n        marginTop: \"5px\",\n        marginBottom: \"5px\",\n        backgroundColor: \"#3792ad\",\n        \"&:hover\": {\n            background: \"#2f798f\",\n            color: \"#fff\",\n        },\n        textDecoration: \"none !important\",\n        padding: \"10px\",\n        paddingLeft: \"50px\",\n        paddingRight: \"50px\",\n    },\n\n    cancelButton: {\n        marginBottom: \"10px\",\n        textDecoration: \"none !important\",\n        padding: \"10px\",\n        paddingLeft: \"90px\",\n        paddingRight: \"90px\",\n    },\n\n    CalendarIcon: {\n        color: theme.palette.primary.main,\n    },\n\n    DateTimeLabel: {\n        fontWeight: \"600\",\n        fontSize: \"1.2rem\",\n        color: theme.palette.primary.main,\n    },\n\n    backdrop: {\n        zIndex: theme.zIndex.drawer + 5,\n        color: \"#fff\",\n    },\n\n    PriceLabelPaid: {\n        color: theme.palette.primary.main,\n        fontWeight: \"600\"\n    },\n\n    PriceLabelNotPaid: {\n        color: theme.palette.secondary.main,\n        fontWeight: \"600\"\n    },\n\n\n}));\n\nconst Packages = [\n    { packageName: \"Consultation with Consultant Gynaecologist\" },\n    { packageName: `Coil Fitting/Coil Removal` },\n    { packageName: `Well Woman Check` },\n    { packageName: `Sexual Health Screening` },\n    { packageName: `Pre-pregnancy/Fertility check` },\n    { packageName: `Gynaecological Ultrasound` },\n    { packageName: `HPV Vaccination` },\n    { packageName: `Cervical / Pap Smear` },\n    { packageName: `HPV Treatment / Wart Cryo-Therapy` },\n];\n\nfunction NumberFormatCustom(props) {\n    const { inputRef, onChange, ...other } = props;\n\n    return (\n        <NumberFormat\n            {...other}\n            getInputRef={inputRef}\n            onValueChange={(values) => {\n                onChange({\n                    target: {\n                        name: props.name,\n                        value: values.value,\n                    },\n                });\n            }}\n            thousandSeparator\n            isNumericString\n            prefix=\"\"\n        />\n    );\n}\n\nNumberFormatCustom.propTypes = {\n    inputRef: PropTypes.func.isRequired,\n    name: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired,\n};\n\nconst BorderLinearProgress = withStyles((theme) => ({\n    root: {\n        height: 10,\n        borderRadius: 5,\n    },\n    colorPrimary: {\n        backgroundColor: \"#cedbce\", //theme.palette.grey[theme.palette.type === 'light' ? 200 : 700],\n    },\n    bar: {\n        borderRadius: 5,\n        backgroundColor: \"#2f942e\",\n    },\n}))(LinearProgress);\nfunction LinearProgressWithLabel(props) {\n    return (\n        <Box display=\"flex\" alignItems=\"center\">\n            <Box width=\"100%\" mr={1}>\n                <BorderLinearProgress variant=\"determinate\" {...props} />\n            </Box>\n            <Box minWidth={35}>\n                <Typography\n                    style={{ fontWeight: \"800\", color: \"#5e855e\" }}\n                    variant=\"body2\"\n                    color=\"textSecondary\"\n                >{`${Math.round(props.value)}%`}</Typography>\n            </Box>\n        </Box>\n    );\n}\n\nLinearProgressWithLabel.propTypes = {\n    /**\n     * The value of the progress indicator for the determinate and buffer variants.\n     * Value between 0 and 100.\n     */\n    value: PropTypes.number.isRequired,\n};\n\nfunction PaperComponent(props) {\n    return (\n        <Draggable\n            handle=\"#draggable-dialog-title\"\n            cancel={'[class*=\"MuiDialogContent-root\"]'}\n        >\n            <Paper {...props} />\n        </Draggable>\n    );\n}\n\nexport default function NewOVBookingDialog(props) {\n    const classes = useStyles();\n\n    const [state, setState] = React.useContext(GlobalState);\n    const [saving, setSaving] = useState(false);\n\n    const [fullname, setFullname] = React.useState(\"\");\n    const [fullnameError, setFullnameError] = React.useState(false);\n\n    const [patientRecord, setPatientRecord] = React.useState(null)\n    const [patientList, setPatientList] = React.useState([])\n\n\n    const [phone, setPhone] = React.useState(\"\");\n    const [email, setEmail] = React.useState(\"\");\n    const [notes, setNotes] = React.useState(\"\");\n\n    const [patientID, setPatientID] = React.useState(\"\");\n    const [prescriptionLeft, setPrescriptionLeft] = React.useState(\"\");\n    const [prescriptionRight, setPrescriptionRight] = React.useState(\"\");\n\n\n    const [birthDate, setBirthDate] = React.useState(\"\");\n    const [birthDateError, setBirthDateError] = React.useState(false);\n\n\n    const birthDateChanged = (dateStr) => {\n        setBirthDate(dateStr);\n    }\n\n\n\n\n    const fullnameChanged = (event) => {\n        setFullname(event.target.value);\n        setFullnameError(false);\n    };\n\n    const phoneChanged = (event) => {\n        setPhone(event.target.value);\n    };\n\n    const emailChanged = (event) => {\n        setEmail(event.target.value);\n    };\n\n\n    const notesChanged = (event) => {\n        setNotes(event.target.value);\n    };\n\n    const patientIDChanged = (event) => {\n        setPatientID(event.target.value);\n    };\n\n    const prescriptionLeftChanged = (event) => {\n        setPrescriptionLeft(event.target.value);\n    };\n\n    const prescriptionRightChanged = (event) => {\n        setPrescriptionRight(event.target.value);\n    };\n\n    useEffect(() => {\n        if (props.open)\n        {\n            loadPatiens()\n        }\n\n    }, [props.open, state.patientDialogDataChanged])\n\n    const loadPatiens = async() =>\n    {\n        try{\n            const res = await PatientService.getAllPatients()\n            setPatientList(res.data)\n        }catch(err)\n        {\n            console.error(err)\n        }\n    }\n\n    const handleClose = () => {\n        if (saving) return;\n\n        setFullname(\"\");\n        setFullnameError(false);\n        setBirthDateError(false)\n        setPhone(\"\");\n        setEmail(\"\");\n        setNotes(\"\");\n        setBirthDate(\"\")\n        setPatientID(\"\")\n        setPrescriptionLeft(\"\")\n        setPrescriptionRight(\"\")\n        setPatientRecord(null)\n\n        props.handleClose();\n        setSaving(false);\n    };\n\n    const validateBooking = () => {\n        let error = false;\n        if (!fullname || fullname.trim().length < 1) {\n            setFullnameError(true);\n            error = true;\n        }\n\n        if (birthDate && birthDate.length >= 1 && birthDate.length < 10) {\n            setBirthDateError(true);\n            error = true;\n        }\n\n        return !error;\n    };\n\n    const saveClicked = async () => {\n        if (!validateBooking()) {\n            return;\n        }\n\n        setSaving(true);\n\n        try {\n            await BookService.addNewBooking({\n                bookingDate: props.date,\n                bookingTime: props.time,\n                fullname: fullname,\n                phone: phone,\n                email: email,\n                birthDate: birthDate,\n                notes: notes,\n                clinic: props.clinic,\n                patientID: patientID,\n                prescriptionLeft: prescriptionLeft,\n                prescriptionRight: prescriptionRight\n            });\n            setSaving(false);\n            setState((state) => ({\n                ...state,\n                bookingDialogDataChanged: !state.bookingDialogDataChanged\n                    ? true\n                    : false,\n            }));\n            handleClose();\n        } catch (err) {\n            console.error(err);\n            setSaving(false);\n        }\n    };\n\n    const getColorFromClinic = (clinic) => {\n        switch (clinic) {\n            case \"Virtual Consultation\":\n                return CalendarColors.VC_COLOR\n            case \"F2F Clinic\":\n                return CalendarColors.F2F_COLOR\n            case \"Laser Theatre\":\n                return CalendarColors.LASER_COLOR\n            case \"Lens Theatre\":\n                return CalendarColors.CATARACT_COLOR\n            case \"Post OP\":\n                return CalendarColors.POSTOP_COLOR\n            case \"Optometry\":\n                return CalendarColors.OPOTOMETRY_COLOR\n\n            default:\n                return \"#777\"\n\n        }\n    }\n\n    const filterOptions = (options, { inputValue }) => {\n\n        if (inputValue && inputValue.length >= 1)\n        {\n        //   setNoOptionsText(\"\")\n          return matchSorter(options, inputValue, {keys: ['fullname']});\n        }\n        else\n        {\n        //   setNoOptionsText(\"Please enter at least 3 characters\")\n          return matchSorter(options, '$$$$', {keys: ['fullname']});\n        }\n      }\n\n      const [patientDialogOpen, setPatientDialogOpen] = React.useState(false)\n      const handleClosePatientDialog = () =>\n      {\n          setPatientDialogOpen(false)\n          setNewName('')\n          setNewSurname('')\n      }\n\n      const [newName, setNewName] = React.useState('')\n      const [newSurname, setNewSurname] = React.useState('')\n\n      useEffect ( () => {\n          if (patientRecord)\n          {\n              setFullname(patientRecord.fullname || '')\n              setPatientID(patientRecord.patientID || '')\n              setEmail(patientRecord.email || '')\n              setPhone(patientRecord.mobileTel || patientRecord.homeTel || '')\n              setBirthDate(patientRecord.birthDate || null)\n          }else\n          {\n            setFullname('')\n            setPatientID('')\n            setEmail('')\n            setPhone('')\n            setBirthDate(null)\n        }\n\n      }, [patientRecord])\n    \n\n    return (\n        <React.Fragment>\n            {props.date && props.time && (\n                <React.Fragment>\n                    <Dialog\n                        maxWidth=\"md\"\n                        open={props.open}\n                        onClose={handleClose}\n                        PaperComponent={PaperComponent}\n                        aria-labelledby=\"form-dialog-title\"\n                    >\n                        <DialogTitle id=\"draggable-dialog-title\">\n\n                            <div style={{ position: \"absolute\", left: \"0px\", top: \"0px\", width: \"100%\", backgroundColor: getColorFromClinic(props.clinic), color: \"#fff\", padding: \"15px 5px\", textAlign: \"center\", fontSize: \"1.5rem\" }}>\n                                <Grid container direction=\"row\"\n                                    justify=\"center\"\n                                    alignItems=\"center\"\n                                    spacing={1}\n                                >\n                                    <Grid item>\n                                        <AddIcon style={{ fontSize: \"2.5rem\" }} />\n                                    </Grid>\n                                    <Grid item style={{ marginTop: \"-12px\" }}>\n                                        {props.clinic}\n\n                                    </Grid>\n                                </Grid>\n                            </div>\n\n\n                        </DialogTitle>\n                        <DialogContent>\n                            <div\n                                style={{\n                                    paddingTop: \"50px\",\n                                    paddingBottom: \"20px\"\n                                }}\n                            >\n                                <Grid\n                                    container\n                                    direction=\"row\"\n                                    justify=\"stretch\"\n                                    spacing={2}\n                                    alignItems=\"center\"\n                                >\n                                    <Grid item xs={12} style={{ marginTop: \"10px\" }}>\n                                        <Grid\n                                            container\n                                            direction=\"row\"\n                                            justify=\"center\"\n                                            alignItems=\"center\"\n                                            spacing={1}\n                                        >\n                                            <Grid item>\n                                                <DateRangeIcon className={classes.CalendarIcon} />\n                                            </Grid>\n                                            <Grid item>\n                                                <span className={classes.DateTimeLabel}>\n                                                    {props.date} , {props.time}\n                                                </span>\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n\n                                    <Grid item xs={12} md={6}>\n                                        {/* <TextField\n                                            fullWidth\n                                            autoFocus\n                                            error={fullnameError}\n                                            label=\"Full Name\"\n                                            value={fullname}\n                                            required\n                                            onChange={fullnameChanged}\n                                            name=\"fullname\"\n                                            id=\"fullname-id\"\n                                            autoComplete=\"none\"\n                                        /> */}\n\n                                        <Autocomplete\n                                            fullWidth\n                                            autoComplete=\"none\"\n                                            value={patientRecord}\n                                            onChange={(event, newValue) => {\n                                                if (typeof newValue === 'string') {\n                                                    // timeout to avoid instant validation of the dialog's form.\n                                                    setTimeout(() => {\n                                                        const _nameArray = newValue.split(\" \")\n                                                        console.log(_nameArray)\n                                                        if (_nameArray.length >= 1)\n                                                        {\n                                                            setNewName(_nameArray[0])\n                                                        }\n                                                        if (_nameArray.length >=2 )\n                                                        {\n                                                            setNewSurname(_nameArray[1])\n                                                        }\n                                                        setPatientDialogOpen(true)\n                                                        // toggleOpen(true);\n                                                        // setDialogValue({\n                                                        //     title: newValue,\n                                                        //     year: '',\n                                                        // });\n                                                    });\n                                                } else if (newValue && newValue.inputValue) {\n                                                    const _nameArray = newValue.inputValue.split(\" \")\n                                                    console.log(_nameArray)\n\n                                                    if (_nameArray.length >= 1)\n                                                    {\n                                                        setNewName(_nameArray[0])\n                                                    }\n                                                    if (_nameArray.length >= 2 )\n                                                    {\n                                                        setNewSurname(_nameArray[1])\n                                                    }\n\n                                                    setPatientDialogOpen(true)\n                                                    // toggleOpen(true);\n                                                    // setDialogValue({\n                                                    //     title: newValue.inputValue,\n                                                    //     year: '',\n                                                    // });\n                                                } else {\n                                                    setPatientRecord(newValue);\n                                                }\n                                            }}\n                                            filterOptions={(options, params) => {\n                                                // const filtered = filter(options, params);\n                                                const filtered = filterOptions(options,params)\n\n                                                if (params.inputValue !== '') {\n                                                    filtered.push({\n                                                        inputValue: params.inputValue,\n                                                        fullname: `Add \"${params.inputValue}\"`,\n                                                    });\n                                                }\n\n                                                return filtered;\n                                            }}\n                                            id=\"fullname\"\n                                            options={patientList}\n                                            getOptionLabel={(option) => {\n                                                // e.g value selected with enter, right from the input\n                                                if (typeof option === 'string') {\n                                                    return option;\n                                                }\n                                                if (option.inputValue) {\n                                                    return option.inputValue;\n                                                }\n                                                return option.fullname;\n                                            }}\n                                            selectOnFocus\n                                            clearOnBlur\n                                            handleHomeEndKeys\n                                            renderOption={(option) => option.fullname}\n                                            // style={{ width: 300 }}\n                                            freeSolo\n                                            renderInput={(params) => (\n                                                <TextField {...params} onBlur={(event) => {setPatientRecord({...patientRecord, fullname:event.target.value})}} autoComplete=\"none\" autoFocus error={fullnameError} fullWidth label=\"Full Name\" required />\n                                            )}\n                                        />\n                                    </Grid>\n\n                                    <Grid item xs={12} md={6}>\n                                        <TextField\n                                            fullWidth\n                                            label=\"Patient ID\"\n                                            value={patientID}\n                                            onChange={patientIDChanged}\n                                            name=\"patientid\"\n                                            id=\"patientid-id\"\n                                            autoComplete=\"none\"\n                                        />\n                                    </Grid>\n\n\n                                    <Grid item xs={12} md={6}>\n                                        <TextField\n                                            fullWidth\n                                            label=\"Telephone\"\n                                            value={phone}\n                                            onChange={phoneChanged}\n                                            name=\"phone\"\n                                            id=\"phone-id\"\n                                            autoComplete=\"none\"\n                                        />\n                                    </Grid>\n\n                                    <Grid item xs={12} md={6}>\n                                        <TextField\n                                            fullWidth\n                                            label=\"Email\"\n                                            value={email}\n                                            onChange={emailChanged}\n                                            name=\"email\"\n                                            id=\"email-id\"\n                                            autoComplete=\"none\"\n                                        />\n                                    </Grid>\n\n                                    <Grid item xs={12}>\n                                        <DateField\n                                            error={birthDateError}\n                                            title=\"Date of Birth\"\n                                            value={birthDate}\n                                            dateChanged={birthDateChanged}\n                                        >\n\n                                        </DateField>\n                                    </Grid>\n\n                                    <Grid item xs={12} md={6}>\n                                        <TextField\n                                            fullWidth\n                                            label=\"Prescription (LEFT)\"\n                                            value={prescriptionLeft}\n                                            onChange={prescriptionLeftChanged}\n                                            name=\"pleft\"\n                                            id=\"pleft-id\"\n                                            autoComplete=\"none\"\n                                        />\n                                    </Grid>\n\n                                    <Grid item xs={12} md={6}>\n                                        <TextField\n                                            fullWidth\n                                            label=\"Prescription (RIGHT)\"\n                                            value={prescriptionRight}\n                                            onChange={prescriptionRightChanged}\n                                            name=\"pright\"\n                                            id=\"pright-id\"\n                                            autoComplete=\"none\"\n                                        />\n                                    </Grid>\n\n                                    <Grid item xs={12}>\n                                        <TextField\n                                            fullWidth\n                                            label=\"Notes\"\n                                            value={notes}\n                                            onChange={notesChanged}\n                                            name=\"notes\"\n                                            id=\"notes-id\"\n                                            autoComplete=\"none\"\n                                        />\n                                    </Grid>\n                                </Grid>\n\n                                <div\n                                    style={{\n                                        position: \"absolute\",\n                                        bottom: \"20px\",\n                                        right: \"20px\",\n                                    }}\n                                >\n                                </div>\n                            </div>\n\n                            <Backdrop className={classes.backdrop} open={saving}>\n                                <CircularProgress color=\"inherit\" />\n                            </Backdrop>\n                        </DialogContent>\n\n                        <DialogActions>\n                            <Grid\n                                container\n                                direction=\"row\"\n                                justify=\"flex-end\"\n                                alignItems=\"center\"\n                                spacing={1}\n                            >\n                                <Grid item>\n                                    <Button\n                                        onClick={handleClose}\n                                        style={{ width: \"100px\" }}\n                                        disabled={saving}\n                                    >\n                                        back\n                      </Button>\n                                </Grid>\n                                <Grid item>\n                                    <Button\n                                        onClick={saveClicked}\n                                        variant=\"contained\"\n                                        color=\"secondary\"\n                                        // style={{ width: \"100px\" }}\n                                        disabled={saving}\n                                    >\n                                        Book Appointment\n                      </Button>\n                                </Grid>\n                            </Grid>\n\n                        </DialogActions>\n\n\n                        <PatientDialog\n                            patient={null}\n                            open={patientDialogOpen}\n                            handleClose={handleClosePatientDialog}\n                            title={\"Add New Patient\"}\n                            saveButtonText={\"Save\"}\n                            name={newName}\n                            surname={newSurname}\n                        />\n\n\n                    </Dialog>\n                </React.Fragment>\n            )}\n        </React.Fragment>\n    );\n}\n","import React, { useEffect, useRef, useState } from \"react\";\nimport BookService from \"./services/BookService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {\n    Backdrop,\n    Button,\n    Checkbox,\n    CircularProgress,\n    DialogActions,\n    Divider,\n    FormControlLabel,\n    Grid,\n    InputAdornment,\n    InputLabel,\n    Link,\n    makeStyles,\n    MenuItem,\n    Select,\n    TextField,\n    Tooltip,\n} from \"@material-ui/core\";\nimport GlobalState from \"./../GlobalState\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport CreditCardIcon from \"@material-ui/icons/CreditCard\";\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\n\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Draggable from \"react-draggable\";\nimport Paper from \"@material-ui/core/Paper\";\n\nimport Alert from \"@material-ui/lab/Alert\";\n\nimport PropTypes from \"prop-types\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport Box from \"@material-ui/core/Box\";\n\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport { corporates } from \"./Corporates\";\nimport NumberFormat from \"react-number-format\";\n\nimport AccessAlarmsIcon from '@material-ui/icons/AccessAlarms';\nimport DateField from \"./DateField\";\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    title: {\n        marginTop: theme.spacing(0),\n        marginBottom: theme.spacing(1),\n    },\n\n    refreshButton: {\n        marginLeft: theme.spacing(2),\n    },\n\n    checkIcon: {\n        color: \"green\",\n    },\n\n    closeIcon: {\n        color: \"red\",\n    },\n\n    RefLink: {\n        cursor: \"pointer\",\n    },\n\n    BookedLabel: {\n        backgroundColor: \"#606060\",\n        color: \"#fff\",\n        paddingRight: \"10px\",\n        paddingLeft: \"10px\",\n    },\n\n    PatientAttendedLabel: {\n        backgroundColor: \"#0066aa\",\n        color: \"#fff\",\n        paddingRight: \"15px\",\n        paddingLeft: \"10px\",\n    },\n\n    SampleTakenLabel: {\n        backgroundColor: \"#0066cc\",\n        color: \"#fff\",\n        paddingRight: \"40px\",\n        paddingLeft: \"10px\",\n    },\n\n    ReportSentLabel: {\n        backgroundColor: \"#009900\",\n        color: \"#fff\",\n        paddingRight: \"90px\",\n        paddingLeft: \"10px\",\n    },\n\n    ReportCertSentLabel: {\n        backgroundColor: \"#009900\",\n        color: \"#fff\",\n        paddingRight: \"68px\",\n        paddingLeft: \"10px\",\n    },\n\n    archiveButton: {},\n\n    smartMatchButton: {\n        backgroundColor: \"#2f942e\",\n        \"&:hover\": {\n            background: \"green\",\n            color: \"#fff\",\n        },\n        textDecoration: \"none !important\",\n        marginRight: \"10px\",\n        // padding: \"10px\"\n    },\n\n    infoTitle: {\n        fontWeight: \"400\",\n    },\n\n    infoData: {\n        paddingLeft: \"10px\",\n        fontWeight: \"800\",\n    },\n\n    matchButton: {\n        marginTop: \"30px\",\n        marginBottom: \"20px\",\n        backgroundColor: \"#2f942e\",\n        \"&:hover\": {\n            background: \"green\",\n            color: \"#fff\",\n        },\n        textDecoration: \"none !important\",\n        padding: \"10px\",\n        paddingLeft: \"50px\",\n        paddingRight: \"50px\",\n    },\n\n    resendButton: {\n        marginTop: \"5px\",\n        marginBottom: \"5px\",\n        backgroundColor: \"#2f942e\",\n        \"&:hover\": {\n            background: \"green\",\n            color: \"#fff\",\n        },\n        textDecoration: \"none !important\",\n        padding: \"10px\",\n        paddingLeft: \"50px\",\n        paddingRight: \"50px\",\n    },\n\n    resendFilesButton: {\n        marginTop: \"5px\",\n        marginBottom: \"5px\",\n        backgroundColor: \"#3792ad\",\n        \"&:hover\": {\n            background: \"#2f798f\",\n            color: \"#fff\",\n        },\n        textDecoration: \"none !important\",\n        padding: \"10px\",\n        paddingLeft: \"50px\",\n        paddingRight: \"50px\",\n    },\n\n    cancelButton: {\n        marginBottom: \"10px\",\n        textDecoration: \"none !important\",\n        padding: \"10px\",\n        paddingLeft: \"90px\",\n        paddingRight: \"90px\",\n    },\n\n    backdrop: {\n        zIndex: theme.zIndex.drawer + 5,\n        color: \"#fff\",\n    },\n\n    timeControl: {\n        marginTop: \"20px\",\n    }\n}));\n\n\nfunction PaperComponent(props) {\n    return (\n        <Draggable\n            handle=\"#draggable-dialog-title\"\n            cancel={'[class*=\"MuiDialogContent-root\"]'}\n        >\n            <Paper {...props} />\n        </Draggable>\n    );\n}\n\nconst times = [\n    '08:00 AM',\n    '08:15 AM',\n    '08:30 AM', \n    '08:45 AM',\n    '09:00 AM',\n    '09:15 AM', \n    '09:30 AM',\n    '09:45 AM',\n    '10:00 AM',\n    '10:15 AM',\n    '10:30 AM',\n    '10:45 AM',\n    '11:00 AM',\n    '11:15 AM',\n    '11:30 AM',\n    '11:45 AM',\n    '12:00 PM',\n    '12:15 PM',\n    '12:30 PM',\n    '12:45 PM',\n    '01:00 PM',\n    '01:15 PM',\n    '01:30 PM',\n    '01:45 PM',\n    '02:00 PM',\n    '02:15 PM',\n    '02:30 PM',\n    '02:45 PM',\n    '03:00 PM',\n    '03:15 PM',\n    '03:30 PM',\n    '03:45 PM',\n    '04:00 PM',\n    '04:15 PM',\n    '04:30 PM',\n    '04:45 PM',\n    '05:00 PM',\n    '05:15 PM',\n    '05:30 PM',\n    '05:45 PM',\n    '06:00 PM',\n    '06:15 PM',\n    '06:30 PM',\n    '06:45 PM',\n    '07:00 PM',\n    '07:15 PM',\n    '07:30 PM',\n    '07:45 PM'\n];\n\nexport default function DateDialog(props) {\n    const classes = useStyles();\n\n    const [state, setState] = React.useContext(GlobalState);\n\n    const [date, setDate] = React.useState(\"\")\n    const [time, setTime] = React.useState(\"\")\n\n    const [dateError, setDateError] = React.useState(false)\n\n\n    const dateChanged = (value) => {\n        setDate(value)\n        setDateError(false)\n    }\n\n    const timeChanged = (event) => {\n        setTime(event.target.value)\n    }\n\n    useEffect(() => {\n        setDate(props.date)\n        setTime(props.time)\n\n    }, [props.date, props.time, props.open])\n\n\n\n    const handleClose = () => {\n\n        setDateError(false)\n        props.handleClose();\n    };\n\n    const okClicked = () => {\n        if (!date || date.length < 10) {\n            setDateError(true)\n            return\n        }\n\n        props.handleOK(date, time)\n    }\n\n\n    return (\n        <React.Fragment>\n            <React.Fragment>\n                <Dialog\n                    maxWidth=\"sm\"\n                    open={props.open}\n                    onClose={handleClose}\n                    PaperComponent={PaperComponent}\n                    aria-labelledby=\"form-dialog-title\"\n                >\n                    <DialogTitle id=\"draggable-dialog-title\">\n                        <Grid\n                            container\n                            spacing={2}\n                            direction=\"row\"\n                            justify=\"center\"\n                            alignItems=\"center\"\n                        >\n                            <Grid item>\n                                <AccessAlarmsIcon\n                                    style={{ color: \"#03b5f2\", fontSize: \"3rem\" }}\n                                />\n                            </Grid>\n\n                            <Grid item>\n                                <div\n                                    style={{\n                                        color: \"#03b5f2\",\n                                        paddingBottom: \"10px\",\n                                        fontWeight: \"800\",\n                                    }}\n                                >\n                                    {\" \"}\n                    Change Date and Time{\" \"}\n                                </div>\n                            </Grid>\n                        </Grid>\n\n                        <Divider />\n                    </DialogTitle>\n                    <DialogContent>\n                        <Grid container spacing={1}>\n\n                            <Grid item xs={8}>\n                                <DateField\n                                    error={dateError}\n                                    title=\"Appointment Date\"\n                                    value={date}\n                                    dateChanged={dateChanged}\n                                >\n\n                                </DateField>\n                            </Grid>\n\n                            <Grid item xs={4}>\n                                <div style={{ position: \"relative\", border: `1px solid ${'#ddd'}`, borderRadius: \"10px\", padding: \"20px\", paddingBottom: \"20px\", marginTop: \"20px\" }}>\n\n                                    <div style={{ position: \"absolute\", top: \"-15px\", left: \"15px\", backgroundColor: \"#fff\", color: `${'#555'}`, padding: \"5px\", paddingLeft: \"10px\", paddingRight: \"10px\" }}>\n                                        Appointment Time\n                                    </div>\n\n\n\n                                    <Grid\n                                        container\n                                        direction=\"row\"\n                                        justify=\"flex-start\"\n                                        alignItems=\"flex-start\"\n                                        spacing={2}\n                                    >\n\n\n                                        <Grid item xs={12}>\n                                            <FormControl fullWidth>\n                                                <InputLabel id=\"time-label\">Time</InputLabel>\n                                                <Select\n\n                                                    labelId=\"time-label\"\n                                                    id=\"time-select\"\n                                                    value={time}\n                                                    onChange={timeChanged}\n                                                >\n                                                    {times.map(item => (\n\n                                                        <MenuItem value={item}>{item}</MenuItem>\n\n                                                    ))}\n                                                </Select>\n                                            </FormControl>\n\n\n                                        </Grid>\n\n\n                                    </Grid>\n\n                                </div>\n\n\n                                {/* <FormControl className={classes.timeControl}>\n                                    <InputLabel id=\"demo-simple-select-label\"> Time</InputLabel>\n                                    <Select\n                                        labelId=\"demo-simple-select-label\"\n                                        id=\"demo-simple-select\"\n                                        value={time}\n                                        onChange={timeChanged}\n                                    >\n                                        {times.map(item => (\n\n                                            <MenuItem value={item}>{item}</MenuItem>\n\n                                        ))}\n                                    </Select>\n                                </FormControl> */}\n\n                            </Grid>\n\n\n                        </Grid>\n\n                    </DialogContent>\n\n                    <DialogActions>\n                        <Button onClick={handleClose}>\n                            cancel\n                    </Button>\n                        <Button color=\"primary\" onClick={okClicked} variant=\"contained\" style={{ width: \"100px\" }}>\n                            OK\n                    </Button>\n                    </DialogActions>\n                </Dialog>\n            </React.Fragment>\n        </React.Fragment>\n    );\n}\n","import React, { useEffect, useRef, useState } from \"react\";\nimport BookService from \"./services/BookService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {\n  Backdrop,\n  Button,\n  Checkbox,\n  CircularProgress,\n  Divider,\n  FormControlLabel,\n  Grid,\n  InputAdornment,\n  InputLabel,\n  Link,\n  makeStyles,\n  MenuItem,\n  Select,\n  Switch,\n  TextField,\n  Tooltip,\n} from \"@material-ui/core\";\nimport GlobalState from \"../GlobalState\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport CreditCardIcon from \"@material-ui/icons/CreditCard\";\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\n\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Draggable from \"react-draggable\";\nimport Paper from \"@material-ui/core/Paper\";\n\nimport Alert from \"@material-ui/lab/Alert\";\n\nimport PropTypes from \"prop-types\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport Box from \"@material-ui/core/Box\";\n\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport { corporates } from \"./Corporates\";\nimport NumberFormat from \"react-number-format\";\n\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { validate } from \"email-validator\";\nimport DateRangeIcon from \"@material-ui/icons/DateRange\";\nimport { CalendarColors } from \"./calendar-admin/colors\";\n\nvar interval;\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    marginTop: theme.spacing(0),\n    marginBottom: theme.spacing(1),\n  },\n\n  refreshButton: {\n    marginLeft: theme.spacing(2),\n  },\n\n  checkIcon: {\n    color: \"green\",\n  },\n\n  closeIcon: {\n    color: \"red\",\n  },\n\n  RefLink: {\n    cursor: \"pointer\",\n  },\n\n  BookedLabel: {\n    backgroundColor: \"#606060\",\n    color: \"#fff\",\n    paddingRight: \"10px\",\n    paddingLeft: \"10px\",\n  },\n\n  PatientAttendedLabel: {\n    backgroundColor: \"#0066aa\",\n    color: \"#fff\",\n    paddingRight: \"15px\",\n    paddingLeft: \"10px\",\n  },\n\n  SampleTakenLabel: {\n    backgroundColor: \"#0066cc\",\n    color: \"#fff\",\n    paddingRight: \"40px\",\n    paddingLeft: \"10px\",\n  },\n\n  ReportSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"90px\",\n    paddingLeft: \"10px\",\n  },\n\n  ReportCertSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    paddingRight: \"68px\",\n    paddingLeft: \"10px\",\n  },\n\n  archiveButton: {},\n\n  smartMatchButton: {\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    marginRight: \"10px\",\n    // padding: \"10px\"\n  },\n\n  infoTitle: {\n    fontWeight: \"400\",\n  },\n\n  infoData: {\n    paddingLeft: \"10px\",\n    fontWeight: \"800\",\n  },\n\n  matchButton: {\n    marginTop: \"30px\",\n    marginBottom: \"20px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  resendButton: {\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  resendFilesButton: {\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n    backgroundColor: \"#3792ad\",\n    \"&:hover\": {\n      background: \"#2f798f\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  cancelButton: {\n    marginBottom: \"10px\",\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n    paddingLeft: \"90px\",\n    paddingRight: \"90px\",\n  },\n\n  CalendarIcon: {\n    color: theme.palette.primary.main,\n  },\n\n  DateTimeLabel: {\n    fontWeight: \"600\",\n    fontSize: \"1.2rem\",\n    color: theme.palette.primary.main,\n  },\n\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 5,\n    color: \"#fff\",\n  },\n\n  PriceLabelPaid:{\n    color: theme.palette.primary.main,\n    fontWeight: \"600\"\n  },\n\n  PriceLabelNotPaid:{\n    color: theme.palette.secondary.main,\n    fontWeight: \"600\"\n  },\n\n  BoxDisabled: {\n    width : \"100%\",\n    padding: \"10px\",\n    borderRadius: \"8px\",\n    border: \"1px solid\",\n    fontSize: \"1.2rem\",\n    fontWeight: \"500\",\n    textAlign: \"center\",\n    borderColor: \"#ddd\",\n    cursor: \"not-allowed\",\n    color: \"#ddd\",\n    transition: \"all 0.2s ease\",\n  },\n\n  BoxVC: {\n    width : \"100%\",\n    padding: \"10px\",\n    borderRadius: \"8px\",\n    border: \"1px solid\",\n    fontSize: \"1.2rem\",\n    fontWeight: \"500\",\n    textAlign: \"center\",\n    cursor: \"pointer\",\n    borderColor: CalendarColors.VC_COLOR,\n    color: CalendarColors.VC_COLOR,\n    transition: \"all 0.2s ease\",\n    \"&:hover\": {\n      backgroundColor: CalendarColors.VC_COLOR,\n      color: \"#fff\"\n    }\n  \n  },\n\n  BoxF2F: {\n    width : \"100%\",\n    padding: \"10px\",\n    borderRadius: \"8px\",\n    border: \"1px solid\",\n    fontSize: \"1.2rem\",\n    fontWeight: \"500\",\n    textAlign: \"center\",\n    cursor: \"pointer\",\n    borderColor: CalendarColors.F2F_COLOR,\n    color: CalendarColors.F2F_COLOR,\n    transition: \"all 0.2s ease\",\n    \"&:hover\": {\n      backgroundColor: CalendarColors.F2F_COLOR,\n      color: \"#fff\"\n    }\n  \n  },\n\n  BoxLaser: {\n    width : \"100%\",\n    padding: \"10px\",\n    borderRadius: \"8px\",\n    border: \"1px solid\",\n    fontSize: \"1.2rem\",\n    fontWeight: \"500\",\n    textAlign: \"center\",\n    cursor: \"pointer\",\n    borderColor: CalendarColors.LASER_COLOR,\n    color: CalendarColors.LASER_COLOR,\n    transition: \"all 0.2s ease\",\n    \"&:hover\": {\n      backgroundColor: CalendarColors.LASER_COLOR,\n      color: \"#fff\"\n    }\n  \n  },\n\n  BoxCataract: {\n    width : \"100%\",\n    padding: \"10px\",\n    borderRadius: \"8px\",\n    border: \"1px solid\",\n    fontSize: \"1.2rem\",\n    fontWeight: \"500\",\n    textAlign: \"center\",\n    cursor: \"pointer\",\n    borderColor: CalendarColors.CATARACT_COLOR,\n    color: CalendarColors.CATARACT_COLOR,\n    transition: \"all 0.2s ease\",\n    \"&:hover\": {\n      backgroundColor: CalendarColors.CATARACT_COLOR,\n      color: \"#fff\"\n    }\n  \n  },\n\n  BoxPostOP: {\n    width : \"100%\",\n    padding: \"10px\",\n    borderRadius: \"8px\",\n    border: \"1px solid\",\n    fontSize: \"1.2rem\",\n    fontWeight: \"500\",\n    textAlign: \"center\",\n    cursor: \"pointer\",\n    borderColor: CalendarColors.POSTOP_COLOR,\n    color: CalendarColors.POSTOP_COLOR,\n    transition: \"all 0.2s ease\",\n    \"&:hover\": {\n      backgroundColor: CalendarColors.POSTOP_COLOR,\n      color: \"#fff\"\n    }\n  \n  },\n\n  BoxOptometry: {\n    width : \"100%\",\n    padding: \"10px\",\n    borderRadius: \"8px\",\n    border: \"1px solid\",\n    fontSize: \"1.2rem\",\n    fontWeight: \"500\",\n    textAlign: \"center\",\n    cursor: \"pointer\",\n    borderColor: CalendarColors.OPOTOMETRY_COLOR,\n    color: CalendarColors.OPOTOMETRY_COLOR,\n    transition: \"all 0.2s ease\",\n    \"&:hover\": {\n      backgroundColor: CalendarColors.OPOTOMETRY_COLOR,\n      color: \"#fff\"\n    }\n  \n  },\n\n\n\n\n\n\n\n\n\n\n  BoxGynae: {\n    width : \"100%\",\n    padding: \"10px\",\n    borderRadius: \"8px\",\n    border: \"1px solid\",\n    fontSize: \"1.2rem\",\n    fontWeight: \"500\",\n    textAlign: \"center\",\n    cursor: \"pointer\",\n    borderColor: CalendarColors.GYNAE_COLOR,\n    color: CalendarColors.GYNAE_COLOR,\n    transition: \"all 0.2s ease\",\n    \"&:hover\": {\n      backgroundColor: CalendarColors.GYNAE_COLOR,\n      color: \"#fff\"\n    }\n  \n  },\n\n  BoxGP: {\n    width : \"100%\",\n    padding: \"10px\",\n    borderRadius: \"8px\",\n    border: \"1px solid\",\n    fontSize: \"1.2rem\",\n    fontWeight: \"500\",\n    textAlign: \"center\",\n    cursor: \"pointer\",\n    borderColor: CalendarColors.GP_COLOR,\n    color: CalendarColors.GP_COLOR,\n    transition: \"all 0.2s ease\",\n    \"&:hover\": {\n      backgroundColor: CalendarColors.GP_COLOR,\n      color: \"#fff\"\n    }\n  },\n\n  BoxSTD: {\n    width : \"100%\",\n    padding: \"10px\",\n    borderRadius: \"8px\",\n    border: \"1px solid\",\n    fontSize: \"1.2rem\",\n    fontWeight: \"500\",\n    textAlign: \"center\",\n    cursor: \"pointer\",\n    borderColor: CalendarColors.STD_COLOR,\n    color: CalendarColors.STD_COLOR,\n    transition: \"all 0.2s ease\",\n    \"&:hover\": {\n      backgroundColor: CalendarColors.STD_COLOR,\n      color: \"#fff\"\n    }\n  },\n\n\n\n}));\n\nconst Packages = [\n  { packageName: \"Consultation with Consultant Gynaecologist\" },\n  { packageName: `Coil Fitting/Coil Removal` },\n  { packageName: `Well Woman Check` },\n  { packageName: `Sexual Health Screening` },\n  { packageName: `Pre-pregnancy/Fertility check` },\n  { packageName: `Gynaecological Ultrasound` },\n  { packageName: `HPV Vaccination` },\n  { packageName: `Cervical / Pap Smear` },\n  { packageName: `HPV Treatment / Wart Cryo-Therapy` },\n];\n\nfunction NumberFormatCustom(props) {\n  const { inputRef, onChange, ...other } = props;\n\n  return (\n    <NumberFormat\n      {...other}\n      getInputRef={inputRef}\n      onValueChange={(values) => {\n        onChange({\n          target: {\n            name: props.name,\n            value: values.value,\n          },\n        });\n      }}\n      thousandSeparator\n      isNumericString\n      prefix=\"\"\n    />\n  );\n}\n\nNumberFormatCustom.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nconst BorderLinearProgress = withStyles((theme) => ({\n  root: {\n    height: 10,\n    borderRadius: 5,\n  },\n  colorPrimary: {\n    backgroundColor: \"#cedbce\", //theme.palette.grey[theme.palette.type === 'light' ? 200 : 700],\n  },\n  bar: {\n    borderRadius: 5,\n    backgroundColor: \"#2f942e\",\n  },\n}))(LinearProgress);\nfunction LinearProgressWithLabel(props) {\n  return (\n    <Box display=\"flex\" alignItems=\"center\">\n      <Box width=\"100%\" mr={1}>\n        <BorderLinearProgress variant=\"determinate\" {...props} />\n      </Box>\n      <Box minWidth={35}>\n        <Typography\n          style={{ fontWeight: \"800\", color: \"#5e855e\" }}\n          variant=\"body2\"\n          color=\"textSecondary\"\n        >{`${Math.round(props.value)}%`}</Typography>\n      </Box>\n    </Box>\n  );\n}\n\nLinearProgressWithLabel.propTypes = {\n  /**\n   * The value of the progress indicator for the determinate and buffer variants.\n   * Value between 0 and 100.\n   */\n  value: PropTypes.number.isRequired,\n};\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable\n      handle=\"#draggable-dialog-title\"\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\n    >\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nexport default function ChooseBookingDialog(props) {\n  const classes = useStyles();\n\n  const [state, setState] = React.useContext(GlobalState);\n\n  const handleClose = () => {    \n    props.handleClose();\n  };\n\n\n  const timeDisabled = () =>\n  {\n    return props.time.indexOf(':15') > 0 || props.time.indexOf(':45') > 0 || props.time.indexOf('09') >= 0 \n  }\n\n  const clinicClicked = (clinic) =>\n  {\n    props.clinicClicked(clinic)\n  }\n\n  return (\n    <React.Fragment>\n        <React.Fragment>\n          <Dialog\n            maxWidth=\"xs\"\n            open={props.open}\n            onClose={handleClose}\n            PaperComponent={PaperComponent}\n            aria-labelledby=\"form-dialog-title\"\n          >\n            <DialogTitle id=\"draggable-dialog-title\">\n              <Grid\n                container\n                spacing={2}\n                direction=\"row\"\n                justify=\"center\"\n                alignItems=\"center\"\n              >\n                {/* <Grid item>\n                  <AddIcon style={{ color: \"#f50057\", fontSize: \"3rem\" }} />\n                </Grid> */}\n\n                <Grid item>\n                  <div\n                    style={{\n                      color: \"#f50057\",\n                      paddingBottom: \"10px\",\n                      fontWeight: \"800\",\n                    }}\n                  >\n                    {\" \"}\n                    Change Clinic{\" \"}\n                  </div>\n                </Grid>\n              </Grid>\n\n              <Divider />\n            </DialogTitle>\n            <DialogContent>\n              <div\n                style={{\n                  height: \"420px\",\n                }}\n              >\n                <Grid\n                  container\n                  direction=\"row\"\n                  justify=\"stretch\"\n                  spacing={2}\n                  alignItems=\"center\"\n                >\n\n\n                  <Grid item xs={12} style={{marginTop:\"0px\"}}>\n                    <div className={classes.BoxVC} onClick={() => clinicClicked(\"Virtual Consultation\")}>\n                      Virtual Consultation\n                    </div>\n                  </Grid>\n                  <Grid item xs={12}>\n                    <div className={classes.BoxF2F} onClick={() => clinicClicked(\"F2F Clinic\")}>\n                      F2F Clinic\n                    </div>\n                  </Grid>\n                  <Grid item xs={12}>\n                    <div className={classes.BoxLaser} onClick={() => clinicClicked(\"Laser Theatre\")}>\n                      Laser Theatre\n                    </div>\n                  </Grid>\n                  <Grid item xs={12}>\n                    <div className={classes.BoxCataract} onClick={() => clinicClicked(\"Lens Theatre\")}>\n                      Lens Theatre\n                    </div>\n                  </Grid>\n                  <Grid item xs={12}>\n                    <div className={classes.BoxPostOP} onClick={() => clinicClicked(\"Post OP\")}>\n                      Post OP\n                    </div>\n                  </Grid>\n                  <Grid item xs={12}>\n                    <div className={classes.BoxOptometry} onClick={() => clinicClicked(\"Optometry\")}>\n                      Optometry\n                    </div>\n                  </Grid>\n\n\n                </Grid>\n\n                <div\n                  style={{\n                    position: \"absolute\",\n                    bottom: \"0px\",\n                    right: \"5px\",\n                  }}\n                >\n                  <Grid\n                    container\n                    direction=\"row\"\n                    justify=\"flex-end\"\n                    alignItems=\"center\"\n                    spacing={1}\n                  >\n                    <Grid item>\n                      <Button\n                        onClick={handleClose}\n                        style={{ width: \"100px\" }}\n                      >\n                        close\n                      </Button>\n                    </Grid>\n                   \n                  </Grid>\n                </div>\n              </div>\n\n            </DialogContent>\n          </Dialog>\n        </React.Fragment>\n    </React.Fragment>\n  );\n}\n","import React, { useEffect, useRef, useState } from \"react\";\nimport BookService from \"./services/BookService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {\n    Backdrop,\n    Button,\n    Checkbox,\n    CircularProgress,\n    DialogActions,\n    DialogContentText,\n    Divider,\n    FormControlLabel,\n    Grid,\n    IconButton,\n    InputAdornment,\n    InputLabel,\n    Link,\n    makeStyles,\n    MenuItem,\n    Select,\n    Switch,\n    TextField,\n    Tooltip,\n} from \"@material-ui/core\";\nimport GlobalState from \"../GlobalState\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport CreditCardIcon from \"@material-ui/icons/CreditCard\";\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\n\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Draggable from \"react-draggable\";\nimport Paper from \"@material-ui/core/Paper\";\n\nimport Alert from \"@material-ui/lab/Alert\";\n\nimport PropTypes from \"prop-types\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport Box from \"@material-ui/core/Box\";\n\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport { corporates } from \"./Corporates\";\nimport NumberFormat from \"react-number-format\";\n\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { validate } from \"email-validator\";\nimport DateRangeIcon from \"@material-ui/icons/DateRange\";\nimport { CalendarColors } from \"./calendar-admin/colors\";\nimport DateField from \"./DateField\";\n\nimport EditIcon from '@material-ui/icons/Edit';\nimport DateDialog from \"./DateDialog\";\nimport ChooseClinicDialog from \"./ChooseClinicDialog\"\nimport PatientDialog from \"./PatientDialog\";\nimport PatientService from \"./services/PatientService\";\nimport SearchIcon from '@material-ui/icons/Search';\n\n\nvar interval;\n\nconst useStyles = makeStyles((theme) => ({\n    title: {\n        marginTop: theme.spacing(0),\n        marginBottom: theme.spacing(1),\n    },\n\n    refreshButton: {\n        marginLeft: theme.spacing(2),\n    },\n\n    checkIcon: {\n        color: \"green\",\n    },\n\n    closeIcon: {\n        color: \"red\",\n    },\n\n    RefLink: {\n        cursor: \"pointer\",\n    },\n\n    BookedLabel: {\n        backgroundColor: \"#606060\",\n        color: \"#fff\",\n        paddingRight: \"10px\",\n        paddingLeft: \"10px\",\n    },\n\n    PatientAttendedLabel: {\n        backgroundColor: \"#0066aa\",\n        color: \"#fff\",\n        paddingRight: \"15px\",\n        paddingLeft: \"10px\",\n    },\n\n    SampleTakenLabel: {\n        backgroundColor: \"#0066cc\",\n        color: \"#fff\",\n        paddingRight: \"40px\",\n        paddingLeft: \"10px\",\n    },\n\n    ReportSentLabel: {\n        backgroundColor: \"#009900\",\n        color: \"#fff\",\n        paddingRight: \"90px\",\n        paddingLeft: \"10px\",\n    },\n\n    ReportCertSentLabel: {\n        backgroundColor: \"#009900\",\n        color: \"#fff\",\n        paddingRight: \"68px\",\n        paddingLeft: \"10px\",\n    },\n\n    archiveButton: {},\n\n    smartMatchButton: {\n        backgroundColor: \"#2f942e\",\n        \"&:hover\": {\n            background: \"green\",\n            color: \"#fff\",\n        },\n        textDecoration: \"none !important\",\n        marginRight: \"10px\",\n        // padding: \"10px\"\n    },\n\n    infoTitle: {\n        fontWeight: \"400\",\n    },\n\n    infoData: {\n        paddingLeft: \"10px\",\n        fontWeight: \"800\",\n    },\n\n    matchButton: {\n        marginTop: \"30px\",\n        marginBottom: \"20px\",\n        backgroundColor: \"#2f942e\",\n        \"&:hover\": {\n            background: \"green\",\n            color: \"#fff\",\n        },\n        textDecoration: \"none !important\",\n        padding: \"10px\",\n        paddingLeft: \"50px\",\n        paddingRight: \"50px\",\n    },\n\n    resendButton: {\n        marginTop: \"5px\",\n        marginBottom: \"5px\",\n        backgroundColor: \"#2f942e\",\n        \"&:hover\": {\n            background: \"green\",\n            color: \"#fff\",\n        },\n        textDecoration: \"none !important\",\n        padding: \"10px\",\n        paddingLeft: \"50px\",\n        paddingRight: \"50px\",\n    },\n\n    resendFilesButton: {\n        marginTop: \"5px\",\n        marginBottom: \"5px\",\n        backgroundColor: \"#3792ad\",\n        \"&:hover\": {\n            background: \"#2f798f\",\n            color: \"#fff\",\n        },\n        textDecoration: \"none !important\",\n        padding: \"10px\",\n        paddingLeft: \"50px\",\n        paddingRight: \"50px\",\n    },\n\n    cancelButton: {\n        marginBottom: \"10px\",\n        textDecoration: \"none !important\",\n        padding: \"10px\",\n        paddingLeft: \"90px\",\n        paddingRight: \"90px\",\n    },\n\n    CalendarIcon: {\n        color: theme.palette.primary.main,\n    },\n\n    DateTimeLabel: {\n        fontWeight: \"600\",\n        fontSize: \"1.2rem\",\n        color: theme.palette.primary.main,\n    },\n\n    backdrop: {\n        zIndex: theme.zIndex.drawer + 5,\n        color: \"#fff\",\n    },\n\n    PriceLabelPaid: {\n        color: theme.palette.primary.main,\n        fontWeight: \"600\"\n    },\n\n    PriceLabelNotPaid: {\n        color: theme.palette.secondary.main,\n        fontWeight: \"600\"\n    },\n\n    SearchIcon:{\n        fontSize: \"2rem\",\n        color: theme.palette.primary.main,\n    }\n\n\n}));\n\nconst Packages = [\n    { packageName: \"Consultation with Consultant Gynaecologist\" },\n    { packageName: `Coil Fitting/Coil Removal` },\n    { packageName: `Well Woman Check` },\n    { packageName: `Sexual Health Screening` },\n    { packageName: `Pre-pregnancy/Fertility check` },\n    { packageName: `Gynaecological Ultrasound` },\n    { packageName: `HPV Vaccination` },\n    { packageName: `Cervical / Pap Smear` },\n    { packageName: `HPV Treatment / Wart Cryo-Therapy` },\n];\n\nfunction NumberFormatCustom(props) {\n    const { inputRef, onChange, ...other } = props;\n\n    return (\n        <NumberFormat\n            {...other}\n            getInputRef={inputRef}\n            onValueChange={(values) => {\n                onChange({\n                    target: {\n                        name: props.name,\n                        value: values.value,\n                    },\n                });\n            }}\n            thousandSeparator\n            isNumericString\n            prefix=\"\"\n        />\n    );\n}\n\nNumberFormatCustom.propTypes = {\n    inputRef: PropTypes.func.isRequired,\n    name: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired,\n};\n\nconst BorderLinearProgress = withStyles((theme) => ({\n    root: {\n        height: 10,\n        borderRadius: 5,\n    },\n    colorPrimary: {\n        backgroundColor: \"#cedbce\", //theme.palette.grey[theme.palette.type === 'light' ? 200 : 700],\n    },\n    bar: {\n        borderRadius: 5,\n        backgroundColor: \"#2f942e\",\n    },\n}))(LinearProgress);\nfunction LinearProgressWithLabel(props) {\n    return (\n        <Box display=\"flex\" alignItems=\"center\">\n            <Box width=\"100%\" mr={1}>\n                <BorderLinearProgress variant=\"determinate\" {...props} />\n            </Box>\n            <Box minWidth={35}>\n                <Typography\n                    style={{ fontWeight: \"800\", color: \"#5e855e\" }}\n                    variant=\"body2\"\n                    color=\"textSecondary\"\n                >{`${Math.round(props.value)}%`}</Typography>\n            </Box>\n        </Box>\n    );\n}\n\nLinearProgressWithLabel.propTypes = {\n    /**\n     * The value of the progress indicator for the determinate and buffer variants.\n     * Value between 0 and 100.\n     */\n    value: PropTypes.number.isRequired,\n};\n\nfunction PaperComponent(props) {\n    return (\n        <Draggable\n            handle=\"#draggable-dialog-title\"\n            cancel={'[class*=\"MuiDialogContent-root\"]'}\n        >\n            <Paper {...props} />\n        </Draggable>\n    );\n}\n\nexport default function EditOVBookingDialog(props) {\n    const classes = useStyles();\n\n    const [state, setState] = React.useContext(GlobalState);\n    const [saving, setSaving] = useState(false);\n\n    const [openClinicDialog, setOpenClinicDialog] = React.useState(false)\n\n    const [clinic, setClinic] = React.useState(\"\")\n\n    const [fullname, setFullname] = React.useState(\"\");\n    const [fullnameError, setFullnameError] = React.useState(false);\n\n    const [phone, setPhone] = React.useState(\"\");\n    const [email, setEmail] = React.useState(\"\");\n    const [notes, setNotes] = React.useState(\"\");\n\n    const [patientID, setPatientID] = React.useState(\"\");\n    const [prescriptionLeft, setPrescriptionLeft] = React.useState(\"\");\n    const [prescriptionRight, setPrescriptionRight] = React.useState(\"\");\n\n\n    const [birthDate, setBirthDate] = React.useState(\"\");\n    const [birthDateError, setBirthDateError] = React.useState(false);\n\n    const [openDeleteDialog, setOpenDeleteDialog] = React.useState(false)\n\n    const [openDateDialog, setOpenDateDialog] = React.useState(false)\n\n    const [date, setDate] = React.useState(\"\")\n    const [time, setTime] = React.useState(\"\")\n\n    const [selectedPatient, setSelectedPatient] = React.useState(null)\n    const [patientDialogOpen, setPatientDialogOpen] = React.useState(false)\n\n    const handleClosePatientDialog = () => {\n      setPatientDialogOpen(false)\n    }\n  \n\n    const patientIDChanged = (event) => {\n        setPatientID(event.target.value);\n    };\n\n    const prescriptionLeftChanged = (event) => {\n        setPrescriptionLeft(event.target.value);\n    };\n\n    const prescriptionRightChanged = (event) => {\n        setPrescriptionRight(event.target.value);\n    };\n\n\n    const handleCloseDeleteDialog = () => {\n        setOpenDeleteDialog(false)\n    }\n\n    const handleSaveDateDialog = (date, time) => {\n        setDate(date)\n        setTime(time)\n        setOpenDateDialog(false)\n    }\n\n    const handleCloseDateDialog = () => {\n        setOpenDateDialog(false)\n    }\n\n\n    React.useEffect(() => {\n        if (props.booking && props.open) {\n            setFullname(props.booking.fullname)\n            setPhone(props.booking.phone)\n            setEmail(props.booking.email)\n            setBirthDate(props.booking.birthDate)\n            setNotes(props.booking.notes)\n            setDate(props.date)\n            setTime(props.time)\n            setPatientID(props.booking.patientID)\n            setPrescriptionLeft(props.booking.prescriptionLeft)\n            setPrescriptionRight(props.booking.prescriptionRight)\n\n            setClinic(props.clinic)\n\n            loadPatient()\n\n        }\n\n    }, [props.open, props.booking])\n\n    const loadPatient = async () =>\n    {\n        try{\n            setSelectedPatient(null)\n            if (props.booking.patientID && props.booking.patientID.length > 0)\n            {\n                const res = await PatientService.getPatientByPatientId(props.booking.patientID)\n                if (res && res.data)\n                {\n                    const patiant = res.data\n                    setSelectedPatient(patiant)\n                }\n            }\n        }\n        catch(err)\n        {\n            console.error(err)\n        }\n    }\n\n\n    const birthDateChanged = (dateStr) => {\n        setBirthDate(dateStr);\n    }\n\n\n\n\n    const fullnameChanged = (event) => {\n        setFullname(event.target.value);\n        setFullnameError(false);\n    };\n\n    const phoneChanged = (event) => {\n        setPhone(event.target.value);\n    };\n\n    const emailChanged = (event) => {\n        setEmail(event.target.value);\n    };\n\n\n    const notesChanged = (event) => {\n        setNotes(event.target.value);\n    };\n\n    const handleClose = () => {\n        if (saving) return;\n\n        setFullname(\"\");\n        setFullnameError(false);\n        setBirthDateError(false)\n        setPhone(\"\");\n        setEmail(\"\");\n        setNotes(\"\");\n        setBirthDate(\"\")\n        setPatientID(\"\")\n        setPrescriptionLeft(\"\")\n        setPrescriptionRight(\"\")\n        setClinic(\"\")\n        setSelectedPatient(null)\n\n\n        props.handleClose();\n        setSaving(false);\n    };\n\n    const validateBooking = () => {\n        let error = false;\n        if (!fullname || fullname.trim().length < 1) {\n            setFullnameError(true);\n            error = true;\n        }\n\n        if (birthDate && birthDate.length >= 1 && birthDate.length < 10) {\n            setBirthDateError(true);\n            error = true;\n        }\n\n        return !error;\n    };\n\n    const deleteClicked = async () => {\n\n        setOpenDeleteDialog(false)\n\n        setSaving(true)\n        try {\n            await BookService.deleteBooking(props.booking._id)\n            setSaving(false)\n            setState((state) => ({\n                ...state,\n                bookingDialogDataChanged: !state.bookingDialogDataChanged\n                    ? true\n                    : false,\n            }));\n            handleClose();\n        }\n        catch (err) {\n            console.error(err)\n            setSaving(false)\n        }\n    }\n\n    const saveClicked = async () => {\n        if (!validateBooking()) {\n            return;\n        }\n\n        setSaving(true);\n\n        try {\n            await BookService.updateBooking({\n                bookingId: props.booking._id,\n                bookingDate: date,\n                bookingTime: time,\n                fullname: fullname,\n                phone: phone,\n                email: email,\n                birthDate: birthDate,\n                notes: notes,\n                clinic: clinic,\n                patientID: patientID,\n                prescriptionLeft: prescriptionLeft,\n                prescriptionRight: prescriptionRight,\n            });\n            setSaving(false);\n            setState((state) => ({\n                ...state,\n                bookingDialogDataChanged: !state.bookingDialogDataChanged\n                    ? true\n                    : false,\n            }));\n            handleClose();\n        } catch (err) {\n            console.error(err);\n            setSaving(false);\n        }\n    };\n\n    const saveAsClicked = async () => {\n        if (!validateBooking()) {\n            return;\n        }\n\n        setSaving(true);\n\n        try {\n            await BookService.addNewBooking({\n                bookingDate: date,\n                bookingTime: time,\n                fullname: fullname,\n                phone: phone,\n                email: email,\n                birthDate: birthDate,\n                notes: notes,\n                clinic: clinic,\n                patientID: patientID,\n                prescriptionLeft: prescriptionLeft,\n                prescriptionRight: prescriptionRight,\n            });\n            setSaving(false);\n            setState((state) => ({\n                ...state,\n                bookingDialogDataChanged: !state.bookingDialogDataChanged\n                    ? true\n                    : false,\n            }));\n            handleClose();\n        } catch (err) {\n            console.error(err);\n            setSaving(false);\n        }\n    };\n\n\n    const getColorFromClinic = (clinic) => {\n        switch (clinic) {\n            case \"Virtual Consultation\":\n                return CalendarColors.VC_COLOR\n            case \"F2F Clinic\":\n                return CalendarColors.F2F_COLOR\n            case \"Laser Theatre\":\n                return CalendarColors.LASER_COLOR\n            case \"Lens Theatre\":\n                return CalendarColors.CATARACT_COLOR\n            case \"Post OP\":\n                return CalendarColors.POSTOP_COLOR\n            case \"Optometry\":\n                return CalendarColors.OPOTOMETRY_COLOR\n    \n    \n            default:\n                return \"#777\"\n\n        }\n    }\n\n    const handleClinicClicked = (_clinic) =>\n    {\n        setClinic(_clinic)\n        setOpenClinicDialog(false)\n    }\n\n    const handleCloseClinicDialog = () =>\n    {\n        setOpenClinicDialog(false)\n    }\n    \n    const editClinicClicked = () =>\n    {\n        setOpenClinicDialog(true)\n    }\n\n    \n\n\n    return (\n        <React.Fragment>\n            {props.date && props.time && (\n                <React.Fragment>\n                    <Dialog\n                        maxWidth=\"md\"\n                        open={props.open}\n                        onClose={handleClose}\n                        PaperComponent={PaperComponent}\n                        aria-labelledby=\"form-dialog-title\"\n                    >\n                        <DialogTitle id=\"draggable-dialog-title\">\n\n                            <div style={{ position: \"absolute\", left: \"0px\", top: \"0px\", width: \"100%\", backgroundColor: getColorFromClinic(clinic), color: \"#fff\", padding: \"15px 5px\", textAlign: \"center\", fontSize: \"1.5rem\" }}>\n                                <Grid container direction=\"row\"\n                                    justify=\"center\"\n                                    alignItems=\"center\"\n                                    spacing={1}\n                                >\n                                    <Grid item>\n                                        <Tooltip title=\"Change Clinic\">\n                                            <EditIcon style={{ fontSize: \"2rem\", cursor:\"pointer\" }} onClick={editClinicClicked} />\n                                        </Tooltip>\n                                    </Grid>\n                                    <Grid item style={{ marginTop: \"-10px\" }}>\n                                        {clinic}\n                                    </Grid>\n                                </Grid>\n                            </div>\n\n\n                        </DialogTitle>\n                        <DialogContent>\n                            <div\n                                style={{\n                                    paddingTop: \"50px\",\n                                    paddingBottom: \"20px\"\n                                }}\n                            >\n                                <Grid\n                                    container\n                                    direction=\"row\"\n                                    justify=\"stretch\"\n                                    spacing={2}\n                                    alignItems=\"center\"\n                                >\n                                    <Grid item xs={12} style={{ marginTop: \"10px\" }}>\n                                        <Grid\n                                            container\n                                            direction=\"row\"\n                                            justify=\"center\"\n                                            alignItems=\"center\"\n                                            spacing={1}\n                                            style={{ cursor: \"pointer\" }} onClick={() => setOpenDateDialog(true)}\n                                        >\n                                            <Grid item>\n                                                <DateRangeIcon className={classes.CalendarIcon} />\n                                            </Grid>\n                                            <Grid item>\n                                                <span className={classes.DateTimeLabel}>\n                                                    {date} , {time}\n                                                </span>\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n\n                                    <Grid item xs={12} md={6}>\n                                        <TextField\n                                            fullWidth\n                                            autoFocus\n                                            error={fullnameError}\n                                            label=\"Full Name\"\n                                            value={fullname}\n                                            required\n                                            onChange={fullnameChanged}\n                                            name=\"fullname\"\n                                            id=\"fullname-id\"\n                                            autoComplete=\"none\"\n                                        />\n                                    </Grid>\n\n                                    <Grid item xs={12} md={6}>\n                                        <Grid container alignItems=\"center\">\n                                            <Grid item xs={10}>\n                                                <TextField\n                                                    fullWidth\n                                                    label=\"Patient ID\"\n                                                    value={patientID}\n                                                    onChange={patientIDChanged}\n                                                    name=\"patientid\"\n                                                    id=\"patientid-id\"\n                                                    autoComplete=\"none\"\n                                                />\n                                            </Grid>\n                                            <Grid item xs={2}>\n                                                {selectedPatient && (\n                                                    <Tooltip title=\"Show Patient Detail\">\n                                                        <IconButton onClick={() => { setPatientDialogOpen(true) }}>\n                                                            <SearchIcon className={classes.SearchIcon} />\n                                                        </IconButton>\n                                                    </Tooltip>\n                                                )}\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n\n\n                                    <Grid item xs={12} md={6}>\n                                        <TextField\n                                            fullWidth\n                                            label=\"Telephone\"\n                                            value={phone}\n                                            onChange={phoneChanged}\n                                            name=\"phone\"\n                                            id=\"phone-id\"\n                                            autoComplete=\"none\"\n                                        />\n                                    </Grid>\n\n                                    <Grid item xs={12} md={6}>\n                                        <TextField\n                                            fullWidth\n                                            label=\"Email\"\n                                            value={email}\n                                            onChange={emailChanged}\n                                            name=\"email\"\n                                            id=\"email-id\"\n                                            autoComplete=\"none\"\n                                        />\n                                    </Grid>\n\n                                    <Grid item xs={12}>\n                                        <DateField\n                                            error={birthDateError}\n                                            title=\"Date of Birth\"\n                                            value={birthDate}\n                                            dateChanged={birthDateChanged}\n                                        >\n\n                                        </DateField>\n                                    </Grid>\n\n                                    <Grid item xs={12} md={6}>\n                                        <TextField\n                                            fullWidth\n                                            label=\"Prescription (LEFT)\"\n                                            value={prescriptionLeft}\n                                            onChange={prescriptionLeftChanged}\n                                            name=\"pleft\"\n                                            id=\"pleft-id\"\n                                            autoComplete=\"none\"\n                                        />\n                                    </Grid>\n\n                                    <Grid item xs={12} md={6}>\n                                        <TextField\n                                            fullWidth\n                                            label=\"Prescription (RIGHT)\"\n                                            value={prescriptionRight}\n                                            onChange={prescriptionRightChanged}\n                                            name=\"pright\"\n                                            id=\"pright-id\"\n                                            autoComplete=\"none\"\n                                        />\n                                    </Grid>\n\n                                    <Grid item xs={12}>\n                                        <TextField\n                                            fullWidth\n                                            label=\"Notes\"\n                                            value={notes}\n                                            onChange={notesChanged}\n                                            name=\"notes\"\n                                            id=\"notes-id\"\n                                            autoComplete=\"none\"\n                                        />\n                                    </Grid>\n\n                                    <Grid item xs={12} style={{marginTop:\"20px\"}}>\n                                    <Button\n                                        onClick={() => setOpenDeleteDialog(true)}\n                                        variant=\"contained\"\n                                        fullWidth\n                                        color=\"primary\"\n                                        // style={{ width: \"100px\" }}\n                                        style={{ backgroundColor: \"#c70000\", color: \"#fff\" }}\n                                        disabled={saving}\n                                    >\n                                        Delete Appointment\n                                      </Button>\n                                </Grid>\n\n\n                                </Grid>\n\n                                <div\n                                    style={{\n                                        position: \"absolute\",\n                                        bottom: \"20px\",\n                                        right: \"20px\",\n                                    }}\n                                >\n                                </div>\n                            </div>\n\n                            <Backdrop className={classes.backdrop} open={saving}>\n                                <CircularProgress color=\"inherit\" />\n                            </Backdrop>\n                        </DialogContent>\n\n                        <DialogActions>\n                            <Grid\n                                container\n                                direction=\"row\"\n                                justify=\"flex-end\"\n                                alignItems=\"center\"\n                                spacing={2}\n                            >\n\n                                <Grid item>\n                                    <Button\n                                        onClick={handleClose}\n                                        style={{ width: \"100px\" }}\n                                        disabled={saving}\n                                    >\n                                        back\n                                     </Button>\n                                </Grid>\n                                <Grid item>\n                                    <Button\n                                        onClick={saveClicked}\n                                        variant=\"contained\"\n                                        color=\"primary\"\n                                        // style={{ width: \"100px\" }}\n                                        style={{ backgroundColor: \"#ff7200\", color: \"#fff\" }}\n                                        disabled={saving}\n                                    >\n                                        Save Changes\n                                      </Button>\n                                </Grid>\n\n                                <Grid item xs={12}>\n                                    <div style={{width:\"100%\", display:\"flex\", justifyContent:\"center\"}}>\n                                    <Button\n                                        onClick={saveAsClicked}\n                                        variant=\"contained\"\n                                        color=\"secondary\"\n                                        style={{ width: \"400px\" }}\n                                        // style={{ backgroundColor: \"#ff7200\", color: \"#fff\" }}\n                                        disabled={saving}\n                                    >\n                                        Save As a new booking\n                                      </Button>\n\n                                    </div>\n                                </Grid>\n\n\n                                {/* <div style={{position:\"absolute\", left:\"10px\", bottom:\"5px\"}}> */}\n                                {/* </div> */}\n\n\n                            </Grid>\n\n                        </DialogActions>\n\n                        <Dialog\n                            open={openDeleteDialog}\n                            onClose={handleCloseDeleteDialog}\n                            aria-labelledby=\"alert-dialog-title\"\n                            aria-describedby=\"alert-dialog-description\"\n                        >\n                            <DialogTitle style={{ color: \"#d10202\", fontWeight: \"600\" }} id=\"alert-dialog-title\">\n                                {\"Delete Appointment\"}\n                            </DialogTitle>\n                            <DialogContent>\n                                <DialogContentText\n                                    style={{ color: \"#000\", fontWeight: \"500\" }}\n                                    id=\"alert-dialog-description\"\n                                >\n                                    Are you sure you want to delete this appointment?\n                            </DialogContentText>\n                            </DialogContent>\n                            <DialogActions>\n                                <Button onClick={handleCloseDeleteDialog} color=\"default\">\n                                    Back\n                                 </Button>\n                                <Button onClick={deleteClicked} variant=\"contained\" style={{ backgroundColor: \"#d10202\", color: \"#fff\" }}>\n                                    Yes, Delete this appointment\n                                 </Button>\n                            </DialogActions>\n                        </Dialog>\n\n                    </Dialog>\n\n                    <DateDialog\n                        open={openDateDialog}\n                        handleClose={handleCloseDateDialog}\n                        handleOK={handleSaveDateDialog}\n                        date={date}\n                        time={time}>\n\n                    </DateDialog>\n\n                </React.Fragment>\n            )}\n\n            <ChooseClinicDialog\n                    open={openClinicDialog}\n                    handleClose={handleCloseClinicDialog}\n                    clinicClicked={handleClinicClicked}\n            />\n\n            {selectedPatient && (\n                <PatientDialog\n                    patient={selectedPatient}\n                    open={patientDialogOpen}\n                    handleClose={handleClosePatientDialog}\n                    title={`${selectedPatient.name?.toUpperCase()} ${selectedPatient.surname?.toUpperCase()}`}\n                    saveButtonText={\"Save Changes\"}\n                />\n            )}\n\n            \n            \n        </React.Fragment>\n    );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport PropTypes from \"prop-types\";\nimport dateformat from \"dateformat\";\nimport BookService from \"../services/BookService\";\n\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport GlobalState from \"../../GlobalState\";\nimport BookingDialog from \"../BookingDialog\";\nimport NewBookingDialog from \"../NewBookingDialog\";\nimport { CalendarColors } from \"./colors\";\nimport clsx from \"clsx\";\n\nimport NewOVDialog from \"../NewOVBookingDialog\";\nimport EditOVBookingDialog from \"../EditOVBookingDialog\";\n\nconst useStyles = makeStyles((theme) => ({\n  Container: {\n    width: \"100%\",\n    height: \"50px\",\n    position: \"relative\",\n    backgroundColor: \"#fff\",\n    display: \"flex\",\n    alignItems: \"flex-start\",\n    justifyItems: \"flex-start\",\n    paddingLeft: \"10px\",\n  },\n\n  ContainerPast: {\n    width: \"100%\",\n    paddingTop: \"50px\",\n    position: \"relative\",\n    backgroundColor: \"#fafafa\",\n  },\n\n  DayLabel: {\n    position: \"absolute\",\n    top: \"5px\",\n    right: \"5px\",\n    color: \"#555\",\n    fontSize: \"1rem\",\n  },\n\n  DayLabelDisabled: {\n    position: \"absolute\",\n    top: \"5px\",\n    right: \"5px\",\n    color: \"#ddd\",\n    fontSize: \"1rem\",\n  },\n\n  LoadingProgress: {\n    position: \"absolute\",\n    top: \"10%\",\n    left: \"40%\",\n  },\n\n  BookingCountGauge: {\n    position: \"absolute\",\n    bottom: \"5%\",\n    left: \"8%\",\n    width: \"85%\",\n    height: \"8%\",\n  },\n\n  bookingBox: {\n    display: \"flex\",\n    marginRight: \"10px\",\n    marginTop: \"5px\",\n    padding: \"7px\",\n    maxWidth: \"150px\",\n    overflowX: \"hidden\",\n    // border: \"1px solid #eee\",\n    fontSize: \"12px\",\n    fontWeight: \"500\",\n    cursor: \"pointer\",\n    backgroundColor: \"#ebedf7\",\n    color: \"#3f51b5\",\n    boxShadow: \"2px 4px #fafafa\",\n\n    \"&:hover\": {\n      background: \"#3f51b5\",\n      color: \"#ebedf7\",\n    },\n  },\n\n  bookingBoxNew: {\n    display: \"flex\",\n    marginRight: \"10px\",\n    marginTop: \"5px\",\n    padding: \"6px 10px\",\n    maxWidth: \"150px\",\n    overflowX: \"hidden\",\n    border: \"1px solid #ddd\",\n    color: \"#ccc\",\n    fontSize: \"12px\",\n    fontWeight: \"500\",\n    cursor: \"pointer\",\n    backgroundColor: \"#fff\",\n\n    boxShadow: \"2px 4px #fafafa\",\n    transition: \"all 0.5s ease\",\n    borderRadius: \"4px\",\n\n    \"&:hover\": {\n      background: \"#fff\",\n      color: theme.palette.secondary.main,\n      borderColor: theme.palette.secondary.main,\n    },\n  },\n\n  bookingBoxVC: {\n    display: \"flex\",\n    marginRight: \"10px\",\n    marginTop: \"5px\",\n    padding: \"7px\",\n    maxWidth: \"200px\",\n    overflowX: \"hidden\",\n    fontSize: \"12px\",\n    fontWeight: \"500\",\n    cursor: \"pointer\",\n    backgroundColor: CalendarColors.VC_COLOR,\n    color: \"#eee\",\n    boxShadow: \"2px 4px #fafafa\",\n\n    \"&:hover\": {\n      // background: \"#0059b3\",\n      color: \"#fafafa\",\n    },\n  },\n  bookingBoxF2F: {\n    display: \"flex\",\n    marginRight: \"10px\",\n    marginTop: \"5px\",\n    padding: \"7px\",\n    maxWidth: \"200px\",\n    overflowX: \"hidden\",\n    fontSize: \"12px\",\n    fontWeight: \"500\",\n    cursor: \"pointer\",\n    backgroundColor: CalendarColors.F2F_COLOR,\n    color: \"#eee\",\n    boxShadow: \"2px 4px #fafafa\",\n\n    \"&:hover\": {\n      // background: \"#0059b3\",\n      color: \"#fafafa\",\n    },\n  },\n  bookingBoxLaser: {\n    display: \"flex\",\n    marginRight: \"10px\",\n    marginTop: \"5px\",\n    padding: \"7px\",\n    maxWidth: \"200px\",\n    overflowX: \"hidden\",\n    fontSize: \"12px\",\n    fontWeight: \"500\",\n    cursor: \"pointer\",\n    backgroundColor: CalendarColors.LASER_COLOR,\n    color: \"#eee\",\n    boxShadow: \"2px 4px #fafafa\",\n\n    \"&:hover\": {\n      // background: \"#0059b3\",\n      color: \"#fafafa\",\n    },\n  },\n\n  bookingBoxCataract: {\n    display: \"flex\",\n    marginRight: \"10px\",\n    marginTop: \"5px\",\n    padding: \"7px\",\n    maxWidth: \"200px\",\n    overflowX: \"hidden\",\n    fontSize: \"12px\",\n    fontWeight: \"500\",\n    cursor: \"pointer\",\n    backgroundColor: CalendarColors.CATARACT_COLOR,\n    color: \"#eee\",\n    boxShadow: \"2px 4px #fafafa\",\n\n    \"&:hover\": {\n      // background: \"#0059b3\",\n      color: \"#fafafa\",\n    },\n  },\n\n  bookingBoxPostOP: {\n    display: \"flex\",\n    marginRight: \"10px\",\n    marginTop: \"5px\",\n    padding: \"7px\",\n    maxWidth: \"200px\",\n    overflowX: \"hidden\",\n    fontSize: \"12px\",\n    fontWeight: \"500\",\n    cursor: \"pointer\",\n    backgroundColor: CalendarColors.POSTOP_COLOR,\n    color: \"#eee\",\n    boxShadow: \"2px 4px #fafafa\",\n\n    \"&:hover\": {\n      // background: \"#0059b3\",\n      color: \"#fafafa\",\n    },\n  },\n\n  bookingBoxOptometry: {\n    display: \"flex\",\n    marginRight: \"10px\",\n    marginTop: \"5px\",\n    padding: \"7px\",\n    maxWidth: \"200px\",\n    overflowX: \"hidden\",\n    fontSize: \"12px\",\n    fontWeight: \"500\",\n    cursor: \"pointer\",\n    backgroundColor: CalendarColors.OPOTOMETRY_COLOR,\n    color: \"#eee\",\n    boxShadow: \"2px 4px #fafafa\",\n\n    \"&:hover\": {\n      // background: \"#0059b3\",\n      color: \"#fafafa\",\n    },\n  },\n\n\n\n  bookingBoxHidden: {\n    display: \"none\",\n    marginRight: \"10px\",\n    marginTop: \"5px\",\n    padding: \"7px\",\n    maxWidth: \"150px\",\n    overflowX: \"hidden\",\n    fontSize: \"12px\",\n    fontWeight: \"500\",\n    cursor: \"pointer\",\n    backgroundColor: \"#fff\",\n    color: \"#fff\",\n    boxShadow: \"2px 4px #fafafa\",\n\n    \"&:hover\": {\n      // background: \"#0059b3\",\n      color: \"#fafafa\",\n    },\n  },\n\n\n\n\n\n\n\n  bookingBoxPositive: {\n    display: \"flex\",\n    marginRight: \"10px\",\n    marginTop: \"5px\",\n    padding: \"7px\",\n    maxWidth: \"150px\",\n    overflowX: \"hidden\",\n    fontSize: \"12px\",\n    fontWeight: \"500\",\n    cursor: \"pointer\",\n    backgroundColor: \"#d40b0b\",\n    color: \"#fff2f2\",\n    boxShadow: \"2px 4px #fafafa\",\n\n    \"&:hover\": {\n      background: \"#bf0000\",\n      color: \"#fff\",\n    },\n  },\n\n  bookingBoxReportSent: {\n    display: \"flex\",\n    marginRight: \"10px\",\n    marginTop: \"5px\",\n    padding: \"7px\",\n    maxWidth: \"150px\",\n    overflowX: \"hidden\",\n    fontSize: \"12px\",\n    fontWeight: \"500\",\n    cursor: \"pointer\",\n    backgroundColor: \"#009900\",\n    color: \"#eee\",\n    boxShadow: \"2px 4px #fafafa\",\n\n    \"&:hover\": {\n      background: \"#006e00\",\n      color: \"#fafafa\",\n    },\n  },\n\n  BookingBorderPCR: {\n    border: \"4px solid\",\n    borderColor: CalendarColors.PCR_COLOR,\n  },\n\n  BookingBorderGynae: {\n    border: \"4px solid\",\n    borderColor: CalendarColors.GYNAE_COLOR,\n  },\n\n  BookingBorderGP: {\n    border: \"4px solid\",\n    borderColor: CalendarColors.GP_COLOR,\n  },\n\n  BookingBorderSTD: {\n    border: \"4px solid\",\n    borderColor: CalendarColors.STD_COLOR,\n  },\n  BookingBorderBlood: {\n    border: \"4px solid\",\n    borderColor: CalendarColors.BLOOD_COLOR,\n  },\n\n}));\n\nconst DayViewCell = ({ key, date, time }) => {\n  const classes = useStyles();\n\n  const [state, setState] = React.useContext(GlobalState);\n  const [bookings, setBookings] = React.useState(null);\n  const [filteredBookings, setFilteredBookings] = React.useState(null);\n  const [selectedBooking, setSelectedBooking] = React.useState(null);\n\n  const [refresh, setRefresh] = React.useState(true);\n\n  const [isPast, setIsPast] = React.useState(false);\n\n  const [openDialog, setOpenDialog] = React.useState(false);\n  const [openDialogAddNew, setOpenDialogAddNew] = React.useState(false);\n\n  const [openDialogOV, setOpenDialogOV] = React.useState(false);\n\n  const [clinic, setClinic] = React.useState('');\n\n\n  const handleCloseDialogOV = () => {\n    setOpenDialogOV(false);\n    setOpenDialogAddNew(false)\n  };\n\n  useEffect(() => {\n    const todayStr = dateformat(new Date(), \"yyyy-mm-dd\");\n    setIsPast(date < todayStr);\n  }, [date]);\n\n  useEffect(() => {\n    if (bookings) {\n      if (state.dayViewCalFilter && state.dayViewCalFilter.trim().length > 0) {\n        const search = state.dayViewCalFilter.trim().toUpperCase();\n        setFilteredBookings(\n          bookings.filter(\n            (booking) =>\n              booking.fullname?.toLowerCase().indexOf(search.toLowerCase()) >= 0 \n          )\n        );\n      } else {\n        setFilteredBookings([...bookings]);\n      }\n    }\n  }, [state.dayViewCalFilter, bookings]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      if (!date || date.length <= 0 || !time || time.length <= 0) {\n        return;\n      }\n\n      // if (isPast)\n      // {\n      //     setBookings([]);\n      //     return;\n      // }\n\n      setBookings(null);\n\n      var res = state.AdminCalendarCache?.find(\n        (record) =>\n          record.method === \"getBookingsByDateStrandTime\" &&\n          record.query === `${date}${time}`\n      )?.res;\n      if (!res || openDialog || openDialogAddNew || true) {\n        res = await BookService.getAllBookingsByDateStrandTime(date, time);\n        setState((state) => ({\n          ...state,\n          AdminCalendarCache: [\n            ...state.AdminCalendarCache,\n            {\n              method: \"getBookingsByDateStrandTime\",\n              query: `${date}${time}`,\n              res: res,\n            },\n          ],\n        }));\n      }\n\n      if (res.data.status === \"OK\") {\n        setBookings(res.data.bookings);\n      }\n    };\n\n    if (openDialog || openDialogAddNew) {\n      setState((state) => ({\n        ...state,\n        AdminCalendarCache: state.AdminCalendarCache.filter(\n          (record) =>\n            !(\n              record.method === \"getBookingsByDateStrandTime\" &&\n              record.query === `${date}${time}`\n            )\n        ),\n      }));\n      setState((state) => ({\n        ...state,\n        AdminCalendarCache: state.AdminCalendarCache.filter(\n          (record) =>\n            !(\n              record.method === \"getBookingsCountByDateStrandTime\" &&\n              record.query === `${date}${time}`\n            )\n        ),\n      }));\n      setState((state) => ({\n        ...state,\n        AdminCalendarCache: state.AdminCalendarCache.filter(\n          (record) =>\n            !(\n              record.method === \"getBookingsCountByDateStr\" &&\n              record.query === date\n            )\n        ),\n      }));\n    }\n\n    fetchData();\n  }, [date, time, state.bookingDialogDataChanged]);\n\n  const bookingCliked = (event, booking) => {\n    setSelectedBooking(booking);\n    setOpenDialog(true);\n  };\n\n  const getBookingClass = (clinic) => {\n    switch (clinic) {\n      case \"Virtual Consultation\":\n        return classes.bookingBoxVC;\n      case \"F2F Clinic\":\n        return classes.bookingBoxF2F;\n      case \"Laser Theatre\":\n        return classes.bookingBoxLaser;\n      case \"Lens Theatre\":\n        return classes.bookingBoxCataract;\n        case \"Post OP\":\n          return classes.bookingBoxPostOP;\n          case \"Optometry\":\n            return classes.bookingBoxOptometry;\n      \n  \n      default:\n        return classes.bookingBoxHidden;\n    }\n  };\n\n  const addNewBookingClicked = () => {\n    setOpenDialogAddNew(true);\n  };\n\n  const getBookingBorderClass = (clinic) => {\n    switch (clinic) {\n      case \"pcr\":\n        return classes.BookingBorderPCR;\n      case \"gynae\":\n        return classes.BookingBorderGynae;\n      case \"gp\":\n        return classes.BookingBorderGP;\n      case \"std\":\n        return classes.BookingBorderSTD;\n        case \"blood\":\n          return classes.BookingBorderBlood;\n    \n      default:\n        return null;\n    }\n  };\n\n  const getBookingsBox = (_bookings) => {\n    if (_bookings === null) {\n      return (\n        <div className={classes.LoadingProgress}>\n          <CircularProgress disableShrink />\n        </div>\n      );\n    } else if (_bookings.length >= 0) {\n      return (\n        <React.Fragment>\n          {_bookings.map(\n            (booking) =>\n              state.selectedClinics.findIndex(\n                (e) => e === booking.clinic\n              ) >= 0 && (\n                <div\n                  style={booking.tr ? { borderTop: \"5px solid #d00fd6\" } : {}}\n                  className={clsx(\n                    getBookingClass(booking.clinic),\n                    // getBookingBorderClass(booking.clinic)\n                  )}\n                  onClick={(event) => bookingCliked(event, booking)}\n                >\n                  {`${\n                    booking.fullname\n                  }`.substring(0, 30)}\n                </div>\n              )\n          )}\n\n          <div className={classes.bookingBoxNew} onClick={addNewBookingClicked}>\n            {\" \"}\n            + Add New Booking\n          </div>\n        </React.Fragment>\n      );\n    }\n  };\n\n  const handleCloseDialog = () => {\n    setOpenDialog(false);\n  };\n\n  const handleCloseDialogAddNew = () => {\n    setOpenDialogAddNew(false);\n  };\n\n  const handleClinicClicked = (clinic) => {\n\n    setClinic(clinic)\n    setOpenDialogOV(true)\n\n  };\n\n  return (\n    <React.Fragment>\n      <div className={classes.Container}>\n        {getBookingsBox(filteredBookings)}\n      </div>\n\n      <EditOVBookingDialog\n        booking={selectedBooking}\n        open={openDialog}\n        date={date}\n        time={time}\n        clinic={selectedBooking?.clinic}\n        handleClose={handleCloseDialog}\n      />\n\n      <NewBookingDialog\n        date={date}\n        time={time}\n        open={openDialogAddNew}\n        handleClose={handleCloseDialogAddNew}\n        clinicClicked={handleClinicClicked}\n      />\n\n      <NewOVDialog\n        date={date}\n        time={time}\n        open={openDialogOV}\n        clinic={clinic}\n        handleClose={handleCloseDialogOV}\n      />\n\n    </React.Fragment>\n  );\n};\n\nDayViewCell.propTypes = {\n  key: PropTypes.string.isRequired,\n  date: PropTypes.string.isRequired,\n  time: PropTypes.string.isRequired,\n};\n\nexport default DayViewCell;\n","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport DayViewCell from './DayViewCell';\nimport dateformat from 'dateformat';\n\n\n\n\nconst rows = [\n    '08:00 AM',\n    '08:15 AM',\n    '08:30 AM', \n    '08:45 AM',\n    '09:00 AM',\n    '09:15 AM', \n    '09:30 AM',\n    '09:45 AM',\n    '10:00 AM',\n    '10:15 AM',\n    '10:30 AM',\n    '10:45 AM',\n    '11:00 AM',\n    '11:15 AM',\n    '11:30 AM',\n    '11:45 AM',\n    '12:00 PM',\n    '12:15 PM',\n    '12:30 PM',\n    '12:45 PM',\n    '01:00 PM',\n    '01:15 PM',\n    '01:30 PM',\n    '01:45 PM',\n    '02:00 PM',\n    '02:15 PM',\n    '02:30 PM',\n    '02:45 PM',\n    '03:00 PM',\n    '03:15 PM',\n    '03:30 PM',\n    '03:45 PM',\n    '04:00 PM',\n    '04:15 PM',\n    '04:30 PM',\n    '04:45 PM',\n    '05:00 PM',\n    '05:15 PM',\n    '05:30 PM',\n    '05:45 PM',\n    '06:00 PM',\n    '06:15 PM',\n    '06:30 PM',\n    '06:45 PM',\n    '07:00 PM',\n    '07:15 PM',\n    '07:30 PM',\n    '07:45 PM'\n];\n\nconst useStyles = makeStyles((theme) => ({\n\n    table: {\n        width: \"100%\",\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        overflowY: \"auto\"\n    },\n\n    th: {\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        verticalAlign: \"middle\",\n        fontcolor: \"#555\",\n        fontWeight: \"400\",\n        fontSize: \"15px\",\n        paddingTop: \"5px\",\n        paddingBottom: \"5px\",\n        width: \"12%\", \n    },\n\n    td: {\n        border: \"1px solid #ddd\",\n        borderCollapse: \"collapse\",\n        verticalAlign: \"middle\",\n        height : \"50px\",\n        width: \"84%\", \n    },\n\n    titleLabel: {\n        paddingBottom: \"17px\",\n        paddingTop: \"17px\",\n        color: \"#777\",\n        fontSize: \"16px\"\n    },\n\n    titleLabelToday: {\n        paddingBottom: \"17px\",\n        paddingTop: \"17px\",\n        color: \"#fff\",\n        backgroundColor: \"#1a73e8\",\n        fontSize: \"16px\"\n    },\n\n  }));\n\nconst DayView = ({date}) => {\n    const classes = useStyles();\n\n    return (\n        <React.Fragment>\n\n        <div style={{overflowY: \"scroll\" , height: \"60px\"}}>\n            <table className={classes.table}>\n                <thead>\n                    <tr>\n                        <th style={{width: \"7%\"}}>\n                        \n                        </th>\n                        <th style={{width: \"84%\"}}>\n                                <div className={(dateformat(new Date(),'yyyy-mm-dd') === dateformat(date, 'yyyy-mm-dd')) ? classes.titleLabelToday : classes.titleLabel }>\n                                        {dateformat(date,'dddd')}\n                                </div>                                \n                        </th>\n                    </tr>\n                </thead>\n             </table>\n\n        </div>\n\n            <div style={{overflowY: \"scroll\" , height: \"70vh\"}}>\n                <table className={classes.table}>   \n                    <tbody>\n                        {rows.map(row => (\n                            <tr>\n                                <td style={{width: \"7%\"}}>\n                                    {row}\n                                </td>\n                               \n                                <td className={classes.td}>\n                                     <DayViewCell key={`${dateformat(date,'yyyy-mm-dd')}-${row}`} date={dateformat(date,'yyyy-mm-dd')} time={row}/>  \n                                </td>\n                            \n                            </tr>\n                        ))}            \n                    </tbody>\n                </table>\n            </div>                    \n      \n        </React.Fragment>\n\n\n    );\n}\n\nDayView.propTypes = {\n    date: PropTypes.any.isRequired\n  };\n\n\nexport default DayView;","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MonthView from './MonthView';\nimport { Button, Grid, IconButton, InputAdornment, TextField, Tooltip } from '@material-ui/core';\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\n\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport WeekView from './WeekView';\nimport dateformat from 'dateformat';\nimport DayView from './DayView';\nimport GlobalState from '../../GlobalState';\n\nimport CloseIcon from '@material-ui/icons/Close';\nimport { CalendarColors } from './colors';\n\nconst Clinics = [\n    {clinic: \"Virtual Consultation\", color: CalendarColors.VC_COLOR},\n    {clinic: \"F2F Clinic\", color: CalendarColors.F2F_COLOR},\n    {clinic: \"Laser Theatre\", color: CalendarColors.LASER_COLOR},\n    {clinic: \"Lens Theatre\", color: CalendarColors.CATARACT_COLOR},\n    {clinic: \"Post OP\", color: CalendarColors.POSTOP_COLOR},\n    {clinic: \"Optometry\", color: CalendarColors.OPOTOMETRY_COLOR},\n]\n\nconst monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n  \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n];\n\nconst useStyles = makeStyles((theme) => ({\n\n    title: {\n        textAlign: \"center\",\n        fontSize: \"24px\",\n        fontColor: \"#333\"\n    },\n\n  }));\n\nexport default function CalendarView() {\n    const classes = useStyles();\n\n    const [state, setState] = React.useContext(GlobalState);\n\n    const [month, setMonth] = React.useState(new Date().getMonth() + 1);\n    const [year, setYear] = React.useState(new Date().getFullYear());\n\n    const [day, setDay] = React.useState(new Date());\n\n    const [firstDayofWeek, setFirstDayofWeek] = React.useState(new Date());\n\n    const [weekDates, setWeekDates] = React.useState([]);\n\n    const [mode, setMode] = React.useState('month');\n    const [selectedTab, setSeletedTab] = React.useState('month');\n\n    const [filter,setFilter] = React.useState('');\n\n    const filterChanged = (event) =>{\n        setFilter(event.target.value);\n        setState(state => ({...state, dayViewCalFilter : event.target.value?.trim()?.toUpperCase()}))\n      }\n\n      const removeFilter = () =>\n      {\n        setFilter('');\n        setState(state => ({...state, dayViewCalFilter : ''}));\n      }\n\n\n    useEffect( () => {\n        const today = new Date();\n        const dayofWeek = today.getDay();\n        const firstdayofweek = new Date(today.getTime() - ( dayofWeek * 86400000));\n        setFirstDayofWeek(firstdayofweek);\n        setState(state => ({...state, AdminCalendarCache : []}));\n        setState(state => ({...state, selectedClinics : Clinics.map(item => item.clinic) }));\n\n        return () =>\n        {\n            setState(state => ({...state, AdminCalendarCache : []}));\n            removeFilter();\n        }\n       \n    }, []);\n\n\n    useEffect( () => {\n        const dates = [];\n        for (var i = 0; i < 7 ; i++)\n        {\n            dates.push(new Date(firstDayofWeek.getTime() + ( i * 86400000)));\n        }\n        setWeekDates(dates);\n\n    }, [firstDayofWeek]);\n\n    const handlePrevButton = (event) =>\n    {\n       if (mode === 'month')\n       {\n            if (month === 1)\n            {\n                setYear(year - 1);\n            } \n\n            const newMonth = month === 1 ? 12 : month - 1;\n            setMonth(newMonth);\n\n            const newDay = new Date(year, newMonth - 1 , 1, 0 ,0 ,0 ,0);\n            setDay(newDay);\n\n            const dayofWeek = newDay.getDay();\n            setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\n\n       } \n       else if (mode === 'week')\n       {\n           const newFirstDayofWeek = new Date(firstDayofWeek.getTime() - ( 7 * 86400000));\n           setFirstDayofWeek(newFirstDayofWeek);\n\n           setDay(newFirstDayofWeek);\n           setMonth(newFirstDayofWeek.getMonth() + 1);\n           setYear(newFirstDayofWeek.getFullYear());\n\n       }\n       else if (mode === 'day')\n       {\n           const newDay = new Date(day.getTime() - ( 1 * 86400000));\n           setDay(newDay);\n\n           const dayofWeek = newDay.getDay();\n           setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\n\n           setMonth(newDay.getMonth() + 1);\n           setYear(newDay.getFullYear());\n       }\n    }\n\n    const handleNextButton = (event) =>\n    {\n        if (mode === 'month')\n        {\n            if (month === 12)\n            {\n                setYear(year + 1);\n            } \n       \n            const newMonth = month === 12 ? 1 : month + 1;\n            setMonth(newMonth);\n\n            const newDay = new Date(year, newMonth - 1 , 1, 0 ,0 ,0 ,0);\n            setDay(newDay);\n\n            const dayofWeek = newDay.getDay();\n            setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\n        }\n        else if (mode === 'week')\n        {\n            const newFirstDayofWeek = new Date(firstDayofWeek.getTime() + ( 7 * 86400000));\n            setFirstDayofWeek(newFirstDayofWeek);\n\n            setDay(newFirstDayofWeek);\n            setMonth(newFirstDayofWeek.getMonth() + 1);\n            setYear(newFirstDayofWeek.getFullYear());\n\n        }\n        else if (mode === 'day')\n        {\n            const newDay = new Date(day.getTime() + ( 1 * 86400000));\n            setDay(newDay);\n\n            const dayofWeek = newDay.getDay();\n            setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\n \n            setMonth(newDay.getMonth() + 1);\n            setYear(newDay.getFullYear());\n        }\n    }\n\n    const goToday = (event) => {\n        const newDay = new Date();\n        const dayofWeek = newDay.getDay();\n        setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\n        setDay(newDay);\n        setMonth(newDay.getMonth() + 1);\n        setYear(newDay.getFullYear());\n    }\n\n    const dayClicked = (event, date) =>\n    {\n        const newDay = new Date(date);\n        const dayofWeek = newDay.getDay();\n        setFirstDayofWeek(new Date(newDay.getTime() - ( dayofWeek * 86400000)));\n        setDay(newDay);\n        setMonth(newDay.getMonth() + 1);\n        setYear(newDay.getFullYear());\n        setSeletedTab('day');\n        setMode('day');\n    }\n\n    const getContentFromMode = (_mode) => {\n        if (_mode === 'month')\n        {\n            return (\n                <MonthView dayClicked={dayClicked} month={month} year={year}/>    \n            );\n        }    \n        else if (_mode === 'week')\n        {\n            return (\n                    <WeekView dayClicked={dayClicked} dates={weekDates}/>\n            );\n            \n        }\n        else if (_mode === 'day')\n        {\n            return (\n                <DayView date={day}/>\n            );\n        }\n    }\n\n    const getCalendarTitleFromMode = (_mode) => {\n        if (_mode === 'month')\n        {\n            return (\n                <span className={classes.title}> {`${monthNames[month - 1]} ${year}`} </span>   \n            );\n        }    \n        else if (_mode === 'week')\n        {\n            const endOfWeek = new Date(firstDayofWeek.getTime() + ( 6 * 86400000));\n            let endofWeekStr = '';\n            if (endOfWeek.getMonth() === firstDayofWeek.getMonth())\n            {\n                endofWeekStr = dateformat(endOfWeek,'d');\n            }else\n            {\n                endofWeekStr = dateformat(endOfWeek,'mmm d');\n            }\n\n            return (\n                <span className={classes.title}> {`${dateformat(firstDayofWeek,'mmm d')} - ${endofWeekStr}, ${year}`} </span>\n            );\n            \n        }\n        else if (_mode === 'day')\n        {\n            return (\n                <span className={classes.title}> {`${dateformat(day,'mmmm d, yyyy')}`} </span>\n            );\n        }\n    }\n\n\n    const handleTabChanged = (event, value) => {\n        if (value && value.length)\n        {\n          setSeletedTab(value);\n          setMode(value);\n        }\n    };\n\n    const getPrevButtonTitle = (_mode) =>\n    {\n        return `Previuos ${mode}`;\n    }\n\n    const getNextButtonTitle = (_mode) =>\n    {\n        return `Next ${mode}`;\n    }\n\n    const clinicClicked = (clinic) =>\n    {\n        if (state.selectedClinics?.findIndex(e => e === clinic) >= 0 )\n        {\n            setState(state => ({...state, selectedClinics :state.selectedClinics.filter(e => e !== clinic)}));\n        }else\n        {\n            setState(state => ({...state, selectedClinics : [...state.selectedClinics, clinic]}));\n        }\n    }\n\n    const getClinicGuide = () =>\n    {\n        return (\n            <div style={{marginBottom:\"10px\"}}>\n               <Grid container spacing={1}>\n                   {Clinics.map( item => (\n                       <Grid item>\n                           <div \n                                style={state.selectedClinics?.findIndex(e => e === item.clinic) >= 0 ? {border:`1px solid ${item.color}`, backgroundColor:`${item.color}`, color:\"#fff\" ,fontSize:\"0.85rem\", fontWeight:\"500\", padding:\"5px\", width:\"150px\" , textAlign:\"center\", cursor:\"pointer\", borderRadius:\"4px\"}   : {border:`1px solid ${item.color}`, color:`${item.color}`, fontSize:\"0.85rem\", fontWeight:\"500\", padding:\"5px\", width:\"150px\", textAlign:\"center\", cursor:\"pointer\", borderRadius:\"4px\"}}\n                                onClick= {() => clinicClicked(item.clinic)}   \n                                > \n                               {item.clinic}\n                           </div>\n                        </Grid>\n                   ))\n                   }\n               </Grid>\n            </div>\n        )\n    }\n\n    return (\n        <React.Fragment>\n\n            {getClinicGuide()}\n\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"space-between\"\n            alignItems=\"center\"\n            style= {{marginBottom: \"10px\", marginTop: \"0px\"}}\n            >  \n\n            <Grid item md={3}>\n                <div  style={{display:\"flex\", alignItems: \"flex-start\", justifyContent: \"flex-start\" , paddingLeft: \"10px\"}}>\n                    <Tooltip title={getPrevButtonTitle(mode)} placement=\"bottom-start\">\n                        <IconButton \n                                color=\"default\" \n                                aria-label=\"prev\"\n                                onClick = {handlePrevButton}\n                                >\n                            <NavigateBeforeIcon style={{fontSize: '2rem'}}/>\n                        </IconButton>\n                    </Tooltip>\n\n                    <Tooltip title={getNextButtonTitle(mode)} placement=\"bottom-end\">\n                        <IconButton \n                                color=\"default\" \n                                aria-label=\"next\"\n                                onClick = {handleNextButton}\n                                >\n                            <NavigateNextIcon style={{fontSize: '2rem'}}/>\n                        </IconButton>\n                    </Tooltip>\n\n                    <Button style={{marginTop: \"11px\", marginLeft: \"10px\"}} onClick={goToday} variant=\"outlined\"> Today </Button>\n                </div>\n\n            </Grid>\n\n            <Grid item md={6}>\n\n                    <Grid\n                        container\n                        direction=\"row\"\n                        justify=\"center\"\n                        alignItems=\"flex-end\"\n                        spacing = {3}\n                        >\n                            <Grid item>\n                                    {getCalendarTitleFromMode(mode)}\n                            </Grid>\n                            {mode === 'day' && (\n                                        <Grid item>\n                                                <TextField\n                                                    variant=\"standard\"\n                                                    style={{marginBottom : \"5px\"}}\n                                                    value={filter}\n                                                    onChange={filterChanged}\n                                                    margin=\"normal\"\n                                                    size=\"small\"\n                                                    id=\"filter\"\n                                                    label=\"Filter\"\n                                                    name=\"filter\"\n                                                    autoComplete=\"off\"\n                                                    InputProps={{\n                                                        endAdornment : \n                                                            <InputAdornment position=\"end\">\n                                                                <Tooltip title=\"Clear\">\n                                                                            <IconButton\n                                                                            aria-label=\"remove filter\"\n                                                                            onClick={() => removeFilter()}\n                                                                            onMouseDown={() => removeFilter()}\n                                                                        >\n                                                                            <CloseIcon/>\n                                                                        </IconButton>\n                                                                </Tooltip>\n                                                            \n                                                            </InputAdornment>\n                                                          \n                                                    }}\n                                                   \n                                                />\n                                        </Grid>\n                            )}\n                           \n                    </Grid>\n                \n            </Grid>\n\n            <Grid item md={3}>\n                <div  style={{display:\"flex\", alignItems: \"flex-end\", justifyContent: \"flex-end\", paddingRight: \"10px\" }}>\n                    <ToggleButtonGroup\n                        value={selectedTab}\n                        exclusive\n                        onChange={handleTabChanged}\n                        aria-label=\"select view mode\"\n                    >\n                        <ToggleButton style={selectedTab === 'month' ? {width: \"80px\", color: \"#3f51b5\", backgroundColor: \"#ebedf7\" } : {width: \"80px\"}} value=\"month\" aria-label=\"month view\">\n                                month\n                        </ToggleButton>\n                        <ToggleButton style={selectedTab === 'week' ? {width: \"80px\", color: \"#3f51b5\", backgroundColor: \"#ebedf7\"} : {width: \"80px\"}}  value=\"week\" aria-label=\"week view\">\n                                week\n                        </ToggleButton>\n                        <ToggleButton style={selectedTab === 'day' ? {width: \"80px\", color: \"#3f51b5\", backgroundColor: \"#ebedf7\"} : {width: \"80px\"}} value=\"day\" aria-label=\"day view\">\n                                day\n                        </ToggleButton>\n                    </ToggleButtonGroup>\n                </div>\n            </Grid>\n\n           </Grid> \n\n             {getContentFromMode(mode)}\n\n        </React.Fragment>\n\n\n    );\n\n}","import React, { useEffect, useRef, useState } from 'react';\nimport { DataGrid } from '@material-ui/data-grid';\nimport { Button, Checkbox, CircularProgress, Dialog, DialogContent, DialogTitle, Divider, FormControl, FormControlLabel, Grid, Icon, InputLabel, LinearProgress, Link, makeStyles, MenuItem, Paper, Select, SvgIcon, Switch, TextField, Tooltip } from '@material-ui/core';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport { IconButton } from '@material-ui/core';\nimport CheckIcon from '@material-ui/icons/Check';\nimport CloseIcon from '@material-ui/icons/Close';\nimport GlobalState from '../GlobalState';\nimport { getMenuIndex } from '../MenuList';\nimport { FormatDateFromString, FormatDateFromStringShortYear } from './DateFormatter';\nimport AccessibilityIcon from '@material-ui/icons/Accessibility';\n\nimport SearchIcon from '@material-ui/icons/Search';\nimport BookingDialog from './BookingDialog';\nimport AddIcon from '@material-ui/icons/Add';\n\nimport NewReleasesIcon from '@material-ui/icons/NewReleases';\nimport HistoryIcon from '@material-ui/icons/History';\nimport TimelineIcon from '@material-ui/icons/Timeline';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport AutorenewIcon from '@material-ui/icons/Autorenew';\nimport LiveTvIcon from '@material-ui/icons/LiveTv';\nimport PlaylistAddCheckIcon from '@material-ui/icons/PlaylistAddCheck';\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport HourglassEmptyIcon from '@material-ui/icons/HourglassEmpty';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faFileExcel } from \"@fortawesome/free-solid-svg-icons\";\nimport Draggable from 'react-draggable';\n\nimport * as dateformat from 'dateformat';\n\nimport DateFnsUtils from '@date-io/date-fns';\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardTimePicker,\n  KeyboardDatePicker,\n} from '@material-ui/pickers';\n\nimport BusinessIcon from '@material-ui/icons/Business';\nimport CreditCardIcon from '@material-ui/icons/CreditCard';\nimport LocalAtmIcon from '@material-ui/icons/LocalAtm';\n\n\nimport ReactHTMLTableToExcel from 'react-html-table-to-excel';\nimport PriceCalculator from './PriceCalculator';\nimport { corporates } from './Corporates';\nimport PatientService from './services/PatientService';\nimport PatientDialog from './PatientDialog';\nimport { set } from 'date-fns/esm';\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    marginTop: theme.spacing(0),\n    marginBottom: theme.spacing(1),\n\n  },\n\n  refreshButton: {\n    marginLeft: theme.spacing(2),\n  },\n\n  checkIcon: {\n    color: \"green\"\n  },\n\n  closeIcon: {\n    color: \"red\"\n  },\n\n  RefLink: {\n    cursor: \"pointer\"\n  },\n\n  BookedLabel: {\n    backgroundColor: \"#606060\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  PatientAttendedLabel: {\n    backgroundColor: \"#0066aa\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  SampleTakenLabel: {\n    backgroundColor: \"#0066cc\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  ReportSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  ReportCertSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  PositiveLabel: {\n    backgroundColor: \"red\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  HideNowRows: {\n    position: \"absolute\",\n    top: \"40%\",\n    left: \"40%\",\n    width: \"600px\",\n    height: \"300px\",\n    backgroundColor: \"#fafafa\",\n    color: \"#111\",\n    zIndex: \"1000\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyItems: \"center\"\n  },\n\n  ExportToExcelButton:\n  {\n    // marginBottom : \"20px\",\n    color: \"#2f942e\",\n    borderColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"#fafffa\",\n      borderColor: \"#2f942e\",\n    },\n    textDecoration: \"none !important\",\n\n  },\n\n  ExportToExcelButtonInline:\n  {\n    // marginBottom : \"20px\",\n    color: \"#2f942e\",\n    borderColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"#fafffa\",\n      borderColor: \"#2f942e\",\n    },\n    textDecoration: \"none !important\",\n    cursor: \"pointer\",\n    padding: \"10px\"\n\n  },\n\n  table: {\n    width: \"100%\",\n    border: \"1px solid #ddd\",\n    borderCollapse: \"collapse\",\n  },\n\n  th: {\n    border: \"1px solid #ddd\",\n    borderCollapse: \"collapse\",\n    verticalAlign: \"middle\",\n    fontcolor: \"#555\",\n    fontWeight: \"400\",\n    fontSize: \"15px\",\n    paddingTop: \"5px\",\n    paddingBottom: \"5px\",\n    width: \"14%\",\n    paddingLeft: \"5px\",\n  },\n\n  td: {\n    border: \"1px solid #ddd\",\n    borderCollapse: \"collapse\",\n    verticalAlign: \"middle\",\n    paddingLeft: \"5px\",\n  },\n\n  topSelect: {\n    margin: theme.spacing(1),\n    minWidth: 80,\n  },\n\n  notifyIcon: {\n    width: \"16px\",\n    height: \"16px\",\n    borderRadius: \"50%\",\n    backgroundColor: \"rgb(220, 0, 78)\",\n    marginLeft: \"10px\"\n  }\n\n}));\n\nconst getTableTitle = (str) => {\n\n  if (str === 'today') {\n    return `Today's Bookings`;\n  } else if (str === 'old') {\n    return `Old Bookings`;\n  } else if (str === 'future') {\n    return `Future Bookings`;\n  } else if (str === 'recent') {\n    return `Recent Bookings`;\n  } else if (str === 'live') {\n    return `Live Bookings`;\n  } else if (str === 'completed') {\n    return `Completed Bookings`;\n  } else if (str === 'positive') {\n    return `Positive Results`;\n  } else if (str === 'deleted') {\n    return `Archived Records`;\n  } else if (str === 'late') {\n    return `40 Hours Late`;\n  }\n\n  else {\n    return `Patients`;\n  }\n\n}\n\nconst getTableIcon = (str) => {\n\n  if (str === 'today') {\n    return <NewReleasesIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else if (str === 'old') {\n    return <HistoryIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else if (str === 'future') {\n    return <TimelineIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else if (str === 'recent') {\n    return <AutorenewIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else if (str === 'live') {\n    return <LiveTvIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else if (str === 'completed') {\n    return <PlaylistAddCheckIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else if (str === 'positive') {\n    return <AddCircleOutlineIcon style={{ fontSize: \"2.2rem\" }} />\n  } else if (str === 'deleted') {\n    return <DeleteIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else if (str === 'late') {\n    return <HourglassEmptyIcon style={{ fontSize: \"2.2rem\" }} />;\n  }\n\n  else {\n    return <AccessibilityIcon style={{ fontSize: \"2.2rem\" }} />;\n  }\n\n}\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'}>\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nexport default function PatientsTable(props) {\n\n  const classes = useStyles();\n\n\n\n  var columns = [\n    {\n      field: \"_id\",\n      headerName: \"Patient ID\",\n      width: 150,\n      renderCell: (params) => {\n        return (\n          <React.Fragment>\n            <IconButton\n              color=\"primary\"\n              onClick={(event) => openDetailsDialog(event, params.value)}\n            >\n              <SearchIcon />\n            </IconButton>\n\n            <span\n              style={{\n                color: \"#333\",\n                fontWeight: \"600\",\n                fontSize: \"0.8rem\",\n              }}\n            >\n              {params.getValue(\"patientID\")}\n            </span>\n          </React.Fragment>\n        );\n      },\n    },\n    { field: 'name', headerName: 'Name', width: 150 },\n    { field: 'surname', headerName: 'Surname', width: 150 },\n    {\n      field: 'birthDate', headerName: 'DOB', width: 150, valueFormatter: (params) => {\n        return FormatDateFromString(params.value);\n      },\n    },\n    { field: 'email', headerName: 'Email', width: 200 },\n    { field: 'homeTel', headerName: 'Home Tel', width: 150 },\n    { field: 'mobileTel', headerName: 'Mobile Tel', width: 150 },\n    { field: 'postCode', headerName: 'Postcode', width: 300 },\n    { field: 'address', headerName: 'Address', width: 300 },\n\n  ];\n\n\n  const [state, setState] = React.useContext(GlobalState);\n\n  const [data, setData] = React.useState({ bookings: [], cachedBookings: [], isFetching: true });\n\n  const [selectedRow, setSelectedRow] = React.useState(null);\n\n  const [selectedBooking, setSelectedBooking] = React.useState(null);\n  const [seeDetailsDialogOpen, setSeeDetailsDialogOpen] = React.useState(false);\n\n  const [corporate, setCorporate] = useState(corporates[0]);\n  const corporateChanged = (event) => {\n    setCorporate(event.target.value);\n  }\n\n\n  const [filter, setFilter] = React.useState('');\n\n\n  const lastPromise = useRef();\n\n  const formatTimeStamp = (timeStamp) => {\n    const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\n    const timeStampStr = dateformat(timeStamp, 'yyyy-mm-dd');\n    if (todayStr === timeStampStr) {\n      return dateformat(timeStamp, \"'Today', h:MM:ss TT\");\n    }\n    else {\n      return dateformat(timeStamp, \"mmm dS, h:MM:ss TT\");\n    }\n  }\n\n  const loadData = () => {\n    var api = PatientService.getAllPatients;\n\n    if (props.date === 'deleted') {\n      api = PatientService.getDeletedPatients;\n    }\n\n    setData({ bookings: [], cachedBookings: [], isFetching: true });\n\n    // console.log(props)\n\n    const currentPromise = api().then((res) => {\n      // console.log(res)\n      for (var i = 0; i < res.data.length; i++) {\n        res.data[i] = { ...res.data[i], id: i + 1 }\n      }\n      setData({ bookings: [...res.data], cachedBookings: [...res.data], isFetching: false });\n      // return res.data;\n    }).catch(err => {\n      console.error(err)\n    })\n\n    // lastPromise.current = currentPromise;\n\n    // currentPromise.then(\n    //   result => {\n    //     if (currentPromise === lastPromise.current) {\n    //       setData({bookings: [...result], cachedBookings: [...result], isFetching: false});\n    //       setPage(1);\n    //     }\n    //   },\n    //   e => {\n    //     if (currentPromise === lastPromise.current) {\n    //         console.error(e);\n    //         setData({bookings: data.bookings, cachedBookings: data.cachedBookings, isFetching: false});\n    //     }\n    //   });\n\n  }\n\n  useEffect(() => {\n    loadData()\n  },\n    [props.date]);\n\n\n\n\n  useEffect(() => {\n\n    if (filter && filter.trim().length > 0) {\n      var filteredData = data.cachedBookings.filter((element) =>\n\n        (element.name?.toLowerCase().indexOf(filter.toLowerCase()) >= 0) ||\n        (element.surname?.toLowerCase().indexOf(filter.toLowerCase()) >= 0) ||\n        ((element.name + ' ' + element.surname)?.toLowerCase().indexOf(filter.toLowerCase()) >= 0)\n\n\n\n      );\n\n\n      setData({ bookings: [...filteredData], cachedBookings: data.cachedBookings, isFetching: false });\n    } else {\n      setData({ bookings: [...data.cachedBookings], cachedBookings: data.cachedBookings, isFetching: false });\n    }\n  },\n    [filter]);\n\n\n  useEffect(() => {\n\n    loadData()\n\n  }, [state.patientDialogDataChanged]);\n\n\n  const handleCloseSeeDetaisDialog = () => {\n    setSelectedBooking(null);\n    setSeeDetailsDialogOpen(false);\n  }\n\n  const openDetailsDialog = (event, id) => {\n    const patient = data.bookings.find(element => element._id === id);\n    if (patient) {\n      setSelectedPatient(patient);\n      setPatientDialogTitle(`${patient.name.toUpperCase()} ${patient.surname.toUpperCase()}`)\n      setPatientDialogSaveButtonText(\"Save Changes\")\n      setPatientDialogOpen(true)\n    }\n  }\n\n  const refreshClicked = (event) => {\n    setFilter('');\n    loadData()\n  }\n\n  const filterChanged = (event) => {\n    setFilter(event.target.value);\n  }\n\n  const handleSelectionChanged = (newSelection) => {\n    if (newSelection.length > 0) {\n      setSelectedRow(newSelection.rows[0]);\n    }\n\n  }\n\n  const [page, setPage] = React.useState(1);\n\n\n  const registerNewPatientClicked = () => {\n    setSelectedPatient(null)\n    setPatientDialogTitle('Register New Patient')\n    setPatientDialogSaveButtonText(\"Save\")\n    setPatientDialogOpen(true)\n  }\n\n  const [selectedPatient, setSelectedPatient] = React.useState(null)\n  const [patientDialogOpen, setPatientDialogOpen] = React.useState(false)\n  const [patientDialogTitle, setPatientDialogTitle] = React.useState('')\n  const [patientDialogSaveButtonText, setPatientDialogSaveButtonText] = React.useState('')\n\n\n  const handleClosePatientDialog = () => {\n    setPatientDialogOpen(false)\n  }\n\n\n  return (\n    <React.Fragment>\n      {data.isFetching && (\n        <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\n          <LinearProgress color=\"primary\" />\n        </div>\n      )}\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"space-between\"\n        alignItems=\"flex-end\"\n      >\n        <Grid item md={4}>\n          <div style={{ textAlign: \"left\", paddingLeft: \"10px\" }}>\n            <Grid\n              container\n              direction=\"row\"\n              justify=\"flex-start\"\n              alignItems=\"center\"\n            >\n              <Grid item>\n                <span style={{ paddingRight: \"15px\", color: \"#555\" }}>\n                  {\" \"}\n                  {getTableIcon(props.date)}{\" \"}\n                </span>\n              </Grid>\n              <Grid item>\n                <span\n                  style={{\n                    fontSize: \"1.4rem\",\n                    fontWeight: \"600\",\n                    color: \"#444\",\n                  }}\n                >\n                  {\" \"}\n                  {getTableTitle(props.date)}{\" \"}\n                </span>\n              </Grid>\n              <Grid item>\n                <Tooltip title=\"Refresh\" placement=\"right\">\n                  <IconButton\n                    color=\"primary\"\n                    className={classes.refreshButton}\n                    onClick={refreshClicked}\n                  >\n                    <RefreshIcon />\n                  </IconButton>\n                </Tooltip>\n              </Grid>\n            </Grid>\n          </div>\n        </Grid>\n\n        <Grid item md={3}>\n          <div style={{ paddingBottom: \"10px\" }}>\n            <Button\n              // className={classes.ExportToExcelButton}\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={registerNewPatientClicked}\n              startIcon={\n                <AddIcon />\n              }\n            >\n              Register new Patient\n              </Button>\n          </div>\n        </Grid>\n\n        {data.isFetching && <div className={classes.HideNowRows}></div>}\n\n        <Grid item md={3}>\n          <TextField\n            variant=\"standard\"\n            value={filter}\n            onChange={filterChanged}\n            margin=\"normal\"\n            size=\"small\"\n            id=\"filter\"\n            label=\"Filter\"\n            name=\"filter\"\n            autoComplete=\"off\"\n          />\n        </Grid>\n\n      </Grid>\n\n      <div style={{ height: 700, width: \"100%\" }}>\n        <DataGrid\n          rows={data.bookings}\n          columns={columns}\n          autoPageSize\n          page={page}\n          onPageChange={(params) => {\n            setPage(params.page);\n          }}\n          onSelectionChange={handleSelectionChanged}\n        />\n      </div>\n\n\n      <BookingDialog\n        booking={selectedBooking}\n        open={seeDetailsDialogOpen && selectedBooking && selectedBooking.fullname}\n        onClose={handleCloseSeeDetaisDialog}\n      />\n\n      <PatientDialog\n        patient={selectedPatient}\n        open={patientDialogOpen}\n        handleClose={handleClosePatientDialog}\n        title={patientDialogTitle}\n        saveButtonText={patientDialogSaveButtonText}\n      />\n\n    </React.Fragment>\n  );\n}","import React, { useEffect, useRef, useState } from \"react\";\nimport BookService from \"./services/BookService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {\n    AppBar,\n    Backdrop,\n    Button,\n    Checkbox,\n    CircularProgress,\n    DialogActions,\n    DialogContentText,\n    Divider,\n    FormControlLabel,\n    Grid,\n    IconButton,\n    InputAdornment,\n    InputLabel,\n    Link,\n    makeStyles,\n    MenuItem,\n    Select,\n    Switch,\n    TextField,\n    Toolbar,\n    Tooltip,\n} from \"@material-ui/core\";\nimport GlobalState from \"./../GlobalState\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\n\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Draggable from \"react-draggable\";\nimport Paper from \"@material-ui/core/Paper\";\n\nimport Alert from \"@material-ui/lab/Alert\";\n\nimport PropTypes from \"prop-types\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport Box from \"@material-ui/core/Box\";\n\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport NumberFormat from \"react-number-format\";\n\nimport AccessAlarmsIcon from '@material-ui/icons/AccessAlarms';\nimport DateField from \"./DateField\";\n\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\nimport CloseIcon from '@material-ui/icons/Close';\nimport Slide from '@material-ui/core/Slide';\nimport templateService from \"./services/EmailTemplateService\";\nimport dateFormat from \"dateformat\";\n\nimport SaveIcon from '@material-ui/icons/Save';\n\n\nimport { EditorState, convertToRaw, convertFromHTML, ContentState } from 'draft-js';\nimport { Editor } from 'react-draft-wysiwyg';\nimport draftToHtml from 'draftjs-to-html';\nimport htmlToDraft from 'html-to-draftjs';\nimport { htmlToText } from 'html-to-text';\nimport { stateFromHTML } from 'draft-js-import-html';\nimport \"./react-draft-wysiwyg.css\";\nimport TemplateService from \"./services/EmailTemplateService\";\n\nimport AddIcon from '@material-ui/icons/Add';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`vertical-tabpanel-${index}`}\n            aria-labelledby={`vertical-tab-${index}`}\n            {...other}\n            style={{ width: \"100%\" }}\n        >\n            {value === index && (\n                <div style={{ padding: \"20px\", width: \"100%\" }}>\n                    {children}\n                </div>\n            )}\n        </div>\n    );\n}\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n    return {\n        id: `vertical-tab-${index}`,\n        'aria-controls': `vertical-tabpanel-${index}`,\n    };\n}\n\nconst useStyles = makeStyles((theme) => ({\n    appBar: {\n        position: 'relative',\n    },\n    title: {\n        marginLeft: theme.spacing(2),\n        flex: 1,\n    },\n\n    root: {\n        paddingTop: \"8px\",\n        flexGrow: 1,\n        backgroundColor: theme.palette.background.paper,\n        display: 'flex',\n        height: 224,\n    },\n    tabs: {\n        borderRight: `1px solid ${theme.palette.divider}`,\n    },\n\n    backdrop: {\n        zIndex: theme.zIndex.drawer + 5,\n        color: \"#fff\",\n    },\n\n    titleCenter: {\n        width: \"100%\",\n        textAlign: \"center\",\n        fontSize: \"1.1rem\",\n        color: theme.palette.primary.main,\n        fontWeight: \"500\",\n        borderBottom: `2px dashed ${theme.palette.primary.main}`\n    },\n\n    eyeText: {\n        width: \"100%\",\n        textAlign: \"left\",\n        fontSize: \"1.1rem\",\n        color: theme.palette.primary.main,\n        fontWeight: \"500\",\n        paddingTop: \"15px\"\n    }\n\n}));\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport default function EmailTemplateDialog(props) {\n    const classes = useStyles();\n\n    const [state, setState] = React.useContext(GlobalState);\n\n    const [template, settemplate] = React.useState({ formData: {} })\n    const [saving, setSaving] = React.useState(false);\n\n\n    const [templateIDError, settemplateIDError] = React.useState(false)\n    const [subjectError, setSubjectError] = React.useState(false)\n\n    const [nameError, setNameError] = React.useState(false)\n    const [surnameError, setSurnameError] = React.useState(false)\n    const [birthDateError, setBirthDateError] = React.useState(false)\n\n    const [templateRepeated, settemplateRepeated] = React.useState(false)\n\n    const [clinicError, setClinicError] = React.useState(false)\n\n    const [value, setValue] = React.useState(0);\n\n    const [history, setHistory] = React.useState([]);\n    const [backupFormData, setBackUpFormData] = React.useState(null);\n\n    const [openDeleteDialog, setOpenDeleteDialog] = React.useState(false)\n\n    const [variable, setVariable] = React.useState({})\n    const [variableErrors, setVariableErrors] = React.useState({})\n\n\n    // const [editorState, setEditorState] = React.useState(EditorState.createWithContent(stateFromHTML(`<p>...</p>`)))\n    const [editorState, setEditorState] = React.useState(EditorState.createEmpty())\n\n    const onEditorStateChange = (_editorState) => {\n        setEditorState(_editorState)\n        const html = draftToHtml(convertToRaw(editorState.getCurrentContent()))\n        settemplate({\n            ...template,\n            html: html,\n            rawText: htmlToText(html),\n        })\n    }\n\n\n    const handleCloseDeleteDialog = () => {\n        setOpenDeleteDialog(false)\n    }\n\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    useEffect(() => {\n        if (props.open) {\n\n            if (props.template) {\n                let parameters = []\n                try {\n                    parameters = JSON.parse(props.template.parameters)\n                }\n                catch (err) { }\n\n                settemplate({ ...props.template, parameters: parameters })\n                const html = props.template.html\n                const contentBlock = htmlToDraft(html);\n                if (contentBlock) {\n                    const contentState = ContentState.createFromBlockArray(\n                        contentBlock.contentBlocks\n                    );\n                    const _editorState = EditorState.createWithContent(contentState);\n                    setEditorState(_editorState)\n                }\n            }\n            else {\n                const html = '<p style=\"font-size:16px\">Please delete this and write your <strong>Text</strong> here ... 😀</p>';\n                const contentBlock = htmlToDraft(html);\n                if (contentBlock) {\n                    const contentState = ContentState.createFromBlockArray(\n                        contentBlock.contentBlocks\n                    );\n                    const _editorState = EditorState.createWithContent(contentState);\n                    setEditorState(_editorState)\n                    settemplate({\n                        ...template,\n                        parameters: [],\n                        html: html,\n                        rawText: htmlToText(html),\n                    })\n                }\n            }\n        }\n    }, [props.template, props.open])\n\n\n\n    const handleClose = () => {\n        props.handleClose();\n        setValue(0)\n        settemplate({})\n        settemplateIDError(false)\n        setNameError(false)\n        setSurnameError(false)\n        settemplateRepeated(false)\n        settemplatenameuser('')\n        settemplatenameusererror(false)\n        setVariable({})\n        setVariableErrors({})\n        setSubjectError(false)\n        setClinicError(false)\n    };\n\n    const saveClicked = async () => {\n\n        if (!validatetemplate()) {\n            return\n        }\n\n        try {\n            settemplateRepeated(false)\n            setSaving(true)\n            const parameters = JSON.stringify(template.parameters)\n            if (props.template) {\n                const res = await templateService.updateTemplate({ id: template._id, template: { ...template, parameters: parameters } })\n                setSaving(false)\n                if (res.data.status === \"OK\") {\n                    setState(state => ({ ...state, templateDialogDataChanged: !state.templateDialogDataChanged }))\n                    handleClose();\n                }\n            } else {\n                const res = await templateService.registerNewTemplate({ template: { ...template, parameters: parameters } })\n                setSaving(false)\n                if (res.data.status === \"OK\") {\n                    setState(state => ({ ...state, templateDialogDataChanged: !state.templateDialogDataChanged }))\n                    handleClose();\n                } else if (res.data.status === \"FAILED\" && res.data.error === \"Repeated template!\") {\n                    settemplateIDError(true)\n                    settemplateRepeated(true)\n                    setValue(0)\n                }\n            }\n        }\n        catch (err) {\n            setSaving(false)\n            console.error(err)\n        }\n    }\n\n    const deleteClicked = async () => {\n\n        if (templatenameuser !== props.template.templateID) {\n            settemplatenameusererror(true)\n            return\n        }\n\n        setOpenDeleteDialog(false)\n\n        setSaving(true)\n        try {\n            await templateService.deleteTemplate(props.template._id)\n            setSaving(false)\n            setState((state) => ({\n                ...state,\n                templateDialogDataChanged: !state.templateDialogDataChanged\n                    ? true\n                    : false,\n            }));\n            handleClose();\n        }\n        catch (err) {\n            console.error(err)\n            setSaving(false)\n        }\n    }\n\n\n\n    const validatetemplate = () => {\n\n        var error = false\n        if (!template.templateID || template.templateID.trim().length === 0) {\n            error = true\n            settemplateIDError(true)\n            setValue(0)\n\n        }\n\n        if (!template.html || template.html.length === 0) {\n            error = true\n            setNameError(true)\n            setValue(0)\n\n        }\n\n        if (!template.rawText || template.rawText.length === 0) {\n            error = true\n            setNameError(true)\n        }\n\n        if (!template.subject || template.subject.length === 0) {\n            error = true\n            setSubjectError(true)\n            setValue(0)\n\n        }\n\n        if (template.sendWhenBookedCalendar && !template.clinic) {\n            error = true\n            setClinicError(true)\n            setValue(2)\n        }\n\n        return !error\n    }\n\n    const formatDate = (date) => {\n        return dateFormat(date, \"dd-mm-yyyy , HH:MM:ss\")\n    }\n\n    const [selectedVersion, setSelectedVersion] = React.useState(0)\n\n    const [templatenameuser, settemplatenameuser] = React.useState('')\n    const [templatenameusererror, settemplatenameusererror] = React.useState(false)\n\n    const addVariableCliced = () => {\n        setVariableErrors({})\n        if (!ValidateVariable()) {\n            return\n        }\n\n        const _variable = {\n            keyword: variable.keyword,\n            builtinValue: variable.builtinValue,\n            defaultValue: variable.defaultValue\n        }\n\n        settemplate({ ...template, parameters: [...template.parameters, _variable] })\n        setVariable({})\n    }\n\n    const ValidateVariable = () => {\n        var error = false\n        if (!variable.keyword) {\n            setVariableErrors((prev) => prev = { ...prev, keywordError: true })\n            error = true\n        }\n\n        if (variable.keyword) {\n            if (template.parameters.find(e => e.keyword === variable.keyword)) {\n                setVariableErrors((prev) => prev = { ...prev, keywordError: true })\n                error = true\n            }\n        }\n\n\n        if (!variable.builtinValue) {\n            setVariableErrors((prev) => prev = { ...prev, builtinValueError: true })\n            error = true\n        }\n\n\n        return !error\n    }\n\n    const deleteParameter = (_keyword) => {\n        settemplate({ ...template, parameters: template.parameters.filter(e => e.keyword !== _keyword) })\n    }\n\n    return (\n        <React.Fragment>\n            <React.Fragment>\n                <Dialog fullScreen open={props.open} onClose={handleClose} TransitionComponent={Transition}>\n                    <AppBar className={classes.appBar} style={(selectedVersion > 0 && history && history.length > 0) ? { backgroundColor: \"#777\" } : {}} color=\"primary\">\n                        <Toolbar>\n                            <IconButton edge=\"start\" color=\"inherit\" onClick={handleClose} aria-label=\"close\">\n                                <CloseIcon />\n                            </IconButton>\n                            <Typography variant=\"h6\" className={classes.title}>\n                                {props.title}\n                            </Typography>\n\n\n                            <Button startIcon={<SaveIcon />} variant=\"contained\" color=\"secondary\" onClick={saveClicked} disabled={selectedVersion > 0 && history && history.length > 0}>\n                                {props.saveButtonText}\n                            </Button>\n                        </Toolbar>\n\n\n                    </AppBar>\n\n                    <div className={classes.root}>\n                        <Tabs\n                            orientation=\"vertical\"\n                            variant=\"scrollable\"\n                            value={value}\n                            onChange={handleChange}\n                            aria-label=\"Vertical tabs example\"\n                            indicatorColor=\"secondary\"\n                            textColor=\"secondary\"\n                            className={classes.tabs}\n                        >\n                            <Tab label=\"Email Text\" {...a11yProps(0)} />\n                            <Tab label={`Parameters`} {...a11yProps(1)} />\n                            <Tab label={`Settings`} {...a11yProps(2)} />\n\n                        </Tabs>\n                        <TabPanel value={value} index={0}>\n                            <Grid container spacing={1}>\n                                <Grid item xs={12}>\n                                    <Grid container spacing={2} alignItems=\"center\">\n                                        <Grid item xs={8}>\n                                            <TextField\n                                                // disabled={props.template}\n                                                name=\"templatename\"\n                                                id=\"templatename\"\n                                                label=\"Template Name\"\n                                                fullWidth\n                                                required\n                                                helperText={templateRepeated ? '* This Name is already assigned to another template! Please choose a different name.' : '* Please give a unique name to each templete.'}\n                                                error={templateIDError}\n                                                value={template.templateID || ''}\n                                                onChange={(event) => {\n                                                    settemplate({ ...template, templateID: event.target.value })\n                                                    settemplateIDError(false)\n                                                }}\n                                                autoComplete=\"none\"\n                                                variant=\"outlined\"\n                                            />\n\n                                        </Grid>\n                                        {props.template && (\n                                            <Grid item xs={4}>\n                                                <Button onClick={() => setOpenDeleteDialog(true)} variant=\"contained\" style={{ backgroundColor: \"#d10202\", color: \"#fff\", marginBottom: \"5px\" }}>\n                                                    Delete This Template\n                                                </Button>\n                                            </Grid>\n                                        )}\n\n                                    </Grid>\n\n                                </Grid>\n                                <Grid item xs={12}>\n                                    <TextField\n                                        name=\"subject\"\n                                        id=\"subject\"\n                                        label=\"Email Subject\"\n                                        fullWidth\n                                        required\n                                        error={subjectError}\n                                        value={template.subject || ''}\n                                        onChange={(event) => {\n                                            settemplate({ ...template, subject: event.target.value })\n                                            setSubjectError(false)\n                                        }}\n                                        autoComplete=\"none\"\n                                        variant=\"outlined\"\n                                    />\n\n                                </Grid>\n                                <Grid item xs={12}>\n                                    <Editor\n                                        autoFocus\n                                        editorState={editorState}\n                                        wrapperClassName=\"demo-wrapper\"\n                                        editorClassName=\"demo-editor\"\n                                        onEditorStateChange={onEditorStateChange}\n                                    />\n                                </Grid>\n                            </Grid>\n                        </TabPanel>\n                        <TabPanel value={value} index={1}>\n                            <Grid container direction=\"column\" spacing={2}>\n                                <Grid item>\n                                    <Grid container direction=\"row\" spacing={1} alignItems=\"bottom\">\n                                        <Grid item xs={3}>\n                                            <TextField\n                                                name=\"keyword\"\n                                                id=\"keyword\"\n                                                label=\"Keyword\"\n                                                fullWidth\n                                                required\n                                                error={variableErrors.keywordError}\n                                                helperText={'This is the TEXT within your email that you want to be replaced by a value'}\n                                                autoComplete=\"none\"\n                                                variant=\"outlined\"\n                                                value={variable.keyword || ''}\n                                                onChange={(event) => setVariable({ ...variable, keyword: event.target.value })}\n                                            />\n                                        </Grid>\n                                        <Grid item xs={3}>\n                                            <FormControl\n                                                error={variableErrors.builtinValueError}\n                                                fullWidth required variant=\"outlined\" className={classes.formControl}>\n                                                <InputLabel id=\"builtinvalueid\"> Value</InputLabel>\n                                                <Select\n                                                    labelId=\"builtinvalueid\"\n                                                    id=\"builtinvalue\"\n                                                    value={variable.builtinValue || null}\n                                                    onChange={(event) => setVariable({ ...variable, builtinValue: event.target.value })}\n                                                    label=\"Built-in Value\"\n                                                >\n                                                    <MenuItem value={'Patient Name'}>Patient Name</MenuItem>\n                                                    <MenuItem value={'Patient Surname'}>Patient Surname</MenuItem>\n                                                    <MenuItem value={'Patient Fullname'}>Patient Fullname</MenuItem>\n                                                    <MenuItem value={'Today Date'}>Today Date</MenuItem>\n                                                    <MenuItem value={'Appointment DateTime'}>Appointment DateTime</MenuItem>\n                                                </Select>\n                                            </FormControl>\n                                        </Grid>\n                                        <Grid item xs={3}>\n                                            <TextField\n                                                name=\"defaultvalue\"\n                                                id=\"defaultvalue\"\n                                                label=\"Default Value\"\n                                                fullWidth\n                                                autoComplete=\"none\"\n                                                helperText={'* This value is used if the variable is empty.'}\n                                                variant=\"outlined\"\n                                                value={variable.defaultValue || ''}\n                                                onChange={(event) => setVariable({ ...variable, defaultValue: event.target.value })}\n\n                                            />\n                                        </Grid>\n                                        <Grid item xs={3}>\n                                            <Button onClick={addVariableCliced} startIcon={<AddIcon />} variant=\"contained\" color=\"primary\" fullWidth style={{ height: \"55px\" }}>\n                                                Add Variable\n                                            </Button>\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n\n                                <Grid item style={{ marginTop: \"20px\", fontWeight: \"500\", height: \"20px\" }}>\n                                    <Divider />\n                                    <Grid container direction=\"row\" spacing={1} alignItems=\"center\">\n                                        <Grid item xs={3}>\n                                            {\"Keyword\"}\n                                        </Grid>\n                                        <Grid item xs={3}>\n                                            {\"Value\"}\n                                        </Grid>\n                                        <Grid item xs={3}>\n                                            {\"Default Value\"}\n                                        </Grid>\n                                        <Grid item xs={3}>\n                                        </Grid>\n                                    </Grid>\n                                    <Divider />\n                                </Grid>\n\n                                {(!template.parameters || template.parameters.length === 0) && (\n                                    <Grid item>\n                                        <div style={{ width: \"80%\", textAlign: \"center\", color: \"#777\", marginTop: \"50px\", fontSize: \"1rem\" }}>\n                                            No Parameters Defined\n                                            </div>\n                                    </Grid>\n                                )}\n\n                                {template.parameters && template.parameters.length > 0 && template.parameters.map((item => (\n                                    <Grid item style={{ marginTop: \"10px\", fontWeight: \"500\", height: \"30px\" }}>\n                                        <Grid container direction=\"row\" spacing={1} alignItems=\"center\">\n                                            <Grid item xs={3}>\n                                                {item.keyword}\n                                            </Grid>\n                                            <Grid item xs={3}>\n                                                {item.builtinValue}\n                                            </Grid>\n                                            <Grid item xs={3}>\n                                                {item.defaultValue}\n                                            </Grid>\n                                            <Grid item xs={3}>\n                                                <Tooltip title=\"Delete Parameter\">\n                                                    <IconButton onClick={() => deleteParameter(item.keyword)}>\n                                                        <DeleteIcon color=\"primary\" />\n                                                    </IconButton>\n                                                </Tooltip>\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                )))}\n                            </Grid>\n                        </TabPanel>\n                        <TabPanel value={value} index={2}>\n                            <div style={{ fontSize: \"1.2rem\", color: \"#777\", fontWeight: \"500\", marginBottom: \"50px\" }}>\n                                Here you can set which emails (and when) should be sent to the patients automatically by the system :\n                             </div>\n                            <Paper elevation={3}>\n                                <Grid container direction=\"column\" spacing={2} style={{ minHeight: \"300px\", padding: \"10px 15px\" }}>\n                                    <Grid item>\n                                        <FormControlLabel\n                                            control={\n                                                <Switch\n                                                    checked={template.sendWhenBookedCalendar}\n                                                    onChange={(e) => { settemplate({ ...template, sendWhenBookedCalendar: e.target.checked }) }}\n                                                    name=\"check-whenbooked\"\n                                                    color=\"primary\"\n                                                />\n                                            }\n                                            label={<span style={template.sendWhenBookedCalendar ? { fontWeight: \"500\", color: \"#333\" } : { color: \"#777\" }}>\n                                                Automatically send this email to the patients when an appointment is booked on the calendar.\n                                                </span>\n                                            }\n                                        />\n                                    </Grid>\n                                    {template.sendWhenBookedCalendar && (\n                                        <React.Fragment>\n                                            <Grid item xs={12}>\n                                                <Grid container alignItems=\"center\" spacing={2}>\n                                                    <Grid item>\n                                                        <div style={{ fontSize: \"1rem\", color: \"#777\", fontWeight: \"500\" }}>\n                                                            Please choose the <strong>clinic</strong> you want this email would be sent for:\n                                                         </div>\n\n                                                    </Grid>\n                                                    <Grid item xs={12} md={4}>\n                                                        <FormControl\n                                                            error={clinicError}\n                                                            fullWidth required variant=\"outlined\" className={classes.formControl}>\n                                                            <InputLabel id=\"clinic\">Select Clinic</InputLabel>\n                                                            <Select\n                                                                labelId=\"clinic\"\n                                                                id=\"clinic-id\"\n                                                                value={template.clinic || null}\n                                                                onChange={(event) => {\n                                                                    settemplate({...template, clinic: event.target.value})\n                                                                    setClinicError(false)\n                                                                }}\n                                                                label=\"Select Clinic\"\n                                                            >\n                                                                <MenuItem value={'All Clinics'}>All Clinics</MenuItem>\n                                                                <MenuItem value={'Virtual Consultation'}>Virtual Consultation</MenuItem>\n                                                                <MenuItem value={'F2F Clinic'}>F2F Clinic</MenuItem>\n                                                                <MenuItem value={'Laser Theatre'}>Laser Theatre</MenuItem>\n                                                                <MenuItem value={'Lens Theatre'}>Lens Theatre</MenuItem>\n                                                                <MenuItem value={'Post Op'}>Post Op</MenuItem>\n                                                                <MenuItem value={'Optometry'}>Optometry</MenuItem>\n\n                                                            </Select>\n                                                        </FormControl>\n\n                                                    </Grid>\n                                                </Grid>\n                                            </Grid>\n                                        </React.Fragment>\n                                    )}\n                                </Grid>\n                            </Paper>\n\n                        </TabPanel>\n\n\n                    </div>\n\n                    <Backdrop\n                        className={classes.backdrop}\n                        open={saving}\n                    >\n                        <CircularProgress color=\"inherit\" />\n                    </Backdrop>\n\n\n                    <Dialog\n                        open={openDeleteDialog}\n                        onClose={handleCloseDeleteDialog}\n                        aria-labelledby=\"alert-dialog-title\"\n                        aria-describedby=\"alert-dialog-description\"\n                    >\n                        <DialogTitle style={{ color: \"#d10202\", fontWeight: \"600\" }} id=\"alert-dialog-title\">\n                            {\"Delete template\"}\n                        </DialogTitle>\n                        <DialogContent>\n                            <DialogContentText\n                                style={{ color: \"#000\", fontWeight: \"500\" }}\n                                id=\"alert-dialog-description\"\n                            >\n                                <Grid container spacing={4}>\n                                    <Grid item xs={12}>\n                                        Are you sure you want to delete this template?\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <TextField\n                                            autoFocus\n                                            name=\"templatenameuser\"\n                                            id=\"templatenameuser\"\n                                            label=\"Template Name\"\n                                            placeholder=\"Please Retype The Template Name\"\n                                            fullWidth\n                                            required\n                                            error={templatenameusererror}\n                                            helperText={`* Please retype the template name you want to be deleted.`}\n                                            value={templatenameuser}\n                                            onChange={(event) => {\n                                                settemplatenameuser(event.target.value)\n                                            }}\n                                            autoComplete=\"none\"\n                                            variant=\"outlined\"\n                                        />\n                                    </Grid>\n                                </Grid>\n                            </DialogContentText>\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={handleCloseDeleteDialog} color=\"default\">\n                                Back\n                                 </Button>\n                            <Button onClick={deleteClicked} variant=\"contained\" style={{ backgroundColor: \"#d10202\", color: \"#fff\" }}>\n                                Yes, Delete this template\n                                 </Button>\n                        </DialogActions>\n                    </Dialog>\n\n\n\n                </Dialog>\n            </React.Fragment>\n        </React.Fragment>\n    );\n}\n","import React, { useEffect, useRef, useState } from 'react';\nimport { DataGrid } from '@material-ui/data-grid';\nimport { Button, Checkbox, CircularProgress, Dialog, DialogContent, DialogTitle, Divider, FormControl, FormControlLabel, Grid, Icon, InputLabel, LinearProgress, Link, makeStyles, MenuItem, Paper, Select, SvgIcon, Switch, TextField, Tooltip } from '@material-ui/core';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport { IconButton } from '@material-ui/core';\nimport CheckIcon from '@material-ui/icons/Check';\nimport CloseIcon from '@material-ui/icons/Close';\nimport GlobalState from '../GlobalState';\nimport { getMenuIndex } from '../MenuList';\nimport { FormatDateFromString, FormatDateFromStringShortYear } from './DateFormatter';\nimport AccessibilityIcon from '@material-ui/icons/Accessibility';\n\nimport SearchIcon from '@material-ui/icons/Search';\nimport BookingDialog from './BookingDialog';\nimport AddIcon from '@material-ui/icons/Add';\n\nimport NewReleasesIcon from '@material-ui/icons/NewReleases';\nimport HistoryIcon from '@material-ui/icons/History';\nimport TimelineIcon from '@material-ui/icons/Timeline';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport AutorenewIcon from '@material-ui/icons/Autorenew';\nimport LiveTvIcon from '@material-ui/icons/LiveTv';\nimport PlaylistAddCheckIcon from '@material-ui/icons/PlaylistAddCheck';\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport HourglassEmptyIcon from '@material-ui/icons/HourglassEmpty';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faFileExcel } from \"@fortawesome/free-solid-svg-icons\";\nimport Draggable from 'react-draggable';\n\nimport * as dateformat from 'dateformat';\n\nimport DraftsIcon from '@material-ui/icons/Drafts';\n\nimport DateFnsUtils from '@date-io/date-fns';\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardTimePicker,\n  KeyboardDatePicker,\n} from '@material-ui/pickers';\n\nimport BusinessIcon from '@material-ui/icons/Business';\nimport CreditCardIcon from '@material-ui/icons/CreditCard';\nimport LocalAtmIcon from '@material-ui/icons/LocalAtm';\n\n\nimport ReactHTMLTableToExcel from 'react-html-table-to-excel';\nimport PriceCalculator from './PriceCalculator';\nimport { corporates } from './Corporates';\nimport templateService from './services/EmailTemplateService';\nimport EmailTemplateDialog from './EmailTemplateDialog';\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    marginTop: theme.spacing(0),\n    marginBottom: theme.spacing(1),\n\n  },\n\n  refreshButton: {\n    marginLeft: theme.spacing(2),\n  },\n\n  checkIcon: {\n    color: \"green\"\n  },\n\n  closeIcon: {\n    color: \"red\"\n  },\n\n  RefLink: {\n    cursor: \"pointer\"\n  },\n\n  BookedLabel: {\n    backgroundColor: \"#606060\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  templateAttendedLabel: {\n    backgroundColor: \"#0066aa\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  SampleTakenLabel: {\n    backgroundColor: \"#0066cc\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  ReportSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  ReportCertSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  PositiveLabel: {\n    backgroundColor: \"red\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  HideNowRows: {\n    position: \"absolute\",\n    top: \"40%\",\n    left: \"40%\",\n    width: \"600px\",\n    height: \"300px\",\n    backgroundColor: \"#fafafa\",\n    color: \"#111\",\n    zIndex: \"1000\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyItems: \"center\"\n  },\n\n  ExportToExcelButton:\n  {\n    // marginBottom : \"20px\",\n    color: \"#2f942e\",\n    borderColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"#fafffa\",\n      borderColor: \"#2f942e\",\n    },\n    textDecoration: \"none !important\",\n\n  },\n\n  ExportToExcelButtonInline:\n  {\n    // marginBottom : \"20px\",\n    color: \"#2f942e\",\n    borderColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"#fafffa\",\n      borderColor: \"#2f942e\",\n    },\n    textDecoration: \"none !important\",\n    cursor: \"pointer\",\n    padding: \"10px\"\n\n  },\n\n  table: {\n    width: \"100%\",\n    border: \"1px solid #ddd\",\n    borderCollapse: \"collapse\",\n  },\n\n  th: {\n    border: \"1px solid #ddd\",\n    borderCollapse: \"collapse\",\n    verticalAlign: \"middle\",\n    fontcolor: \"#555\",\n    fontWeight: \"400\",\n    fontSize: \"15px\",\n    paddingTop: \"5px\",\n    paddingBottom: \"5px\",\n    width: \"14%\",\n    paddingLeft: \"5px\",\n  },\n\n  td: {\n    border: \"1px solid #ddd\",\n    borderCollapse: \"collapse\",\n    verticalAlign: \"middle\",\n    paddingLeft: \"5px\",\n  },\n\n  topSelect: {\n    margin: theme.spacing(1),\n    minWidth: 80,\n  },\n\n  notifyIcon: {\n    width: \"16px\",\n    height: \"16px\",\n    borderRadius: \"50%\",\n    backgroundColor: \"rgb(220, 0, 78)\",\n    marginLeft: \"10px\"\n  }\n\n}));\n\nconst getTableTitle = (str) => {\n\n  if (str === 'today') {\n    return `Today's Bookings`;\n  } else if (str === 'old') {\n    return `Old Bookings`;\n  } else if (str === 'future') {\n    return `Future Bookings`;\n  } else if (str === 'recent') {\n    return `Recent Bookings`;\n  } else if (str === 'live') {\n    return `Live Bookings`;\n  } else if (str === 'completed') {\n    return `Completed Bookings`;\n  } else if (str === 'positive') {\n    return `Positive Results`;\n  } else if (str === 'deleted') {\n    return `Archived Records`;\n  } else if (str === 'late') {\n    return `40 Hours Late`;\n  }\n\n  else {\n    return `Email Templates`;\n  }\n\n}\n\nconst getTableIcon = (str) => {\n\n  if (str === 'today') {\n    return <NewReleasesIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else if (str === 'old') {\n    return <HistoryIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else if (str === 'future') {\n    return <TimelineIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else if (str === 'recent') {\n    return <AutorenewIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else if (str === 'live') {\n    return <LiveTvIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else if (str === 'completed') {\n    return <PlaylistAddCheckIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else if (str === 'positive') {\n    return <AddCircleOutlineIcon style={{ fontSize: \"2.2rem\" }} />\n  } else if (str === 'deleted') {\n    return <DeleteIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else if (str === 'late') {\n    return <HourglassEmptyIcon style={{ fontSize: \"2.2rem\" }} />;\n  }\n\n  else {\n    return <DraftsIcon style={{ fontSize: \"2.2rem\" }} />;\n  }\n\n}\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'}>\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nexport default function EmailTemplatesTable(props) {\n\n  const classes = useStyles();\n\n\n\n  var columns = [\n    {\n      field: \"_id\",\n      headerName: \" \",\n      width: 70,\n      renderCell: (params) => {\n        return (\n          <React.Fragment>\n            <IconButton\n              color=\"primary\"\n              onClick={(event) => openDetailsDialog(event, params.value)}\n            >\n              <SearchIcon />\n            </IconButton>\n          </React.Fragment>\n        );\n      },\n    },\n    { field: 'templateID', headerName: 'Template Name', width: 200 },\n    { field: 'subject', headerName: 'Subject', width: 400 },\n    { field: 'rawText', headerName: 'Email Body', width: 700 },\n  ];\n\n\n  const [state, setState] = React.useContext(GlobalState);\n\n  const [data, setData] = React.useState({ bookings: [], cachedBookings: [], isFetching: true });\n\n  const [selectedRow, setSelectedRow] = React.useState(null);\n\n  const [selectedBooking, setSelectedBooking] = React.useState(null);\n  const [seeDetailsDialogOpen, setSeeDetailsDialogOpen] = React.useState(false);\n\n  const [corporate, setCorporate] = useState(corporates[0]);\n  const corporateChanged = (event) => {\n    setCorporate(event.target.value);\n  }\n\n\n  const [filter, setFilter] = React.useState('');\n\n\n  const lastPromise = useRef();\n\n  const formatTimeStamp = (timeStamp) => {\n    const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\n    const timeStampStr = dateformat(timeStamp, 'yyyy-mm-dd');\n    if (todayStr === timeStampStr) {\n      return dateformat(timeStamp, \"'Today', h:MM:ss TT\");\n    }\n    else {\n      return dateformat(timeStamp, \"mmm dS, h:MM:ss TT\");\n    }\n  }\n\n  const loadData = () => {\n    var api = templateService.getAllTemplates;\n\n    setData({ bookings: [], cachedBookings: [], isFetching: true });\n\n    // console.log(props)\n\n    const currentPromise = api().then((res) => {\n      // console.log(res)\n      for (var i = 0; i < res.data.length; i++) {\n        res.data[i] = { ...res.data[i], id: i + 1 }\n      }\n      setData({ bookings: [...res.data], cachedBookings: [...res.data], isFetching: false });\n      // return res.data;\n    }).catch(err => {\n      console.error(err)\n    })\n\n    // lastPromise.current = currentPromise;\n\n    // currentPromise.then(\n    //   result => {\n    //     if (currentPromise === lastPromise.current) {\n    //       setData({bookings: [...result], cachedBookings: [...result], isFetching: false});\n    //       setPage(1);\n    //     }\n    //   },\n    //   e => {\n    //     if (currentPromise === lastPromise.current) {\n    //         console.error(e);\n    //         setData({bookings: data.bookings, cachedBookings: data.cachedBookings, isFetching: false});\n    //     }\n    //   });\n\n  }\n\n  useEffect(() => {\n    loadData()\n  },\n    [props.date]);\n\n\n\n\n  useEffect(() => {\n\n    if (filter && filter.trim().length > 0) {\n      var filteredData = data.cachedBookings.filter((element) =>\n\n        (element.name?.toLowerCase().indexOf(filter.toLowerCase()) >= 0) ||\n        (element.surname?.toLowerCase().indexOf(filter.toLowerCase()) >= 0) ||\n        ((element.name + ' ' + element.surname)?.toLowerCase().indexOf(filter.toLowerCase()) >= 0)\n\n\n\n      );\n\n\n      setData({ bookings: [...filteredData], cachedBookings: data.cachedBookings, isFetching: false });\n    } else {\n      setData({ bookings: [...data.cachedBookings], cachedBookings: data.cachedBookings, isFetching: false });\n    }\n  },\n    [filter]);\n\n\n  useEffect(() => {\n\n    loadData()\n\n  }, [state.templateDialogDataChanged]);\n\n\n  const handleCloseSeeDetaisDialog = () => {\n    setSelectedBooking(null);\n    setSeeDetailsDialogOpen(false);\n  }\n\n  const openDetailsDialog = (event, id) => {\n    const template = data.bookings.find(element => element._id === id);\n    if (template) {\n      setSelectedtemplate(template);\n      settemplateDialogTitle(`${template.templateID.toUpperCase()}`)\n      settemplateDialogSaveButtonText(\"Save Changes\")\n      settemplateDialogOpen(true)\n    }\n  }\n\n  const refreshClicked = (event) => {\n    setFilter('');\n    loadData()\n  }\n\n  const filterChanged = (event) => {\n    setFilter(event.target.value);\n  }\n\n  const handleSelectionChanged = (newSelection) => {\n    if (newSelection.length > 0) {\n      setSelectedRow(newSelection.rows[0]);\n    }\n\n  }\n\n  const [page, setPage] = React.useState(1);\n\n\n  const registerNewtemplateClicked = () => {\n    setSelectedtemplate(null)\n    settemplateDialogTitle('Create New Email Template')\n    settemplateDialogSaveButtonText(\"Save\")\n    settemplateDialogOpen(true)\n  }\n\n  const [selectedtemplate, setSelectedtemplate] = React.useState(null)\n  const [templateDialogOpen, settemplateDialogOpen] = React.useState(false)\n  const [templateDialogTitle, settemplateDialogTitle] = React.useState('')\n  const [templateDialogSaveButtonText, settemplateDialogSaveButtonText] = React.useState('')\n\n\n  const handleClosetemplateDialog = () => {\n    settemplateDialogOpen(false)\n  }\n\n\n  return (\n    <React.Fragment>\n      {data.isFetching && (\n        <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\n          <LinearProgress color=\"primary\" />\n        </div>\n      )}\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"space-between\"\n        alignItems=\"flex-end\"\n      >\n        <Grid item md={4}>\n          <div style={{ textAlign: \"left\", paddingLeft: \"10px\" }}>\n            <Grid\n              container\n              direction=\"row\"\n              justify=\"flex-start\"\n              alignItems=\"center\"\n            >\n              <Grid item>\n                <span style={{ paddingRight: \"15px\", color: \"#555\" }}>\n                  {\" \"}\n                  {getTableIcon(props.date)}{\" \"}\n                </span>\n              </Grid>\n              <Grid item>\n                <span\n                  style={{\n                    fontSize: \"1.4rem\",\n                    fontWeight: \"600\",\n                    color: \"#444\",\n                  }}\n                >\n                  {\" \"}\n                  {getTableTitle(props.date)}{\" \"}\n                </span>\n              </Grid>\n              <Grid item>\n                <Tooltip title=\"Refresh\" placement=\"right\">\n                  <IconButton\n                    color=\"primary\"\n                    className={classes.refreshButton}\n                    onClick={refreshClicked}\n                  >\n                    <RefreshIcon />\n                  </IconButton>\n                </Tooltip>\n              </Grid>\n            </Grid>\n          </div>\n        </Grid>\n\n        <Grid item md={6}>\n          <div style={{ paddingBottom: \"10px\" }}>\n            <Button\n              // className={classes.ExportToExcelButton}\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={registerNewtemplateClicked}\n              startIcon={\n                <AddIcon />\n              }\n            >\n              Create New Email Template\n              </Button>\n          </div>\n        </Grid>\n\n        {data.isFetching && <div className={classes.HideNowRows}></div>}\n\n        {/* <Grid item md={3}>\n          <TextField\n            variant=\"standard\"\n            value={filter}\n            onChange={filterChanged}\n            margin=\"normal\"\n            size=\"small\"\n            id=\"filter\"\n            label=\"Filter\"\n            name=\"filter\"\n            autoComplete=\"off\"\n          />\n        </Grid> */}\n\n      </Grid>\n\n      <div style={{ height: 700, width: \"100%\" }}>\n        <DataGrid\n          rows={data.bookings}\n          columns={columns}\n          autoPageSize\n          page={page}\n          onPageChange={(params) => {\n            setPage(params.page);\n          }}\n          onSelectionChange={handleSelectionChanged}\n        />\n      </div>\n\n\n      <BookingDialog\n        booking={selectedBooking}\n        open={seeDetailsDialogOpen && selectedBooking && selectedBooking.fullname}\n        onClose={handleCloseSeeDetaisDialog}\n      />\n\n      <EmailTemplateDialog\n        template={selectedtemplate}\n        open={templateDialogOpen}\n        handleClose={handleClosetemplateDialog}\n        title={templateDialogTitle}\n        saveButtonText={templateDialogSaveButtonText}\n      />\n\n    </React.Fragment>\n  );\n}","import React, { useEffect, useRef, useState } from \"react\";\nimport BookService from \"./services/BookService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {\n    AppBar,\n    Backdrop,\n    Button,\n    Checkbox,\n    CircularProgress,\n    DialogActions,\n    DialogContentText,\n    Divider,\n    FormControlLabel,\n    Grid,\n    IconButton,\n    InputAdornment,\n    InputLabel,\n    Link,\n    makeStyles,\n    MenuItem,\n    Select,\n    Switch,\n    TextField,\n    Toolbar,\n    Tooltip,\n} from \"@material-ui/core\";\nimport GlobalState from \"./../GlobalState\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\n\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Draggable from \"react-draggable\";\nimport Paper from \"@material-ui/core/Paper\";\n\nimport Alert from \"@material-ui/lab/Alert\";\n\nimport PropTypes from \"prop-types\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport Box from \"@material-ui/core/Box\";\n\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport NumberFormat from \"react-number-format\";\n\nimport AccessAlarmsIcon from '@material-ui/icons/AccessAlarms';\nimport DateField from \"./DateField\";\n\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\nimport CloseIcon from '@material-ui/icons/Close';\nimport Slide from '@material-ui/core/Slide';\nimport templateService from \"./services/SMSTemplateService\";\nimport dateFormat from \"dateformat\";\n\nimport SaveIcon from '@material-ui/icons/Save';\n\n\nimport { EditorState, convertToRaw, convertFromHTML, ContentState } from 'draft-js';\nimport { Editor } from 'react-draft-wysiwyg';\nimport draftToHtml from 'draftjs-to-html';\nimport htmlToDraft from 'html-to-draftjs';\nimport { htmlToText } from 'html-to-text';\nimport { stateFromHTML } from 'draft-js-import-html';\nimport \"./react-draft-wysiwyg.css\";\nimport TemplateService from \"./services/SMSTemplateService\";\n\nimport AddIcon from '@material-ui/icons/Add';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`vertical-tabpanel-${index}`}\n            aria-labelledby={`vertical-tab-${index}`}\n            {...other}\n            style={{ width: \"100%\" }}\n        >\n            {value === index && (\n                <div style={{ padding: \"20px\", width: \"100%\" }}>\n                    {children}\n                </div>\n            )}\n        </div>\n    );\n}\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n    return {\n        id: `vertical-tab-${index}`,\n        'aria-controls': `vertical-tabpanel-${index}`,\n    };\n}\n\nconst useStyles = makeStyles((theme) => ({\n    appBar: {\n        position: 'relative',\n        backgroundColor: \"#009e28\"\n    },\n    title: {\n        marginLeft: theme.spacing(2),\n        flex: 1,\n    },\n\n    root: {\n        paddingTop: \"8px\",\n        flexGrow: 1,\n        backgroundColor: theme.palette.background.paper,\n        display: 'flex',\n        height: 224,\n    },\n    tabs: {\n        borderRight: `1px solid ${theme.palette.divider}`,\n    },\n\n    backdrop: {\n        zIndex: theme.zIndex.drawer + 5,\n        color: \"#fff\",\n    },\n\n    titleCenter: {\n        width: \"100%\",\n        textAlign: \"center\",\n        fontSize: \"1.1rem\",\n        color: theme.palette.primary.main,\n        fontWeight: \"500\",\n        borderBottom: `2px dashed ${theme.palette.primary.main}`\n    },\n\n    eyeText: {\n        width: \"100%\",\n        textAlign: \"left\",\n        fontSize: \"1.1rem\",\n        color: theme.palette.primary.main,\n        fontWeight: \"500\",\n        paddingTop: \"15px\"\n    },\n\n    createSMSButton : {\n        backgroundColor : \"#009e28\",\n        color: \"#fff\",\n        \"&:hover\" : {\n          backgroundColor: \"#00751e\"\n        }\n      },\n    \n\n\n}));\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport default function SMSTemplateDialog(props) {\n    const classes = useStyles();\n\n    const [state, setState] = React.useContext(GlobalState);\n\n    const [template, settemplate] = React.useState({ formData: {} })\n    const [saving, setSaving] = React.useState(false);\n\n\n    const [templateIDError, settemplateIDError] = React.useState(false)\n    const [rawTextError, setRawTextError] = React.useState(false)\n\n    const [subjectError, setSubjectError] = React.useState(false)\n\n    const [nameError, setNameError] = React.useState(false)\n    const [surnameError, setSurnameError] = React.useState(false)\n    const [birthDateError, setBirthDateError] = React.useState(false)\n\n    const [templateRepeated, settemplateRepeated] = React.useState(false)\n\n    const [clinicError, setClinicError] = React.useState(false)\n\n    const [value, setValue] = React.useState(0);\n\n    const [history, setHistory] = React.useState([]);\n    const [backupFormData, setBackUpFormData] = React.useState(null);\n\n    const [openDeleteDialog, setOpenDeleteDialog] = React.useState(false)\n\n    const [variable, setVariable] = React.useState({})\n    const [variableErrors, setVariableErrors] = React.useState({})\n\n\n    // const [editorState, setEditorState] = React.useState(EditorState.createWithContent(stateFromHTML(`<p>...</p>`)))\n    const [editorState, setEditorState] = React.useState(EditorState.createEmpty())\n\n    const onEditorStateChange = (_editorState) => {\n        setEditorState(_editorState)\n        const html = draftToHtml(convertToRaw(editorState.getCurrentContent()))\n        settemplate({\n            ...template,\n            html: html,\n            rawText: htmlToText(html),\n        })\n    }\n\n\n    const handleCloseDeleteDialog = () => {\n        setOpenDeleteDialog(false)\n    }\n\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    useEffect(() => {\n        if (props.open) {\n\n            if (props.template) {\n                let parameters = []\n                try{\n                    parameters = JSON.parse(props.template.parameters)\n                }\n                catch(err){}\n\n                settemplate({ ...props.template, parameters: parameters})\n            }\n            else {\n                settemplate({parameters: []})\n            }\n        }\n    }, [props.template, props.open])\n\n\n\n    const handleClose = () => {\n        props.handleClose();\n        setValue(0)\n        settemplate({})\n        settemplateIDError(false)\n        setNameError(false)\n        setSurnameError(false)\n        settemplateRepeated(false)\n        settemplatenameuser('')\n        settemplatenameusererror(false)\n        setVariable({})\n        setVariableErrors({})\n        setSubjectError(false)\n        setRawTextError(false)\n        setClinicError(false)\n    };\n\n    const saveClicked = async () => {\n\n        if (!validatetemplate()) {\n            return\n        }\n\n        try {\n            settemplateRepeated(false)\n            setSaving(true)\n            const parameters = JSON.stringify(template.parameters)\n            if (props.template) {\n                const res = await templateService.updateTemplate({ id: template._id, template: {...template, parameters: parameters} })\n                setSaving(false)\n                if (res.data.status === \"OK\") {\n                    setState(state => ({ ...state, templateDialogDataChanged: !state.templateDialogDataChanged }))\n                    handleClose();\n                }\n            } else {\n                const res = await templateService.registerNewTemplate({ template: {...template, parameters: parameters}  })\n                setSaving(false)\n                if (res.data.status === \"OK\") {\n                    setState(state => ({ ...state, templateDialogDataChanged: !state.templateDialogDataChanged }))\n                    handleClose();\n                } else if (res.data.status === \"FAILED\" && res.data.error === \"Repeated template!\") {\n                    settemplateIDError(true)\n                    settemplateRepeated(true)\n                    setValue(0)\n                }\n            }\n        }\n        catch (err) {\n            setSaving(false)\n            console.error(err)\n        }\n    }\n\n    const deleteClicked = async () => {\n\n        if (templatenameuser !== props.template.templateID) {\n            settemplatenameusererror(true)\n            return\n        }\n\n        setOpenDeleteDialog(false)\n\n        setSaving(true)\n        try {\n            await templateService.deleteTemplate(props.template._id)\n            setSaving(false)\n            setState((state) => ({\n                ...state,\n                templateDialogDataChanged: !state.templateDialogDataChanged\n                    ? true\n                    : false,\n            }));\n            handleClose();\n        }\n        catch (err) {\n            console.error(err)\n            setSaving(false)\n        }\n    }\n\n\n\n    const validatetemplate = () => {\n\n        var error = false\n        if (!template.templateID || template.templateID.trim().length === 0) {\n            error = true\n            settemplateIDError(true)\n            setValue(0)\n        }\n\n        if (!template.rawText || template.rawText.length === 0) {\n            error = true\n            setRawTextError(true)\n            setValue(0)\n        }\n\n        if (template.sendWhenBookedCalendar && !template.clinic) {\n            error = true\n            setClinicError(true)\n            setValue(2)\n        }\n\n\n        return !error\n    }\n\n    const formatDate = (date) => {\n        return dateFormat(date, \"dd-mm-yyyy , HH:MM:ss\")\n    }\n\n    const [selectedVersion, setSelectedVersion] = React.useState(0)\n\n    const [templatenameuser, settemplatenameuser] = React.useState('')\n    const [templatenameusererror, settemplatenameusererror] = React.useState(false)\n\n    const addVariableCliced = () => {\n        setVariableErrors({})\n        if (!ValidateVariable()) {\n            return\n        }\n\n        const _variable = {\n            keyword: variable.keyword,\n            builtinValue: variable.builtinValue,\n            defaultValue: variable.defaultValue\n        }\n\n        settemplate({ ...template, parameters: [...template.parameters, _variable] })\n        setVariable({})\n    }\n\n    const ValidateVariable = () => {\n        var error = false\n        if (!variable.keyword) {\n            setVariableErrors((prev) => prev = { ...prev, keywordError: true })\n            error = true\n        }\n\n        if (variable.keyword)\n        {\n            if (template.parameters.find(e => e.keyword === variable.keyword))\n            {\n                setVariableErrors((prev) => prev = { ...prev, keywordError: true })\n                error = true\n            }\n        }\n\n\n        if (!variable.builtinValue) {\n            setVariableErrors((prev) => prev = { ...prev, builtinValueError: true })\n            error = true\n        }\n\n\n        return !error\n    }\n\n    const deleteParameter = (_keyword) =>\n    {\n        settemplate({...template, parameters: template.parameters.filter(e => e.keyword !== _keyword)})\n    }\n\n    return (\n        <React.Fragment>\n            <React.Fragment>\n                <Dialog fullScreen open={props.open} onClose={handleClose} TransitionComponent={Transition}>\n                    <AppBar className={classes.appBar} style={(selectedVersion > 0 && history && history.length > 0) ? { backgroundColor: \"#777\" } : {}} color=\"primary\">\n                        <Toolbar>\n                            <IconButton edge=\"start\" color=\"inherit\" onClick={handleClose} aria-label=\"close\">\n                                <CloseIcon />\n                            </IconButton>\n                            <Typography variant=\"h6\" className={classes.title}>\n                                {props.title}\n                            </Typography>\n\n\n                            <Button startIcon={<SaveIcon />} variant=\"contained\" onClick={saveClicked} disabled={selectedVersion > 0 && history && history.length > 0}>\n                                {props.saveButtonText}\n                            </Button>\n                        </Toolbar>\n\n\n                    </AppBar>\n\n                    <div className={classes.root}>\n                        <Tabs\n                            orientation=\"vertical\"\n                            variant=\"scrollable\"\n                            value={value}\n                            onChange={handleChange}\n                            aria-label=\"Vertical tabs example\"\n                            indicatorColor=\"secondary\"\n                            textColor=\"secondary\"\n                            className={classes.tabs}\n                        >\n                            <Tab label=\"SMS Text\" {...a11yProps(0)} />\n                            <Tab label={`Parameters`} {...a11yProps(1)} />\n                            <Tab label={`Settings`} {...a11yProps(2)} />\n\n                        </Tabs>\n                        <TabPanel value={value} index={0}>\n                            <Grid container spacing={4}>\n                                <Grid item xs={12}>\n                                    <Grid container spacing={2} alignItems=\"center\">\n                                        <Grid item xs={8}>\n                                            <TextField\n                                                // disabled={props.template}\n                                                name=\"templatename\"\n                                                id=\"templatename\"\n                                                label=\"Template Name\"\n                                                fullWidth\n                                                required\n                                                helperText={templateRepeated ? '* This Name is already assigned to another template! Please choose a different name.' : '* Please give a unique name to each templete.'}\n                                                error={templateIDError}\n                                                value={template.templateID || ''}\n                                                onChange={(event) => {\n                                                    settemplate({ ...template, templateID: event.target.value })\n                                                    settemplateIDError(false)\n                                                }}\n                                                autoComplete=\"none\"\n                                                variant=\"outlined\"\n                                            />\n\n                                        </Grid>\n                                        {props.template && (\n                                            <Grid item xs={4}>\n                                                <Button onClick={() => setOpenDeleteDialog(true)} variant=\"contained\" style={{ backgroundColor: \"#d10202\", color: \"#fff\", marginBottom: \"5px\" }}>\n                                                    Delete This Template\n                                                </Button>\n                                            </Grid>\n                                        )}\n\n                                    </Grid>\n\n                                </Grid>\n                                <Grid item xs={12}>\n                                        <TextField\n                                                autoFocus\n                                                name=\"rawtext\"\n                                                id=\"rawtext\"\n                                                label=\"SMS Body\"\n                                                fullWidth\n                                                multiline={true}\n                                                rows={20}\n                                                required\n                                                error={rawTextError}\n                                                value={template.rawText || ''}\n                                                onChange={(event) => {\n                                                    settemplate({ ...template, rawText: event.target.value })\n                                                    setRawTextError(false)\n                                                }}\n                                                autoComplete=\"none\"\n                                                variant=\"outlined\"\n                                            />\n\n                                </Grid>\n                            </Grid>\n                        </TabPanel>\n                        <TabPanel value={value} index={1}>\n                            <Grid container direction=\"column\" spacing={2}>\n                                <Grid item>\n                                    <Grid container direction=\"row\" spacing={1} alignItems=\"bottom\">\n                                        <Grid item xs={3}>\n                                            <TextField\n                                                name=\"keyword\"\n                                                id=\"keyword\"\n                                                label=\"Keyword\"\n                                                fullWidth\n                                                required\n                                                error={variableErrors.keywordError}\n                                                helperText={'This is the TEXT within your SMS that you want to be replaced by a value'}\n                                                autoComplete=\"none\"\n                                                variant=\"outlined\"\n                                                value={variable.keyword || ''}\n                                                onChange={(event) => setVariable({ ...variable, keyword: event.target.value })}\n                                            />\n                                        </Grid>\n                                        <Grid item xs={3}>\n                                            <FormControl\n                                                error={variableErrors.builtinValueError}\n                                                fullWidth required variant=\"outlined\" className={classes.formControl}>\n                                                <InputLabel id=\"builtinvalueid\"> Value</InputLabel>\n                                                <Select\n                                                    labelId=\"builtinvalueid\"\n                                                    id=\"builtinvalue\"\n                                                    value={variable.builtinValue || null}\n                                                    onChange={(event) => setVariable({ ...variable, builtinValue: event.target.value })}\n                                                    label=\"Built-in Value\"\n                                                >\n                                                    <MenuItem value={'Patient Name'}>Patient Name</MenuItem>\n                                                    <MenuItem value={'Patient Surname'}>Patient Surname</MenuItem>\n                                                    <MenuItem value={'Patient Fullname'}>Patient Fullname</MenuItem>\n                                                    <MenuItem value={'Today Date'}>Today Date</MenuItem>\n                                                    <MenuItem value={'Appointment DateTime'}>Appointment DateTime</MenuItem>\n                                                </Select>\n                                            </FormControl>\n                                        </Grid>\n                                        <Grid item xs={3}>\n                                            <TextField\n                                                name=\"defaultvalue\"\n                                                id=\"defaultvalue\"\n                                                label=\"Default Value\"\n                                                fullWidth\n                                                autoComplete=\"none\"\n                                                helperText={'* This value is used if the variable is empty.'}\n                                                variant=\"outlined\"\n                                                value={variable.defaultValue || ''}\n                                                onChange={(event) => setVariable({ ...variable, defaultValue: event.target.value })}\n\n                                            />\n                                        </Grid>\n                                        <Grid item xs={3}>\n                                            <Button className={classes.createSMSButton} onClick={addVariableCliced} startIcon={<AddIcon />} variant=\"contained\" color=\"primary\" fullWidth style={{ height: \"55px\" }}>\n                                                Add Variable\n                                            </Button>\n                                        </Grid>\n                                    </Grid>\n                                    </Grid>\n\n                                    <Grid item style={{marginTop:\"20px\", fontWeight:\"500\", height:\"20px\"}}>\n                                         <Divider/>\n                                         <Grid container direction=\"row\" spacing={1} alignItems=\"center\">\n                                                <Grid item xs={3}>\n                                                    {\"Keyword\"}\n                                                </Grid>\n                                                <Grid item xs={3}>\n                                                    {\"Value\"}\n                                                </Grid>\n                                                <Grid item xs={3}>\n                                                    {\"Default Value\"}\n                                                </Grid>\n                                                <Grid item xs={3}>\n                                                </Grid>\n                                            </Grid>\n                                            <Divider/>\n                                      </Grid>      \n\n                                    {(!template.parameters || template.parameters.length === 0) && (\n                                        <Grid item>\n                                            <div style={{width:\"80%\", textAlign:\"center\", color:\"#777\", marginTop:\"50px\", fontSize:\"1rem\"}}>\n                                                 No Parameters Defined\n                                            </div>                                           \n                                        </Grid>    \n                                    )}\n\n                                    {template.parameters && template.parameters.length > 0 && template.parameters.map((item => (\n                                        <Grid item style={{marginTop:\"10px\", fontWeight:\"500\", height:\"30px\"}}>\n                                            <Grid container direction=\"row\" spacing={1} alignItems=\"center\">\n                                                <Grid item xs={3}>\n                                                    {item.keyword}\n                                                </Grid>\n                                                <Grid item xs={3}>\n                                                    {item.builtinValue}\n                                                </Grid>\n                                                <Grid item xs={3}>\n                                                    {item.defaultValue}\n                                                </Grid>\n                                                <Grid item xs={3}>\n                                                    <Tooltip title=\"Delete Parameter\">\n                                                        <IconButton onClick={() => deleteParameter(item.keyword)}>\n                                                            <DeleteIcon color=\"primary\" />\n                                                        </IconButton>\n                                                    </Tooltip>\n                                                </Grid>\n                                            </Grid>\n                                        </Grid>\n                                    )))}\n                            </Grid>\n                        </TabPanel>\n                        <TabPanel value={value} index={2}>\n                             <div style={{fontSize:\"1.2rem\", color:\"#777\", fontWeight:\"500\", marginBottom:\"50px\"}}>\n                                 Here you can set which SMSs (and when) should be sent to the patients automatically by the system :\n                             </div>   \n                             <Paper elevation={3}>\n                            <Grid container direction=\"column\" spacing={2} style={{minHeight:\"300px\", padding:\"10px 15px\"}}>\n                                <Grid item>\n                                    <FormControlLabel\n                                        control={\n                                        <Switch\n                                            checked={template.sendWhenBookedCalendar}\n                                            onChange={(e) => {settemplate({...template,sendWhenBookedCalendar : e.target.checked})}}\n                                            name=\"check-whenbooked\"\n                                            color=\"primary\"\n                                        />\n                                        }\n                                          label={<span style={template.sendWhenBookedCalendar ? {fontWeight:\"500\",color:\"#333\" } : {color:\"#777\"}}>\n                                                Automatically send this SMS to the patients when an appointment is booked on the calendar.\n                                                </span> \n                                            }\n                                    />\n                                </Grid>\n                                {template.sendWhenBookedCalendar && (\n                                        <React.Fragment>\n                                            <Grid item xs={12}>\n                                                <Grid container alignItems=\"center\" spacing={2}>\n                                                    <Grid item>\n                                                        <div style={{ fontSize: \"1rem\", color: \"#777\", fontWeight: \"500\" }}>\n                                                            Please choose the <strong>clinic</strong> you want this email would be sent for:\n                                                         </div>\n\n                                                    </Grid>\n                                                    <Grid item xs={12} md={4}>\n                                                        <FormControl\n                                                            error={clinicError}\n                                                            fullWidth required variant=\"outlined\" className={classes.formControl}>\n                                                            <InputLabel id=\"clinic\">Select Clinic</InputLabel>\n                                                            <Select\n                                                                labelId=\"clinic\"\n                                                                id=\"clinic-id\"\n                                                                value={template.clinic || null}\n                                                                onChange={(event) => {\n                                                                    settemplate({...template, clinic: event.target.value})\n                                                                    setClinicError(false)\n                                                                }}\n                                                                label=\"Select Clinic\"\n                                                            >\n                                                                <MenuItem value={'All Clinics'}>All Clinics</MenuItem>\n                                                                <MenuItem value={'Virtual Consultation'}>Virtual Consultation</MenuItem>\n                                                                <MenuItem value={'F2F Clinic'}>F2F Clinic</MenuItem>\n                                                                <MenuItem value={'Laser Theatre'}>Laser Theatre</MenuItem>\n                                                                <MenuItem value={'Lens Theatre'}>Lens Theatre</MenuItem>\n                                                                <MenuItem value={'Post Op'}>Post Op</MenuItem>\n                                                                <MenuItem value={'Optometry'}>Optometry</MenuItem>\n\n                                                            </Select>\n                                                        </FormControl>\n\n                                                    </Grid>\n                                                </Grid>\n                                            </Grid>\n                                        </React.Fragment>\n                                    )}\n\n                            </Grid>\n                            </Paper>\n\n                        </TabPanel>\n\n\n                    </div>\n\n                    <Backdrop\n                        className={classes.backdrop}\n                        open={saving}\n                    >\n                        <CircularProgress color=\"inherit\" />\n                    </Backdrop>\n\n\n                    <Dialog\n                        open={openDeleteDialog}\n                        onClose={handleCloseDeleteDialog}\n                        aria-labelledby=\"alert-dialog-title\"\n                        aria-describedby=\"alert-dialog-description\"\n                    >\n                        <DialogTitle style={{ color: \"#d10202\", fontWeight: \"600\" }} id=\"alert-dialog-title\">\n                            {\"Delete template\"}\n                        </DialogTitle>\n                        <DialogContent>\n                            <DialogContentText\n                                style={{ color: \"#000\", fontWeight: \"500\" }}\n                                id=\"alert-dialog-description\"\n                            >\n                                <Grid container spacing={4}>\n                                    <Grid item xs={12}>\n                                        Are you sure you want to delete this template?\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <TextField\n                                            autoFocus\n                                            name=\"templatenameuser\"\n                                            id=\"templatenameuser\"\n                                            label=\"Template Name\"\n                                            placeholder=\"Please Retype The Template Name\"\n                                            fullWidth\n                                            required\n                                            error={templatenameusererror}\n                                            helperText={`* Please retype the template name you want to be deleted.`}\n                                            value={templatenameuser}\n                                            onChange={(event) => {\n                                                settemplatenameuser(event.target.value)\n                                            }}\n                                            autoComplete=\"none\"\n                                            variant=\"outlined\"\n                                        />\n                                    </Grid>\n                                </Grid>\n                            </DialogContentText>\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={handleCloseDeleteDialog} color=\"default\">\n                                Back\n                                 </Button>\n                            <Button onClick={deleteClicked} variant=\"contained\" style={{ backgroundColor: \"#d10202\", color: \"#fff\" }}>\n                                Yes, Delete this template\n                                 </Button>\n                        </DialogActions>\n                    </Dialog>\n\n\n\n                </Dialog>\n            </React.Fragment>\n        </React.Fragment>\n    );\n}\n","import React, { useEffect, useRef, useState } from 'react';\nimport { DataGrid } from '@material-ui/data-grid';\nimport { Button, Checkbox, CircularProgress, Dialog, DialogContent, DialogTitle, Divider, FormControl, FormControlLabel, Grid, Icon, InputLabel, LinearProgress, Link, makeStyles, MenuItem, Paper, Select, SvgIcon, Switch, TextField, Tooltip } from '@material-ui/core';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport { IconButton } from '@material-ui/core';\nimport CheckIcon from '@material-ui/icons/Check';\nimport CloseIcon from '@material-ui/icons/Close';\nimport GlobalState from '../GlobalState';\nimport { getMenuIndex } from '../MenuList';\nimport { FormatDateFromString, FormatDateFromStringShortYear } from './DateFormatter';\nimport AccessibilityIcon from '@material-ui/icons/Accessibility';\n\nimport SearchIcon from '@material-ui/icons/Search';\nimport BookingDialog from './BookingDialog';\nimport AddIcon from '@material-ui/icons/Add';\n\nimport NewReleasesIcon from '@material-ui/icons/NewReleases';\nimport HistoryIcon from '@material-ui/icons/History';\nimport TimelineIcon from '@material-ui/icons/Timeline';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport AutorenewIcon from '@material-ui/icons/Autorenew';\nimport LiveTvIcon from '@material-ui/icons/LiveTv';\nimport PlaylistAddCheckIcon from '@material-ui/icons/PlaylistAddCheck';\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport HourglassEmptyIcon from '@material-ui/icons/HourglassEmpty';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faFileExcel } from \"@fortawesome/free-solid-svg-icons\";\nimport Draggable from 'react-draggable';\n\nimport * as dateformat from 'dateformat';\n\nimport DraftsIcon from '@material-ui/icons/Drafts';\n\nimport DateFnsUtils from '@date-io/date-fns';\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardTimePicker,\n  KeyboardDatePicker,\n} from '@material-ui/pickers';\n\nimport BusinessIcon from '@material-ui/icons/Business';\nimport CreditCardIcon from '@material-ui/icons/CreditCard';\nimport LocalAtmIcon from '@material-ui/icons/LocalAtm';\n\n\nimport ReactHTMLTableToExcel from 'react-html-table-to-excel';\nimport PriceCalculator from './PriceCalculator';\nimport { corporates } from './Corporates';\nimport templateService from './services/SMSTemplateService';\nimport SMSTemplateDialog from './SMSTemplateDialog';\nimport SmsIcon from '@material-ui/icons/Sms';\n\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    marginTop: theme.spacing(0),\n    marginBottom: theme.spacing(1),\n\n  },\n\n  refreshButton: {\n    marginLeft: theme.spacing(2),\n  },\n\n  checkIcon: {\n    color: \"green\"\n  },\n\n  closeIcon: {\n    color: \"red\"\n  },\n\n  RefLink: {\n    cursor: \"pointer\"\n  },\n\n  BookedLabel: {\n    backgroundColor: \"#606060\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  templateAttendedLabel: {\n    backgroundColor: \"#0066aa\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  SampleTakenLabel: {\n    backgroundColor: \"#0066cc\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  ReportSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  ReportCertSentLabel: {\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  PositiveLabel: {\n    backgroundColor: \"red\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  HideNowRows: {\n    position: \"absolute\",\n    top: \"40%\",\n    left: \"40%\",\n    width: \"600px\",\n    height: \"300px\",\n    backgroundColor: \"#fafafa\",\n    color: \"#111\",\n    zIndex: \"1000\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyItems: \"center\"\n  },\n\n  ExportToExcelButton:\n  {\n    // marginBottom : \"20px\",\n    color: \"#2f942e\",\n    borderColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"#fafffa\",\n      borderColor: \"#2f942e\",\n    },\n    textDecoration: \"none !important\",\n\n  },\n\n  ExportToExcelButtonInline:\n  {\n    // marginBottom : \"20px\",\n    color: \"#2f942e\",\n    borderColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"#fafffa\",\n      borderColor: \"#2f942e\",\n    },\n    textDecoration: \"none !important\",\n    cursor: \"pointer\",\n    padding: \"10px\"\n\n  },\n\n  table: {\n    width: \"100%\",\n    border: \"1px solid #ddd\",\n    borderCollapse: \"collapse\",\n  },\n\n  th: {\n    border: \"1px solid #ddd\",\n    borderCollapse: \"collapse\",\n    verticalAlign: \"middle\",\n    fontcolor: \"#555\",\n    fontWeight: \"400\",\n    fontSize: \"15px\",\n    paddingTop: \"5px\",\n    paddingBottom: \"5px\",\n    width: \"14%\",\n    paddingLeft: \"5px\",\n  },\n\n  td: {\n    border: \"1px solid #ddd\",\n    borderCollapse: \"collapse\",\n    verticalAlign: \"middle\",\n    paddingLeft: \"5px\",\n  },\n\n  topSelect: {\n    margin: theme.spacing(1),\n    minWidth: 80,\n  },\n\n  notifyIcon: {\n    width: \"16px\",\n    height: \"16px\",\n    borderRadius: \"50%\",\n    backgroundColor: \"rgb(220, 0, 78)\",\n    marginLeft: \"10px\"\n  },\n\n  createSMSButton : {\n    backgroundColor : \"#009e28\",\n    color: \"#fff\",\n    \"&:hover\" : {\n      backgroundColor: \"#00751e\"\n    }\n  }\n\n}));\n\nconst getTableTitle = (str) => {\n\n  if (str === 'today') {\n    return `Today's Bookings`;\n  } else if (str === 'old') {\n    return `Old Bookings`;\n  } else if (str === 'future') {\n    return `Future Bookings`;\n  } else if (str === 'recent') {\n    return `Recent Bookings`;\n  } else if (str === 'live') {\n    return `Live Bookings`;\n  } else if (str === 'completed') {\n    return `Completed Bookings`;\n  } else if (str === 'positive') {\n    return `Positive Results`;\n  } else if (str === 'deleted') {\n    return `Archived Records`;\n  } else if (str === 'late') {\n    return `40 Hours Late`;\n  }\n\n  else {\n    return `SMS Templates`;\n  }\n\n}\n\nconst getTableIcon = (str) => {\n\n  if (str === 'today') {\n    return <NewReleasesIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else if (str === 'old') {\n    return <HistoryIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else if (str === 'future') {\n    return <TimelineIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else if (str === 'recent') {\n    return <AutorenewIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else if (str === 'live') {\n    return <LiveTvIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else if (str === 'completed') {\n    return <PlaylistAddCheckIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else if (str === 'positive') {\n    return <AddCircleOutlineIcon style={{ fontSize: \"2.2rem\" }} />\n  } else if (str === 'deleted') {\n    return <DeleteIcon style={{ fontSize: \"2.2rem\" }} />;\n  } else if (str === 'late') {\n    return <HourglassEmptyIcon style={{ fontSize: \"2.2rem\" }} />;\n  }\n\n  else {\n    return <SmsIcon style={{ fontSize: \"2.2rem\" }} />;\n  }\n\n}\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'}>\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nexport default function SMSTemplatesTable(props) {\n\n  const classes = useStyles();\n\n\n\n  var columns = [\n    {\n      field: \"_id\",\n      headerName: \" \",\n      width: 70,\n      renderCell: (params) => {\n        return (\n          <React.Fragment>\n            <IconButton\n              color=\"primary\"\n              onClick={(event) => openDetailsDialog(event, params.value)}\n            >\n              <SearchIcon />\n            </IconButton>\n          </React.Fragment>\n        );\n      },\n    },\n    { field: 'templateID', headerName: 'Template Name', width: 200 },\n    { field: 'rawText', headerName: 'SMS Body', width: 700 },\n  ];\n\n\n  const [state, setState] = React.useContext(GlobalState);\n\n  const [data, setData] = React.useState({ bookings: [], cachedBookings: [], isFetching: true });\n\n  const [selectedRow, setSelectedRow] = React.useState(null);\n\n  const [selectedBooking, setSelectedBooking] = React.useState(null);\n  const [seeDetailsDialogOpen, setSeeDetailsDialogOpen] = React.useState(false);\n\n  const [corporate, setCorporate] = useState(corporates[0]);\n  const corporateChanged = (event) => {\n    setCorporate(event.target.value);\n  }\n\n\n  const [filter, setFilter] = React.useState('');\n\n\n  const lastPromise = useRef();\n\n  const formatTimeStamp = (timeStamp) => {\n    const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\n    const timeStampStr = dateformat(timeStamp, 'yyyy-mm-dd');\n    if (todayStr === timeStampStr) {\n      return dateformat(timeStamp, \"'Today', h:MM:ss TT\");\n    }\n    else {\n      return dateformat(timeStamp, \"mmm dS, h:MM:ss TT\");\n    }\n  }\n\n  const loadData = () => {\n    var api = templateService.getAllTemplates;\n\n    setData({ bookings: [], cachedBookings: [], isFetching: true });\n\n    // console.log(props)\n\n    const currentPromise = api().then((res) => {\n      // console.log(res)\n      for (var i = 0; i < res.data.length; i++) {\n        res.data[i] = { ...res.data[i], id: i + 1 }\n      }\n      setData({ bookings: [...res.data], cachedBookings: [...res.data], isFetching: false });\n      // return res.data;\n    }).catch(err => {\n      console.error(err)\n    })\n\n    // lastPromise.current = currentPromise;\n\n    // currentPromise.then(\n    //   result => {\n    //     if (currentPromise === lastPromise.current) {\n    //       setData({bookings: [...result], cachedBookings: [...result], isFetching: false});\n    //       setPage(1);\n    //     }\n    //   },\n    //   e => {\n    //     if (currentPromise === lastPromise.current) {\n    //         console.error(e);\n    //         setData({bookings: data.bookings, cachedBookings: data.cachedBookings, isFetching: false});\n    //     }\n    //   });\n\n  }\n\n  useEffect(() => {\n    loadData()\n  },\n    [props.date]);\n\n\n\n\n  useEffect(() => {\n\n    if (filter && filter.trim().length > 0) {\n      var filteredData = data.cachedBookings.filter((element) =>\n\n        (element.name?.toLowerCase().indexOf(filter.toLowerCase()) >= 0) ||\n        (element.surname?.toLowerCase().indexOf(filter.toLowerCase()) >= 0) ||\n        ((element.name + ' ' + element.surname)?.toLowerCase().indexOf(filter.toLowerCase()) >= 0)\n\n\n\n      );\n\n\n      setData({ bookings: [...filteredData], cachedBookings: data.cachedBookings, isFetching: false });\n    } else {\n      setData({ bookings: [...data.cachedBookings], cachedBookings: data.cachedBookings, isFetching: false });\n    }\n  },\n    [filter]);\n\n\n  useEffect(() => {\n\n    loadData()\n\n  }, [state.templateDialogDataChanged]);\n\n\n  const handleCloseSeeDetaisDialog = () => {\n    setSelectedBooking(null);\n    setSeeDetailsDialogOpen(false);\n  }\n\n  const openDetailsDialog = (event, id) => {\n    const template = data.bookings.find(element => element._id === id);\n    if (template) {\n      setSelectedtemplate(template);\n      settemplateDialogTitle(`${template.templateID.toUpperCase()}`)\n      settemplateDialogSaveButtonText(\"Save Changes\")\n      settemplateDialogOpen(true)\n    }\n  }\n\n  const refreshClicked = (event) => {\n    setFilter('');\n    loadData()\n  }\n\n  const filterChanged = (event) => {\n    setFilter(event.target.value);\n  }\n\n  const handleSelectionChanged = (newSelection) => {\n    if (newSelection.length > 0) {\n      setSelectedRow(newSelection.rows[0]);\n    }\n\n  }\n\n  const [page, setPage] = React.useState(1);\n\n\n  const registerNewtemplateClicked = () => {\n    setSelectedtemplate(null)\n    settemplateDialogTitle('Create New SMS Template')\n    settemplateDialogSaveButtonText(\"Save\")\n    settemplateDialogOpen(true)\n  }\n\n  const [selectedtemplate, setSelectedtemplate] = React.useState(null)\n  const [templateDialogOpen, settemplateDialogOpen] = React.useState(false)\n  const [templateDialogTitle, settemplateDialogTitle] = React.useState('')\n  const [templateDialogSaveButtonText, settemplateDialogSaveButtonText] = React.useState('')\n\n\n  const handleClosetemplateDialog = () => {\n    settemplateDialogOpen(false)\n  }\n\n\n  return (\n    <React.Fragment>\n      {data.isFetching && (\n        <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\n          <LinearProgress color=\"primary\" />\n        </div>\n      )}\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"space-between\"\n        alignItems=\"flex-end\"\n      >\n        <Grid item md={4}>\n          <div style={{ textAlign: \"left\", paddingLeft: \"10px\" }}>\n            <Grid\n              container\n              direction=\"row\"\n              justify=\"flex-start\"\n              alignItems=\"center\"\n            >\n              <Grid item>\n                <span style={{ paddingRight: \"15px\", color: \"#555\" }}>\n                  {\" \"}\n                  {getTableIcon(props.date)}{\" \"}\n                </span>\n              </Grid>\n              <Grid item>\n                <span\n                  style={{\n                    fontSize: \"1.4rem\",\n                    fontWeight: \"600\",\n                    color: \"#444\",\n                  }}\n                >\n                  {\" \"}\n                  {getTableTitle(props.date)}{\" \"}\n                </span>\n              </Grid>\n              <Grid item>\n                <Tooltip title=\"Refresh\" placement=\"right\">\n                  <IconButton\n                    color=\"primary\"\n                    className={classes.refreshButton}\n                    onClick={refreshClicked}\n                  >\n                    <RefreshIcon />\n                  </IconButton>\n                </Tooltip>\n              </Grid>\n            </Grid>\n          </div>\n        </Grid>\n\n        <Grid item md={6}>\n          <div style={{ paddingBottom: \"10px\" }}>\n            <Button\n              // className={classes.ExportToExcelButton}\n              variant=\"contained\"\n              className={classes.createSMSButton}\n              color=\"primary\"\n              onClick={registerNewtemplateClicked}\n              startIcon={\n                <AddIcon />\n              }\n            >\n              Create New SMS Template\n              </Button>\n          </div>\n        </Grid>\n\n        {data.isFetching && <div className={classes.HideNowRows}></div>}\n\n        {/* <Grid item md={3}>\n          <TextField\n            variant=\"standard\"\n            value={filter}\n            onChange={filterChanged}\n            margin=\"normal\"\n            size=\"small\"\n            id=\"filter\"\n            label=\"Filter\"\n            name=\"filter\"\n            autoComplete=\"off\"\n          />\n        </Grid> */}\n\n      </Grid>\n\n      <div style={{ height: 700, width: \"100%\" }}>\n        <DataGrid\n          rows={data.bookings}\n          columns={columns}\n          autoPageSize\n          page={page}\n          onPageChange={(params) => {\n            setPage(params.page);\n          }}\n          onSelectionChange={handleSelectionChanged}\n        />\n      </div>\n\n\n      <BookingDialog\n        booking={selectedBooking}\n        open={seeDetailsDialogOpen && selectedBooking && selectedBooking.fullname}\n        onClose={handleCloseSeeDetaisDialog}\n      />\n\n      <SMSTemplateDialog\n        template={selectedtemplate}\n        open={templateDialogOpen}\n        handleClose={handleClosetemplateDialog}\n        title={templateDialogTitle}\n        saveButtonText={templateDialogSaveButtonText}\n      />\n\n    </React.Fragment>\n  );\n}","import DashboardIcon from \"@material-ui/icons/Dashboard\";\nimport NewReleasesIcon from \"@material-ui/icons/NewReleases\";\nimport HistoryIcon from \"@material-ui/icons/History\";\nimport TimelineIcon from \"@material-ui/icons/Timeline\";\nimport DescriptionIcon from \"@material-ui/icons/Description\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport AutorenewIcon from \"@material-ui/icons/Autorenew\";\nimport LiveTvIcon from \"@material-ui/icons/LiveTv\";\nimport PlaylistAddCheckIcon from \"@material-ui/icons/PlaylistAddCheck\";\nimport WarningIcon from \"@material-ui/icons/Warning\";\nimport AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport HourglassEmptyIcon from \"@material-ui/icons/HourglassEmpty\";\nimport DateRangeIcon from \"@material-ui/icons/DateRange\";\nimport EventNoteIcon from \"@material-ui/icons/EventNote\";\nimport AirplanemodeActiveIcon from \"@material-ui/icons/AirplanemodeActive\";\nimport AccessibilityIcon from '@material-ui/icons/Accessibility';\nimport CallIcon from '@material-ui/icons/Call';\nimport MailOutlineIcon from '@material-ui/icons/MailOutline';\nimport SmsIcon from '@material-ui/icons/Sms';\nimport DraftsIcon from '@material-ui/icons/Drafts';\n\n\n// OV Admin ----------------\nimport OVBookingTable from \"./OV/BookingTable\";\nimport OVCalendarView from \"./OV/calendar-admin/CalendarView\";\nimport PatientsTable from \"./OV/PatientsTable\";\nimport EmailTemplstesTable from \"./OV/EmailTemplatesTable\"\nimport SMSTemplatesTable from \"./OV/SMSTemplatesTable\";\n\n//---------------\n\nexport const MenuList_OV_Admin = [\n  {\n    index: 1,\n    id: `recentBookings`,\n    title: `Recent Bookings`,\n    icon: <AutorenewIcon />,\n  },\n  {\n    index: 2,\n    id: `todayBookings`,\n    title: `Today's Bookings`,\n    icon: <NewReleasesIcon />,\n  },\n  {\n    index: 3,\n    id: `oldBookings`,\n    title: `Old Bookings`,\n    icon: <HistoryIcon />,\n  },\n  {\n    index: 4,\n    id: `futureBookings`,\n    title: `Future Bookings`,\n    icon: <TimelineIcon />,\n  },\n  {\n    index: 5,\n    id: `allBookings`,\n    title: `All Bookings`,\n    icon: <DescriptionIcon />,\n  },\n  {\n    index: 6,\n    id: `traceBookings`,\n    title: `Patients to Trace`,\n    icon: <CallIcon />,\n  },\n  {\n    index: 7,\n    id: `deletedBookings`,\n    title: `Archived Records`,\n    icon: <DeleteIcon />,\n  },\n  {\n    index: 8,\n    id: `calendarView`,\n    title: `Calendar View`,\n    icon: <DateRangeIcon />,\n  },\n  {\n    index: 9,\n    id: `patientsList`,\n    title: `Patients`,\n    icon: <AccessibilityIcon />,\n  },\n  {\n    index: 10,\n    id: `emailTemplates`,\n    title: `Email Templates`,\n    icon: <DraftsIcon />,\n  },\n  {\n    index: 11,\n    id: `smsTemplates`,\n    title: `SMS Templates`,\n    icon: <SmsIcon />,\n  },\n\n];\n\n\n\nexport const MenuList_Admin = [\n  { index: 0, id: `dashboard`, title: `Dashboard`, icon: <DashboardIcon /> },\n  {\n    index: 1,\n    id: `recentBookings`,\n    title: `Recent Bookings`,\n    icon: <AutorenewIcon />,\n  },\n  {\n    index: 2,\n    id: `todayBookings`,\n    title: `Today's Bookings`,\n    icon: <NewReleasesIcon />,\n  },\n  {\n    index: 3,\n    id: `oldBookings`,\n    title: `Old Bookings`,\n    icon: <HistoryIcon />,\n  },\n  {\n    index: 4,\n    id: `futureBookings`,\n    title: `Future Bookings`,\n    icon: <TimelineIcon />,\n  },\n  {\n    index: 5,\n    id: `allBookings`,\n    title: `All Bookings`,\n    icon: <DescriptionIcon />,\n  },\n  {\n    index: 6,\n    id: `deletedBookings`,\n    title: `Deleted Records`,\n    icon: <DeleteIcon />,\n  },\n\n  {\n    index: 7,\n    id: `calendarView`,\n    title: `Calendar View`,\n    icon: <DateRangeIcon />,\n  },\n\n  { index: 8, id: `findByRef`, title: `Find By Ref No`, icon: <SearchIcon /> },\n];\n\nexport const MenuList_Gynae = [\n  { index: 0, id: `dashboard`, title: `Dashboard`, icon: <DashboardIcon /> },\n  {\n    index: 1,\n    id: `recentBookings`,\n    title: `Recent Bookings`,\n    icon: <AutorenewIcon />,\n  },\n  {\n    index: 2,\n    id: `todayBookings`,\n    title: `Today's Bookings`,\n    icon: <NewReleasesIcon />,\n  },\n  {\n    index: 3,\n    id: `oldBookings`,\n    title: `Old Bookings`,\n    icon: <HistoryIcon />,\n  },\n  {\n    index: 4,\n    id: `futureBookings`,\n    title: `Future Bookings`,\n    icon: <TimelineIcon />,\n  },\n  {\n    index: 5,\n    id: `allBookings`,\n    title: `All Bookings`,\n    icon: <DescriptionIcon />,\n  },\n  {\n    index: 6,\n    id: `deletedBookings`,\n    title: `Deleted Records`,\n    icon: <DeleteIcon />,\n  },\n  {\n    index: 7,\n    id: `calendarView`,\n    title: `Calendar View`,\n    icon: <DateRangeIcon />,\n  },\n  { index: 8, id: `findByRef`, title: `Find By Ref No`, icon: <SearchIcon /> },\n];\n\nexport const MenuList_GP = [\n  { index: 0, id: `dashboard`, title: `Dashboard`, icon: <DashboardIcon /> },\n  {\n    index: 1,\n    id: `recentBookings`,\n    title: `Recent Bookings`,\n    icon: <AutorenewIcon />,\n  },\n  {\n    index: 2,\n    id: `todayBookings`,\n    title: `Today's Bookings`,\n    icon: <NewReleasesIcon />,\n  },\n  {\n    index: 3,\n    id: `oldBookings`,\n    title: `Old Bookings`,\n    icon: <HistoryIcon />,\n  },\n  {\n    index: 4,\n    id: `futureBookings`,\n    title: `Future Bookings`,\n    icon: <TimelineIcon />,\n  },\n  {\n    index: 5,\n    id: `allBookings`,\n    title: `All Bookings`,\n    icon: <DescriptionIcon />,\n  },\n  {\n    index: 6,\n    id: `deletedBookings`,\n    title: `Deleted Records`,\n    icon: <DeleteIcon />,\n  },\n  {\n    index: 7,\n    id: `calendarView`,\n    title: `Calendar View`,\n    icon: <DateRangeIcon />,\n  },\n  { index: 8, id: `findByRef`, title: `Find By Ref No`, icon: <SearchIcon /> },\n];\n\nexport const MenuList_STD = [\n  { index: 0, id: `dashboard`, title: `Dashboard`, icon: <DashboardIcon /> },\n  {\n    index: 1,\n    id: `recentBookings`,\n    title: `Recent Bookings`,\n    icon: <AutorenewIcon />,\n  },\n  {\n    index: 2,\n    id: `todayBookings`,\n    title: `Today's Bookings`,\n    icon: <NewReleasesIcon />,\n  },\n  {\n    index: 3,\n    id: `oldBookings`,\n    title: `Old Bookings`,\n    icon: <HistoryIcon />,\n  },\n  {\n    index: 4,\n    id: `futureBookings`,\n    title: `Future Bookings`,\n    icon: <TimelineIcon />,\n  },\n  {\n    index: 5,\n    id: `allBookings`,\n    title: `All Bookings`,\n    icon: <DescriptionIcon />,\n  },\n  {\n    index: 6,\n    id: `deletedBookings`,\n    title: `Deleted Records`,\n    icon: <DeleteIcon />,\n  },\n  {\n    index: 7,\n    id: `calendarView`,\n    title: `Calendar View`,\n    icon: <DateRangeIcon />,\n  },\n  { index: 8, id: `findByRef`, title: `Find By Ref No`, icon: <SearchIcon /> },\n];\n\nexport const MenuList_PCR = [\n  { index: 0, id: `dashboard`, title: `Dashboard`, icon: <DashboardIcon /> },\n  {\n    index: 1,\n    id: `recentBookings`,\n    title: `Recent Bookings`,\n    icon: <AutorenewIcon />,\n  },\n  {\n    index: 2,\n    id: `todayBookings`,\n    title: `Today's Bookings`,\n    icon: <NewReleasesIcon />,\n  },\n  {\n    index: 3,\n    id: `liveBookings`,\n    title: `Live Bookings`,\n    icon: <LiveTvIcon />,\n  },\n  { index: 4, id: `oldBookings`, title: `Old Bookings`, icon: <HistoryIcon /> },\n  {\n    index: 5,\n    id: `futureBookings`,\n    title: `Future Bookings`,\n    icon: <TimelineIcon />,\n  },\n  {\n    index: 6,\n    id: `allBookings`,\n    title: `All Bookings`,\n    icon: <DescriptionIcon />,\n  },\n  {\n    index: 7,\n    id: `completedBookings`,\n    title: `Completed Bookings`,\n    icon: <PlaylistAddCheckIcon />,\n  },\n  {\n    index: 8,\n    id: `positiveBookings`,\n    title: `Positive Results`,\n    icon: <AddCircleOutlineIcon />,\n  },\n  {\n    index: 9,\n    id: `latebookings`,\n    title: `40 Hours Late`,\n    icon: <HourglassEmptyIcon />,\n  },\n  {\n    index: 10,\n    id: `deletedBookings`,\n    title: `Deleted Records`,\n    icon: <DeleteIcon />,\n  },\n  {\n    index: 11,\n    id: `trBookings`,\n    title: `TR Bookings`,\n    icon: <AirplanemodeActiveIcon />,\n  },\n  {\n    index: 12,\n    id: `unmatchedRecords`,\n    title: `Unmatched Records`,\n    icon: <WarningIcon />,\n  },\n  {\n    index: 13,\n    id: `calendarView`,\n    title: `Calendar View`,\n    icon: <DateRangeIcon />,\n  },\n  // {\n  //   index: 14,\n  //   id: `adminCalendarView`,\n  //   title: `Admin Calendar`,\n  //   icon: <EventNoteIcon />,\n  // },\n  { index: 15, id: `findByRef`, title: `Find By Ref No`, icon: <SearchIcon /> },\n];\n\nexport const getMenuContent = (role, index) => {\n   if (role === \"ovadmin\") {\n    switch (index) {\n      case 1:\n        return <OVBookingTable date=\"recent\" />;\n      case 2:\n        return <OVBookingTable date=\"today\" />;\n      case 3:\n        return <OVBookingTable date=\"old\" />;\n      case 4:\n        return <OVBookingTable date=\"future\" />;\n      case 5:\n        return <OVBookingTable date=\"all\" />;\n      case 6:\n        return <OVBookingTable date=\"trace\" />; \n      case 7:\n        return <OVBookingTable date=\"deleted\" />;\n      case 8:\n        return <OVCalendarView />;  \n      case 9:\n        return <PatientsTable />;  \n      case 10:\n          return <EmailTemplstesTable />\n      case 11:\n          return <SMSTemplatesTable />\n    \n      default:\n        return `Page Not Found!`;\n    }\n  } else {\n    return `Page Not Found!`;\n  }\n};\n\nexport const getMenuRole = (role) => {\n  switch (role) {\n    case \"ovadmin\":\n      return MenuList_OV_Admin;\n    default:\n      return [];\n  }\n};\n\nexport const getMenuId = (role, index) => {\n  const MenuList = getMenuRole(role);\n  for (var i = 0; i < MenuList.length; i++) {\n    if (MenuList[i].index === index) {\n      return MenuList[i].id;\n    }\n  }\n\n  return `Page Not Found!`;\n};\n\nexport const getMenuIndex = (role, id) => {\n  const MenuList = getMenuRole(role);\n  for (var i = 0; i < MenuList.length; i++) {\n    if (MenuList[i].id === id) {\n      return MenuList[i].index;\n    }\n  }\n\n  return -1;\n};\n","export const getRole = () => {\n    return sessionStorage.getItem('medexadmin-role')\n}\n\nexport const setRole = (role) => {\n    return sessionStorage.setItem('medexadmin-role', role)\n}\n\nexport const clearRole = (role) => {\n    return sessionStorage.removeItem('medexadmin-role')\n}","import React from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Link from \"@material-ui/core/Link\";\nimport Box from \"@material-ui/core/Box\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport GlobalState from \"./GlobalState\";\nimport Alert from \"@material-ui/lab/Alert\";\n\nimport logoImage from \"./images/optimal-vision-logo.png\"\n\nimport {\n  Grid,\n  AppBar,\n  Checkbox,\n  FormControl,\n  FormControlLabel,\n  InputAdornment,\n  InputLabel,\n  OutlinedInput,\n  Paper,\n  Backdrop,\n  CircularProgress,\n} from \"@material-ui/core\";\nimport { IconButton, Toolbar } from \"@material-ui/core\";\nimport { Visibility, VisibilityOff } from \"@material-ui/icons\";\nimport clsx from \"clsx\";\nimport Copyright from \"./CopyRight\";\n\nimport { useHistory } from \"react-router-dom\";\nimport UserService from \"./services/UserService\";\nimport { getMenuId } from \"./MenuList\";\n\nimport { useMediaQuery } from 'react-responsive'\nimport { borderRadius } from \"@material-ui/system\";\nimport { setRole } from \"./Role\";\nimport { getGlobalPath } from \"./GlobalPath\";\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    minHeight: \"100vh\",\n  },\n  image: {\n    backgroundImage: \"url(/images/bg.jpg)\",\n    backgroundRepeat: \"no-repeat\",\n    backgroundColor:\n      theme.palette.type === \"light\"\n        ? theme.palette.grey[50]\n        : theme.palette.grey[900],\n    backgroundSize: \"cover\",\n    backgroundPosition: \"center\",\n  },\n  paper: {\n    // margin: theme.spacing(15, 2),\n    padding: theme.spacing(4,4),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    position: \"relative\"\n    // border: `2px solid ${theme.palette.primary.main}`,\n    // borderRadius: \"8px\"\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n    color: \"#f5f5f5\",\n  },\n\n  margin: {\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n  },\n\n  alert: {\n    width: \"100%\",\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n  },\n\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: \"#fff\",\n  },\n\n  pageBg:{\n    paddingTop: theme.spacing(5),\n   \n    background: \"linear-gradient(274deg, rgba(255,255,255,1) 0%, rgba(255,255,255,1) 5%, rgba(210,210,210,1) 100%)\",\n    height: \"100vh\",\n    margin: 0,\n    padding:0,\n  },\n\n  appbarCenter: {\n    position: \"absolute\",\n    // width: \"260px\",\n    top: \"-40px\",\n    right: \"0\",\n    marginLeft: \"-145px\",\n    alignItems: \"center\",\n    justify: \"center\",\n    display: \"flex\",\n    backgroundColor: \"#fff\",\n    padding: \"5px 20px 15px 20px\",\n    borderRadius: \"8px\"\n  },\n\n  logoImage: {\n    width: \"30px\",\n    height: \"30px\",\n    marginLeft: \"0px\",\n  },\n\n  appbarTitle: {\n    color: \"#00a1c5\",\n    fontSize: \"1.2rem\",\n    fontWeight: \"500\",\n    marginRight: \"15px\",\n  },\n\n  adminPanelLabel: {\n    color: theme.palette.secondary.main, \n    fontWeight: \"600\",\n    marginBottom:\"20px\"\n  }\n\n\n\n\n}));\n\nexport default function SignIn() {\n  const classes = useStyles();\n  const [state, setState] = React.useContext(GlobalState);\n  const isMobile = useMediaQuery({ maxWidth: 1224 })\n\n\n  let history = useHistory();\n\n  const [password, setPassword] = React.useState(\"\");\n\n  const [username, setUsername] = React.useState(\"\");\n\n  const [saveChecked, setSaveChecked] = React.useState(false);\n\n  const [showPassword, setShowPassword] = React.useState(false);\n\n  const [error, setError] = React.useState(null);\n  const [submiting, setSubmiting] = React.useState(false);\n\n  const signIn = () => {\n    setSubmiting(true);\n\n    UserService.signIn({\n      username: username,\n      password: password,\n    })\n      .then((res) => {\n        setSubmiting(false);\n        if (res.data.status === \"OK\") {\n          setError(null);\n          const token = res.data.token;\n          if (saveChecked) {\n            localStorage.setItem(\"ovadmin-auth-token\", token);\n          } else {\n            sessionStorage.setItem(\"ovadmin-auth-token\", token);\n          }\n\n          setState((state) => ({ ...state, signedIn: true }));\n          setRole(res.data.roles[0])\n          setState((state) => ({ ...state, currentMenuIndex: 1 }));\n          history.push(getGlobalPath(`/${getMenuId(res.data.roles[0], 1)}`));\n        } else if (res.data.status === \"FAILED\") {\n          setError(res.data.error);\n        } else {\n          setError(\"Sorry, something went wrong, please try again.\");\n        }\n      })\n      .catch((err) => {\n        setSubmiting(false);\n        console.error(err);\n        setError(\"Sorry, something went wrong, please try again.\");\n      });\n  };\n\n  const usernameChanged = (event) => {\n    setUsername(event.target.value);\n    setError(null);\n  };\n\n  const passwordChanged = (event) => {\n    setPassword(event.target.value);\n    setError(null);\n  };\n\n  const handleClickShowPassword = () => {\n    setShowPassword(!showPassword);\n  };\n\n  const handleMouseDownPassword = (event) => {\n    event.preventDefault();\n  };\n\n  const saveCheckedChanged = (event) => {\n    setSaveChecked(event.target.checked);\n  };\n\n  return (\n    <div className={classes.pageBg}>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n\n        <Paper elevation={20}>\n          <div className={classes.paper}>\n            {/* <div className={classes.appbarCenter}>\n              <span className={classes.appbarTitle}>\n                Medical Express Clinic\n              </span>\n\n              <img\n                className={classes.logoImage}\n                src={getGlobalPath(\"/images/logo.png\")}\n                alt=\"logo image\"\n              />\n            </div> */}\n\n            <img src={logoImage} alt=\"Optimal Vision\" style={{marginBottom:\"20px\"}}/>\n\n            <Avatar className={classes.avatar}>\n              <LockOutlinedIcon />\n            </Avatar>\n            <Typography\n              component=\"h1\"\n              variant=\"h6\"\n              className={classes.adminPanelLabel}\n            >\n              Admin Panel\n            </Typography>\n\n            {error && (\n              <div className={classes.alert}>\n                <Alert severity=\"error\">\n                  {\" \"}\n                  <div style={{ lineHeight: \"1.5rem\", textAlign: \"justify\" }}>\n                    {error}\n                  </div>\n                </Alert>\n              </div>\n            )}\n\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"username\"\n              label=\"Username\"\n              name=\"email\"\n              autoComplete=\"username\"\n              value={username}\n              onChange={usernameChanged}\n              on\n              autoFocus\n            />\n            <FormControl\n              fullWidth\n              required\n              className={clsx(classes.margin, classes.textField)}\n              variant=\"outlined\"\n              onKeyPress={(event) => {\n                if (event.key === \"Enter\") {\n                  signIn();\n                }\n              }}\n            >\n              <InputLabel htmlFor=\"outlined-adornment-password\">\n                {\" \"}\n                Password{\" \"}\n              </InputLabel>\n              <OutlinedInput\n                id=\"outlined-adornment-password\"\n                name=\"outlined-adornment-password\"\n                type={showPassword ? \"text\" : \"password\"}\n                value={password}\n                onChange={passwordChanged}\n                autoComplete=\"current-password\"\n                endAdornment={\n                  <InputAdornment position=\"end\">\n                    <IconButton\n                      tabindex=\"-1\"\n                      aria-label=\"toggle password visibility\"\n                      onClick={handleClickShowPassword}\n                      onMouseDown={handleMouseDownPassword}\n                    >\n                      {showPassword ? <Visibility /> : <VisibilityOff />}\n                    </IconButton>\n                  </InputAdornment>\n                }\n                labelWidth={100}\n              />\n            </FormControl>\n\n            <FormControlLabel\n              style={{ textAlign: \"left\", width: \"100%\" }}\n              control={\n                <Checkbox\n                  value=\"remember\"\n                  color=\"primary\"\n                  checked={saveChecked}\n                  onChange={saveCheckedChanged}\n                />\n              }\n              label=\"Remember me\"\n            />\n            <Button\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={signIn}\n              className={classes.submit}\n            >\n              Sign In\n            </Button>\n          </div>\n        </Paper>\n\n        <Backdrop className={classes.backdrop} open={submiting}>\n          <Grid\n            container\n            direction=\"column\"\n            justify=\"center\"\n            alignItems=\"center\"\n            spacing={2}\n          >\n            <Grid item>\n              <CircularProgress color=\"inherit\" />\n            </Grid>\n            <Grid item>\n              <span style={{ textAlign: \"center\", color: \"#fff\" }}>\n                {\" \"}\n                {/* Please wait ...{\" \"} */}\n              </span>\n            </Grid>\n          </Grid>\n        </Backdrop>\n\n        <Box mt={5} style={{ color: \"#eee\" }}>\n          {/* <Copyright /> */}\n        </Box>\n      </Container>\n    </div>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useHistory } from \"react-router-dom\";\n\nimport {\n  Badge,\n  Divider,\n  Grid,\n  IconButton,\n  ListItemIcon,\n  Tooltip,\n} from \"@material-ui/core\";\nimport GlobalState from \"./GlobalState\";\nimport { List, ListItem } from \"@material-ui/core\";\n\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport { getMenuRole, getMenuId } from \"./MenuList\";\nimport { border, borderBottom } from \"@material-ui/system\";\nimport { getGlobalPath } from \"./GlobalPath\";\n\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\",\n  },\n  fixedHeight: {\n    height: 240,\n  },\n\n  icon: {\n    fontSize: \"1rem\",\n    color: \"#777\",\n    cursor: \"pointer\",\n    paddingTop: \"10px\",\n    paddingBottom: \"8px\",\n    borderBottom: \"1px solid #eee\",\n  },\n\n  iconSelected: {\n    color: \"#fff\",\n    backgroundColor:  theme.palette.primary.main,\n    transition: \"all 0.1s ease-in-out\"\n  },\n\n  menuText: {\n    fontSize: \"1rem\",\n    fontWeight: \"500\"\n  },\n\n  Badge:{\n    backgroundColor: \"rgb(220, 0, 78)\",\n    color: \"#fff\",\n    fontWeight: \"600\",\n    textAlign:\"center\",\n    borderRadius: \"50%\",\n    fontSize: \"0.85rem\",\n    lineHeight: \"0.85rem\",\n    padding:\"7px\",\n    marginTop:\"9px\",\n    width:\"28px\"\n\n  }\n}));\n\nexport default function MyMenu() {\n  const classes = useStyles();\n  const [state, setState] = React.useContext(GlobalState);\n\n  const [selectedIndex, setSelectedIndex] = React.useState(0);\n\n  let history = useHistory();\n\n  const updateShouldRefundsCount = async () =>\n  {\n  }\n\n  useEffect(() => {\n    setSelectedIndex(state.currentMenuIndex);\n    updateShouldRefundsCount()\n  }, [state.currentMenuIndex]);\n\n  const handleListItemClick = (event, index) => {\n    setSelectedIndex(index);\n    setState((state) => ({ ...state, currentMenuIndex: index }));\n\n    history.push(getGlobalPath(`/${getMenuId(state.role,index)}`));\n  };\n\n  return (\n    <React.Fragment>\n      <List>\n        {state.role &&\n          getMenuRole(state.role).map(\n            (item) =>\n              !item.hidden && (\n                // <ListItem button selected={selectedIndex === item.index} onClick={(event) => handleListItemClick(event, item.index)}>\n                // <ListItemIcon>\n                //     {item.icon}\n                // </ListItemIcon>\n                // <ListItemText primary={`${item.title}`} />\n                // </ListItem>\n                <React.Fragment key={`${item.id}`}>\n                  <div\n                    key={`${item.id}`}\n                    className={clsx(\n                      classes.icon,\n                      selectedIndex === item.index && classes.iconSelected\n                    )}\n                    onClick={(event) => handleListItemClick(event, item.index)}\n                  >\n                    <Grid\n                      container\n                      direction=\"row\"\n                      justify=\"flex-start\"\n                      alignItems=\"flex-start\"\n                      spacing={3}\n                      style={{paddingLeft:\"15px\"}}\n                    >\n                      <Grid item>{item.icon}</Grid>\n\n                      <Grid item style={{textAlign:\"left\"}}>\n                        <span\n                          className={classes.menuText}\n                        >{`${item.title}`}</span>{\" \"}\n                      </Grid>\n\n\n                    </Grid>\n                  </div>\n                </React.Fragment>\n              )\n          )}\n      </List>\n    </React.Fragment>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Box from \"@material-ui/core/Box\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Container from \"@material-ui/core/Container\";\nimport Link from \"@material-ui/core/Link\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\n\nimport { Avatar, Button, Grid, Tooltip, withStyles } from \"@material-ui/core\";\nimport GlobalState from \"./GlobalState\";\nimport MyMenu from \"./Menu\";\nimport { getMenuContent, getMenuId, getMenuIndex } from \"./MenuList\";\n\nimport { useLocation, useHistory } from \"react-router-dom\";\nimport Copyright from \"./CopyRight\";\nimport { useMediaQuery } from \"react-responsive\";\nimport PersonOutlineIcon from \"@material-ui/icons/PersonOutline\";\nimport AppsIcon from \"@material-ui/icons/Apps\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Menu from \"@material-ui/core/Menu\";\nimport dateformat from \"dateformat\";\nimport { getRole, setRole, clearRole } from \"./Role\";\nimport { getGlobalPath, getMenuIdFromGlobalPath } from \"./GlobalPath\";\n\nimport logoImage from \"./images/optimal-vision-logo.png\"\n\nconst drawerWidth = 240;\n\nconst StyledMenu = withStyles((theme) => ({\n  paper: {\n    marginTop: \"10px\",\n    // marginRight: \"5px\",\n    width: \"200px\",\n    height: \"200px\",\n    border: `1px solid #ddd`,\n    borderRadius: \"10px\",\n    paddingTop: \"10px\",\n  },\n}))((props) => (\n  <Menu\n    elevation={4}\n    getContentAnchorEl={null}\n    anchorOrigin={{\n      vertical: \"bottom\",\n      horizontal: \"center\",\n    }}\n    transformOrigin={{\n      vertical: \"top\",\n      horizontal: \"center\",\n    }}\n    {...props}\n  />\n));\n\nconst StyledMenuApps = withStyles((theme) => ({\n  paper: {\n    marginTop: \"5px\",\n    // marginRight: \"5px\",\n    width: \"280px\",\n    height: \"280px\",\n    border: `1px solid #ddd`,\n    borderRadius: \"10px\",\n    padding: \"10px\",\n  },\n}))((props) => (\n  <Menu\n    elevation={4}\n    getContentAnchorEl={null}\n    anchorOrigin={{\n      vertical: \"bottom\",\n      horizontal: \"center\",\n    }}\n    transformOrigin={{\n      vertical: \"top\",\n      horizontal: \"center\",\n    }}\n    {...props}\n  />\n));\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    padding: \"0 8px\",\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    // marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: \"none\",\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: \"relative\",\n    whiteSpace: \"nowrap\",\n    overflowX: \"hidden\",\n    width: drawerWidth,\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n\n    [theme.breakpoints.down(\"sm\")]: {\n      opacity: 0.9,\n    },\n  },\n  drawerPaperClose: {\n    overflowX: \"hidden\",\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up(\"sm\")]: {\n      width: theme.spacing(9),\n    },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: \"100vh\",\n    overflow: \"auto\",\n  },\n  container: {\n    paddingTop: theme.spacing(2),\n    paddingBottom: theme.spacing(2),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\",\n  },\n  fixedHeight: {\n    height: 240,\n  },\n\n  appbarTitle: {\n    color: \"#00a1c5\",\n    fontSize: \"1.2rem\",\n    fontWeight: \"500\",\n    marginRight: \"15px\",\n  },\n\n  appbarCenter: {\n    position: \"fixed\",\n    width: \"260px\",\n    top: \"10px\",\n    left: \"50%\",\n    marginLeft: \"-130px\",\n    alignItems: \"center\",\n    justify: \"center\",\n    display: \"flex\",\n  },\n\n  logoImage: {\n    width: \"204px\",\n    height: \"45px\",\n    // marginLeft: \"0px\",\n  },\n\n  logoImageMenu: {\n    width: \"136px\",\n    height: \"30px\",\n  },\n\n\n  userAvatar: {\n    backgroundColor: \"#fff\",\n    borderColor: \"#aaa\",\n    border: \"1px solid\",\n    color: \"#aaa\",\n    cursor: \"pointer\",\n  },\n\n  userAvatarSelected: {\n    backgroundColor: \"#fff\",\n    borderColor: theme.palette.primary.main,\n    border: \"1px solid\",\n    color: theme.palette.primary.main,\n    cursor: \"pointer\",\n  },\n\n  userAvatarBig: {\n    backgroundColor: \"#fff\",\n    borderColor: theme.palette.primary.main,\n    border: \"1px solid\",\n    color: theme.palette.primary.main,\n    width: \"60px\",\n    height: \"60px\",\n  },\n\n  appBarText: {\n    color: \"#888\",\n    [theme.breakpoints.down(\"sm\")]: {\n      display: \"none\",\n    },\n  },\n\n  appBarAppsIcon: {\n    // color: \"#888\",\n    cursor: \"pointer\",\n    fontSize: \"1.8rem\",\n  },\n\n  appBarAppsIconSelected: {\n    cursor: \"pointer\",\n    fontSize: \"1.8rem\",\n    color: theme.palette.primary.main,\n  },\n\n  usernameLabel: {\n    fontSize: \"1.2rem\",\n    color: theme.palette.primary.main,\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n  },\n\n  lastLoginLabel: {\n    color: \"#777\",\n    paddingTop: \"5px\",\n  },\n\n  appsLogo: {\n    width: \"70px\",\n    height: \"70px\",\n  },\n\n  appsBox: {\n    cursor: \"pointer\",\n    transition: \"all 0.1s ease-in-out\",\n    padding: \"2px\",\n    borderBottom: `5px solid #fff`,\n    borderRadius: \"5px\",\n    // border: \"2px solid #fff\",\n    \"&:hover\": {\n      //      border: `2px solid ${theme.palette.primary.main}`,\n      //      borderRadius: \"10px\",\n      borderBottom: `5px solid ${theme.palette.primary.main}`,\n      transition: \"all 0.1s ease-in-out\",\n    },\n  },\n\n  appsBoxSelected: {\n    cursor: \"pointer\",\n    transition: \"all 0.1s ease-in-out\",\n    padding: \"2px\",\n    borderBottom: `5px solid${theme.palette.primary.light}`,\n    borderRadius: \"5px\",\n    // border: \"2px solid #fff\",\n    \"&:hover\": {\n      //      border: `2px solid ${theme.palette.primary.main}`,\n      //      borderRadius: \"10px\",\n      borderBottom: `5px solid ${theme.palette.primary.light}`,\n      transition: \"all 0.1s ease-in-out\",\n    },\n  },\n\n  appsAdminLabel: {\n    color: \"#0264d4\",\n    fontWeight: \"600\",\n    fontSize: \"0.95rem\",\n    marginTop: \"-10px\",\n  },\n\n  appsPCRLabel: {\n    color: \"#4faef7\",\n    fontWeight: \"600\",\n    fontSize: \"0.95rem\",\n    marginTop: \"-10px\",\n  },\n\n  appsGynaeLabel: {\n    color: \"#e83caf\",\n    fontWeight: \"600\",\n    fontSize: \"0.95rem\",\n    marginTop: \"-10px\",\n  },\n\n  appsGPLabel: {\n    color: \"#f68529\",\n    fontWeight: \"600\",\n    fontSize: \"0.95rem\",\n    marginTop: \"-10px\",\n  },\n\n  appsSTDLabel: {\n    color: \"#f68529\",\n    fontWeight: \"600\",\n    fontSize: \"0.95rem\",\n    marginTop: \"-10px\",\n  },\n\n\n  \n\n  appsInToolbar: {\n    position: \"fixed\",\n    left: \"60px\",\n    top: \"-5px\",\n    height: \"65px\",\n    width: \"200px\",\n    overflow: \"hidden\",\n  },\n}));\n\nexport default function Dashboard() {\n  const classes = useStyles();\n  const [state, setState] = React.useContext(GlobalState);\n  const isMobile = useMediaQuery({ maxWidth: 768 });\n\n  const [open, setOpen] = React.useState(isMobile ? false : true);\n\n  const [currentMenuIndex, setCurrentMenuIndex] = React.useState(0);\n\n  const [anchorUserAvatar, setAnchorUserAvatar] = React.useState(null);\n  const handleUserAvatarClick = (event) => {\n    setAnchorUserAvatar(event.currentTarget);\n  };\n  const handleUserAvatarClose = () => {\n    setAnchorUserAvatar(null);\n  };\n\n  const [anchorApps, setAnchorApps] = React.useState(null);\n  const handleAppsClick = (event) => {\n    setAnchorApps(event.currentTarget);\n  };\n  const handleAppsClose = () => {\n    setAnchorApps(null);\n  };\n\n  const history = useHistory();\n\n  let location = useLocation();\n  React.useEffect(() => {\n    if (!state.role) return;\n    const index = getMenuIndex(\n      state.role,\n      getMenuIdFromGlobalPath(location.pathname)\n    );\n    setState((state) => ({ ...state, currentMenuIndex: index }));\n  }, [location]);\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, []);\n\n  useEffect(() => {\n    setCurrentMenuIndex(state.currentMenuIndex);\n    if (isMobile) {\n      setOpen(false);\n    }\n  }, [state.currentMenuIndex]);\n\n  const handleDrawerOpen = () => {\n    setOpen(!open);\n  };\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n\n  const handleLogout = () => {\n    localStorage.removeItem(\"ovadmin-auth-token\");\n    sessionStorage.removeItem(\"ovadmin-auth-token\");\n    clearRole();\n\n    setState((state) => ({ signedIn: false }));\n    history.replace(\"./login\");\n  };\n\n  const appsClicked = (role) => {\n    setRole(role);\n    setState((state) => ({ ...state, role: role }));\n    history.push(getGlobalPath(`/${getMenuId(role, 0)}`));\n    handleAppsClose();\n  };\n\n  const getAppsLogo = (role) => {\n    switch (role) {\n      case \"admin\":\n        return (\n          <img\n            src={getGlobalPath(\"/images/admin.png\")}\n            className={classes.appsLogo}\n          />\n        );\n      case \"pcr\":\n        return (\n          <img\n            src={getGlobalPath(\"/images/corona.png\")}\n            className={classes.appsLogo}\n          />\n        );\n\n      case \"gynae\":\n        return (\n          <img\n            src={getGlobalPath(\"/images/woman.png\")}\n            className={classes.appsLogo}\n          />\n        );\n\n        case \"gp\":\n        return (\n          <img\n            src={getGlobalPath(\"/images/doctor.png\")}\n            className={classes.appsLogo}\n          />\n        ); \n\n        case \"std\":\n          return (\n            <img\n              src={getGlobalPath(\"/images/std-icon.png\")}\n              className={classes.appsLogo}\n            />\n          ); \n\n      default:\n        return null;\n    }\n  };\n\n  const getAppsLabel = (role) => {\n    switch (role) {\n      case \"admin\":\n        return <div className={classes.appsAdminLabel}> {\"Admin\"} </div>;\n      case \"pcr\":\n        return <div className={classes.appsPCRLabel}> {\"PCR\"} </div>;\n      case \"gynae\":\n        return <div className={classes.appsGynaeLabel}> {\"Gynae\"} </div>;\n        case \"gp\":\n          return <div className={classes.appsGPLabel}> {\"GP\"} </div>;\n          case \"std\":\n            return <div className={classes.appsSTDLabel}> {\"STD\"} </div>;\n  \n      default:\n        return null;\n    }\n  };\n\n  return (\n    <React.Fragment>\n      {state.userId && state.role && (\n        <React.Fragment>\n          <div className={classes.root}>\n            <CssBaseline />\n            <AppBar\n              style={{ backgroundColor: \"#fff\", color: \"#555\", height: \"60px\" }}\n              position=\"absolute\"\n              className={clsx(\n                classes.appBar,\n                false && open && classes.appBarShift\n              )}\n            >\n              <Toolbar className={classes.toolbar}>\n                <IconButton\n                  edge=\"start\"\n                  color=\"inherit\"\n                  aria-label=\"open drawer\"\n                  onClick={handleDrawerOpen}\n                  className={clsx(classes.menuButton)}\n                >\n                  <MenuIcon />\n                </IconButton>\n\n                <div className={classes.appsInToolbar}>\n                  <Grid container direction=\"row\" alignItems=\"center\">\n                    <Grid item>{getAppsLogo(state.role)}</Grid>\n                    <Grid item>\n                      <div style={{ paddingTop: \"8px\" }}>\n                        {getAppsLabel(state.role)}\n                      </div>\n                    </Grid>\n                  </Grid>\n                </div>\n\n                <div className={classes.appbarCenter}>\n                  {!isMobile && (\n                    <React.Fragment>\n                      <img\n                        className={classes.logoImage}\n                        src={logoImage}\n                        alt=\"logo image\"\n                      />\n                    </React.Fragment> \n                   )}\n                </div>\n\n                <div\n                  style={{\n                    display: \"flex\",\n                    justifyContent: \"flex-end\",\n                    width: \"100%\",\n                    paddingLeft: \"2%\",\n                  }}\n                >\n                  <Grid\n                    container\n                    spacing={2}\n                    direction=\"row-reverse\"\n                    justify=\"flex-start\"\n                    alignItems=\"center\"\n                  >\n                    <Grid item>\n                      <Avatar\n                        className={\n                          anchorUserAvatar\n                            ? classes.userAvatarSelected\n                            : classes.userAvatar\n                        }\n                        onClick={handleUserAvatarClick}\n                      >\n                        <IconButton>\n                          <PersonOutlineIcon />\n                        </IconButton>\n                      </Avatar>\n                    </Grid>\n\n                    {state.userId?.roles.find((e) => e === \"admin\") && (\n                      <Grid item>\n                        <IconButton onClick={handleAppsClick}>\n                          <AppsIcon\n                            className={\n                              anchorApps\n                                ? classes.appBarAppsIconSelected\n                                : classes.appBarAppsIcon\n                            }\n                          />\n                        </IconButton>\n                      </Grid>\n                    )}\n                  </Grid>\n                </div>\n              </Toolbar>\n            </AppBar>\n\n            <StyledMenu\n              id=\"user-avatar-menu\"\n              anchorEl={anchorUserAvatar}\n              keepMounted\n              open={Boolean(anchorUserAvatar)}\n              onClose={handleUserAvatarClose}\n            >\n              <Grid\n                container\n                direction=\"column\"\n                justify=\"center\"\n                alignItems=\"center\"\n              >\n                <Grid item>\n                  <Avatar className={classes.userAvatarBig}>\n                    <PersonOutlineIcon style={{ fontSize: \"2.5rem\" }} />\n                  </Avatar>\n                </Grid>\n                <Grid item>\n                  <div className={classes.usernameLabel}>\n                    {\" \"}\n                    {state.userId?.username}{\" \"}\n                  </div>\n                </Grid>\n                {/* <Grid item>\n                  <span style={{ color: \"#999\", fontSize: \"0.85rem\" }}>\n                    Logged in at :\n                  </span>\n                </Grid>\n                <Grid item>\n                  <div className={classes.lastLoginLabel}>\n                    {dateformat(state.userId?.lastLoginTimeStamp)}\n                  </div>\n                </Grid> */}\n\n                <Grid item>\n                  <Button\n                    onClick={handleLogout}\n                    variant=\"outlined\"\n                    color=\"secondary\"\n                    style={{\n                      marginTop: \"30px\",\n                      width: \"150px\",\n                      borderRadius: \"30px\",\n                    }}\n                  >\n                    Logout\n                  </Button>\n                </Grid>\n              </Grid>\n            </StyledMenu>\n\n            <StyledMenuApps\n              id=\"apps-menu\"\n              anchorEl={anchorApps}\n              keepMounted\n              open={Boolean(anchorApps)}\n              onClose={handleAppsClose}\n            >\n              <Grid container spacing={1}>\n                <Grid item>\n                  <Grid\n                    container\n                    direction=\"column\"\n                    justify=\"center\"\n                    alignItems=\"center\"\n                    className={\n                      state.role === \"admin\"\n                        ? classes.appsBoxSelected\n                        : classes.appsBox\n                    }\n                    onClick={() => appsClicked(\"admin\")}\n                  >\n                    <Grid item>{getAppsLogo(\"admin\")}</Grid>\n                    <Grid item>{getAppsLabel(\"admin\")}</Grid>\n                  </Grid>\n                </Grid>\n\n                <Grid item>\n                  <Grid\n                    container\n                    direction=\"column\"\n                    justify=\"center\"\n                    alignItems=\"center\"\n                    className={\n                      state.role === \"pcr\"\n                        ? classes.appsBoxSelected\n                        : classes.appsBox\n                    }\n                    onClick={() => appsClicked(\"pcr\")}\n                  >\n                    <Grid item>{getAppsLogo(\"pcr\")}</Grid>\n                    <Grid item>{getAppsLabel(\"pcr\")}</Grid>\n                  </Grid>\n                </Grid>\n\n                <Grid item>\n                  <Grid\n                    container\n                    direction=\"column\"\n                    justify=\"center\"\n                    alignItems=\"center\"\n                    className={\n                      state.role === \"gynae\"\n                        ? classes.appsBoxSelected\n                        : classes.appsBox\n                    }\n                    onClick={() => appsClicked(\"gynae\")}\n                  >\n                    <Grid item>{getAppsLogo(\"gynae\")}</Grid>\n                    <Grid item>{getAppsLabel(\"gynae\")}</Grid>\n                  </Grid>\n                </Grid>\n\n                <Grid item>\n                  <Grid\n                    container\n                    direction=\"column\"\n                    justify=\"center\"\n                    alignItems=\"center\"\n                    className={\n                      state.role === \"gp\"\n                        ? classes.appsBoxSelected\n                        : classes.appsBox\n                    }\n                    onClick={() => appsClicked(\"gp\")}\n                  >\n                    <Grid item>{getAppsLogo(\"gp\")}</Grid>\n                    <Grid item>{getAppsLabel(\"gp\")}</Grid>\n                  </Grid>\n                </Grid>\n\n                <Grid item>\n                  <Grid\n                    container\n                    direction=\"column\"\n                    justify=\"center\"\n                    alignItems=\"center\"\n                    className={\n                      state.role === \"std\"\n                        ? classes.appsBoxSelected\n                        : classes.appsBox\n                    }\n                    onClick={() => appsClicked(\"std\")}\n                  >\n                    <Grid item>{getAppsLogo(\"std\")}</Grid>\n                    <Grid item>{getAppsLabel(\"std\")}</Grid>\n                  </Grid>\n                </Grid>\n\n              </Grid>\n            </StyledMenuApps>\n\n            <Drawer\n              variant={isMobile ? \"temporary\" : \"persistent\"}\n              classes={{\n                paper: clsx(\n                  classes.drawerPaper,\n                  !open && classes.drawerPaperClose\n                ),\n              }}\n              open={open}\n            >\n              <div className={classes.toolbarIcon}>\n                <React.Fragment>\n                  <img\n                    className={classes.logoImageMenu}\n                    src={logoImage} \n                    alt=\"logo image\"\n\n                  />\n                </React.Fragment>\n                <IconButton onClick={handleDrawerClose}>\n                  <ChevronLeftIcon />\n                </IconButton>\n              </div>\n              <Divider />\n\n              <MyMenu />\n            </Drawer>\n\n            <main className={classes.content}>\n              <div className={classes.appBarSpacer} />\n              <Container\n                maxWidth={isMobile ? \"xs\" : \"xl\"}\n                className={classes.container}\n              >\n                {currentMenuIndex > 0 && getMenuContent(state.role, currentMenuIndex)}\n              </Container>\n            </main>\n          </div>\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n}\n","import UserService from \"./services/UserService\";\n\nexport async function getUserIdFromToken(token)\n{\n    try{\n       const res  = await UserService.checkToken({token: token})\n       if (res.data.status === 'OK')\n        {\n            return {username: res.data.userId, forename: res.data.forename, surname: res.data.surname, roles:res.data.roles, lastLoginTimeStamp: res.data.lastLoginTimeStamp}\n        }\n       else\n        {\n            return null\n        }\n    }\n    catch(err)\n    {\n        return null\n    }\n  \n}","import React from 'react';\n\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport GlobalState from './GlobalState';\n\n\n\n\nimport SignIn from './SignIn';\nimport Dashboard from './Dashboard';\n\nimport { useLocation, useHistory} from \"react-router-dom\";\nimport { getUserIdFromToken } from './TokenVerifier';\nimport UserService from './services/UserService';\nimport { getMenuId } from './MenuList';\nimport { getRole, setRole } from './Role';\nimport { getGlobalPath } from './GlobalPath';\n\n\nconst useStyles = makeStyles((theme) => ({\n\n    appBar: {\n        position: 'static',\n        backgroundColor: \"#333\",\n        color: \"#fff\",\n        //alignItems: 'center'\n    \n      },\n\n      signOutButton:{\n        color: \"#fff\",\n        marginRight : \"20px\",\n        fontWeight: \"500\"\n      },\n\n      title: {\n        flexGrow : 1\n      }\n\n\n}));\n\nexport default function Navigator() {\n\n    const classes = useStyles();\n    const [state, setState] = React.useContext(GlobalState);\n\n    const [loaded, setLoaded] = React.useState(false)\n\n    let history = useHistory();\n\n    const handleSignOut = () =>\n    {\n      setState(state => ({...state, signedIn: false}));\n\n    }\n\n    let location = useLocation();\n\n    React.useEffect(() => {\n\n      const checkToken = async () =>\n      {\n        const authToken = localStorage.getItem('ovadmin-auth-token') || sessionStorage.getItem('ovadmin-auth-token');\n        UserService.setToken(authToken)\n\n         if (!authToken)\n        {\n          setState(state => ({...state, signedIn: false, signedUp: false, forgotPassword: false}));\n          setLoaded(true)\n          history.push(getGlobalPath('/login'));\n        }\n        else\n        {\n           const userId = await getUserIdFromToken(authToken);\n           if (!userId)\n           {\n              setState(state => ({...state, signedIn: false, signedUp: false, forgotPassword: false}));\n              history.push(getGlobalPath('/login'));\n           }\n           else if (location.pathname === getGlobalPath('/') || location.pathname === getGlobalPath('/#') || location.pathname.startsWith(getGlobalPath('/login')))\n           {\n            if (!getRole())\n            {\n             setRole(userId.roles[0])\n            }\n             setState(state => ({...state, signedIn: true, signedUp: false, forgotPassword: false, userId: userId, role: getRole()}));\n            \n             history.push(getGlobalPath(`/${getMenuId(getRole(),1)}`));\n           }\n           else\n           {\n              if (!getRole())\n              {\n               setRole(userId.roles[0])\n              }\n             setState(state => ({...state, signedIn: true, userId: userId, role: getRole()}));\n           }\n\n           setLoaded(true)\n        }\n      }\n\n      checkToken();\n   \n    }, [location.pathname]);\n\n    const getComponentFromState = () =>\n    {\n\n      if (state.signedIn)\n      {\n        return <Dashboard/>\n      }\n      else\n      {\n          return <SignIn/>    \n      }\n    }\n\n    return (\n        <React.Fragment>\n            <CssBaseline />\n\n            {\n              loaded && (\n                getComponentFromState()\n              )\n            }\n        \n        </React.Fragment>\n    );\n}","import React, { Fragment, Suspense, lazy } from \"react\";\nimport { MuiThemeProvider, CssBaseline } from \"@material-ui/core\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport theme from \"./theme\";\nimport GlobalStyles from \"./GlobalStyles\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport GlobalState from \"./GlobalState\";\nimport Navigator from './Navigator';\n\n\n\n\n// Configure JSS\n\n\nfunction App() {\n  const [state, setState] = React.useState({currentMenuIndex:1});\n\n  return (\n    <GlobalState.Provider value={[state, setState]}>\n      <BrowserRouter>\n        <MuiThemeProvider theme={theme}>\n          <CssBaseline />\n          <GlobalStyles />\n\n       \n\n              <Navigator/>\n\n       \n\n\n        </MuiThemeProvider>\n      </BrowserRouter>\n    </GlobalState.Provider>\n  );\n}\n\nserviceWorker.register();\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <App />,\n  document.getElementById(\"root\")\n);\n","\n\n\nconst FormatDateFromString = (str) =>\n{\n    if (!str)\n    return ''\n    \n    return `${str.substr(8,2)}-${str.substr(5,2)}-${str.substr(0,4)}`;\n}\n\nconst FormatDateFromStringWithSlash = (str) =>\n{\n    return `${str.substr(8,2)}/${str.substr(5,2)}/${str.substr(0,4)}`;\n}\n\nconst RevertFormatDateFromString = (str) =>\n{\n    if (!str)\n    return ''\n\n    return `${str.substr(6,4)}-${str.substr(3,2)}-${str.substr(0,2)}`;\n}\n\n\nconst FormatDateFromStringShortYear = (str) =>\n{\n    if (!str)\n    return ''\n\n    return `${str.substr(8,2)}-${str.substr(5,2)}-${str.substr(2,2)}`;\n}\n\n\n\nmodule.exports = {\n    FormatDateFromString : FormatDateFromString,\n    FormatDateFromStringShortYear : FormatDateFromStringShortYear,\n    RevertFormatDateFromString: RevertFormatDateFromString,\n    FormatDateFromStringWithSlash: FormatDateFromStringWithSlash\n}"],"sourceRoot":""}