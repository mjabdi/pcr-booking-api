{"version":3,"sources":["PriceCalculator.js","GlobalState.js","theme.js","ScreeningPackageLoader.js","CategoriesForm.js","HealthGenderFrom.js","ScreenPackagesForm.js","services/api.js","services/TimeService.js","DateForm.js","TimeForm.js","PersonsBox.js","AntiBodyComponent.js","DateField.js","InformationForm.js","services/BookService.js","ReviewForm.js","ChooseCountryForm.js","images/ok.png","images/error.png","ResultsForm.js","services/PaymentService.js","PaymentForm.js","PayForm.js","SmartEntryForm.js","CategoriesFormWalkin.js","CategoriesFormAppointment.js","WelcomeForm.js","App.js","index.js","DateFormatter.js"],"names":["calculatePrice","person","price","certificate","antiBodyTest","module","exports","calculateTotalPrice","persons","totalPrice","i","length","GlobalState","React","createContext","darkBlack","borderColor","theme","createMuiTheme","palette","primary","main","light","contrastText","secondary","common","black","warning","dark","tonalOffset","background","default","spacing","breakpoints","values","xl","lg","md","sm","xs","border","borderWidth","overrides","MuiExpansionPanel","root","position","MuiTableCell","paddingLeft","paddingRight","borderBottom","MuiDivider","backgroundColor","height","MuiPrivateNotchedOutline","MuiListItem","divider","MuiDialog","paper","width","maxWidth","marginLeft","marginRight","MuiTooltip","tooltip","fontSize","MuiExpansionPanelDetails","enGB","responsiveFontSizes","categoriesWalkin","key","text","link","categoriesAppointment","small","makeStyles","catBox","textAlign","fontWeight","padding","borderRadius","cursor","color","catBoxSelected","minWidth","transition","manImage","filter","errorMessage","axios","create","baseURL","headers","TimeService","getFirstAvailableDate","axiosRetry","API","retries","retryDelay","retryCount","get","getFullyBookedDates","getTimeSlots","date","date_utc","dateformat","Date","toUTCString","slice","DateFnsUtils","loadingBox","title","marginBottom","display","flexWrap","justifyContent","overflow","gridList","box","margin","boxMobile","boxSelected","boxSelectedMobile","boxDisable","boxDisableMobile","boxRed","boxInfo","ul","listStyle","li","icon","heading","typography","pxToRem","flexBasis","flexShrink","secondaryHeading","infoDetails","infoTitle","infoData","Accordion","formControl","Box","boxShadow","marginTop","Label","CheckBox","FormTitle","pageTitle","BookService","bookAppointment","payload","post","getNewReference","getBookingById","id","boxTime","boxTitle","top","left","float","infoTitleTime","infoDataTime","terms","textDecoration","AddAnother","infoDataPrice","bold","doneImage","errorImage","PaymentService","doPayment","SANDBOX","Component","backdrop","zIndex","drawer","submitButton","useStyles","CategoriesFormWalkin","useContext","state","setState","classes","useEffect","window","scrollTo","package","cat","Fragment","Grid","container","alignItems","justify","categories","map","item","href","style","className","onClick","activeStep","CategoriesFormAppointment","Copyright","Typography","variant","align","getFullYear","Link","isMobile","appBar","logo","layout","up","stepper","buttons","button","logoImage","doctorImage","privacyButton","faqButton","textContent","lineHeight","textContentMobile","getStartedButton","AirIcon","Treatment","paddingTop","BookNow","paddingBottom","BookNowAfter","ByAppointment","WelcomeForm","useState","open","openFAQ","descriptionElementRef","useRef","descriptionElement","current","focus","descriptionElementRefFAQ","descriptionElementFAQ","CssBaseline","AppBar","Toolbar","direction","noWrap","Paper","App","Provider","value","ReactDOM","render","StrictMode","document","getElementById","FormatDateFromString","str","substr"],"mappings":"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","file":"static/js/main.c194ec60.chunk.js","sourcesContent":["\n\nconst calculatePrice = (person) =>\n{\n\n    var price = 199;\n    \n    if (person.certificate)\n    {\n        price += 50;\n    }\n\n    if (person.antiBodyTest)\n    {\n        price += (99 + 50);\n    }\n\n    return price;\n\n}\n\nconst calculateTotalPrice = (persons) =>\n{\n    var totalPrice = 0;\n    for (var i = 0 ; i < persons.length ; i++)\n    {\n        totalPrice += calculatePrice(persons[i]);\n    }\n\n    return totalPrice;\n}\n\nmodule.exports = {\n    calculatePrice : calculatePrice,\n    calculateTotalPrice : calculateTotalPrice\n}","import React from 'react'; \nconst GlobalState = React.createContext([{}, () => {}]); \nexport default GlobalState;","import { createMuiTheme, responsiveFontSizes } from \"@material-ui/core\";\nimport { enGB } from '@material-ui/core/locale';\n\n\nconst black = \"#212121\";\nconst darkBlack = \"rgb(36, 40, 44)\";\nconst background = \"#f9f9f9\";\n\nconst warningLight = \"rgba(253, 200, 69, .3)\";\nconst warningMain = \"rgba(253, 200, 69, .5)\";\nconst warningDark = \"rgba(253, 200, 69, .7)\";\n\n// border\nconst borderWidth = 2;\nconst borderColor = \"rgba(0, 0, 0, 0.13)\";\n\n// breakpoints\nconst xl = 1920;\nconst lg = 1280;\nconst md = 960;\nconst sm = 600;\nconst xs = 0;\n\n// spacing\nconst spacing = 8;\n\nconst theme = createMuiTheme({\n\n  palette: {\n\n    primary: { main: \"#006abd\",\n               light: \"#28c1ff\",\n                  contrastText: \"#fff\" \n              //  dark: \"#0288D1\",\n              //  light: \"#B3E5FC\"\n              \n      },\n    secondary: { main: \"#555\", contrastText: \"#fafafa\" },\n    common: {\n      black,\n      darkBlack\n    },\n    warning: {\n      light: warningLight,\n      main: warningMain,\n      dark: warningDark\n    },\n    // Used to shift a color's luminance by approximately\n    // two indexes within its tonal palette.\n    // E.g., shift from Red 500 to Red 300 or Red 700.\n    tonalOffset: 0.2,\n    background: {\n      default: background\n    },\n    spacing\n  },\n  breakpoints: {\n    // Define custom breakpoint values.\n    // These will apply to Material-UI components that use responsive\n    // breakpoints, such as `Grid` and `Hidden`. You can also use the\n    // theme breakpoint functions `up`, `down`, and `between` to create\n    // media queries for these breakpoints\n    values: {\n      xl,\n      lg,\n      md,\n      sm,\n      xs\n    }\n  },\n  border: {\n    borderColor: borderColor,\n    borderWidth: borderWidth\n  },\n  overrides: {\n    MuiExpansionPanel: {\n      root: {\n        position: \"static\"\n      }\n    },\n    MuiTableCell: {\n      root: {\n        paddingLeft: spacing * 2,\n        paddingRight: spacing * 2,\n        borderBottom: `${borderWidth}px solid ${borderColor}`,\n        [`@media (max-width:  ${sm}px)`]: {\n          paddingLeft: spacing,\n          paddingRight: spacing\n        }\n      }\n    },\n    MuiDivider: {\n      root: {\n        backgroundColor: borderColor,\n        height: borderWidth\n      }\n    },\n    MuiPrivateNotchedOutline: {\n      root: {\n        borderWidth: borderWidth\n      }\n    },\n    MuiListItem: {\n      divider: {\n        borderBottom: `${borderWidth}px solid ${borderColor}`\n      }\n    },\n    MuiDialog: {\n      paper: {\n        width: \"100%\",\n        maxWidth: 430,\n        marginLeft: spacing,\n        marginRight: spacing\n      }\n    },\n    MuiTooltip: {\n      tooltip: {\n        backgroundColor: darkBlack,\n        fontSize: \"0.7rem\"\n      }\n    },\n    MuiExpansionPanelDetails: {\n      root: {\n        [`@media (max-width:  ${sm}px)`]: {\n          paddingLeft: spacing,\n          paddingRight: spacing\n        }\n      }\n    }\n  },\n \n}, enGB);\n\nexport default responsiveFontSizes(theme);\n","const packages_health_men_under40 = [\n    // { price: 395 , text: \"MEDISCREEN BASIC MOT\" },\n    { price: 595 , text: \"HEALTH BASICS MOT\" },\n    { price: 895 , text: \"HEALTH ADVANCED MOT\" },\n    { price: 1299 , text: \"HEALTH ELITE MOT\" },\n    // { price: 525 , text: \"MEDISCREEN SEXUAL HEALTH MOT\" },\n  ]\n\n  const packages_health_men_over40 = [\n    { price: 795 , text: \"MEN'S HEALTH BASICS MOT\" },\n    { price: 995 , text: \"MEN'S HEALTH ADVANCED MOT\" },\n    { price: 1999 , text: \"MEN'S HEALTH ELITE MOT\" },\n    // { price: 3999 , text: \"PLATINIUM HEALTH SCREEN MEN\" },\n    // { price: 525 , text: \"MEDISCREEN SEXUAL HEALTH MOT\" },\n  ]\n\n  const packages_health_women_under40 = [\n    // { price: 395 , text: \"MEDISCREEN BASIC MOT\" },\n    { price: 595 , text: \"WOMEN'S HEALTH BASICS MOT\" },\n    { price: 895 , text: \"WOMEN'S HEALTH ADVANCED MOT\" },\n    { price: 1999 , text: \"WOMEN'S HEALTH ELITE MOT\" },\n    // { price: 525 , text: \"MEDISCREEN SEXUAL HEALTH MOT\" },\n  ]\n\n  const packages_health_women_over40 = [\n    { price: 795 , text: \"HEALTH BASICS MOT\" },\n    { price: 1099 , text: \"HEALTH ADVANCED MOT\" },\n    { price: 1499 , text: \"HEALTH ADVANCED PLUS MOT\" },\n    { price: 2499 , text: \"HEALTH ELITE MOT\" },\n    // { price: 525 , text: \"MEDISCREEN SEXUAL HEALTH MOT\" },\n  ]\n\n  const packages_allergy = [\n    { price: 999 , text: \"ALLERGY BASICS MOT PACKAGE\" },\n    { price: 1499 , text: \"ALLERGY ADVANCED MOT PACKAGE\" },\n  ]\n\n  export const categories = [\n    { key: \"gp\", text: \"Private Consultation / GP / Doctor\", link: \"https://londonmedicalclinic.co.uk/medicalexpressclinic/book/gp/\"},\n    { key: \"std\", text: \"Sexual Health Clinic\", link: \"https://londonmedicalclinic.co.uk/medicalexpressclinic/book/std/\"},\n    { key: \"blood\", text: \"Self Request Tests (Blood, Urine, Swab etc.)\", link: \"https://londonmedicalclinic.co.uk/medicalexpressclinic/book/blood/\"},\n    { key: \"weight_loss\", text: \"Weight Loss Management\", link: \"https://londonmedicalclinic.co.uk/medicalexpressclinic/book/screening/?cat=weight_loss\"},\n    { key: \"gynae\", text: \"Gynae Clinic\", link: \"https://londonmedicalclinic.co.uk/medicalexpressclinic/book/gynae/\"},\n    { key: \"hs\", text: \"Health Screening\", link: \"https://londonmedicalclinic.co.uk/medicalexpressclinic/book/screening/?cat=health\"},\n    { key: \"visa\", text: \"Visa Medical\", link: \"https://londonmedicalclinic.co.uk/medicalexpressclinic/book/screening/?cat=visa\"},\n    { key: \"occup\", text: \"Pre Employment & Occupational Health\", link: \"https://londonmedicalclinic.co.uk/medicalexpressclinic/book/screening/?cat=occupational\"},\n    { key: \"allergy\", text: \"Allergy Screening\", link: \"https://londonmedicalclinic.co.uk/medicalexpressclinic/book/screening/?cat=allergy\", small: false},\n    { key: \"corp\", text: \"Corporate Clients\", link: \"https://londonmedicalclinic.co.uk/medicalexpressclinic/book/corporate/\", small: false},\n  ]\n\n\n  export const categoriesWalkin = [\n    { key: \"gp\", text: \"Private Consultation / GP / Doctor\", link: \"https://londonmedicalclinic.co.uk/medicalexpressclinic/book/gp/\"},\n    { key: \"std\", text: \"Sexual Health Clinic\", link: \"https://londonmedicalclinic.co.uk/medicalexpressclinic/book/std/\"},\n    { key: \"blood\", text: \"Self Request Tests (Blood, Urine, Swab etc.)\", link: \"https://londonmedicalclinic.co.uk/medicalexpressclinic/book/blood/\"},\n    { key: \"weight_loss\", text: \"Weight Loss Management\", link: \"https://londonmedicalclinic.co.uk/medicalexpressclinic/book/screening/?cat=weight_loss\"},\n  ]\n\n  export const categoriesAppointment = [\n    { key: \"gynae\", text: \"Gynae Clinic\", link: \"https://londonmedicalclinic.co.uk/medicalexpressclinic/book/gynae/\"},\n    { key: \"hs\", text: \"Health Screening\", link: \"https://londonmedicalclinic.co.uk/medicalexpressclinic/book/screening/?cat=health\"},\n    { key: \"visa\", text: \"Visa Medical\", link: \"https://londonmedicalclinic.co.uk/medicalexpressclinic/book/screening/?cat=visa\"},\n    { key: \"occup\", text: \"Pre Employment & Occupational Health\", link: \"https://londonmedicalclinic.co.uk/medicalexpressclinic/book/screening/?cat=occupational\"},\n    { key: \"allergy\", text: \"Allergy Screening\", link: \"https://londonmedicalclinic.co.uk/medicalexpressclinic/book/screening/?cat=allergy\", small: false},\n    { key: \"corp\", text: \"Corporate Clients\", link: \"https://londonmedicalclinic.co.uk/medicalexpressclinic/book/corporate/\", small: false},\n  ]\n\n\n\n\n  export const getCatText = (key) => {\n      const cat = categories.find(e => e.key === key)\n      if (cat)\n      {\n          return cat.text\n      }else\n      {\n          return ''\n      }\n  }\n\n\n  export const getPackageByIndex = (index, state) =>\n  {\n    try{\n        return loadPackages(state)[index-1]\n    }catch(err)\n    {\n        return \"not-defined\"\n    }\n  }\n\n  export const loadPackages = (state) => {\n    if (state.cat?.key === \"health\")\n    {\n      if (state.gender === \"men\"){\n        if (state.age === \"under40\"){\n          return packages_health_men_under40\n        }else if (state.age === \"over40\"){\n          return packages_health_men_over40\n        }\n      }else if (state.gender === \"women\"){\n        if (state.age === \"under40\"){\n          return packages_health_women_under40\n        }else if (state.age === \"over40\"){\n          return packages_health_women_over40\n        }\n      }\n    }else if (state.cat?.key === \"allergy\"){\n      return packages_allergy\n    }\n    return []\n  }\n","import React, { useEffect } from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport GlobalState from './GlobalState';\n\nimport { Grid } from '@material-ui/core';\n\nimport {categories} from './ScreeningPackageLoader'\n\nconst useStyles = makeStyles((theme) => ({\n\n  catBox: {\n    textAlign: \"center\",\n    width: \"100%\",\n    fontSize: \"0.9rem\",\n    fontWeight:\"600\",\n    padding: \"5px\",\n    border: \"1px solid #eee\",\n    height: \"120px\",\n    borderRadius: \"8px\",\n    cursor: \"pointer\",\n    color: \"#333\",\n    background: \"linear-gradient(90deg, rgba(214,214,214,1) 30%, rgba(222,222,222,1) 74%, rgba(222,222,222,1) 100%)\",\n    // transition : \"all 0.3s ease-in\",\n    \"&:hover\" : {\n      background: \"linear-gradient(90deg, rgba(179,68,1,1) 30%, rgba(232,82,25,1) 74%, rgba(231,109,62,1) 100%)\",\n      color : \"#fff\",\n      // transition : \"all 0.1s ease-in\",\n    }\n  },\n\n  catBoxSelected: {\n    textAlign: \"center\",\n    width: \"100%\",\n    fontSize: \"1rem\",\n    fontWeight:\"600\",\n    padding: \"10px\",\n    border: \"1px solid #eee\",\n    height: \"120px\",\n    borderRadius: \"8px\",\n    cursor: \"pointer\",\n    color: \"#fff\",\n    background: \"linear-gradient(90deg, rgba(179,68,1,1) 30%, rgba(232,82,25,1) 74%, rgba(231,109,62,1) 100%)\",\n  }\n\n\n}));\n\nexport default function CategoriesForm() {\n  const [state, setState] = React.useContext(GlobalState);\n  const classes = useStyles();\n\n\n  useEffect(() => {\n    window.scrollTo(0, 0)\n  }, []);\n\n  useEffect(() => {\n    setState(state => ({...state, package: null}))\n  }, [state.cat]);\n\n  const catClicked = (key, text) => {\n    setState(state => ({...state, cat: {key: key, text: text}, activeStep: state.activeStep + 1}))\n  }\n\n  return (\n    <React.Fragment>\n      <Grid container spacing={1} alignItems=\"center\" justify=\"start\">\n        {\n          categories.map(item => (\n            <Grid item xs={6} sm={3}  >\n              <a href={item.link} style={{textDecoration: \"none\"}}>\n              <div style={item.small ? {height: \"70px\"} : {}} className={state.cat?.key === item.key ? classes.catBoxSelected  : classes.catBox} onClick={() => catClicked(item.key, item.text)}>\n                <Grid container alignItems=\"center\" justify=\"center\" style={{height:\"100%\", width:\"100%\"}}>\n                  <Grid item>\n                      {item.text}\n                  </Grid>\n                 </Grid> \n              </div>\n              </a>\n            </Grid>\n          ))\n        }\n      </Grid>\n    </React.Fragment>\n  );\n}","import React, { useEffect } from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport GlobalState from './GlobalState';\n\nimport { Grid } from '@material-ui/core';\nconst useStyles = makeStyles((theme) => ({\n\n  catBox: {\n    textAlign: \"center\",\n    width: \"100%\",\n    minWidth: \"110px\",\n    fontSize: \"1.1rem\",\n    fontWeight:\"600\",\n    padding: \"3px\",\n    border: \"1px solid #eee\",\n    height: \"70px\",\n    borderRadius: \"8px\",\n    cursor: \"pointer\",\n    color: \"#fff\",\n    background: \"linear-gradient(90deg, rgba(0,95,147,1) 33%, rgba(6,117,179,1) 63%, rgba(32,150,218,1) 100%)\",\n    transition : \"all 0.3s ease-in\",\n    \"&:hover\" : {\n      background: \"linear-gradient(90deg, rgba(179,68,1,1) 30%, rgba(232,82,25,1) 74%, rgba(231,109,62,1) 100%)\",\n      transition : \"all 0.3s ease-in\",\n    }\n  },\n\n  catBoxSelected: {\n    textAlign: \"center\",\n    width: \"100%\",\n    minWidth: \"110px\",\n    fontSize: \"1.1rem\",\n    fontWeight:\"600\",\n    padding: \"3px\",\n    border: \"1px solid #eee\",\n    height: \"70px\",\n    borderRadius: \"8px\",\n    cursor: \"pointer\",\n    color: \"#fff\",\n    background: \"linear-gradient(90deg, rgba(179,68,1,1) 30%, rgba(232,82,25,1) 74%, rgba(231,109,62,1) 100%)\",\n  },\n\n  manImage: {\n    filter: \"brightness(0) invert(1)\",\n    maxWidth: \"25px\",\n  },\n\n  errorMessage: {\n    width:\"100%\",\n    textAlign:\"center\",\n    fontWeight:\"600\",\n    fontSize:\"1rem\",\n    color: \"red\",\n    height: \"30px\",\n    padding:\"10px\"\n  }\n\n\n}));\n\nexport default function HealthGenderForm() {\n  const [state, setState] = React.useContext(GlobalState);\n  const classes = useStyles();\n\n  const [error, setError] = React.useState(null)\n\n  useEffect(() => {\n    window.scrollTo(0, 0)\n    \n    setState(state => ({...state, showNext: state.age && state.gender ? true : false}))\n  }, []);\n\n\n\n  \n  const genderClicked = (gender) =>\n  {\n    if (state.age)\n    {\n      setState(state => ({...state, gender: gender, activeStep: state.activeStep + 1}))\n      setError(null)\n    }\n    else{\n      setState(state => ({...state, gender: gender}))\n      setError(\"Please Select Age\")\n\n    }\n  }\n\n  const ageClicked = (age) =>\n  {\n    if (state.gender)\n    {\n      setState(state => ({...state, age: age, activeStep: state.activeStep + 1}))\n      setError(null)\n    }else{\n      setState(state => ({...state, age: age}))\n      setError(\"Please Select Sex\")\n    }\n  }\n\n\n  return (\n    <React.Fragment>\n      <Grid container alignItems=\"center\" justify=\"center\" style={{padding:\"10px\"}}>\n          <Grid item xs={12} md={6} style={{marginBottom:\"10px\"}}>\n               <Grid container spacing={1} alignItems=\"center\" justify=\"center\">\n                 <Grid item>\n                   <div style={{width:\"70px\", wordSpacing:\"0.1rem\", fontSize:\"1.3rem\", fontWeight:\"600\"}}>\n                     I am a:\n                   </div>\n                 </Grid>\n                 <Grid item>\n                        <div className={state.gender === \"men\" ? classes.catBoxSelected :classes.catBox}  onClick={() => genderClicked(\"men\")}>\n                          <Grid container spacing={1} alignItems=\"center\" justify=\"center\" style={{height:\"70px\"}}>\n                            <Grid item>\n                               <img className={classes.manImage} src=\"https://www.healthscreening.clinic/public/design/images/men-icon.png\"/>\n                            </Grid>\n                            <Grid item>\n                               Man\n                            </Grid>\n                          </Grid> \n                        </div>\n                 </Grid>\n                 <Grid item>\n                       <div className={state.gender === \"women\" ? classes.catBoxSelected :classes.catBox} onClick={() => genderClicked(\"women\")}>\n                          <Grid container spacing={1} alignItems=\"center\" justify=\"center\" style={{height:\"70px\"}}>\n                            <Grid item>\n                               <img className={classes.manImage} src=\"https://www.healthscreening.clinic/public/design/images/women-icon.png\"/>\n                            </Grid>\n                            <Grid item>\n                               Woman\n                            </Grid>\n                          </Grid> \n                        </div>\n                 </Grid>\n               </Grid> \n          </Grid>\n\n          <Grid item xs={12} md={6} style={{marginBottom:\"10px\"}}>\n               <Grid container spacing={1} alignItems=\"center\" justify=\"center\">\n                 <Grid item>\n                   <div style={{width:\"70px\",wordSpacing:\"0.1rem\", fontSize:\"1.3rem\", fontWeight:\"600\"}}>\n                     I am:\n                   </div>\n                 </Grid>\n                 <Grid item>\n                        <div className={state.age === \"under40\" ? classes.catBoxSelected : classes.catBox} onClick={() => ageClicked(\"under40\")}>\n                          <Grid container spacing={1} alignItems=\"center\" justify=\"center\" style={{height:\"70px\"}}>\n                            <Grid item>\n                               Under 40\n                            </Grid>\n                          </Grid> \n                        </div>\n                 </Grid>\n                 <Grid item>\n                 <div className={state.age === \"over40\" ? classes.catBoxSelected : classes.catBox} onClick={() => ageClicked(\"over40\")}>\n                          <Grid container spacing={1} alignItems=\"center\" justify=\"center\" style={{height:\"70px\"}}>\n                            <Grid item>\n                               Over 40\n                            </Grid>\n                          </Grid> \n                        </div>\n                 </Grid>\n               </Grid> \n          </Grid>\n\n\n          <Grid item xs={12}>\n            <div className={classes.errorMessage}>\n                {error && `${error}`}\n            </div> \n          </Grid>\n\n  \n      </Grid>\n    </React.Fragment>\n  );\n}","import React, { useEffect } from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport GlobalState from './GlobalState';\n\nimport { Grid } from '@material-ui/core';\nimport { loadPackages } from './ScreeningPackageLoader';\nconst useStyles = makeStyles((theme) => ({\n\n  catBox: {\n    textAlign: \"center\",\n    width: \"100%\",\n    fontSize: \"1rem\",\n    fontWeight:\"600\",\n    padding: \"10px\",\n    border: \"1px solid #eee\",\n    height: \"120px\",\n    borderRadius: \"8px\",\n    cursor: \"pointer\",\n    color: \"#fff\",\n    background: \"linear-gradient(90deg, rgba(0,95,147,1) 33%, rgba(6,117,179,1) 63%, rgba(32,150,218,1) 100%)\",\n    transition : \"all 0.3s ease-in\",\n    \"&:hover\" : {\n      background: \"linear-gradient(90deg, rgba(179,68,1,1) 30%, rgba(232,82,25,1) 74%, rgba(231,109,62,1) 100%)\",\n      transition : \"all 0.3s ease-in\",\n    }\n  },\n\n  catBoxSelected: {\n    textAlign: \"center\",\n    width: \"100%\",\n    fontSize: \"1rem\",\n    fontWeight:\"600\",\n    padding: \"10px\",\n    border: \"1px solid #eee\",\n    height: \"120px\",\n    borderRadius: \"8px\",\n    cursor: \"pointer\",\n    color: \"#fff\",\n    background: \"linear-gradient(90deg, rgba(179,68,1,1) 30%, rgba(232,82,25,1) 74%, rgba(231,109,62,1) 100%)\",\n  }\n\n\n}));\n\nexport default function ScreenPackagesForm() {\n  const [state, setState] = React.useContext(GlobalState);\n  const classes = useStyles();\n\n  const [packages, setPackages] = React.useState([])\n\n\n  useEffect(() => {\n    window.scrollTo(0, 0)\n    const _packages = loadPackages(state)\n    setPackages([..._packages])\n    setState(state => ({...state, showNext: state.package ? true : false}))\n  }, []);\n\n\n  const packageClicked = (price, text) => {\n    setState(state => ({...state, package: {price: price, text: text}, activeStep: state.activeStep + 1}))\n  }\n\n  return (\n    <React.Fragment>\n      <Grid container spacing={2} alignItems=\"center\" justify=\"center\">\n        {\n          packages.map(item => (\n            <Grid item xs={6} sm={4}>\n              <div className={state.package?.text === item.text ? classes.catBoxSelected  : classes.catBox} onClick={() => packageClicked(item.price, item.text)}>\n                <Grid container alignItems=\"center\" justify=\"center\" style={{height:\"100%\", width:\"100%\"}}>\n                  <Grid item>\n                      {item.text} \n\n                      <div style={{fontSize:\"1.5rem\", paddingTop:\"5px\"}}>£{item.price}</div>\n                  </Grid>\n                 </Grid> \n              </div>\n            </Grid>\n          ))\n        }\n      </Grid>\n    </React.Fragment>\n  );\n}","import axios from 'axios';\n\nexport default axios.create({\n    // baseURL: 'http://localhost:9090',\n   baseURL: 'https://www.travelpcrtest.com/',\n   headers : {\n       'Authorization' : 'Basic QXp1cmXEaWFtb45kOmh1bnRlcjO='\n   }\n });\n\n ","\nimport API from './api';\nimport axiosRetry from 'axios-retry';\nimport dateformat from 'dateformat';\n\nexport default class TimeService{\n\n     static getFirstAvailableDate =  () =>\n    {\n        axiosRetry( API, { retries: 3,  retryDelay: (retryCount) => {\n            return retryCount * 1000;\n          } });\n        return API.get('/api/screening/time/getfirstavaiabledate');\n    }\n\n    static getFullyBookedDates = () =>\n    {        \n        axiosRetry( API, { retries: 3,  retryDelay: (retryCount) => {\n            return retryCount * 1000;\n          } });\n       return API.get('/api/screening/time/getfullybookeddays');\n    }\n\n    static getTimeSlots = (date) =>\n    {\n        axiosRetry( API, { retries: 3,  retryDelay: (retryCount) => {\n            return retryCount * 1000;\n          } });\n\n        const date_utc =  dateformat(new Date(date.toUTCString().slice(0, -4)),'yyyy-mm-dd');\n        return API.get(`/api/screening/time/gettimeslots?date=${date_utc}`);\n    }\n\n\n}","import React, { useEffect } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport {\n  DatePicker,\n  MuiPickersUtilsProvider,\n} from '@material-ui/pickers';\n\nimport DateFnsUtils from '@date-io/date-fns';\n\nimport GlobalState from './GlobalState';\nimport { BrowserView, MobileView } from 'react-device-detect';\n\nimport TimeService from './services/TimeService';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Skeleton from '@material-ui/lab/Skeleton';\n\n\nimport { format, addMinutes, isWeekend, getDay } from 'date-fns';\n\n\nimport { enGB, } from 'date-fns/locale'\n\n\nimport dateformat from 'dateformat';\n\nimport Fade from \"react-reveal/Fade\";\nimport Alert from \"@material-ui/lab/Alert\";\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Slide from '@material-ui/core/Slide';\nimport { Button } from '@material-ui/core';\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\n\nclass UTCUtils extends DateFnsUtils {\n\n  locale = enGB;\n  // format(date, formatString) {\n  //   return format(new Date(date.getTime() + date.getTimezoneOffset() * 60 * 1000 ), formatString,enGB);\n  // }\n\n  // getCalendarHeaderText(date){\n  //   return dateformat(date, 'mmmm yyyy');\n  // }\n\n  // getDayText(date)\n  // {\n  //   return dateformat(date, 'd');\n  // }\n\n}\n\n\nconst useStyles = makeStyles((theme) => ({\n\n  loadingBox: {\n\n  },\n\n  title: {\n    color: theme.palette.primary.main,\n    marginBottom: \"20px\",\n    fontWeight: \"500\"\n  }\n\n}));\n\n\n\n\nexport default function DateForm() {\n  const classes = useStyles();\n\n  const [state, setState] = React.useContext(GlobalState);\n\n  const [firstAvailableDay, setFirstAvailableDay] = React.useState(null);\n  const [fullyBookedDays, setFullyBookedDays] = React.useState(null);\n\n  const [bookingDate, setBookingDate] = React.useState(state.bookingDate);\n\n\n  const [dataLoaded, setDataLoaded] = React.useState(false);\n\n  const [openDialog, setOpenDialog] = React.useState(false);\n\n  const handleClickOpenDialog = () => {\n    setOpenDialog(true);\n  };\n\n  const handleCloseDialog = (close) => {\n    if (close)\n    {\n      setOpenDialog(false);\n    }\n  };\n\n  useEffect(() => {\n    window.scrollTo(0, 0)\n    setState(state => ({ ...state, showNext: state.bookingDate ? true : false }))\n  }, []);\n\n  useEffect(() => {\n    setState(state => ({ ...state, showNext: state.bookingDate ? true : false }))\n  }, [state.bookingDate]);\n\n\n\n  const LoadData = () => {\n\n    const promise1 = TimeService.getFirstAvailableDate();\n    const promise2 = TimeService.getFullyBookedDates();\n\n    Promise.all([promise1, promise2]).then((values) => {\n      let firstday = new Date((values[0].data).date);\n      firstday.setHours(0, 0, 0, 0);\n\n      firstday = new Date(firstday.getTime() - firstday.getTimezoneOffset() * 60 * 1000);\n\n      setFirstAvailableDay(firstday);\n      if (!state.bookingDate) {\n        dateChanged(firstday);\n      }\n\n      setFullyBookedDays(values[1].data);\n\n      setDataLoaded(true);\n\n    }).catch((err) => {\n      console.log(err);\n    });\n  }\n\n\n\n  useEffect(() => {\n    LoadData();\n    if (state.package?.text.toUpperCase().indexOf(\"ELITE\") > 0)\n    {\n      setOpenDialog(true)\n    }\n\n  }, []);\n\n\n\n  const dateChanged = (date) => {\n    date = new Date(date.getFullYear(), date.getMonth(), date.getDate(), 0, 0, 0, 0);\n    // const offset = parseInt(date.getTimezoneOffset());\n    // console.log(offset);\n\n    date = new Date(date.getTime() - (date.getTimezoneOffset() * 60 * 1000));\n    // date = new Date(date.getFullYear(), date.getMonth(), date.getDate(),0,0,0,0);\n\n    // date = format(date, 'yyyy-MM-dd HH:mm:ss zzz', { timeZone: 'Europe/London' }) ; // 2014-10-25 10:46:20 GMT 00\n    // date = toDate(date);\n    console.log(date);\n    setBookingDate(date);\n    setState(state => ({ ...state, bookingDate: date }));\n  }\n\n  const checkFullyBooked = (date) => {\n    var result = false;\n\n    if (getDay(date) === 0 || getDay(date) === 6)\n      return true\n\n    const today = new Date()\n    // const twoDaysAfter = new Date(today.getTime() + 1 * 24 * 60 * 60 * 1000)\n\n    // if (date.getTime() < twoDaysAfter.getTime())\n    // {\n    //   return true\n    // }\n\n\n    if (dateformat(date, 'yyyy-mm-dd') === dateformat(today, 'yyyy-mm-dd')) {\n      return true;\n    }\n\n\n\n    if (dateformat(date, 'yyyy-mm-dd') < dateformat(firstAvailableDay, 'yyyy-mm-dd')) {\n      return true;\n    }\n\n    else if (fullyBookedDays && fullyBookedDays.length > 0) {\n      for (var i = 0; i < fullyBookedDays.length; i++) {\n        if (dateformat(new Date(fullyBookedDays[i]), 'yyyy-mm-dd') === dateformat(date, 'yyyy-mm-dd')) {\n          result = true;\n        }\n      }\n\n      return result;\n    }\n    else {\n      return false;\n    }\n  }\n\n  return (\n\n    <React.Fragment>\n\n      <Typography variant=\"h5\" gutterBottom className={classes.title}>\n        Pick a Date\n      </Typography>\n\n      {(dataLoaded && firstAvailableDay) ? (\n\n        <React.Fragment>\n\n          <Grid\n            container\n            direction=\"column\"\n            justify=\"center\"\n            alignItems=\"center\"\n          >\n\n            <BrowserView>\n              <MuiPickersUtilsProvider utils={UTCUtils} locale={enGB}>\n                <DatePicker autoOk\n                  disablePast={true}\n                  openTo=\"date\"\n                  orientation=\"landscape\"\n                  variant=\"static\"\n                  fullWidth\n                  value={bookingDate}\n                  onChange={dateChanged}\n                  shouldDisableDate={checkFullyBooked}\n                />\n              </MuiPickersUtilsProvider>\n            </BrowserView>\n\n            <MobileView>\n              <MuiPickersUtilsProvider utils={UTCUtils} locale={enGB}>\n                <DatePicker autoOk\n                  disablePast={true}\n                  openTo=\"date\"\n                  variant=\"static\"\n                  fullWidth\n                  value={bookingDate}\n                  onChange={dateChanged}\n                  shouldDisableDate={checkFullyBooked}\n                />\n              </MuiPickersUtilsProvider>\n            </MobileView>\n          </Grid>\n\n        </React.Fragment>\n      )\n        :\n        (\n          <React.Fragment>\n            <Grid\n              container\n              direction=\"column\"\n              justify=\"center\"\n              alignItems=\"center\"\n            >\n\n              <Skeleton variant=\"text\" width={'80%'} />\n              <Skeleton variant=\"text\" width={'80%'} />\n              <Skeleton variant=\"rect\" width={'80%'} height={220} />\n\n            </Grid>\n          </React.Fragment>\n        )\n      }\n\n\n      <Dialog\n        open={openDialog}\n        TransitionComponent={Transition}\n        keepMounted\n        onClose={() => handleCloseDialog(false)}\n        aria-labelledby=\"alert-dialog-slide-title\"\n        aria-describedby=\"alert-dialog-slide-description\"\n      >\n        <DialogTitle id=\"alert-dialog-slide-title\">{\"NOTICE\"}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-slide-description\">\n            <div style={{\n              color:\"#111\",\n             fontWeight:\"400\",\n             textAlign: \"justify\"\n             }}\n             >\n\n              <p>Thank you for booking an <b>Elite health screen</b>. Please proceed through the booking process, selecting when you would ideally like your medical. Due to the detailed nature of the service, we need to confirm a few details with you prior to arranging all of the services with our partner hospitals, and this might mean that we need to change the date or time of your appointment. </p>\n\n              <p>As such, we will call you on the number you have provided during working hours to confirm all the details of your service prior to finalising your appointment, following which confirmation will be sent to you via email. </p>\n\n              <p style={{fontWeight:\"500\"}}>Thank you for making your booking.</p>\n            </div>\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => handleCloseDialog(true)} color=\"primary\">\n            AGREE\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n    </React.Fragment>\n  );\n}\n\n\n\n\n\nfunction EquallDates(date1, date2) {\n  return (\n    date1.getFullYear() === date2.getFullYear() &&\n    date1.getMonth() === date2.getMonth() &&\n    date1.getDate() === date2.getDate()\n  );\n}\n","import React, { useEffect } from 'react';\nimport Typography from '@material-ui/core/Typography';\n\nimport GlobalState from './GlobalState';\nimport { makeStyles , useTheme} from '@material-ui/core/styles';\n\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\n\nimport TimeService from './services/TimeService';\nimport Grid from '@material-ui/core/Grid';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport dateformat from 'dateformat';\n\nimport {BrowserView, MobileView} from 'react-device-detect';\n\n\n// import Card from '@material-ui/core/Card';\n// import CardActions from '@material-ui/core/CardActions';\n// import CardContent from '@material-ui/core/CardContent';\n// import Button from '@material-ui/core/Button'\n// import { Mouse, Satellite } from '@material-ui/icons';\n// import { BrowserView } from 'react-device-detect';\n\nconst useStyles = makeStyles((theme) => ({\n    \n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'space-around',\n        overflow: 'hidden',\n        backgroundColor: theme.palette.background.paper,\n      },\n      gridList: {\n        // width: 500,\n        // height: 450,\n      },\n\n      box: {\n        //backgroundColor: \"red\",\n        margin: \"5px\",\n        padding: \"10px 5px\",\n        cursor: \"pointer\",\n        color: \"#fff\",\n        border: \"1px solid #eee\",\n        borderRadius: \"8px\",\n        fontWeight: \"500\",\n    \n        background: \"linear-gradient(90deg, rgba(0,95,147,1) 33%, rgba(6,117,179,1) 63%, rgba(32,150,218,1) 100%)\",\n    \n        \"&:hover\": {\n            background: \"linear-gradient(90deg, rgba(179,68,1,1) 30%, rgba(232,82,25,1) 74%, rgba(231,109,62,1) 100%)\",\n        },\n      },\n\n      boxMobile: {\n        //backgroundColor: \"red\",\n        color: \"#fff\",\n        border: \"1px solid #eee\",\n        borderRadius: \"8px\",\n        fontWeight: \"500\",\n        padding: \"10px 5px\",\n\n    \n        background: \"linear-gradient(90deg, rgba(0,95,147,1) 33%, rgba(6,117,179,1) 63%, rgba(32,150,218,1) 100%)\",\n        cursor: \"pointer\"\n      },\n\n      boxSelected: {\n        margin: \"5px\",\n        padding: \"10px 5px\",\n        cursor: \"pointer\",\n        color: \"#fff\",\n        border: \"1px solid #eee\",\n        borderRadius: \"8px\",\n        fontWeight: \"500\",\n    \n        background: \"linear-gradient(90deg, rgba(179,68,1,1) 30%, rgba(232,82,25,1) 74%, rgba(231,109,62,1) 100%)\",\n      },\n\n      boxSelectedMobile: {\n        padding: \"10px 5px\",\n        cursor: \"pointer\",\n        color: \"#fff\",\n        border: \"1px solid #eee\",\n        borderRadius: \"8px\",\n        fontWeight: \"500\",\n    \n        background: \"linear-gradient(90deg, rgba(179,68,1,1) 30%, rgba(232,82,25,1) 74%, rgba(231,109,62,1) 100%)\",\n      },\n\n\n      boxDisable: {\n        backgroundColor: \"#999\",\n        border: \"1px solid #ddd\",\n        margin: \"5px\",\n        padding: \"10px 5px\",\n        color: \"#ddd\",\n        cursor: \"not-allowed\",\n        borderRadius: \"8px\",\n        \n      },\n\n      boxDisableMobile: {\n        backgroundColor: \"#999\",\n        border: \"1px solid #ddd\",\n        color: \"#ddd\",\n        cursor: \"not-allowed\",\n        padding: \"10px 5px\",\n\n        borderRadius: \"8px\",\n        \n      },\n\n\n      title: {\n        color : theme.palette.primary.main,\n        marginBottom: \"20px\",\n        fontWeight: \"500\"\n      }\n\n  }));\n\n  \nfunction isWeekend(date)\n{\n    return (date.getDay() === 0 || date.getDay() === 6) /// Weekend\n}\n\n\nexport default function TimeForm() {\n    const classes = useStyles();\n    // const theme = useTheme();\n\n    const [state, setState] = React.useContext(GlobalState);\n    const [bookingTime, setTime] = React.useState(state.bookingTime ?? '');\n\n    const [dataLoaded, setDataLoaded] =  React.useState(false);\n\n    const emptyTimeSlots = [];\n    for (var i=0; i<28; i++)\n    {\n      emptyTimeSlots.push(i);\n    }\n\n    const [timeSlots, setTimeSlots] = React.useState(emptyTimeSlots);\n\n    useEffect(() => {\n      window.scrollTo(0, 0)\n      setState(state => ({...state, showNext: state.bookingTime ? true : false}))\n    }, []);\n\n    useEffect(() => {\n      setState(state => ({...state, showNext: state.bookingTime ? true : false}))\n   }, [state.bookingTime ]);\n\n\n    const LoadData = (date) => {\n\n      setTimeSlots(emptyTimeSlots);\n      setDataLoaded(false);\n\n      // const dateStr = dateformat(date,'yyyy-mm-dd');\n\n      const promise1 = TimeService.getTimeSlots(date);\n  \n      Promise.all([promise1]).then( (values) => {\n  \n        const timeSlotsTmp = values[0].data;\n\n        // if (isWeekend(date) && dateStr !== '2020-12-27')\n        // {\n        //   for (var i=0 ; i < timeSlotsTmp.length ; i++)\n        //   {\n        //     if (parseInt(timeSlotsTmp[i].time.substr(0,2)) < 10 && timeSlotsTmp[i].time.indexOf('AM') > 0)\n        //     {\n        //       timeSlotsTmp[i].available = false;\n        //     }\n  \n        //     if (parseInt(timeSlotsTmp[i].time.substr(0,2)) > 1 && parseInt(timeSlotsTmp[i].time.substr(0,2)) < 12 &&timeSlotsTmp[i].time.indexOf('PM') > 0)\n        //     {\n        //       timeSlotsTmp[i].available = false;\n        //     }\n        //   }\n        // }\n\n    \n        if (beforeFeb())\n        {\n          timeSlotsTmp.forEach(time =>\n            {\n              time.available = false;\n            });\n        }\n\n        setTimeSlots(timeSlotsTmp);\n        setDataLoaded(true);\n  \n      }).catch( (err) =>\n      {\n        console.error(err);\n      });\n  }\n\n    useEffect(() => {\n      if (state.bookingDate && state.bookingDate !== 'undefined')\n         LoadData(state.bookingDate);\n    }, []);\n\n    // useEffect(() => {\n    //   var interval ;\n    //   if (state.bookingDate && state.bookingDate !== 'undefined')\n    //     {\n    //       interval = setInterval(() => {\n    //         LoadData(state.bookingDate);\n    //       }, 2000);\n    //     }\n\n    //     return () => {\n    //       if (interval)\n    //         clearInterval(interval);\n    //     }\n        \n    // }, []);\n\n    \n\n\n\n    const boxClicked = (key) =>\n    {\n        if (key)\n        {\n            setTime(key);\n            setState({...state, bookingTime : key, activeStep: state.activeStep + 1});\n        }\n\n    }\n\n    const beforeFeb = () =>\n    {\n        const dateStr = dateformat(state.bookingDate, 'yyyy-mm-dd');\n        return dateStr < '2021-02-01';\n    }\n\n\n  return (\n    <React.Fragment>\n      <Typography variant=\"h6\" gutterBottom className={classes.title}>\n        Pick a Time\n      </Typography>\n\n      {dataLoaded ?  (\n            \n       \n            <React.Fragment>\n\n\n\n              {checkFullyBooked(timeSlots) &&  (\n\n                <React.Fragment>\n                  <div style={{fontSize:\"1.2rem\", paddingTop:\"10px\", paddingBottom:\"10px\", color:\"#db0000\" , fontWeight: \"500\", background:\"#fff5f5\"}}>\n                     Sorry this day is already fully booked! \n                     <br/>Please choose an alternative day.\n                  </div>\n                   \n                </React.Fragment>\n\n              )}\n\n              <BrowserView>\n                  <div className={classes.root}>\n                            <GridList cellHeight={60} className={classes.gridList} cols={4}>\n                              {timeSlots.map((timeSlot) => (\n                                <GridListTile key={timeSlot.time} cols={1}>\n                                  <div \n                                      onClick= {() => {timeSlot.available? boxClicked(timeSlot.time) : boxClicked(null)}}\n                                      className={(timeSlot.available) ? ((bookingTime === timeSlot.time)? classes.boxSelected : classes.box ): classes.boxDisable}>\n                                      {timeSlot.time}\n                                  </div>\n                                </GridListTile>\n                              ))}\n                            </GridList>\n                  </div>\n              \n              </BrowserView>\n\n              <MobileView>\n\n              <div className={classes.root}>\n                            <GridList cellHeight={60} className={classes.gridList} cols={4}>\n                              {timeSlots.map((timeSlot) => (\n                                <GridListTile key={timeSlot.time} cols={1}>\n                                  <div \n                                      onClick = {() => {timeSlot.available? boxClicked(timeSlot.time) : boxClicked(null)}}\n                                      className={(timeSlot.available) ? ((bookingTime === timeSlot.time)? classes.boxSelectedMobile : classes.boxMobile ): classes.boxDisableMobile}>\n                                      {timeSlot.time}\n                                  </div>\n                                </GridListTile>\n                              ))}\n                            </GridList>\n                  </div>\n\n              </MobileView>\n\n            </React.Fragment>\n      ) : (\n        <React.Fragment>\n                <Grid\n                  container\n                  direction=\"column\"\n                  justify=\"center\"\n                  alignItems=\"center\"\n                  >\n                      <GridList cellHeight={60} className={classes.gridList} cols={4}>\n                          {emptyTimeSlots.map((timeSlot) => (\n                            <GridListTile key={timeSlot} cols={1}>\n                                 <Skeleton variant=\"rect\" width={120}  height={35} />\n                            </GridListTile>\n                          ))}\n                        </GridList>\n                  </Grid>\n\n    </React.Fragment>\n\n      ) }\n\n\n\n    </React.Fragment>\n  );\n}\n\nconst checkFullyBooked = (timeSlots) =>\n{\n    let available = false;\n    timeSlots.forEach(time => {\n      if (time.available)\n      {\n        available = true;\n      }\n    });\n\n    return !available;\n}\n\n\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport GlobalState from './GlobalState';\nimport Grid from '@material-ui/core/Grid';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport dateFormat from 'dateformat';\nimport {calculatePrice} from './PriceCalculator';\nimport { FormatDateFromString } from './DateFormatter';\n\nconst useStyles = makeStyles((theme) => ({\n  box: {\n    backgroundColor : \"#373737\",\n    color: \"#fff\",\n    padding : \"1px\",\n    borderRadius : \"4px\",\n    textAlign: \"justify\",\n    paddingRight: \"40px\"\n  },\n\n  boxRed: {\n    backgroundColor : \"#dc2626\",\n    color: \"#fff\",\n    padding : \"1px\",\n    borderRadius : \"4px\",\n    textAlign: \"justify\",\n    paddingRight: \"40px\"\n  },\n\n  boxInfo: {\n    textAlign: \"justify\",\n    backgroundColor : \"#fafafa\",\n    color: \"#333\",\n    padding : \"1px\",\n    borderRadius : \"4px\",\n    paddingRight: \"40px\",\n    border: \"1px solid #eee\",\n  },\n\n  ul: {\n     listStyle: \"none\",\n     padding: \"0\",\n     margin: \"0\"\n  },\n\n  li: {\n    marginBottom : \"5px\"\n  },\n\n\n  icon: {\n    marginRight : \"8px\"\n  },\n\n  root: {\n    width: '100%',\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    flexBasis: '33.33%',\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n  },\n  secondaryHeading: {\n    fontSize: theme.typography.pxToRem(15),\n  },\n\n  infoDetails:{\n    textAlign: \"left\"\n  },\n\n  infoTitle:{\n    fontWeight: \"800\",\n    marginRight: \"10px\"\n  },\n\n  infoData:{\n    fontWeight: \"400\",\n  },\n\n  title:\n  {\n    // textAlign : \"center\",\n    // fontWeight : \"500\",\n    // margin: \"10px\",\n    // backgroundColor : \"#eee\",\n    // padding : \"10px\",\n    // borderRadius : \"4px\"\n    textAlign: \"left\",\n    fontWeight : \"600\",\n    marginLeft: \"10px\"\n\n  },\n\n  Accordion:{\n    backgroundColor : \"#f5f5f5\",\n    color: \"#222\"\n  }\n\n}));\n\n\nexport default function PersonsBox() {\n    const classes = useStyles();\n\n    const [state, setState] = React.useContext(GlobalState);\n\n    const [expanded, setExpanded] = React.useState(false);\n\n    const handleChange = (panel) => (event, isExpanded) => {\n      setExpanded(isExpanded ? panel : false);\n    };\n\n  return (\n    <React.Fragment>\n    \n      \n\n      <Grid container direction=\"column\" spacing={1} justify=\"flex-start\"  alignItems=\"stretch\">\n\n        {state.persons && state.persons.length > 0 && (\n          \n              <span className={classes.title}> Persons added so far :</span>\n\n        )}\n        \n\n          {state.persons.map((person,index) => (\n   \n                <Grid item xs={12} md={12}>\n                <div className={classes.root}>\n                    <Accordion className={classes.Accordion} expanded={expanded === `panel${index}`} onChange={handleChange(`panel${index}`)}>\n                    <AccordionSummary\n                        expandIcon={<ExpandMoreIcon />}\n                        aria-controls=\"panel1bh-content\"\n                        id={`panel${index}bh-header`}\n                    >\n                        <Typography className={classes.heading}> {`#${index+1}`} </Typography>\n                        <Typography className={classes.secondaryHeading}>\n                        {`${person.firstname} ${person.lastname}`}\n                        </Typography>\n                    </AccordionSummary>\n                    <AccordionDetails className={classes.infoDetails}>\n                        \n                        <ul className={classes.ul}>\n                            <li className={classes.li}>\n                            <span className={classes.infoTitle}>Sex</span> <span className={classes.infoData}>{person.gender}</span>   \n                            </li>\n                            <li className={classes.li}>\n                            <span className={classes.infoTitle}>Title</span>  <span className={classes.infoData}>{person.title}</span>   \n                            </li>\n                            <li className={classes.li}>\n                            <span className={classes.infoTitle}>Forename</span> <span className={classes.infoData}>{person.firstname}</span>   \n                            </li>\n                            <li className={classes.li}>\n                                <span className={classes.infoTitle}>Surname</span> <span className={classes.infoData}>{person.lastname}</span>   \n                            </li>\n                            <li className={classes.li}>\n                                <span className={classes.infoTitle}>Email</span> <span className={classes.infoData}>{person.email}</span>   \n                            </li>\n                            <li className={classes.li}>\n                                <span className={classes.infoTitle}>D.O.B</span> <span className={classes.infoData}>{FormatDateFromString(person.birthDate)}</span>  \n                            </li>\n                            <li className={classes.li}>\n                                <span className={classes.infoTitle}>Telephone</span> <span className={classes.infoData}>{person.phone}</span>  \n                            </li>\n                            <li className={classes.li}>\n                                <span className={classes.infoTitle}>Post Code</span> <span className={classes.infoData}>{person.postCode}</span>  \n                            </li>\n                            <li className={classes.li}>\n                                <span className={classes.infoTitle}>Address</span> <span className={classes.infoData}>{person.address}</span>  \n                            </li>\n                            {/* <li className={classes.li}>\n                                <span className={classes.infoTitle}>Notes</span> <span className={classes.infoData}>{person.notes ?? 'N/A'}</span>  \n                            </li> */}\n                            <li className={classes.li}>\n                                <span className={classes.infoTitle}>Passport No.</span> <span className={classes.infoData}>{person.passportNumber ?? 'N/A'}</span>  \n                            </li>\n                            <li className={classes.li} hidden={!person.passportNumber2 || person.passportNumber2.length === 0}>\n                                <span className={classes.infoTitle}>Second Passport No.</span> <span className={classes.infoData}>{person.passportNumber2 ?? 'N/A'}</span>  \n                            </li>\n\n                            <li className={classes.li}>\n                                <span className={classes.infoTitle}>Request for Certificate</span> <span className={classes.infoData}>{person.certificate ? 'Yes' : 'No'}</span>  \n                            </li>\n                            <li className={classes.li}>\n                                <span className={classes.infoTitle}>Request for Antibody Test</span> <span className={classes.infoData}>{person.antiBodyTest ? 'Yes' : 'No'}</span>  \n                            </li>\n\n                            <li className={classes.li}>\n                                <span className={classes.infoTitle}>Price</span> <span className={classes.infoData}>{`£${calculatePrice(person)}`}</span>  \n                            </li>\n\n                        </ul>\n                        \n                    </AccordionDetails>\n                    </Accordion>\n                </div>\n            </Grid> \n          ))}\n    </Grid>\n    </React.Fragment>\n  );\n}\n\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport GlobalState from './GlobalState';\nimport {BrowserView, MobileView} from 'react-device-detect';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Checkbox, FormControlLabel } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n\n  formControl: {\n    // marginTop : theme.spacing(1),\n    // marginBottom : theme.spacing(1),\n    // padding: theme.spacing(1),\n    \n  },\n\n  Box:{\n    backgroundColor : \"#f1f1f1\",\n    padding: \"10px\",\n    //maxWidth: \"300px\",\n    borderRadius  : \"10px\",\n    boxShadow: \"2px 4px #ddd\",\n    marginTop: \"5px\",\n    marginBottom : \"15px\",\n    textAlign: \"left\"\n    \n  \n  },\n\n  Label: {\n\n  },\n\n  CheckBox: {\n\n  }\n\n\n\n}));\n\n\nexport default function AntiBodyComponent() {\n   const classes = useStyles();\n\n    const [state, setState] = React.useContext(GlobalState);\n    const [antiBodyCheck, setAntiBodyCheck] = React.useState(state.antiBodyTest ?? false);\n\n    const antiBodyCheckChanged = (event) =>\n    {\n      setAntiBodyCheck(event.target.checked);\n      setState(state => ({...state, antiBodyTest : event.target.checked}));\n    }\n\n  return (\n\n    <React.Fragment>\n\n      <div className={classes.Box}>\n\n         <div className= {classes.Label}>\n              Add to your Appointment...\n         </div>\n\n        <div className= {classes.CheckBox}>\n           <FormControlLabel className={classes.formControl} \n                  control={<Checkbox className={classes.formControl}  color=\"secondary\" name=\"emailConfirmCheckBox\" checked={antiBodyCheck} onChange={antiBodyCheckChanged} />}\n                  label={<span style={{ fontSize: '0.8rem' }}>{`COVID-19 Antibody Test `} \n                  <span  style={{ fontSize: '0.8rem', textDecoration: \"italic\" ,fontWeight:\"600\" ,color:\"#333\" }}> £99.00 </span> </span> } />\n           <div hidden={!antiBodyCheck} style={{paddingLeft: \"30px\", fontWeight: \"400\", fontSize:\"0.8\"}}>* <strong> £50 </strong>phlebotomy charges apply</div>       \n        </div>\n\n\n      </div>\n               \n\n\n        \n          \n{/* \n        <Grid container spacing={1} alignItems=\"baseline\">\n\n            <Grid item xs={12} className={classes.formControl} > */}\n                {/* <FormControlLabel className={classes.formControl} \n                  control={<Checkbox className={classes.formControl}  color=\"secondary\" name=\"emailConfirmCheckBox\" checked={antiBodyCheck} onChange={antiBodyCheckChanged} />}\n                  label={<span style={{ fontSize: '0.7rem' }}>{`COVID-19 Antibody Test (IgM & IgG)`} \n                  <span  style={{ fontSize: '0.8rem', textDecoration: \"italic\" ,fontWeight:\"600\" ,color:\"#333\" }}> £99.00 </span> </span> } */}\n                  \n                \n                {/* /> */}\n            {/* </Grid>\n\n        </Grid> */}\n\n\n     \n    </React.Fragment>\n  );\n}\n\n\n\n","import PropTypes from 'prop-types';\n\n\nimport React, { useEffect } from 'react';\nimport Typography from '@material-ui/core/Typography';\n\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\n\n\nimport dateformat from 'dateformat';\nimport { FormControl, InputLabel, Select } from '@material-ui/core';\nimport MenuItem from '@material-ui/core/MenuItem';\n\n\n\n\nconst useStyles = makeStyles((theme) => ({\n\n  loadingBox: {\n    \n  }\n\n}));\n\n\nconst DateField = ({title, value, dateChanged, error}) => {\n\n    const [day, setDay] = React.useState('');\n    const [month, setMonth] = React.useState('');\n    const [year, setYear] = React.useState('');\n\n    const [dayArray, setDayArray] = React.useState([]);\n    const [monthArray, setMonthArray] = React.useState([]);\n    const [yearArray, setYearArray] = React.useState([]);\n\n        const updateDate = (dd,mm,yyyy) =>\n        {\n            let dayStr = `${dd}`;\n            let monthStr = `${mm + 1}`;\n            \n\n            if (dayStr.length === 1)\n            {\n                dayStr = `0${dayStr}`;\n            }\n\n            if (monthStr.length === 1)\n            {\n                monthStr = `0${monthStr}`;\n            }\n\n            dateChanged(`${yyyy}-${monthStr}-${dayStr}`);\n            \n\n        }\n\n        const handleDayChanged = (event) => {\n            setDay(event.target.value);\n            updateDate(event.target.value,month,year);\n        };\n\n        const handleMonthChanged = (event) => {\n            setMonth(event.target.value);\n            updateDate(day, event.target.value, year);\n        };\n\n        const handleYearChanged = (event) => {\n            setYear(event.target.value);\n            updateDate(day,month,event.target.value);\n        };\n\n        useEffect ( () => \n        {\n            if (value && value.length === 10)\n            {\n                const d = parseInt(value.substr(8,2));\n                const m = parseInt(value.substr(5,2));\n                const y = parseInt(value.substr(0,4));\n\n                setDay(d);\n                setMonth(m-1);\n                setYear(y);\n            }\n           \n\n        }, [value]);\n\n      useEffect( () => {\n\n        const days = [];\n        const months = [];\n        const years = [];\n\n\n        for (var i = 1 ; i <= 31; i++)\n        {\n            days.push(i);\n        }\n\n        for ( i = 0 ; i < 12; i++)\n        {\n            months.push(dateformat(new Date(2020,i,5), 'mmmm'));\n        }\n\n        for ( i = 1900 ; i < new Date().getFullYear(); i++)\n        {\n            years.push(i);\n        }\n\n       \n        setDayArray(days);\n        setMonthArray(months);\n        setYearArray(years);\n\n      } , [])\n\n\n      const handleYearClicked = (event) => {\n          if (!year)\n          {\n              setYear(2000)\n          }\n      }\n    \n  return (\n\n    <React.Fragment>\n\n        \n    <div style={{position:\"relative\", border:`1px solid ${error ? 'red' : '#ddd'}` , borderRadius:\"10px\", padding:\"20px\", paddingBottom: \"50px\", marginTop: \"20px\"}}>\n\n        <div style={{position:\"absolute\", top: \"-15px\", left : \"15px\", backgroundColor:\"#fff\", color : `${error ? 'red' : '#555'}`, padding:\"5px\" , paddingLeft:\"10px\", paddingRight:\"10px\" }}>\n               {title} * \n       </div>\n\n    \n\n        <Grid\n            container\n            direction=\"row\"\n            justify=\"flex-start\"\n            alignItems=\"flex-start\"\n            spacing={2}\n        >\n\n\n            <Grid item xs={12} md={4}>\n                <FormControl fullWidth>\n                    <InputLabel  id=\"day-label\">Day</InputLabel>\n                    <Select\n                        \n                        labelId=\"day-label\"\n                        id=\"day-select\"\n                        value={day}\n                        onChange={handleDayChanged}\n                        >\n                        {\n                            dayArray.map( item => (\n                                <MenuItem value={item}>{item}</MenuItem>\n                            )\n                        )} \n                    </Select>\n                </FormControl>\n\n\n            </Grid>\n\n            <Grid item xs={12} md={4}>\n                <FormControl fullWidth>\n                    <InputLabel  id=\"month-label\">Month</InputLabel>\n                    <Select\n                        labelId=\"month-label\"\n                        id=\"month-select\"\n                        value={month}\n                        onChange={handleMonthChanged}\n                        >\n                        {\n                            monthArray.map( (item , index) => (\n                                <MenuItem value={index}>{item}</MenuItem>\n                            )\n                        )} \n                    </Select>\n                </FormControl>\n\n                \n            </Grid>\n\n            <Grid item xs={12} md={4}>\n                <FormControl fullWidth>\n                    <InputLabel  id=\"day-label\">Year</InputLabel>\n                    <Select\n                    labelId=\"year-label\"\n                    id=\"year-select\"\n                    value={year}\n                    onChange={handleYearChanged}\n                    onFocus={handleYearClicked}\n                    >\n                    {\n                        yearArray.map( item => (\n                            <MenuItem value={item}>{item}</MenuItem>\n                        )\n                    )} \n                \n                    </Select>\n                </FormControl>\n            </Grid>\n        </Grid>\n\n        </div>\n    </React.Fragment>\n  );\n}\n\n\nDateField.propTypes = {\n    title : PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired,\n    dateChanged: PropTypes.func.isRequired,\n    error: PropTypes.bool\n  };\n\nexport default DateField;\n\n\n\n\n","import React, { useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\n\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\n\nimport FormControl from \"@material-ui/core/FormControl\";\nimport GlobalState from \"./GlobalState\";\nimport * as EmailValidator from \"email-validator\";\n\n\nimport {\n  DatePicker,\n  KeyboardDatePicker,\n  MuiPickersUtilsProvider,\n} from \"@material-ui/pickers\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport PersonsBox from \"./PersonsBox\";\nimport { Checkbox, FormControlLabel } from \"@material-ui/core\";\nimport AntiBodyComponent from \"./AntiBodyComponent\";\n\nimport { format, addMinutes } from \"date-fns\";\n\nimport dateformat from \"dateformat\";\nimport { enGB } from \"date-fns/locale\";\nimport DateField from \"./DateField\";\n\nclass UTCUtils extends DateFnsUtils {\n  locale = enGB;\n  // format(date, formatString) {\n  //   return format(new Date(date.getTime() + date.getTimezoneOffset() * 60 * 1000 ), formatString,enGB);\n  // }\n\n  // getCalendarHeaderText(date){\n  //   return dateformat(date, 'mmmm yyyy');\n  // }\n\n  // getDayText(date)\n  // {\n  //   return dateformat(date, 'd');\n  // }\n}\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    textAlign: \"left\",\n  },\n\n  FormTitle: {\n    marginTop: \"20px\",\n    marginBottom: \"20px\",\n  },\n  Box: {\n    backgroundColor: \"#f1f1f1\",\n    padding: \"10px\",\n    //maxWidth: \"300px\",\n    borderRadius: \"10px\",\n    boxShadow: \"2px 4px #ddd\",\n    marginTop: \"5px\",\n    marginBottom: \"15px\",\n    textAlign: \"left\",\n  },\n\n  pageTitle: {\n    color: theme.palette.primary.main,\n    marginBottom: \"15px\",\n  },\n}));\n\nexport default function InformationForm() {\n  const classes = useStyles();\n  const [state, setState] = React.useContext(GlobalState);\n  const [fullname, setFullname] = React.useState(state.fullname ?? \"\");\n  const [email, setEmail] = React.useState(state.email ?? \"\");\n  const [birthDate, setBirthDate] = React.useState(state.birthDate ?? \"\");\n  const [retypeEmail, setRetypeEmail] = React.useState(state.retypeEmail ?? \"\");\n  const [emailConfirmed, setEmailConfirmed] = React.useState(\n    state.emailConfirmed ?? false\n  );\n\n  const [phone, setPhone] = React.useState(state.phone ?? \"\");\n\n  const [notes, setNotes] = React.useState(state.notes ?? \"\");\n\n  const notesChanged = (event) => {\n    setNotes(event.target.value);\n    setState((state) => ({ ...state, notes: event.target.value }));\n    setState((state) => ({ ...state, notesError: false }));\n  };\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n    const isValid = validateForm()\n    setState(state => ({...state, showNext: isValid ? true : false}))\n\n  }, []);\n\n  useEffect(() => {\n    const isValid = validateForm()\n    setState(state => ({...state, showNext: isValid ? true : false}))\n  }, [fullname, phone, email, retypeEmail, birthDate]);\n\n\n  const emailConfirmedChanged = (event) => {\n    setEmailConfirmed(event.target.checked);\n    setState((state) => ({ ...state, emailConfirmed: event.target.checked }));\n    setState((state) => ({ ...state, emailConfirmedError: false }));\n  };\n\n  const fullnameChanged = (event) => {\n    setFullname(event.target.value);\n    setState((state) => ({ ...state, fullname: event.target.value }));\n    if (event.target.value && event.target.value.trim().length > 0) {\n      setState((state) => ({ ...state, fullnameError: false }));\n    }\n  };\n\n  const emailChanged = (event) => {\n    setEmail(event.target.value);\n    setState((state) => ({ ...state, email: event.target.value }));\n    if (event.target.value && EmailValidator.validate(event.target.value)) {\n      setState((state) => ({ ...state, emailError: false }));\n    }\n  };\n\n  const retypeEmailChanged = (event) => {\n    setRetypeEmail(event.target.value);\n    setState((state) => ({ ...state, retypeEmail: event.target.value }));\n    if (event.target.value && EmailValidator.validate(event.target.value)) {\n      setState((state) => ({ ...state, retypeEmailError: false }));\n    }\n  };\n\n  const phoneChanged = (event) => {\n    setPhone(event.target.value);\n    setState((state) => ({ ...state, phone: event.target.value }));\n    if (event.target.value && event.target.value.trim().length >= 6) {\n      setState((state) => ({ ...state, phoneError: false }));\n    }\n  };\n\n  const birthDateChanged = (value) => {\n    setBirthDate(value);\n    setState((state) => ({ ...state, birthDate: value }));\n    if (value && value.trim().length >= 6) {\n      setState((state) => ({ ...state, birthDateError: false }));\n    }\n  };\n\n\n\n  const validateForm = () =>\n  {\n    let error = false\n\n    if (!state.fullname || state.fullname.trim().length < 1)\n    {\n      setState(state => ({...state, fullnameError : true}));\n      error = true;\n    }\n    if (!state.email || !EmailValidator.validate(state.email))\n    {\n      setState(state => ({...state, emailError : true}));\n      error = true;\n    }\n\n    if (!state.retypeEmail || !EmailValidator.validate(state.retypeEmail) || state.email !== state.retypeEmail)\n    {\n      setState(state => ({...state, retypeEmailError : true}));\n      error = true;\n    }\n\n    if (!state.phone || state.phone.trim().length < 1)\n    {\n      setState(state => ({...state, phoneError : true}));\n      error = true;\n    }\n\n    if (!state.birthDate || state.birthDate.trim().length < 10)\n    {\n      setState(state => ({...state, birthDateError : true}));\n      error = true;\n    }\n\n\n\n  \n    return !error;   \n  }\n\n  return (\n    <React.Fragment>\n      <Typography variant=\"h6\" gutterBottom className={classes.pageTitle}>\n        Enter your Info\n      </Typography>\n\n      <Grid\n        container\n        spacing={2}\n        alignItems=\"baseline\"\n        style={{ marginTop: \"10px\" }}\n      >\n        <Grid item xs={12} md={6}>\n          <TextField\n            error={state.fullnameError ? true : false}\n            required\n            id=\"fullname\"\n            label=\"Full Name\"\n            fullWidth\n            autoComplete=\"name\"\n            value={fullname}\n            onChange={fullnameChanged}\n          />\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <TextField\n            error={state.phoneError ? true : false}\n            required\n            id=\"phone\"\n            label=\"Phone Number\"\n            fullWidth\n            autoComplete=\"tel\"\n            value={phone}\n            onChange={phoneChanged}\n          />\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <TextField\n            error={state.emailError ? true : false}\n            required\n            id=\"email\"\n            label=\"Email Address\"\n            fullWidth\n            autoComplete=\"email\"\n            type=\"email\"\n            value={email}\n            onChange={emailChanged}\n            // helperText = 'This email address is where you will receive your results. Please tick the box below to confirm that this is a private email address to which you are happy for us to send your results.'\n          />\n        </Grid>\n\n        <Grid item xs={12} md={6}>\n          <TextField\n            error={state.retypeEmailError ? true : false}\n            required\n            id=\"retypeEmail\"\n            label=\"Retype Email Address\"\n            fullWidth\n            autoComplete=\"email\"\n            type=\"email\"\n            value={retypeEmail}\n            onChange={retypeEmailChanged}\n            // helperText = 'This email address is where you will receive your results. Please tick the box below to confirm that this is a private email address to which you are happy for us to send your results.'\n          />\n        </Grid>\n\n        <Grid xs={12} style={{marginTop:\"10px\"}}>\n           <DateField\n                error={state.birthDateError ? true : false}\n                title=\"Date of Birth\"\n                value={birthDate}\n                dateChanged={birthDateChanged}\n             >\n\n             </DateField>\n        </Grid>\n\n        {/* <Grid item xs={12} className={classes.formControl} >\n          <FormControlLabel className={classes.formControl}  style={ {color: state.emailConfirmedError ? \"red\" : ''}} \n            control={<Checkbox className={classes.formControl} style={ {color: state.emailConfirmedError ? \"red\" : ''}}  color=\"secondary\" name=\"emailConfirmCheckBox\" checked={emailConfirmed} onChange={emailConfirmedChanged} />}\n             label={<span style={{ fontSize: '0.8rem' }}>{`I confirm that this is a private email address to which I am happy for you to send my results.`} </span>}\n          />\n          <p>{'* Please take care when entering your information, and double check that everything entered on this form is correct.'}</p>\n        </Grid> */}\n\n        <Grid item xs={12}>\n          <TextField\n            style={{ marginTop: \"10px\" }}\n            id=\"notes\"\n            // error={state.notesError && state.package === \"Others\"}\n            fullWidth\n            // required={state.package === \"Others\"}\n            label=\"Notes (optional)\"\n            value={notes}\n            onChange={notesChanged}\n            multiline\n            rows={4}\n            placeholder=\"please enter your note here...\"\n            variant=\"outlined\"\n          />\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n}\n","import API from './api';\n\nexport default class BookService {\n\n    static bookAppointment = (payload) =>\n    {\n       return API.post('/api/screening/book/bookappointment', payload);\n    }\n\n    static getNewReference = () =>\n    {\n        return API.get('/api/book/getnewreference');\n    }\n\n    static getBookingById = (id) =>\n    {\n        return API.get(`/api/screening/book/getbookingbyid?id=${id}`);\n    }\n\n}","import React, { useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport GlobalState from \"./GlobalState\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Accordion from \"@material-ui/core/Accordion\";\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCalendarAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { faClock } from \"@fortawesome/free-solid-svg-icons\";\nimport { faHourglassHalf } from \"@fortawesome/free-solid-svg-icons\";\nimport { faNotesMedical } from \"@fortawesome/free-solid-svg-icons\";\nimport { faPoundSign } from \"@fortawesome/free-solid-svg-icons\";\n\nimport dateFormat from \"dateformat\";\nimport { Button, Checkbox, FormControlLabel } from \"@material-ui/core\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport PersonAddIcon from \"@material-ui/icons/PersonAdd\";\nimport Icon from \"@material-ui/core/Icon\";\nimport dateformat from \"dateformat\";\n\nimport Fade from \"react-reveal/Fade\";\nimport Alert from \"@material-ui/lab/Alert\";\n\n\nimport { calculatePrice, calculateTotalPrice } from \"./PriceCalculator\";\n\nimport ValidateStep from \"./Validation\";\nimport { FormatDateFromString } from \"./DateFormatter\";\n\nimport LocalHospitalIcon from \"@material-ui/icons/LocalHospital\";\nimport BookService from \"./services/BookService\";\n\nconst useStyles = makeStyles((theme) => ({\n  box: {\n    backgroundColor: \"#fff\",\n    border: `1px solid #ddd`,\n    borderRadius: \"5px\",\n    color: \"#555\",\n    padding: \"30px 0px 15px 20px\",\n    textAlign: \"justify\",\n    marginTop: \"20px\",\n    position: \"relative\",\n  },\n\n  boxTime: {\n    backgroundColor: \"#fff\",\n    border: `1px solid #ddd`,\n    borderRadius: \"5px\",\n    color: \"#333\",\n    padding: \"30px 20px 0px 20px\",\n    textAlign: \"justify\",\n    marginTop: \"20px\",\n    position: \"relative\",\n   \n  },\n\n  boxTitle: {\n    position: \"absolute\",\n    backgroundColor: \"#fff\",\n    padding: \"10px\",\n    top: -20,\n    left: 10,\n    color: theme.palette.primary.main,\n    fontWeight: \"500\",\n  },\n\n  boxRed: {\n    backgroundColor: \"#dc2626\",\n    color: \"#fff\",\n    padding: \"1px\",\n    borderRadius: \"4px\",\n    textAlign: \"justify\",\n    paddingRight: \"40px\",\n  },\n\n  boxInfo: {\n    textAlign: \"justify\",\n    backgroundColor: \"#fafafa\",\n    color: \"#333\",\n    // padding : \"1px\",\n    borderRadius: \"4px\",\n    // paddingRight: \"40px\",\n    border: \"1px solid #eee\",\n  },\n\n  ul: {\n    listStyle: \"none\",\n    padding: \"0\",\n    margin: \"0\",\n  },\n\n  li: {\n    marginBottom: \"15px\",\n    fontSize: \"0.95rem\",\n  },\n\n  icon: {\n    marginRight: \"10px\",\n    fontSize: \"1.2rem\",\n    color: theme.palette.primary.main,\n    float: \"left\",\n  },\n\n  root: {\n    width: \"100%\",\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    flexBasis: \"33.33%\",\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n  },\n  secondaryHeading: {\n    fontSize: theme.typography.pxToRem(15),\n  },\n\n  infoDetails: {\n    textAlign: \"left\",\n  },\n\n  infoTitle: {\n    fontWeight: \"800\",\n    float: \"left\",\n    width: \"120px\",\n  },\n\n  infoData: {\n    fontWeight: \"600\",\n    color: theme.palette.primary.main\n  },\n\n  infoTitleTime: {\n    fontWeight: \"800\",\n    float: \"left\",\n    marginRight: \"10px\",\n    color: \"#666\"\n  },\n\n  infoDataTime: {\n    fontWeight: \"600\",\n  },\n\n  title: {\n    textAlign: \"left\",\n    fontWeight: \"500\",\n    // marginBottom: \"5px\",\n    marginTop: \"5px\",\n    padding: \"10px\",\n    borderRadius: \"4px\",\n  },\n\n  Accordion: {\n    backgroundColor: \"#f5f5f5\",\n    color: \"#111\",\n  },\n\n  terms: {\n    fontWeight: \"500\",\n    textAlign: \"justify\",\n    marginTop: \"10px\",\n    padding: \"10px\",\n  },\n\n  link: {\n    color: theme.palette.primary.main,\n    textDecoration: \"none\",\n  },\n\n  AddAnother: {\n    marginTop: \"10px\",\n    marginBottom: \"10px\",\n  },\n\n  pageTitle: {\n    color: theme.palette.primary.main,\n    marginBottom: \"15px\",\n  },\n\n  infoDataPrice: {\n    // color: theme.palette.primary.main,\n    fontWeight: \"700\",\n    fontSize:\"1rem\"\n  },\n}));\n\nexport default function ReviewForm() {\n  const classes = useStyles();\n\n  const [state, setState] = React.useContext(GlobalState);\n\n  const [totalPrice, setTotalPrice] = React.useState(0);\n\n  const [expanded, setExpanded] = React.useState(\"panel10\");\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n\n    setState(state => ({...state, lastStep : true}))\n\n    getReferenceNumber();\n\n    return () => {\n      setState(state => ({...state, lastStep : false}))\n    }\n\n  }, []);\n\n  const getReferenceNumber = async () => \n  {\n    if (!state.bookingRef) {\n      try {\n        const res = await BookService.getNewReference();\n        if (res && res.data && res.data.ref) {\n          setState((state) => ({ ...state, bookingRef: res.data.ref }));\n        }\n      } catch (ex) {\n        console.error(ex);\n      }\n    }\n  }\n\n  const dataConfirmedChanged = (event) => {\n    setState((state) => ({ ...state, dataConfirmed: event.target.checked }));\n    if (event.target.checked) {\n      setState((state) => ({ ...state, dataConfirmedError: false }));\n    }\n  };\n\n\n  const getPackageName = () => {\n\n    if (state.cat.key === \"visa\")\n    {\n      let destination = state.destination\n      if (destination === \"Other...\")\n      {\n        destination = state.destinationText\n      }\n      return `${state.cat.text.toUpperCase()} ${` ( ${destination.toUpperCase()} )`}`\n    }else\n    {\n      return `${state.cat.text.toUpperCase()} ${state.package ? ` / ${state.package.text.toUpperCase()}` : ''}`\n    }\n  }\n\n  \n  return (\n    <React.Fragment>\n      <Typography variant=\"h6\" gutterBottom className={classes.pageTitle}>\n        Review Your Data\n      </Typography>\n\n      <Fade down>\n        <div>\n          <Alert\n            severity=\"info\"\n            style={{\n              marginBottom: \"15px\",\n              fontSize: \"0.95rem\",\n              lineHeight: \"1.5rem\",\n              textAlign: \"justify\",\n            }}\n          >\n            Thank you for making your booking. As we need to arrange some of your investigations with our partner hospitals, the date and time you have selected <span style={{fontWeight:\"700\", color:\"red\"}}> is not yet guaranteed </span> and might need to be re-arranged. \nWhilst the vast majority of patients are seen at their requested time, please keep an eye on your email/phone as we will call and email you if we have needed to re-arrange your appointment.\n        </Alert>\n        </div>\n      </Fade>\n\n\n      <Grid\n        container\n        direction=\"column\"\n        spacing={1}\n        justify=\"flex-start\"\n        alignItems=\"stretch\"\n      >\n        <Fade up>\n          <div className={classes.boxTime}>\n            <div className={classes.boxTitle}>Appoinment Info</div>\n\n            <Grid item xs={12} md={12}>\n              <div>\n                <ul className={classes.ul}>\n                  <li className={classes.li}>\n                    <span className={classes.infoTitleTime}>\n                      <FontAwesomeIcon\n                        icon={faCalendarAlt}\n                        className={classes.icon}\n                      />\n                      Date:\n                    </span>\n\n                    <span className={classes.infoDataTime}>\n                      {dateformat(\n                        new Date(state.bookingDate.toUTCString().slice(0, -4)),\n                        \"dddd, mmmm dS, yyyy\"\n                      )}\n                    </span>\n                  </li>\n                  <li className={classes.li}>\n                    <span className={classes.infoTitleTime}>\n                      <FontAwesomeIcon\n                        icon={faClock}\n                        className={classes.icon}\n                      />\n                      Time:\n                    </span>\n                    <span className={classes.infoDataTime}>\n                      {state.bookingTime}\n                    </span>\n                  </li>\n                  <li className={classes.li}>\n                    <span className={classes.infoTitleTime}>\n                      <FontAwesomeIcon\n                        icon={faHourglassHalf}\n                        className={classes.icon}\n                      />\n                      Check-up Duration:\n                    </span>\n                    Up-to 60 minutes\n                  </li>\n\n                  <li className={classes.li}>\n                    <span className={classes.infoTitleTime}>\n                      <FontAwesomeIcon\n                        icon={faNotesMedical}\n                        className={classes.icon}\n                      />\n                      Package:\n                    </span>\n                    <span className={classes.infoData} style={{fontWeight:\"600\"}}> {getPackageName()} </span>\n                  </li>\n                  {state.package && (\n                      <li className={classes.li}>\n                      <span className={classes.infoTitleTime}>\n                        <FontAwesomeIcon\n                          icon={faPoundSign}\n                          className={classes.icon}\n                        />\n                        Price:\n                      </span>\n                      <span className={classes.infoDataPrice}> £{state.package.price || '-'} </span>\n                    </li>\n                  )}\n\n                </ul>\n              </div>\n            </Grid>\n          </div>\n        </Fade>\n\n        <Fade up>\n          <div className={classes.box}>\n            <div className={classes.boxTitle}>Your Info</div>\n\n            <Grid item xs={12} md={12}>\n              <div>\n                <ul className={classes.ul}>\n                  <li className={classes.li}>\n                    <span className={classes.infoTitle}>Full Name</span>\n                    <span className={classes.infoData}> {state.fullname} </span>\n                  </li>\n                  <li className={classes.li}>\n                    <span className={classes.infoTitle}>Telephone</span>\n                    <span className={classes.infoData}> {state.phone} </span>\n                  </li>\n                  <li className={classes.li}>\n                    <span className={classes.infoTitle}>Email Address</span>\n                    <span className={classes.infoData}> {state.email} </span>\n                  </li>\n                  <li className={classes.li}>\n                    <span className={classes.infoTitle}>Date of Birth</span>\n                    <span className={classes.infoData}> {FormatDateFromString(state.birthDate)} </span>\n                  </li>\n\n\n                  <li className={classes.li}>\n                    <span className={classes.infoTitle}>Notes</span>\n                    <span className={classes.infoData} style={{color:\"#777\"}}> {state.notes || '-'} </span>\n                  </li>\n                </ul>\n              </div>\n            </Grid>\n          </div>\n        </Fade>\n        <div className={classes.terms}>\n          By clicking on \"PROCEED TO PAYMENT\" button you are agreeing with our{\" \"}\n          <a\n            className={classes.link}\n            target=\"_blank\"\n            href=\"https://www.medicalexpressclinic.co.uk/terms-and-conditions\"\n          >\n            terms and condition.\n          </a>\n        </div>\n\n        <div>\n          <Alert severity=\"info\">\n           <div style={{fontSize:\"1rem\", fontWeight:\"500\"}}>\n            You need to pay <b style={{color:\"red\"}}>£100</b> deposit to secure your appointment.\n            </div>\n          </Alert>\n        </div>\n\n        {/* <div style={{textAlign:\"left\", color: \"#111\", marginLeft:\"10px\"}}>\n<FormControlLabel className={classes.formControl}  style={ {color: state.dataConfirmedError ? \"red\" : ''}} \n    control={<Checkbox className={classes.formControl} style={ {color: state.dataConfirmedError ? \"red\" : ''}} \n     color=\"secondary\" name=\"emailConfirmCheckBox\" checked={state.dataConfirmed} onChange={dataConfirmedChanged} />}\n     label={<span style={{ fontSize: '0.9rem' , fontWeight:\"500\"}}>{`I confirm that the details in this form are correct, and I am happy for them to appear as written above on my results and certificate if ordered.`} </span>}\n     />\n</div> */}\n      </Grid>\n    </React.Fragment>\n  );\n}\n","import React, { useEffect } from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport GlobalState from './GlobalState';\n\nimport { FormControl, Grid, InputLabel, MenuItem, Select, TextField } from '@material-ui/core';\nconst useStyles = makeStyles((theme) => ({\n\n  pageTitle: {\n    color: theme.palette.primary.main,\n    marginBottom: \"15px\",\n  },\n\n}));\n\nexport default function ChooseCountryForm() {\n  const [state, setState] = React.useContext(GlobalState);\n  const classes = useStyles();\n\n  const [destinationTextError, setdestinationTextError] = React.useState(false)\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n    const isValid = validateForm()\n    setState(state => ({...state, showNext: isValid ? true : false}))\n\n  }, []);\n\n  useEffect(() => {\n    const isValid = validateForm()\n    setState(state => ({...state, showNext: isValid ? true : false}))\n  }, [state.destination, state.destinationText]);\n\n  const validateForm = () =>\n  {\n    let error = false\n\n    if (!state.destination || state.destination.trim().length < 1)\n    {\n      setState(state => ({...state, destinationTextError : true}));\n      error = true;\n    }\n    if (state.destination && state.destination === \"Other...\")\n    {\n      if (!state.destinationText || state.destinationText.trim().length < 3)\n      {\n        setState(state => ({...state, destinationTextError : true}));\n        error = true;  \n      }\n    }\n\n    return !error\n  }\n\n  const destinations = [\n    \"Bahrain\",\n    \"Barbados\",\n    \"Bermuda\",\n    \"Brunei\",\n    \"Cayman Islands\",\n    \"China\",\n    \"Dubai\",\n    \"Kuwait\",\n    \"Malaysia\",\n    \"Papua New Guinea\",\n    \"Saudi Arabia\",\n    \"South Africa\",\n    \"Other...\"\n  ]\n\n  return (\n    <React.Fragment>\n\n      <Typography variant=\"h6\" gutterBottom className={classes.pageTitle}>\n        Choose Your Destination\n      </Typography>\n\n\n      <Grid container direction=\"column\" alignItems=\"center\" justify=\"center\" spacing={2} style={{marginTop:\"30px\", marginBottom:\"20px\"}}>\n        <Grid item>\n          <div >\n            <FormControl required style={{ width: \"300px\" }} variant=\"outlined\" className={classes.formControl}>\n              <InputLabel id=\"demo-simple-select-outlined-label\">Select Destination</InputLabel>\n              <Select\n                labelId=\"demo-simple-select-outlined-label\"\n                id=\"demo-simple-select-outlined\"\n                value={state.destination}\n                onChange={(event) => setState(state => ({ ...state, destination: event.target.value }))}\n                label=\"Select Destination\"\n              >\n                {destinations.map(item => (\n                  <MenuItem value={item}>{item}</MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n          </div>\n\n        </Grid>\n\n        <Grid item>\n          {state.destination === \"Other...\" && (\n              <TextField\n                error={destinationTextError ? true : false}\n                style={{ width: \"300px\" }} \n                required\n                id=\"destinationText\"\n                label=\"Enter Your Destination\"\n                placeholder=\"Enter Your Destination\"\n                helperText=\"Please enter your destination country/city\"\n                fullWidth\n                autoComplete=\"none\"\n                value={state.destinationText}\n                onChange={(event) => setState(state => ({ ...state, destinationText: event.target.value }))}\n              />          \n          )}\n        </Grid>\n      </Grid>\n\n\n\n    </React.Fragment>\n  );\n}","export default __webpack_public_path__ + \"static/media/ok.c105a1fa.png\";","export default __webpack_public_path__ + \"static/media/error.8ab2c9d7.png\";","\n\nimport React, { useEffect } from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport GlobalState from './GlobalState';\nimport doneImage from './images/ok.png';\nimport errorImage from './images/error.png';\nimport * as dateformat from 'dateformat';\nimport Alert from '@material-ui/lab/Alert';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n\n    bold: {\n        fontWeight: \"800\",\n        padding: \"5px\"\n      },\n\n      doneImage: {\n        width: \"240px\",\n        height: \"150px\",\n        margin: \"20px\"\n      },\n\n      errorImage: {\n        width: \"200px\",\n        height: \"190px\",\n        margin: \"20px\"\n      },\n    \n\n\n}));\n\n\nexport default function ResultsForm() {\n  const [state, setState] = React.useContext(GlobalState);\n  const classes = useStyles();\n\n  useEffect(() => {\n    window.scrollTo(0, 0)\n\n    setState(state => ({...state, formDone : true}))\n\n\n  }, []);\n\n  const AllError = (results) =>\n  {\n      for (var i=0 ; i < results.length; i++)\n      {\n          if (results[i].data.status === 'OK')\n          {\n              return false;\n          }\n      }\n      return true;\n  }\n\n  return (\n    <React.Fragment>\n      {state.finalResults.length === 1 &&\n        state.finalResults[0].data.status === `OK` && (\n          <React.Fragment>\n            <img\n              className={classes.doneImage}\n              src={doneImage}\n              alt=\"Done image\"\n            />\n\n            <Typography variant=\"h5\" gutterBottom>\n              Thank You for Your Appoinment Request.\n            </Typography>\n            <br />\n            <Typography variant=\"subtitle1\">\n                Your booking number is{\" \"}\n              <span className={classes.bold}>{`\"${state.bookingRef}\"`}</span>.\n              <p style={{textAlign:\"justify\", fontWeight:\"500\"}}>\n              Thank you for requesting an appointment, due to the comprehensive nature of the medical, we need to arrange some of the services prior to confirmation. As such, the Date and Time you have selected is not yet confirmed, however we will make arrangements as close to your requested dates and times as possible, the vast majority of patients are seen at their selected time or with an hours flexibility. We will get back to you very soon via email or telephone to finalise your booking.\n              </p>\n            </Typography>\n          </React.Fragment>\n        )}\n\n      {state.finalResults.length === 1 &&\n        state.finalResults[0].data.status === `FAILED` && (\n          <React.Fragment>\n            <img\n              className={classes.errorImage}\n              src={errorImage}\n              alt=\"Error image\"\n            />\n\n            <Typography variant=\"h5\" gutterBottom>\n              Sorry, There is a Problem with your Booking.\n            </Typography>\n            <br />\n\n            {state.finalResults[0].data.error === \"FullTime\" && (\n              <Typography variant=\"subtitle1\">\n                Please check your system time, make sure your timezone is set to\n                Europe/London.\n              </Typography>\n            )}\n\n            {state.finalResults[0].data.error !== \"FullTime\" && (\n              <Typography variant=\"subtitle1\">\n                You have already booked for{\" \"}\n                {`'${dateformat(state.bookingDate, \"dddd, mmmm dS, yyyy\")}'`}.\n                Every person can only book for one appointment per day. If you\n                want to change your appointment time please follow the link we\n                have emailed you before.\n              </Typography>\n            )}\n          </React.Fragment>\n        )}\n\n      {state.finalResults.length > 1 && (\n        <React.Fragment>\n          {AllError(state.finalResults) && (\n            <React.Fragment>\n              <img\n                className={classes.errorImage}\n                src={errorImage}\n                alt=\"Error image\"\n              />\n\n              <Typography variant=\"h5\" gutterBottom>\n                Sorry, There is a Problem with your Booking.\n              </Typography>\n              <br />\n\n              {state.finalResults[0].data.error === \"FullTime\" && (\n                <Typography variant=\"subtitle1\">\n                  Please check your system time, make sure your timezone is set\n                  to Europe/London.\n                </Typography>\n              )}\n\n              {state.finalResults[0].data.error !== \"FullTime\" && (\n                <Typography variant=\"subtitle1\">\n                  You have already booked for{\" \"}\n                  {`'${dateformat(state.bookingDate, \"dddd, mmmm dS, yyyy\")}'`}.\n                  Every person can only book for one appointment per day. If you\n                  want to change your appointment time please follow the link we\n                  have emailed you before.\n                </Typography>\n              )}\n\n              \n            </React.Fragment>\n          )}\n\n          {!AllError(state.finalResults) && (\n            <React.Fragment>\n              <img\n                className={classes.doneImage}\n                src={doneImage}\n                alt=\"Done image\"\n              />\n\n              <Typography variant=\"h5\" gutterBottom>\n                Thank you for your Booking.\n              </Typography>\n              <br />\n              <Typography variant=\"subtitle1\">\n                Your booking number is{\" \"}\n                <span className={classes.bold}>{`\"${state.ref}\"`}</span> . We\n                have emailed your booking information, and will look forward to\n                meet you at the clinic.\n              </Typography>\n            </React.Fragment>\n          )}\n\n          {state.finalResults.map((item) => (\n            <React.Fragment>\n              {item.data.status === \"OK\" && (\n                <React.Fragment>\n                  <div style={{ marginTop: \"5px\", marginBottom: \"5px\" }}>\n                    <Alert severity=\"success\">\n                      {`${item.data.person.forename} ${item.data.person.surname} - Successfully Booked!`}\n                    </Alert>\n                  </div>\n                </React.Fragment>\n              )}\n\n              {item.data.status === \"FAILED\" && (\n                <React.Fragment>\n                  <div style={{ marginTop: \"5px\", marginBottom: \"5px\" }}>\n                    <Alert severity=\"error\">\n                      {`${item.data.person.forename} ${item.data.person.surname} - Booking Failed! ( has already booked for that day!)`}\n                    </Alert>\n                  </div>\n                </React.Fragment>\n              )}\n            </React.Fragment>\n          ))}\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n}","import API from './api';\n\nexport default class PaymentService {\n\n    static doPayment = (payload) =>\n    {\n       return API.post('/api/screening/payment/dopayment', payload);\n    }\n\n\n}","import \"./sqpaymentform.css\";\nimport React from \"react\";\nimport {\n  SquarePaymentForm,\n  CreditCardNumberInput,\n  CreditCardExpirationDateInput,\n  CreditCardPostalCodeInput,\n  CreditCardCVVInput,\n  CreditCardSubmitButton,\n} from \"react-square-payment-form\";\nimport { Grid } from \"@material-ui/core\";\nimport PaymentService from \"./services/PaymentService\";\n\n\nexport const SANDBOX = false\n\nconst LIVE_APPLICATION_ID = \"sq0idp-8-tRTRJuDMDeTBHxJq02xg\";  // Live\nconst LIVE_LOCATION_ID = \"L2SBNYPV0XWVJ\";                     //Live   \n\nconst SANDBOX_APPLICATION_ID = \"sandbox-sq0idb-HxCN0_lvfnlC15ZMFkUCdQ\";  //SANDBOX\nconst SANDBOX_LOCATION_ID = \"LBR8YPCPR878R\";                             // SANDBOX\n\n\n\n\nexport default class PaymentForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      personInfo: props.personInfo,\n      errorMessages: [],\n    };\n\n    this.cardNonceResponseReceived = this.cardNonceResponseReceived.bind(this);\n    this.createVerificationDetails = this.createVerificationDetails.bind(this);\n  }\n\n  cardNonceResponseReceived = async (\n    errors,\n    nonce,\n    cardData,\n    buyerVerificationToken\n  ) => {\n    if (errors) {\n      this.setState({ errorMessages: errors.map((error) => error.message) });\n      return;\n    }\n\n    this.setState({ errorMessages: [] });\n\n    try{\n        this.props.onStart()\n        const result = await PaymentService.doPayment({nonce: nonce, token: buyerVerificationToken, personInfo: this.state.personInfo})\n        console.log(result)\n        this.props.onComplete(result)\n    }\n    catch(ex)\n    {\n        console.error(ex)\n        this.props.onError(ex)\n    }\n  };\n\n  createVerificationDetails() {\n    return {\n      amount: \"100.00\",\n      currencyCode: \"GBP\",\n      intent: \"CHARGE\",\n      billingContact: {\n        name: this.state.personInfo.fullname,\n        email: this.state.personInfo.email,\n        phone:  this.state.personInfo.phone,\n      },\n    };\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <Grid container justify=\"center\" alignItems=\"center\">\n          <Grid item>\n            <SquarePaymentForm\n              sandbox={SANDBOX}\n              applicationId={SANDBOX ? SANDBOX_APPLICATION_ID : LIVE_APPLICATION_ID}\n              locationId={SANDBOX ? SANDBOX_LOCATION_ID : LIVE_LOCATION_ID}\n              cardNonceResponseReceived={this.cardNonceResponseReceived}\n              createVerificationDetails={this.createVerificationDetails}\n            >\n              <fieldset className=\"sq-fieldset\">\n\n                <CreditCardNumberInput/>\n             \n\n                <div className=\"sq-form-third\">\n                  <CreditCardExpirationDateInput />\n                </div>\n\n                {/* <div className=\"sq-form-third\">\n                  <CreditCardPostalCodeInput />\n                </div> */}\n\n                <div className=\"sq-form-third\">\n                  <CreditCardCVVInput />\n                </div>\n              </fieldset>\n\n              <CreditCardSubmitButton>Pay £100.00</CreditCardSubmitButton>\n\n            </SquarePaymentForm>\n          </Grid>\n        </Grid>\n\n        <div className=\"sq-error-message\">\n          {this.state.errorMessages.map((errorMessage) => (\n            <li key={`sq-error-${errorMessage}`}>{errorMessage}</li>\n          ))}\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n","import React, { useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport GlobalState from \"./GlobalState\";\nimport PaymentForm, { SANDBOX } from \"./PaymentForm\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport dateformat from \"dateformat\";\nimport { Backdrop } from \"@material-ui/core\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport BookService from \"./services/BookService\";\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    textAlign: \"justify\",\n  },\n\n  FormTitle: {\n    marginTop: \"20px\",\n    marginBottom: \"20px\",\n  },\n\n  pageTitle: {\n    color: theme.palette.primary.main,\n    marginBottom: \"15px\",\n  },\n\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: \"#fff\",\n  },\n\n  boxTitle: {\n    position: \"absolute\",\n    backgroundColor: \"#fff\",\n    padding: \"10px\",\n    top: -20,\n    left: 10,\n    color: theme.palette.primary.main,\n    fontWeight: \"500\",\n  },\n\n  boxTime: {\n    backgroundColor: \"#fff\",\n    border: `1px solid #ddd`,\n    borderRadius: \"5px\",\n    color: \"#333\",\n    padding: \"30px 30px 0px 20px\",\n    textAlign: \"left\",\n    marginTop: \"20px\",\n    position: \"relative\",\n  },\n}));\n\nexport default function PayForm() {\n  const classes = useStyles();\n  const [state, setState] = React.useContext(GlobalState);\n\n  const [loaded, setLoaded] = React.useState(false);\n  const [personInfo, setPersonInfo] = React.useState(null);\n  const [submiting, setSubmitting] = React.useState(false);\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n\n\n    let sqPaymentScript = document.createElement(\"script\");\n    sqPaymentScript.src = SANDBOX ? \"https://js.squareupsandbox.com/v2/paymentform\" : \"https://js.squareup.com/v2/paymentform\";\n    sqPaymentScript.type = \"text/javascript\";\n    sqPaymentScript.async = false;\n    sqPaymentScript.onload = () => {\n       setLoaded(true);\n    };\n    document.getElementsByTagName(\"head\")[0].appendChild(sqPaymentScript);\n\n    loadPersonInfo();\n\n    setState(state => ({...state, showNext : false}))\n\n    return () => {\n      setState(state => ({...state, showNext : true}))\n    }\n\n\n    \n\n  }, []);\n\n  const loadPersonInfo = async () => {\n    let referrer = window.location.pathname;\n    if (referrer && referrer.startsWith(\"/id\")) {\n      referrer = \"/\";\n    }\n\n    const _personInfo = {\n      fullname: state.fullname,\n      email: state.email,\n      phone: state.phone,\n      notes: state.notes,\n      service: getPackageName(),\n      birthDate: state.birthDate,\n      bookingDate: dateformat(\n        new Date(state.bookingDate.toUTCString().slice(0, -4)),\n        \"yyyy-mm-dd\"\n      ),\n      bookingTime: state.bookingTime,\n      bookingRef: state.bookingRef,\n      referrer: referrer,\n    };\n\n    setPersonInfo(_personInfo);\n  };\n\n  const getPackageName = () => {\n\n    if (state.cat.key === \"visa\")\n    {\n      let destination = state.destination\n      if (destination === \"Other...\")\n      {\n        destination = state.destinationText\n      }\n      return `${state.cat.text.toUpperCase()} ${` ( ${destination.toUpperCase()} )`}`\n    }else\n    {\n      return `${state.cat.text.toUpperCase()} ${state.package ? ` / ${state.package.text.toUpperCase()}` : ''}`\n    }\n  }\n\n  const onComplete = (res) => {\n    setState((state) => ({ ...state, finalResults: [res] }));\n    setState((state) => ({ ...state, activeStep: state.activeStep + 1 }));\n    setSubmitting(false);\n  };\n\n  const onError = (err) => {\n    console.log(err);\n    setSubmitting(false);\n  };\n\n  const onStart = () => {\n    setSubmitting(true);\n  };\n\n  return (\n    <React.Fragment>\n      <Typography\n        className={classes.pageTitle}\n        variant=\"h6\"\n        gutterBottom\n        style={{ marginBottom: \"30px\" }}\n      >\n        Pay Deposit\n      </Typography>\n\n      {(!loaded || !personInfo) && (\n        <React.Fragment>\n          {\" \"}\n          <CircularProgress color=\"primary\" />\n        </React.Fragment>\n      )}\n\n      {personInfo && (\n        <div hidden={!loaded}>\n\n          <div>\n\n            <Alert severity=\"info\" style={{marginBottom:\"15px\", fontSize:\"0.95rem\" ,lineHeight:\"1.5rem\", textAlign:\"justify\"}}>\n            This is the deposit to secure your appointment, you can cancel anytime up-to 48 hours of your appointment.\n\n            </Alert>\n\n          </div>\n\n          <div className={classes.boxTime}>\n          <div className={classes.boxTitle}>Card Info</div>\n            <PaymentForm\n              personInfo={personInfo}\n              onStart={onStart}\n              onComplete={onComplete}\n              onError={onError}\n            />\n          </div>\n\n        \n        </div>\n      )}\n\n      <Backdrop className={classes.backdrop} open={submiting}>\n        <Grid\n          container\n          direction=\"column\"\n          justify=\"center\"\n          alignItems=\"center\"\n          spacing={2}\n        >\n          <Grid item>\n            <CircularProgress color=\"inherit\" />\n          </Grid>\n          <Grid item>\n            <span style={{ textAlign: \"center\", color: \"#fff\" }}>\n              {\" \"}\n              Please wait ...{\" \"}\n            </span>\n          </Grid>\n        </Grid>\n      </Backdrop>\n    </React.Fragment>\n  );\n}\n","import React, { useEffect } from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport GlobalState from './GlobalState';\n\nimport { Backdrop, CircularProgress, Grid } from '@material-ui/core';\nimport CategoriesForm from './CategoriesForm';\nimport HealthGenderForm from './HealthGenderFrom';\n\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport Divider from '@material-ui/core/Divider'\nimport ScreenPackagesForm from './ScreenPackagesForm';\nimport DateForm from './DateForm';\nimport TimeForm from './TimeForm';\nimport InformationForm from './InformationForm';\nimport ReviewForm from './ReviewForm';\nimport ChooseCountryForm from './ChooseCountryForm';\nimport BookService from './services/BookService';\nimport dateformat from 'dateformat';\nimport ResultsForm from './ResultsForm';\nimport PayForm from './PayForm';\n\n\nconst useStyles = makeStyles((theme) => ({\n\n  submitButton: {\n    backgroundColor: \"#d43500\",\n    transition : \"all 0.3s ease\",\n    minWidth: \"100px\",\n    \"&:hover\" : {\n      backgroundColor: \"#ed3b00\",\n    }\n  },\n\n  backdrop: {\n    zIndex: 999,\n    color: '#fff',\n  },\n\n}));\n\nexport default function SmartEntryForm() {\n  const [state, setState] = React.useContext(GlobalState);\n  const classes = useStyles();\n\n  const [submiting, setSubmiting] = React.useState(false);\n\n\n  useEffect(() => {\n    window.scrollTo(0, 0)\n  }, []);\n\n  const getPackageName = () => {\n\n    if (state.cat.key === \"visa\")\n    {\n      let destination = state.destination\n      if (destination === \"Other...\")\n      {\n        destination = state.destinationText\n      }\n      return `${state.cat.text.toUpperCase()} ${` ( ${destination.toUpperCase()} )`}`\n    }else\n    {\n      return `${state.cat.text.toUpperCase()} ${state.package ? ` / ${state.package.text.toUpperCase()}` : ''}`\n    }\n  }\n\n\n  const submitForm = () => {\n    var promiseArray = [];\n\n    setSubmiting(true)\n\n    BookService.getNewReference().then( (res) => {\n\n      const ref = res.data.ref;\n\n      setState(state => ({...state, ref: ref}));\n\n      let referrer = '/'\n\n      const personInfo = {\n        fullname: state.fullname,\n        email: state.email,\n        phone: state.phone,\n        notes: state.notes,\n        service: getPackageName(),\n        birthDate: state.birthDate\n      };\n  \n      const promise = BookService.bookAppointment({...personInfo, bookingDate:  dateformat(new Date(state.bookingDate.toUTCString().slice(0, -4)),'yyyy-mm-dd'), bookingTime: state.bookingTime, bookingRef: ref, referrer: referrer });\n      promiseArray.push(promise);\n  \n      \n      Promise.all(promiseArray).then( (values) => {\n\n        setState(state => ({...state, finalResults: values, activeStep : state.activeStep + 1, formDone: true}));\n\n        setSubmiting(false);\n  \n      }).catch( (errs) =>\n      {\n        console.log(`Error :  ${errs}`);\n        setSubmiting(false);\n      });\n\n    }).catch( (err) =>\n    {\n      console.log(`Cannot Get REF NO. : ${err}`);\n      setSubmiting(false);\n    });;\n\n  }\n\n\n  const getComponentFromState = (_state) => {\n\n    if (!_state.cat || _state.activeStep === 0) {\n      return <CategoriesForm />\n    }\n    else if (_state.cat.key === \"health\") {\n      if (_state.activeStep === 1) {\n        return <HealthGenderForm />\n      } else if (_state.activeStep === 2) {\n        return <ScreenPackagesForm />\n      }else if (_state.activeStep === 3) {\n        return <DateForm/>\n      }else if (_state.activeStep === 4) {\n        return <TimeForm/>\n      }\n      else if (_state.activeStep === 5) {\n        return <InformationForm/>\n      }\n      else if (_state.activeStep === 6) {\n        return <ReviewForm/>\n      }\n      else if (_state.activeStep === 7) {\n        return <PayForm/>\n      }\n      else if (_state.activeStep === 8) {\n        return <ResultsForm/>\n      }\n\n    } else if (_state.cat.key === \"allergy\") {\n      if (_state.activeStep === 1) {\n        return <ScreenPackagesForm />\n      }else if (_state.activeStep === 2) {\n        return <DateForm/>\n      }else if (_state.activeStep === 3) {\n        return <TimeForm/>\n      }\n      else if (_state.activeStep === 4) {\n        return <InformationForm/>\n      }\n      else if (_state.activeStep === 5) {\n        return <ReviewForm/>\n      }\n      else if (_state.activeStep === 6) {\n        return <PayForm/>\n      }\n      else if (_state.activeStep === 7) {\n        return <ResultsForm/>\n      }\n    }else if (_state.cat.key === \"visa\") {\n      if (_state.activeStep === 1) {\n        return <ChooseCountryForm />\n      }else if (_state.activeStep === 2) {\n        return <DateForm/>\n      }else if (_state.activeStep === 3) {\n        return <TimeForm/>\n      }\n      else if (_state.activeStep === 4) {\n        return <InformationForm/>\n      }\n      else if (_state.activeStep === 5) {\n        return <ReviewForm/>\n      }\n      else if (_state.activeStep === 6) {\n        return <PayForm/>\n      }\n\n      else if (_state.activeStep === 7) {\n        return <ResultsForm/>\n      }\n    }    \n    else {\n      if (_state.activeStep === 1) {\n        return <DateForm/>\n      }else if (_state.activeStep === 2) {\n        return <TimeForm/>\n      }\n      else if (_state.activeStep === 3) {\n        return <InformationForm/>\n      }\n      else if (_state.activeStep === 4) {\n        return <ReviewForm/>\n      }\n      else if (_state.activeStep === 5) {\n        return <PayForm/>\n      }\n\n      else if (_state.activeStep === 6) {\n        return <ResultsForm/>\n      }\n    }\n\n    return null\n  }\n\n  return (\n    <React.Fragment>\n      \n      <Backdrop className={classes.backdrop} open={submiting} >\n        <CircularProgress color=\"inherit\" />\n      </Backdrop>\n\n      {getComponentFromState(state)}\n      {state.activeStep > 0 && !state.formDone && (\n        <div style={{ marginTop: \"10px\" }}>\n          <Divider />\n          <Grid container direction=\"row\" justify=\"space-between\" alignItems=\"center\" style={{ width: \"100%\", paddingTop: \"10px\" }}>\n            <Grid item>\n              {state.activeStep > state.minActiveStep && (\n                <Button startIcon={<NavigateBeforeIcon />} variant=\"contained\" color=\"primary\" onClick={() => setState(state => ({ ...state, activeStep: state.activeStep - 1 }))}>\n                   {`Back`}\n                </Button>\n              ) }\n            </Grid>\n\n            <Grid item>\n              {state.showNext && !state.lastStep && !state.formDone &&  (\n                  <Button endIcon={<NavigateNextIcon />} variant=\"contained\" color=\"primary\" onClick={() => setState(state => ({ ...state, activeStep: state.activeStep + 1 }))}>\n                      {`Next`}\n                  </Button>\n              )}\n\n              {state.showNext && state.lastStep && !state.formDone && (\n                  <Button className={classes.submitButton} variant=\"contained\" color=\"primary\" onClick={() => setState(state => ({ ...state, activeStep: state.activeStep + 1 }))}>\n                      {`Proceed To Payment`}\n                  </Button>\n              )}\n\n            </Grid>\n\n          </Grid>\n\n\n\n        </div>\n\n      )}\n    </React.Fragment>\n  );\n}","import React, { useEffect } from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport GlobalState from './GlobalState';\n\nimport { Grid } from '@material-ui/core';\n\nimport {categoriesWalkin as categories} from './ScreeningPackageLoader'\n\nconst useStyles = makeStyles((theme) => ({\n\n  catBox: {\n    textAlign: \"center\",\n    width: \"100%\",\n    fontSize: \"0.9rem\",\n    fontWeight:\"600\",\n    padding: \"5px\",\n    border: \"1px solid #eee\",\n    height: \"120px\",\n    borderRadius: \"8px\",\n    cursor: \"pointer\",\n    color: \"#333\",\n    background: \"linear-gradient(90deg, rgba(214,214,214,1) 30%, rgba(222,222,222,1) 74%, rgba(222,222,222,1) 100%)\",\n    // transition : \"all 0.3s ease-in\",\n    \"&:hover\" : {\n      background: \"linear-gradient(90deg, rgba(179,68,1,1) 30%, rgba(232,82,25,1) 74%, rgba(231,109,62,1) 100%)\",\n      color : \"#fff\",\n      // transition : \"all 0.1s ease-in\",\n    }\n  },\n\n  catBoxSelected: {\n    textAlign: \"center\",\n    width: \"100%\",\n    fontSize: \"1rem\",\n    fontWeight:\"600\",\n    padding: \"10px\",\n    border: \"1px solid #eee\",\n    height: \"120px\",\n    borderRadius: \"8px\",\n    cursor: \"pointer\",\n    color: \"#fff\",\n    background: \"linear-gradient(90deg, rgba(179,68,1,1) 30%, rgba(232,82,25,1) 74%, rgba(231,109,62,1) 100%)\",\n  }\n\n\n}));\n\nexport default function CategoriesFormWalkin() {\n  const [state, setState] = React.useContext(GlobalState);\n  const classes = useStyles();\n\n\n  useEffect(() => {\n    window.scrollTo(0, 0)\n  }, []);\n\n  useEffect(() => {\n    setState(state => ({...state, package: null}))\n  }, [state.cat]);\n\n  const catClicked = (key, text) => {\n    setState(state => ({...state, cat: {key: key, text: text}, activeStep: state.activeStep + 1}))\n  }\n\n  return (\n    <React.Fragment>\n      <Grid container spacing={1} alignItems=\"center\" justify=\"start\">\n        {\n          categories.map(item => (\n            <Grid item xs={6} sm={3}  >\n              <a href={item.link} style={{textDecoration: \"none\"}}>\n              <div style={item.small ? {height: \"70px\"} : {}} className={state.cat?.key === item.key ? classes.catBoxSelected  : classes.catBox} onClick={() => catClicked(item.key, item.text)}>\n                <Grid container alignItems=\"center\" justify=\"center\" style={{height:\"100%\", width:\"100%\"}}>\n                  <Grid item>\n                      {item.text}\n                  </Grid>\n                 </Grid> \n              </div>\n              </a>\n            </Grid>\n          ))\n        }\n      </Grid>\n    </React.Fragment>\n  );\n}","import React, { useEffect } from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport GlobalState from './GlobalState';\n\nimport { Grid } from '@material-ui/core';\n\nimport {categoriesAppointment as categories} from './ScreeningPackageLoader'\n\nconst useStyles = makeStyles((theme) => ({\n\n  catBox: {\n    textAlign: \"center\",\n    width: \"100%\",\n    fontSize: \"0.9rem\",\n    fontWeight:\"600\",\n    padding: \"5px\",\n    border: \"1px solid #eee\",\n    height: \"120px\",\n    borderRadius: \"8px\",\n    cursor: \"pointer\",\n    color: \"#333\",\n    background: \"linear-gradient(90deg, rgba(214,214,214,1) 30%, rgba(222,222,222,1) 74%, rgba(222,222,222,1) 100%)\",\n    // transition : \"all 0.3s ease-in\",\n    \"&:hover\" : {\n      background: \"linear-gradient(90deg, rgba(179,68,1,1) 30%, rgba(232,82,25,1) 74%, rgba(231,109,62,1) 100%)\",\n      color : \"#fff\",\n      // transition : \"all 0.1s ease-in\",\n    }\n  },\n\n  catBoxSelected: {\n    textAlign: \"center\",\n    width: \"100%\",\n    fontSize: \"1rem\",\n    fontWeight:\"600\",\n    padding: \"10px\",\n    border: \"1px solid #eee\",\n    height: \"120px\",\n    borderRadius: \"8px\",\n    cursor: \"pointer\",\n    color: \"#fff\",\n    background: \"linear-gradient(90deg, rgba(179,68,1,1) 30%, rgba(232,82,25,1) 74%, rgba(231,109,62,1) 100%)\",\n  }\n\n\n}));\n\nexport default function CategoriesFormAppointment() {\n  const [state, setState] = React.useContext(GlobalState);\n  const classes = useStyles();\n\n\n  useEffect(() => {\n    window.scrollTo(0, 0)\n  }, []);\n\n  useEffect(() => {\n    setState(state => ({...state, package: null}))\n  }, [state.cat]);\n\n  const catClicked = (key, text) => {\n    setState(state => ({...state, cat: {key: key, text: text}, activeStep: state.activeStep + 1}))\n  }\n\n  return (\n    <React.Fragment>\n      <Grid container spacing={1} alignItems=\"center\" justify=\"start\">\n        {\n          categories.map(item => (\n            <Grid item xs={6} sm={3}  >\n              <a href={item.link} style={{textDecoration: \"none\"}}>\n              <div style={item.small ? {height: \"70px\"} : {}} className={state.cat?.key === item.key ? classes.catBoxSelected  : classes.catBox} onClick={() => catClicked(item.key, item.text)}>\n                <Grid container alignItems=\"center\" justify=\"center\" style={{height:\"100%\", width:\"100%\"}}>\n                  <Grid item>\n                      {item.text}\n                  </Grid>\n                 </Grid> \n              </div>\n              </a>\n            </Grid>\n          ))\n        }\n      </Grid>\n    </React.Fragment>\n  );\n}","import React, { useEffect } from \"react\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Button from \"@material-ui/core/Button\";\nimport Link from \"@material-ui/core/Link\";\nimport Typography from \"@material-ui/core/Typography\";\nimport GlobalState from \"./GlobalState\";\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\n\nimport HttpsIcon from \"@material-ui/icons/Https\";\n\nimport { BrowserView, MobileView, isMobile } from \"react-device-detect\";\n\nimport AirplanemodeActiveIcon from \"@material-ui/icons/AirplanemodeActive\";\nimport { Grid } from \"@material-ui/core\";\n\nimport logoImage from \"./images/logo.png\";\nimport doctorImage from \"./images/doctor.png\";\n\nimport LiveHelpIcon from \"@material-ui/icons/LiveHelp\";\nimport faq from \"./FAQ\";\nimport SmartEntryForm from \"./SmartEntryForm\";\nimport CategoriesFormWalkin from \"./CategoriesFormWalkin\";\nimport CategoriesFormAppointment from \"./CategoriesFormAppointment\";\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {\"Copyright © \"}\n      {new Date().getFullYear()}{\" \"}\n      <Link color=\"inherit\" href=\"#\">\n        <strong> Medical Express Clinic </strong>\n      </Link>\n      {isMobile ? \" \" : \" All rights reserved.\"}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    position: \"relative\",\n    backgroundColor: \"#f68529\",\n    color: \"#fff\",\n    alignItems: \"center\",\n  },\n\n  logo: {\n    maxWidth: 160,\n  },\n  layout: {\n    width: \"auto\",\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\n      width: 700,\n      marginLeft: \"auto\",\n      marginRight: \"auto\",\n    },\n  },\n  paper: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(3),\n    padding: theme.spacing(1),\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n      marginTop: theme.spacing(2),\n      marginBottom: theme.spacing(2),\n      padding: theme.spacing(2),\n    },\n  },\n  stepper: {\n    padding: theme.spacing(3, 0, 5),\n  },\n  buttons: {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n  },\n  button: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(1),\n  },\n\n  bold: {\n    fontWeight: \"800\",\n    padding: \"5px\",\n  },\n\n  doneImage: {\n    width: \"240px\",\n    height: \"150px\",\n    margin: \"20px\",\n  },\n\n  logoImage: {\n    width: \"40px\",\n    height: \"40px\",\n    marginLeft: \"0px\",\n  },\n\n  doctorImage: {\n    width: \"40px\",\n    height: \"40px\",\n    marginRight: \"10px\",\n  },\n\n  privacyButton: {\n    marginBottom: \"20px\",\n    width: \"115px\",\n  },\n\n  faqButton: {\n    marginBottom: \"20px\",\n    marginLeft: \"10px\",\n    // backgroundColor : \"#2f942e\",\n    // \"&:hover\": {\n    //   background: \"green\",\n    //   color: \"#fff\"\n    // },\n    textDecoration: \"none !important\",\n    width: \"115px\",\n  },\n\n  textContent: {\n    color: \"#666f77\",\n    fontSize: \"1.1rem\",\n    textAlign: \"left\",\n    paddingLeft: \"30px\",\n    paddingRight: \"30px\",\n    lineHeight: \"2.2em\",\n    fontWeight: \"400\",\n  },\n\n  textContentMobile: {\n    color: \"#666f77\",\n    fontSize: \"0.9rem\",\n    textAlign: \"left\",\n    paddingLeft: \"30px\",\n    paddingRight: \"30px\",\n    lineHeight: \"2.2em\",\n    fontWeight: \"400\",\n  },\n\n  getStartedButton: {\n    marginTop: \"10px\",\n    marginBottom: \"10px\",\n  },\n\n  AirIcon: {\n    marginRight: \"10px\",\n    fontSize: \"32px\",\n  },\n\n  pageTitle: {\n    color: theme.palette.primary.main,\n    marginTop: \"10px\",\n  },\n\n  Treatment: {\n    paddingTop: \"20px\",\n    fontSize: \"1.5rem\",\n    fontWeight: \"500\",\n    color: \"#555\",\n  },\n\n  BookNow: {\n    paddingBottom: \"10px\",\n    paddingTop: \"0px\",\n    fontSize: \"1.2rem\",\n    fontWeight: \"600\",\n    color: \"#ed5f00\",\n  },\n\n  BookNowAfter: {\n    paddingTop: \"8px\",\n    fontSize: \"1rem\",\n    fontWeight: \"600\",\n    color: \"#9e3302\",\n  },\n\n  ByAppointment: {\n    paddingBottom: \"10px\",\n    paddingTop: \"0px\",\n    fontSize: \"1.2rem\",\n    fontWeight: \"600\",\n    color: \"#ed5f00\",\n  },\n}));\n\nexport default function WelcomeForm() {\n  const [state, setState] = React.useContext(GlobalState);\n  const classes = useStyles();\n\n  //// ** Dialog\n\n  const [open, setOpen] = React.useState(false);\n  const [scroll, setScroll] = React.useState(\"paper\");\n\n  const [openFAQ, setOpenFAQ] = React.useState(false);\n  const [scrollFAQ, setScrollFAQ] = React.useState(\"paper\");\n\n  const descriptionElementRef = React.useRef(null);\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, []);\n\n  React.useEffect(() => {\n    if (open) {\n      const { current: descriptionElement } = descriptionElementRef;\n      if (descriptionElement !== null) {\n        descriptionElement.focus();\n      }\n    }\n  }, [open]);\n\n  const descriptionElementRefFAQ = React.useRef(null);\n  React.useEffect(() => {\n    if (openFAQ) {\n      const { current: descriptionElementFAQ } = descriptionElementRefFAQ;\n      if (descriptionElementFAQ !== null) {\n        descriptionElementFAQ.focus();\n      }\n    }\n  }, [openFAQ]);\n\n  const handleClickOpen = (scrollType) => () => {\n    setOpen(true);\n    setScroll(scrollType);\n  };\n\n  const handleClickOpenFAQ = (scrollType) => () => {\n    setOpenFAQ(true);\n    setScrollFAQ(scrollType);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleCloseFAQ = () => {\n    setOpenFAQ(false);\n  };\n\n  const getStartedClicked = (event) => {\n    setState((state) => ({ ...state, getStarted: true }));\n  };\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <AppBar position=\"absolute\" color=\"default\" className={classes.appBar}>\n        <Toolbar>\n          <Grid\n            container\n            direction=\"row\"\n            spacing={1}\n            justify=\"center\"\n            alignItems=\"center\"\n          >\n            <Grid item>\n              <Typography\n                style={{ fontWeight: \"500\" }}\n                variant=\"h5\"\n                color=\"inherit\"\n                noWrap\n              >\n                Book Appointment Online\n              </Typography>\n            </Grid>\n          </Grid>\n        </Toolbar>\n      </AppBar>\n\n      <div className={classes.Treatment}>Medical Express Clinic Treatments</div>\n\n      {/* <div className={classes.BookNowAfter}>Private consultation, sexual health, self request, weight loss</div> */}\n\n      <main className={classes.layout}>\n        <Paper className={classes.paper}>\n          <div className={classes.BookNow}>Book now or Walk in</div>\n\n          <CategoriesFormWalkin />\n        </Paper>\n\n        <Paper className={classes.paper}>\n          <div className={classes.ByAppointment}>\n            By appointment only\n          </div>\n\n          <CategoriesFormAppointment />\n        </Paper>\n\n        <Copyright />\n      </main>\n    </React.Fragment>\n  );\n}\n","import './App.css';\nimport GlobalState from './GlobalState'; \nimport React, { useEffect } from 'react';\nimport theme from \"./theme\";\nimport { MuiThemeProvider, CssBaseline } from \"@material-ui/core\";\nimport CategoriesForm from './CategoriesForm';\nimport WelcomeForm from './WelcomeForm';\n\n\n\nfunction App() {\n  const [state, setState] = React.useState({activeStep : 0});\n\n\n  return (\n    <GlobalState.Provider value={[state, setState]}>\n            <MuiThemeProvider theme={theme}>\n        <CssBaseline />\n\n      <div className=\"App\">\n\n       {/* {state.urlRead && <WelcomeForm />}   */}\n       <WelcomeForm/>\n       \n      </div>\n      </MuiThemeProvider>\n    </GlobalState.Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n","\n\n\nconst FormatDateFromString = (str) =>\n{\n    return `${str.substr(8,2)}/${str.substr(5,2)}/${str.substr(0,4)}`;\n}\n\n\n\n\n\n\n\nmodule.exports = {\n    FormatDateFromString : FormatDateFromString,\n}"],"sourceRoot":""}